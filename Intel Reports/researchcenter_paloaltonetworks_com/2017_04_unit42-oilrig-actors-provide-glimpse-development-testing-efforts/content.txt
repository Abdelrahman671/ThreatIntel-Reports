<!doctype html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="profile" href="https://gmpg.org/xfn/11">
    <link rel="preconnect" href="https://www.paloaltonetworks.com">
    <link rel="preconnect" href="https://cdn.cookielaw.org">
    <link rel="preconnect" href="https://fonts.googleapis.com">
	    <!--  Start: Scripts Migrated From Unit42-v5 -->
<script type="text/javascript">
var main_site_url = 'https://www.paloaltonetworks.com';
var maindomain_lang = 'https://www.paloaltonetworks.com';
function getParameterByName(name, url) {
		if(url == null){
		  url = window.location.href;
		}
	    name = name.replace(/[\[\]]/g, '\\$&');
	    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
		results = regex.exec(url);
	    if (!results) return null;
	    if (!results[2]) return '';
	    return decodeURIComponent(results[2].replace(/\+/g, ' '));
	}
	var container_q = getParameterByName('container');
	var d_lang = 'en';	
	if(container_q != '' && container_q != null){	    
	    sessionStorage.setItem('container',container_q);
	    	    location.href = 'https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts';
	}
</script>

<link rel="preload" href="https://www.paloaltonetworks.com/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/criticalTop.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="https://www.paloaltonetworks.com/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/criticalTop.min.css"></noscript>
<link rel="preload" href="https://www.paloaltonetworks.com/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/criticalTopProductNav.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="https://www.paloaltonetworks.com/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/criticalTopProductNav.min.css"></noscript>
<link rel="preload" href="https://www.paloaltonetworks.com/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/deferedProductNav.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="https://www.paloaltonetworks.com/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/deferedProductNav.min.css"></noscript>
  <meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />
<link rel="alternate" hreflang="en" href="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/" />
<link rel="alternate" hreflang="ja" href="https://unit42.paloaltonetworks.jp/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/" />
<link rel="alternate" hreflang="x-default" href="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/" />

	<!-- This site is optimized with the Yoast SEO Premium plugin v23.1 (Yoast SEO v23.1) - https://yoast.com/wordpress/plugins/seo/ -->
	<title>OilRig Actors Provide a Glimpse into Development and Testing Efforts</title>
	<meta name="description" content="Unit 42 researches the techniques used by attackers to avoid antivirus detection and successfully deliver OilRig campaign attacks." />
	<link rel="canonical" href="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/" />
	<meta property="og:locale" content="en_US" />
	<meta property="og:type" content="article" />
	<meta property="og:title" content="OilRig Actors Provide a Glimpse into Development and Testing Efforts" />
	<meta property="og:description" content="Unit 42 researches the techniques used by attackers to avoid antivirus detection and successfully deliver OilRig campaign attacks." />
	<meta property="og:url" content="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/" />
	<meta property="og:site_name" content="Unit 42" />
	<meta property="article:published_time" content="2017-04-27T10:00:32+00:00" />
	<meta property="article:modified_time" content="2018-11-01T10:24:45+00:00" />
	<meta property="og:image" content="https://unit42.paloaltonetworks.com/wp-content/uploads/2016/09/unit42-web-banner-650x300.jpg" />
	<meta property="og:image:width" content="650" />
	<meta property="og:image:height" content="300" />
	<meta property="og:image:type" content="image/jpeg" />
	<meta name="author" content="Robert Falcone" />
	<meta name="twitter:card" content="summary_large_image" />
	<!-- / Yoast SEO Premium plugin. -->


<link rel="alternate" type="application/rss+xml" title="Unit 42 &raquo; Feed" href="https://unit42.paloaltonetworks.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Unit 42 &raquo; Comments Feed" href="https://unit42.paloaltonetworks.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Unit 42 &raquo; OilRig Actors Provide a Glimpse into Development and Testing Efforts Comments Feed" href="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/feed/" />
<script type="text/javascript">
var globalConfig = {};
var webData = {};
webData.channel = "unit42";
webData.property = "unit42.paloaltonetworks.com";
webData.language = "en_us";
webData.pageType = "blogs";
webData.pageName = "unit42:unit42-oilrig-actors-provide-glimpse-development-testing-efforts";
webData.pageURL = "https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts";
webData.article_title = "OilRig Actors Provide a Glimpse into Development and Testing Efforts";
webData.author = "Robert Falcone";
webData.published_time = "2017-04-27T13:00:32-07:00";
webData.description = "";
webData.keywords = "Malware,Threat Research,Clayside,Helminth,OilRig,OilRig attacks";
webData.resourceAssetID = "af313102630eac5cda88e636c259f19a";
</script>
<script type="text/javascript">
var globalConfig = {};
globalConfig.buildName = "UniqueResourceAssetsID_DEC022022";
</script>
<meta property="og:likes" content="0"/>
<meta property="og:readtime" content="18"/>
<meta property="og:views" content="54,790"/>
<meta property="og:date_created" content="April 27, 2017 at 1:00 PM"/>
<meta property="og:post_length" content="4496"/>
<meta property="og:category" content="Malware"/>
<meta property="og:category" content="Threat Research"/>
<meta property="og:category_link" content="https://unit42.paloaltonetworks.com/category/malware/"/>
<meta property="og:category_link" content="https://unit42.paloaltonetworks.com/category/threat-research/"/>
<meta property="og:author" content="Robert Falcone"/>
<meta property="og:authorlink" content="https://unit42.paloaltonetworks.com/author/robertfalcone/"/>
<meta property="og:author_image_link" content="https://unit42.paloaltonetworks.com/wp-content/uploads/2018/11/unit-news-meta.svg"/>
<meta name="post_tags" content="Clayside,Helminth,OilRig,OilRig attacks"/>
<script type="application/ld+json">{"@context":"https:\/\/schema.org","@type":"BlogPosting","headline":"OilRig Actors Provide a Glimpse into Development and Testing Efforts","name":"OilRig Actors Provide a Glimpse into Development and Testing Efforts","description":"Unit 42 researches the techniques used by attackers to avoid antivirus detection and successfully deliver OilRig campaign attacks.  ","url":"https:\/\/unit42.paloaltonetworks.com\/unit42-oilrig-actors-provide-glimpse-development-testing-efforts\/","mainEntityOfPage":"https:\/\/unit42.paloaltonetworks.com\/unit42-oilrig-actors-provide-glimpse-development-testing-efforts\/","datePublished":"April 27, 2017","articleBody":"Throughout an attack campaign, actors will continue to develop their tools in an attempt to remain undetected and to carry out multiple attacks without having to completely retool. In regard to the attack lifecycle, development of tools occurs in the weaponization\/staging phase that precedes the delivery phase, of which is typically the first opportunity we see the actors\u2019 activities as they interact directly with their target. We have been presented with a rare opportunity to see some development activities from the actors associated with the OilRig attack campaign, a campaign Unit 42 has been following since May 2016. Recently we were able to observe these actors making modifications to their ClaySlide delivery documents in an attempt to evade antivirus detection.\n\nWe have identified two separate testing efforts carried out by the OilRig actors, one occurring in June and one in November of 2016. The sample set associated with each of these testing activities is rather small, but the changes made to each of the files give us a chance to understand what modifications the actor performs in an attempt to evade detection. This testing activity also suggests that the threat group responsible for the OilRig attack campaign have an organized, professional operations model that includes a testing component to the development of their tools.\nTesting Activity, Analysis, and Methodology\nWe collected two sets of ClaySlide samples that appear to be created during the OilRig actor\u2019s development phase of their attack lifecycle. The threat actor uploaded each of these files to a popular antivirus testing website to find out which vendors detected the file. The actor then made subtle modifications to the file and uploaded the newly created file to the same popular antivirus testing website in order to determine how to evade detection. The flowchart in Figure 1explains the process in which the threat actors followed during their testing activities.\n\n\n\nFigure 1 Flowchart describing the testing process carried out by OilRig actor\n\nLucky for us, the threat actors do not modify the metadata within their delivery documents, which allows us to determine when the actor last modified each Word document. These untainted timestamps allow us to create a timeline that we can use to order the files as they were created by the actor. Our analysis methodology involves iteratively comparing each file with the next file in the timeline to determine the changes the actor made to the first file that resulted in the creation of the second file.\n\nThe first testing activity we observed began with an initial sample created on June 13, 2016 with 17 subsequent files created for testing purposes that the actor created in a two-hour period on June 15, 2016. Table 1shows the samples we observed associated with the June 2016 testing activity, including the iteration, the last modified timestamp, the hash, the filename, and the antivirus detection rate of the newly created file. The first \u201cttt.xls\u201d file and the files with incrementing filenames have the same decoy contents, which is the reason we initially included this sample with this group despite the difference in naming. Also, the filename \u201cttt.xls\u201d contains the acronym for \u201cto the top\u201d, which is common usage in Internet forums and could depict the actor starting testing activities.\n\n\n\nIteration\nModified\nSHA256\nFilename\nAV\n\n\nBase\n2016:06:13 05:28:32\n742a52084162d3789e19...\nttt.xls\n4\n\n\n1\n2016:06:15 05:24:25\nf1de7b941817438da2a4...\n1.xls\n6\n\n\n2\n2016:06:15 05:28:11\nb142265bb4b902837d83...\n2.xls\n0\n\n\n3\n2016:06:15 05:30:45\n2e226a0210a123ad8288...\n3.xls\n2\n\n\n4\n2016:06:15 05:33:11\n299bc738d7b0292820d9...\n4.xls\n4\n\n\n5\n2016:06:15 05:39:55\n6e62308b94455569b8a1...\n5.xls\n2\n\n\n6\n2016:06:15 05:42:20\nd64b46cf42ea4a7bf291...\n6.xls\n1\n\n\n7\n2016:06:15 05:47:09\n77f8a267357a8d237e0b...\n8.xls\n1\n\n\n8\n2016:06:15 05:52:50\n92f429b6f9b8031b5fc6...\n9.xls\n3\n\n\n9\n2016:06:15 05:55:01\nc2a386723d8f203e1228...\n10.xls\n2\n\n\n10\n2016:06:15 05:57:50\n2fb6bce8fc2f531de183...\n11.xls\n2\n\n\n11\n2016:06:15 06:00:24\n75b033a40a756e2536d0...\n12.xls\n2\n\n\n12\n2016:06:15 06:10:46\n8bb8f2bada27d14be021...\n13.xls\n1\n\n\n13\n2016:06:15 06:13:30\n3af6dfa4cebd82f48b66...\n14.xls\n2\n\n\n14\n2016:06:15 06:16:27\n82239a4e18a67f7b2ba0...\n15.xls\n2\n\n\n15\n2016:06:15 06:19:45\n938101a1a336ce0fff57...\n16.xls\n2\n\n\n16\n2016:06:15 07:02:49\n5e9ddb25bde3719c392d...\nttt.xls\n4\n\n\n17\n2016:06:15 07:39:53\n4190a8b8e6fa7bc37712...\nttt.xls\n0\n\n\n\nTable 1 Samples associated with the June 2016 testing activities\n\nThe second testing activity of ClaySlide delivery documents began with the actor creating a base sample on November 14, 2016, followed by six subsequent test files created within a 30-minute window on the following day. Table 2 shows the pertinent information related to the ClaySlide testing activity that occurred in November 2016. Again, there was an obvious difference in filenames at the beginning of this activity, but we included the first two samples in with this group based on the first two files initially sharing decoy contents, but more importantly sharing the same macro code and payload scripts as the initial testing sample with the filename of \u201cweak.xls\u201d.\n\n\n\nIteration\nModified\nSHA256\nFilename\nAV\n\n\nBase\n2016:11:14 04:15:57\nae40262d5fad4bc48066...\nTables[Update].xls\n5\n\n\n1\n2016:11:15 07:53:50\n16880db37c35d4b28e68...\n33.xls\n5\n\n\n2\n2016:11:15 07:56:09\n47054a8d380c197a7f32...\nweak.xls\n5\n\n\n3\n2016:11:15 08:05:52\ne9ccf7a3c1e24f173ae9...\nweak.xls\n3\n\n\n4\n2016:11:15 08:12:11\ne3c6f13dc3079a828386...\nweak.xls\n3\n\n\n5\n2016:11:15 08:14:35\n427ce6b04d4319eeb84d...\nweak.xls\n2\n\n\n6\n2016:11:15 08:19:55\n18b603495f8344c02468...\nweak.xls\n2\n\n\n\nTable 2 Samples associated with the November 2016 testing activity\n\nBy analyzing the changes made to the ClaySlide delivery document during these two separate testing activities we were able to gain insight into the techniques used by the actors during the testing. Before reviewing the activities performed in the two testing sessions, the following high level observations can be made:\n\n \tPatterns in filenames emerge, with testing files having the same word or incrementing numbers for the filenames, or a set of testing files sharing the same exact filename\n \tVery structured approach, using a baseline test sample followed by small iterative changes\n \tActor may also revert back to the baseline test sample and continue testing\n \tChanges made only a few minutes apart and can involve:\n\n \tRemoval or location change of payload\n \tModified decoy contents and sheet names\n \tChanges to function and variable names\n \tRemoval of entire lines of code\n \tObfuscating strings via concatenation or an alternate encoding (base64 or hexadecimal)\n \tReordering of functions in the code\n\n\n \tIn many cases, testing files are no longer functional due to:\n\n \tRemoval of a required component(s)\n \tReplacement of variables with nonsensical values\n \tUse of encoded strings without ability to decode\n\n\n \tTesting activities ceases with a very low antivirus detection rate\n \tThe number of vendors detecting the samples increases and decrease throughout the testing as the actor attempts to determine what the detection signatures are triggering on\n\nJune 2016 Testing Activity\nIn June 2016, an actor related to the OilRig campaign began a series of testing activities in an attempt to determine the portions of the ClaySlide macro code that antivirus vendors were using for detection purposes. These activities resulted in 17 different iterations of the ClaySlide delivery document, many of which no longer run properly due to the changes made within the files. We have included an exhaustive analysis of the June 2016 testing activity in Appendix A.\n\nIn the June testing, the actor started by removing the malicious payload from the Excel delivery document to focus their testing on the malicious macro. The actor made many iterative changes during their testing of the macro, however, the actor began these changes by completely removing a block of the code that was responsible for saving the payload to the system and for creating the scheduled task to run the payload. The removal of this code brought the detection rate to 0, which told the actor that the antivirus detection rules were detecting these files based on these lines of code. The actor spent most of their subsequent efforts modifying portions of this code.\n\nNow that the actor knew the portion of the code that caused antivirus detection, the actor added that portion of the code back to the macro and made changes in attempt to determine the exact line of code that was detected. This process involved changing the commands used to create the payload and the scheduled task. The changes made to these two commands involved their complete removal, their replacement with non-functioning strings such as keyboard mashing and their equivalent strings in a variety of different encodings, including base64 and hexadecimal representation. The actor also changed the way these commands were executed as well, specifically by either using the WScript.Shell object directly or the object stored in a variable. The actor also uses intentional misspelling of commands, such as \u201cpoawearshell\u201d and \u201cscshtassks\u201d, as well as variations to the filenames for the payloads, such as \u201cfiraeeye.vbs\u201d instead of \u201cfireeye.vbs\u201d.\n\nAfter making changes to the commands above, the actor shifted their focus onto changing the function names within the macro, which did not result in any change in the detection rate. After a 40-minute break, it appears the actor reverts to the base macro instead of modifying the previously created test file. Again, the actor modifies the code in the base macro responsible for saving and running the payload, but this time the actor changes the folder names it creates for the payload to store its generated files. Also, the two files generated during these activities that occurred after the actor reverted back to the base macro had keyboard-mashed strings for their decoy contents, which differed dramatically from the previous test files. During the entirety of this testing activity, the antivirus detection rate reached a high of 6 but ended with a zero vendors detecting the sample when the actor ceased testing activities, which suggests that the actor was satisfied with this result. However, we do not see conclusive evidence to suggest that the actor was attempting to evade a specific antivirus vendor.\nNovember 2016 Testing Activity\nOn November 15, 2016, an actor related to the OilRig campaign began testing the ClaySlide delivery documents. While the testing activities in June began with the removal of the payloads from the delivery document, the files generated during the November testing all retained their Helminth payloads, all of which were the same payload that use the C2 domain of \u201cupdateorg[.]com\u201d. We have included an exhaustive analysis of the November 2016 testing activity in Appendix B.\n\nIn the November testing, the actor appears to initially focus on making modifications to the Excel worksheet that contains the decoy contents. The changes made to the worksheet involved adding random strings to cells within the decoy, to changing the names of the worksheets themselves. Eventually, the actor completely changes the contents of the decoy to a different theme entirely, from a decoy containing routing settings to a list of weak passwords.\n\nIn addition to making changes to the Excel worksheets that contain the decoy content, the actor also made changes to the worksheet that is initially displayed to the user. Taking a step back, as discussed in the Appendix in our initial OilRig blog, ClaySlide delivery documents initially open with a worksheet named \u201cIncompatible\u201d that displays content that instructs the user to \u201cEnable Content\u201d to see the contents of the document, which in fact runs the malicious macro and compromises the system. When the macro runs, it hides the \u201cIncompatible\u201d worksheet and displays the worksheet that contains the decoy document. The actor modified the \u201cIncompatible\u201d worksheet to include random strings, which appears to be an attempt to see if detection rules are using the hash of this sheet for detection purposes.\n\nMeanwhile, during these changes to the \u201cIncompatible\u201d worksheet, the actor is also making changes to the malicious macro as well. The actor began changing the function names in the malicious macro from \u201cDoom_Init\u201d and \u201cDoom_ShowHideSheets\u201d to \u201cDoon_Init\u201d and \u201cDoon_SHSheet\u201d to \u201cIni\u201d and \u201cSHSheet\u201d. At one point, the actor changed the order of the functions in the macro to see if it was the cause of detection. The actor also changed the variable name used to store the VB script used to run the Helminth payload from \u201cBackupVbs\u201d to \u201cBackup_Vbs\u201d.\n\nAnother change made during these testing activities involved the actor splitting the command needed to create the scheduled task in several strings and concatenating them back together. This technique is interesting, as the resulting command is still functional which differs dramatically from the modifications seen in the June testing where the commands were changed to a point where they were no longer operational.\n\nThe last change made to the malicious macro is the locations in which the macro obtains the payload. In all ClaySlide delivery documents, the macro obtains scripts related to the Helminth Trojan from specific cells within the \u201cIncompatible\u201d worksheet. By changing the cells containing the scripts, the actor is checking to see if detection rules are looking for scripts at these specific locations. By the time the threat actor ceased this testing activity, the actor had lowered the detection rate of the ClaySlide delivery document to 2, suggesting this was a satisfactory result. Like the June testing activity, we do not see conclusive evidence of the threat actor attempting to evade a specific antivirus vendor in the November testing.\nConclusion\nThe threat actors involved with the OilRig attack campaign have shown part of their playbook that involves testing and modifying their delivery documents prior to use in attacks. The purpose of these modifications is to evade detection from security products to extend the usage of their ClaySlide delivery documents. By analyzing these testing activities, we gain some helpful insight into the OilRig actors, specifically that this threat group is fairly mature from an operational standpoint and the fact that they hope to use their delivery documents as long as possible.\n\nWe were already aware of this threat group making modifications to their ClaySlide delivery document that we discussed in our previous blog. Now we know that there is an organized process involved that results in these changes, rather than the threat actor arbitrarily making changes to parts of the delivery documents, such as filenames and payload behavior. This realization suggests that the OilRig threat group will continue to use their delivery documents for extended periods with subtle modifications to remain effective.\nAppendix A\nThis appendix contains an in-depth analysis of each iteration of testing activity carried out by the OilRig actors in June 2016. We provide screenshots and diffs between files (when available) to visualize the modifications made during the iteration.\n\nIteration 1\n\nThe actor removed all but three bytes from the VBS and PowerShell scripts, while the macro itself remains unchanged. This suggests that the delivery document no longer contains the malicious payload (Helminth scripts) used to infect the system. By removing the payload from the delivery document, the actor can isolate antivirus detection results based on the delivery document itself. Also, without the payload the samples no longer have some attributes and entities that security researchers typically use to correlate samples to a specific threat group, such as the C2 server of \u201cupdate-kernal[.]net\u201d that was in the payload in the base sample.\n\nWith the payload removed, the actor focuses their efforts in subsequent iterations on modifying the macro within the delivery document.\n\nIteration 2\n\nThe actor completely removed code that is responsible for a majority of the functionality within the macro. The code removed, as seen in Figure 2, is responsible for the following:\n\n \tCreating folders\n\n \t\\Libraries\\up\n \t\\Libraries\\dn\n \t\\Libraries\\tp\n\n\n \tRunning a PowerShell command to create\n\n \tPowerShell script\n \tVB script\n\n\n \tRunning a command to create a scheduled task to run the VB script\n\n\n\nFigure 2 Changes made in Iteration 2\n\nIteration 3\n\nThe actor adds the content removed in the previous iteration. However, the line of code responsible for running the command to create the scheduled task to run the VB script was omitted. This suggests the threat actor was testing to see if vendors were detecting ClaySlide samples based on this line within the macro.\n\n\n\nFigure 3 Changes made in Iteration 3\n\nIteration 4\n\nThe actor adds the line of code omitted from the previous iteration, suggesting this specific code was not used for detection purposes. The actor also changed the method in which it calls the PowerShell script in the \u201ccmd\u201d variable, by using a \u201cWScript.Shell\u201d object stored in the \u201cwss\u201d variable instead of creating a new \u201cWScript.Shell\u201d object.\n\n\n\nFigure 4 Changes made in Iteration 4\n\nIteration 5\n\nThe actor base64 encoded the contents of the \u2018cmd\u2019 variable that stored a command to invoke a PowerShell script that would save the payload to the filesystem. Also, the actor changed the command to create the scheduled task to be base64 encoded as well. These alterations do not come with a base64 decoding routine, suggesting that the sample generated in this iteration would result in an error. The lack of a decoding routine suggests that the actor does not waste time making sure the code actually works, as they could add code to support these changes.\n\n\n\nFigure 5 Changes made in Iteration 5\n\nIteration 6\n\nThe actor tests to see if the base64 encoded strings added in the previous iteration were detected by removing these strings and leaving the two command strings empty.\n\n\n\nFigure 6 Changes made in Iteration 6\n\nIteration 7\n\nThe actor adds the base64 encoded string for \u201cpowershell.exe\u201d within the \u2018cmd\u2019 variable and in place of the command to create the scheduled task.\n\n\n\nFigure 7 Changes made in Iteration 7\n\nIteration 8\n\nThe actor replaces the first base64 for \u201cpowershell.exe\u201d with the base64 encoded string to run the PowerShell command, but replaces the second \u201cpowershell.exe\u201d with the cleartext string to create the scheduled task. The base64 encoded PowerShell command is similar to those seen in previous iterations. However, the actor changed one of the filenames used to save the payload to \u201cfiraeeye.vbs\u201d (from \u201cfireeye.vbs\u201d) and references a variable named \u201cFireeayeVbs\u201d (from \u201cFireeyeVbs\u201d) that does not appear in the code.\n\n\n\nFigure 8 Changes made in Iteration 8\n\nIteration 9\n\nThe actor replaces the cleartext string to create the scheduled task with the base64 encoded version of the string. However, the base64 encoded string changes the name of the created task from \u201cGoogleUpdatesTaskMachineUI\u201d to \u201cGoosgleUpdatesTaskMachineUI\u201d and the script name from \u201cfireeye.vbs\u201d to \"fireeyse.vbs\".\n\n\n\nFigure 9 Changes made in Iteration 9\n\nIteration 10\n\nThe actor makes changes to the base64 encoded strings that used as a command to use PowerShell to install the payload and to schedule a task to run the payload. The base64 encoded PowerShell command reintroduces the filename \u201cfireeye.vbs\u201d and the variable name \u201cFireeyeVbs\u201d, both of which were changed in iteration 8; however, the base64 encoded command uses the string \u201cpoawearshell\u201d instead of \u201cpowershell\u201d.\n\nAs for the base64 string used to create the scheduled task, the actor reintroduced the scheduled task name of \u201cGoogleUpdatesTaskMachineUI\u201d and script filename of \u201cfireeye.vbs\u201d, which were changed in iteration 9. However, the actor uses the string \u201cscshtassks\u201d to see if the \u201cschtasks\u201d string was being detected.\n\n\n\nFigure 10 Changes made in Iteration 10\n\nIteration 11\n\nThe actor changed the base64 encoded strings within the \u2018cmd\u2019 variable and the string used to create the scheduled task. Instead of including the base64 encoded string of the PowerShell and create task command, the actor replaced these strings with the base64 encoded representation of the following string:\nsource code from https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/05\/targeted_attacksaga.htmlsource code from https:\/\/www.fireeye.com\/blog\/threat-\nresearch\/2016\/05\/targeted_attacksaga.htmlsource code from https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/05\/targeted_attacksaga.htmlsource code from https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/05\/targeted_attacksaga.htmlsource code from https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/05\/targeted_attacksaga.htmlsource code from https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/05\/targeted_attacksaga.htmlsource code from https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/05\/targeted_attacksaga.html\n\nThe string above contains a link to a FireEye blog that provided an analysis of this delivery document. It should be noted that the following non-encoded string was included in previous samples as a comment within the macro:\n\n'source code from https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/05\/tareted_attacksaga.html\n\n\n\nFigure 11 Changes made in Iteration 11\n\nIteration 12\n\nThe actor replaced the base64 strings within the \u2018cmd\u2019 variable and the string to create the scheduled task with randomly typed letters. It appears the actor performed two-handed keyboard mashing to generate the strings used in these variables.\n\n\n\nFigure 12 Changes made in Iteration 12\n\nIteration 13\n\nThe actor changed the randomly typed keys in the \u2018cmd\u2019 and the string for creating the scheduled task with the base64 strings from two iterations back. However, the base64 strings were added between opening and closing brackets.\n\n\n\nFigure 13 Changes made in Iteration 13\n\nIteration 14\n\nThe actor changed the base64 encoded strings used for the PowerShell command and the command to create a scheduled task from the last iteration to a hexadecimal string. The string contains the hexadecimal representation of the characters that make up the command to create the scheduled task, which was last seen in Iteration 4. Again, the script does not contain decoding functions to decode the hexadecimal values to the correct characters, therefore this script is not functional.\n\n\n\nFigure 14 Changes made in Iteration 14\n\nIteration 15\n\nThe actor changed the two function names that are run when the Excel document is opened. In all prior iterations, these function names were \u201cfireeye_Init\u201d and \u201cfireeye_ShowHideSheets\u201d, which are responsible for installing the Trojan and displaying the decoy contents within the Excel spreadsheet, respectively. The actor changed these two function names to \u201cfireeye_Init2\u201d and \u201cfireeye_ShowHideSheets3\u201d to determine if the function names were being detected by antivirus products.\n\n\n\nFigure 15 Changes made in Iteration 15\n\nIteration 16\n\nThis iteration is very interesting, as we believe the actor reverts back to the base document instead of making changes to the document created in the previous iteration.\n\nThe filename changed from an incrementing number to \u201cttt.xls\u201d, which is the same filename as the base document. Also, when we compared the sample from the previous iteration, there were a number of changes seen here:\n\n\n\nFigure 16 Changes made in Iteration 16 if compared with the file in Iteration 15\n\nHowever, if you compare the file created in this iteration with the base file, the number of and type of changes seem to align closer to the modifications performed in previous iterations. If the actor reverted to the base document as we suspect, then modifications were made to the script filename, the folder names that store files generated by the payload, as well as the method the script invokes the PowerShell script. The actor changed the script filename from \u201cfireeye.vbs\u201d to \u201cfireueye.vbs\u201d, changed the \u201cup\u201d, \u201cdn\u201d and \u201ctp\u201d folder names to \u201cuup\u201d, \u201cdgn\u201d and \u201ctup\u201d and uses the \u201cWScript.Shell\u201d object stored in the \u201cwss\u201d variable instead of creating a new \u201cWScript.Shell\u201d object to run the command.\n\n\n\nFigure 17 Changes made in Iteration 16 if actor reverted to the base file\n\nIteration 17\n\nIn the last iteration of this testing activity, the actor changed some of the modifications made in the previous iteration back to the values used in the base document, specifically the filenames and folder names. However, the actor also adds a new variable to store the \u201c%PUBLIC%\u201d environment variable that the script uses as the path to store the \u201cfireeye.vbs\u201d script and the folders that the payload would use. This iteration also includes a modified PowerShell command that attempts to run a command stored in the \u201cfireeye.vbs\u201d file, but does not include the portion of the command that would write the script to that file. The actor also removed the line that would run the command to create the scheduled task to run the VB script.\n\n\n\nFigure 18 Changes made in Iteration 17\nAppendix B\nThis appendix contains an in-depth analysis of each iteration of testing activity carried out by the OilRig actors in November 2016. We provide screenshots and diffs between files (when available) to visualize the modifications made during the iteration.\n\nIteration 1\n\nIn the first iteration of this testing, the actor changed the decoy content from the base sample. At a high level, the decoy contents contained commands to configure a Cisco router with static routes and other settings. Originally, the base test file used in this testing activity contained just these configuration settings in an Excel worksheet named \u201cSheet1\u201d, as seen in Figure 19.\n\n\n\nFigure 19 Original decoy contents found in the base test file\n\nIn the first iteration of testing, the actor changed the worksheet name that contains the decoy content from \u201cSheet1\u201d to \u201chgvc\u201d and added a string to the worksheet \u201cjgvchhctf\u201d, as seen in Figure 20. We believe the threat actor is attempting to determine if the worksheet name or the hash of the decoy worksheet were causing antivirus detection.\n\n\n\nFigure 20 Changes made to the decoy contents in Iteration 1\n\nIteration 2\n\nThe actor then changed the name of the worksheet that contains the decoy content from \u201chgcv\u201d to \u201ctable\u201d and completely changed the decoy content from the Cisco routing settings to a list of weak passwords, as seen in Figure 21. We believe this is the threat actor testing the new decoy content that they will use in an upcoming attack.\n\n\n\nFigure 21 New decoy contents introduced in Iteration 2\n\nIteration 3\n\nFollowing the lead of previous iterations, the actor made modifications to the content in the Excel worksheet; however, in this iteration the changes were not made to the decoy worksheet, rather the change was made to the initial worksheet called \u201cIncompatible\u201d that displays the message to instruct the user to enable content to run the macro. As seen in Figure 22, the actor adds the string \u201cyy\u201d to this worksheet to determine whether antivirus vendors were detecting Clayslide documents based on this worksheet.\n\n\n\nFigure 22 Changes made to the Incompatible worksheet in Iteration 3\n\nThe actor also made modifications to the macro in this iteration, specifically by changing function names and by splitting up strings and concatenating them back together. The function names in the macro \u201cDoom_Init\u201d and \u201cDoom_ShowHideSheets\u201d were changed to \u201cDoon_Init\u201d and \u201cDoon_SHSheet\u201d to determine if these function names were causing detection. Also, the actor split the word \u201cpowershell\u201d in the commands within the macro and concatenated them together to retain functionality.\n\n\n\nFigure 23 Changes made to the macro in Iteration 3\n\nIteration 4\n\nMuch like the previous iteration, the threat actor makes changes to the Incompatible worksheet and the code within the macro. First, the threat actor added the string \u201chi\u201d to two cells within the initially displayed Incompatible worksheet, as seen in Figure 24.\n\n\n\nFigure 24 Changes made to the Incompatible worksheet in Iteration 4\n\nThe actor also made modifications to the macro in this iteration, as seen in Figure 25. The actor changed the two function names from \u201cDoon_Ini\u201d and \u201cDoon_SHSheet\u201d to \u201cIni\u201d and \u201cSHSheet\u201d respectively. Also, the actor changed the variable name that stores the VB script obtained from the spreadsheet from \u201cBackupVbs\u201d to \u201cBackup_Vbs\u201d, and modified the PowerShell command to use this new variable as well. Lastly, the actor further split the name of the created task using concatenation to retain functionality.\n\n\n\nFigure 25 Changes made to the macro in Iteration 4\n\nIteration 5\n\nIn this iteration, the actor rearranges the order of the functions in the script, specifically putting the \u201cIni\u201d function before the \u201cSHSheet\u201d function. Figure 26 shows this function reordering.\n\n\n\nFigure 26 Changes made to the macro within Iteration 5\n\nIteration 6\n\nIn the final iteration of testing, the actor moves the base64 encoded VB Script and the two base64 encoded PowerShell scripts to three different cells within the Incompatible worksheet. The actor also changes the macro to access the base64 encoded strings from these new locations, which retains the functionality of this document.\n\n\n\nFigure 27 Changes made to the macro in Iteration 6\n\n&nbsp;","publisher":{"@type":"Organization","@id":"#panworg"},"image":{"@type":"ImageObject","url":"https:\/\/unit42.paloaltonetworks.com\/wp-content\/uploads\/2016\/09\/unit42-web-banner-650x300-300x300.jpg","width":300,"height":300},"speakable":{"@type":"SpeakableSpecification","xPath":["\/html\/head\/title","\/html\/head\/meta[@name='description']\/@content"]},"author":[{"@type":"Person","name":"Robert Falcone"}]}</script><link rel='stylesheet' id='crayon-css' href='https://unit42.paloaltonetworks.com/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=_2.7.2_beta' media='all' />
<link rel='stylesheet' id='crayon-theme-classic-css' href='https://unit42.paloaltonetworks.com/wp-content/plugins/crayon-syntax-highlighter/themes/classic/classic.css?ver=_2.7.2_beta' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css' href='https://unit42.paloaltonetworks.com/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=_2.7.2_beta' media='all' />
<style id='co-authors-plus-coauthors-style-inline-css'>
.wp-block-co-authors-plus-coauthors.is-layout-flow [class*=wp-block-co-authors-plus]{display:inline}

</style>
<style id='co-authors-plus-avatar-style-inline-css'>
.wp-block-co-authors-plus-avatar :where(img){height:auto;max-width:100%;vertical-align:bottom}.wp-block-co-authors-plus-coauthors.is-layout-flow .wp-block-co-authors-plus-avatar :where(img){vertical-align:middle}.wp-block-co-authors-plus-avatar:is(.alignleft,.alignright){display:table}.wp-block-co-authors-plus-avatar.aligncenter{display:table;margin-inline:auto}

</style>
<style id='co-authors-plus-image-style-inline-css'>
.wp-block-co-authors-plus-image{margin-bottom:0}.wp-block-co-authors-plus-image :where(img){height:auto;max-width:100%;vertical-align:bottom}.wp-block-co-authors-plus-coauthors.is-layout-flow .wp-block-co-authors-plus-image :where(img){vertical-align:middle}.wp-block-co-authors-plus-image:is(.alignfull,.alignwide) :where(img){width:100%}.wp-block-co-authors-plus-image:is(.alignleft,.alignright){display:table}.wp-block-co-authors-plus-image.aligncenter{display:table;margin-inline:auto}

</style>
<style id='safe-svg-svg-icon-style-inline-css'>
.safe-svg-cover{text-align:center}.safe-svg-cover .safe-svg-inside{display:inline-block;max-width:100%}.safe-svg-cover svg{height:100%;max-height:100%;max-width:100%;width:100%}

</style>
<style id='classic-theme-styles-inline-css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='post-views-counter-frontend-css' href='https://unit42.paloaltonetworks.com/wp-content/plugins/post-views-counter/css/frontend.min.css?ver=1.4.7' media='all' />
<link rel='stylesheet' id='wpml-legacy-post-translations-0-css' href='https://unit42.paloaltonetworks.com/wp-content/plugins/sitepress-multilingual-cms/templates/language-switchers/legacy-post-translations/style.min.css?ver=1' media='all' />
<link rel='stylesheet' id='unit42-v6-style-css' href='https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/style.css?ver=1.0.0' media='all' />
<link rel='stylesheet' id='unit42-v6-head-styles-css' href='https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/css/head-styles.css?ver=1.0.0' media='all' />
<link rel='stylesheet' id='unit42-v5-custom-styles-css' href='https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/css/main.css?ver=1.0.0' media='all' />
<link rel='stylesheet' id='unit42-v6-plugin-styles-css' href='https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/css/plugin.css?ver=1.0.0' media='all' />
<link rel='stylesheet' id='unit42-v6-custom-styles-css' href='https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/css/main-redesign.css?ver=1.0.0' media='all' />
<link rel='stylesheet' id='like-dislike-css' href='https://unit42.paloaltonetworks.com/wp-content/plugins/like-dislike-counter-for-posts-pages-and-comments/css/ldc-lite.css?ver=1.0.0' media='all' />
<script src="https://unit42.paloaltonetworks.com/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script src="https://unit42.paloaltonetworks.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<script id="crayon_js-js-extra">
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"https:\/\/unit42.paloaltonetworks.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
</script>
<script src="https://unit42.paloaltonetworks.com/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=_2.7.2_beta" id="crayon_js-js"></script>
<script id="post-views-counter-frontend-js-before">
var pvcArgsFrontend = {"mode":"js","postID":27831,"requestURL":"https:\/\/unit42.paloaltonetworks.com\/wp-admin\/admin-ajax.php","nonce":"19c0df3ad2","dataStorage":"cookies","multisite":false,"path":"\/","domain":""};
</script>
<script src="https://unit42.paloaltonetworks.com/wp-content/plugins/post-views-counter/js/frontend.min.js?ver=1.4.7" id="post-views-counter-frontend-js"></script>
<script id="wpml-xdomain-data-js-extra">
var wpml_xdomain_data = {"css_selector":"wpml-ls-item","ajax_url":"https:\/\/unit42.paloaltonetworks.com\/wp-admin\/admin-ajax.php","current_lang":"en","_nonce":"26f43eef0c"};
</script>
<script src="https://unit42.paloaltonetworks.com/wp-content/plugins/sitepress-multilingual-cms/res/js/xdomain-data.js?ver=4.6.12" id="wpml-xdomain-data-js" defer data-wp-strategy="defer"></script>
<link rel="https://api.w.org/" href="https://unit42.paloaltonetworks.com/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://unit42.paloaltonetworks.com/wp-json/wp/v2/posts/27831" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://unit42.paloaltonetworks.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.6.1" />
<link rel='shortlink' href='https://unit42.paloaltonetworks.com/?p=27831' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://unit42.paloaltonetworks.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Funit42.paloaltonetworks.com%2Funit42-oilrig-actors-provide-glimpse-development-testing-efforts%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://unit42.paloaltonetworks.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Funit42.paloaltonetworks.com%2Funit42-oilrig-actors-provide-glimpse-development-testing-efforts%2F&#038;format=xml" />
<meta name="generator" content="WPML ver:4.6.12 stt:1,28;" />
<meta name="google-site-verification" content="zHZtYOWm9hm4SZgsH7wqiYcOwmsAsxDUDU4UD1QxB40" /><style>#wpdevart_lb_overlay{background-color:#000000;} #wpdevart_lb_overlay.wpdevart_opacity{opacity:0.8 !important;} #wpdevart_lb_main_desc{
				 -webkit-transition: opacity 0.3s ease;
				 -moz-transition: opacity 0.3s ease;
				 -o-transition: opacity 0.3s ease;
				 transition: opacity 0.3s ease;} #wpdevart_lb_information_content{
				 -webkit-transition: opacity 0.3s ease;
				 -moz-transition: opacity 0.3s ease;
				 -o-transition: opacity 0.3s ease;
				 transition: opacity 0.3s ease;}
		#wpdevart_lb_information_content{
			width:100%;	
			padding-top:0px;
			padding-bottom:0px;
		}
		#wpdevart_info_counter_of_imgs{
			    display: inline-block;
				padding-left:15px;
				padding-right:4px;
				font-size:20px;
				color:#000000;
		}
		#wpdevart_info_caption{
			    display: inline-block;
				padding-left:15px;
				padding-right:4px;
				font-size:20px;
				color:#000000;
		}
		#wpdevart_info_title{
			    display: inline-block;
				padding-left:5px;
				padding-right:5px;
				font-size:15px;
				color:#000000;
		}
		@-webkit-keyframes rotate {
			to   {-webkit-transform: rotate(360deg);}
			from  {-webkit-transform: rotate(0deg);}
		}
		@keyframes rotate {
			to   {transform: rotate(360deg);}
			from  {transform: rotate(0deg);}
		}
		#wpdevart_lb_loading_img,#wpdevart_lb_loading_img_first{
			-webkit-animation: rotate 2s linear  infinite;
    		animation: rotate 2s linear infinite;
		}
	  </style>      <link rel="pingback" href="https://unit42.paloaltonetworks.com/xmlrpc.php"><script src="https://cdnjs.cloudflare.com/polyfill/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3.0.1/es5/tex-mml-chtml.js"></script>
<link rel="icon" href="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-Unit42-180x180-1.png" sizes="32x32" />
<link rel="icon" href="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-Unit42-180x180-1.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-Unit42-180x180-1.png" />
<meta name="msapplication-TileImage" content="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-Unit42-180x180-1.png" />
<script>var $ = jQuery;</script>

    <script type="text/javascript">
    ;(function(win, doc, style, timeout) {
    var STYLE_ID = 'at-body-style';
    function getParent() {
    return doc.getElementsByTagName('head')[0];
    }
    function addStyle(parent, id, def) {
        if (!parent) {
        return;
        }
        var style = doc.createElement('style');
        style.id = id;
        style.innerHTML = def;
        parent.appendChild(style);
    }
    function removeStyle(parent, id) {
        if (!parent) {
            return;
        }
        var style = doc.getElementById(id);
        if (!style) {
            return;
        }
        parent.removeChild(style);
    }
    addStyle(getParent(), STYLE_ID, style);
    setTimeout(function() {
    removeStyle(getParent(), STYLE_ID);
    }, timeout);
    }(window, document, "body {visibility:hidden !important}", 3000));
    </script>

            <script src="https://assets.adobedtm.com/9273d4aedcd2/0d76ae0322d7/launch-425c423d843b.min.js" async></script>
            <script type="text/javascript" src="https://www.paloaltonetworks.com/content/dam/pan/en_US/includes/attribution.js"></script>


<script type="text/javascript">
var isIE11 = !!navigator.userAgent.match(/Trident.*rv\:11\./);
if(isIE11){
    var polyfill = 'https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/scripts/polyfill.min.js';
    document.write('<script type="text/javascript" src="'+polyfill+'">\x3C/script>');
}
    /**
 * String.prototype.replaceAll() polyfill
 * https://gomakethings.com/how-to-replace-a-section-of-a-string-with-another-one-with-vanilla-js/
 * @author Chris Ferdinandi
 * @license MIT
 */
if (!String.prototype.replaceAll) {
	String.prototype.replaceAll = function(str, newStr){
		// If a regex pattern
		if (Object.prototype.toString.call(str).toLowerCase() === '[object regexp]') {
			return this.replace(str, newStr);
		}
		// If a string
		return this.replace(new RegExp(str, 'g'), newStr);
	};
}

    /*! lozad.js - v1.16.0 - 2020-09-06 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.lozad=e()}(this,function(){"use strict";
/**
   * Detect IE browser
   * @const {boolean}
   * @private
   */var g="undefined"!=typeof document&&document.documentMode,f={rootMargin:"0px",threshold:0,load:function(t){if("picture"===t.nodeName.toLowerCase()){var e=t.querySelector("img"),r=!1;null===e&&(e=document.createElement("img"),r=!0),g&&t.getAttribute("data-iesrc")&&(e.src=t.getAttribute("data-iesrc")),t.getAttribute("data-alt")&&(e.alt=t.getAttribute("data-alt")),r&&t.append(e)}if("video"===t.nodeName.toLowerCase()&&!t.getAttribute("data-src")&&t.children){for(var a=t.children,o=void 0,i=0;i<=a.length-1;i++)(o=a[i].getAttribute("data-src"))&&(a[i].src=o);t.load()}t.getAttribute("data-poster")&&(t.poster=t.getAttribute("data-poster")),t.getAttribute("data-src")&&(t.src=t.getAttribute("data-src")),t.getAttribute("data-srcset")&&t.setAttribute("srcset",t.getAttribute("data-srcset"));var n=",";if(t.getAttribute("data-background-delimiter")&&(n=t.getAttribute("data-background-delimiter")),t.getAttribute("data-background-image"))t.style.backgroundImage="url('"+t.getAttribute("data-background-image").split(n).join("'),url('")+"')";else if(t.getAttribute("data-background-image-set")){var d=t.getAttribute("data-background-image-set").split(n),u=d[0].substr(0,d[0].indexOf(" "))||d[0];// Substring before ... 1x
u=-1===u.indexOf("url(")?"url("+u+")":u,1===d.length?t.style.backgroundImage=u:t.setAttribute("style",(t.getAttribute("style")||"")+"background-image: "+u+"; background-image: -webkit-image-set("+d+"); background-image: image-set("+d+")")}t.getAttribute("data-toggle-class")&&t.classList.toggle(t.getAttribute("data-toggle-class"))},loaded:function(){}};function A(t){t.setAttribute("data-loaded",!0)}var m=function(t){return"true"===t.getAttribute("data-loaded")},v=function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t)};return function(){var r,a,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:".lozad",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},e=Object.assign({},f,t),i=e.root,n=e.rootMargin,d=e.threshold,u=e.load,g=e.loaded,s=void 0;"undefined"!=typeof window&&window.IntersectionObserver&&(s=new IntersectionObserver((r=u,a=g,function(t,e){t.forEach(function(t){(0<t.intersectionRatio||t.isIntersecting)&&(e.unobserve(t.target),m(t.target)||(r(t.target),A(t.target),a(t.target)))})}),{root:i,rootMargin:n,threshold:d}));for(var c,l=v(o,i),b=0;b<l.length;b++)(c=l[b]).getAttribute("data-placeholder-background")&&(c.style.background=c.getAttribute("data-placeholder-background"));return{observe:function(){for(var t=v(o,i),e=0;e<t.length;e++)m(t[e])||(s?s.observe(t[e]):(u(t[e]),A(t[e]),g(t[e])))},triggerLoad:function(t){m(t)||(u(t),A(t),g(t))},observer:s}}});

</script>

<!-- <script src="https://www.google.com/recaptcha/api.js"></script>  -->

<!--  End: Scripts Migrated From Unit42-v5 -->

</head>
<body class="post-template-default single single-post postid-27831 single-format-standard no-sidebar">
<header class="haeder py-15 position-relative z-index-2" style="display: none;">
  <div class="container px-sm-30 px-35">
    <div class="row">
        <div class="first-logo col-sm-auto col-6 mb-sm-0 mb-40 text-sm-center order-1">
                        <a href="https://www.paloaltonetworks.com/">
                <img src="/wp-content/uploads/2021/07/PANW_Parent.png" width="140px" alt="Logo" />
            </a>
        </div>
      <div class="col-sm-auto col-6 text-sm-center order-sm-2 order-4 second-logo-unit">
        <a href="https://unit42.paloaltonetworks.com/">
            <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/unit42-logo-white.svg" class="attachment-full size-full" alt="Unit42 Logo"  width="150" height="35"/>
        </a>
      </div>

      <div class="col-auto d-sm-none ml-auto mb-40 order-2">
        <button class="btn__search" data-toggle="collapse" data-target="#search" aria-label="search"><i class="ui ui-1"></i></button>
      </div>

      <div id="search" class="collapse d-sm-block col-sm-auto col-12 ml-auto order-3">
        <div class="pt-sm-0 pt-20 pb-sm-0 pb-40 mt-sm-0 mt-n30">
                      <input type="search" placeholder="Search Unit 42" id="innerSearch" class="header__search" value="" required aria-label="Inner Search">
                  </div>
      </div>

      <div class="col-auto d-sm-none d-flex ml-auto align-items-center order-5">
        <button class="btn__menu rounded" data-toggle="collapse" data-target="#navigation">Menu</button>
      </div>
    </div>
  </div>
</header>

<nav id="navigation" class="site-nav collapse d-sm-block pb-20 mt-sm-10"  style="display: none!important;">
  <div class="container px-sm-30">
    <ul id="menu-primary-navigation" class="main-menu d-sm-flex font-weight-medium"><li id="menu-item-97290" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-97290"><a href="https://unit42.paloaltonetworks.com/tools/">Tools</a></li>
<li id="menu-item-41" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-41"><a href="https://unit42.paloaltonetworks.com/atoms/">ATOMs</a></li>
<li id="menu-item-119884" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-119884"><a target="_blank" rel="noopener" href="https://www.paloaltonetworks.com/unit42">Security Consulting</a></li>
<li id="menu-item-81229" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-81229"><a href="https://unit42.paloaltonetworks.com/about-unit-42/">About Us</a></li>
<li id="menu-item-121229" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-121229"><a href="https://start.paloaltonetworks.com/contact-unit42.html"><b style="color:#C84727">Under Attack?</b></a></li>
</ul>  </div>
</nav>
<div class="panClean pan-template-home" id="main-nav-menu-cont" style="display:none;">
    <div class="cleanHeader mainNavigationComp baseComponent parbase">
        <div class="productNav2021Component dark default" id="PAN_2021_NAV_ASYNC">
        </div>
  </div>
<div class="cleanTopHtml htmlComp baseComponent parbase"><div class="base-component-spacer spacer-none  "></div>
</div>
</div>
<!--  Start: Scripts Migrated From Unit42-v5 -->
<script type="text/javascript">
	function getCookie(cname) {
	 	var name = cname + "=";
  		var decodedCookie = decodeURIComponent(document.cookie);
		var ca = decodedCookie.split(';');
  		for(var i = 0; i <ca.length; i++) {
    			var c = ca[i];
    			while (c.charAt(0) == ' ') {
     				 c = c.substring(1);
    			}
    			if (c.indexOf(name) == 0) {
    				 return c.substring(name.length, c.length);
    			}
  		}
  		return "";
	}

	var referer = "";//sessionStorage.container;
	var pcontainer = sessionStorage.getItem("container");
	var searchResultsPagePath = "";
	if(((pcontainer) && pcontainer.indexOf('Prisma')!=-1)){
	    referer = 'Prisma' ;
	}
        else if(((pcontainer) && pcontainer.indexOf('Cortex')!=-1)){
	    referer = 'Cortex' ;
	}
        else if(((pcontainer) && pcontainer.indexOf('Sase')!=-1)){
	    referer = 'Sase' ;
	}
	else if(((pcontainer) && pcontainer.indexOf('Unit')!=-1)){
	    referer = 'Unit' ;
	}
	else if(((pcontainer) && pcontainer.indexOf('Ngfw')!=-1)){
	    referer = 'Ngfw' ;
	}
        var fromRef = document.referrer;
        var nContainer = getCookie("navContainer");
        if(nContainer){//If user is coming from main site, we need to reset the container		
		if(fromRef  && fromRef.indexOf("prismacloud.io")!=-1){
                        referer = 'Prisma' ;
                        sessionStorage.setItem("container","Prisma");
                } else if(fromRef.indexOf("paloaltonetworks.com")!=-1 || fromRef.indexOf("paloaltonetworks.jp")!=-1 ){
                        if(nContainer.indexOf('Prisma') != -1){
                            referer = 'Prisma' ;
                            sessionStorage.setItem("container","Prisma");
                        }
                        if(nContainer.indexOf('Cortex') != -1){
                            referer = 'Cortex' ;
                            sessionStorage.setItem("container","Cortex");
                        }
			if(nContainer.indexOf('Sase') != -1){
                            referer = 'Sase' ;
                            sessionStorage.setItem("container","Sase");
                        }
			if(nContainer.indexOf('Unit') != -1){
                            referer = 'Unit' ;
                            sessionStorage.setItem("container","Unit");
                        }
			if(nContainer.indexOf('Ngfw') != -1){
                            referer = 'Ngfw' ;
                            sessionStorage.setItem("container","Ngfw");
                        }
			document.cookie = 'navContainer=; path=/; domain=.paloaltonetworks.com; expires=' + new Date(0).toUTCString();
		}
	}
if(referer != "Prisma" && referer != "Cortex" && referer != "Sase" && referer != "Unit" && referer != "Ngfw") {
    referer = 'Unit' ;
    sessionStorage.setItem("container","Unit");
}
function callMainSitePrismaNavHTML(){
    
    var referrer_domain = 'https://www.paloaltonetworks.com';
    sessionStorage.setItem("domain",referrer_domain);
    if(referer == 'Prisma'){
        var menu_url = referrer_domain+'/_jcr_content/globals/cleanHeaderPrisma.prismaRenderer.html';
        searchResultsPagePath = referrer_domain+"/search/prismasearch";
        }
    if(referer == 'Cortex'){
        var menu_url = referrer_domain+'/_jcr_content/globals/cleanHeaderCortex.cortexRenderer.html';	
        searchResultsPagePath = referrer_domain+"/search/cortexsearch";	
    }
    if(referer == 'Sase'){
        var menu_url = referrer_domain+'/_jcr_content/globals/cleanHeaderSase.saseRenderer.html';
        searchResultsPagePath = referrer_domain+"/search/sasesearch";
    }
    if(referer == 'Unit'){
        var menu_url = 'https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/unit-nav-renderer.php';
        searchResultsPagePath = referrer_domain+"/content/pan/en_US/search/unit42search";
		    }
    if(referer == 'Ngfw'){
        var menu_url = 'https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/ngfw-cdss-nav-renderer.php';
        searchResultsPagePath = referrer_domain+"/search/ngfwcdsssearch";
    }
    httpGet(menu_url,'menu_html');
    document.getElementById('main-nav-menu-cont').removeAttribute("style");
}
function addStyle(styles) {            
    /* Create style document */
    var css = document.createElement('style');
    css.type = 'text/css';

    if (css.styleSheet) 
        css.styleSheet.cssText = styles;
    else 
        css.appendChild(document.createTextNode(styles));

    /* Append style to the tag name */
    document.getElementsByTagName("head")[0].appendChild(css);
}
function httpGet(theUrl,req_type) {
    if (window.XMLHttpRequest) { // code for IE7+, Firefox, Chrome, Opera, Safari
        xmlhttp=new XMLHttpRequest();
    } else {// code for IE6, IE5
        xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
    }
    xmlhttp.onreadystatechange=function()
    {
        if (xmlhttp.readyState==4 && xmlhttp.status==200)
        {
            if(req_type == 'menu_html'){
            var nav_text = xmlhttp.responseText.replaceAll('https://static.cloud.coveo.com/searchui/v2.9159/js/CoveoJsSearch.Lazy.min.js', '');
            nav_text = nav_text.replaceAll('src="/', 'src="'+maindomain_lang+'/');
            nav_text = nav_text.replaceAll("'/content", "'"+maindomain_lang+"/content");
                        
            document.getElementById("PAN_2021_NAV_ASYNC").innerHTML = nav_text.replaceAll('href="/', 'href="'+maindomain_lang+'/');

            var lozad_back = document.getElementsByClassName('lozad-background');
            Array.prototype.forEach.call(lozad_back, function(el) {
            // Do stuff here
            var el_back_img_path = el.getAttribute('data-background-image');
            var first_pos = el_back_img_path.indexOf("'");
            var last_pos = el_back_img_path.indexOf("'",first_pos+1);
            el_back_img_path = el_back_img_path.substring(first_pos+1,last_pos);
            el.setAttribute("data-background-image",main_site_url+el_back_img_path);
            });
            }
            if(req_type == 'head_inline_css'){
            addStyle(xmlhttp.responseText);
            }
        }
    }
    xmlhttp.open("GET", theUrl, true );
    xmlhttp.send();    
}    
    
if(referer == 'Prisma' || referer == 'Cortex' || referer == 'Sase' || referer == 'Unit' || referer == 'Ngfw'){
    const article = document.querySelector('#PAN_2021_NAV_ASYNC');
    if(referer == 'Prisma'){
        article.dataset.type = 'prisma';
        $('#PAN_2021_NAV_ASYNC').removeClass('default').addClass('defaultRedesigned');
    }
    else if(referer == 'Cortex'){
        article.dataset.type = 'cortex';
    }
    else if(referer == 'Sase'){
        article.dataset.type = 'sase';
    }
    else if(referer == 'Unit'){
        article.dataset.type = 'unit';
    }
    else if(referer == 'Ngfw'){
        article.dataset.type = 'ngfw';
    }
    //set class to default
    if(referer == 'Unit' || referer == 'Ngfw'){
        $('#PAN_2021_NAV_ASYNC').removeClass('default').addClass('defaultRedesigned');
    }
    callMainSitePrismaNavHTML();        
}
</script>
<!--  End: Scripts Migrated From Unit42-v5 -->



<main class="main">
    <section class="section section--article">
        <div class="pa article-banner" style="background-image:url('https://unit42.paloaltonetworks.com/wp-content/uploads/2016/09/unit42-web-banner-650x300.jpg')">
          <div class="l-container"> 
            <div class="l-breadcrumbs"> 
              <ul> <li> <a href="https://unit42.paloaltonetworks.com" role="link" title="Threat Research" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:breadcrumb:Threat Research">Threat Research Center</a></li><li><a href="https://unit42.paloaltonetworks.com/category/threat-research/" role="link" title="Threat Research" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:breadcrumb:Threat Research">Threat Research</a></li><li class="is-current"><a href="https://unit42.paloaltonetworks.com/category/malware/" role="link" title="Malware" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:breadcrumb:Malware">Malware</a></li> </ul>
            </div>            <div class="ab__title">
              <a class="card-category" href="https://unit42.paloaltonetworks.com/category/malware/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:Malware"><span class="ab-title__pre">Malware</span></a> 
              <h1>OilRig Actors Provide a Glimpse into Development and Testing Efforts</h1>
              <div class="ab__video">
              <span class="duration"> 
                <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-clock.svg" alt="Clock Icon"><span class="span-reading-time rt-reading-time"><span class="rt-label rt-prefix"></span> <span class="rt-time"> 18</span> <span class="rt-label rt-postfix"></span></span> min read              </span>
                              </div>          
              <div class="ab-lc__wrapper">
                              </div>
            </div>
          </div>
          <div class="ab__footer">
            <div class="l-container">
              <div class="ab__footer-wrapper">
                <ul class="ab__features" role="list">
                  <li role="listitem">
				 <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-profile-grey.svg" alt="Profile Icon">
					 <div class="ab__text"><span>By:</span><ul class="ab__tags"><li><a data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:Robert Falcone" href="https://unit42.paloaltonetworks.com/author/robertfalcone/">Robert Falcone</a></li></ul></div></li>                  <li role="listitem">
			<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-calendar-grey.svg" alt="Published Icon">
			<div class="ab__text"><span>Published:</span>27 April, 2017 at 1:00 PM PDT</div></li>					<li role="listitem"><img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-category.svg" alt="Tags Icon"><div class="ab__text"><span>Categories:</span><ul class="ab__tags"><li><a data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:Malware" href="https://unit42.paloaltonetworks.com/category/malware/">Malware</a></li><li><a data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:Threat Research" href="https://unit42.paloaltonetworks.com/category/threat-research/">Threat Research</a></li></ul></div>
		</li>                  <li role="listitem"><img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-tags-grey.svg" alt="Tags Icon"><div class="ab__text"><span>Tags:</span><ul class="ab__tags"><li><a data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:Clayside" href="https://unit42.paloaltonetworks.com/tag/clayside/">Clayside</a></li><li><a data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:Helminth" href="https://unit42.paloaltonetworks.com/tag/helminth/">Helminth</a></li><li><a data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:OilRig" href="https://unit42.paloaltonetworks.com/tag/oilrig/">OilRig</a></li><li><a data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:OilRig attacks" href="https://unit42.paloaltonetworks.com/tag/oilrig-attacks/">OilRig attacks</a></li></ul></div>
		</li>                </ul>
                <div class="ab__options">
                  <ul role="list">
                                        <li role="listitem"><a href="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/?pdf=download&#038;lg=en&#038;_wpnonce=fc7ec9367f" role="link" target="_blank"  title="Click here to download" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:pdfdownload"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-download.svg" alt="Download Icon"></a></li>
                    <li role="listitem"><a href="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/?pdf=print&#038;lg=en&#038;_wpnonce=fc7ec9367f" target="_blank" role="link" title="Click here to print" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:hero:pdfprint"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-print.svg" alt="Print Icon"></a></li>
                  </ul>
                  
	<div class="ab__share" id="shareDropdown" role="button" aria-expanded="false">
	<a href="#" role="link" title="Click here to share" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:share" class="">Share<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/down-arrow.svg" alt="Down arrow"></a><ul class="share-dropdown" role="menu">
				<li role="menuitem">
					<a href="#" class="copy-url" id="copyUrl" data-url="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/" role="link" title="Copy link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:share:link"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-share-link.svg" alt="Link Icon"></a>
				</li>
				<li role="menuitem">
					<a href="mailto:?subject=OilRig%20Actors%20Provide%20a%20Glimpse%20into%20Development%20and%20Testing%20Efforts&#038;body=Check%20out%20this%20article%20https%3A%2F%2Funit42.paloaltonetworks.com%2Funit42-oilrig-actors-provide-glimpse-development-testing-efforts%2F" role="link" title="Share in email" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:share:email"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-sms.svg" alt="Link Email"></a>
				</li>
				<li role="menuitem">
					<a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Funit42.paloaltonetworks.com%2Funit42-oilrig-actors-provide-glimpse-development-testing-efforts%2F" target="_blank" role="link" title="Share in Facebook" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:share:facebook"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-fb-share.svg" alt="Facebook Icon"></a>
				</li>
				<li role="menuitem">
					<a href="https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Funit42.paloaltonetworks.com%2Funit42-oilrig-actors-provide-glimpse-development-testing-efforts%2F&#038;title=OilRig%20Actors%20Provide%20a%20Glimpse%20into%20Development%20and%20Testing%20Efforts" target="_blank" role="link" title="Share in LinkedIn" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:share:linkedin"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-linkedin-share.svg" alt="LinkedIn Icon"></a>
				</li>
				<li role="menuitem">
					<a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Funit42.paloaltonetworks.com%2Funit42-oilrig-actors-provide-glimpse-development-testing-efforts%2F&#038;text=OilRig%20Actors%20Provide%20a%20Glimpse%20into%20Development%20and%20Testing%20Efforts" target="_blank" role="link" title="Share in Twitter" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:share:twitter"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-twitter-share.svg" alt="Twitter Icon"></a>
				</li>
				<li role="menuitem">
					<a href="//www.reddit.com/submit?url=https%3A%2F%2Funit42.paloaltonetworks.com%2Funit42-oilrig-actors-provide-glimpse-development-testing-efforts%2F" target="_blank" role="link" title="Share in Reddit" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:share:reddit"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-reddit-share.svg" alt="Reddit Icon"></a>
				</li>
				<li role="menuitem">
					<a href="https://mastodon.social/share?text=OilRig%20Actors%20Provide%20a%20Glimpse%20into%20Development%20and%20Testing%20Efforts%20https%3A%2F%2Funit42.paloaltonetworks.com%2Funit42-oilrig-actors-provide-glimpse-development-testing-efforts%2F" target="_blank" role="link" title="Share in Mastodon" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:share:mastodon"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-mastodon-share.svg" alt="Mastodon Icon"></a>
				</li>
	  </ul>
    </div>                </div>
              </div>
            </div>
          </div>
        </div>
      </section> 
    <section class="section blog-contents"> 
      <div class="pa blog-editor">
        <div class="l-container">
          <div class="be__wrapper">
            <div class="be__contents">
              <div class="be__contents-wrapper">
                <p class="wpml-ls-statics-post_translations wpml-ls">This post is also available in: 
    <span class="wpml-ls-slot-post_translations wpml-ls-item wpml-ls-item-ja wpml-ls-first-item wpml-ls-last-item wpml-ls-item-legacy-post-translations"><a href="https://unit42.paloaltonetworks.jp/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/" class="wpml-ls-link"><span class="wpml-ls-native" lang="ja">日本語</span><span class="wpml-ls-display"><span class="wpml-ls-bracket"> (</span>Japanese<span class="wpml-ls-bracket">)</span></span></a></span></p><p>Throughout an attack campaign, actors will continue to develop their tools in an attempt to remain undetected and to carry out multiple attacks without having to completely retool. In regard to the attack lifecycle, development of tools occurs in the weaponization/staging phase that precedes the delivery phase, of which is typically the first opportunity we see the actors’ activities as they interact directly with their target. We have been presented with a rare opportunity to see some development activities from the actors associated with the <a href="https://blog.paloaltonetworks.com/tag/oilrig-attacks/">OilRig attack</a> campaign, a campaign Unit 42 has been following since May 2016. Recently we were able to observe these actors making modifications to their <a href="https://blog.paloaltonetworks.com/tag/clayside/">ClaySlide delivery documents</a> in an attempt to evade antivirus detection.</p>
<p>We have identified two separate testing efforts carried out by the OilRig actors, one occurring in June and one in November of 2016. The sample set associated with each of these testing activities is rather small, but the changes made to each of the files give us a chance to understand what modifications the actor performs in an attempt to evade detection. This testing activity also suggests that the threat group responsible for the OilRig attack campaign have an organized, professional operations model that includes a testing component to the development of their tools.</p>
<h3>Testing Activity, Analysis, and Methodology</h3>
<p>We collected two sets of ClaySlide samples that appear to be created during the OilRig actor’s development phase of their attack lifecycle. The threat actor uploaded each of these files to a popular antivirus testing website to find out which vendors detected the file. The actor then made subtle modifications to the file and uploaded the newly created file to the same popular antivirus testing website in order to determine how to evade detection. The flowchart in Figure 1explains the process in which the threat actors followed during their testing activities.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_1.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-27834" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_1.png" alt="oilrig_1" width="315" height="601" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_1.png 315w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_1-157x300.png 157w" sizes="(max-width: 315px) 100vw, 315px" /></a></p>
<p><em>Figure 1 Flowchart describing the testing process carried out by OilRig actor</em></p>
<p>Lucky for us, the threat actors do not modify the metadata within their delivery documents, which allows us to determine when the actor last modified each Word document. These untainted timestamps allow us to create a timeline that we can use to order the files as they were created by the actor. Our analysis methodology involves iteratively comparing each file with the next file in the timeline to determine the changes the actor made to the first file that resulted in the creation of the second file.</p>
<p>The first testing activity we observed began with an initial sample created on June 13, 2016 with 17 subsequent files created for testing purposes that the actor created in a two-hour period on June 15, 2016. Table 1shows the samples we observed associated with the June 2016 testing activity, including the iteration, the last modified timestamp, the hash, the filename, and the antivirus detection rate of the newly created file. The first “ttt.xls” file and the files with incrementing filenames have the same decoy contents, which is the reason we initially included this sample with this group despite the difference in naming. Also, the filename “ttt.xls” contains the acronym for “to the top”, which is common usage in Internet forums and could depict the actor starting testing activities.</p>
<table style="height: 940px;" width="671">
<tbody>
<tr>
<td width="58"><strong>Iteration</strong></td>
<td width="115"><strong>Modified</strong></td>
<td width="146"><strong>SHA256</strong></td>
<td width="60"><strong>Filename</strong></td>
<td width="34"><strong>AV</strong></td>
</tr>
<tr>
<td width="58">Base</td>
<td width="115">2016:06:13 05:28:32</td>
<td width="146">742a52084162d3789e19...</td>
<td width="60">ttt.xls</td>
<td width="34">4</td>
</tr>
<tr>
<td width="58">1</td>
<td width="115">2016:06:15 05:24:25</td>
<td width="146">f1de7b941817438da2a4...</td>
<td width="60">1.xls</td>
<td width="34">6</td>
</tr>
<tr>
<td width="58">2</td>
<td width="115">2016:06:15 05:28:11</td>
<td width="146">b142265bb4b902837d83...</td>
<td width="60">2.xls</td>
<td width="34">0</td>
</tr>
<tr>
<td width="58">3</td>
<td width="115">2016:06:15 05:30:45</td>
<td width="146">2e226a0210a123ad8288...</td>
<td width="60">3.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="58">4</td>
<td width="115">2016:06:15 05:33:11</td>
<td width="146">299bc738d7b0292820d9...</td>
<td width="60">4.xls</td>
<td width="34">4</td>
</tr>
<tr>
<td width="58">5</td>
<td width="115">2016:06:15 05:39:55</td>
<td width="146">6e62308b94455569b8a1...</td>
<td width="60">5.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="58">6</td>
<td width="115">2016:06:15 05:42:20</td>
<td width="146">d64b46cf42ea4a7bf291...</td>
<td width="60">6.xls</td>
<td width="34">1</td>
</tr>
<tr>
<td width="58">7</td>
<td width="115">2016:06:15 05:47:09</td>
<td width="146">77f8a267357a8d237e0b...</td>
<td width="60">8.xls</td>
<td width="34">1</td>
</tr>
<tr>
<td width="58">8</td>
<td width="115">2016:06:15 05:52:50</td>
<td width="146">92f429b6f9b8031b5fc6...</td>
<td width="60">9.xls</td>
<td width="34">3</td>
</tr>
<tr>
<td width="58">9</td>
<td width="115">2016:06:15 05:55:01</td>
<td width="146">c2a386723d8f203e1228...</td>
<td width="60">10.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="58">10</td>
<td width="115">2016:06:15 05:57:50</td>
<td width="146">2fb6bce8fc2f531de183...</td>
<td width="60">11.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="58">11</td>
<td width="115">2016:06:15 06:00:24</td>
<td width="146">75b033a40a756e2536d0...</td>
<td width="60">12.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="58">12</td>
<td width="115">2016:06:15 06:10:46</td>
<td width="146">8bb8f2bada27d14be021...</td>
<td width="60">13.xls</td>
<td width="34">1</td>
</tr>
<tr>
<td width="58">13</td>
<td width="115">2016:06:15 06:13:30</td>
<td width="146">3af6dfa4cebd82f48b66...</td>
<td width="60">14.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="58">14</td>
<td width="115">2016:06:15 06:16:27</td>
<td width="146">82239a4e18a67f7b2ba0...</td>
<td width="60">15.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="58">15</td>
<td width="115">2016:06:15 06:19:45</td>
<td width="146">938101a1a336ce0fff57...</td>
<td width="60">16.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="58">16</td>
<td width="115">2016:06:15 07:02:49</td>
<td width="146">5e9ddb25bde3719c392d...</td>
<td width="60">ttt.xls</td>
<td width="34">4</td>
</tr>
<tr>
<td width="58">17</td>
<td width="115">2016:06:15 07:39:53</td>
<td width="146">4190a8b8e6fa7bc37712...</td>
<td width="60">ttt.xls</td>
<td width="34">0</td>
</tr>
</tbody>
</table>
<p><em>Table 1 Samples associated with the June 2016 testing activities</em></p>
<p>The second testing activity of ClaySlide delivery documents began with the actor creating a base sample on November 14, 2016, followed by six subsequent test files created within a 30-minute window on the following day. Table 2 shows the pertinent information related to the ClaySlide testing activity that occurred in November 2016. Again, there was an obvious difference in filenames at the beginning of this activity, but we included the first two samples in with this group based on the first two files initially sharing decoy contents, but more importantly sharing the same macro code and payload scripts as the initial testing sample with the filename of “weak.xls”.</p>
<table style="height: 376px;" width="595">
<tbody>
<tr>
<td width="68"><strong>Iteration</strong></td>
<td width="120"><strong>Modified</strong></td>
<td width="149"><strong>SHA256</strong></td>
<td width="108"><strong>Filename</strong></td>
<td width="34"><strong>AV</strong></td>
</tr>
<tr>
<td width="68">Base</td>
<td width="120">2016:11:14 04:15:57</td>
<td width="149">ae40262d5fad4bc48066...</td>
<td width="108">Tables[Update].xls</td>
<td width="34">5</td>
</tr>
<tr>
<td width="68">1</td>
<td width="120">2016:11:15 07:53:50</td>
<td width="149">16880db37c35d4b28e68...</td>
<td width="108">33.xls</td>
<td width="34">5</td>
</tr>
<tr>
<td width="68">2</td>
<td width="120">2016:11:15 07:56:09</td>
<td width="149">47054a8d380c197a7f32...</td>
<td width="108">weak.xls</td>
<td width="34">5</td>
</tr>
<tr>
<td width="68">3</td>
<td width="120">2016:11:15 08:05:52</td>
<td width="149">e9ccf7a3c1e24f173ae9...</td>
<td width="108">weak.xls</td>
<td width="34">3</td>
</tr>
<tr>
<td width="68">4</td>
<td width="120">2016:11:15 08:12:11</td>
<td width="149">e3c6f13dc3079a828386...</td>
<td width="108">weak.xls</td>
<td width="34">3</td>
</tr>
<tr>
<td width="68">5</td>
<td width="120">2016:11:15 08:14:35</td>
<td width="149">427ce6b04d4319eeb84d...</td>
<td width="108">weak.xls</td>
<td width="34">2</td>
</tr>
<tr>
<td width="68">6</td>
<td width="120">2016:11:15 08:19:55</td>
<td width="149">18b603495f8344c02468...</td>
<td width="108">weak.xls</td>
<td width="34">2</td>
</tr>
</tbody>
</table>
<p><em>Table 2 Samples associated with the November 2016 testing activity</em></p>
<p>By analyzing the changes made to the ClaySlide delivery document during these two separate testing activities we were able to gain insight into the techniques used by the actors during the testing. Before reviewing the activities performed in the two testing sessions, the following high level observations can be made:</p>
<ul>
<li>Patterns in filenames emerge, with testing files having the same word or incrementing numbers for the filenames, or a set of testing files sharing the same exact filename</li>
<li>Very structured approach, using a baseline test sample followed by small iterative changes</li>
<li>Actor may also revert back to the baseline test sample and continue testing</li>
<li>Changes made only a few minutes apart and can involve:
<ul>
<li>Removal or location change of payload</li>
<li>Modified decoy contents and sheet names</li>
<li>Changes to function and variable names</li>
<li>Removal of entire lines of code</li>
<li>Obfuscating strings via concatenation or an alternate encoding (base64 or hexadecimal)</li>
<li>Reordering of functions in the code</li>
</ul>
</li>
<li>In many cases, testing files are no longer functional due to:
<ul>
<li>Removal of a required component(s)</li>
<li>Replacement of variables with nonsensical values</li>
<li>Use of encoded strings without ability to decode</li>
</ul>
</li>
<li>Testing activities ceases with a very low antivirus detection rate</li>
<li>The number of vendors detecting the samples increases and decrease throughout the testing as the actor attempts to determine what the detection signatures are triggering on</li>
</ul>
<h3>June 2016 Testing Activity</h3>
<p>In June 2016, an actor related to the OilRig campaign began a series of testing activities in an attempt to determine the portions of the ClaySlide macro code that antivirus vendors were using for detection purposes. These activities resulted in 17 different iterations of the ClaySlide delivery document, many of which no longer run properly due to the changes made within the files. We have included an exhaustive analysis of the June 2016 testing activity in Appendix A.</p>
<p>In the June testing, the actor started by removing the malicious payload from the Excel delivery document to focus their testing on the malicious macro. The actor made many iterative changes during their testing of the macro, however, the actor began these changes by completely removing a block of the code that was responsible for saving the payload to the system and for creating the scheduled task to run the payload. The removal of this code brought the detection rate to 0, which told the actor that the antivirus detection rules were detecting these files based on these lines of code. The actor spent most of their subsequent efforts modifying portions of this code.</p>
<p>Now that the actor knew the portion of the code that caused antivirus detection, the actor added that portion of the code back to the macro and made changes in attempt to determine the exact line of code that was detected. This process involved changing the commands used to create the payload and the scheduled task. The changes made to these two commands involved their complete removal, their replacement with non-functioning strings such as keyboard mashing and their equivalent strings in a variety of different encodings, including base64 and hexadecimal representation. The actor also changed the way these commands were executed as well, specifically by either using the WScript.Shell object directly or the object stored in a variable. The actor also uses intentional misspelling of commands, such as “poawearshell” and “scshtassks”, as well as variations to the filenames for the payloads, such as “firaeeye.vbs” instead of “fireeye.vbs”.</p>
<p>After making changes to the commands above, the actor shifted their focus onto changing the function names within the macro, which did not result in any change in the detection rate. After a 40-minute break, it appears the actor reverts to the base macro instead of modifying the previously created test file. Again, the actor modifies the code in the base macro responsible for saving and running the payload, but this time the actor changes the folder names it creates for the payload to store its generated files. Also, the two files generated during these activities that occurred after the actor reverted back to the base macro had keyboard-mashed strings for their decoy contents, which differed dramatically from the previous test files. During the entirety of this testing activity, the antivirus detection rate reached a high of 6 but ended with a zero vendors detecting the sample when the actor ceased testing activities, which suggests that the actor was satisfied with this result. However, we do not see conclusive evidence to suggest that the actor was attempting to evade a specific antivirus vendor.</p>
<h3>November 2016 Testing Activity</h3>
<p>On November 15, 2016, an actor related to the OilRig campaign began testing the ClaySlide delivery documents. While the testing activities in June began with the removal of the payloads from the delivery document, the files generated during the November testing all retained their Helminth payloads, all of which were the same payload that use the C2 domain of “updateorg[.]com”. We have included an exhaustive analysis of the November 2016 testing activity in Appendix B.</p>
<p>In the November testing, the actor appears to initially focus on making modifications to the Excel worksheet that contains the decoy contents. The changes made to the worksheet involved adding random strings to cells within the decoy, to changing the names of the worksheets themselves. Eventually, the actor completely changes the contents of the decoy to a different theme entirely, from a decoy containing routing settings to a list of weak passwords.</p>
<p>In addition to making changes to the Excel worksheets that contain the decoy content, the actor also made changes to the worksheet that is initially displayed to the user. Taking a step back, as discussed in the Appendix in our initial <a href="https://blog.paloaltonetworks.com/2016/05/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/">OilRig blog</a>, ClaySlide delivery documents initially open with a worksheet named “Incompatible” that displays content that instructs the user to “Enable Content” to see the contents of the document, which in fact runs the malicious macro and compromises the system. When the macro runs, it hides the “Incompatible” worksheet and displays the worksheet that contains the decoy document. The actor modified the “Incompatible” worksheet to include random strings, which appears to be an attempt to see if detection rules are using the hash of this sheet for detection purposes.</p>
<p>Meanwhile, during these changes to the “Incompatible” worksheet, the actor is also making changes to the malicious macro as well. The actor began changing the function names in the malicious macro from “Doom_Init” and “Doom_ShowHideSheets” to “Doon_Init” and “Doon_SHSheet” to “Ini” and “SHSheet”. At one point, the actor changed the order of the functions in the macro to see if it was the cause of detection. The actor also changed the variable name used to store the VB script used to run the Helminth payload from “BackupVbs” to “Backup_Vbs”.</p>
<p>Another change made during these testing activities involved the actor splitting the command needed to create the scheduled task in several strings and concatenating them back together. This technique is interesting, as the resulting command is still functional which differs dramatically from the modifications seen in the June testing where the commands were changed to a point where they were no longer operational.</p>
<p>The last change made to the malicious macro is the locations in which the macro obtains the payload. In all ClaySlide delivery documents, the macro obtains scripts related to the Helminth Trojan from specific cells within the “Incompatible” worksheet. By changing the cells containing the scripts, the actor is checking to see if detection rules are looking for scripts at these specific locations. By the time the threat actor ceased this testing activity, the actor had lowered the detection rate of the ClaySlide delivery document to 2, suggesting this was a satisfactory result. Like the June testing activity, we do not see conclusive evidence of the threat actor attempting to evade a specific antivirus vendor in the November testing.</p>
<h3>Conclusion</h3>
<p>The threat actors involved with the OilRig attack campaign have shown part of their playbook that involves testing and modifying their delivery documents prior to use in attacks. The purpose of these modifications is to evade detection from security products to extend the usage of their ClaySlide delivery documents. By analyzing these testing activities, we gain some helpful insight into the OilRig actors, specifically that this threat group is fairly mature from an operational standpoint and the fact that they hope to use their delivery documents as long as possible.</p>
<p>We were already aware of this threat group making modifications to their ClaySlide delivery document that we discussed in our <a href="https://blog.paloaltonetworks.com/2016/10/unit42-oilrig-malware-campaign-updates-toolset-and-expands-targets/">previous blog</a>. Now we know that there is an organized process involved that results in these changes, rather than the threat actor arbitrarily making changes to parts of the delivery documents, such as filenames and payload behavior. This realization suggests that the OilRig threat group will continue to use their delivery documents for extended periods with subtle modifications to remain effective.</p>
<h3>Appendix A</h3>
<p>This appendix contains an in-depth analysis of each iteration of testing activity carried out by the OilRig actors in June 2016. We provide screenshots and diffs between files (when available) to visualize the modifications made during the iteration.</p>
<p><strong>Iteration 1</strong></p>
<p>The actor removed all but three bytes from the VBS and PowerShell scripts, while the macro itself remains unchanged. This suggests that the delivery document no longer contains the malicious payload (Helminth scripts) used to infect the system. By removing the payload from the delivery document, the actor can isolate antivirus detection results based on the delivery document itself. Also, without the payload the samples no longer have some attributes and entities that security researchers typically use to correlate samples to a specific threat group, such as the C2 server of “update-kernal[.]net” that was in the payload in the base sample.</p>
<p>With the payload removed, the actor focuses their efforts in subsequent iterations on modifying the macro within the delivery document.</p>
<p><strong>Iteration 2</strong></p>
<p>The actor completely removed code that is responsible for a majority of the functionality within the macro. The code removed, as seen in Figure 2, is responsible for the following:</p>
<ol>
<li>Creating folders
<ol>
<li>\Libraries\up</li>
<li>\Libraries\dn</li>
<li>\Libraries\tp</li>
</ol>
</li>
<li>Running a PowerShell command to create
<ol>
<li>PowerShell script</li>
<li>VB script</li>
</ol>
</li>
<li>Running a command to create a scheduled task to run the VB script</li>
</ol>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_2.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-27858" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_2.png" alt="oilrig_2" width="900" height="330" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_2.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_2-300x110.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_2-768x282.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_2-370x136.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 2 Changes made in Iteration 2</em></p>
<p><strong>Iteration 3</strong></p>
<p>The actor adds the content removed in the previous iteration. However, the line of code responsible for running the command to create the scheduled task to run the VB script was omitted. This suggests the threat actor was testing to see if vendors were detecting ClaySlide samples based on this line within the macro.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_3.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-27882" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_3.png" alt="oilrig_3" width="900" height="331" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_3.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_3-300x110.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_3-768x282.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_3-370x136.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 3 Changes made in Iteration 3</em></p>
<p><strong>Iteration 4</strong></p>
<p>The actor adds the line of code omitted from the previous iteration, suggesting this specific code was not used for detection purposes. The actor also changed the method in which it calls the PowerShell script in the “cmd” variable, by using a “WScript.Shell” object stored in the “wss” variable instead of creating a new “WScript.Shell” object.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_4.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-27906" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_4.png" alt="oilrig_4" width="900" height="253" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_4.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_4-300x84.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_4-768x216.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_4-370x104.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 4 Changes made in Iteration 4</em></p>
<p><strong>Iteration 5</strong></p>
<p>The actor base64 encoded the contents of the ‘cmd’ variable that stored a command to invoke a PowerShell script that would save the payload to the filesystem. Also, the actor changed the command to create the scheduled task to be base64 encoded as well. These alterations do not come with a base64 decoding routine, suggesting that the sample generated in this iteration would result in an error. The lack of a decoding routine suggests that the actor does not waste time making sure the code actually works, as they could add code to support these changes.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_5.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-27930" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_5.png" alt="oilrig_5" width="900" height="276" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_5.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_5-300x92.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_5-768x236.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_5-370x113.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 5 Changes made in Iteration 5</em></p>
<p><strong>Iteration 6</strong></p>
<p>The actor tests to see if the base64 encoded strings added in the previous iteration were detected by removing these strings and leaving the two command strings empty.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_6.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-27954" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_6.png" alt="oilrig_6" width="900" height="275" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_6.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_6-300x92.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_6-768x235.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_6-370x113.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 6 Changes made in Iteration 6</em></p>
<p><strong>Iteration 7</strong></p>
<p>The actor adds the base64 encoded string for “powershell.exe” within the ‘cmd’ variable and in place of the command to create the scheduled task.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_7.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-27978" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_7.png" alt="oilrig_7" width="900" height="274" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_7.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_7-300x91.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_7-768x234.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_7-370x113.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 7 Changes made in Iteration 7</em></p>
<p><strong>Iteration 8</strong></p>
<p>The actor replaces the first base64 for “powershell.exe” with the base64 encoded string to run the PowerShell command, but replaces the second “powershell.exe” with the cleartext string to create the scheduled task. The base64 encoded PowerShell command is similar to those seen in previous iterations. However, the actor changed one of the filenames used to save the payload to “firaeeye.vbs” (from “fireeye.vbs”) and references a variable named “FireeayeVbs” (from “FireeyeVbs”) that does not appear in the code.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_8.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28002" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_8.png" alt="oilrig_8" width="900" height="288" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_8.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_8-300x96.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_8-768x246.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_8-370x118.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 8 Changes made in Iteration 8</em></p>
<p><strong>Iteration 9</strong></p>
<p>The actor replaces the cleartext string to create the scheduled task with the base64 encoded version of the string. However, the base64 encoded string changes the name of the created task from “GoogleUpdatesTaskMachineUI” to “GoosgleUpdatesTaskMachineUI” and the script name from “fireeye.vbs” to "fireeyse.vbs".</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_9.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28026" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_9.png" alt="oilrig_9" width="900" height="211" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_9.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_9-300x70.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_9-768x180.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_9-370x87.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 9 Changes made in Iteration 9</em></p>
<p><strong>Iteration 10</strong></p>
<p>The actor makes changes to the base64 encoded strings that used as a command to use PowerShell to install the payload and to schedule a task to run the payload. The base64 encoded PowerShell command reintroduces the filename “fireeye.vbs” and the variable name “FireeyeVbs”, both of which were changed in iteration 8; however, the base64 encoded command uses the string “poawearshell” instead of “powershell”.</p>
<p>As for the base64 string used to create the scheduled task, the actor reintroduced the scheduled task name of “GoogleUpdatesTaskMachineUI” and script filename of “fireeye.vbs”, which were changed in iteration 9. However, the actor uses the string “scshtassks” to see if the “schtasks” string was being detected.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_10.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28050" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_10.png" alt="oilrig_10" width="900" height="273" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_10.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_10-300x91.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_10-768x233.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_10-370x112.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 10 Changes made in Iteration 10</em></p>
<p><strong>Iteration 11</strong></p>
<p>The actor changed the base64 encoded strings within the ‘cmd’ variable and the string used to create the scheduled task. Instead of including the base64 encoded string of the PowerShell and create task command, the actor replaced these strings with the base64 encoded representation of the following string:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-671986dabd3eb879549857" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea  class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
source code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-
research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-671986dabd3eb879549857-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-671986dabd3eb879549857-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-671986dabd3eb879549857-1"><span class="crayon-e">source </span><span class="crayon-e">code </span><span class="crayon-e">from </span><span class="crayon-i">https</span><span class="crayon-sy">:</span><span class="crayon-c">//www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-</span></div><div class="crayon-line crayon-striped-line" id="crayon-671986dabd3eb879549857-2"><span class="crayon-i">research</span>/<span class="crayon-cn">2016</span>/<span class="crayon-cn">05</span>/<span class="crayon-i">targeted_attacksaga</span><span class="crayon-sy">.</span><span class="crayon-e">htmlsource </span><span class="crayon-e">code </span><span class="crayon-e">from </span><span class="crayon-i">https</span><span class="crayon-sy">:</span><span class="crayon-c">//www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.htmlsource code from https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>The string above contains a link to a <a href="https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html">FireEye blog</a> that provided an analysis of this delivery document. It should be noted that the following non-encoded string was included in previous samples as a comment within the macro:</p>
<p>'source code from https://www.fireeye.com/blog/threat-research/2016/05/tareted_attacksaga.html</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_11.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28074" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_11.png" alt="oilrig_11" width="900" height="273" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_11.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_11-300x91.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_11-768x233.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_11-370x112.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 11 Changes made in Iteration 11</em></p>
<p><strong>Iteration 12</strong></p>
<p>The actor replaced the base64 strings within the ‘cmd’ variable and the string to create the scheduled task with randomly typed letters. It appears the actor performed two-handed keyboard mashing to generate the strings used in these variables.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_12.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28098" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_12.png" alt="oilrig_12" width="900" height="272" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_12.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_12-300x91.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_12-768x232.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_12-370x112.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 12 Changes made in Iteration 12</em></p>
<p><strong>Iteration 13</strong></p>
<p>The actor changed the randomly typed keys in the ‘cmd’ and the string for creating the scheduled task with the base64 strings from two iterations back. However, the base64 strings were added between opening and closing brackets.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_13.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28122" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_13.png" alt="oilrig_13" width="900" height="272" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_13.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_13-300x91.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_13-768x232.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_13-370x112.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 13 Changes made in Iteration 13</em></p>
<p><strong>Iteration 14</strong></p>
<p>The actor changed the base64 encoded strings used for the PowerShell command and the command to create a scheduled task from the last iteration to a hexadecimal string. The string contains the hexadecimal representation of the characters that make up the command to create the scheduled task, which was last seen in Iteration 4. Again, the script does not contain decoding functions to decode the hexadecimal values to the correct characters, therefore this script is not functional.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_14.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28146" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_14.png" alt="oilrig_14" width="900" height="270" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_14.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_14-300x90.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_14-768x230.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_14-370x111.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 14 Changes made in Iteration 14</em></p>
<p><strong>Iteration 15</strong></p>
<p>The actor changed the two function names that are run when the Excel document is opened. In all prior iterations, these function names were “fireeye_Init” and “fireeye_ShowHideSheets”, which are responsible for installing the Trojan and displaying the decoy contents within the Excel spreadsheet, respectively. The actor changed these two function names to “fireeye_Init2” and “fireeye_ShowHideSheets3” to determine if the function names were being detected by antivirus products.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_15.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28170" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_15.png" alt="oilrig_15" width="900" height="520" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_15.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_15-300x173.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_15-768x444.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_15-370x214.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 15 Changes made in Iteration 15</em></p>
<p><strong>Iteration 16</strong></p>
<p>This iteration is very interesting, as we believe the actor reverts back to the base document instead of making changes to the document created in the previous iteration.</p>
<p>The filename changed from an incrementing number to “ttt.xls”, which is the same filename as the base document. Also, when we compared the sample from the previous iteration, there were a number of changes seen here:</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_16.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28194" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_16.png" alt="oilrig_16" width="900" height="865" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_16.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_16-300x288.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_16-768x738.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_16-370x356.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 16 Changes made in Iteration 16 if compared with the file in Iteration 15</em></p>
<p>However, if you compare the file created in this iteration with the base file, the number of and type of changes seem to align closer to the modifications performed in previous iterations. If the actor reverted to the base document as we suspect, then modifications were made to the script filename, the folder names that store files generated by the payload, as well as the method the script invokes the PowerShell script. The actor changed the script filename from “fireeye.vbs” to “fireueye.vbs”, changed the “up”, “dn” and “tp” folder names to “uup”, “dgn” and “tup” and uses the “WScript.Shell” object stored in the “wss” variable instead of creating a new “WScript.Shell” object to run the command.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_17.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28218" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_17.png" alt="oilrig_17" width="900" height="431" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_17.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_17-300x144.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_17-768x368.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_17-370x177.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 17 Changes made in Iteration 16 if actor reverted to the base file</em></p>
<p><strong>Iteration 17</strong></p>
<p>In the last iteration of this testing activity, the actor changed some of the modifications made in the previous iteration back to the values used in the base document, specifically the filenames and folder names. However, the actor also adds a new variable to store the “%PUBLIC%” environment variable that the script uses as the path to store the “fireeye.vbs” script and the folders that the payload would use. This iteration also includes a modified PowerShell command that attempts to run a command stored in the “fireeye.vbs” file, but does not include the portion of the command that would write the script to that file. The actor also removed the line that would run the command to create the scheduled task to run the VB script.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_18.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28242" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_18.png" alt="oilrig_18" width="900" height="435" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_18.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_18-380x184.png 380w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_18-300x145.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_18-768x371.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_18-370x179.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 18 Changes made in Iteration 17</em></p>
<h3>Appendix B</h3>
<p>This appendix contains an in-depth analysis of each iteration of testing activity carried out by the OilRig actors in November 2016. We provide screenshots and diffs between files (when available) to visualize the modifications made during the iteration.</p>
<p><strong>Iteration 1</strong></p>
<p>In the first iteration of this testing, the actor changed the decoy content from the base sample. At a high level, the decoy contents contained commands to configure a Cisco router with static routes and other settings. Originally, the base test file used in this testing activity contained just these configuration settings in an Excel worksheet named “Sheet1”, as seen in Figure 19.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_19.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28266" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_19.png" alt="oilrig_19" width="900" height="845" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_19.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_19-300x282.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_19-768x721.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_19-370x347.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 19 Original decoy contents found in the base test file</em></p>
<p>In the first iteration of testing, the actor changed the worksheet name that contains the decoy content from “Sheet1” to “hgvc” and added a string to the worksheet “jgvchhctf”, as seen in Figure 20. We believe the threat actor is attempting to determine if the worksheet name or the hash of the decoy worksheet were causing antivirus detection.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_20.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28290" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_20.png" alt="oilrig_20" width="900" height="848" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_20.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_20-300x283.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_20-768x724.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_20-370x349.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 20 Changes made to the decoy contents in Iteration 1</em></p>
<p><strong>Iteration 2</strong></p>
<p>The actor then changed the name of the worksheet that contains the decoy content from “hgcv” to “table” and completely changed the decoy content from the Cisco routing settings to a list of weak passwords, as seen in Figure 21. We believe this is the threat actor testing the new decoy content that they will use in an upcoming attack.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_21.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28314" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_21.png" alt="oilrig_21" width="900" height="1173" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_21.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_21-230x300.png 230w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_21-768x1001.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_21-786x1024.png 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_21-370x482.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 21 New decoy contents introduced in Iteration 2</em></p>
<p><strong>Iteration 3</strong></p>
<p>Following the lead of previous iterations, the actor made modifications to the content in the Excel worksheet; however, in this iteration the changes were not made to the decoy worksheet, rather the change was made to the initial worksheet called “Incompatible” that displays the message to instruct the user to enable content to run the macro. As seen in Figure 22, the actor adds the string “yy” to this worksheet to determine whether antivirus vendors were detecting Clayslide documents based on this worksheet.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_22.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28338" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_22.png" alt="oilrig_22" width="900" height="775" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_22.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_22-300x258.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_22-768x661.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_22-370x319.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 22 Changes made to the Incompatible worksheet in Iteration 3</em></p>
<p>The actor also made modifications to the macro in this iteration, specifically by changing function names and by splitting up strings and concatenating them back together. The function names in the macro “Doom_Init” and “Doom_ShowHideSheets” were changed to “Doon_Init” and “Doon_SHSheet” to determine if these function names were causing detection. Also, the actor split the word “powershell” in the commands within the macro and concatenated them together to retain functionality.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_23.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28362" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_23.png" alt="oilrig_23" width="900" height="691" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_23.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_23-300x230.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_23-768x590.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_23-370x284.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 23 Changes made to the macro in Iteration 3</em></p>
<p><strong>Iteration 4</strong></p>
<p>Much like the previous iteration, the threat actor makes changes to the Incompatible worksheet and the code within the macro. First, the threat actor added the string “hi” to two cells within the initially displayed Incompatible worksheet, as seen in Figure 24.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_24.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28386" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_24.png" alt="oilrig_24" width="900" height="254" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_24.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_24-300x85.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_24-768x217.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_24-370x104.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 24 Changes made to the Incompatible worksheet in Iteration 4</em></p>
<p>The actor also made modifications to the macro in this iteration, as seen in Figure 25. The actor changed the two function names from “Doon_Ini” and “Doon_SHSheet” to “Ini” and “SHSheet” respectively. Also, the actor changed the variable name that stores the VB script obtained from the spreadsheet from “BackupVbs” to “Backup_Vbs”, and modified the PowerShell command to use this new variable as well. Lastly, the actor further split the name of the created task using concatenation to retain functionality.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_25.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28410" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_25.png" alt="oilrig_25" width="900" height="742" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_25.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_25-300x247.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_25-768x633.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_25-370x305.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 25 Changes made to the macro in Iteration 4</em></p>
<p><strong>Iteration 5</strong></p>
<p>In this iteration, the actor rearranges the order of the functions in the script, specifically putting the “Ini” function before the “SHSheet” function. Figure 26 shows this function reordering.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_26.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28434" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_26.png" alt="oilrig_26" width="900" height="737" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_26.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_26-300x246.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_26-768x629.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_26-370x303.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 26 Changes made to the macro within Iteration 5</em></p>
<p><strong>Iteration 6</strong></p>
<p>In the final iteration of testing, the actor moves the base64 encoded VB Script and the two base64 encoded PowerShell scripts to three different cells within the Incompatible worksheet. The actor also changes the macro to access the base64 encoded strings from these new locations, which retains the functionality of this document.</p>
<p><a href="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_27.png" rel="wpdevart_lightbox"><img decoding="async" class="alignnone size-full wp-image-28458" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_27.png" alt="oilrig_27" width="900" height="294" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_27.png 900w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_27-300x98.png 300w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_27-768x251.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2017/04/oilrig_27-370x121.png 370w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p><em>Figure 27 Changes made to the macro in Iteration 6</em></p>
<p>&nbsp;</p>
      
              </div>
              <!--<span class="post__date">Updated 1 November, 2018 at 12:24 PM PDT</span>-->
              <button class="l-btn back-to-top" id="backToTop" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:back to top">Back to top</button>
              
			<div class="be__tags-wrapper"> 
				<h3>Tags</h3><ul role="list"><li role="listitem"><a href="https://unit42.paloaltonetworks.com/tag/clayside/" role="link" title="Clayside" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:tags:Clayside">Clayside</a></li><li role="listitem"><a href="https://unit42.paloaltonetworks.com/tag/helminth/" role="link" title="Helminth" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:tags:Helminth">Helminth</a></li><li role="listitem"><a href="https://unit42.paloaltonetworks.com/tag/oilrig/" role="link" title="OilRig" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:tags:OilRig">OilRig</a></li><li role="listitem"><a href="https://unit42.paloaltonetworks.com/tag/oilrig-attacks/" role="link" title="OilRig attacks" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:tags:OilRig attacks">OilRig attacks</a></li></ul>
			</div> 
              <div class="be__post-nav">
    <a class="prev" href="https://unit42.paloaltonetworks.com" role="link" title="Threat Research" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:article-nav:Threat Research Center"> 
        <span>Threat Research Center</span>
    </a>
            <a class="next" href="https://unit42.paloaltonetworks.com/unit42-mole-ransomware-one-malicious-spam-campaign-quickly-increased-complexity-changed-tactics/" role="link" title="Mole Ransomware: How One Malicious Spam Campaign Quickly Increased Complexity and Changed Tactics" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:article-nav:Mole Ransomware: How One Malicious Spam Campaign Quickly Increased Complexity and Changed Tactics"> 
            <span>Next: Mole Ransomware: How One Malicious Spam Campaign Quickly Increased Complexity and Changed Tactics</span>
        </a>
    </div>
 
            </div>
            <div class="be__nav">
            <div class="be__nav-wrapper">
   
        <div class="be-related-articles">
        <h3>Related Articles</h3>
        <ul> 
                        <li>
                  <a href="https://unit42.paloaltonetworks.com/oilrig-novel-c2-channel-steganography/" role="link" title="article - table of contents" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:sidebar:related-articles:OilRig Targets Middle Eastern Telecommunications Organization and Adds Novel C2 Channel with Steganography to Its Inventory">
                      OilRig Targets Middle Eastern Telecommunications Organization and Adds Novel C2 Channel with Steganography to Its Inventory                  </a>
              </li>
                            <li>
                  <a href="https://unit42.paloaltonetworks.com/threat-brief-iranian-linked-cyber-operations/" role="link" title="article - table of contents" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:sidebar:related-articles:Threat Brief: Iranian-Linked Cyber Operations">
                      Threat Brief: Iranian-Linked Cyber Operations                  </a>
              </li>
                            <li>
                  <a href="https://unit42.paloaltonetworks.com/behind-the-scenes-with-oilrig/" role="link" title="article - table of contents" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:sidebar:related-articles:Behind the Scenes with OilRig">
                      Behind the Scenes with OilRig                  </a>
              </li>
                      </ul>
      </div>
      </div> 
            </div>
          </div>
        </div>
          <div class="pa related-threat">
    <div class="l-container">
            <h2>Related Malware Resources</h2>
      <div class="blog-slider" id="blogSlider"> 
                    <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/10/03_Nation-State-cyberattacks_1920x900-786x368.jpg" class="attachment-medium size-medium" alt="Pictorial representation of a campaign like Contagious Interview. Digital graphic of a glowing globe with network connections and data streams, symbolizing global connectivity and technology advancements." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/10/03_Nation-State-cyberattacks_1920x900-786x368.jpg 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/10/03_Nation-State-cyberattacks_1920x900-1493x700.jpg 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/10/03_Nation-State-cyberattacks_1920x900-768x360.jpg 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/10/03_Nation-State-cyberattacks_1920x900-1536x720.jpg 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/10/03_Nation-State-cyberattacks_1920x900.jpg 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-research/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Contagious Interview: DPRK Threat Actors Lure Tech Industry Job Seekers to Install New Variants of BeaverTail and InvisibleFerret Malware:Threat Research"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-threat-research.svg" alt=" category icon">Threat Research</span></a>                  <a href="https://unit42.paloaltonetworks.com/north-korean-threat-actors-lure-tech-job-seekers-as-fake-recruiters/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Contagious Interview: DPRK Threat Actors Lure Tech Industry Job Seekers to Install New Variants of BeaverTail and InvisibleFerret Malware">
                    <h4 class="post-title">Contagious Interview: DPRK Threat Actors Lure Tech Industry Job Seekers to Install New Variants of BeaverTail and InvisibleFerret Malware</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/north-korea/" title="North Korea" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Contagious Interview: DPRK Threat Actors Lure Tech Industry Job Seekers to Install New Variants of BeaverTail and InvisibleFerret Malware:North Korea">North Korea</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/social-engineering/" title="social engineering" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Contagious Interview: DPRK Threat Actors Lure Tech Industry Job Seekers to Install New Variants of BeaverTail and InvisibleFerret Malware:social engineering">Social engineering</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/python/" title="Python" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Contagious Interview: DPRK Threat Actors Lure Tech Industry Job Seekers to Install New Variants of BeaverTail and InvisibleFerret Malware:Python">Python</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/north-korean-threat-actors-lure-tech-job-seekers-as-fake-recruiters/" title="Contagious Interview: DPRK Threat Actors Lure Tech Industry Job Seekers to Install New Variants of BeaverTail and InvisibleFerret Malware" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Contagious Interview: DPRK Threat Actors Lure Tech Industry Job Seekers to Install New Variants of BeaverTail and InvisibleFerret Malware:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider"  data-card-link="https://unit42.paloaltonetworks.com/machine-learning-new-swiss-army-suite-tool/" data-video-cta-tracking="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Detecting Vulnerability Scanning Traffic From Underground Tools Using Machine Learning:card:video-modal:Read the article" data-video-title="Detecting Vulnerability Scanning Traffic From Underground Tools Using Machine Learning">
              <div class="card-media has-video" data-video="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Tutorial_Category_1505x922.jpg">
                              <figure>
                <img width="718" height="440" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Tutorial_Category_1505x922-718x440.jpg" class="attachment-medium size-medium" alt="A pictorial representation of machine learning detecting vulnerability scanning. A Black man using a tablet with a background of illuminated city buildings at night." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Tutorial_Category_1505x922-718x440.jpg 718w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Tutorial_Category_1505x922-1143x700.jpg 1143w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Tutorial_Category_1505x922-768x470.jpg 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Tutorial_Category_1505x922.jpg 1505w" sizes="(max-width: 718px) 100vw, 718px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-research/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Detecting Vulnerability Scanning Traffic From Underground Tools Using Machine Learning:Threat Research"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-threat-research.svg" alt=" category icon">Threat Research</span></a>                  <a href="https://unit42.paloaltonetworks.com/machine-learning-new-swiss-army-suite-tool/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Detecting Vulnerability Scanning Traffic From Underground Tools Using Machine Learning">
                    <h4 class="post-title">Detecting Vulnerability Scanning Traffic From Underground Tools Using Machine Learning</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/machine-learning/" title="Machine Learning" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Detecting Vulnerability Scanning Traffic From Underground Tools Using Machine Learning:Machine Learning">Machine Learning</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/machine-learning-new-swiss-army-suite-tool/" title="Detecting Vulnerability Scanning Traffic From Underground Tools Using Machine Learning" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Detecting Vulnerability Scanning Traffic From Underground Tools Using Machine Learning:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/06_Malware_Category_1920x900-786x368.jpg" class="attachment-medium size-medium" alt="Pictorial representation of keylogger malware like KLogEXE and FPSpy. Person working on a laptop with lines of code displayed on the screen, with a blurred effect indicating motion or activity, surrounded by a vivid blue and red lighting." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/06_Malware_Category_1920x900-786x368.jpg 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/06_Malware_Category_1920x900-1493x700.jpg 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/06_Malware_Category_1920x900-768x360.jpg 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/06_Malware_Category_1920x900-1536x720.jpg 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/06_Malware_Category_1920x900.jpg 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-actor-groups/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Unraveling Sparkling Pisces’s Tool Set: KLogEXE and FPSpy:Threat Actor Groups"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/07/threat-actor-groups.svg" alt=" category icon">Threat Actor Groups</span></a>                  <a href="https://unit42.paloaltonetworks.com/kimsuky-new-keylogger-backdoor-variant/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Unraveling Sparkling Pisces’s Tool Set: KLogEXE and FPSpy">
                    <h4 class="post-title">Unraveling Sparkling Pisces’s Tool Set: KLogEXE and FPSpy</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/mitre/" title="MITRE" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Unraveling Sparkling Pisces’s Tool Set: KLogEXE and FPSpy:MITRE">MITRE</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/keylogger/" title="Keylogger" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Unraveling Sparkling Pisces’s Tool Set: KLogEXE and FPSpy:Keylogger">Keylogger</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/north-korea/" title="North Korea" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Unraveling Sparkling Pisces’s Tool Set: KLogEXE and FPSpy:North Korea">North Korea</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/kimsuky-new-keylogger-backdoor-variant/" title="Unraveling Sparkling Pisces’s Tool Set: KLogEXE and FPSpy" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Unraveling Sparkling Pisces’s Tool Set: KLogEXE and FPSpy:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Malware_Category_1920x900-786x368.jpg" class="attachment-medium size-medium" alt="Pictorial representation of SnipBot. Digital abstract background featuring binary code and technology symbols with a blue glow in the shape of a skull." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Malware_Category_1920x900-786x368.jpg 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Malware_Category_1920x900-1493x700.jpg 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Malware_Category_1920x900-768x360.jpg 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Malware_Category_1920x900-1536x720.jpg 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/01_Malware_Category_1920x900.jpg 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-research/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Inside SnipBot: The Latest RomCom Malware Variant:Threat Research"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-threat-research.svg" alt=" category icon">Threat Research</span></a>                  <a href="https://unit42.paloaltonetworks.com/snipbot-romcom-malware-variant/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Inside SnipBot: The Latest RomCom Malware Variant">
                    <h4 class="post-title">Inside SnipBot: The Latest RomCom Malware Variant</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/backdoor/" title="backdoor" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Inside SnipBot: The Latest RomCom Malware Variant:backdoor">Backdoor</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/romcom/" title="RomCom" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Inside SnipBot: The Latest RomCom Malware Variant:RomCom">RomCom</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/snipbot-romcom-malware-variant/" title="Inside SnipBot: The Latest RomCom Malware Variant" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Inside SnipBot: The Latest RomCom Malware Variant:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/08_Security-Technology_Category_1920x900-786x368.jpg" class="attachment-medium size-medium" alt="A pictorial representation of a red team tool like Splinter. A digital illustration showing a 3D brain model surrounded by rising data columns on a circuit board, representing advanced artificial intelligence technology." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/08_Security-Technology_Category_1920x900-786x368.jpg 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/08_Security-Technology_Category_1920x900-1493x700.jpg 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/08_Security-Technology_Category_1920x900-768x360.jpg 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/08_Security-Technology_Category_1920x900-1536x720.jpg 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/08_Security-Technology_Category_1920x900.jpg 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-research/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Discovering Splinter: A First Look at a New Post-Exploitation Red Team Tool:Threat Research"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-threat-research.svg" alt=" category icon">Threat Research</span></a>                  <a href="https://unit42.paloaltonetworks.com/analysis-pentest-tool-splinter/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Discovering Splinter: A First Look at a New Post-Exploitation Red Team Tool">
                    <h4 class="post-title">Discovering Splinter: A First Look at a New Post-Exploitation Red Team Tool</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/red-teaming-tool/" title="red teaming tool" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Discovering Splinter: A First Look at a New Post-Exploitation Red Team Tool:red teaming tool">Red teaming tool</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/pentest-tool/" title="pentest tool" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Discovering Splinter: A First Look at a New Post-Exploitation Red Team Tool:pentest tool">Pentest tool</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/analysis-pentest-tool-splinter/" title="Discovering Splinter: A First Look at a New Post-Exploitation Red Team Tool" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Discovering Splinter: A First Look at a New Post-Exploitation Red Team Tool:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/word-image-449925-135181-16-786x368.png" class="attachment-medium size-medium" alt="Pictorial representation of APT groups from North Korea. The silhouette of two fish and the Pisces constellation inside an orange abstract planet, surrounded by two larger blue fish. Abstract, stylized cosmic setting with vibrant blue and purple shapes, representing space and distant planetary bodies." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/word-image-449925-135181-16-786x368.png 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/word-image-449925-135181-16-1493x700.png 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/word-image-449925-135181-16-768x360.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/word-image-449925-135181-16-1536x720.png 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/word-image-449925-135181-16.png 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-actor-groups/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Gleaming Pisces Poisoned Python Packages Campaign Delivers PondRAT Linux and MacOS Backdoors:Threat Actor Groups"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/07/threat-actor-groups.svg" alt=" category icon">Threat Actor Groups</span></a>                  <a href="https://unit42.paloaltonetworks.com/gleaming-pisces-applejeus-poolrat-and-pondrat/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Gleaming Pisces Poisoned Python Packages Campaign Delivers PondRAT Linux and MacOS Backdoors">
                    <h4 class="post-title">Gleaming Pisces Poisoned Python Packages Campaign Delivers PondRAT Linux and MacOS Backdoors</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/python/" title="Python" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Gleaming Pisces Poisoned Python Packages Campaign Delivers PondRAT Linux and MacOS Backdoors:Python">Python</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/cryptocurrency/" title="Cryptocurrency" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Gleaming Pisces Poisoned Python Packages Campaign Delivers PondRAT Linux and MacOS Backdoors:Cryptocurrency">Cryptocurrency</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/north-korea/" title="North Korea" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Gleaming Pisces Poisoned Python Packages Campaign Delivers PondRAT Linux and MacOS Backdoors:North Korea">North Korea</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/gleaming-pisces-applejeus-poolrat-and-pondrat/" title="Gleaming Pisces Poisoned Python Packages Campaign Delivers PondRAT Linux and MacOS Backdoors" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Gleaming Pisces Poisoned Python Packages Campaign Delivers PondRAT Linux and MacOS Backdoors:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/Pisces-NK-A-1920x900-1-786x368.png" class="attachment-medium size-medium" alt="Illustrative image featuring two fish and the Pisces constellation superimposed on a stylized, abstract background with flowing purple waves and a starry night sky." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/Pisces-NK-A-1920x900-1-786x368.png 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/Pisces-NK-A-1920x900-1-1493x700.png 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/Pisces-NK-A-1920x900-1-768x360.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/Pisces-NK-A-1920x900-1-1536x720.png 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/Pisces-NK-A-1920x900-1.png 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/top-cyberthreats/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Threat Assessment: North Korean Threat Groups:High Profile Threats"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/07/top-threats.svg" alt=" category icon">High Profile Threats</span></a>                  <a href="https://unit42.paloaltonetworks.com/threat-assessment-north-korean-threat-groups-2024/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Threat Assessment: North Korean Threat Groups">
                    <h4 class="post-title">Threat Assessment: North Korean Threat Groups</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/north-korea/" title="North Korea" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Threat Assessment: North Korean Threat Groups:North Korea">North Korea</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/remote-access-trojan/" title="Remote Access Trojan" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Threat Assessment: North Korean Threat Groups:Remote Access Trojan">Remote Access Trojan</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/finance/" title="Finance" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Threat Assessment: North Korean Threat Groups:Finance">Finance</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/threat-assessment-north-korean-threat-groups-2024/" title="Threat Assessment: North Korean Threat Groups" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Threat Assessment: North Korean Threat Groups:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/09-3-Stately-Taurus-1920x900-1-786x368.png" class="attachment-medium size-medium" alt="Pictorial representation of Stately Taurus&#039; updated TTPs. Illustration of a bull&#039;s head and the Taurus constellation inside a stylized orange moon, set against the profile of a much larger bull&#039;s head. Shooting stars are on the dark background." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/09-3-Stately-Taurus-1920x900-1-786x368.png 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/09-3-Stately-Taurus-1920x900-1-1493x700.png 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/09-3-Stately-Taurus-1920x900-1-768x360.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/09-3-Stately-Taurus-1920x900-1-1536x720.png 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/09/09-3-Stately-Taurus-1920x900-1.png 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-actor-groups/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Chinese APT Abuses VSCode to Target Government in Asia:Threat Actor Groups"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/07/threat-actor-groups.svg" alt=" category icon">Threat Actor Groups</span></a>                  <a href="https://unit42.paloaltonetworks.com/stately-taurus-abuses-vscode-southeast-asian-espionage/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Chinese APT Abuses VSCode to Target Government in Asia">
                    <h4 class="post-title">Chinese APT Abuses VSCode to Target Government in Asia</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/dll-sideloading/" title="DLL Sideloading" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Chinese APT Abuses VSCode to Target Government in Asia:DLL Sideloading">DLL Sideloading</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/advanced-persistent-threat/" title="Advanced Persistent Threat" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Chinese APT Abuses VSCode to Target Government in Asia:Advanced Persistent Threat">Advanced Persistent Threat</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/china/" title="China" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Chinese APT Abuses VSCode to Target Government in Asia:China">China</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/stately-taurus-abuses-vscode-southeast-asian-espionage/" title="Chinese APT Abuses VSCode to Target Government in Asia" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Chinese APT Abuses VSCode to Target Government in Asia:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/04_Malware_Category_1920x900-786x368.jpg" class="attachment-medium size-medium" alt="Pictorial representation of malware such as WikiLoader. Red and blue digital data flowing from microchips on a circuit board, representing high-tech computing." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/04_Malware_Category_1920x900-786x368.jpg 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/04_Malware_Category_1920x900-1493x700.jpg 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/04_Malware_Category_1920x900-768x360.jpg 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/04_Malware_Category_1920x900-1536x720.jpg 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/04_Malware_Category_1920x900.jpg 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-research/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Spoofed GlobalProtect Used to Deliver Unique WikiLoader Variant:Threat Research"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/icon-threat-research.svg" alt=" category icon">Threat Research</span></a>                  <a href="https://unit42.paloaltonetworks.com/global-protect-vpn-spoof-distributes-wikiloader/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Spoofed GlobalProtect Used to Deliver Unique WikiLoader Variant">
                    <h4 class="post-title">Spoofed GlobalProtect Used to Deliver Unique WikiLoader Variant</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/malvertising/" title="malvertising" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Spoofed GlobalProtect Used to Deliver Unique WikiLoader Variant:malvertising">Malvertising</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/dll-sideloading/" title="DLL Sideloading" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Spoofed GlobalProtect Used to Deliver Unique WikiLoader Variant:DLL Sideloading">DLL Sideloading</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/global-protect-vpn-spoof-distributes-wikiloader/" title="Spoofed GlobalProtect Used to Deliver Unique WikiLoader Variant" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Spoofed GlobalProtect Used to Deliver Unique WikiLoader Variant:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                <div class="pa l-card l-card--slider" >
              <div class="card-media " >
                              <figure>
                <img width="786" height="368" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/Fighting-URSA-1920x900-1-786x368.png" class="attachment-medium size-medium" alt="Pictorial representation of APT Fighting Ursa. The silhouette of a bear and the Ursa constellation inside an orange abstract planet. Abstract, stylized cosmic setting with vibrant blue and purple claw marks, representing space and distant planetary bodies." decoding="async" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/Fighting-URSA-1920x900-1-786x368.png 786w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/Fighting-URSA-1920x900-1-1493x700.png 1493w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/Fighting-URSA-1920x900-1-768x360.png 768w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/Fighting-URSA-1920x900-1-1536x720.png 1536w, https://unit42.paloaltonetworks.com/wp-content/uploads/2024/08/Fighting-URSA-1920x900-1.png 1920w" sizes="(max-width: 786px) 100vw, 786px" />                </figure> 
                            </div>
              <div class="card-content">
                <div class="card-content__wrapper">
                  <a class="card-category" href="https://unit42.paloaltonetworks.com/category/threat-actor-groups/" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Fighting Ursa Luring Targets With Car for Sale:Threat Actor Groups"><span class=""><img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/07/threat-actor-groups.svg" alt=" category icon">Threat Actor Groups</span></a>                  <a href="https://unit42.paloaltonetworks.com/fighting-ursa-car-for-sale-phishing-lure/" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Fighting Ursa Luring Targets With Car for Sale">
                    <h4 class="post-title">Fighting Ursa Luring Targets With Car for Sale</h4>
                  </a>
                  <ul class="card-tags" role="list">
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/advanced-persistent-threat/" title="Advanced Persistent Threat" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Fighting Ursa Luring Targets With Car for Sale:Advanced Persistent Threat">Advanced Persistent Threat</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/apt28/" title="APT28" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Fighting Ursa Luring Targets With Car for Sale:APT28">APT28</a>
				</li>
				<li role="listitem">
					<a href="https://unit42.paloaltonetworks.com/tag/fancy-bear/" title="Fancy Bear" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Fighting Ursa Luring Targets With Car for Sale:Fancy Bear">Fancy Bear</a>
				</li></ul>                </div>
                <div class="card-content__link">
                                    <a class="hyperlink" href="https://unit42.paloaltonetworks.com/fighting-ursa-car-for-sale-phishing-lure/" title="Fighting Ursa Luring Targets With Car for Sale" role="link" data-page-track="true" data-page-track-value="unit42-oilrig-actors-provide-glimpse-development-testing-efforts:related-resources:Fighting Ursa Luring Targets With Car for Sale:read now">
                    Read now                    <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-right-arrow-withtail.svg" alt="Right arrow">
                  </a>
                </div>
              </div>
            </div>
                                    </div>
    </div>
    <div class="l-container bs__controls">
      <div class="bs__progress"><span></span></div>
      <div class="bs__navigation"> 
        <ul>
          <li> 
            <button id="prevButton"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/slider-arrow-left.svg" alt="Slider arrow"></button>
          </li>
          <li> 
            <button id="nextButton"> <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/slider-arrow-left.svg" alt="Slider arrow"></button>
          </li>
        </ul>
      </div>
    </div>
  </div>
 
        <div class="be-enlarge-modal" id="enlargedModal">
          <div class="be-enlarge-modal__wrapper"> 
            <figure> 
              <button class="close__modal" id="closeModal"> 
              <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/close-modal.svg" alt="Close button"></button>
              <img class="be__enlarged-image" id="enlargedImage" src="" alt="Enlarged Image">
              <figcaption> </figcaption>
            </figure>
          </div>
        </div>

      </div>
    </section>
  </main>
<!--  Start: Footer subscription form -->
<div class="newsletter">
      <div class="l-container">
        <div class="newsletter__wrapper">
          <div class="image__wrapper"> 
            <picture>
			              	 <source media="(max-width:400px)" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/newsletter-Image-mobile.webp">
			  			               	 <source media="(max-width:949px)" srcset="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/newsletter-Image-tab.webp">
			  			  			  	<img src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/Revitalized_newsletter-Image-desktop-copy-1.webp" alt="Newsletter">
			              </picture>
          </div>
          <div class="content__wrapper"> 
		    							<span class="pre-title"> 
				<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/palo-alto-logo-small.svg" alt="UNIT 42 Small Logo">
				Get updates from Unit 42			</span>
						           	 <h2>Peace of mind comes from staying ahead of threats. Contact us today.</h2>
			            <form action="https://www.paloaltonetworks.com/apps/pan/public/formsubmithandler.submitform.json" method="post" novalidate class="subscribe-form" name="Unit42_Subscribe" id="unit42footerSubscription_form">
              <input type="hidden" name="emailFormMask" value="">
              <input type="hidden" value="1086" name="formid">
              <input type="hidden" value="531-OCS-018" name="munchkinId">
              <input type="hidden" value="2141" name="lpId">
              <input type="hidden" value="1203" name="programId">
              <input type="hidden" value="1086" name="formVid">
              <input type="hidden" name="mkto_optinunit42" value="true">
              <input type="hidden" name="mkto_opt-in" value="true">
              <div class="form-group"> 
                <label for="newsletter-email"  id="newsletter-email-label">Your Email</label>
                <input type="emal" placeholder="Your Email" name="Email"  class="subscribe-field" id="newsletter-email" aria-labelledby="newsletter-email-label">
                <p class="error-mail mb-15 text-danger" style="color: #dc3545"></p>
				<p>Subscribe for email updates to all Unit 42 threat research.<br />By submitting this form, you agree to our <a title="Terms of Use" href="https://www.paloaltonetworks.com/legal-notices/terms-of-use" data-page-track="true" data-page-track-value="Get updates from Unit 42:Terms of Use">Terms of Use</a> and acknowledge our <a title="Privacy Statement" href="https://www.paloaltonetworks.com/legal-notices/privacy" data-page-track="true" data-page-track-value="Get updates from Unit 42:Privacy Statement">Privacy Statement.</a></p>
                <div class="g-recaptcha" data-expired-callback="captchaExpires" data-callback="captchaComplete" data-sitekey="6Lc5EhgTAAAAAJa-DzE7EeWABasWg4LKv-R3ao6o"></div>
                <p class="error-recaptcha d-none mt-15 text-danger" style="color: #dc3545">Invalid captcha!</p>
                <button class="l-btn is-disabled" data-page-track="true" data-page-track-value="footer:Get updates from Unit 42:Subscribe" id="unit42footerSubscription_form_button"> 
					Subscribe					<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/right-arrow.svg" alt="Right Arrow"  class="arrow">
					<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-loader.svg" alt="loader" class="loader">
			   </button>
				<div class="form-success-message"></div>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

<script>

(function($) {
	// Migrated from the unit42-v5 + Modifications
	var subscribeSuccess = false;
	var email = document.getElementById('newsletter-email');
	var subscription_form = document.getElementById('unit42footerSubscription_form');
	var subscription_form_button = document.getElementById('unit42footerSubscription_form_button');
	window.captchaComplete = function() {
		subscribeSuccess = true;
		if ($(mail).val() != '' && isEmail($(mail).val())) {
			$(subscription_form_button).removeClass('is-disabled');
		}
		setTimeout(function() {
			$(email).focus();
			$('.g-recaptcha iframe').attr('tabindex', '-1');
		}, 100)
	}
	window.captchaExpires = function() {
		subscribeSuccess = false;
		$(subscription_form_button).addClass('is-disabled', true);
	} 
	$(subscription_form).submit(function(e) {
		e.preventDefault();
		e.stopImmediatePropagation();
		updateEmailMask();
		var success = true;
		var form = $(this);
		var mail = form.find('input[name="Email"]');
		
		if (mail.val() === '') {
			mail.addClass('has-error');
			showError(1);
			success = false;	
		}  else if (!isEmail(mail.val())){
			showError(2);
			success = false;
		}
		else {
			mail.removeClass('has-error');
			$('.error-mail').addClass('d-none');
		}

		if (!subscribeSuccess) {
			$('.error-recaptcha').removeClass('d-none');
		} else {
			$('.error-recaptcha').addClass('d-none');
		}

		if (success && subscribeSuccess) {
			$.ajax({
				type: 'POST',
				url: form.attr('action'),
				data: form.serialize(),
				beforeSend: function() {
                 form.find('button').addClass('is-loading');
    			},
				success: function(msg) {
					form.find('.form-success-message').html('<p class="success-message">You have been successfully subscribed</p>');
					form.find('button').removeClass('is-loading');
					$(email).val('');
					clearError();
				},
				error: function(jqXHR, textStatus, errorThrown) {
					$(subscription_form_button).addClass('is-disabled', true);
					form.find('button').removeClass('is-loading');
					
				}
			});
		}
		return false;
	});
	function showError(error_type){
		if(error_type == 1) {
			$('.error-mail').text("Please enter the email address.").addClass('error-show');
			$(subscription_form_button).addClass('is-disabled');
		} else if(error_type == 2){
			$('.error-mail').text("Please provide a valid e-mail address.").addClass('error-show');
			$(subscription_form_button).addClass('is-disabled');
		}	
		$(subscription_form_button).removeClass('is-loading');
	}
	function clearError(){
		$('.error-mail').text("").removeClass('error-show');;
		$(subscription_form_button).removeClass('is-loading');
		$(subscription_form_button).removeClass('is-disabled');
	}
	
	$(email).on('input', function (event) { 
		var email = $(this).val();
		if (isEmail(email) ) {			
			clearError();
		} else if(email == ""){
			clearError();
		} else{
			showError(2);			  
		}
    });

	function isEmail(email) {
		var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
		return re.test(String(email).toLowerCase());
	}
	
	var captcha_loaded = false;
         if(!captcha_loaded){
            // recaptcha on foucs call
            $(document).on('change paste keyup', '#newsletter-email', function () {
               if($('.g-recaptcha').hasClass('d-none')){
                $('.g-recaptcha').removeClass('d-none');
               }
               if(!captcha_loaded ){
                  captcha_loaded  = true;
                  // trigger loading api.js (recaptcha.js) script
                  var head = document.getElementsByTagName('head')[0];
                  var script = document.createElement('script');
                  script.type = 'text/javascript';
                  script.src = 'https://www.google.com/recaptcha/api.js?hl=en_US';
                  head.appendChild(script);
               }
            });
        }
	
	function updateEmailMask() {
		var email = $("#unit42footerSubscription_form input[name='Email']").val();
		if (email && email.trim() != '') {
			var maskedEmail = maskEmailAddress(email);
			$("#unit42footerSubscription_form input[name='emailFormMask']").val(maskedEmail);
		}
	}

	function maskEmailAddress (emailAddress) {
		function mask(str) {
			var strLen = str.length;
			if (strLen > 4) {
				return str.substr(0, 1) + str.substr(1, strLen - 1).replace(/\w/g, '*') + str.substr(-1,1);
			}
			return str.replace(/\w/g, '*');
		}
		return emailAddress.replace(/([\w.]+)@([\w.]+)(\.[\w.]+)/g, function (m, p1, p2, p3) {
			return mask(p1) + '@' + mask(p2) + p3;
		});

		return emailAddress;
	}

}(jQuery));
//# sourceMappingURL=main.js.map
	
</script>
<!--  End: Footer subscription form -->

<footer class="footer"> 
  <div class="footer-menu">
    <div class="l-container">
      <div class="footer-menu__wrapper">
        <div class="footer-menu-nav__wrapper">
                      <h3 class="footer-menu-nav__title">Products and services</h3>
                                <div class="nav-column__wrapper"> 
            <div class="nav-column">
              													<nav>
					<ul class="footer-menu-nav__list"> 
																	<li class="footer-menu-nav__item nav-title"> 
							<a href="https://www.paloaltonetworks.com/network-security"   role="link" title="Network Security Platform" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform">Network Security Platform</a>
						</li>    
																	<li class="footer-menu-nav__item nav-title"> 
							<a href="https://www.paloaltonetworks.com/network-security/security-subscriptions"   role="link" title="CLOUD DELIVERED SECURITY SERVICES" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES">CLOUD DELIVERED SECURITY SERVICES</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/network-security/advanced-threat-prevention" target=_blank  role="link" title="Advanced Threat Prevention" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention">Advanced Threat Prevention</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/network-security/advanced-dns-security"   role="link" title="DNS Security" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security">DNS Security</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/network-security/enterprise-data-loss-prevention"   role="link" title="Data Loss Prevention" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention">Data Loss Prevention</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/network-security/enterprise-iot-security"   role="link" title="IoT Security" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security">IoT Security</a>
						</li>    
					        
					</ul>
				</nav>
																		<nav>
					<ul class="footer-menu-nav__list"> 
																	<li class="footer-menu-nav__item nav-title"> 
							<a href="https://www.paloaltonetworks.com/network-security/next-generation-firewall"   role="link" title="Next-Generation Firewalls" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls">Next-Generation Firewalls</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/network-security/next-generation-firewall-hardware"   role="link" title="Hardware Firewalls" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls:Hardware Firewalls">Hardware Firewalls</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/network-security/strata-cloud-manager"   role="link" title="Strata Cloud Manager" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls:Hardware Firewalls:Strata Cloud Manager">Strata Cloud Manager</a>
						</li>    
					        
					</ul>
				</nav>
																		<nav>
					<ul class="footer-menu-nav__list"> 
																	<li class="footer-menu-nav__item nav-title"> 
							<a href="https://www.paloaltonetworks.com/sase"   role="link" title="SECURE ACCESS SERVICE EDGE" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls:Hardware Firewalls:Strata Cloud Manager:SECURE ACCESS SERVICE EDGE">SECURE ACCESS SERVICE EDGE</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/sase/access"   role="link" title="Prisma Access" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls:Hardware Firewalls:Strata Cloud Manager:SECURE ACCESS SERVICE EDGE:Prisma Access">Prisma Access</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/sase/sd-wan"   role="link" title="Prisma SD-WAN" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls:Hardware Firewalls:Strata Cloud Manager:SECURE ACCESS SERVICE EDGE:Prisma Access:Prisma SD-WAN">Prisma SD-WAN</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/sase/adem"   role="link" title="Autonomous Digital Experience Management" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls:Hardware Firewalls:Strata Cloud Manager:SECURE ACCESS SERVICE EDGE:Prisma Access:Prisma SD-WAN:Autonomous Digital Experience Management">Autonomous Digital Experience Management</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/sase/next-gen-casb"   role="link" title="Cloud Access Security Broker" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls:Hardware Firewalls:Strata Cloud Manager:SECURE ACCESS SERVICE EDGE:Prisma Access:Prisma SD-WAN:Autonomous Digital Experience Management:Cloud Access Security Broker">Cloud Access Security Broker</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/sase/ztna"   role="link" title="Zero Trust Network Access" data-page-track="true" data-page-track-value="footer:Products and services:Network Security Platform:CLOUD DELIVERED SECURITY SERVICES:Advanced Threat Prevention:DNS Security:Data Loss Prevention:IoT Security:Next-Generation Firewalls:Hardware Firewalls:Strata Cloud Manager:SECURE ACCESS SERVICE EDGE:Prisma Access:Prisma SD-WAN:Autonomous Digital Experience Management:Cloud Access Security Broker:Zero Trust Network Access">Zero Trust Network Access</a>
						</li>    
					        
					</ul>
				</nav>
						         
            </div>
            <div class="nav-column">
                          													<nav>
					<ul class="footer-menu-nav__list"> 
																	<li class="footer-menu-nav__item nav-title"> 
							<a href="https://www.paloaltonetworks.com/prisma/whyprisma"   role="link" title="Code to Cloud Platform" data-page-track="true" data-page-track-value="footer:Products and services:Code to Cloud Platform">Code to Cloud Platform</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/prisma/cloud"   role="link" title="Prisma Cloud" data-page-track="true" data-page-track-value="footer:Products and services:Code to Cloud Platform:Prisma Cloud">Prisma Cloud</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/content/pan/en_US/prisma/cloud/cloud-native-application-protection-platform"   role="link" title="Cloud-Native Application Protection Platform" data-page-track="true" data-page-track-value="footer:Products and services:Code to Cloud Platform:Prisma Cloud:Cloud-Native Application Protection Platform">Cloud-Native Application Protection Platform</a>
						</li>    
					        
					</ul>
				</nav>
						            </div>
            <div class="nav-column">
              													<nav>
					<ul class="footer-menu-nav__list"> 
																	<li class="footer-menu-nav__item nav-title"> 
							<a href="https://www.paloaltonetworks.com/cortex" target=_blank  role="link" title="AI-Driven Security Operations Platform" data-page-track="true" data-page-track-value="footer:Products and services:AI-Driven Security Operations Platform">AI-Driven Security Operations Platform</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/cortex/cortex-xdr"   role="link" title="Cortex XDR" data-page-track="true" data-page-track-value="footer:Products and services:AI-Driven Security Operations Platform:Cortex XDR">Cortex XDR</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/cortex/cortex-xsoar"   role="link" title="Cortex XSOAR" data-page-track="true" data-page-track-value="footer:Products and services:AI-Driven Security Operations Platform:Cortex XDR:Cortex XSOAR">Cortex XSOAR</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/cortex/cortex-xpanse"   role="link" title="Cortex Xpanse" data-page-track="true" data-page-track-value="footer:Products and services:AI-Driven Security Operations Platform:Cortex XDR:Cortex XSOAR:Cortex Xpanse">Cortex Xpanse</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/cortex/cortex-xsiam"   role="link" title="Cortex XSIAM" data-page-track="true" data-page-track-value="footer:Products and services:AI-Driven Security Operations Platform:Cortex XDR:Cortex XSOAR:Cortex Xpanse:Cortex XSIAM">Cortex XSIAM</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/cortex/cortex-xpanse/attack-surface-management"   role="link" title="External Attack Surface Protection" data-page-track="true" data-page-track-value="footer:Products and services:AI-Driven Security Operations Platform:Cortex XDR:Cortex XSOAR:Cortex Xpanse:Cortex XSIAM:External Attack Surface Protection">External Attack Surface Protection</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/cortex/security-operations-automation"   role="link" title="Security Automation" data-page-track="true" data-page-track-value="footer:Products and services:AI-Driven Security Operations Platform:Cortex XDR:Cortex XSOAR:Cortex Xpanse:Cortex XSIAM:External Attack Surface Protection:Security Automation">Security Automation</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/cortex/detection-and-response"   role="link" title="Threat Prevention, Detection &amp; Response" data-page-track="true" data-page-track-value="footer:Products and services:AI-Driven Security Operations Platform:Cortex XDR:Cortex XSOAR:Cortex Xpanse:Cortex XSIAM:External Attack Surface Protection:Security Automation:Threat Prevention, Detection &amp; Response">Threat Prevention, Detection &amp; Response</a>
						</li>    
					        
					</ul>
				</nav>
						            </div>
            <div class="nav-column">
              													<nav>
					<ul class="footer-menu-nav__list"> 
																	<li class="footer-menu-nav__item nav-title"> 
							<a href="https://www.paloaltonetworks.com/unit42"   role="link" title="Threat Intel and Incident Response Services" data-page-track="true" data-page-track-value="footer:Products and services:Threat Intel and Incident Response Services">Threat Intel and Incident Response Services</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/unit42/assess"   role="link" title="Proactive Assessments" data-page-track="true" data-page-track-value="footer:Products and services:Threat Intel and Incident Response Services:Proactive Assessments">Proactive Assessments</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/unit42/respond"   role="link" title="Incident Response" data-page-track="true" data-page-track-value="footer:Products and services:Threat Intel and Incident Response Services:Proactive Assessments:Incident Response">Incident Response</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/unit42/transform"   role="link" title="Transform Your Security Strategy" data-page-track="true" data-page-track-value="footer:Products and services:Threat Intel and Incident Response Services:Proactive Assessments:Incident Response:Transform Your Security Strategy">Transform Your Security Strategy</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/unit42/threat-intelligence-partners"   role="link" title="Discover Threat Intelligence" data-page-track="true" data-page-track-value="footer:Products and services:Threat Intel and Incident Response Services:Proactive Assessments:Incident Response:Transform Your Security Strategy:Discover Threat Intelligence">Discover Threat Intelligence</a>
						</li>    
					        
					</ul>
				</nav>
						            </div>
          </div>
        </div>
        <div class="footer-menu-nav__wrapper">
                      <h3 class="footer-menu-nav__title">Company</h3>
                                <div class="nav-column__wrapper">
          <div class="nav-column">
            													<nav>
					<ul class="footer-menu-nav__list"> 
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/about-us"   role="link" title="About Us" data-page-track="true" data-page-track-value="footer:Company:About Us">About Us</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://jobs.paloaltonetworks.com/en/"   role="link" title="Careers" data-page-track="true" data-page-track-value="footer:Company:About Us:Careers">Careers</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/company/contact-sales"   role="link" title="Contact Us" data-page-track="true" data-page-track-value="footer:Company:About Us:Careers:Contact Us">Contact Us</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/about-us/corporate-responsibility"   role="link" title="Corporate Responsibility" data-page-track="true" data-page-track-value="footer:Company:About Us:Careers:Contact Us:Corporate Responsibility">Corporate Responsibility</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/customers"   role="link" title="Customers" data-page-track="true" data-page-track-value="footer:Company:About Us:Careers:Contact Us:Corporate Responsibility:Customers">Customers</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://investors.paloaltonetworks.com/" target=_blank  role="link" title="Investor Relations" data-page-track="true" data-page-track-value="footer:Company:About Us:Careers:Contact Us:Corporate Responsibility:Customers:Investor Relations">Investor Relations</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/about-us/locations"   role="link" title="Location" data-page-track="true" data-page-track-value="footer:Company:About Us:Careers:Contact Us:Corporate Responsibility:Customers:Investor Relations:Location">Location</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/company/newsroom"   role="link" title="Newsroom" data-page-track="true" data-page-track-value="footer:Company:About Us:Careers:Contact Us:Corporate Responsibility:Customers:Investor Relations:Location:Newsroom">Newsroom</a>
						</li>    
					        
					</ul>
				</nav>
						          </div>
          </div>
        </div>
        <div class="footer-menu-nav__wrapper">
                      <h3 class="footer-menu-nav__title">Popular links</h3>
                                <div class="nav-column__wrapper">
          <div class="nav-column">
            													<nav>
					<ul class="footer-menu-nav__list"> 
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/blog/"   role="link" title="Blog" data-page-track="true" data-page-track-value="footer:Popular links:Blog">Blog</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/communities"   role="link" title="Communities" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities">Communities</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/resources"   role="link" title="Content Library" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library">Content Library</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/cyberpedia"   role="link" title="Cyberpedia" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia">Cyberpedia</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://events.paloaltonetworks.com/"   role="link" title="Event Center" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center">Event Center</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://start.paloaltonetworks.com/preference-center"   role="link" title="Manage Email Preferences" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center:Manage Email Preferences">Manage Email Preferences</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/products/products-a-z"   role="link" title="Products A-Z" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center:Manage Email Preferences:Products A-Z">Products A-Z</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/legal-notices/trust-center/tech-certs"   role="link" title="Product Certifications" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center:Manage Email Preferences:Products A-Z:Product Certifications">Product Certifications</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/security-disclosure"   role="link" title="Report a Vulnerability" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center:Manage Email Preferences:Products A-Z:Product Certifications:Report a Vulnerability">Report a Vulnerability</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://www.paloaltonetworks.com/sitemap"   role="link" title="Sitemap" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center:Manage Email Preferences:Products A-Z:Product Certifications:Report a Vulnerability:Sitemap">Sitemap</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://docs.paloaltonetworks.com/"   role="link" title="Tech Docs" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center:Manage Email Preferences:Products A-Z:Product Certifications:Report a Vulnerability:Sitemap:Tech Docs">Tech Docs</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://unit42.paloaltonetworks.com/"   role="link" title="Unit 42" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center:Manage Email Preferences:Products A-Z:Product Certifications:Report a Vulnerability:Sitemap:Tech Docs:Unit 42">Unit 42</a>
						</li>    
																	<li class="footer-menu-nav__item "> 
							<a href="https://panwedd.exterro.net/portal/dsar.htm?target=panwedd" target=_blank  role="link" title="Do Not Sell or Share My Personal Information" data-page-track="true" data-page-track-value="footer:Popular links:Blog:Communities:Content Library:Cyberpedia:Event Center:Manage Email Preferences:Products A-Z:Product Certifications:Report a Vulnerability:Sitemap:Tech Docs:Unit 42:Do Not Sell or Share My Personal Information">Do Not Sell or Share My Personal Information</a>
						</li>    
					        
					</ul>
				</nav>
						          </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="footer-bottom"> 
    <div class="l-container"> 
              <div class="footer-logo">
          <a href="https://www.paloaltonetworks.com/" role="link" title="Footer Nav" data-page-track="true" data-page-track-value="footer:logo:Palo Alto Networks">
            <img width="245" height="46" src="https://unit42.paloaltonetworks.com/wp-content/uploads/2024/06/palo-alto-footer-logo.svg" class="attachment-medium size-medium" alt="" decoding="async" loading="lazy" />          </a>
        </div>
            <div class="footer-bottom__wrapper"> 
        <div class="footer-bottom-nav">
                                              <nav>
                <ul class="footer-menu-nav__list"> 
                                                    <li> 
                   <a href="https://www.paloaltonetworks.com/legal-notices/privacy"   role="link" title="Privacy" data-page-track="true" data-page-track-value="footer:bottom-menu:Privacy">Privacy</a>
                  </li>    
                                                    <li> 
                   <a href="https://www.paloaltonetworks.com/legal-notices/trust-center"   role="link" title="Trust Center" data-page-track="true" data-page-track-value="footer:bottom-menu:Trust Center">Trust Center</a>
                  </li>    
                                                    <li> 
                   <a href="https://www.paloaltonetworks.com/legal-notices/terms-of-use"   role="link" title="Terms of Use" data-page-track="true" data-page-track-value="footer:bottom-menu:Terms of Use">Terms of Use</a>
                  </li>    
                                                    <li> 
                   <a href="https://www.paloaltonetworks.com/legal"   role="link" title="Documents" data-page-track="true" data-page-track-value="footer:bottom-menu:Documents">Documents</a>
                  </li>    
                        
                </ul>
              </nav>
                                            <br/><span class="copyright">Copyright © 2024 Palo Alto Networks. All Rights Reserved</span>
                  </div>
        <div class="footer-bottom-social"> 
          <ul> 
			<li>
			<a href="https://www.youtube.com/user/paloaltonetworks" target="_blank" role="link" title="YouTube" data-page-track="true" data-page-track-value="footer:social:Youtube">
				<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/youtube-black.svg" alt="YouTube">
			</a>
		</li>
				<li> 
			<a href="https://twitter.com/Unit42_Intel" target="_blank" role="link" title="X" data-page-track="true" data-page-track-value="footer:social::Twitter">
				<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/x-icon-black.svg" alt="Twitter">
			</a>
		</li>
				<li> 
			<a href="https://www.facebook.com/PaloAltoNetworks/" target="_blank" role="link" title="Facebook" data-page-track="true" data-page-track-value="footer:social:Facebook">
				<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/Facebook_Icon.svg" alt="Facebook">
			</a>
		</li>
				<li> 
			<a href="https://www.linkedin.com/company/palo-alto-networks" target="_blank" role="link" title="LinkedIn" data-page-track="true" data-page-track-value="footer:social:LinkedIn">
				<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/LinkedIn_Icon.svg" alt="LinkedIn">
			</a>
		</li>
	                <li> 
			<a href="https://unit42.paloaltonetworks.com/unit-42-threat-vector-podcast/" role="link" title="Podcast" data-page-track="true" data-page-track-value="footer:social:Podcast">
				<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/Podcast.svg" alt="Podcast">
			</a>
		</li>
</ul>          
	<div class="pa language-dropdown">
			<div class="language-dropdown__wrapper"> 
			<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/globe-icon.svg" alt="Globe icon">
			<span id="selectedLanguage">EN</span>
			<img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/down-arrow.svg" alt="Down arrow"><ul><li class="title">Select your language</li>
					<li class="selected" data-value="en"> 
						<a data-page-track="true" data-page-track-value="footer:language-selector:en" href="https://unit42.paloaltonetworks.com/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/">USA (ENGLISH)</a>
					</li>
					<li class="non-active" data-value="en"> 
						<a data-page-track="true" data-page-track-value="footer:language-selector:ja" href="https://unit42.paloaltonetworks.jp/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/">JAPAN (日本語)</a>
					</li></ul>        </div>
      </div>
    </div>
  </div>
</footer>
<div class="dd-overlay">
</div>
<!--  Start: video modal -->
<div class="modal video__modal" id="videoModal" tabindex="-1">
        <div class="modal__video-wrapper">
          <button class="modal__play-btn is-minimized is-paused" id="playPauseBtn">
            <img class="play" src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/player-play-icon.svg" alt="Play">
            <img class="pause" src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/player-pause-icon1.svg" alt="Pause">
          </button>
          <button class="modal__minimize-btn is-minimized">
            <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-minimize.svg" alt="Minimize">
          </button>
          <button class="modal__close"> 
            <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/close-modal.svg" alt="Close button">
          </button>
          <video class="modal__video" id="customVideo">
            <source src="" type="video/mp4">Your browser does not support the video tag.
          </video>
          <div class="modal__post-details" tabindex="-1">       
              <h3>Default Heading</h3>
              <a class="l-btn" href="#" title="Right Arrow Icon" role="link" data-page-track="true" data-page-track-value="overview:explore reports:View all reports">Read the article
              <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/right-arrow.svg" alt="Right Arrow">
              </a>
          </div>
          <div class="modal__video-controls">
            <div class="modal__video-seekbar input__wrapper"><span></span>
              <label class="is-hidden" for="modalSeekBar">Seekbar</label>
              <input class="custom-range" id="modalSeekBar" type="range" min="0" max="100" value="1">
              <p class="modal__remaining-time"></p>
            </div>
            <button class="modal__play-btn is-paused" id="playPauseBtn">
            <img class="play" src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/player-play-icon.svg" alt="Play">
            <img class="pause" src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/player-pause-icon1.svg" alt="Pause">
          </button>
            <div class="modal__volume-controls">
              <div class="modal__volume__wrapper">
                <button tabindex="0">
                  <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-volume.svg" alt="Volume">
                </button>
                <div class="modal__volume-seekbar"><span></span>
                  <label class="is-hidden" for="volumeBar">Volume</label>
                  <input class="volume__bar" id="volumeBar" type="range" min="0" max="1" step="0.1" value="0.7">
                </div>
              </div>
              <button class="modal__minimize-btn" id="minimizeBtn">
                <img src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/images/icons/icon-minimize.svg" alt="Minimize">
              </button>
            </div>
          </div>
        </div>
      </div><!--  End: video modal -->

    <script type="text/javascript">
	var isProcessing = false; 
    function alter_ul_post_values(obj,post_id,ul_type){
	
		if (isProcessing)    
		return;  
		isProcessing = true;   
		var like_nonce = jQuery('#_wpnonce').val();
		jQuery(obj).find("span").html("..");
                jQuery.ajax({
                    type: "POST",
                    url: "https://unit42.paloaltonetworks.com/wp-content/plugins/like-dislike-counter-for-posts-pages-and-comments/ajax_counter.php",
                    data: "post_id="+post_id+"&up_type="+ul_type+"&ul_nonce="+like_nonce,
                    success: function(msg){
                            jQuery(obj).find("span").html(msg);
                            isProcessing = false; 
                            jQuery(obj).find('svg').children('path').attr('stroke','#0050FF');
                            jQuery(obj).removeClass('idc_ul_cont_not_liked idc_ul_cont_not_liked_inner');
                    }
 		});
	}
	</script>
    <link rel='stylesheet' id='wpdevart_lightbox_front_end_css-css' href='https://unit42.paloaltonetworks.com/wp-content/plugins/lightbox-popup/includes/style/wpdevart_lightbox_front.css?ver=6.6.1' media='all' />
<script src="https://unit42.paloaltonetworks.com/wp-content/themes/unit42-v6/dist/js/script.js?ver=1.0.0" id="unit42-v6-navigation-js"></script>

<!--  Start: Scripts Migrated From Unit42-v5 -->
<script type="text/javascript">
const observer_lozad = lozad('.lozad, .lozad-background'); // lazy loads elements with default selector as '.lozad'
observer_lozad.observe();

window.PAN_Clean_Util = {
        isIE: false
};

(function () {
   // INP Util Fix
    function yieldToMain(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
   window.PAN_Clean_Util.yieldToMain = yieldToMain
})();

if(referer == "Prisma" || referer == "Cortex" || referer == "Sase" || referer == "Unit" || referer == "Ngfw"){
  var Coveo_organizationId = "paloaltonetworksintranet";        
  var techDocsPagePath = "https://docs.paloaltonetworks.com/search.html#hd=All%20Prisma%20Cloud%20Documentation&hq=%40panproductcategory%3D%3D(%22Prisma%20Cloud%22)&sort=relevancy&layout=card&numberOfResults=25";
  var languageFromPath="en_US";
  window.Granite = window.Granite || {};
  Granite.I18n = (function() {
  var self = {};
  self.setLocale = function(locale) { };
  self.get = function(text, snippets, note) {
    var out = "";
    if(text){
      if(text ==="coveo.clear"){
        out = "Clear";
      }else if(text ==="coveo.noresultsfound"){
        out = "No results found for this search term.";
      }
    }
    return out;
  };
  return self
  }());
}

  var main_site_critical_top = maindomain_lang+'/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/criticalTop.min.js';
  var main_site_defered = maindomain_lang+'/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/defered.min.js';
  var main_site_criticalTopBase = maindomain_lang+'/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/criticalTopBase.min.js';
  var main_site_criticalTopProductNav = maindomain_lang+'/etc.clientlibs/panClean/components/mainNavigationComp/clientlibs/panClean/criticalTopProductNav.min.js';
window.PAN_MainNavAsyncUrl = maindomain_lang+"/_jcr_content/globals/cleanHeaderPrisma.prismaRenderer.html";

function loadScript(url, defer){
    var script1 = document.createElement('script');
    script1.setAttribute('type', 'text/javascript');
    script1.setAttribute('src',url);
    if(defer == true){
        script1.setAttribute('defer','defer');
    }
    document.head.appendChild(script1);
}
function loadScript1(url, callback){

    var script = document.createElement("script")
    script.type = "text/javascript";
    if (script.readyState){  //IE
        script.onreadystatechange = function(){
            if (script.readyState == "loaded" || script.readyState == "complete"){
                script.onreadystatechange = null;
                callback();
            }
        };
    } else {  //Others
        script.onload = function(){
            callback();
        };
    }
    script.src = url;
    document.getElementsByTagName("head")[0].appendChild(script);
}
if(referer == "Prisma" || referer == "Cortex" || referer == "Sase" || referer == "Unit" || referer == "Ngfw"){
	if(referer == "Unit"){
    setTimeout(function(){
      loadScript(main_site_criticalTopBase, false);
      loadScript1(main_site_criticalTopProductNav, function(){
        window.PAN_initializeProduct2021Nav();
      });
      loadScript(main_site_defered, false);
    }, 3000);
	}
	else{
    setTimeout(function(){
      loadScript1(main_site_critical_top, function(){
        window.PAN_initializeProduct2021Nav();
      });
      loadScript(main_site_defered, false);
    }, 3000);
	}
}

$(document).ready(function () {
    setTimeout(function(){
      $('.article-banner .ab__options ul li a').each(function(){
          	$(this).attr('target', "_blank");
      });
    }, 4000);
});
</script>
<!--  End: Scripts Migrated From Unit42-v5 -->

</body>
</html>
