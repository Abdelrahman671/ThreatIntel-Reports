<!DOCTYPE html>
<html lang="it-IT" >
		<head>
			<meta charset="UTF-8">
			<meta http-equiv="X-UA-Compatible" content="IE=edge">
			<meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no">
			<link rel="pingback" href=" https://malverse.it/xmlrpc.php ">		<title>Config Extractor per DanaBot (PARTE 1) &#8211; Malverse</title>
<meta name='robots' content='max-image-preview:large' />
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel="alternate" type="application/rss+xml" title="Malverse &raquo; Feed" href="https://malverse.it/feed" />
<link rel="alternate" type="application/rss+xml" title="Malverse &raquo; Feed dei commenti" href="https://malverse.it/comments/feed" />
<link rel="alternate" type="application/rss+xml" title="Malverse &raquo; Config Extractor per DanaBot (PARTE 1) Feed dei commenti" href="https://malverse.it/costruiamo-un-config-extractor-per-danabot-parte-1/feed" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/malverse.it\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.7.1"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://malverse.it/wp-includes/css/dist/block-library/style.min.css?ver=6.7.1' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='spice-social-share-font-awesome-css' href='https://malverse.it/wp-content/plugins/spice-social-share/assets/css/font-awesome/css/all.min.css?ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='spice-social-share-custom-css' href='https://malverse.it/wp-content/plugins/spice-social-share/assets/css/custom.css?ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='bootstrap-css' href='https://malverse.it/wp-content/themes/honeypress/assets/css/bootstrap.min.css?ver=4.0.0' type='text/css' media='all' />
<link rel='stylesheet' id='honeypress-dark-parent-style-css' href='https://malverse.it/wp-content/themes/honeypress/style.css?ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='honeypress-dark-default-style-css' href='https://malverse.it/wp-content/themes/honeypress-dark/assets/css/default.css?ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='honeypress-style-css' href='https://malverse.it/wp-content/themes/honeypress-dark/style.css?ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='jquery-startmenu-css' href='https://malverse.it/wp-content/themes/honeypress/assets/css/jquery.smartmenus.bootstrap-4.css?ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='honeypress-font-css' href='https://fonts.googleapis.com/css?family=Open+Sans%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C700%2C700i%2C800%2C800i&#038;ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='font-awesome-css' href='https://malverse.it/wp-content/themes/honeypress/assets/css/font-awesome/css/font-awesome.min.css?ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='owl-css' href='https://malverse.it/wp-content/themes/honeypress/assets/css/owl.carousel.css?ver=6.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='honeypress-google-fonts-css' href='//fonts.googleapis.com/css?family=ABeeZee%7CAbel%7CAbril+Fatface%7CAclonica%7CAcme%7CActor%7CAdamina%7CAdvent+Pro%7CAguafina+Script%7CAkronim%7CAladin%7CAldrich%7CAlef%7CAlegreya%7CAlegreya+SC%7CAlegreya+Sans%7CAlegreya+Sans+SC%7CAlex+Brush%7CAlfa+Slab+One%7CAlice%7CAlike%7CAlike+Angular%7CAllan%7CAllerta%7CAllerta+Stencil%7CAllura%7CAlmendra%7CAlmendra+Display%7CAlmendra+SC%7CAmarante%7CAmaranth%7CAmatic+SC%7CAmatica+SC%7CAmethysta%7CAmiko%7CAmiri%7CAmita%7CAnaheim%7CAndada%7CAndika%7CAngkor%7CAnnie+Use+Your+Telescope%7CAnonymous+Pro%7CAntic%7CAntic+Didone%7CAntic+Slab%7CAnton%7CArapey%7CArbutus%7CArbutus+Slab%7CArchitects+Daughter%7CArchivo+Black%7CArchivo+Narrow%7CAref+Ruqaa%7CArima+Madurai%7CArimo%7CArizonia%7CArmata%7CArtifika%7CArvo%7CArya%7CAsap%7CAsar%7CAsset%7CAssistant%7CAstloch%7CAsul%7CAthiti%7CAtma%7CAtomic+Age%7CAubrey%7CAudiowide%7CAutour+One%7CAverage%7CAverage+Sans%7CAveria+Gruesa+Libre%7CAveria+Libre%7CAveria+Sans+Libre%7CAveria+Serif+Libre%7CBad+Script%7CBaloo%7CBaloo+Bhai%7CBaloo+Da%7CBaloo+Thambi%7CBalthazar%7CBangers%7CBasic%7CBattambang%7CBaumans%7CBayon%7CBelgrano%7CBelleza%7CBenchNine%7CBentham%7CBerkshire+Swash%7CBevan%7CBigelow+Rules%7CBigshot+One%7CBilbo%7CBilbo+Swash+Caps%7CBioRhyme%7CBioRhyme+Expanded%7CBiryani%7CBitter%7CBlack+Ops+One%7CBokor%7CBonbon%7CBoogaloo%7CBowlby+One%7CBowlby+One+SC%7CBrawler%7CBree+Serif%7CBubblegum+Sans%7CBubbler+One%7CBuda%7CBuenard%7CBungee%7CBungee+Hairline%7CBungee+Inline%7CBungee+Outline%7CBungee+Shade%7CButcherman%7CButterfly+Kids%7CCabin%7CCabin+Condensed%7CCabin+Sketch%7CCaesar+Dressing%7CCagliostro%7CCairo%7CCalligraffitti%7CCambay%7CCambo%7CCandal%7CCantarell%7CCantata+One%7CCantora+One%7CCapriola%7CCardo%7CCarme%7CCarrois+Gothic%7CCarrois+Gothic+SC%7CCarter+One%7CCatamaran%7CCaudex%7CCaveat%7CCaveat+Brush%7CCedarville+Cursive%7CCeviche+One%7CChanga%7CChanga+One%7CChango%7CChathura%7CChau+Philomene+One%7CChela+One%7CChelsea+Market%7CChenla%7CCherry+Cream+Soda%7CCherry+Swash%7CChewy%7CChicle%7CChivo%7CChonburi%7CCinzel%7CCinzel+Decorative%7CClicker+Script%7CCoda%7CCoda+Caption%7CCodystar%7CCoiny%7CCombo%7CComfortaa%7CComing+Soon%7CConcert+One%7CCondiment%7CContent%7CContrail+One%7CConvergence%7CCookie%7CCopse%7CCorben%7CCormorant%7CCormorant+Garamond%7CCormorant+Infant%7CCormorant+SC%7CCormorant+Unicase%7CCormorant+Upright%7CCourgette%7CCousine%7CCoustard%7CCovered+By+Your+Grace%7CCrafty+Girls%7CCreepster%7CCrete+Round%7CCrimson+Text%7CCroissant+One%7CCrushed%7CCuprum%7CCutive%7CCutive+Mono%7CDamion%7CDancing+Script%7CDangrek%7CDavid+Libre%7CDawning+of+a+New+Day%7CDays+One%7CDekko%7CDelius%7CDelius+Swash+Caps%7CDelius+Unicase%7CDella+Respira%7CDenk+One%7CDevonshire%7CDhurjati%7CDidact+Gothic%7CDiplomata%7CDiplomata+SC%7CDomine%7CDonegal+One%7CDoppio+One%7CDorsa%7CDosis%7CDr+Sugiyama%7CDroid+Sans%7CDroid+Sans+Mono%7CDroid+Serif%7CDuru+Sans%7CDynalight%7CEB+Garamond%7CEagle+Lake%7CEater%7CEconomica%7CEczar%7CEk+Mukta%7CEl+Messiri%7CElectrolize%7CElsie%7CElsie+Swash+Caps%7CEmblema+One%7CEmilys+Candy%7CEngagement%7CEnglebert%7CEnriqueta%7CErica+One%7CEsteban%7CEuphoria+Script%7CEwert%7CExo%7CExo+2%7CExpletus+Sans%7CFanwood+Text%7CFarsan%7CFascinate%7CFascinate+Inline%7CFaster+One%7CFasthand%7CFauna+One%7CFederant%7CFedero%7CFelipa%7CFenix%7CFinger+Paint%7CFira+Mono%7CFira+Sans%7CFjalla+One%7CFjord+One%7CFlamenco%7CFlavors%7CFondamento%7CFontdiner+Swanky%7CForum%7CFrancois+One%7CFrank+Ruhl+Libre%7CFreckle+Face%7CFredericka+the+Great%7CFredoka+One%7CFreehand%7CFresca%7CFrijole%7CFruktur%7CFugaz+One%7CGFS+Didot%7CGFS+Neohellenic%7CGabriela%7CGafata%7CGalada%7CGaldeano%7CGalindo%7CGentium+Basic%7CGentium+Book+Basic%7CGeo%7CGeostar%7CGeostar+Fill%7CGermania+One%7CGidugu%7CGilda+Display%7CGive+You+Glory%7CGlass+Antiqua%7CGlegoo%7CGloria+Hallelujah%7CGoblin+One%7CGochi+Hand%7CGorditas%7CGoudy+Bookletter+1911%7CGraduate%7CGrand+Hotel%7CGravitas+One%7CGreat+Vibes%7CGriffy%7CGruppo%7CGudea%7CGurajada%7CHabibi%7CHalant%7CHammersmith+One%7CHanalei%7CHanalei+Fill%7CHandlee%7CHanuman%7CHappy+Monkey%7CHarmattan%7CHeadland+One%7CHeebo%7CHenny+Penny%7CHerr+Von+Muellerhoff%7CHind%7CHind+Guntur%7CHind+Madurai%7CHind+Siliguri%7CHind+Vadodara%7CHoltwood+One+SC%7CHomemade+Apple%7CHomenaje%7CIM+Fell+DW+Pica%7CIM+Fell+DW+Pica+SC%7CIM+Fell+Double+Pica%7CIM+Fell+Double+Pica+SC%7CIM+Fell+English%7CIM+Fell+English+SC%7CIM+Fell+French+Canon%7CIM+Fell+French+Canon+SC%7CIM+Fell+Great+Primer%7CIM+Fell+Great+Primer+SC%7CIceberg%7CIceland%7CImprima%7CInconsolata%7CInder%7CIndie+Flower%7CInika%7CInknut+Antiqua%7CIrish+Grover%7CIstok+Web%7CItaliana%7CItalianno%7CItim%7CJacques+Francois%7CJacques+Francois+Shadow%7CJaldi%7CJim+Nightshade%7CJockey+One%7CJolly+Lodger%7CJomhuria%7CJosefin+Sans%7CJosefin+Slab%7CJoti+One%7CJudson%7CJulee%7CJulius+Sans+One%7CJunge%7CJura%7CJust+Another+Hand%7CJust+Me+Again+Down+Here%7CKadwa%7CKalam%7CKameron%7CKanit%7CKantumruy%7CKarla%7CKarma%7CKatibeh%7CKaushan+Script%7CKavivanar%7CKavoon%7CKdam+Thmor%7CKeania+One%7CKelly+Slab%7CKenia%7CKhand%7CKhmer%7CKhula%7CKite+One%7CKnewave%7CKotta+One%7CKoulen%7CKranky%7CKreon%7CKristi%7CKrona+One%7CKumar+One%7CKumar+One+Outline%7CKurale%7CLa+Belle+Aurore%7CLaila%7CLakki+Reddy%7CLalezar%7CLancelot%7CLateef%7CLato%7CLeague+Script%7CLeckerli+One%7CLedger%7CLekton%7CLemon%7CLemonada%7CLibre+Baskerville%7CLibre+Franklin%7CLife+Savers%7CLilita+One%7CLily+Script+One%7CLimelight%7CLinden+Hill%7CLobster%7CLobster+Two%7CLondrina+Outline%7CLondrina+Shadow%7CLondrina+Sketch%7CLondrina+Solid%7CLora%7CLove+Ya+Like+A+Sister%7CLoved+by+the+King%7CLovers+Quarrel%7CLuckiest+Guy%7CLusitana%7CLustria%7CMacondo%7CMacondo+Swash+Caps%7CMada%7CMagra%7CMaiden+Orange%7CMaitree%7CMako%7CMallanna%7CMandali%7CMarcellus%7CMarcellus+SC%7CMarck+Script%7CMargarine%7CMarko+One%7CMarmelad%7CMartel%7CMartel+Sans%7CMarvel%7CMate%7CMate+SC%7CMaven+Pro%7CMcLaren%7CMeddon%7CMedievalSharp%7CMedula+One%7CMeera+Inimai%7CMegrim%7CMeie+Script%7CMerienda%7CMerienda+One%7CMerriweather%7CMerriweather+Sans%7CMetal%7CMetal+Mania%7CMetamorphous%7CMetrophobic%7CMichroma%7CMilonga%7CMiltonian%7CMiltonian+Tattoo%7CMiniver%7CMiriam+Libre%7CMirza%7CMiss+Fajardose%7CMitr%7CModak%7CModern+Antiqua%7CMogra%7CMolengo%7CMolle%7CMonda%7CMonofett%7CMonoton%7CMonsieur+La+Doulaise%7CMontaga%7CMontez%7CMontserrat%7CMontserrat+Alternates%7CMontserrat+Subrayada%7CMoul%7CMoulpali%7CMountains+of+Christmas%7CMouse+Memoirs%7CMr+Bedfort%7CMr+Dafoe%7CMr+De+Haviland%7CMrs+Saint+Delafield%7CMrs+Sheppards%7CMukta+Vaani%7CMuli%7CMystery+Quest%7CNTR%7CNeucha%7CNeuton%7CNew+Rocker%7CNews+Cycle%7CNiconne%7CNixie+One%7CNobile%7CNokora%7CNorican%7CNosifer%7CNothing+You+Could+Do%7CNoticia+Text%7CNoto+Sans%7CNoto+Serif%7CNova+Cut%7CNova+Flat%7CNova+Mono%7CNova+Oval%7CNova+Round%7CNova+Script%7CNova+Slim%7CNova+Square%7CNumans%7CNunito%7COdor+Mean+Chey%7COffside%7COld+Standard+TT%7COldenburg%7COleo+Script%7COleo+Script+Swash+Caps%7COpen+Sans%7COpen+Sans+Condensed%7COranienbaum%7COrbitron%7COregano%7COrienta%7COriginal+Surfer%7COswald%7COver+the+Rainbow%7COverlock%7COverlock+SC%7COvo%7COxygen%7COxygen+Mono%7CPT+Mono%7CPT+Sans%7CPT+Sans+Caption%7CPT+Sans+Narrow%7CPT+Serif%7CPT+Serif+Caption%7CPacifico%7CPalanquin%7CPalanquin+Dark%7CPaprika%7CParisienne%7CPassero+One%7CPassion+One%7CPathway+Gothic+One%7CPatrick+Hand%7CPatrick+Hand+SC%7CPattaya%7CPatua+One%7CPavanam%7CPaytone+One%7CPeddana%7CPeralta%7CPermanent+Marker%7CPetit+Formal+Script%7CPetrona%7CPhilosopher%7CPiedra%7CPinyon+Script%7CPirata+One%7CPlaster%7CPlay%7CPlayball%7CPlayfair+Display%7CPlayfair+Display+SC%7CPodkova%7CPoiret+One%7CPoller+One%7CPoly%7CPompiere%7CPontano+Sans%7CPoppins%7CPort+Lligat+Sans%7CPort+Lligat+Slab%7CPragati+Narrow%7CPrata%7CPreahvihear%7CPress+Start+2P%7CPridi%7CPrincess+Sofia%7CProciono%7CPrompt%7CProsto+One%7CProza+Libre%7CPuritan%7CPurple+Purse%7CQuando%7CQuantico%7CQuattrocento%7CQuattrocento+Sans%7CQuestrial%7CQuicksand%7CQuintessential%7CQwigley%7CRacing+Sans+One%7CRadley%7CRajdhani%7CRakkas%7CRaleway%7CRaleway+Dots%7CRamabhadra%7CRamaraja%7CRambla%7CRammetto+One%7CRanchers%7CRancho%7CRanga%7CRasa%7CRationale%7CRedressed%7CReem+Kufi%7CReenie+Beanie%7CRevalia%7CRhodium+Libre%7CRibeye%7CRibeye+Marrow%7CRighteous%7CRisque%7CRoboto%7CRoboto+Condensed%7CRoboto+Mono%7CRoboto+Slab%7CRochester%7CRock+Salt%7CRokkitt%7CRomanesco%7CRopa+Sans%7CRosario%7CRosarivo%7CRouge+Script%7CRozha+One%7CRubik%7CRubik+Mono+One%7CRubik+One%7CRuda%7CRufina%7CRuge+Boogie%7CRuluko%7CRum+Raisin%7CRuslan+Display%7CRusso+One+%3D%3E+Russo+One%7CRuthie%7CRye%7CSacramento%7CSahitya%7CSail%7CSalsa%7CSanchez%7CSancreek%7CSansita+One%7CSarala%7CSarina%7CSarpanch%7CSatisfy%7CScada%7CScheherazade%7CSchoolbell%7CScope+One%7CSeaweed+Script%7CSecular+One%7CSevillana%7CSeymour+One%7CShadows+Into+Light%7CShadows+Into+Light+Two%7CShanti%7CShare%7CShare+Tech%7CShare+Tech+Mono%7CShojumaru%7CShort+Stack%7CShrikhand%7CSiemreap%7CSigmar+One%7CSignika%7CSignika+Negative%7CSimonetta%7CSintony%7CSirin+Stencil%7CSix+Caps%7CSkranji%7CSlabo+13px%7CSlabo+27px%7CSlackey%7CSmokum%7CSmythe%7CSniglet%7CSnippet%7CSnowburst+One%7CSofadi+One%7CSofia%7CSonsie+One%7CSorts+Mill+Goudy%7CSource+Code+Pro%7CSource+Sans+Pro%7CSource+Serif+Pro%7CSpace+Mono%7CSpecial+Elite%7CSpicy+Rice%7CSpinnaker%7CSpirax%7CSquada+One%7CSree+Krushnadevaraya%7CSriracha%7CStalemate%7CStalinist+One%7CStardos+Stencil%7CStint+Ultra+Condensed%7CStint+Ultra+Expanded%7CStoke%7CStrait%7CSue+Ellen+Francisco%7CSuez+One%7CSumana%7CSunshiney%7CSupermercado+One%7CSura%7CSuranna%7CSuravaram%7CSuwannaphum%7CSwanky+and+Moo+Moo%7CSyncopate%7CTangerine%7CTaprom%7CTauri%7CTaviraj%7CTeko%7CTelex%7CTenali+Ramakrishna%7CTenor+Sans%7CText+Me+One%7CThe+Girl+Next+Door%7CTienne%7CTillana%7CTimmana%7CTinos%7CTitan+One%7CTitillium+Web%7CTrade+Winds%7CTrirong%7CTrocchi%7CTrochut%7CTrykker%7CTulpen+One%7CUbuntu%7CUbuntu+Condensed%7CUbuntu+Mono%7CUltra%7CUncial+Antiqua%7CUnderdog%7CUnica+One%7CUnifrakturCook%7CUnifrakturMaguntia%7CUnkempt%7CUnlock%7CUnna%7CVT323%7CVampiro+One%7CVarela%7CVarela+Round%7CVast+Shadow%7CVesper+Libre%7CVibur%7CVidaloka%7CViga%7CVoces%7CVolkhov%7CVollkorn%7CVoltaire%7CWaiting+for+the+Sunrise%7CWallpoet%7CWalter+Turncoat%7CWarnes%7CWellfleet%7CWendy+One%7CWire+One%7CWork+Sans%7CYanone+Kaffeesatz%7CYantramanav%7CYatra+One%7CYellowtail%7CYeseva+One%7CYesteryear%7CYrsa%7CZeyada&#038;subset=latin%2Clatin-ext' type='text/css' media='all' />
<link rel='stylesheet' id='spice-social-share-google-fonts-css' href='//fonts.googleapis.com/css?family=ABeeZee%7CAbel%7CAbril+Fatface%7CAclonica%7CAcme%7CActor%7CAdamina%7CAdvent+Pro%7CAguafina+Script%7CAkronim%7CAladin%7CAldrich%7CAlef%7CAlegreya%7CAlegreya+SC%7CAlegreya+Sans%7CAlegreya+Sans+SC%7CAlex+Brush%7CAlfa+Slab+One%7CAlice%7CAlike%7CAlike+Angular%7CAllan%7CAllerta%7CAllerta+Stencil%7CAllura%7CAlmendra%7CAlmendra+Display%7CAlmendra+SC%7CAmarante%7CAmaranth%7CAmatic+SC%7CAmatica+SC%7CAmethysta%7CAmiko%7CAmiri%7CAmita%7CAnaheim%7CAndada%7CAndika%7CAngkor%7CAnnie+Use+Your+Telescope%7CAnonymous+Pro%7CAntic%7CAntic+Didone%7CAntic+Slab%7CAnton%7CArapey%7CArbutus%7CArbutus+Slab%7CArchitects+Daughter%7CArchivo+Black%7CArchivo+Narrow%7CAref+Ruqaa%7CArima+Madurai%7CArimo%7CArizonia%7CArmata%7CArtifika%7CArvo%7CArya%7CAsap%7CAsar%7CAsset%7CAssistant%7CAstloch%7CAsul%7CAthiti%7CAtma%7CAtomic+Age%7CAubrey%7CAudiowide%7CAutour+One%7CAverage%7CAverage+Sans%7CAveria+Gruesa+Libre%7CAveria+Libre%7CAveria+Sans+Libre%7CAveria+Serif+Libre%7CBad+Script%7CBaloo%7CBaloo+Bhai%7CBaloo+Da%7CBaloo+Thambi%7CBalthazar%7CBangers%7CBasic%7CBattambang%7CBaumans%7CBayon%7CBelgrano%7CBelleza%7CBenchNine%7CBentham%7CBerkshire+Swash%7CBevan%7CBigelow+Rules%7CBigshot+One%7CBilbo%7CBilbo+Swash+Caps%7CBioRhyme%7CBioRhyme+Expanded%7CBiryani%7CBitter%7CBlack+Ops+One%7CBokor%7CBonbon%7CBoogaloo%7CBowlby+One%7CBowlby+One+SC%7CBrawler%7CBree+Serif%7CBubblegum+Sans%7CBubbler+One%7CBuda%7CBuenard%7CBungee%7CBungee+Hairline%7CBungee+Inline%7CBungee+Outline%7CBungee+Shade%7CButcherman%7CButterfly+Kids%7CCabin%7CCabin+Condensed%7CCabin+Sketch%7CCaesar+Dressing%7CCagliostro%7CCairo%7CCalligraffitti%7CCambay%7CCambo%7CCandal%7CCantarell%7CCantata+One%7CCantora+One%7CCapriola%7CCardo%7CCarme%7CCarrois+Gothic%7CCarrois+Gothic+SC%7CCarter+One%7CCatamaran%7CCaudex%7CCaveat%7CCaveat+Brush%7CCedarville+Cursive%7CCeviche+One%7CChanga%7CChanga+One%7CChango%7CChathura%7CChau+Philomene+One%7CChela+One%7CChelsea+Market%7CChenla%7CCherry+Cream+Soda%7CCherry+Swash%7CChewy%7CChicle%7CChivo%7CChonburi%7CCinzel%7CCinzel+Decorative%7CClicker+Script%7CCoda%7CCoda+Caption%7CCodystar%7CCoiny%7CCombo%7CComfortaa%7CComing+Soon%7CConcert+One%7CCondiment%7CContent%7CContrail+One%7CConvergence%7CCookie%7CCopse%7CCorben%7CCormorant%7CCormorant+Garamond%7CCormorant+Infant%7CCormorant+SC%7CCormorant+Unicase%7CCormorant+Upright%7CCourgette%7CCousine%7CCoustard%7CCovered+By+Your+Grace%7CCrafty+Girls%7CCreepster%7CCrete+Round%7CCrimson+Text%7CCroissant+One%7CCrushed%7CCuprum%7CCutive%7CCutive+Mono%7CDamion%7CDancing+Script%7CDangrek%7CDavid+Libre%7CDawning+of+a+New+Day%7CDays+One%7CDekko%7CDelius%7CDelius+Swash+Caps%7CDelius+Unicase%7CDella+Respira%7CDenk+One%7CDevonshire%7CDhurjati%7CDidact+Gothic%7CDiplomata%7CDiplomata+SC%7CDomine%7CDonegal+One%7CDoppio+One%7CDorsa%7CDosis%7CDr+Sugiyama%7CDroid+Sans%7CDroid+Sans+Mono%7CDroid+Serif%7CDuru+Sans%7CDynalight%7CEB+Garamond%7CEagle+Lake%7CEater%7CEconomica%7CEczar%7CEk+Mukta%7CEl+Messiri%7CElectrolize%7CElsie%7CElsie+Swash+Caps%7CEmblema+One%7CEmilys+Candy%7CEngagement%7CEnglebert%7CEnriqueta%7CErica+One%7CEsteban%7CEuphoria+Script%7CEwert%7CExo%7CExo+2%7CExpletus+Sans%7CFanwood+Text%7CFarsan%7CFascinate%7CFascinate+Inline%7CFaster+One%7CFasthand%7CFauna+One%7CFederant%7CFedero%7CFelipa%7CFenix%7CFinger+Paint%7CFira+Mono%7CFira+Sans%7CFjalla+One%7CFjord+One%7CFlamenco%7CFlavors%7CFondamento%7CFontdiner+Swanky%7CForum%7CFrancois+One%7CFrank+Ruhl+Libre%7CFreckle+Face%7CFredericka+the+Great%7CFredoka+One%7CFreehand%7CFresca%7CFrijole%7CFruktur%7CFugaz+One%7CGFS+Didot%7CGFS+Neohellenic%7CGabriela%7CGafata%7CGalada%7CGaldeano%7CGalindo%7CGentium+Basic%7CGentium+Book+Basic%7CGeo%7CGeostar%7CGeostar+Fill%7CGermania+One%7CGidugu%7CGilda+Display%7CGive+You+Glory%7CGlass+Antiqua%7CGlegoo%7CGloria+Hallelujah%7CGoblin+One%7CGochi+Hand%7CGorditas%7CGoudy+Bookletter+1911%7CGraduate%7CGrand+Hotel%7CGravitas+One%7CGreat+Vibes%7CGriffy%7CGruppo%7CGudea%7CGurajada%7CHabibi%7CHalant%7CHammersmith+One%7CHanalei%7CHanalei+Fill%7CHandlee%7CHanuman%7CHappy+Monkey%7CHarmattan%7CHeadland+One%7CHeebo%7CHenny+Penny%7CHerr+Von+Muellerhoff%7CHind%7CHind+Guntur%7CHind+Madurai%7CHind+Siliguri%7CHind+Vadodara%7CHoltwood+One+SC%7CHomemade+Apple%7CHomenaje%7CIM+Fell+DW+Pica%7CIM+Fell+DW+Pica+SC%7CIM+Fell+Double+Pica%7CIM+Fell+Double+Pica+SC%7CIM+Fell+English%7CIM+Fell+English+SC%7CIM+Fell+French+Canon%7CIM+Fell+French+Canon+SC%7CIM+Fell+Great+Primer%7CIM+Fell+Great+Primer+SC%7CIceberg%7CIceland%7CImprima%7CInconsolata%7CInder%7CIndie+Flower%7CInika%7CInknut+Antiqua%7CIrish+Grover%7CIstok+Web%7CItaliana%7CItalianno%7CItim%7CJacques+Francois%7CJacques+Francois+Shadow%7CJaldi%7CJim+Nightshade%7CJockey+One%7CJolly+Lodger%7CJomhuria%7CJosefin+Sans%7CJosefin+Slab%7CJoti+One%7CJudson%7CJulee%7CJulius+Sans+One%7CJunge%7CJura%7CJust+Another+Hand%7CJust+Me+Again+Down+Here%7CKadwa%7CKalam%7CKameron%7CKanit%7CKantumruy%7CKarla%7CKarma%7CKatibeh%7CKaushan+Script%7CKavivanar%7CKavoon%7CKdam+Thmor%7CKeania+One%7CKelly+Slab%7CKenia%7CKhand%7CKhmer%7CKhula%7CKite+One%7CKnewave%7CKotta+One%7CKoulen%7CKranky%7CKreon%7CKristi%7CKrona+One%7CKumar+One%7CKumar+One+Outline%7CKurale%7CLa+Belle+Aurore%7CLaila%7CLakki+Reddy%7CLalezar%7CLancelot%7CLateef%7CLato%7CLeague+Script%7CLeckerli+One%7CLedger%7CLekton%7CLemon%7CLemonada%7CLibre+Baskerville%7CLibre+Franklin%7CLife+Savers%7CLilita+One%7CLily+Script+One%7CLimelight%7CLinden+Hill%7CLobster%7CLobster+Two%7CLondrina+Outline%7CLondrina+Shadow%7CLondrina+Sketch%7CLondrina+Solid%7CLora%7CLove+Ya+Like+A+Sister%7CLoved+by+the+King%7CLovers+Quarrel%7CLuckiest+Guy%7CLusitana%7CLustria%7CMacondo%7CMacondo+Swash+Caps%7CMada%7CMagra%7CMaiden+Orange%7CMaitree%7CMako%7CMallanna%7CMandali%7CMarcellus%7CMarcellus+SC%7CMarck+Script%7CMargarine%7CMarko+One%7CMarmelad%7CMartel%7CMartel+Sans%7CMarvel%7CMate%7CMate+SC%7CMaven+Pro%7CMcLaren%7CMeddon%7CMedievalSharp%7CMedula+One%7CMeera+Inimai%7CMegrim%7CMeie+Script%7CMerienda%7CMerienda+One%7CMerriweather%7CMerriweather+Sans%7CMetal%7CMetal+Mania%7CMetrophobic%7CMichroma%7CMilonga%7CMiltonian%7CMiltonian+Tattoo%7CMiniver%7CMiriam+Libre%7CMirza%7CMiss+Fajardose%7CMitr%7CModak%7CModern+Antiqua%7CMogra%7CMolengo%7CMolle%7CMonda%7CMonofett%7CMonoton%7CMonsieur+La+Doulaise%7CMontaga%7CMontez%7CMontserrat%7CMontserrat+Alternates%7CMontserrat+Subrayada%7CMoul%7CMoulpali%7CMountains+of+Christmas%7CMouse+Memoirs%7CMr+Bedfort%7CMr+Dafoe%7CMr+De+Haviland%7CMrs+Saint+Delafield%7CMrs+Sheppards%7CMukta+Vaani%7CMuli%7CMystery+Quest%7CNTR%7CNeucha%7CNeuton%7CNew+Rocker%7CNews+Cycle%7CNiconne%7CNixie+One%7CNobile%7CNokora%7CNorican%7CNosifer%7CNothing+You+Could+Do%7CNoticia+Text%7CNoto+Sans%7CNoto+Serif%7CNova+Cut%7CNova+Flat%7CNova+Mono%7CNova+Oval%7CNova+Round%7CNova+Script%7CNova+Slim%7CNova+Square%7CNumans%7CNunito%7CNunito+Sans%7COdor+Mean+Chey%7COffside%7COld+Standard+TT%7COldenburg%7COleo+Script%7COleo+Script+Swash+Caps%7COpen+Sans%7COpen+Sans+Condensed%7COranienbaum%7COrbitron%7COregano%7COrienta%7COriginal+Surfer%7COswald%7COver+the+Rainbow%7COverlock%7COverlock+SC%7COvo%7COxygen%7COxygen+Mono%7CPT+Mono%7CPT+Sans%7CPT+Sans+Caption%7CPT+Sans+Narrow%7CPT+Serif%7CPT+Serif+Caption%7CPacifico%7CPalanquin%7CPalanquin+Dark%7CPaprika%7CParisienne%7CPassero+One%7CPassion+One%7CPathway+Gothic+One%7CPatrick+Hand%7CPatrick+Hand+SC%7CPattaya%7CPatua+One%7CPavanam%7CPaytone+One%7CPeddana%7CPeralta%7CPermanent+Marker%7CPetit+Formal+Script%7CPetrona%7CPhilosopher%7CPiedra%7CPinyon+Script%7CPirata+One%7CPlaster%7CPlay%7CPlayball%7CPlayfair+Display%7CPlayfair+Display+SC%7CPodkova%7CPoiret+One%7CPoller+One%7CPoly%7CPompiere%7CPontano+Sans%7CPoppins%7CPort+Lligat+Sans%7CPort+Lligat+Slab%7CPragati+Narrow%7CPrata%7CPreahvihear%7CPress+Start+2P%7CPridi%7CPrincess+Sofia%7CProciono%7CPrompt%7CProsto+One%7CProza+Libre%7CPuritan%7CPurple+Purse%7CQuando%7CQuantico%7CQuattrocento%7CQuattrocento+Sans%7CQuestrial%7CQuicksand%7CQuintessential%7CQwigley%7CRacing+Sans+One%7CRadley%7CRajdhani%7CRakkas%7CRaleway%7CRaleway+Dots%7CRamabhadra%7CRamaraja%7CRambla%7CRammetto+One%7CRanchers%7CRancho%7CRanga%7CRasa%7CRationale%7CRedressed%7CReem+Kufi%7CReenie+Beanie%7CRevalia%7CRhodium+Libre%7CRibeye%7CRibeye+Marrow%7CRighteous%7CRisque%7CRoboto%7CRoboto+Condensed%7CRoboto+Mono%7CRoboto+Slab%7CRochester%7CRock+Salt%7CRokkitt%7CRomanesco%7CRopa+Sans%7CRosario%7CRosarivo%7CRouge+Script%7CRozha+One%7CRubik%7CRubik+Mono+One%7CRubik+One%7CRuda%7CRufina%7CRuge+Boogie%7CRuluko%7CRum+Raisin%7CRuslan+Display%7CRuthie%7CRye%7CSacramento%7CSahitya%7CSail%7CSalsa%7CSanchez%7CSancreek%7CSansita+One%7CSarala%7CSarina%7CSarpanch%7CSatisfy%7CScada%7CScheherazade%7CSchoolbell%7CScope+One%7CSeaweed+Script%7CSecular+One%7CSen%7CSevillana%7CSeymour+One%7CShadows+Into+Light%7CShadows+Into+Light+Two%7CShanti%7CShare%7CShare+Tech%7CShare+Tech+Mono%7CShojumaru%7CShort+Stack%7CShrikhand%7CSiemreap%7CSigmar+One%7CSignika%7CSignika+Negative%7CSimonetta%7CSintony%7CSirin+Stencil%7CSix+Caps%7CSkranji%7CSlabo+13px%7CSlabo+27px%7CSlackey%7CSmokum%7CSmythe%7CSniglet%7CSnippet%7CSnowburst+One%7CSofadi+One%7CSofia%7CSonsie+One%7CSorts+Mill+Goudy%7CSource+Code+Pro%7CSource+Sans+Pro%7CSource+Serif+Pro%7CSpace+Mono%7CSpecial+Elite%7CSpicy+Rice%7CSpinnaker%7CSpirax%7CSquada+One%7CSree+Krushnadevaraya%7CSriracha%7CStalemate%7CStalinist+One%7CStardos+Stencil%7CStint+Ultra+Condensed%7CStint+Ultra+Expanded%7CStoke%7CStrait%7CSue+Ellen+Francisco%7CSuez+One%7CSumana%7CSunshiney%7CSupermercado+One%7CSura%7CSuranna%7CSuravaram%7CSuwannaphum%7CSwanky+and+Moo+Moo%7CSyncopate%7CTangerine%7CTaprom%7CTauri%7CTaviraj%7CTeko%7CTelex%7CTenali+Ramakrishna%7CTenor+Sans%7CText+Me+One%7CThe+Girl+Next+Door%7CTienne%7CTillana%7CTimmana%7CTinos%7CTitan+One%7CTitillium+Web%7CTrade+Winds%7CTrirong%7CTrocchi%7CTrochut%7CTrykker%7CTulpen+One%7CUbuntu%7CUbuntu+Condensed%7CUbuntu+Mono%7CUltra%7CUncial+Antiqua%7CUnderdog%7CUnica+One%7CUnifrakturCook%7CUnifrakturMaguntia%7CUnkempt%7CUnlock%7CUnna%7CVT323%7CVampiro+One%7CVarela%7CVarela+Round%7CVast+Shadow%7CVesper+Libre%7CVibur%7CVidaloka%7CViga%7CVoces%7CVolkhov%7CVollkorn%7CVoltaire%7CWaiting+for+the+Sunrise%7CWallpoet%7CWalter+Turncoat%7CWarnes%7CWellfleet%7CWendy+One%7CWire+One%7CWork+Sans%7CYanone+Kaffeesatz%7CYantramanav%7CYatra+One%7CYellowtail%7CYeseva+One%7CYesteryear%7CYrsa%7CZeyada&#038;subset=latin%2Clatin-ext' type='text/css' media='all' />
<script type="text/javascript" src="https://malverse.it/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://malverse.it/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<script type="text/javascript" src="https://malverse.it/wp-content/themes/honeypress/assets/js/jquery.mb.YTPlayer.js?ver=6.7.1" id="honeypress-video-slider-js-js"></script>
<link rel="https://api.w.org/" href="https://malverse.it/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://malverse.it/wp-json/wp/v2/posts/365" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://malverse.it/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.7.1" />
<link rel="canonical" href="https://malverse.it/costruiamo-un-config-extractor-per-danabot-parte-1" />
<link rel='shortlink' href='https://malverse.it/?p=365' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://malverse.it/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fmalverse.it%2Fcostruiamo-un-config-extractor-per-danabot-parte-1" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://malverse.it/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fmalverse.it%2Fcostruiamo-un-config-extractor-per-danabot-parte-1&#038;format=xml" />
    <style>
    .page-title h1{
    	color: #fff !important;
    }
    </style>
    
<style>
  body h1 {
    	color: #061018 ;
    }
		body.dark h1 {
				color: #ffffff ;
			}
    body .section-header h2, body .funfact h2, body h2{
    	color: #061018;
    }
		body.dark .section-header h2, body.dark h2, body.dark h2.text-white {
    	color: #ffffff;
    }
    body h3 {
    	color: #061018;
    }
		body.dark h3, body.dark h3 a {
    	color: #ffffff;
    }
    body .entry-header h4 > a, body h4 {
    	color: #061018;
    }
	  .dark .entry-header h4 > a, .dark h4, .dark .services .entry-header .entry-title a {
    	color: #ffffff;
    }
    body .product-price h5 > a, body .blog-author h5, body .comment-detail h5, body h5, body .blog .blog-author.media h5{
    	color: #061018;
    }
		body.dark .product-price h5 > a, body.dark .blog-author h5, body.dark .comment-detail h5, body.dark h5, body.dark .blog .blog-author.media h5{
    	color: #ffffff;
    }
    body h6 {
    	color: #061018;
    }
		body.dark h6 {
    	color: #ffffff;
    }
    p,body .services5 .post .entry-content p, p.comment-form-comment label, .navbar7 .menu-html p{
    	color: #061018;
    }
		.dark p:not(.testmonial-block5 p, .section-header .section-subtitle, .textwidget p, p.description, p.site-description), body.dark .services5 .post .entry-content p, .dark p.comment-form-comment label {
    	color: #c8c8c8;
    }
    .site-footer .site-info p{color: #bec3c7;}


    /* Sidebar */
    body .sidebar .widget-title, body .sidebar .wp-block-search .wp-block-search__label, body .sidebar .wc-block-product-search .wc-block-product-search__label, body .sidebar .widget h1, body .sidebar .widget h2, body .sidebar .widget h3, body .sidebar .widget h4, body .sidebar .widget h5, body .sidebar .widget h6 {
    	color: #061018;
    }
		body.dark .sidebar .widget-title, body.dark .sidebar .wp-block-search .wp-block-search__label, body.dark .sidebar .widget h1, body.dark .sidebar .widget h2, body.dark .sidebar .widget h3, body.dark .sidebar .widget h4, body.dark .sidebar .widget h5, body.dark .sidebar .widget h6 {
    	color: #ffffff;
    }
    body .sidebar p, body .sidebar .woocommerce-Price-amount.amount,.sidebar .quantity, body .sidebar #wp-calendar, body .sidebar #wp-calendar caption, body .sidebar .wp-block-latest-posts__post-excerpt, body .sidebar .wp-block-latest-posts__post-author, body .sidebar .wp-block-latest-posts__post-date, body .sidebar .wp-block-latest-comments__comment-date  {
    	color: #061018;
    }
		body.dark .sidebar p, body.dark .sidebar .woocommerce-Price-amount.amount,.sidebar .quantity, body.dark .sidebar #wp-calendar, body.dark .sidebar #wp-calendar caption, body.dark .sidebar .wp-block-latest-posts__post-excerpt, body.dark .sidebar .wp-block-latest-posts__post-author, body.dark .sidebar .wp-block-latest-posts__post-date, body.dark .sidebar .wp-block-latest-comments__comment-date {
    	color: #c8c8c8  !important;
    }
    body .sidebar a, body #wrapper .sidebar .woocommerce a {
    	color: #061018;
    }
		body.dark .sidebar a, body.dark #wrapper .sidebar .woocommerce a {
			color: #ffffff;
		}
</style>
    

            <style>
		.site-footer p {
			color: #ffffff;
		}
        </style>
<style type="text/css">
    .custom-logo{width: 230px; height: auto;}
    .honeypress_header_btn{ -webkit-border-radius: 0px;border-radius: 0px;}
   #wrapper .container{max-width: 1140px;}
   #wrapper .site-footer .container{max-width: 1140px;}
</style>
		<style type="text/css" id="wp-custom-css">
			.page-title-section 
{
    background: url(https://malverse.it/wp-content/uploads/2022/08/fractal-ge45052f6e_1920.jpg);
	  background-position: center;

}



.wp-block-image figcaption {
  font-size: 13px;
  line-height: 1.5;
  margin: 0;
  color: $gray-medium;
}		</style>
				</head>
		<body class="post-template-default single single-post postid-365 single-format-standard  custom-background dark" >
								<div id="page" class="site">
						<a class="skip-link screen-reader-text" href="#wrapper">Vai al contenuto</a>
												<nav class="navbar navbar-expand-lg navbar-light ">
		<div class="container">
								<div class="custom-logo-link-url">
		    		<h1 class="site-title"><a class="site-title-name" href="https://malverse.it/" >Malverse</a></h1>
				    				</div>
				<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Navigazione toggle">
						<span class="navbar-toggler-icon"></span>
				</button>
				<div class="collapse navbar-collapse" id="navbarNavDropdown">
						<div class="ml-auto">
								<ul class="nav navbar-nav mr-auto "><li class="nav-item menu-item "><a class="nav-link " href="https://malverse.it/" title="Home">Home</a></li><li class="nav-item menu-item page_item dropdown page-item-460 current_page_parent"><a class="nav-link" href="https://malverse.it/blog">Blog</a></li><li class="nav-item menu-item page_item dropdown page-item-33"><a class="nav-link" href="https://malverse.it/risorse-utili">Risorse Utili</a></li></ul>
					</div>
			</div>
	</div>
</nav>
		<section class="page-title-section" >		
			<div class="overlay"></div>	
			<div class="container">
				<div class="row">
					<div class="col-lg-12 col-md-12">
                                         
							<div class="page-title text-center text-white">
											                    	<h1 class="text-white">Config Extractor per DanaBot (PARTE 1)</h1>
			                    			                </div>	
						                    </div>
				</div>
			</div>	
		</section>
							<div id="wrapper">
<section class="section-module blog">
	<div class="container">
		<div class="row">
			<div class="col-lg-8 col-md-7 col-sm-12 standard-view blog-single"><article class="post">
	<div class="entry-meta"><span class="cat-links"><a href="https://malverse.it/category/malwareanalysis" rel="category tag">Malware Analysis</a></span></div>	
											
	<header class="entry-header">
		<h2 class="entry-title">Config Extractor per DanaBot (PARTE 1)</h2>
	</header>
		<div class="entry-meta mb-4">
							<span class="author">
					<a  href="https://malverse.it/author/greenplan">By greenplan</a>
				</span>
							<span class="posted-on">
					<a  href="https://malverse.it/1970/01"><time>Agosto 7, 2022</time></a>
				</span>
							<span class="comment-links">
					<a  href="https://malverse.it/costruiamo-un-config-extractor-per-danabot-parte-1#respond">0</a>
				</span>
					</div>
			<figure class="post-thumbnail mb-4">
			<img width="1280" height="450" src="https://malverse.it/wp-content/uploads/2022/08/Danabot_____.jpg" class="img-fluid wp-post-image" alt="" decoding="async" fetchpriority="high" srcset="https://malverse.it/wp-content/uploads/2022/08/Danabot_____.jpg 1280w, https://malverse.it/wp-content/uploads/2022/08/Danabot_____-300x105.jpg 300w, https://malverse.it/wp-content/uploads/2022/08/Danabot_____-1024x360.jpg 1024w, https://malverse.it/wp-content/uploads/2022/08/Danabot_____-768x270.jpg 768w" sizes="(max-width: 1280px) 100vw, 1280px" />						
		</figure>	
		
	<div class="entry-content">
		
<h2 class="wp-block-heading">Introduzione</h2>



<p>Ciao a tutti, oggi volevo analizzare la sfida bi-settimanale lanciata di Daniel di Zero2Auto che consiste questa volta nel scrivere un Config Extractor che funzioni per le diverse versioni di <strong>DanaBot</strong>, un malware scritto in <strong>Delphi</strong>.</p>



<p>Da <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.danabot" data-type="URL" data-id="https://malpedia.caad.fkie.fraunhofer.de/details/win.danabot" target="_blank" rel="noreferrer noopener">Malpedia</a>:</p>



<blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow"><p><em>Proofpoints describes DanaBot as the latest example of malware focused on persistence and stealing useful information that can later be monetized rather than demanding an immediate ransom from victims. The social engineering in the low-volume DanaBot campaigns we have observed so far has been well-crafted, again pointing to a renewed focus on “quality over quantity” in email-based threats. DanaBot’s modular nature enables it to download additional components, increasing the flexibility and robust stealing and remote monitoring capabilities of this banker.</em></p></blockquote>



<p>Ci vengono forniti questi quattro link, che ci permettono di ottenere diverse versioni del sample:</p>



<ul class="wp-block-list"><li><a rel="noreferrer noopener" href="https://tria.ge/220730-18sgmaafg4" target="_blank">https://tria.ge/220730-18sgmaafg4</a></li><li><a rel="noreferrer noopener" href="https://tria.ge/220731-np187sfcej" target="_blank">https://tria.ge/220731-np187sfcej</a></li><li><a rel="noreferrer noopener" href="https://tria.ge/220731-lj42ssaac3" target="_blank">https://tria.ge/220731-lj42ssaac3</a></li><li><a rel="noreferrer noopener" href="https://tria.ge/220716-zxqyzsfahn" target="_blank">Hatching Triage | Malware sandboxing report by Hatching Triage</a></li></ul>



<p>Logicamente possiamo ottenere altri sample classificati come Danabot, ad esempio <a rel="noreferrer noopener" href="https://tria.ge/s/family:danabot" target="_blank">qui</a> e <a rel="noreferrer noopener" href="https://any.run/malware-trends/danabot" target="_blank">qui</a>.</p>



<p>In particolare, in questo post analizzeremo tre sample (<strong>MD5: 6b448c6851f3235c9b3d0c24353c480f</strong><strong>, 5c0be4a5273dec6b3ebb180a90f337f2</strong>, <strong>611c2bf7aa7bb62e90f3a92f3682c0b5</strong>), realizzando un semplice script per estrarre gli IP del C&amp;C; nei prossimi post analizzeremo come avviene la comunicazione con il C&amp;C, indentificheremo le funzioni di cifratura, estrarremo la chiave RSA e realizzeremo lo script finale che funziona sui diversi sample forniti.</p>



<p></p>



<p>Partiremo da analizzare il primo sample, si tratta del <strong>Main Component</strong> di DanaBot, successivamente analizzeremo dei sample più complessi che contengono al loro interno il Main Component.</p>



<h2 class="wp-block-heading">Analisi Main Component Danabot</h2>



<p>Partiamo analizzando il primo sample (<strong>MD5: 6b448c6851f3235c9b3d0c24353c480f</strong>); si tratta del Main Component di DanaBot, sviluppato in <strong>Delphi</strong> ed esporta diverse funzioni (f0, f1, &#8230; , f9):</p>



<figure class="wp-block-image size-full is-resized"><img decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/image-21.png" alt="" class="wp-image-366" width="759" height="415" srcset="https://malverse.it/wp-content/uploads/2022/08/image-21.png 713w, https://malverse.it/wp-content/uploads/2022/08/image-21-300x164.png 300w" sizes="(max-width: 759px) 100vw, 759px" /><figcaption>DIE rileva che si tratta di una DLL scritta in Delphi</figcaption></figure>



<figure class="wp-block-image size-full is-resized"><img decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/image-22.png" alt="" class="wp-image-367" width="350" height="298"/><figcaption>Funzioni esportate dalla DLL</figcaption></figure>



<p>Analizzando la funzione F0, dopo la decifratura di diverse stringhe e la creazione di un altro thread, troviamo la creazione di un thread che contiene diverse chiamate per effettuare operazioni con i <strong>socket</strong> (per chi volesse maggiori informazioni sul funzionamento dei socket può consultare <a rel="noreferrer noopener" href="http://www.lia.deis.unibo.it/Courses/RetiLA/RetiLA_06-07/materiale/lezioni/sockcx2.pdf" data-type="URL" data-id="http://www.lia.deis.unibo.it/Courses/RetiLA/RetiLA_06-07/materiale/lezioni/sockcx2.pdf" target="_blank">questa</a> ottima guida); tracciando i parametri passati a queste funzioni, riusciamo ad ottenere dove effettivamente avviene la creazione del config.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="658" height="305" src="https://malverse.it/wp-content/uploads/2022/08/image-31.png" alt="" class="wp-image-398" srcset="https://malverse.it/wp-content/uploads/2022/08/image-31.png 658w, https://malverse.it/wp-content/uploads/2022/08/image-31-300x139.png 300w" sizes="auto, (max-width: 658px) 100vw, 658px" /><figcaption>Creazione del Thread principale che si occupa di comunicare con il C&amp;C</figcaption></figure>



<p>La funzione che ci interessa attualmente è <strong>inet_addr</strong>, essendo che ha come parametro l&#8217;IP in formato dotted-decimal; in realtà non troveremo l&#8217;IP direttamente in questo formato, ma l&#8217;IP in formato decimale verrà prima convertito con una semplice funzione che ho rinominato <strong>IntToIP</strong> e poi passato a inet_addr:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="486" height="526" src="https://malverse.it/wp-content/uploads/2022/08/test.png" alt="" class="wp-image-368" srcset="https://malverse.it/wp-content/uploads/2022/08/test.png 486w, https://malverse.it/wp-content/uploads/2022/08/test-277x300.png 277w" sizes="auto, (max-width: 486px) 100vw, 486px" /><figcaption>Operazioni con i socket e conversione dell&#8217;IP da int</figcaption></figure>



<p>Il primo parametro della funzione IntToIP è un parametro a sua volta della funzione padre, quindi analizzo le chiamate a questa funzione (solo una) e traccio tale valore; viene referenziato solo in due funzioni e in particolare una è interessante perché come parametro ha una variabile globale:</p>



<figure class="wp-block-image size-large is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/test2-1024x411.png" alt="" class="wp-image-373" width="840" height="337" srcset="https://malverse.it/wp-content/uploads/2022/08/test2-1024x411.png 1024w, https://malverse.it/wp-content/uploads/2022/08/test2-300x120.png 300w, https://malverse.it/wp-content/uploads/2022/08/test2-768x308.png 768w, https://malverse.it/wp-content/uploads/2022/08/test2.png 1088w" sizes="auto, (max-width: 840px) 100vw, 840px" /><figcaption>Funzione che accede in scrittura al Config</figcaption></figure>



<p>Questa variabile è acceduta da diverse funzioni, in particolare una di queste effettua la scrittura in questa zona di memoria; essendo che non contiene dati, viene quindi popolata in runtime, avvio quindi il debugger e confermo che questa zona di memoria contiene proprio il config (inizia con <strong>3C </strong>e termina con <strong>4E</strong>):</p>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/test4.png" alt="" class="wp-image-400" width="602" height="219" srcset="https://malverse.it/wp-content/uploads/2022/08/test4.png 531w, https://malverse.it/wp-content/uploads/2022/08/test4-300x109.png 300w" sizes="auto, (max-width: 602px) 100vw, 602px" /><figcaption>Config ottenuto con il debugger</figcaption></figure>



<p>Confermata che fosse questa la funzione che costruisce il config, trovo infatti a un certo punto una variabile globale che contiene i diversi IP:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="517" src="https://malverse.it/wp-content/uploads/2022/08/test3-1024x517.png" alt="" class="wp-image-375" srcset="https://malverse.it/wp-content/uploads/2022/08/test3-1024x517.png 1024w, https://malverse.it/wp-content/uploads/2022/08/test3-300x152.png 300w, https://malverse.it/wp-content/uploads/2022/08/test3-768x388.png 768w, https://malverse.it/wp-content/uploads/2022/08/test3.png 1146w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /><figcaption>IP in formato int </figcaption></figure>



<p>Vediamo quindi un primo script specifico per questo sample, che poi verrà generalizzato per supportare i vari sample. In questo caso ho effettuato una regex sullo specifico move nella funzione di Config Builder per ottenere l&#8217;indirizzo specifico che contiene i diversi IP del C&amp;C.</p>



<pre class="wp-block-code"><code>import pefile, ipaddress, binascii, re, struct

pe = None
imageBase = None


def GetRVA(va):
    return pe.get_offset_from_rva(va - imageBase)


def GetVA(raw):
    return imageBase + pe.get_rva_from_offset(raw)


def main():

    global pe, imageBase

    filename = "sample3"

    with open(filename, 'rb') as sample:
        data = bytearray(sample.read())        
      
    pe = pefile.PE(filename)
    imageBase = pe.OPTIONAL_HEADER.ImageBase
    

    copy_operation = b'\xa1\x68\x57\x54\x00'
    
    for m in re.compile(copy_operation).finditer(data):      
        addrStart = int(hex(struct.unpack("&lt;L", data&#91;m.start() + 1:m.start() + 1 + 4])&#91;0]), 16)

    
    for i in range(10):
        
        start = int(hex(addrStart + i*4),16)
        end = int(hex(addrStart + (i+1)*4),16)
        
        ip = binascii.hexlify(data&#91;GetRVA(start):GetRVA(end)])
        
        print(str(ipaddress.IPv4Address(int(ip, 16))))


if __name__ == "__main__":
    main()

</code></pre>



<p>Lo script ci permette di ottenere i diversi IP utilizzati dal malware come C&amp;C:</p>



<p>243.127.43.6<br>64.126.175.2<br>130.15.230.152<br>74.99.136.192<br>244.14.226.35<br>95.179.168.37<br>51.129.76.8<br>151.210.85.159<br>45.76.123.177<br>75.57.14.121</p>



<h2 class="wp-block-heading">Analisi Loader Danabot</h2>



<p>Nel secondo sample (<strong>MD5: 611c2bf7aa7bb62e90f3a92f3682c0b5</strong>) abbiamo un VBS script molto offuscato:</p>



<figure class="wp-block-image size-large is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/image-25-1024x320.png" alt="" class="wp-image-379" width="932" height="291" srcset="https://malverse.it/wp-content/uploads/2022/08/image-25-1024x320.png 1024w, https://malverse.it/wp-content/uploads/2022/08/image-25-300x94.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-25-768x240.png 768w, https://malverse.it/wp-content/uploads/2022/08/image-25-1536x479.png 1536w, https://malverse.it/wp-content/uploads/2022/08/image-25.png 1580w" sizes="auto, (max-width: 932px) 100vw, 932px" /><figcaption>Dropper VBS offuscato</figcaption></figure>



<p>Una volta avviato si ottengono due messaggi:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="395" height="162" src="https://malverse.it/wp-content/uploads/2022/08/image-26.png" alt="" class="wp-image-380" srcset="https://malverse.it/wp-content/uploads/2022/08/image-26.png 395w, https://malverse.it/wp-content/uploads/2022/08/image-26-300x123.png 300w" sizes="auto, (max-width: 395px) 100vw, 395px" /><figcaption>Primo messaggio dello script</figcaption></figure>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/image-27.png" alt="" class="wp-image-381" width="397" height="126" srcset="https://malverse.it/wp-content/uploads/2022/08/image-27.png 490w, https://malverse.it/wp-content/uploads/2022/08/image-27-300x96.png 300w" sizes="auto, (max-width: 397px) 100vw, 397px" /><figcaption>Secondo messaggio dello script</figcaption></figure>



<p>Lo script salva la DLL <strong>yvNdiXKm.txt</strong> in TEMP e avvia la funzione F0, che in realtà non viene esportata dalla DLL e quindi viene avviato l&#8217;entry:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="534" height="342" src="https://malverse.it/wp-content/uploads/2022/08/image-28.png" alt="" class="wp-image-382" srcset="https://malverse.it/wp-content/uploads/2022/08/image-28.png 534w, https://malverse.it/wp-content/uploads/2022/08/image-28-300x192.png 300w" sizes="auto, (max-width: 534px) 100vw, 534px" /><figcaption>Il VBS estrae la DLL in temp e la avvia</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="536" height="346" src="https://malverse.it/wp-content/uploads/2022/08/image-29.png" alt="" class="wp-image-383" srcset="https://malverse.it/wp-content/uploads/2022/08/image-29.png 536w, https://malverse.it/wp-content/uploads/2022/08/image-29-300x194.png 300w" sizes="auto, (max-width: 536px) 100vw, 536px" /><figcaption>Rundll32 avvia la funzione F0 della DLL (entry)</figcaption></figure>



<p>Effettuiamo una prima analisi del sample con Resource Hacker, PE Studio e Detect It Easy:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="662" height="292" src="https://malverse.it/wp-content/uploads/2022/08/image-128.png" alt="" class="wp-image-720" srcset="https://malverse.it/wp-content/uploads/2022/08/image-128.png 662w, https://malverse.it/wp-content/uploads/2022/08/image-128-300x132.png 300w" sizes="auto, (max-width: 662px) 100vw, 662px" /><figcaption>Il sample risulta packed</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="952" height="398" src="https://malverse.it/wp-content/uploads/2022/08/image-130.png" alt="" class="wp-image-724" srcset="https://malverse.it/wp-content/uploads/2022/08/image-130.png 952w, https://malverse.it/wp-content/uploads/2022/08/image-130-300x125.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-130-768x321.png 768w" sizes="auto, (max-width: 952px) 100vw, 952px" /><figcaption>Le pochi capability trovate da capa confermano sia un packer</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="540" src="https://malverse.it/wp-content/uploads/2022/08/image-126-1024x540.png" alt="" class="wp-image-716" srcset="https://malverse.it/wp-content/uploads/2022/08/image-126-1024x540.png 1024w, https://malverse.it/wp-content/uploads/2022/08/image-126-300x158.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-126-768x405.png 768w, https://malverse.it/wp-content/uploads/2022/08/image-126-1536x809.png 1536w, https://malverse.it/wp-content/uploads/2022/08/image-126.png 1596w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /><figcaption>La DLL è composta da diversi form</figcaption></figure>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/image-129.png" alt="" class="wp-image-722" width="706" height="30" srcset="https://malverse.it/wp-content/uploads/2022/08/image-129.png 621w, https://malverse.it/wp-content/uploads/2022/08/image-129-300x13.png 300w" sizes="auto, (max-width: 706px) 100vw, 706px" /><figcaption>Path con riferimenti alla guerra e Russia</figcaption></figure>



<p>Analizzando questa DLL non trovo le funzioni socket viste in precedenza essendo il packer; metto come breakpoint le funzioni <strong>VirtualProtect</strong>, <strong>VirtualAlloc</strong> e <strong>CreateThread</strong>. Viene raggiunto VirtualProtect e all&#8217;indirizzo <strong>base_address + 0x115f50 </strong>è presente la shellcode, che viene copiata dall&#8217;indirizzo <strong>base_address + <strong>0xdaaa0</strong></strong>:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="565" src="https://malverse.it/wp-content/uploads/2022/08/copy_encrypted_shellcode-1024x565.png" alt="" class="wp-image-557" srcset="https://malverse.it/wp-content/uploads/2022/08/copy_encrypted_shellcode-1024x565.png 1024w, https://malverse.it/wp-content/uploads/2022/08/copy_encrypted_shellcode-300x165.png 300w, https://malverse.it/wp-content/uploads/2022/08/copy_encrypted_shellcode-768x424.png 768w, https://malverse.it/wp-content/uploads/2022/08/copy_encrypted_shellcode.png 1037w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /><figcaption>Copia della shellcode cifrata</figcaption></figure>



<p>In particolare, la decifratura della shellcode è molto semplice, infatti nonostante siano presente molto operazioni, viene solo modificata da una operazione, che aggiunge per ogni 4 byte il valore <strong>0x1828308</strong> e questa somma viene fatta per<strong> 0x0135910C</strong> volte:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="612" height="480" src="https://malverse.it/wp-content/uploads/2022/08/image-122.png" alt="" class="wp-image-691" srcset="https://malverse.it/wp-content/uploads/2022/08/image-122.png 612w, https://malverse.it/wp-content/uploads/2022/08/image-122-300x235.png 300w" sizes="auto, (max-width: 612px) 100vw, 612px" /><figcaption>Decifratura della shellcode</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="301" src="https://malverse.it/wp-content/uploads/2022/08/shellcode_execution-1-1024x301.png" alt="" class="wp-image-730" srcset="https://malverse.it/wp-content/uploads/2022/08/shellcode_execution-1-1024x301.png 1024w, https://malverse.it/wp-content/uploads/2022/08/shellcode_execution-1-300x88.png 300w, https://malverse.it/wp-content/uploads/2022/08/shellcode_execution-1-768x226.png 768w, https://malverse.it/wp-content/uploads/2022/08/shellcode_execution-1.png 1285w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /><figcaption>Esecuzione della shellcode attraverso RET</figcaption></figure>



<p>Dopo la decifratura viene avviata la shellcode che si occupa di decifrare la restante shellcode:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="624" height="352" src="https://malverse.it/wp-content/uploads/2022/08/shellcodeDecryptionLoop.png" alt="" class="wp-image-518" srcset="https://malverse.it/wp-content/uploads/2022/08/shellcodeDecryptionLoop.png 624w, https://malverse.it/wp-content/uploads/2022/08/shellcodeDecryptionLoop-300x169.png 300w" sizes="auto, (max-width: 624px) 100vw, 624px" /><figcaption>Il loop di decryption che decifra la restante shellcode e le funzioni della nuova DLL</figcaption></figure>



<p></p>



<figure class="wp-block-image size-large is-resized zoooom"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/decryption_looppng-1024x274.png" alt="" class="wp-image-732" width="970" height="259" srcset="https://malverse.it/wp-content/uploads/2022/08/decryption_looppng-1024x274.png 1024w, https://malverse.it/wp-content/uploads/2022/08/decryption_looppng-300x80.png 300w, https://malverse.it/wp-content/uploads/2022/08/decryption_looppng-768x206.png 768w, https://malverse.it/wp-content/uploads/2022/08/decryption_looppng-1536x411.png 1536w, https://malverse.it/wp-content/uploads/2022/08/decryption_looppng.png 1867w" sizes="auto, (max-width: 970px) 100vw, 970px" /><figcaption>Control Flow prima e dopo la decifratura</figcaption></figure>



<p>Successivamente avviene qualcosa di molto interessante, la shellcode cambia i i permessi della varie sezioni con <strong>VirtualProtect </strong>in scrittura (0x4) riscrivendo parte di queste e quella in .data in execution (0x40); questa tecnica si chiama <strong>Reflective DLL Loading </strong>e consiste nel caricare direttamente la DLL dalla memoria senza passare dal disco.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="922" height="84" src="https://malverse.it/wp-content/uploads/2022/08/image-82.png" alt="" class="wp-image-561" srcset="https://malverse.it/wp-content/uploads/2022/08/image-82.png 922w, https://malverse.it/wp-content/uploads/2022/08/image-82-300x27.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-82-768x70.png 768w" sizes="auto, (max-width: 922px) 100vw, 922px" /><figcaption>Permessi iniziali della DLL</figcaption></figure>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/image-83.png" alt="" class="wp-image-562" width="840" height="77" srcset="https://malverse.it/wp-content/uploads/2022/08/image-83.png 927w, https://malverse.it/wp-content/uploads/2022/08/image-83-300x28.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-83-768x70.png 768w" sizes="auto, (max-width: 840px) 100vw, 840px" /><figcaption>Cambio dei permessi in scrittura</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="906" height="82" src="https://malverse.it/wp-content/uploads/2022/08/image-85.png" alt="" class="wp-image-564" srcset="https://malverse.it/wp-content/uploads/2022/08/image-85.png 906w, https://malverse.it/wp-content/uploads/2022/08/image-85-300x27.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-85-768x70.png 768w" sizes="auto, (max-width: 906px) 100vw, 906px" /><figcaption>Cambio dei permessi in esecuzione</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="629" height="210" src="https://malverse.it/wp-content/uploads/2022/08/image-84.png" alt="" class="wp-image-563" srcset="https://malverse.it/wp-content/uploads/2022/08/image-84.png 629w, https://malverse.it/wp-content/uploads/2022/08/image-84-300x100.png 300w" sizes="auto, (max-width: 629px) 100vw, 629px" /><figcaption>Riferimento a Delphi</figcaption></figure>



<p>Successivamente viene eseguito <strong>CreateThread</strong>, passando come indirizzo un indirizzo presente in .data, ricordiamo decifrato in precedenza dalla shellcode.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="408" height="415" src="https://malverse.it/wp-content/uploads/2022/08/image-65.png" alt="" class="wp-image-516" srcset="https://malverse.it/wp-content/uploads/2022/08/image-65.png 408w, https://malverse.it/wp-content/uploads/2022/08/image-65-295x300.png 295w" sizes="auto, (max-width: 408px) 100vw, 408px" /><figcaption>Creazione del thread con la funzione decifrata dalla shellcode</figcaption></figure>



<p>Inseriamo nuovamente come breakpoint la funzione connect e otteniamo la funzione dove si effettua la connessione al C&amp;C:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="691" height="203" src="https://malverse.it/wp-content/uploads/2022/08/image-68.png" alt="" class="wp-image-522" srcset="https://malverse.it/wp-content/uploads/2022/08/image-68.png 691w, https://malverse.it/wp-content/uploads/2022/08/image-68-300x88.png 300w" sizes="auto, (max-width: 691px) 100vw, 691px" /></figure>



<p>Anche questa volta vediamo che il config inizia con <strong>3C </strong>e termina con <strong>4E</strong> ma il terzo e il quarto byte sono differenti rispetto al config precedente:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="628" height="188" src="https://malverse.it/wp-content/uploads/2022/08/config2.png" alt="" class="wp-image-531" srcset="https://malverse.it/wp-content/uploads/2022/08/config2.png 628w, https://malverse.it/wp-content/uploads/2022/08/config2-300x90.png 300w" sizes="auto, (max-width: 628px) 100vw, 628px" /><figcaption>Config ottenuto con il debugger</figcaption></figure>



<p>Ho iniziato quindi a tracciare le diverse VirtualAlloc per capire dove effettivamente fosse il config; a un certo punto viene allocata una zona di memoria e il suo indirizzo salvato in <strong>[ebx+631549] </strong>e questo puntatore viene utilizzato per effettuare diverse operazioni sul PE per deoffuscarlo:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="572" height="121" src="https://malverse.it/wp-content/uploads/2022/08/image-124.png" alt="" class="wp-image-704" srcset="https://malverse.it/wp-content/uploads/2022/08/image-124.png 572w, https://malverse.it/wp-content/uploads/2022/08/image-124-300x63.png 300w" sizes="auto, (max-width: 572px) 100vw, 572px" /><figcaption>VirtualAlloc alloca la zona di memoria per il PE</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="794" height="610" src="https://malverse.it/wp-content/uploads/2022/08/decrypt_and_decompress_PE-3.png" alt="" class="wp-image-702" srcset="https://malverse.it/wp-content/uploads/2022/08/decrypt_and_decompress_PE-3.png 794w, https://malverse.it/wp-content/uploads/2022/08/decrypt_and_decompress_PE-3-300x230.png 300w, https://malverse.it/wp-content/uploads/2022/08/decrypt_and_decompress_PE-3-768x590.png 768w" sizes="auto, (max-width: 794px) 100vw, 794px" /><figcaption>Deobfuscation del PE tramite decifratura e decompressione</figcaption></figure>



<p>La prima funzione che viene eseguita estrae il PE offuscato copiando il contenuto in EDI; il PE offuscato si trova nell&#8217;indirizzo di memoria <strong>base_address + 0xbecc</strong>.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="741" height="634" src="https://malverse.it/wp-content/uploads/2022/08/extract_pe.png" alt="" class="wp-image-707" srcset="https://malverse.it/wp-content/uploads/2022/08/extract_pe.png 741w, https://malverse.it/wp-content/uploads/2022/08/extract_pe-300x257.png 300w" sizes="auto, (max-width: 741px) 100vw, 741px" /><figcaption>Funzione che copia il PE offuscato da ESI in EDI</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="515" src="https://malverse.it/wp-content/uploads/2022/08/obfuscated_PE_static-1024x515.png" alt="" class="wp-image-711" srcset="https://malverse.it/wp-content/uploads/2022/08/obfuscated_PE_static-1024x515.png 1024w, https://malverse.it/wp-content/uploads/2022/08/obfuscated_PE_static-300x151.png 300w, https://malverse.it/wp-content/uploads/2022/08/obfuscated_PE_static-768x386.png 768w, https://malverse.it/wp-content/uploads/2022/08/obfuscated_PE_static.png 1454w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /><figcaption>PE Offuscato ottenuto staticamente</figcaption></figure>



<p>Questo PE compresso viene decifrato da una semplice funzione:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="601" height="206" src="https://malverse.it/wp-content/uploads/2022/08/image-123.png" alt="" class="wp-image-696" srcset="https://malverse.it/wp-content/uploads/2022/08/image-123.png 601w, https://malverse.it/wp-content/uploads/2022/08/image-123-300x103.png 300w" sizes="auto, (max-width: 601px) 100vw, 601px" /><figcaption>Funzione che decifra il PE</figcaption></figure>



<p>Per quanto riguarda la decompressione, la funzione prende un sottoinsieme di byte dalla zona di memoria puntata da ESI e li trasferisce nella zona di memoria puntata da EDI attraverso <strong>movsb</strong>, <strong>stosb </strong>e <strong>lodsb</strong>; per chi volesse approfondire come funziona il trasferimento attraverso queste istruzioni si può leggere l&#8217;ottimo articolo presente <a rel="noreferrer noopener" href="http://www.salvorosta.it/low/sk.php?TP=1&amp;TI=lods-stos-movs&amp;MH=Mhor0&amp;MV=Masm386&amp;FR=&amp;CP=asm386/asm386-08.php" data-type="URL" data-id="http://www.salvorosta.it/low/sk.php?TP=1&amp;TI=lods-stos-movs&amp;MH=Mhor0&amp;MV=Masm386&amp;FR=&amp;CP=asm386/asm386-08.php" target="_blank">qui</a>. In particolare, il PE è compresso con <a rel="noreferrer noopener" href="https://gist.github.com/securitygab/fef72a0c1bdb6ad0e3d9226f14c3fa1c" target="_blank">APLib</a> (la signature del PE è <strong>M8Z</strong>) e successivamente possiamo utilizzare quindi l&#8217;ottimo <a rel="noreferrer noopener" href="https://github.com/herrcore/aplib-ripper" data-type="URL" data-id="https://github.com/herrcore/aplib-ripper" target="_blank">tool</a> di herrcore.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="706" height="416" src="https://malverse.it/wp-content/uploads/2022/08/image-104.png" alt="" class="wp-image-636" srcset="https://malverse.it/wp-content/uploads/2022/08/image-104.png 706w, https://malverse.it/wp-content/uploads/2022/08/image-104-300x177.png 300w" sizes="auto, (max-width: 706px) 100vw, 706px" /><figcaption>Funzione che si occupa di decomprimere il PE</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="618" src="https://malverse.it/wp-content/uploads/2022/08/image-121-1024x618.png" alt="" class="wp-image-684" srcset="https://malverse.it/wp-content/uploads/2022/08/image-121-1024x618.png 1024w, https://malverse.it/wp-content/uploads/2022/08/image-121-300x181.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-121-768x464.png 768w, https://malverse.it/wp-content/uploads/2022/08/image-121.png 1193w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /><figcaption>Function Graph della funzione che si occupa della decompressione del PE</figcaption></figure>



<p>Al ritorno della funzione in EDX avremo il puntatore al PE completamente deoffuscato, dove infatti troviamo gli IP estratti in precedenza:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="974" height="209" src="https://malverse.it/wp-content/uploads/2022/08/image-105.png" alt="" class="wp-image-643" srcset="https://malverse.it/wp-content/uploads/2022/08/image-105.png 974w, https://malverse.it/wp-content/uploads/2022/08/image-105-300x64.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-105-768x165.png 768w" sizes="auto, (max-width: 974px) 100vw, 974px" /><figcaption>PE completamente deoffuscato zona di memoria puntata da EDX</figcaption></figure>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/image-107.png" alt="" class="wp-image-653" width="751" height="51" srcset="https://malverse.it/wp-content/uploads/2022/08/image-107.png 751w, https://malverse.it/wp-content/uploads/2022/08/image-107-300x20.png 300w" sizes="auto, (max-width: 751px) 100vw, 751px" /><figcaption>Header della nuova DLL estratta corrisponde a Delphi 3</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="431" height="118" src="https://malverse.it/wp-content/uploads/2022/08/image-106.png" alt="" class="wp-image-644" srcset="https://malverse.it/wp-content/uploads/2022/08/image-106.png 431w, https://malverse.it/wp-content/uploads/2022/08/image-106-300x82.png 300w" sizes="auto, (max-width: 431px) 100vw, 431px" /><figcaption>Ricerca dell&#8217;IP nell&#8217;area di memoria puntata da EDX</figcaption></figure>



<p>Questo PE viene poi utilizzato per sovrascrivere le attuali sezioni come visto in precedenza.</p>



<p>Nella seconda parte dell&#8217;articolo realizzerò un video per vedere praticamente questa parte tramite debugger per poi scrivere lo script che si occupa in automatico di rimuovere i diversi layer di obfuscation; per ora, a scopo &#8220;didattico&#8221;, possiamo effettuare il dump della DLL e proseguire; dopo aver effettuato il fixing con Shylla, forzo la decompilazione nella sezione .data ed ecco la funzione di Decryption Config, simile al primo sample che abbiamo ottenuto:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="817" height="549" src="https://malverse.it/wp-content/uploads/2022/08/image-70.png" alt="" class="wp-image-525" srcset="https://malverse.it/wp-content/uploads/2022/08/image-70.png 817w, https://malverse.it/wp-content/uploads/2022/08/image-70-300x202.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-70-768x516.png 768w" sizes="auto, (max-width: 817px) 100vw, 817px" /><figcaption>Config Builder</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="548" height="215" src="https://malverse.it/wp-content/uploads/2022/08/image-88.png" alt="" class="wp-image-569" srcset="https://malverse.it/wp-content/uploads/2022/08/image-88.png 548w, https://malverse.it/wp-content/uploads/2022/08/image-88-300x118.png 300w" sizes="auto, (max-width: 548px) 100vw, 548px" /><figcaption>Caratteristiche nuova DLL sovrascritta dalla shellcode</figcaption></figure>



<p>E anche questa volta otteniamo la lista degli IP come variabili globali:</p>



<figure class="wp-block-image size-large is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/ip2-1024x599.png" alt="" class="wp-image-534" width="843" height="493" srcset="https://malverse.it/wp-content/uploads/2022/08/ip2-1024x599.png 1024w, https://malverse.it/wp-content/uploads/2022/08/ip2-300x175.png 300w, https://malverse.it/wp-content/uploads/2022/08/ip2-768x449.png 768w, https://malverse.it/wp-content/uploads/2022/08/ip2.png 1149w" sizes="auto, (max-width: 843px) 100vw, 843px" /><figcaption>IP del C&amp;C in formato int</figcaption></figure>



<p>Possiamo facilmente cambiare l&#8217;espressione regolare dell&#8217;operazione di copy (\xa1\x68\x47\x00\x02) per ottenere:</p>



<p>181.63.44.194<br>207.148.83.108<br>45.77.40.71<br>87.115.138.169<br>24.229.48.7<br>116.111.206.27<br>45.196.143.203<br>218.65.3.199<br>131.59.110.186<br>113.81.97.96</p>



<p>Vediamo come adattare ora lo script precedente per farlo funzionare per i due sample visti fino ad ora, iniziamo ad analizzare le due funzioni di Config Builder; dovendo generalizzare nella regex la destination essendo l&#8217;indirizzo dove son presenti gli IP diversi, mantenendo solo come statica la source (registro EAX) otteniamo un numero molto elevato di MOV, è necessario quindi rendere più specifica la regex.</p>



<p>Dopo il primo MOV vediamo che è presente un altro MOV che salva il valore di EAX in un&#8217;altra variabile globale.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="490" height="76" src="https://malverse.it/wp-content/uploads/2022/08/image-77.png" alt="" class="wp-image-545" srcset="https://malverse.it/wp-content/uploads/2022/08/image-77.png 490w, https://malverse.it/wp-content/uploads/2022/08/image-77-300x47.png 300w" sizes="auto, (max-width: 490px) 100vw, 490px" /><figcaption>MOV del primo sample</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="439" height="79" src="https://malverse.it/wp-content/uploads/2022/08/image-80.png" alt="" class="wp-image-550" srcset="https://malverse.it/wp-content/uploads/2022/08/image-80.png 439w, https://malverse.it/wp-content/uploads/2022/08/image-80-300x54.png 300w" sizes="auto, (max-width: 439px) 100vw, 439px" /><figcaption>MOV del secondo sample</figcaption></figure>



<p>Inoltre all&#8217;inizio della funzione sono presenti delle inizializzazioni di registri quasi uguali (si noti che questa parte non è strettamente necessaria, infatti anche rimuovendo il regex per questa parte lo script funziona comunque essendo che la prima modifica già permette di ottenere solo quell&#8217;indirizzo):</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="546" height="84" src="https://malverse.it/wp-content/uploads/2022/08/image-73.png" alt="" class="wp-image-539" srcset="https://malverse.it/wp-content/uploads/2022/08/image-73.png 546w, https://malverse.it/wp-content/uploads/2022/08/image-73-300x46.png 300w" sizes="auto, (max-width: 546px) 100vw, 546px" /><figcaption>Operazioni del primo sample</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="575" height="75" src="https://malverse.it/wp-content/uploads/2022/08/image-74.png" alt="" class="wp-image-540" srcset="https://malverse.it/wp-content/uploads/2022/08/image-74.png 575w, https://malverse.it/wp-content/uploads/2022/08/image-74-300x39.png 300w" sizes="auto, (max-width: 575px) 100vw, 575px" /><figcaption>Operazioni del secondo sample</figcaption></figure>



<p></p>



<p>Dopo queste due considerazioni la regex diventa quindi:</p>



<pre class="wp-block-code"><code>header = b'\x64\xff\x30\x64\x89\x20\x33\xc0\x89\x45.'
copy_operation = b'\xa1\x68...\xa3\xc1...'
regex = header + copy_operation</code></pre>



<p>Provando il nuovo script funziona su entrambi i sample:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="962" height="397" src="https://malverse.it/wp-content/uploads/2022/08/image-75.png" alt="" class="wp-image-541" srcset="https://malverse.it/wp-content/uploads/2022/08/image-75.png 962w, https://malverse.it/wp-content/uploads/2022/08/image-75-300x124.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-75-768x317.png 768w" sizes="auto, (max-width: 962px) 100vw, 962px" /><figcaption>IP decifrati</figcaption></figure>



<p>Si noti che questo script funziona solo sul Main Loader di DanaBot; nel prossimo post vedremo come aggiornare lo script per farlo funzionare direttamente sul dropper (vbs, exe) e automatizzare la decifratura effettuata dalla shellcode.</p>



<h2 class="wp-block-heading">Analisi secondo Loader</h2>



<p>Iniziamo ora l&#8217;analisi del terzo sample (<strong>MD5: 5c0be4a5273dec6b3ebb180a90f337f2</strong>), questa volta è un EXE sviluppato in C:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="720" height="459" src="https://malverse.it/wp-content/uploads/2022/08/image-35.png" alt="" class="wp-image-430" srcset="https://malverse.it/wp-content/uploads/2022/08/image-35.png 720w, https://malverse.it/wp-content/uploads/2022/08/image-35-300x191.png 300w" sizes="auto, (max-width: 720px) 100vw, 720px" /></figure>



<p>In questo caso l&#8217;EXE si occupa di estrarre la DLL nella cartella corrente e avviarla; questa DLL a sua volta avvia la stessa DLL passando un parametro casuale (quindi verrà avviato in realtà l&#8217;entry); infatti come possiamo vedere oltre gli export canonici essendo una DLL scritta in Delphi, non abbiamo altro:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="717" height="173" src="https://malverse.it/wp-content/uploads/2022/08/image-37.png" alt="" class="wp-image-432" srcset="https://malverse.it/wp-content/uploads/2022/08/image-37.png 717w, https://malverse.it/wp-content/uploads/2022/08/image-37-300x72.png 300w" sizes="auto, (max-width: 717px) 100vw, 717px" /></figure>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" src="https://malverse.it/wp-content/uploads/2022/08/image-36.png" alt="" class="wp-image-431" width="720" height="166" srcset="https://malverse.it/wp-content/uploads/2022/08/image-36.png 786w, https://malverse.it/wp-content/uploads/2022/08/image-36-300x69.png 300w, https://malverse.it/wp-content/uploads/2022/08/image-36-768x177.png 768w" sizes="auto, (max-width: 720px) 100vw, 720px" /></figure>



<p>Applico la conoscenza precedente cercando riferimenti a socket, non trovando niente.</p>



<p>Sospetto quindi che in realtà sia un packer e tramite il debugger allora analizzo le varie chiamate <strong>VirtualAlloc</strong>, <strong>VirtualProtect </strong>e <strong>CreateThread </strong>si vede come in realtà la DLL abbia al suo interno un&#8217;altra DLL, questa volta con un export <strong>FunDLLData</strong>:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="724" height="168" src="https://malverse.it/wp-content/uploads/2022/08/image-39.png" alt="" class="wp-image-434" srcset="https://malverse.it/wp-content/uploads/2022/08/image-39.png 724w, https://malverse.it/wp-content/uploads/2022/08/image-39-300x70.png 300w" sizes="auto, (max-width: 724px) 100vw, 724px" /><figcaption>In questa DLL invece si trovano i riferimenti alla comunicazione tramite socket e tracciando i parametri passati riusciamo a raggiungere il Config Builder:</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="616" height="493" src="https://malverse.it/wp-content/uploads/2022/08/image-38.png" alt="" class="wp-image-433" srcset="https://malverse.it/wp-content/uploads/2022/08/image-38.png 616w, https://malverse.it/wp-content/uploads/2022/08/image-38-300x240.png 300w" sizes="auto, (max-width: 616px) 100vw, 616px" /></figure>



<p></p>



<p>Per questo post è tutto, nei prossimi continueremo l&#8217;analisi, analizzeremo le altre informazioni presenti nel config, estrarremo la chiave RSA utilizzata per la comunicazione e generalizzeremo lo script per i restanti sample 🙂 Per qualunque consiglio o richiesta, scrivete pure nei commenti, grazie! 🙂</p>



<p><em>Si ringrazia bleepingcomputer.com per l&#8217;immagine di copertina</em></p>
		<div class="spice_share_wrapper">
		<p class="spice_share_title">Share this content:</p>		<div class="social-icon-box"><ul class="spice_social_share_list  margin ">
								<li class="spice_share_item">
							<button class="spice_social_share_link spice_social_share_link_facebook">
						        <i class="fab fa-facebook-f"></i>
					      </button>	
				  		</li>
												<li class="spice_share_item">
							<button class="spice_social_share_link spice_social_share_link_twitter">
						        <i class="fab fa-twitter"></i>
					        </button>
					        <input type="hidden" id="spice_social_share_tweetuser" value=""/>
				      	</li>
												<li class="spice_share_item">
							<button class="spice_social_share_link spice_social_share_link_linkedin">
						        <i class="fab fa-linkedin-in"></i>
					       </button>
				      	</li>
												<li class="spice_share_item">
							<button class="spice_social_share_link spice_social_share_link_mail">
						        <i class="fa fa-envelope"></i>
					      	</button>
				      	</li>
												<li class="spice_share_item">
							<button class="spice_social_share_link spice_social_share_link_pinterest">
								<input type="hidden" id="spice_social_share_pin_link" value="https://malverse.it/wp-content/uploads/2022/08/Danabot_____.jpg"/>
						        <i class="fab fa-pinterest"></i>
					      	</button>
					    </li>
								</ul>
	     </div>
		</div>
					</div>	
	</article>   <article class="blog-author media">
      <figure class="avatar">
         <img alt='' src='https://secure.gravatar.com/avatar/b6e052f2089e121c61710ff6573a4a4a?s=250&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/b6e052f2089e121c61710ff6573a4a4a?s=500&#038;d=mm&#038;r=g 2x' class='avatar avatar-250 photo' height='250' width='250' loading='lazy' decoding='async'/>   	</figure>
   	<div class="media-body align-self-center">
         <h5 class="post-by">Scritto da:</h5>
      	<h4 class="name">greenplan</h4>
      	<p class="mb-2">
                     </p>
      	<p><a href="https://malverse.it/author/greenplan" class="text-default ml-1">Visualizza tutti gli articoli <i class="fa fa-long-arrow-right pl-2"></i></a></p>
   	</div>
   </article>
<article class="comment-form">	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Lascia un commento <small><a rel="nofollow" id="cancel-comment-reply-link" href="/costruiamo-un-config-extractor-per-danabot-parte-1#respond" style="display:none;">Annulla risposta</a></small></h3><form action="https://malverse.it/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate><p class="comment-notes"><span id="email-notes">Il tuo indirizzo email non sarà pubblicato.</span> <span class="required-field-message">I campi obbligatori sono contrassegnati <span class="required">*</span></span></p><p class="comment-form-author"><label for="author">Nome <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" autocomplete="name" required /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" autocomplete="email" required /></p>
<p class="comment-form-url"><label for="url">Sito web</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200" autocomplete="url" /></p>
<p class="comment-form-cookies-consent"><input id="wp-comment-cookies-consent" name="wp-comment-cookies-consent" type="checkbox" value="yes" /> <label for="wp-comment-cookies-consent">Salva il mio nome, email e sito web in questo browser per la prossima volta che commento.</label></p>
<p class="comment-form-comment"><label for="comment">Commento <span class="required">*</span></label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" required></textarea></p><p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Invia commento" /> <input type='hidden' name='comment_post_ID' value='365' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p></form>	</div><!-- #respond -->
	</article>			</div>	
				<div class="col-lg-4 col-md-5 col-sm-12">
		<div class="sidebar s-l-space">
		<aside id="search-1" class="widget widget_search"><h3 class="widget-title">Search</h3><form class="input-group" method="get" id="searchform" action="https://malverse.it/">
	<input type="search" class="form-control" placeholder="Cerca" value="" name="s" id="s"/>
	<div class="input-group-append">
		<button class="btn btn-success" type="submit">Vai</button>
	</div>
</form></aside>
		<aside id="recent-posts-1" class="widget widget_recent_entries">
		<h3 class="widget-title">Recent Posts</h3>
		<ul>
											<li>
					<a href="https://malverse.it/stack-string-decryptor-con-ghidra-emulator-orchard">Stack String Decrypt con Ghidra Emulator (Orchard)</a>
									</li>
											<li>
					<a href="https://malverse.it/analisi-bankshot-copperhedge">Realizziamo un HTTP C&#038;C in Python (Bankshot)</a>
									</li>
											<li>
					<a href="https://malverse.it/costruiamo-un-config-extractor-per-danabot-parte-1" aria-current="page">Config Extractor per DanaBot (PARTE 1)</a>
									</li>
											<li>
					<a href="https://malverse.it/robinhood-ransomware-bring-your-own-vulnerable-kernel-driver-parte-1">RobinHood Ransomware: Bring Your Own Vulnerable Kernel Driver (PARTE 1)</a>
									</li>
											<li>
					<a href="https://malverse.it/dynamic-analysis-emulare-macro-excel-con-cerbero-suite">[MALDOC] Emulare Macro Excel con Cerbero Suite</a>
									</li>
					</ul>

		</aside><aside id="archives-1" class="widget widget_archive"><h3 class="widget-title">Archives</h3>
			<ul>
					<li><a href='https://malverse.it/2022/10'>Ottobre 2022</a></li>
	<li><a href='https://malverse.it/2022/09'>Settembre 2022</a></li>
	<li><a href='https://malverse.it/2022/08'>Agosto 2022</a></li>
	<li><a href='https://malverse.it/2022/05'>Maggio 2022</a></li>
			</ul>

			</aside>								
		</div>
	</div>
		</div>
	</div>
</section>
        <!-- Call footer function hook  -->
            <footer class="site-footer">
        <div class="container">
                            <div class="seprator-line"></div>
                <div class="row footer-sidebar">
	 <div class="col-lg-4 col-md-4 col-sm-12"><aside id="text-1" class="widget widget_text sml-device widget_text"><h3 class="widget-title">Contattaci</h3>			<div class="textwidget"><p>Per qualunque informazione non esitare a contattarci</p><address>
                            <i class="fa fa-envelope-o"></i><a href="mailto:abc@example.com">admin@malverse.it</a><br>
                         
                        </address></div>
		</aside></div><div class="col-lg-4 col-md-4 col-sm-12">
		<aside id="recent-posts-2" class="widget widget_text sml-device widget_recent_entries">
		<h3 class="widget-title">Recent Posts</h3>
		<ul>
											<li>
					<a href="https://malverse.it/stack-string-decryptor-con-ghidra-emulator-orchard">Stack String Decrypt con Ghidra Emulator (Orchard)</a>
									</li>
											<li>
					<a href="https://malverse.it/analisi-bankshot-copperhedge">Realizziamo un HTTP C&#038;C in Python (Bankshot)</a>
									</li>
											<li>
					<a href="https://malverse.it/costruiamo-un-config-extractor-per-danabot-parte-1" aria-current="page">Config Extractor per DanaBot (PARTE 1)</a>
									</li>
											<li>
					<a href="https://malverse.it/robinhood-ransomware-bring-your-own-vulnerable-kernel-driver-parte-1">RobinHood Ransomware: Bring Your Own Vulnerable Kernel Driver (PARTE 1)</a>
									</li>
											<li>
					<a href="https://malverse.it/dynamic-analysis-emulare-macro-excel-con-cerbero-suite">[MALDOC] Emulare Macro Excel con Cerbero Suite</a>
									</li>
					</ul>

		</aside></div><div class="col-lg-4 col-md-4 col-sm-12"><aside id="categories-2" class="widget widget_text sml-device widget_categories"><h3 class="widget-title">Categories</h3>
			<ul>
					<li class="cat-item cat-item-7"><a href="https://malverse.it/category/malwareanalysis/dynamic-analysis">Dynamic Analysis</a>
</li>
	<li class="cat-item cat-item-8"><a href="https://malverse.it/category/malwareanalysis/maldoc">Maldoc</a>
</li>
	<li class="cat-item cat-item-1"><a href="https://malverse.it/category/malwareanalysis">Malware Analysis</a>
</li>
			</ul>

			</aside></div></div>        </div>
        <div class="site-info text-center">
            <p>Proudly powered by <a href="https://wordpress.org">WordPress </a> | Tema: <a href="https://spicethemes.com" rel="nofollow"> HoneyPress Dark</a> by SpiceThemes</p>
        </div>
    </footer>
            </div>
                    <div class="scroll-up custom right"><a href="#totop"><i class="fa fa-arrow-up"></i></a></div>
        <script type="text/javascript" src="https://malverse.it/wp-content/plugins/spice-social-share/assets/js/socialshare.js?ver=6.7.1" id="spice-social-share-custom-js"></script>
<script type="text/javascript" src="https://malverse.it/wp-content/themes/honeypress/assets/js/bootstrap.min.js?ver=6.7.1" id="bootstrap-js"></script>
<script type="text/javascript" src="https://malverse.it/wp-content/themes/honeypress/assets/js/smartmenus/jquery.smartmenus.js?ver=6.7.1" id="jquery-menu-js"></script>
<script type="text/javascript" src="https://malverse.it/wp-content/themes/honeypress/assets/js/smartmenus/jquery.smartmenus.bootstrap-4.js?ver=6.7.1" id="jquery-menu-bootstrap-js"></script>
<script type="text/javascript" src="https://malverse.it/wp-content/themes/honeypress/assets/js/owl.carousel.min.js?ver=6.7.1" id="owl-js"></script>
<script type="text/javascript" src="https://malverse.it/wp-content/themes/honeypress/assets/js/custom.js?ver=6.7.1" id="honeypress-custom-js-js"></script>
<script type="text/javascript" src="https://malverse.it/wp-includes/js/comment-reply.min.js?ver=6.7.1" id="comment-reply-js" async="async" data-wp-strategy="async"></script>
	<script>
	/(trident|msie)/i.test(navigator.userAgent)&&document.getElementById&&window.addEventListener&&window.addEventListener("hashchange",function(){var t,e=location.hash.substring(1);/^[A-z0-9_-]+$/.test(e)&&(t=document.getElementById(e))&&(/^(?:a|select|input|button|textarea)$/i.test(t.tagName)||(t.tabIndex=-1),t.focus())},!1);
	</script>
	    </body>
</html>
