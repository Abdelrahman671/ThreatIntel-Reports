<!doctype html>
<!--
  Minimal Mistakes Jekyll Theme 4.19.2 by Michael Rose
  Copyright 2013-2019 Michael Rose - mademistakes.com | @mmistakes
  Free for personal and commercial use under the MIT license
  https://github.com/mmistakes/minimal-mistakes/blob/master/LICENSE
-->
<html lang="en" class="no-js">
  <head>
    <meta charset="utf-8">

<!-- begin _includes/seo.html --><title>Deep Analysis of Vidar Information Stealer - eln0ty</title>
<meta name="description" content="Vidar (forked from Arkei info stealer) is very popular info stealer written in C++… ">


  <meta name="author" content="Abdallah Elnoty">


<meta property="og:type" content="article">
<meta property="og:locale" content="en_US">
<meta property="og:site_name" content="eln0ty">
<meta property="og:title" content="Deep Analysis of Vidar Information Stealer">
<meta property="og:url" content="https://eln0ty.github.io/malware%20analysis/vidar/">


  <meta property="og:description" content="Vidar (forked from Arkei info stealer) is very popular info stealer written in C++… ">



  <meta property="og:image" content="https://eln0ty.github.io/assets/images/malware-analysis/Vidar/logo.jpg">





  <meta property="article:published_time" content="2022-02-06T00:00:00+00:00">





  

  


<link rel="canonical" href="https://eln0ty.github.io/malware%20analysis/vidar/">




<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    
      "@type": "Person",
      "name": "Abdallah Elnoty",
      "url": "https://eln0ty.github.io/"
    
  }
</script>






<!-- end _includes/seo.html -->


<link href="/feed.xml" type="application/atom+xml" rel="alternate" title="eln0ty Feed">

<!-- https://t.co/dKP3o1e -->
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<script>
  document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/g, '') + ' js ';
</script>

<!-- For all browsers -->
<link rel="stylesheet" href="/assets/css/main.css">

<!--[if IE]>
  <style>
    /* old IE unsupported flexbox fixes */
    .greedy-nav .site-title {
      padding-right: 3em;
    }
    .greedy-nav button {
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
    }
  </style>
<![endif]-->



    <!-- start custom head snippets -->

<!-- insert favicons. use https://realfavicongenerator.net/ -->

<!-- end custom head snippets -->

<!-- favicon -->
<link rel="icon" type="image/png" sizes="32x32" href="/assets/images/site_data/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/assets/images/site_data/favicon-16x16.png">
<meta name="theme-color" content="#ffffff">

  </head>

  <body class="layout--single wide">
    <nav class="skip-links">
  <h2 class="screen-reader-text">Skip links</h2>
  <ul>
    <li><a href="#site-nav" class="screen-reader-shortcut">Skip to primary navigation</a></li>
    <li><a href="#main" class="screen-reader-shortcut">Skip to content</a></li>
    <li><a href="#footer" class="screen-reader-shortcut">Skip to footer</a></li>
  </ul>
</nav>

    <!--[if lt IE 9]>
<div class="notice--danger align-center" style="margin: 0;">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience.</div>
<![endif]-->

    

<div class="masthead">
  <div class="masthead__inner-wrap">
    <div class="masthead__menu">
      <nav id="site-nav" class="greedy-nav">
        
          <a class="site-logo" href="/"><img src="/assets/images/site_data/logo.png" alt=""></a>
        
        <a class="site-title" href="/">
          eln0ty
          
        </a>
        <ul class="visible-links"><li class="masthead__menu-item">
              <a href="/categories/#malware-analysis">Malware Analysis</a>
            </li><li class="masthead__menu-item">
              <a href="/categories/#forensics">Forensics</a>
            </li><li class="masthead__menu-item">
              <a href="/categories">All Categories</a>
            </li></ul>
        
        <button class="search__toggle" type="button">
          <span class="visually-hidden">Toggle search</span>
          <svg class="icon" width="16" height="16" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.99 16">
            <path d="M15.5,13.12L13.19,10.8a1.69,1.69,0,0,0-1.28-.55l-0.06-.06A6.5,6.5,0,0,0,5.77,0,6.5,6.5,0,0,0,2.46,11.59a6.47,6.47,0,0,0,7.74.26l0.05,0.05a1.65,1.65,0,0,0,.5,1.24l2.38,2.38A1.68,1.68,0,0,0,15.5,13.12ZM6.4,2A4.41,4.41,0,1,1,2,6.4,4.43,4.43,0,0,1,6.4,2Z" transform="translate(-.01)"></path>
          </svg>
        </button>
        
        <button class="greedy-nav__toggle hidden" type="button">
          <span class="visually-hidden">Toggle menu</span>
          <div class="navicon"></div>
        </button>
        <ul class="hidden-links hidden"></ul>
      </nav>
    </div>
  </div>
</div>


    <div class="initial-content">
      



<div id="main" role="main">
  
  <div class="sidebar sticky">
  


<div itemscope itemtype="https://schema.org/Person">

  
    <div class="author__avatar">
      
        <img src="/assets/images/site_data/avatar.jpg" alt="Abdallah Elnoty" itemprop="image">
      
    </div>
  

  <div class="author__content">
    
      <h3 class="author__name" itemprop="name">Abdallah Elnoty</h3>
    
    
      <div class="author__bio" itemprop="description">
        <p>Malware Analysis &amp; Reverse Engineering</p>

      </div>
    
  </div>

  <div class="author__urls-wrapper">
    <button class="btn btn--inverse">Follow</button>
    <ul class="author__urls social-icons">
      
        <li itemprop="homeLocation" itemscope itemtype="https://schema.org/Place">
          <i class="fas fa-fw fa-map-marker-alt" aria-hidden="true"></i> <span itemprop="name">127.0.0.1</span>
        </li>
      

      
        
          
            <li><a href="mailto:abdallahelnoty@gmail.com" rel="nofollow noopener noreferrer"><i class="fas fa-fw fa-envelope-square" aria-hidden="true"></i><span class="label">Email</span></a></li>
          
        
          
        
          
            <li><a href="https://twitter.com/eln0ty" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-twitter-square" aria-hidden="true"></i><span class="label">Twitter</span></a></li>
          
        
          
            <li><a href="https://facebook.com/eln0ty" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-facebook-square" aria-hidden="true"></i><span class="label">Facebook</span></a></li>
          
        
          
            <li><a href="https://www.linkedin.com/in/eln0ty" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-linkedin" aria-hidden="true"></i><span class="label">LinkedIn</span></a></li>
          
        
          
            <li><a href="https://github.com/eln0ty" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-github" aria-hidden="true"></i><span class="label">GitHub</span></a></li>
          
        
          
        
      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      <!--
  <li>
    <a href="http://link-to-whatever-social-network.com/user/" itemprop="sameAs" rel="nofollow noopener noreferrer">
      <i class="fas fa-fw" aria-hidden="true"></i> Custom Social Profile Link
    </a>
  </li>
-->
    </ul>
  </div>
</div>

  
  </div>



  <article class="page" itemscope itemtype="https://schema.org/CreativeWork">
    <meta itemprop="headline" content="Deep Analysis of Vidar Information Stealer">
    <meta itemprop="description" content="Vidar (forked from Arkei info stealer) is very popular info stealer written in C++.What does it steal?The malware has all the kinds of classic features of stealers:  Stealing browser Data (auto-fill, history, cookies - credit cards)  Stealing Crypto mining wallets  Stealing data from 2FA software like Authy  Searching for specific documents  Telegram notifications  Screenshot  Get a complete snapshot of all information of the computer victimVidar’s clients have access to a C2 Shop portal where they are able to generate their own payloads. So there is no management on their side. For this in-depth analysis, I will inspect the 49.7 version of Vidar.Before starting, I want to thank my friend @_ n1ghtw0lf because he helped me a lot to write this report.. Let’s start ^_^Vidar overviewSHA256: 532BC078A68683CE70CB765191A128FADEE2A23180B1A8E8A16B72F1A8EE291AI  will give a brief overview of how Vidar operates then I will go into details in the upcoming sections.This is the basic config from Hatching sandbox.Vidar collects All important data from victim’s device then Uploads them to C2 server and delete these files from the device with taskkill.exeThe collection will be something like that (I got it from sandbox so I lost some data because sandbox doesn’t contain everything)compress them in .zip file to be ready for uploading.You can watch this video which describes the operation from server side.Sample Preparation (strings &amp; dlls)I faced some problems in my sample, all strings are encrypted and dlls are dynamic allocated.Vidar tries to decrypt it with the first function before starting any process.Decrypt stringsThe encryption algorithm is pretty easy and straight forward. We just do text = xor(key, cipher) for every encrypted text by automating it with IDAPython.This is the script for the mission. “Every section of the code has a comment to make it readable for you”import idcdef dec_str(key, data, length):    res = bytearray()    for i in range(length):        res.append(key[i] ^ data[i])    return res.decode()start = 0x401301end = 0x4031E5ea = startaddrs = []dec = &#39;&#39;key = b&#39;&#39;data = b&#39;&#39;length = 0while ea &lt;= end:    # check if opperand is immediate    if idc.get_operand_type(ea, 0) == idc.o_imm:        addrs.append((idc.get_operand_value(ea, 0)))    # get key, data, length    if len(addrs) == 3:        length = addrs[0]        data = idc.get_bytes(addrs[1], length)        key = idc.get_bytes(addrs[2], length)        addrs = []    # comment decrypted string    if idc.print_insn_mnem(ea) == &quot;call&quot;:        dec = dec_str(key, data, length)        idc.set_cmt(ea, dec, 1)    if (idc.print_insn_mnem(ea) == &quot;mov&quot;) and (idc.get_operand_type(ea, 0) == idc.o_mem) and (idc.get_operand_type(ea, 1) == idc.o_reg):        global_var = idc.get_operand_value(ea, 0)        idc.set_name(global_var, &quot;STR_&quot; + dec, SN_NOWARN)    # move to next instruction    ea = idc.next_head(ea, end)After this step you must see a clear plain text. Here you are the results:                        Expand to see more        &emsp; INSERT_KEY_HERE&emsp; JohnDoe&emsp; HAL9TH&emsp; api.faceit.com&emsp; /core/v1/nicknames/&emsp; about&emsp; Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25&emsp; C:/ProgramData/&emsp; .exe&emsp; :Zone.Identifier&emsp; [ZoneTransfer] ZoneId=2&emsp; Windows&emsp; ProgramData&emsp; RECYCLE.BIN&emsp; Config.Msi&emsp; System Volume Information&emsp; msdownld.tmp&emsp; Recovery&emsp; Local/Temp&emsp; Program Files&emsp; Recycle.Bin&emsp; All Users&emsp; MicrosoftEdge/Cookies&emsp; Users/Public&emsp; Local/Packages&emsp; Local/NuGet&emsp; Roaming/WinRAR&emsp; Local/Microsoft&emsp; Microsoft&emsp; fee_estimates&emsp; peers&emsp; mempool&emsp; banlist&emsp; governance&emsp; mncache&emsp; mnpayments&emsp; netfulfilled&emsp; passwords.txt&emsp; Login Data&emsp; Cookies&emsp; Web Data&emsp; /files/Autofill&emsp; /files/Cookies&emsp; /files/CC&emsp; /files/History&emsp; /files/Downloads&emsp; /files/&emsp; /files/Files&emsp; hwid&emsp; os&emsp; platform&emsp; profile&emsp; user&emsp; cccount&emsp; fcount&emsp; telegram&emsp; ver&emsp; vaultcli.dll&emsp; VaultOpenVault&emsp; VaultCloseVault&emsp; VaultEnumerateItems&emsp; VaultGetItem&emsp; VaultFree&emsp; SELECT url FROM moz_places&emsp; %s/Mozilla/Firefox/profiles.ini&emsp; /signons.sqlite&emsp; SELECT encryptedUsername, encryptedPassword, formSubmitURL FROM moz_logins&emsp; /logins.json&emsp; formSubmitURL&emsp; usernameField&emsp; encryptedUsername&emsp; encryptedPassword&emsp; guid&emsp; SELECT host, name, value FROM moz_cookies&emsp; SELECT origin_url, username_value, password_value FROM logins&emsp; SELECT name, value FROM autofill&emsp; SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted FROM credit_cards&emsp; SELECT target_path, tab_url from downloads&emsp; SELECT url, title from urls&emsp; SELECT HOST_KEY, is_httponly, path, is_secure, (expires_utc/1000000)-11644480800, name, encrypted_value from cookies&emsp; C:/Users/&emsp; /AppData/Roaming/FileZilla/recentservers.xml&emsp; &lt;Host&gt;&emsp; &lt;Port&gt;&emsp; &lt;User&gt;&emsp; &lt;Pass encoding=&quot;base64&quot;&gt;&emsp; Soft: FileZilla&emsp; /AppData/Roaming/.purple/accounts.xml&emsp; &lt;protocol&gt;&emsp; &lt;name&gt;&emsp; &lt;password&gt;&emsp; Soft: Pidgin&emsp; /Thunderbird/Profiles/&emsp; C:/Program Files (x86)/Mozilla Thunderbird&emsp; APPDATA&emsp; LOCALAPPDATA&emsp; Thunderbird&emsp; /files/Telegram&emsp; /Telegram Desktop/tdata/*&emsp; D877F783D5D3EF8C*&emsp; /Telegram Desktop/tdata/&emsp; key_datas&emsp; /Telegram Desktop/tdata/D877F783D5D3EF8C/*&emsp; map*&emsp; /Telegram Desktop/tdata/D877F783D5D3EF8C/&emsp; firefox.exe&emsp; plugin-container.exe&emsp; update_notifier.exe&emsp; Mozilla Firefox&emsp; /Mozilla/Firefox/Profiles/&emsp; Pale Moon&emsp; /Moonchild Productions/Pale Moon/Profiles/&emsp; Waterfox&emsp; /Waterfox/Profiles/&emsp; Cyberfox&emsp; /8pecxstudios/Cyberfox/Profiles/&emsp; BlackHawk&emsp; /NETGATE Technologies/BlackHawk/Profiles/&emsp; IceCat&emsp; /Mozilla/icecat/Profiles/&emsp; K-Meleon&emsp; /K-Meleon/&emsp; Google Chrome&emsp; /Google/Chrome/User Data/&emsp; Chromium&emsp; /Chromium/User Data/&emsp; Kometa&emsp; /Kometa/User Data/&emsp; Amigo&emsp; /Amigo/User Data/&emsp; Torch&emsp; /Torch/User Data/&emsp; Orbitum&emsp; /Orbitum/User Data/&emsp; Comodo Dragon&emsp; /Comodo/Dragon/User Data/&emsp; Nichrome&emsp; /Nichrome/User Data/&emsp; Maxthon5&emsp; /Maxthon5/Users/&emsp; Sputnik&emsp; /Sputnik/User Data/&emsp; Epic Privacy Browser&emsp; /Epic Privacy Browser/User Data/&emsp; Vivaldi&emsp; /Vivaldi/User Data/&emsp; CocCoc&emsp; /CocCoc/Browser/User Data/&emsp; URAN&emsp; /uCozMedia/Uran/User Data/&emsp; QIP Surf&emsp; /QIP Surf/User Data/&emsp; Cent Browser&emsp; /CentBrowser/User Data/&emsp; Elements Browser&emsp; /Elements Browser/User Data/&emsp; TorBro Browser&emsp; /TorBro/Profile/&emsp; Suhba Browser&emsp; /Suhba/User Data/&emsp; Mustang Browser&emsp; /Rafotech/Mustang/User Data/&emsp; Chedot Browser&emsp; /Chedot/User Data/&emsp; Brave_Old&emsp; /brave/&emsp; 7Star&emsp; /7Star/7Star/User Data/&emsp; Microsoft Edge&emsp; /Microsoft/Edge/User Data/&emsp; 360 Browser&emsp; /360Browser/Browser/User Data/&emsp; QQBrowser&emsp; /Tencent/QQBrowser/User Data/&emsp; Opera&emsp; /Opera Software/Opera Stable/&emsp; OperaGX&emsp; /Opera Software/Opera GX Stable/&emsp; Local State&emsp; Cookies&emsp; %s_%s.txt&emsp; TRUE&emsp; FALSE&emsp; /Microsoft/Windows/Cookies/Low/&emsp; Cookies/IE_Cookies.txt&emsp; /Packages/Microsoft.MicrosoftEdge_8wekyb3d8bbwe/AC/#!001/MicrosoftEdge/Cookies/&emsp; Cookies/Edge_Cookies.txt&emsp; /files/Wallets&emsp; %USERPROFILE%&emsp; %DESKTOP%&emsp; KERNEL32.DLL&emsp; LoadLibraryA&emsp; GetProcAddress&emsp; VirtualAllocExNuma&emsp; gdi32.dll&emsp; ole32.dll&emsp; user32.dll&emsp; psapi.dll&emsp; BCRYPT.DLL&emsp; BCryptCloseAlgorithmProvider&emsp; BCryptDestroyKey&emsp; BCryptOpenAlgorithmProvider&emsp; BCryptSetProperty&emsp; BCryptGenerateSymmetricKey&emsp; BCryptDecrypt&emsp; CRYPT32.DLL&emsp; CryptUnprotectData&emsp; CryptStringToBinaryA&emsp; C:/ProgramData/nss3.dll&emsp; NSS_Init&emsp; NSS_Shutdown&emsp; PK11_GetInternalKeySlot&emsp; PK11_FreeSlot&emsp; PK11_Authenticate&emsp; PK11SDR_Decrypt&emsp; advapi32.dll&emsp; RegOpenKeyExA&emsp; RegQueryValueExA&emsp; RegCloseKey&emsp; RegOpenKeyExW&emsp; RegGetValueW&emsp; RegEnumKeyExA&emsp; RegGetValueA&emsp; GetUserNameA&emsp; GetCurrentHwProfileA&emsp; wininet.dll&emsp; InternetCloseHandle&emsp; InternetReadFile&emsp; HttpSendRequestA&emsp; HttpOpenRequestA&emsp; InternetConnectA&emsp; InternetOpenA&emsp; HttpAddRequestHeadersA&emsp; HttpQueryInfoA&emsp; InternetSetFilePointer&emsp; InternetOpenUrlA&emsp; InternetSetOptionA&emsp; DeleteUrlCacheEntry&emsp; CreateCompatibleBitmap&emsp; SelectObject&emsp; BitBlt&emsp; DeleteObject&emsp; CreateDCA&emsp; GetDeviceCaps&emsp; CreateCompatibleDC&emsp; CoCreateInstance&emsp; CoUninitialize&emsp; GetDesktopWindow&emsp; ReleaseDC&emsp; GetKeyboardLayoutList&emsp; CharToOemA&emsp; GetDC&emsp; wsprintfA&emsp; EnumDisplayDevicesA&emsp; GetSystemMetrics&emsp; GetModuleFileNameExA&emsp; GetModuleBaseNameA&emsp; EnumProcessModules&emsp; TronLink&emsp; /Local Extension Settings/ibnejdfjmmkpcnlpebklmnkoeoihofec/CURRENT&emsp; /Sync Extension Settings/ibnejdfjmmkpcnlpebklmnkoeoihofec/CURRENT&emsp; /Local Extension Settings/ibnejdfjmmkpcnlpebklmnkoeoihofec&emsp; /Sync Extension Settings/ibnejdfjmmkpcnlpebklmnkoeoihofec&emsp; MetaMask&emsp; /Local Extension Settings/nkbihfbeogaeaoehlefnkodbefgpgknn/CURRENT&emsp; /Sync Extension Settings/nkbihfbeogaeaoehlefnkodbefgpgknn/CURRENT&emsp; /Local Extension Settings/nkbihfbeogaeaoehlefnkodbefgpgknn&emsp; /Sync Extension Settings/nkbihfbeogaeaoehlefnkodbefgpgknn&emsp; BinanceChainWallet&emsp; /Local Extension Settings/fhbohimaelbohpjbbldcngcnapndodjp/CURRENT&emsp; /Sync Extension Settings/fhbohimaelbohpjbbldcngcnapndodjp/CURRENT&emsp; /Local Extension Settings/fhbohimaelbohpjbbldcngcnapndodjp&emsp; /Sync Extension Settings/fhbohimaelbohpjbbldcngcnapndodjp&emsp; Authenticator&emsp; /Local Extension Settings/bhghoamapcdpbohphigoooaddinpkbai/CURRENT&emsp; /Sync Extension Settings/bhghoamapcdpbohphigoooaddinpkbai/CURRENT&emsp; /Local Extension Settings/bhghoamapcdpbohphigoooaddinpkbai&emsp; /Sync Extension Settings/bhghoamapcdpbohphigoooaddinpkbai&emsp; Wallets&emsp; Plugins&emsp; *wallet*.dat&emsp; /Wallets/&emsp; keystore&emsp; Ethereum&quot;&emsp; /Ethereum/&emsp; Electrum&emsp; /Electrum/wallets/&emsp; ElectrumLTC&emsp; /Electrum-LTC/wallets/&emsp; Exodus&emsp; /Exodus/&emsp; exodus.conf.json&emsp; window-state.json&emsp; /Exodus/exodus.wallet/&emsp; passphrase.json&emsp; seed.seco&emsp; info.seco&emsp; ElectronCash&emsp; /ElectronCash/wallets/&emsp; default_wallet&emsp; MultiDoge&emsp; /MultiDoge/&emsp; multidoge.wallet&emsp; JAXX&emsp; /jaxx/Local Storage/&emsp; file__0.localstorage&emsp; Atomic&emsp; /atomic/Local Storage/leveldb/&emsp; 000003.log&emsp; CURRENT&emsp; LOCK&emsp; LOG&emsp; MANIFEST-000001&emsp; 0000*&emsp; Binance&emsp; /Binance/&emsp; app-store.json&emsp; Coinomi&emsp; /Coinomi/Coinomi/wallets/&emsp; *.wallet&emsp; *.config&emsp; wallet_path&emsp; SOFTWARE/monero-project/monero-core&emsp; /Monero/&emsp; SELECT fieldname, value FROM moz_formhistory&emsp; /files/Soft&emsp; /files/Soft/Authy&emsp; /Authy Desktop/Local Storage/&emsp; /Authy Desktop/Local Storage/*.localstorage&emsp; /Opera Stable/Local StateLet’s move to the next step…Building importsVidar uses LoadLibraryA &amp; GetProcAddress to make a build imports dynamically. The following function is used for this mission.But there are no readable APIs. So I wrote an IDAPython script to rename it. The script used the decrypted strings and map them with the functions to get a clear overview. “you can check it with the debugger”import idcstart = 0x49978Dend = 0x499B62ea = startapi_names = []while ea &lt;= end:    # get GetProcAddress API name    if (idc.print_insn_mnem(ea) == &quot;mov&quot;) and (idc.get_operand_type(ea, 0) == idc.o_reg) and (idc.get_operand_type(ea, 1) == idc.o_mem):        addr = idc.get_operand_value(ea, 1)        name = idc.get_name(addr)        if name.startswith(&quot;STR_&quot;):            api_names.append(name)    # assign GetProcAddress result to global var    if (idc.print_insn_mnem(ea) == &quot;mov&quot;) and (idc.get_operand_type(ea, 0) == idc.o_mem) and (idc.print_operand(ea, 1) == &quot;eax&quot;):        addr = idc.get_operand_value(ea, 0)        name = api_names.pop(0)        idc.set_name(addr, &quot;API_&quot; + name[4:])    # move to next instruction    ea = idc.next_head(ea, end)Now you can look and enjoy..Imported DLLsHere is a list of imported functions:                        Expand to see more        &emsp; bcrypt.dll&emsp; &emsp; &ensp; BCryptCloseAlgorithmProvider&emsp; &emsp; &ensp; BCryptDestroyKey&emsp; &emsp; &ensp; BCryptOpenAlgorithmProvider&emsp; &emsp; &ensp; BCryptSetProperty&emsp; &emsp; &ensp; BCryptGenerateSymmetricKey&emsp; &emsp; &ensp; BCryptDecrypt&emsp; crypt32.dll&emsp; &emsp; &ensp; CryptUnprotectData&emsp; &emsp; &ensp; CryptStringToBinaryA&emsp; advapi32.dll&emsp; &emsp; &ensp; RegOpenKeyExA&emsp; &emsp; &ensp; RegQueryValueExA&emsp; &emsp; &ensp; RegCloseKey&emsp; &emsp; &ensp; RegOpenKeyExW&emsp; &emsp; &ensp; RegGetValueW&emsp; &emsp; &ensp; RegEnumKeyExA&emsp; &emsp; &ensp; RegGetValueA&emsp; &emsp; &ensp; GetUserNameA&emsp; &emsp; &ensp; GetCurrentHwProfileA&emsp; wininet.dll&emsp; &emsp; &ensp; InternetCloseHandle&emsp; &emsp; &ensp; InternetReadFile&emsp; &emsp; &ensp; HttpSendRequestA&emsp; &emsp; &ensp; HttpOpenRequestA&emsp; &emsp; &ensp; InternetConnectA&emsp; &emsp; &ensp; InternetOpenA&emsp; &emsp; &ensp; HttpAddRequestHeadersA&emsp; &emsp; &ensp; HttpQueryInfoA&emsp; &emsp; &ensp; InternetSetFilePointer&emsp; &emsp; &ensp; InternetOpenUrlA&emsp; &emsp; &ensp; InternetSetOptionA&emsp; &emsp; &ensp; DeleteUrlCacheEntry&emsp; gdi32.dll&emsp; &emsp; &ensp; CreateCompatibleBitmap&emsp; &emsp; &ensp; SelectObject&emsp; &emsp; &ensp; BitBlt&emsp; &emsp; &ensp; DeleteObject&emsp; &emsp; &ensp; CreateDCA&emsp; &emsp; &ensp; GetDeviceCaps&emsp; &emsp; &ensp; CreateCompatibleDC&emsp; ole32.dll&emsp; &emsp; &ensp; CoCreateInstance&emsp; &emsp; &ensp; CoUninitialize&emsp; user32.dll&emsp; &emsp; &ensp; GetDesktopWindow&emsp; &emsp; &ensp; ReleaseDC&emsp; &emsp; &ensp; GetKeyboardLayoutList&emsp; &emsp; &ensp; CharToOemA&emsp; &emsp; &ensp; GetDC&emsp; &emsp; &ensp; wsprintfA&emsp; &emsp; &ensp; EnumDisplayDevicesA&emsp; psapi.dll&emsp; &emsp; &ensp; GetModuleFileNameExA&emsp; &emsp; &ensp; GetModuleBaseNameA&emsp; &emsp; &ensp; EnumProcessModulesExtra  DLLsThe malware has been observed, upon execution. DLL files are required during the stealing process of different kind of browsers. So it downloads them with connecting to ip: 162.55.213.180 via GET request. They are deleted when task is done.            DLL      Description                  freebl3.dll      Freebl Library for the NSS (Mozilla Browser)              mozglue.dll      Mozilla Browser Library              msvcp140.dll      Visual C++ Runtime 2015              nss3.dll      Network System Services Library (Mozilla Browser)              softokn3.dll      Mozilla Browser Library              vcruntime140.dll      Visual C++ Runtime 2015      Well, Now our sample is ready to reverse its functionalities. Let’s Continue…C2 ServerC2 IP 162.55.213.180(real C2)Vidar has 2 profiles with different websites, every profile should have same IP list. IPs delimited with | in each list.So Vidar tries to grep c2 server IP from 1 of them ‘In our case just 1 IP’. you can check profile descriptionFirst mastodon.online/@prophef1Second koyu.space/@prophef2Vidar tries to connect with C2 server with it’s hardcoded profile-id to get the right config:1,1,1,1,1,1,1,1,1,1,250,Default;%DESKTOP%/;/*.txt:/*.dat:/*wallet/*.*:/*2fa/*.*:/*backup/*.*:/*code/*.*:/*password/*.*:/*auth/*.*:/*google/*.*:/*utc/*.*:/*UTC/*.*:/*crypt/*.*:/*key/*.*;50;true;movies:music:mp3;*Each part have the “;” in delimiter, so let’s dig into it.How to understand the configuration formatIn our example, this is the configuration the malware could get from the C2 :First part            1      Saved password                  1      Cookies / AutoFill              1      Wallet              1      Internet History              1      ??? – Supposed to be Skype (not implemented)/              1      ??? – Supposed to be Steam (not implemented)/              1      Telegram              1      Screenshot              1      Grabber              1      ???              250      Max Size (kb)              Default      Name of the profile (also used for archive file into the files repository)      Second part%DESKTOP %  –&gt;  Selected folder repository where the grabber feature will search recursively (or not) some selected dataThird part.txt:/.dat:/wallet/./:/2fa/./:/backup/./:/code/./:/password/./:/auth/./:/google/./:/utc/./:/UTC/./:/crypt/./:/key/.*Fourth part            50      Max Size per file (kb)                  true      Collect Recursively      Fifth partmovies:music:mp3;This is the exception part, the grabber will avoid those strings if it matches in the files searched recursively in the specific wanted folder.Folder generationTo summarize all kind of possibles files/folders that will be generated for the malicious repository is in fact pretty simple ://files                   &lt;- Master folder//files//Autofill         &lt;- Auto-Fill files//files//CC               &lt;- Credit Cards//files//Cookies          &lt;- Cookies//files//Downloads        &lt;- Downloaded data history from browsers//files//Files            &lt;- Profile configs (Archives)//files//History          &lt;- Browser histories//files//Soft             &lt;- Master folder for targeted softwares//files//Soft//Authy      &lt;- 2FA software//files//Telegram         &lt;- Telegram messages//files//Wallets          &lt;- Cryptomining WalletsGeneral list files//files/screenshot.jpg     &lt;- Actual screenshot of the screen//files/passwords.txt      &lt;- Passwords consolidated all at once//files//information.txt   &lt;- Snapshot of the computer setup//files//outlook.txt	   &lt;- Outlook cardentialsBrowsers  firefox  waterfall  Cyberfox  BlackHawk  IceCat  Opera  OperaGX  Chromium  Kometa  Amigo  Torch  orbitum  Nichrome  Maxthon 5  sputnik  CocCoc  Uran  7Star  QQBrowser  CryptoTab Browser  Brave  Brave oldOf course, this list could be longer than this if there are some browsers based on chromium repository.2 Factor Authentication software (2FA)This technique could be also another door for vulnerabilities because no system is safe and stealing it will be more and more common in the future. So with Vidar, the Authy software is targeted.More specifically the SQLite file on the corresponding application on %APPDATA% repository.So guys don’t fully trust a system even security system. Give your privacy all your care.Messengers      outlook        Here is the data that Vidar steals : extracted from sandbox machine            Thunderbird        Telegram  I won’t describe how Vidar steals them because the process (in-depth)is painful and needs another report to explain. :)Crypto Wallets  Eletcrum  Exodus  ElectronCash  MultiDoge  JAXX  Atomic  BinanceThis list could change if the customer added some additional files to search for specific areas on victim’s machine.Information logto understand how this file is generated with the corresponding API call, breakpoint on these API if you want to take your time to analyze all the step easily.Vidar steals almost all general information about victim machine and save it in inforamtion.txt file like:      Date        Machine ID        GUID        HWID        Path        Work DIR    )  Get the name of the operating system and platform is classic because this is, in fact, a concatenation of two things. First, Vidar check if Windows is 32 or 64-bit, it checks itself if is running on WOW64 with the help of IsWow64Process.Second, with RegOpenKeyExA, the value of this registry key is fetched:HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows NT/CurrentVersion/ProductNameHere we can see the some pretty APIs that we decrypted before analysis. Let’s continue our analysis…Windows versionComputer NameUser NameDisplay ResolutionDisplay LanguageKeyboard LanguagesLocal TimeTimeZone[Hardware]-&gt;    Processor-&gt;    CPU Count-&gt;     RAM-&gt;    VideoCard[Processes]Get a snapshot from all processes executed using CreateToolhelp32Snapshot &amp;  Process32First &amp; Process32Next After, checking if it’s a parent process or a child process, Vidar will grab two value of the PROCESSENTRY32 object :	th32ProcessID: PID	szExeFile: The name of the PEI can’t screen all function here but you can take your time while analyzing it. Let’s continue…[Software]Get list of all installed software on the machine, the value of this registry key is fetched:HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/UninstallThese values are retrieves of each software (DisplayName &amp; DisplayVersion)ResultYou can see into sandbox analysis, the generated information.txt and the whole process and connections.Version: 49.7Date: Tue Feb 01 04:37:51 2022MachineID: 90059c37-1320-41a4-b58d-2b75a9850d2fGUID: {e29ac6c0-7037-11de-816d-806e6f6e6963}HWID: 90059c37-1320-41a4-b58d-816d-806e6f6e6963Path: C:/Users/admin/AppData/Local/Temp/vidar.exe Work Dir: C:/ProgramData/GI3PPKTM8AJDIRUF0RKXBSEQV Windows: Windows 7 Professional [x86]Computer Name: USER-PCUser Name: adminDisplay Resolution: 1280x720Display Language: en-USKeyboard Languages: English (United States)Local Time: 1/2/2022 4:37:51TimeZone: UTC-0[Hardware]Processor: Intel(R) Core(TM) i5-6400 CPU @ 2.70GHzCPU Count: 4RAM: 3583 MBVideoCard: Standard VGA Graphics Adapter[Processes]---------- System [4]------------------------------  smss.exe [260]-  csrss.exe [544]-  vidar.exe [1988]&lt; ... &gt;[Software]VLC media player [3.0.11]WinRAR 5.91 (32-bit) [5.91.0]&lt; ... &gt;Other payloadsVidar can download an executable file and execute it with ShellExecuteA.First DownloadThen ExecuteKill  TaskVidar uses taskkill.exe to kill process. So when all the task of the stealer is finally accomplished and cleaned, the stealer needs to erase itself. So first of all, it retrieves its own PID with the help of GetCurrentProcessId.When the request is finely crafted, Vidar is simply using ShellExecuteA to pop a command shell and execute the task, this erases all trace of the interaction of the payload on the machine and delete all downloaded DLLs.The full command:&quot;C:/Windows/System32/cmd.exe&quot; /c taskkill /im vidar.exe /f &amp; timeout /t 6 &amp; del /f /q &quot;C:/Users/admin/AppData/Local/Temp/vidar.exe&quot; &amp; del C:/ProgramData/*.dll &amp; exitExfiltrationFile GenerationI can’t understand well how malware generates the file name but It consists from ‘Machine ID + ??(random digits) + .zip ‘This at least, all the different Content-Disposition that will be added to the HTTP request.            hwid      Hardware ID                  os      Operating System              platform      32 or 64 bits System              profile      C2 Profile ID              user      Name of the victim account              cccount      Number of Credit Cards stolen              ccount      Number of Coins Stolen (CryptoWallet)              fcount      Number of files stolen              ver      The version of the Vidar malware      ConclusionVidar  always tries to steal your data as much as it can and its tasks vary from version to another.  It was hard and exciting and I want to mention “This is my first Tech. report” and I will write more and more.Finally, Remember you can watch the video that I passed in the intro to see how it works from server side.Yara Rulesrule Vidar_Stealer : Vidar{     meta:          Author = &quot;eln0ty&quot;          Description = &quot;Rule to detect Vidar&quot;          Date = &quot;Feb 5, 2022&quot;      strings:          $mz = &quot;MZ&quot;          $s1 = &quot;1BEF0A57BE110FD467A&quot; ascii          $s2 = &quot;Version: %s&quot; ascii          $s3 = &quot;Date: %s&quot; ascii          $s4 = &quot;MachineID: %s&quot; ascii          $s5 = &quot;GUID: %s&quot; ascii          $s6 = &quot;HWID: %s&quot; ascii     condition:          ($mz at 0) and (all of ($s*))}">
    <meta itemprop="datePublished" content="2022-02-06T00:00:00+00:00">
    

    <div class="page__inner-wrap">
      
        <header>
          <h1 id="page-title" class="page__title" itemprop="headline">Deep Analysis of Vidar Information Stealer
</h1>
          
            <p class="page__meta"><i class="far fa-clock" aria-hidden="true"></i> 




  17 minute read

</p>
          
        </header>
      

      <section class="page__content" itemprop="text">
        
          <aside class="sidebar__right ">
            <nav class="toc">
              <header><h4 class="nav__title"><i class="fas fa-file-alt"></i> On this page</h4></header>
              <ul class="toc__menu">
  <li><a href="#vidar-overview">Vidar overview</a></li>
  <li><a href="#sample-preparation-strings--dlls">Sample Preparation (strings &amp; dlls)</a>
    <ul>
      <li><a href="#decrypt-strings">Decrypt strings</a></li>
      <li><a href="#building-imports">Building imports</a></li>
    </ul>
  </li>
  <li><a href="#c2-server">C2 Server</a>
    <ul>
      <li><a href="#how-to-understand-the-configuration-format">How to understand the configuration format</a></li>
    </ul>
  </li>
  <li><a href="#folder-generation">Folder generation</a></li>
  <li><a href="#browsers">Browsers</a></li>
  <li><a href="#2-factor-authentication-software-2fa">2 Factor Authentication software (2FA)</a></li>
  <li><a href="#messengers">Messengers</a></li>
  <li><a href="#crypto-wallets">Crypto Wallets</a></li>
  <li><a href="#information-log">Information log</a>
    <ul>
      <li><a href="#result">Result</a></li>
    </ul>
  </li>
  <li><a href="#other-payloads">Other payloads</a></li>
  <li><a href="#kill--task">Kill  Task</a></li>
  <li><a href="#exfiltration">Exfiltration</a></li>
  <li><a href="#conclusion">Conclusion</a></li>
  <li><a href="#yara-rules">Yara Rules</a></li>
</ul>

            </nav>
          </aside>
        
        <p>Vidar (forked from <strong>Arkei</strong> info stealer) is very popular info stealer written in C++.</p>

<p><strong>What does it steal?</strong></p>

<p>The malware has all the kinds of classic features of stealers:</p>

<ul>
  <li>Stealing browser Data (auto-fill, history, cookies - credit cards)</li>
  <li>Stealing Crypto mining wallets</li>
  <li>Stealing data from <strong><em>2FA</em></strong> software like <strong>Authy</strong></li>
  <li>Searching for specific documents</li>
  <li>Telegram notifications</li>
  <li>Screenshot</li>
  <li>Get a complete snapshot of all information of the computer victim</li>
</ul>

<p>Vidar’s clients have access to a C2 Shop portal where they are able to generate their own payloads. So there is no management on their side. For this in-depth analysis, I will inspect the <strong>49.7 version</strong> of Vidar.</p>

<p>Before starting, I want to thank my friend <a href="https://twitter.com/_n1ghtw0lf">@_ n1ghtw0lf</a> because he helped me a lot to write this report.. Let’s start ^_^</p>

<h1 id="vidar-overview">Vidar overview</h1>

<p><strong>SHA256</strong>: <code class="language-plaintext highlighter-rouge">532BC078A68683CE70CB765191A128FADEE2A23180B1A8E8A16B72F1A8EE291A</code></p>

<p>I  will give a brief overview of how Vidar operates then I will go into details in the upcoming sections.</p>

<p>This is the basic config from <a href="https://tria.ge/220118-alwyesegdk">Hatching sandbox</a>.</p>

<p><a href="/assets/images/malware-analysis/Vidar/basic_config.jpg"><img src="/assets/images/malware-analysis/Vidar/basic_config.jpg" alt="" /></a></p>

<p>Vidar collects All important data from victim’s device then <strong>Uploads</strong> them to C2 server and delete these files from the device with <code class="language-plaintext highlighter-rouge">taskkill.exe</code></p>

<p><a href="/assets/images/malware-analysis/Vidar/VIDAR process.png"><img src="/assets/images/malware-analysis/Vidar/VIDAR process.png" alt="" /></a></p>

<p>The collection will be something like that (I got it from sandbox so I lost some data because sandbox doesn’t contain everything)</p>

<p>compress them in <code class="language-plaintext highlighter-rouge">.zip</code> file to be ready for uploading.</p>

<p><a href="/assets/images/malware-analysis/Vidar/vidar collection.jpg"><img src="/assets/images/malware-analysis/Vidar/vidar collection.jpg" alt="" /></a></p>

<p>You can watch this <a href="https://vimeo.com/514353794?fbclid=IwAR1PqolWyX-uyF66U2LyY3z5mk7SnIJFKDw00vjbwnAo9LzNfLvS8yaI9iw">video</a> which describes the operation from server side.</p>

<h1 id="sample-preparation-strings--dlls">Sample Preparation (strings &amp; dlls)</h1>

<p>I faced some problems in my sample, all strings are encrypted and dlls are dynamic allocated.</p>

<p><a href="/assets/images/malware-analysis/Vidar/dec_build.jpg"><img src="/assets/images/malware-analysis/Vidar/dec_build.jpg" alt="" /></a></p>

<p>Vidar tries to decrypt it with the first function before starting any process.</p>

<p><a href="/assets/images/malware-analysis/Vidar/dec.jpg"><img src="/assets/images/malware-analysis/Vidar/dec.jpg" alt="" /></a></p>

<h2 id="decrypt-strings">Decrypt strings</h2>

<p>The encryption algorithm is pretty easy and straight forward. We just do <code class="language-plaintext highlighter-rouge">text = xor(key, cipher)</code> for every encrypted text by automating it with <strong><em>IDAPython</em></strong>.</p>

<p>This is the script for the mission. “Every section of the code has a comment to make it readable for you”</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">idc</span>

<span class="k">def</span> <span class="nf">dec_str</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">length</span><span class="p">):</span>
    <span class="n">res</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">length</span><span class="p">):</span>
        <span class="n">res</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">key</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">.</span><span class="n">decode</span><span class="p">()</span>

<span class="n">start</span> <span class="o">=</span> <span class="mh">0x401301</span>
<span class="n">end</span> <span class="o">=</span> <span class="mh">0x4031E5</span>
<span class="n">ea</span> <span class="o">=</span> <span class="n">start</span>
<span class="n">addrs</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">dec</span> <span class="o">=</span> <span class="s">''</span>
<span class="n">key</span> <span class="o">=</span> <span class="sa">b</span><span class="s">''</span>
<span class="n">data</span> <span class="o">=</span> <span class="sa">b</span><span class="s">''</span>
<span class="n">length</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">while</span> <span class="n">ea</span> <span class="o">&lt;=</span> <span class="n">end</span><span class="p">:</span>
    <span class="c1"># check if opperand is immediate
</span>    <span class="k">if</span> <span class="n">idc</span><span class="p">.</span><span class="n">get_operand_type</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">idc</span><span class="p">.</span><span class="n">o_imm</span><span class="p">:</span>
        <span class="n">addrs</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="n">idc</span><span class="p">.</span><span class="n">get_operand_value</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">0</span><span class="p">)))</span>

    <span class="c1"># get key, data, length
</span>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">addrs</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
        <span class="n">length</span> <span class="o">=</span> <span class="n">addrs</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">data</span> <span class="o">=</span> <span class="n">idc</span><span class="p">.</span><span class="n">get_bytes</span><span class="p">(</span><span class="n">addrs</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">length</span><span class="p">)</span>
        <span class="n">key</span> <span class="o">=</span> <span class="n">idc</span><span class="p">.</span><span class="n">get_bytes</span><span class="p">(</span><span class="n">addrs</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">length</span><span class="p">)</span>
        <span class="n">addrs</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="c1"># comment decrypted string
</span>    <span class="k">if</span> <span class="n">idc</span><span class="p">.</span><span class="n">print_insn_mnem</span><span class="p">(</span><span class="n">ea</span><span class="p">)</span> <span class="o">==</span> <span class="s">"call"</span><span class="p">:</span>
        <span class="n">dec</span> <span class="o">=</span> <span class="n">dec_str</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">length</span><span class="p">)</span>
        <span class="n">idc</span><span class="p">.</span><span class="n">set_cmt</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="n">dec</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">print_insn_mnem</span><span class="p">(</span><span class="n">ea</span><span class="p">)</span> <span class="o">==</span> <span class="s">"mov"</span><span class="p">)</span> <span class="ow">and</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">get_operand_type</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">idc</span><span class="p">.</span><span class="n">o_mem</span><span class="p">)</span> <span class="ow">and</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">get_operand_type</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="n">idc</span><span class="p">.</span><span class="n">o_reg</span><span class="p">):</span>
        <span class="n">global_var</span> <span class="o">=</span> <span class="n">idc</span><span class="p">.</span><span class="n">get_operand_value</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">idc</span><span class="p">.</span><span class="n">set_name</span><span class="p">(</span><span class="n">global_var</span><span class="p">,</span> <span class="s">"STR_"</span> <span class="o">+</span> <span class="n">dec</span><span class="p">,</span> <span class="n">SN_NOWARN</span><span class="p">)</span>


    <span class="c1"># move to next instruction
</span>    <span class="n">ea</span> <span class="o">=</span> <span class="n">idc</span><span class="p">.</span><span class="n">next_head</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
</code></pre></div></div>

<p>After this step you must see a clear plain text. Here you are the results:</p>

<details style="color: #EEFFFF; font-family: monospace !default; font-size: 0.85em; background: #854442; border: 1px solid #263238; border-radius: 3px; padding: 10px; line-height: 2.2; overflow-x: scroll;">
    <summary style="outline: none; cursor: pointer">
        <span style="color: darkgray">
            Expand to see more
        </span><br />
<div style="height: 1px"></div>
&emsp; INSERT_KEY_HERE<br />
&emsp; JohnDoe<br />
&emsp; HAL9TH<br />
&emsp; api.faceit.com<br />
&emsp; /core/v1/nicknames/<br />
&emsp; about<br />
&emsp; Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25<br />
&emsp; C:/ProgramData/<br />
&emsp; .exe<br />
</summary>
&emsp; :Zone.Identifier<br />
&emsp; [ZoneTransfer] ZoneId=2<br />
&emsp; Windows<br />
&emsp; ProgramData<br />
&emsp; RECYCLE.BIN<br />
&emsp; Config.Msi<br />
&emsp; System Volume Information<br />
&emsp; msdownld.tmp<br />
&emsp; Recovery<br />
&emsp; Local/Temp<br />
&emsp; Program Files<br />
&emsp; Recycle.Bin<br />
&emsp; All Users<br />
&emsp; MicrosoftEdge/Cookies<br />
&emsp; Users/Public<br />
&emsp; Local/Packages<br />
&emsp; Local/NuGet<br />
&emsp; Roaming/WinRAR<br />
&emsp; Local/Microsoft<br />
&emsp; Microsoft<br />
&emsp; fee_estimates<br />
&emsp; peers<br />
&emsp; mempool<br />
&emsp; banlist<br />
&emsp; governance<br />
&emsp; mncache<br />
&emsp; mnpayments<br />
&emsp; netfulfilled<br />
&emsp; passwords.txt<br />
&emsp; Login Data<br />
&emsp; Cookies<br />
&emsp; Web Data<br />
&emsp; /files/Autofill<br />
&emsp; /files/Cookies<br />
&emsp; /files/CC<br />
&emsp; /files/History<br />
&emsp; /files/Downloads<br />
&emsp; /files/<br />
&emsp; /files/Files<br />
&emsp; hwid<br />
&emsp; os<br />
&emsp; platform<br />
&emsp; profile<br />
&emsp; user<br />
&emsp; cccount<br />
&emsp; fcount<br />
&emsp; telegram<br />
&emsp; ver<br />
&emsp; vaultcli.dll<br />
&emsp; VaultOpenVault<br />
&emsp; VaultCloseVault<br />
&emsp; VaultEnumerateItems<br />
&emsp; VaultGetItem<br />
&emsp; VaultFree<br />
&emsp; SELECT url FROM moz_places<br />
&emsp; %s/Mozilla/Firefox/profiles.ini<br />
&emsp; /signons.sqlite<br />
&emsp; SELECT encryptedUsername, encryptedPassword, formSubmitURL FROM moz_logins<br />
&emsp; /logins.json<br />
&emsp; formSubmitURL<br />
&emsp; usernameField<br />
&emsp; encryptedUsername<br />
&emsp; encryptedPassword<br />
&emsp; guid<br />
&emsp; SELECT host, name, value FROM moz_cookies<br />
&emsp; SELECT origin_url, username_value, password_value FROM logins<br />
&emsp; SELECT name, value FROM autofill<br />
&emsp; SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted FROM credit_cards<br />
&emsp; SELECT target_path, tab_url from downloads<br />
&emsp; SELECT url, title from urls<br />
&emsp; SELECT HOST_KEY, is_httponly, path, is_secure, (expires_utc/1000000)-11644480800, name, encrypted_value from cookies<br />
&emsp; C:/Users/<br />
&emsp; /AppData/Roaming/FileZilla/recentservers.xml<br />
&emsp; &lt;Host&gt;<br />
&emsp; &lt;Port&gt;<br />
&emsp; &lt;User&gt;<br />
&emsp; &lt;Pass encoding="base64"&gt;<br />
&emsp; Soft: FileZilla<br />
&emsp; /AppData/Roaming/.purple/accounts.xml<br />
&emsp; &lt;protocol&gt;<br />
&emsp; &lt;name&gt;<br />
&emsp; &lt;password&gt;<br />
&emsp; Soft: Pidgin<br />
&emsp; /Thunderbird/Profiles/<br />
&emsp; C:/Program Files (x86)/Mozilla Thunderbird<br />
&emsp; APPDATA<br />
&emsp; LOCALAPPDATA<br />
&emsp; Thunderbird<br />
&emsp; /files/Telegram<br />
&emsp; /Telegram Desktop/tdata/*<br />
&emsp; D877F783D5D3EF8C*<br />
&emsp; /Telegram Desktop/tdata/<br />
&emsp; key_datas<br />
&emsp; /Telegram Desktop/tdata/D877F783D5D3EF8C/*<br />
&emsp; map*<br />
&emsp; /Telegram Desktop/tdata/D877F783D5D3EF8C/<br />
&emsp; firefox.exe<br />
&emsp; plugin-container.exe<br />
&emsp; update_notifier.exe<br />
&emsp; Mozilla Firefox<br />
&emsp; /Mozilla/Firefox/Profiles/<br />
&emsp; Pale Moon<br />
&emsp; /Moonchild Productions/Pale Moon/Profiles/<br />
&emsp; Waterfox<br />
&emsp; /Waterfox/Profiles/<br />
&emsp; Cyberfox<br />
&emsp; /8pecxstudios/Cyberfox/Profiles/<br />
&emsp; BlackHawk<br />
&emsp; /NETGATE Technologies/BlackHawk/Profiles/<br />
&emsp; IceCat<br />
&emsp; /Mozilla/icecat/Profiles/<br />
&emsp; K-Meleon<br />
&emsp; /K-Meleon/<br />
&emsp; Google Chrome<br />
&emsp; /Google/Chrome/User Data/<br />
&emsp; Chromium<br />
&emsp; /Chromium/User Data/<br />
&emsp; Kometa<br />
&emsp; /Kometa/User Data/<br />
&emsp; Amigo<br />
&emsp; /Amigo/User Data/<br />
&emsp; Torch<br />
&emsp; /Torch/User Data/<br />
&emsp; Orbitum<br />
&emsp; /Orbitum/User Data/<br />
&emsp; Comodo Dragon<br />
&emsp; /Comodo/Dragon/User Data/<br />
&emsp; Nichrome<br />
&emsp; /Nichrome/User Data/<br />
&emsp; Maxthon5<br />
&emsp; /Maxthon5/Users/<br />
&emsp; Sputnik<br />
&emsp; /Sputnik/User Data/<br />
&emsp; Epic Privacy Browser<br />
&emsp; /Epic Privacy Browser/User Data/<br />
&emsp; Vivaldi<br />
&emsp; /Vivaldi/User Data/<br />
&emsp; CocCoc<br />
&emsp; /CocCoc/Browser/User Data/<br />
&emsp; URAN<br />
&emsp; /uCozMedia/Uran/User Data/<br />
&emsp; QIP Surf<br />
&emsp; /QIP Surf/User Data/<br />
&emsp; Cent Browser<br />
&emsp; /CentBrowser/User Data/<br />
&emsp; Elements Browser<br />
&emsp; /Elements Browser/User Data/<br />
&emsp; TorBro Browser<br />
&emsp; /TorBro/Profile/<br />
&emsp; Suhba Browser<br />
&emsp; /Suhba/User Data/<br />
&emsp; Mustang Browser<br />
&emsp; /Rafotech/Mustang/User Data/<br />
&emsp; Chedot Browser<br />
&emsp; /Chedot/User Data/<br />
&emsp; Brave_Old<br />
&emsp; /brave/<br />
&emsp; 7Star<br />
&emsp; /7Star/7Star/User Data/<br />
&emsp; Microsoft Edge<br />
&emsp; /Microsoft/Edge/User Data/<br />
&emsp; 360 Browser<br />
&emsp; /360Browser/Browser/User Data/<br />
&emsp; QQBrowser<br />
&emsp; /Tencent/QQBrowser/User Data/<br />
&emsp; Opera<br />
&emsp; /Opera Software/Opera Stable/<br />
&emsp; OperaGX<br />
&emsp; /Opera Software/Opera GX Stable/<br />
&emsp; Local State<br />
&emsp; Cookies<br />
&emsp; %s_%s.txt<br />
&emsp; TRUE<br />
&emsp; FALSE<br />
&emsp; /Microsoft/Windows/Cookies/Low/<br />
&emsp; Cookies/IE_Cookies.txt<br />
&emsp; /Packages/Microsoft.MicrosoftEdge_8wekyb3d8bbwe/AC/#!001/MicrosoftEdge/Cookies/<br />
&emsp; Cookies/Edge_Cookies.txt<br />
&emsp; /files/Wallets<br />
&emsp; %USERPROFILE%<br />
&emsp; %DESKTOP%<br />
&emsp; KERNEL32.DLL<br />
&emsp; LoadLibraryA<br />
&emsp; GetProcAddress<br />
&emsp; VirtualAllocExNuma<br />
&emsp; gdi32.dll<br />
&emsp; ole32.dll<br />
&emsp; user32.dll<br />
&emsp; psapi.dll<br />
&emsp; BCRYPT.DLL<br />
&emsp; BCryptCloseAlgorithmProvider<br />
&emsp; BCryptDestroyKey<br />
&emsp; BCryptOpenAlgorithmProvider<br />
&emsp; BCryptSetProperty<br />
&emsp; BCryptGenerateSymmetricKey<br />
&emsp; BCryptDecrypt<br />
&emsp; CRYPT32.DLL<br />
&emsp; CryptUnprotectData<br />
&emsp; CryptStringToBinaryA<br />
&emsp; C:/ProgramData/nss3.dll<br />
&emsp; NSS_Init<br />
&emsp; NSS_Shutdown<br />
&emsp; PK11_GetInternalKeySlot<br />
&emsp; PK11_FreeSlot<br />
&emsp; PK11_Authenticate<br />
&emsp; PK11SDR_Decrypt<br />
&emsp; advapi32.dll<br />
&emsp; RegOpenKeyExA<br />
&emsp; RegQueryValueExA<br />
&emsp; RegCloseKey<br />
&emsp; RegOpenKeyExW<br />
&emsp; RegGetValueW<br />
&emsp; RegEnumKeyExA<br />
&emsp; RegGetValueA<br />
&emsp; GetUserNameA<br />
&emsp; GetCurrentHwProfileA<br />
&emsp; wininet.dll<br />
&emsp; InternetCloseHandle<br />
&emsp; InternetReadFile<br />
&emsp; HttpSendRequestA<br />
&emsp; HttpOpenRequestA<br />
&emsp; InternetConnectA<br />
&emsp; InternetOpenA<br />
&emsp; HttpAddRequestHeadersA<br />
&emsp; HttpQueryInfoA<br />
&emsp; InternetSetFilePointer<br />
&emsp; InternetOpenUrlA<br />
&emsp; InternetSetOptionA<br />
&emsp; DeleteUrlCacheEntry<br />
&emsp; CreateCompatibleBitmap<br />
&emsp; SelectObject<br />
&emsp; BitBlt<br />
&emsp; DeleteObject<br />
&emsp; CreateDCA<br />
&emsp; GetDeviceCaps<br />
&emsp; CreateCompatibleDC<br />
&emsp; CoCreateInstance<br />
&emsp; CoUninitialize<br />
&emsp; GetDesktopWindow<br />
&emsp; ReleaseDC<br />
&emsp; GetKeyboardLayoutList<br />
&emsp; CharToOemA<br />
&emsp; GetDC<br />
&emsp; wsprintfA<br />
&emsp; EnumDisplayDevicesA<br />
&emsp; GetSystemMetrics<br />
&emsp; GetModuleFileNameExA<br />
&emsp; GetModuleBaseNameA<br />
&emsp; EnumProcessModules<br />
&emsp; TronLink<br />
&emsp; /Local Extension Settings/ibnejdfjmmkpcnlpebklmnkoeoihofec/CURRENT<br />
&emsp; /Sync Extension Settings/ibnejdfjmmkpcnlpebklmnkoeoihofec/CURRENT<br />
&emsp; /Local Extension Settings/ibnejdfjmmkpcnlpebklmnkoeoihofec<br />
&emsp; /Sync Extension Settings/ibnejdfjmmkpcnlpebklmnkoeoihofec<br />
&emsp; MetaMask<br />
&emsp; /Local Extension Settings/nkbihfbeogaeaoehlefnkodbefgpgknn/CURRENT<br />
&emsp; /Sync Extension Settings/nkbihfbeogaeaoehlefnkodbefgpgknn/CURRENT<br />
&emsp; /Local Extension Settings/nkbihfbeogaeaoehlefnkodbefgpgknn<br />
&emsp; /Sync Extension Settings/nkbihfbeogaeaoehlefnkodbefgpgknn<br />
&emsp; BinanceChainWallet<br />
&emsp; /Local Extension Settings/fhbohimaelbohpjbbldcngcnapndodjp/CURRENT<br />
&emsp; /Sync Extension Settings/fhbohimaelbohpjbbldcngcnapndodjp/CURRENT<br />
&emsp; /Local Extension Settings/fhbohimaelbohpjbbldcngcnapndodjp<br />
&emsp; /Sync Extension Settings/fhbohimaelbohpjbbldcngcnapndodjp<br />
&emsp; Authenticator<br />
&emsp; /Local Extension Settings/bhghoamapcdpbohphigoooaddinpkbai/CURRENT<br />
&emsp; /Sync Extension Settings/bhghoamapcdpbohphigoooaddinpkbai/CURRENT<br />
&emsp; /Local Extension Settings/bhghoamapcdpbohphigoooaddinpkbai<br />
&emsp; /Sync Extension Settings/bhghoamapcdpbohphigoooaddinpkbai<br />
&emsp; Wallets<br />
&emsp; Plugins<br />
&emsp; *wallet*.dat<br />
&emsp; /Wallets/<br />
&emsp; keystore<br />
&emsp; Ethereum"<br />
&emsp; /Ethereum/<br />
&emsp; Electrum<br />
&emsp; /Electrum/wallets/<br />
&emsp; ElectrumLTC<br />
&emsp; /Electrum-LTC/wallets/<br />
&emsp; Exodus<br />
&emsp; /Exodus/<br />
&emsp; exodus.conf.json<br />
&emsp; window-state.json<br />
&emsp; /Exodus/exodus.wallet/<br />
&emsp; passphrase.json<br />
&emsp; seed.seco<br />
&emsp; info.seco<br />
&emsp; ElectronCash<br />
&emsp; /ElectronCash/wallets/<br />
&emsp; default_wallet<br />
&emsp; MultiDoge<br />
&emsp; /MultiDoge/<br />
&emsp; multidoge.wallet<br />
&emsp; JAXX<br />
&emsp; /jaxx/Local Storage/<br />
&emsp; file__0.localstorage<br />
&emsp; Atomic<br />
&emsp; /atomic/Local Storage/leveldb/<br />
&emsp; 000003.log<br />
&emsp; CURRENT<br />
&emsp; LOCK<br />
&emsp; LOG<br />
&emsp; MANIFEST-000001<br />
&emsp; 0000*<br />
&emsp; Binance<br />
&emsp; /Binance/<br />
&emsp; app-store.json<br />
&emsp; Coinomi<br />
&emsp; /Coinomi/Coinomi/wallets/<br />
&emsp; *.wallet<br />
&emsp; *.config<br />
&emsp; wallet_path<br />
&emsp; SOFTWARE/monero-project/monero-core<br />
&emsp; /Monero/<br />
&emsp; SELECT fieldname, value FROM moz_formhistory<br />
&emsp; /files/Soft<br />
&emsp; /files/Soft/Authy<br />
&emsp; /Authy Desktop/Local Storage/<br />
&emsp; /Authy Desktop/Local Storage/*.localstorage<br />
&emsp; /Opera Stable/Local State<br />
</details>

<p>Let’s move to the next step…</p>

<h2 id="building-imports">Building imports</h2>

<p>Vidar uses <code class="language-plaintext highlighter-rouge">LoadLibraryA</code> &amp; <code class="language-plaintext highlighter-rouge">GetProcAddress</code> to make a build imports dynamically. The following function is used for this mission.</p>

<p><a href="/assets/images/malware-analysis/Vidar/dest.jpg"><img src="/assets/images/malware-analysis/Vidar/dest.jpg" alt="" /></a></p>

<p>But there are no readable <strong><em>APIs</em></strong>. So I wrote an <strong><em>IDAPython</em></strong> script to rename it. The script used the <strong><em>decrypted strings</em></strong> and map them with the functions to get a clear overview. “you can check it with the debugger”</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">idc</span>

<span class="n">start</span> <span class="o">=</span> <span class="mh">0x49978D</span>
<span class="n">end</span> <span class="o">=</span> <span class="mh">0x499B62</span>
<span class="n">ea</span> <span class="o">=</span> <span class="n">start</span>

<span class="n">api_names</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">while</span> <span class="n">ea</span> <span class="o">&lt;=</span> <span class="n">end</span><span class="p">:</span>
    <span class="c1"># get GetProcAddress API name
</span>    <span class="k">if</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">print_insn_mnem</span><span class="p">(</span><span class="n">ea</span><span class="p">)</span> <span class="o">==</span> <span class="s">"mov"</span><span class="p">)</span> <span class="ow">and</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">get_operand_type</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">idc</span><span class="p">.</span><span class="n">o_reg</span><span class="p">)</span> <span class="ow">and</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">get_operand_type</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="n">idc</span><span class="p">.</span><span class="n">o_mem</span><span class="p">):</span>
        <span class="n">addr</span> <span class="o">=</span> <span class="n">idc</span><span class="p">.</span><span class="n">get_operand_value</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">name</span> <span class="o">=</span> <span class="n">idc</span><span class="p">.</span><span class="n">get_name</span><span class="p">(</span><span class="n">addr</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">name</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">"STR_"</span><span class="p">):</span>
            <span class="n">api_names</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>

    <span class="c1"># assign GetProcAddress result to global var
</span>    <span class="k">if</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">print_insn_mnem</span><span class="p">(</span><span class="n">ea</span><span class="p">)</span> <span class="o">==</span> <span class="s">"mov"</span><span class="p">)</span> <span class="ow">and</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">get_operand_type</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">idc</span><span class="p">.</span><span class="n">o_mem</span><span class="p">)</span> <span class="ow">and</span> <span class="p">(</span><span class="n">idc</span><span class="p">.</span><span class="n">print_operand</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="s">"eax"</span><span class="p">):</span>
        <span class="n">addr</span> <span class="o">=</span> <span class="n">idc</span><span class="p">.</span><span class="n">get_operand_value</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">name</span> <span class="o">=</span> <span class="n">api_names</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
        <span class="n">idc</span><span class="p">.</span><span class="n">set_name</span><span class="p">(</span><span class="n">addr</span><span class="p">,</span> <span class="s">"API_"</span> <span class="o">+</span> <span class="n">name</span><span class="p">[</span><span class="mi">4</span><span class="p">:])</span>

    <span class="c1"># move to next instruction
</span>    <span class="n">ea</span> <span class="o">=</span> <span class="n">idc</span><span class="p">.</span><span class="n">next_head</span><span class="p">(</span><span class="n">ea</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
</code></pre></div></div>

<p>Now you can look and enjoy..</p>

<p><a href="/assets/images/malware-analysis/Vidar/build.jpg"><img src="/assets/images/malware-analysis/Vidar/build.jpg" alt="" /></a></p>

<h3 id="imported-dlls">Imported DLLs</h3>

<p>Here is a list of imported functions:</p>

<details style="color: #EEFFFF; font-family: monospace !default; font-size: 0.85em; background: #854442; border: 1px solid #263238; border-radius: 3px; padding: 10px; line-height: 1.8">
    <summary style="outline: none; cursor: pointer">
        <span style="color: darkGrey">
            Expand to see more
        </span><br />
&emsp; bcrypt.dll<br />
&emsp; &emsp; &ensp; BCryptCloseAlgorithmProvider<br />
&emsp; &emsp; &ensp; BCryptDestroyKey<br />
&emsp; &emsp; &ensp; BCryptOpenAlgorithmProvider<br />
&emsp; &emsp; &ensp; BCryptSetProperty<br />
&emsp; &emsp; &ensp; BCryptGenerateSymmetricKey<br />
&emsp; &emsp; &ensp; BCryptDecrypt<br />
</summary>
&emsp; crypt32.dll<br />
&emsp; &emsp; &ensp; CryptUnprotectData<br />
&emsp; &emsp; &ensp; CryptStringToBinaryA<br />
&emsp; advapi32.dll<br />
&emsp; &emsp; &ensp; RegOpenKeyExA<br />
&emsp; &emsp; &ensp; RegQueryValueExA<br />
&emsp; &emsp; &ensp; RegCloseKey<br />
&emsp; &emsp; &ensp; RegOpenKeyExW<br />
&emsp; &emsp; &ensp; RegGetValueW<br />
&emsp; &emsp; &ensp; RegEnumKeyExA<br />
&emsp; &emsp; &ensp; RegGetValueA<br />
&emsp; &emsp; &ensp; GetUserNameA<br />
&emsp; &emsp; &ensp; GetCurrentHwProfileA<br />
&emsp; wininet.dll<br />
&emsp; &emsp; &ensp; InternetCloseHandle<br />
&emsp; &emsp; &ensp; InternetReadFile<br />
&emsp; &emsp; &ensp; HttpSendRequestA<br />
&emsp; &emsp; &ensp; HttpOpenRequestA<br />
&emsp; &emsp; &ensp; InternetConnectA<br />
&emsp; &emsp; &ensp; InternetOpenA<br />
&emsp; &emsp; &ensp; HttpAddRequestHeadersA<br />
&emsp; &emsp; &ensp; HttpQueryInfoA<br />
&emsp; &emsp; &ensp; InternetSetFilePointer<br />
&emsp; &emsp; &ensp; InternetOpenUrlA<br />
&emsp; &emsp; &ensp; InternetSetOptionA<br />
&emsp; &emsp; &ensp; DeleteUrlCacheEntry<br />
&emsp; gdi32.dll<br />
&emsp; &emsp; &ensp; CreateCompatibleBitmap<br />
&emsp; &emsp; &ensp; SelectObject<br />
&emsp; &emsp; &ensp; BitBlt<br />
&emsp; &emsp; &ensp; DeleteObject<br />
&emsp; &emsp; &ensp; CreateDCA<br />
&emsp; &emsp; &ensp; GetDeviceCaps<br />
&emsp; &emsp; &ensp; CreateCompatibleDC<br />
&emsp; ole32.dll<br />
&emsp; &emsp; &ensp; CoCreateInstance<br />
&emsp; &emsp; &ensp; CoUninitialize<br />
&emsp; user32.dll<br />
&emsp; &emsp; &ensp; GetDesktopWindow<br />
&emsp; &emsp; &ensp; ReleaseDC<br />
&emsp; &emsp; &ensp; GetKeyboardLayoutList<br />
&emsp; &emsp; &ensp; CharToOemA<br />
&emsp; &emsp; &ensp; GetDC<br />
&emsp; &emsp; &ensp; wsprintfA<br />
&emsp; &emsp; &ensp; EnumDisplayDevicesA<br />
&emsp; psapi.dll<br />
&emsp; &emsp; &ensp; GetModuleFileNameExA<br />
&emsp; &emsp; &ensp; GetModuleBaseNameA<br />
&emsp; &emsp; &ensp; EnumProcessModules<br />
</details>

<h3 id="extra--dlls">Extra  DLLs</h3>

<p>The malware has been observed, upon execution. DLL files are required during the stealing process of different kind of browsers. So it downloads them with connecting to ip: <code class="language-plaintext highlighter-rouge">162.55.213.180</code> via GET request. They are deleted when task is done.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">DLL</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">freebl3.dll</td>
      <td>Freebl Library for the NSS (Mozilla Browser)</td>
    </tr>
    <tr>
      <td style="text-align: left">mozglue.dll</td>
      <td>Mozilla Browser Library</td>
    </tr>
    <tr>
      <td style="text-align: left">msvcp140.dll</td>
      <td>Visual C++ Runtime 2015</td>
    </tr>
    <tr>
      <td style="text-align: left">nss3.dll</td>
      <td>Network System Services Library (Mozilla Browser)</td>
    </tr>
    <tr>
      <td style="text-align: left">softokn3.dll</td>
      <td>Mozilla Browser Library</td>
    </tr>
    <tr>
      <td style="text-align: left">vcruntime140.dll</td>
      <td>Visual C++ Runtime 2015</td>
    </tr>
  </tbody>
</table>

<p>Well, Now our sample is ready to reverse its functionalities. Let’s Continue…</p>

<h1 id="c2-server">C2 Server</h1>

<p>C2 IP <code class="language-plaintext highlighter-rouge">162.55.213.180</code>(real C2)</p>

<p>Vidar has 2 profiles with different websites, every profile should have same IP list. IPs delimited with <code class="language-plaintext highlighter-rouge">|</code> in each list.</p>

<p>So Vidar tries to grep c2 server IP from 1 of them ‘In our case just 1 <strong>IP</strong>’. <u>you can check profile description</u></p>

<p>First <code class="language-plaintext highlighter-rouge">mastodon.online/@prophef1</code></p>

<p><a href="/assets/images/malware-analysis/Vidar/prof1.png"><img src="/assets/images/malware-analysis/Vidar/prof1.png" alt="" /></a></p>

<p>Second <code class="language-plaintext highlighter-rouge">koyu.space/@prophef2</code></p>

<p><a href="/assets/images/malware-analysis/Vidar/prof2.png"><img src="/assets/images/malware-analysis/Vidar/prof2.png" alt="" /></a></p>

<p>Vidar tries to connect with C2 server with it’s hardcoded profile-id to get the right config:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1,1,1,1,1,1,1,1,1,1,250,Default;%DESKTOP%/;/*.txt:/*.dat:/*wallet/*.*:/*2fa/*.*:/*backup/*.*:/*code/*.*:/*password/*.*:/*auth/*.*:/*google/*.*:/*utc/*.*:/*UTC/*.*:/*crypt/*.*:/*key/*.*;50;true;movies:music:mp3;*
</code></pre></div></div>

<p>Each part have the “;” in delimiter, so let’s dig into it.</p>

<h2 id="how-to-understand-the-configuration-format">How to understand the configuration format</h2>

<p>In our example, this is the configuration the malware could get from the C2 :</p>

<h4 id="first-part"><u>First part</u></h4>

<table>
  <thead>
    <tr>
      <th>1</th>
      <th>Saved password</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Cookies / AutoFill</td>
    </tr>
    <tr>
      <td>1</td>
      <td>Wallet</td>
    </tr>
    <tr>
      <td>1</td>
      <td>Internet History</td>
    </tr>
    <tr>
      <td>1</td>
      <td>??? – Supposed to be Skype <strong><em>(not implemented)/</em></strong></td>
    </tr>
    <tr>
      <td>1</td>
      <td>??? – Supposed to be Steam <strong><em>(not implemented)/</em></strong></td>
    </tr>
    <tr>
      <td>1</td>
      <td>Telegram</td>
    </tr>
    <tr>
      <td>1</td>
      <td>Screenshot</td>
    </tr>
    <tr>
      <td>1</td>
      <td>Grabber</td>
    </tr>
    <tr>
      <td>1</td>
      <td>???</td>
    </tr>
    <tr>
      <td>250</td>
      <td>Max Size (kb)</td>
    </tr>
    <tr>
      <td>Default</td>
      <td>Name of the profile (also used for archive file into the files repository)</td>
    </tr>
  </tbody>
</table>

<h4 id="second-part">Second part</h4>

<p><strong>%DESKTOP %</strong>  –&gt;  Selected folder repository where the grabber feature will search recursively (or not) some selected data</p>

<h4 id="third-part">Third part</h4>

<p><strong><em>.txt:/</em>.dat:/<em>wallet/</em>./<em>:/</em>2fa/<em>./</em>:/<em>backup/</em>./<em>:/</em>code/<em>./</em>:/<em>password/</em>./<em>:/</em>auth/<em>./</em>:/<em>google/</em>./<em>:/</em>utc/<em>./</em>:/<em>UTC/</em>./<em>:/</em>crypt/<em>./</em>:/<em>key/</em>.</strong>*</p>

<h4 id="fourth-part">Fourth part</h4>

<table>
  <thead>
    <tr>
      <th>50</th>
      <th>Max Size per file (kb)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>true</td>
      <td>Collect Recursively</td>
    </tr>
  </tbody>
</table>

<h4 id="fifth-part">Fifth part</h4>

<p>movies:music:mp3;</p>

<p>This is the exception part, the grabber will avoid those strings if it matches in the files searched recursively in the specific wanted folder.</p>

<h1 id="folder-generation">Folder generation</h1>

<p>To summarize all kind of possibles files/folders that will be generated for the malicious repository is in fact pretty simple :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//files                   &lt;- Master folder
//files//Autofill         &lt;- Auto-Fill files
//files//CC               &lt;- Credit Cards
//files//Cookies          &lt;- Cookies
//files//Downloads        &lt;- Downloaded data history from browsers
//files//Files            &lt;- Profile configs (Archives)
//files//History          &lt;- Browser histories
//files//Soft             &lt;- Master folder for targeted softwares
//files//Soft//Authy      &lt;- 2FA software
//files//Telegram         &lt;- Telegram messages
//files//Wallets          &lt;- Cryptomining Wallets
</code></pre></div></div>

<p>General list files</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//files/screenshot.jpg     &lt;- Actual screenshot of the screen
//files/passwords.txt      &lt;- Passwords consolidated all at once
//files//information.txt   &lt;- Snapshot of the computer setup
//files//outlook.txt	   &lt;- Outlook cardentials
</code></pre></div></div>

<h1 id="browsers">Browsers</h1>

<ul>
  <li>firefox</li>
  <li>waterfall</li>
  <li>Cyberfox</li>
  <li>BlackHawk</li>
  <li>IceCat</li>
  <li>Opera</li>
  <li>OperaGX</li>
  <li>Chromium</li>
  <li>Kometa</li>
  <li>Amigo</li>
  <li>Torch</li>
  <li>orbitum</li>
  <li>Nichrome</li>
  <li>Maxthon 5</li>
  <li>sputnik</li>
  <li>CocCoc</li>
  <li>Uran</li>
  <li>7Star</li>
  <li>QQBrowser</li>
  <li>CryptoTab Browser</li>
  <li>Brave</li>
  <li>Brave old</li>
</ul>

<p>Of course, this list could be longer than this if there are some browsers based on chromium repository.</p>

<h1 id="2-factor-authentication-software-2fa">2 Factor Authentication software (2FA)</h1>

<p>This technique could be also another door for vulnerabilities because no system is safe and stealing it will be more and more common in the future. So with Vidar, the <strong>Authy</strong> software is targeted.</p>

<p><a href="/assets/images/malware-analysis/Vidar/authy.png"><img src="/assets/images/malware-analysis/Vidar/authy.png" alt="" /></a></p>

<p>More specifically the SQLite file on the corresponding application on %APPDATA% repository.</p>

<p><a href="/assets/images/malware-analysis/Vidar/authy_code.jpg"><img src="/assets/images/malware-analysis/Vidar/authy_code.jpg" alt="" /></a></p>

<p>So guys don’t fully trust a system even security system. Give your privacy all your care.</p>

<h1 id="messengers">Messengers</h1>

<ul>
  <li>
    <p><strong>outlook</strong></p>

    <p><a href="/assets/images/malware-analysis/Vidar/outlook.jpg"><img src="/assets/images/malware-analysis/Vidar/outlook.jpg" alt="" /></a></p>

    <p>Here is the data that Vidar steals : <u>extracted from sandbox machine</u></p>

    <p><a href="/assets/images/malware-analysis/Vidar/outlook_data.jpg"><img src="/assets/images/malware-analysis/Vidar/outlook_data.jpg" alt="" /></a></p>
  </li>
  <li>
    <p><strong>Thunderbird</strong></p>
  </li>
  <li>
    <p><strong>Telegram</strong></p>
  </li>
</ul>

<p>I won’t describe how Vidar steals them because the process (in-depth)is painful and needs another report to explain. :)</p>

<h1 id="crypto-wallets">Crypto Wallets</h1>

<ul>
  <li>Eletcrum</li>
  <li>Exodus</li>
  <li>ElectronCash</li>
  <li>MultiDoge</li>
  <li>JAXX</li>
  <li>Atomic</li>
  <li>Binance</li>
</ul>

<p>This list could change if the customer added some additional files to search for specific areas on victim’s machine.</p>

<h1 id="information-log">Information log</h1>

<p>to understand how this file is generated with the corresponding API call, breakpoint on these API if you want to take your time to analyze all the step easily.
Vidar steals almost all general information about victim machine and save it in <strong>inforamtion.txt</strong> file like:</p>

<ul>
  <li>
    <p>Date</p>
  </li>
  <li>
    <p>Machine ID</p>
  </li>
  <li>
    <p>GUID</p>
  </li>
  <li>
    <p>HWID</p>
  </li>
  <li>
    <p>Path</p>
  </li>
  <li>
    <p>Work DIR</p>

    <p><a href="/assets/images/malware-analysis/Vidar/info.jpg"><img src="/assets/images/malware-analysis/Vidar/info.jpg" alt="" /></a>)</p>
  </li>
</ul>

<p>Get the name of the operating system and platform is classic because this is, in fact, a concatenation of two things. First, Vidar check if Windows is 32 or 64-bit, it checks itself if is running on <a href="https://docs.microsoft.com/fr-fr/windows/desktop/WinProg64/running-32-bit-applications">WOW64</a> with the help of <a href="https://docs.microsoft.com/en-us/windows/desktop/api/wow64apiset/nf-wow64apiset-iswow64process">IsWow64Process</a>.</p>

<p><a href="/assets/images/malware-analysis/Vidar/32_64.jpg"><img src="/assets/images/malware-analysis/Vidar/32_64.jpg" alt="" /></a></p>

<p>Second, with <a href="https://docs.microsoft.com/en-us/windows/desktop/api/winreg/nf-winreg-regopenkeyexa">RegOpenKeyExA</a>, the value of this registry key is fetched:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows NT/CurrentVersion/ProductName
</code></pre></div></div>

<p><a href="/assets/images/malware-analysis/Vidar/reg_key.jpg"><img src="/assets/images/malware-analysis/Vidar/reg_key.jpg" alt="" /></a></p>

<p>Here we can see the some pretty APIs that we decrypted before analysis. Let’s continue our analysis…</p>

<p>Windows version
Computer Name
User Name
Display Resolution
Display Language
Keyboard Languages
Local Time
TimeZone</p>

<p>[Hardware]
-&gt;    Processor
-&gt;    CPU Count
-&gt;     RAM
-&gt;    VideoCard</p>

<p>[Processes]
Get a snapshot from all processes executed using <a href="https://docs.microsoft.com/en-us/windows/desktop/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot"><strong><em>CreateToolhelp32Snapshot</em></strong></a> &amp;  <a href="https://docs.microsoft.com/en-us/windows/desktop/api/tlhelp32/nf-tlhelp32-process32first"><strong><em>Process32First</em></strong></a> &amp; <a href="https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-process32next"><strong><em>Process32Next</em></strong></a> 
<a href="/assets/images/malware-analysis/Vidar/snapshoot.jpg"><img src="/assets/images/malware-analysis/Vidar/snapshoot.jpg" alt="" /></a></p>

<p>After, checking if it’s a parent process or a child process, Vidar will grab two value of the <strong><em><a href="https://docs.microsoft.com/fr-fr/windows/desktop/api/tlhelp32/ns-tlhelp32-tagprocessentry32">PROCESSENTRY32</a></em></strong> object :
	th32ProcessID: PID
	szExeFile: The name of the PE</p>

<p>I can’t screen all function here but you can take your time while analyzing it. Let’s continue…</p>

<p>[Software]
Get list of all installed software on the machine, the value of this registry key is fetched:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/Uninstall
</code></pre></div></div>

<p>These values are retrieves of each software (DisplayName &amp; DisplayVersion)</p>

<p><a href="/assets/images/malware-analysis/Vidar/software.jpg"><img src="/assets/images/malware-analysis/Vidar/software.jpg" alt="" /></a></p>

<h2 id="result"><u>Result</u></h2>

<p>You can see into <a href="https://app.any.run/tasks/0a57b362-32d4-4d33-bf66-9107ac1ca39d">sandbox analysis</a>, the generated <strong>information.txt</strong> and the whole process and connections.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Version: 49.7

Date: Tue Feb 01 04:37:51 2022
MachineID: 90059c37-1320-41a4-b58d-2b75a9850d2f
GUID: {e29ac6c0-7037-11de-816d-806e6f6e6963}
HWID: 90059c37-1320-41a4-b58d-816d-806e6f6e6963

Path: C:/Users/admin/AppData/Local/Temp/vidar.exe 
Work Dir: C:/ProgramData/GI3PPKTM8AJDIRUF0RKXBSEQV 

Windows: Windows 7 Professional [x86]
Computer Name: USER-PC
User Name: admin
Display Resolution: 1280x720
Display Language: en-US
Keyboard Languages: English (United States)
Local Time: 1/2/2022 4:37:51
TimeZone: UTC-0

[Hardware]
Processor: Intel(R) Core(TM) i5-6400 CPU @ 2.70GHz
CPU Count: 4
RAM: 3583 MB
VideoCard: Standard VGA Graphics Adapter

[Processes]
---------- System [4]
------------------------------  smss.exe [260]
-  csrss.exe [544]
-  vidar.exe [1988]
&lt; ... &gt;

[Software]
VLC media player [3.0.11]
WinRAR 5.91 (32-bit) [5.91.0]
&lt; ... &gt;

</code></pre></div></div>

<h1 id="other-payloads">Other payloads</h1>

<p>Vidar can download an executable file and execute it with <a href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecutea">ShellExecuteA</a>.</p>

<p>First Download</p>

<p><a href="/assets/images/malware-analysis/Vidar/download_exe.jpg"><img src="/assets/images/malware-analysis/Vidar/download_exe.jpg" alt="" /></a></p>

<p>Then Execute</p>

<p><a href="/assets/images/malware-analysis/Vidar/execute.jpg"><img src="/assets/images/malware-analysis/Vidar/execute.jpg" alt="" /></a></p>

<h1 id="kill--task">Kill  Task</h1>

<p>Vidar uses <strong>taskkill.exe</strong> to kill process. So when all the task of the stealer is finally accomplished and cleaned, the stealer needs to erase itself. So first of all, it retrieves its own <a href="https://en.wikipedia.org/wiki/Process_identifier">PID</a> with the help of <a href="https://docs.microsoft.com/en-us/windows/desktop/api/processthreadsapi/nf-processthreadsapi-getcurrentprocessid">GetCurrentProcessId</a>.</p>

<p><a href="/assets/images/malware-analysis/Vidar/killing task.jpg"><img src="/assets/images/malware-analysis/Vidar/killing task.jpg" alt="" /></a></p>

<p>When the request is finely crafted, Vidar is simply using <a href="https://docs.microsoft.com/en-us/windows/desktop/api/shellapi/nf-shellapi-shellexecutea">ShellExecuteA</a> to pop a command shell and execute the task, this erases all trace of the interaction of the payload on the machine and delete all downloaded DLLs.</p>

<p><a href="/assets/images/malware-analysis/Vidar/cmd exe.jpg"><img src="/assets/images/malware-analysis/Vidar/cmd exe.jpg" alt="" /></a></p>

<p>The full command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"C:/Windows/System32/cmd.exe" /c taskkill /im vidar.exe /f &amp; timeout /t 6 &amp; del /f /q "C:/Users/admin/AppData/Local/Temp/vidar.exe" &amp; del C:/ProgramData/*.dll &amp; exit
</code></pre></div></div>

<h1 id="exfiltration">Exfiltration</h1>

<p><strong>File Generation</strong></p>

<p>I can’t understand well how malware generates the file name but It consists from ‘Machine ID + ??(random digits) + .zip ‘</p>

<p><a href="/assets/images/malware-analysis/Vidar/file_name.png"><img src="/assets/images/malware-analysis/Vidar/file_name.png" alt="" /></a></p>

<p>This at least, all the different Content-Disposition that will be added to the HTTP request.</p>

<table>
  <thead>
    <tr>
      <th>hwid</th>
      <th>Hardware ID</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>os</td>
      <td>Operating System</td>
    </tr>
    <tr>
      <td>platform</td>
      <td>32 or 64 bits System</td>
    </tr>
    <tr>
      <td>profile</td>
      <td>C2 Profile ID</td>
    </tr>
    <tr>
      <td>user</td>
      <td>Name of the victim account</td>
    </tr>
    <tr>
      <td>cccount</td>
      <td>Number of Credit Cards stolen</td>
    </tr>
    <tr>
      <td>ccount</td>
      <td>Number of Coins Stolen (CryptoWallet)</td>
    </tr>
    <tr>
      <td>fcount</td>
      <td>Number of files stolen</td>
    </tr>
    <tr>
      <td>ver</td>
      <td>The version of the Vidar malware</td>
    </tr>
  </tbody>
</table>

<h1 id="conclusion">Conclusion</h1>

<p>Vidar  always tries to steal your data as much as it can and its tasks vary from version to another.  It was hard and exciting and I want to mention <strong>“This is my first Tech. report”</strong> and I will write more and more.</p>

<p>Finally, Remember you can watch the <a href="https://vimeo.com/514353794?fbclid=IwAR1PqolWyX-uyF66U2LyY3z5mk7SnIJFKDw00vjbwnAo9LzNfLvS8yaI9iw">video</a> that I passed in the intro to see how it works from server side.</p>

<h1 id="yara-rules">Yara Rules</h1>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">rule</span> <span class="nt">Vidar_Stealer</span> <span class="o">:</span> <span class="nt">Vidar</span>
<span class="p">{</span>
     <span class="py">meta</span><span class="p">:</span>
          <span class="n">Author</span> <span class="err">=</span> <span class="s1">"eln0ty"</span>
          <span class="n">Description</span> <span class="err">=</span> <span class="s1">"Rule to detect Vidar"</span>
          <span class="n">Date</span> <span class="err">=</span> <span class="s1">"Feb 5, 2022"</span>

      <span class="n">strings</span><span class="p">:</span>
          <span class="err">$</span><span class="n">mz</span> <span class="err">=</span> <span class="s1">"MZ"</span>

          <span class="err">$</span><span class="n">s1</span> <span class="err">=</span> <span class="s1">"1BEF0A57BE110FD467A"</span> <span class="n">ascii</span>
          <span class="err">$</span><span class="n">s2</span> <span class="err">=</span> <span class="s1">"Version: %s"</span> <span class="n">ascii</span>
          <span class="err">$</span><span class="n">s3</span> <span class="err">=</span> <span class="s1">"Date: %s"</span> <span class="n">ascii</span>
          <span class="err">$</span><span class="n">s4</span> <span class="err">=</span> <span class="s1">"MachineID: %s"</span> <span class="n">ascii</span>
          <span class="err">$</span><span class="n">s5</span> <span class="err">=</span> <span class="s1">"GUID: %s"</span> <span class="n">ascii</span>
          <span class="err">$</span><span class="n">s6</span> <span class="err">=</span> <span class="s1">"HWID: %s"</span> <span class="n">ascii</span>

     <span class="n">condition</span><span class="p">:</span>
          <span class="p">(</span><span class="err">$</span><span class="n">mz</span> <span class="n">at</span> <span class="m">0</span><span class="p">)</span> <span class="n">and</span> <span class="p">(</span><span class="n">all</span> <span class="n">of</span> <span class="p">(</span><span class="err">$</span><span class="n">s</span><span class="err">*</span><span class="p">))</span>
<span class="p">}</span>
</code></pre></div></div>

        
      </section>

      <footer class="page__meta">
        
        


  


  
  
  

  <p class="page__taxonomy">
    <strong><i class="fas fa-fw fa-folder-open" aria-hidden="true"></i> Categories: </strong>
    <span itemprop="keywords">
    
      
      
      <a href="/categories/#malware-analysis" class="page__taxonomy-item" rel="tag">Malware Analysis</a>
    
    </span>
  </p>


        
          <p class="page__date"><strong><i class="fas fa-fw fa-calendar-alt" aria-hidden="true"></i> Updated:</strong> <time datetime="2022-02-06T00:00:00+00:00">February 6, 2022</time></p>
        
      </footer>

      

      
  <nav class="pagination">
    
      <a href="#" class="pagination--pager disabled">Previous</a>
    
    
      <a href="/malware%20analysis/asyncRAT/" class="pagination--pager" title="Playing with AsyncRAT
">Next</a>
    
  </nav>

    </div>

    
  </article>

  
  
</div>

    </div>

    
      <div class="search-content">
        <div class="search-content__inner-wrap"><form class="search-content__form" onkeydown="return event.key != 'Enter';">
    <label class="sr-only" for="search">
      Enter your search term...
    </label>
    <input type="search" id="search" class="search-input" tabindex="-1" placeholder="Enter your search term..." />
  </form>
  <div id="results" class="results"></div></div>

      </div>
    

    <div id="footer" class="page__footer">
      <footer>
        <!-- start custom footer snippets -->

<!-- end custom footer snippets -->
        <div class="page__footer-follow">
  <ul class="social-icons">
    
      <li><strong>Follow:</strong></li>
    

    
      
        
      
        
      
        
      
        
      
        
      
        
      
    

    <li><a href="/feed.xml"><i class="fas fa-fw fa-rss-square" aria-hidden="true"></i> Feed</a></li>
  </ul>
</div>

<div class="page__footer-copyright">&copy; 2022 Abdallah Elnoty. Powered by <a href="https://jekyllrb.com" rel="nofollow">Jekyll</a> &amp; <a href="https://mademistakes.com/work/minimal-mistakes-jekyll-theme/" rel="nofollow">Minimal Mistakes</a>.</div>

      </footer>
    </div>

    
  <script src="/assets/js/main.min.js"></script>
  <script src="https://kit.fontawesome.com/4eee35f757.js"></script>




<script src="/assets/js/lunr/lunr.min.js"></script>
<script src="/assets/js/lunr/lunr-store.js"></script>
<script src="/assets/js/lunr/lunr-en.js"></script>







  </body>
</html>
