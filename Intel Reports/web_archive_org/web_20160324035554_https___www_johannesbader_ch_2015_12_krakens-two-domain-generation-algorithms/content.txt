<!DOCTYPE html><html lang="en"><head><script src="//archive.org/includes/athena.js" type="text/javascript"></script>
<script type="text/javascript">window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app224.us.archive.org';v.server_ms=691;archive_analytics.send_pageview({});});</script>
<script type="text/javascript" src="/_static/js/bundle-playback.js?v=HxkREWBo" charset="utf-8"></script>
<script type="text/javascript" src="/_static/js/wombat.js?v=txqj7nKC" charset="utf-8"></script>
<script>window.RufflePlayer=window.RufflePlayer||{};window.RufflePlayer.config={"autoplay":"on","unmuteOverlay":"hidden"};</script>
<script type="text/javascript" src="/_static/js/ruffle/ruffle.js"></script>
<script type="text/javascript">
    __wm.init("https://web.archive.org/web");
  __wm.wombat("http://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/","20160324035554","https://web.archive.org/","web","/_static/",
	      "1458791754");
</script>
<link rel="stylesheet" type="text/css" href="/_static/css/banner-styles.css?v=S1zqJCYt" />
<link rel="stylesheet" type="text/css" href="/_static/css/iconochive.css?v=3PDvdIFv" />
<!-- End Wayback Rewrite JS Include -->
<meta charset="utf-8"/><meta content="width=device-width, initial-scale=1.0" name="viewport"/><title>Kraken's two Domain Generation Algorithms</title><meta content="Johannes Bader's Blog - Reverse Engineering, Crackmes and Malware Analysis" name="description"/><meta content="Johannes Bader" name="author"/><meta content="summary" name="twitter:card"/><meta content="@viql" name="twitter:site"/><meta content="@viql" name="twitter:creator"/><meta content="Kraken's two Domain Generation Algorithms" name="twitter:title"/><meta content="Kraken (also known as Oderoor or Bobax) was once a large, if not the largest, botnet. It was primarily used to send spam messages. Kraken features a Domain Generation Algorithm (DGA) which appeared in July 2007 and was first mentioned in 2008. This makes it one of the first ever widely used DGA. The original DGA of Kraken is time-independent, i.e., a specific sample will at all times generate the same domains. There are various reports on how to determine the domains. Michael Ligh and Greg Sinclair showed how to use instrumented execution with Immunity debugger in their DEFCON 16 talk âMalware RCE: Debuggers and Decryptor Developmentâ (skip..." name="twitter:description"/><meta content="Kraken's two Domain Generation Algorithms" name="og:title"/><meta content="website" name="og:type"/><meta content="https://web.archive.org/web/20160324035554im_/https://johannesbader.ch//2015/12/krakens-two-domain-generation-algorithms/" name="og:url"/><meta content="https://web.archive.org/web/20160324035554im_/https://johannesbader.ch/images/featured/circles3.png" name="twitter:image"/><meta content="https://web.archive.org/web/20160324035554im_/https://johannesbader.ch/images/featured/circles3.png" name="og:image"/><link href="/web/20160324035554cs_/https://www.johannesbader.ch/stylesheets/app_v2.15.css" rel="stylesheet"/></head><body class="x2015 x2015_12 x2015_12_krakens-two-domain-generation-algorithms x2015_12_krakens-two-domain-generation-algorithms_index"><!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script>__wm.rw(0);</script>
<div id="wm-ipp-base" lang="en" style="display:none;direction:ltr;">
<div id="wm-ipp" style="position:fixed;left:0;top:0;right:0;">
<div id="donato" style="position:relative;width:100%;">
  <div id="donato-base">
    <iframe id="donato-if" src="https://archive.org/includes/donate.php?as_page=1&amp;platform=wb&amp;referer=https%3A//web.archive.org/web/20160324035554/https%3A//www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms//"
	    scrolling="no" frameborder="0" style="width:100%; height:100%">
    </iframe>
  </div>
</div><div id="wm-ipp-inside">
  <div id="wm-toolbar" style="position:relative;display:flex;flex-flow:row nowrap;justify-content:space-between;">
    <div id="wm-logo" style="/*width:110px;*/padding-top:12px;">
      <a href="/web/" title="Wayback Machine home page"><img src="/_static/images/toolbar/wayback-toolbar-logo-200.png" srcset="/_static/images/toolbar/wayback-toolbar-logo-100.png, /_static/images/toolbar/wayback-toolbar-logo-150.png 1.5x, /_static/images/toolbar/wayback-toolbar-logo-200.png 2x" alt="Wayback Machine" style="width:100px" border="0" /></a>
    </div>
    <div class="c" style="display:flex;flex-flow:column nowrap;justify-content:space-between;flex:1;">
      <form class="u" style="display:flex;flex-direction:row;flex-wrap:nowrap;" target="_top" method="get" action="/web/submit" name="wmtb" id="wmtb"><input type="text" name="url" id="wmtbURL" value="https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms//" onfocus="this.focus();this.select();" style="flex:1;"/><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20160324035554" /><input type="submit" value="Go" />
      </form>
      <div style="display:flex;flex-flow:row nowrap;align-items:flex-end;">
                <div class="s" id="wm-nav-captures" style="flex:1;">
                    <a class="t" href="/web/20160324035554*/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms//" title="See a list of every capture for this URL">7 captures</a>
          <div class="r" title="Timespan for captures of this URL">16 Jan 2016 - 18 Sep 2024</div>
          </div>
        <div class="k">
          <a href="" id="wm-graph-anchor">
            <div id="wm-ipp-sparkline" title="Explore captures for this URL" style="position: relative">
              <canvas id="wm-sparkline-canvas" width="725" height="27" border="0"></canvas>
            </div>
          </a>
        </div>
      </div>
    </div>
    <div class="n">
      <table>
        <tbody>
          <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
          <tr class="m">
            <td class="b" nowrap="nowrap"><a href="https://web.archive.org/web/20160116135149/http://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/" title="16 Jan 2016"><strong>Jan</strong></a></td>
            <td class="c" id="displayMonthEl" title="You are here: 03:55:54 Mar 24, 2016">MAR</td>
            <td class="f" nowrap="nowrap"><a href="https://web.archive.org/web/20170601215236/http://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/" title="01 Jun 2017"><strong>Jun</strong></a></td>
          </tr>
          <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
          <tr class="d">
            <td class="b" nowrap="nowrap"><a href="https://web.archive.org/web/20160116135149/http://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/" title="13:51:49 Jan 16, 2016"><img src="/_static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a></td>
            <td class="c" id="displayDayEl" style="width:34px;font-size:22px;white-space:nowrap;" title="You are here: 03:55:54 Mar 24, 2016">24</td>
            <td class="f" nowrap="nowrap"><a href="https://web.archive.org/web/20160331233547/http://johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/" title="23:35:47 Mar 31, 2016"><img src="/_static/images/toolbar/wm_tb_nxt_on.png" alt="Next capture" width="14" height="16" border="0" /></a></td>
          </tr>
          <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
          <tr class="y">
            <td class="b" nowrap="nowrap">2015</td>
            <td class="c" id="displayYearEl" title="You are here: 03:55:54 Mar 24, 2016">2016</td>
            <td class="f" nowrap="nowrap"><a href="https://web.archive.org/web/20170601215236/http://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/" title="01 Jun 2017"><strong>2017</strong></a></td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class="r" style="display:flex;flex-flow:column nowrap;align-items:flex-end;justify-content:space-between;">
      <div id="wm-btns" style="text-align:right;height:23px;">
                <span class="xxs">
          <div id="wm-save-snapshot-success">success</div>
          <div id="wm-save-snapshot-fail">fail</div>
          <a id="wm-save-snapshot-open" href="#" title="Share via My Web Archive" >
            <span class="iconochive-web"></span>
          </a>
          <a href="https://archive.org/account/login.php" title="Sign In" id="wm-sign-in">
            <span class="iconochive-person"></span>
          </a>
          <span id="wm-save-snapshot-in-progress" class="iconochive-web"></span>
        </span>
                <a class="xxs" href="http://faq.web.archive.org/" title="Get some help using the Wayback Machine" style="top:-6px;"><span class="iconochive-question" style="color:rgb(87,186,244);font-size:160%;"></span></a>
        <a id="wm-tb-close" href="#close" style="top:-2px;" title="Close the toolbar"><span class="iconochive-remove-circle" style="color:#888888;font-size:240%;"></span></a>
      </div>
      <div id="wm-share" class="xxs">
        <a href="/web/20160324035554/http://web.archive.org/screenshot/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms//"
           id="wm-screenshot"
           title="screenshot">
          <span class="wm-icon-screen-shot"></span>
        </a>
        <a href="#" id="wm-video" title="video">
          <span class="iconochive-movies"></span>
        </a>
        <a id="wm-share-facebook" href="#" data-url="https://web.archive.org/web/20160324035554/http://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/" title="Share on Facebook" style="margin-right:5px;" target="_blank"><span class="iconochive-facebook" style="color:#3b5998;font-size:160%;"></span></a>
        <a id="wm-share-twitter" href="#" data-url="https://web.archive.org/web/20160324035554/http://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/" title="Share on Twitter" style="margin-right:5px;" target="_blank"><span class="iconochive-twitter" style="color:#1dcaff;font-size:160%;"></span></a>
      </div>
      <div style="padding-right:2px;text-align:right;white-space:nowrap;">
        <a id="wm-expand" class="wm-btn wm-closed" href="#expand"><span id="wm-expand-icon" class="iconochive-down-solid"></span> <span class="xxs" style="font-size:80%;">About this capture</span></a>
      </div>
    </div>
  </div>
    <div id="wm-capinfo" style="border-top:1px solid #777;display:none; overflow: hidden">
        <div id="wm-capinfo-notice" source="api"></div>
                <div id="wm-capinfo-collected-by">
    <div style="background-color:#666;color:#fff;font-weight:bold;text-align:center">COLLECTED BY</div>
    <div style="padding:3px;position:relative" id="wm-collected-by-content">
      <div style="display:inline-block;vertical-align:top;width:49%;">
			<span class="c-logo" style="background-image:url(https://archive.org/services/img/wikipediaoutlinks00004)"></span>
		<div>Collection: <a style="color:#33f;" href="https://archive.org/details/wikipediaoutlinks00004" target="_new"><span class="wm-title">Wikipedia Outlinks March 2016</span></a></div>
		<div style="max-height:75px;overflow:hidden;position:relative;">
	  <div style="position:absolute;top:0;left:0;width:100%;height:75px;background:linear-gradient(to bottom,rgba(255,255,255,0) 0%,rgba(255,255,255,0) 90%,rgba(255,255,255,255) 100%);"></div>
	  Crawl of outlinks from wikipedia.org started March, 2016. These files are currently not publicly accessible.

Properties of this collection.
It has been several years since the last time we did this.
For this collection, several things were done:
1. Turned off duplicate detection.   This collection will be complete, as there is a
good chance we will share the data, and sharing data with pointers to random
other collections, is a complex problem.

2. For the first time, did all the different wikis.   The original runs were just against the 
enwiki.   This one, the seed list was built from all 865 collections.
	</div>
	      </div>
    </div>
    </div>
    <div id="wm-capinfo-timestamps">
    <div style="background-color:#666;color:#fff;font-weight:bold;text-align:center" title="Timestamps for the elements of this page">TIMESTAMPS</div>
    <div>
      <div id="wm-capresources" style="margin:0 5px 5px 5px;max-height:250px;overflow-y:scroll !important"></div>
      <div id="wm-capresources-loading" style="text-align:left;margin:0 20px 5px 5px;display:none"><img src="/_static/images/loading.gif" alt="loading" /></div>
    </div>
    </div>
  </div></div></div></div><div id="wm-ipp-print">The Wayback Machine - https://web.archive.org/web/20160324035554/http://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/</div>
<script type="text/javascript">//<![CDATA[
__wm.bt(725,27,25,2,"web","https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms//","20160324035554",1996,"/_static/",["/_static/css/banner-styles.css?v=S1zqJCYt","/_static/css/iconochive.css?v=3PDvdIFv"], false);
  __wm.rw(1);
//]]></script>
<!-- END WAYBACK TOOLBAR INSERT -->
 <header><div class="row"><div class="columns"><nav class="top-bar hide-for-small" data-topbar="" role="navigation"><ul class="title-area"><li class="name"></li><li class="toggle-topbar menu-icon"><a href="#"><span>Nav</span></a></li></ul><section class="top-bar-section"><ul class="left show-for-large-up"><li><a href="https://web.archive.org/web/20160324035554/http://www.twitter.com/viql"><i class="fa fa-twitter"></i></a></li><li><a href="https://web.archive.org/web/20160324035554/http://www.github.com/baderj"><i class="fa fa-github-alt"></i></a></li><li><a href="https://web.archive.org/web/20160324035554/https://www.linkedin.com/in/johannesbader"><i class="fa fa-linkedin"></i></a></li><li><a href="https://web.archive.org/web/20160324035554/https://www.flickr.com/photos/viql"><i class="fa fa-flickr"></i></a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/cdn-cgi/l/email-protection#7a181b1e1f08103a1d170254141f0e"><i class="fa fa-envelope-o"></i></a></li><li><a href="https://web.archive.org/web/20160324035554/http://pgp.mit.edu/pks/lookup?op=get&amp;search=0xAC3C4431B7A741E6"><i class="fa fa-key"></i></a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/feed.xml"><i class="fa fa-rss"></i></a></li></ul><ul class="right"><li class="active"><a href="/web/20160324035554/https://www.johannesbader.ch/">Blog </a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/publications/">Publications</a></li><li class="has-dropdown"><a href="#">Projects <i class="fa fa-angle-down"></i></a><ul class="dropdown"><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/risk-battle-outcomes/">Probability of Winning Battles in Risk</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/taketvviewers/">TakeTV Viewers</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/tag/project-euler/">Project Euler</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/phd-thesis/">PhD Thesis</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/upcol.php">Upatre Collection</a></li></ul></li><li class="has-dropdown"><a href="#">Reverse Engineering<i class="fa fa-angle-down"></i></a><ul class="dropdown"><li><a href="/web/20160324035554/https://www.johannesbader.ch/tag/malware-analysis/">Malware Analysis</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/solutions-to-crackmes/">Solutions to Crackmes</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/solutions-to-practical-reverse-engineering/">Solutions to "Practical Reverse Engineering"</a></li></ul></li></ul></section></nav></div></div></header><div class="off-canvas-wrap" data-offcanvas=""><div class="inner-wrap"><a class="left-off-canvas-toggle menu-icon small-hamburger show-for-small-only" href="#"><i class="fa fa-bars"></i></a><aside class="left-off-canvas-menu show-for-small-only"><div class="off-canvas-padding"><a href="/web/20160324035554/https://www.johannesbader.ch/"><h1>Blog </h1></a><a href="/web/20160324035554/https://www.johannesbader.ch/publications/"><h1>Publications</h1></a><h1>Projects </h1><ul><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/risk-battle-outcomes/">Probability of Winning Battles in Risk</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/taketvviewers/">TakeTV Viewers</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/tag/project-euler/">Project Euler</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/phd-thesis/">PhD Thesis</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/upcol.php">Upatre Collection</a></li></ul><h1>Reverse Engineering</h1><ul><li><a href="/web/20160324035554/https://www.johannesbader.ch/tag/malware-analysis/">Malware Analysis</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/solutions-to-crackmes/">Solutions to Crackmes</a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/projects/solutions-to-practical-reverse-engineering/">Solutions to "Practical Reverse Engineering"</a></li></ul><ul class="social"><li><a href="https://web.archive.org/web/20160324035554/http://www.twitter.com/viql"><i class="fa fa-twitter"></i></a></li><li><a href="https://web.archive.org/web/20160324035554/http://www.github.com/baderj"><i class="fa fa-github-alt"></i></a></li><li><a href="https://web.archive.org/web/20160324035554/https://www.linkedin.com/in/johannesbader"><i class="fa fa-linkedin"></i></a></li><li><a href="https://web.archive.org/web/20160324035554/https://www.flickr.com/photos/viql"><i class="fa fa-flickr"></i></a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/cdn-cgi/l/email-protection#d4b6b5b0b1a6be94b3b9acfabab1a0"><i class="fa fa-envelope-o"></i></a></li><li><a href="https://web.archive.org/web/20160324035554/http://pgp.mit.edu/pks/lookup?op=get&amp;search=0xAC3C4431B7A741E6"><i class="fa fa-key"></i></a></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/feed.xml"><i class="fa fa-rss"></i></a></li></ul></div></aside><script type="text/x-mathjax-config">  MathJax.Hub.Config({
      tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          displayMath: [ ['$$', '$$'], ["\\[", "\\]"] ],
          processEscapes: true
      },
      "HTML-CSS": { preferredFont: "TeX", webFont: "TeX", scale: "100"  }
  });</script><script src="https://web.archive.org/web/20160324035554js_/http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script><article><div class="fullwidthheader"><img style="background-image:url('/web/20160324035554im_/https://www.johannesbader.ch/images/featured/circles3.png')"/></div><div class="row"><div class="columns"><div class="row collapse"><div class="small-12 medium-12 large-offset-3 large-9 columns titlebox"><div class="pad-large"><h1 class="post-title">Kraken's two Domain Generation Algorithms<span class="subtitle">A side by side comparison of the DGAs</span></h1></div></div></div><div class="row collapse"><div class="small-12 medium-12 large-3 columns sidebar"><div class="sidebar-box"><div class="metadata"><span class="category"><i class="fa fa-book"></i><a href="/web/20160324035554/https://www.johannesbader.ch/category/reverse-engineering/">reverse engineering</a></span><span class="date"><i class="fa fa-calendar"></i><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/">dec </a><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/22/">22, </a><a href="/web/20160324035554/https://www.johannesbader.ch/2015/">2015</a></span><span class="tags_side"><i class="fa fa-tags"></i><a href="/web/20160324035554/https://www.johannesbader.ch/tag/dga/">dga</a>, <a href="/web/20160324035554/https://www.johannesbader.ch/tag/malware-analysis/">malware analysis</a></span><span class="comments"><i class="fa fa-comments-o"></i><a href="#disqus_thread">no comments</a></span></div></div><div class="sidebar-box"><div class="toc"><h4>Contents</h4> <ul class="toc lvl1"> <li><a href="#reverse-engineering">Reverse Engineering</a> <ul class="toc lvl2"> <li><a href="#pseudo-random-number-generator">Pseudo Random Number Generator</a> </li> <li><a href="#seeding">Seeding</a> </li> <li><a href="#discarding-only-version-2">Discarding (only version 2)</a> </li> <li><a href="#length-of-random-domain">Length of Random Domain</a> </li> <li><a href="#building-the-random-domain">Building the Random Domain</a> </li> <li><a href="#base-domain">Base Domain</a> </li> <li><a href="#domain-counter">Domain Counter</a> </li> </ul> </li> <li><a href="#algorithm-and-samples">Algorithm and Samples</a> <ul class="toc lvl2"> <li><a href="#python-implementations">Python Implementations</a> </li> <li><a href="#properties-of-the-dga">Properties of the DGA</a> </li> <li><a href="#samples">Samples</a> </li> </ul> </li> </ul> </div></div><div class="sidebar-box show-for-large-up hide-for-print"><h4>DGArchive</h4>The DGA in this blog post has been implemented by the <a href="https://web.archive.org/web/20160324035554/https://dgarchive.caad.fkie.fraunhofer.de/">DGArchive</a>&nbsp; project.<script>
//<![CDATA[
    var disqus_shortname = 'blogofjohannesbader';
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
//]]>
</script> </div></div><div class="small-12 medium-12 large-9 columns main"><div class="pad-large"><div class="content"><p>Kraken (also known as <em>Oderoor</em> or <em>Bobax</em>) was once a large, if not the largest, botnet. It was primarily used to send spam messages. Kraken features a Domain Generation Algorithm (DGA) which appeared in July 2007 and was <a href="https://web.archive.org/web/20160324035554/https://www.damballa.com/downloads/r_pubs/KrakenWhitepaper.pdf">first mentioned in 2008</a>. This makes it <a href="https://web.archive.org/web/20160324035554/https://www.botconf.eu/wp-content/uploads/2015/12/OK-P06-Plohmann-DGArchive.pdf">one of the first ever widely used DGA</a>.</p> <p>The original DGA of Kraken is time-independent, i.e., a specific sample will at all times generate the same domains. There are various reports on how to determine the domains. Michael Ligh and Greg Sinclair showed how to use instrumented execution with Immunity debugger in their DEFCON 16 talk <a href="https://web.archive.org/web/20160324035554/https://www.youtube.com/watch?v=OZzu4JLPoUs"><em>âMalware RCE: Debuggers and Decryptor Developmentâ</em></a> (skip to 18:24). The same method is also described in <a href="https://web.archive.org/web/20160324035554/http://www.amazon.com/Malware-Analysts-Cookbook-DVD-Techniques/dp/0470613033/"><em>The Malware Analystâs Cookbook</em></a>, recipe 12-11 on page 476. <a href="https://web.archive.org/web/20160324035554/https://www.damballa.com/downloads/r_pubs/KrakenWhitepaper.pdf">This report</a> by Damballa lists the domains for one parameterization of the DGA.</p> <p>Much later â the first samples on Malwr are from 2003 â Krakenâs DGA changed. Probably recognizing the problem with generating the ever same domains, the authors added a time dependent input to the DGA. They also deviated from dynamic DNS providers and used four regular top level domains instead. A few samples, maybe from the transitional stage, still rely on the DDNS providers even with the new algorithm. Kraken infections with newer DGAs <a href="https://web.archive.org/web/20160324035554/http://www.virusradar.com/en/Win32_Oderoor/detail">peaked in July 2014</a> (also see the list of samples in Section <a href="#samples"><em>Samples</em></a>).</p> <p>The later version of Krakenâs DGA is much less reported on. <a href="https://web.archive.org/web/20160324035554/http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/bkdr_oderoor.ogj">Here</a> is a analysis of the malware with the new domains. But neither the domains nor the domain generating algorithm are shown. For me, good enough grounds to look at both DGA in this short blog post. Iâm aware that the DGA is irrelevant today, as Kraken is currently dead or inactive, but hopefully the post might still be interesting for the keen DGA historian.</p> <h1 id="reverse-engineering">Reverse Engineering</h1> <p>This section shows some reverse engineering insights of the DGA. Skip to <a href="#python-implementations">Python Implementations</a> to see reimplementations of the two algorithms.</p> <p>Both the old and new version of the DGA have parameters that can change from sample to sample and cause disjoint sets of domains. I therefore looked at multiple samples to identify the variable parts of the DGA. For the old DGA I reversed two samples:</p> <table> <tbody> <tr> <td>source</td> <td><a href="https://web.archive.org/web/20160324035554/https://virusshare.com/download.4n6?sample=5f004bd36715225c22ddb27d109a2b5f1c5215a6ce2df2e111c5fb49bc7161f9">virusshare</a></td> </tr> <tr> <td>uploaded</td> <td>2012-09-04 03:44</td> </tr> <tr> <td>SHA-256</td> <td>5f004bd36715225c22ddb27d109a2b5f1c5215a6ce2df2e111c5fb49bc7161f9</td> </tr> <tr> <td>MD5</td> <td>10fd78f9681d66d2dd39816b5f7f6ea6</td> </tr> </tbody> </table> <table> <tbody> <tr> <td>source</td> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YWNjMjc3MDMxMTI0NGY5OWI1MzMzNDk1OGJkOGU3ZWY/">malwr</a></td> </tr> <tr> <td>uploaded</td> <td>2014-12-08 15:04</td> </tr> <tr> <td>SHA-256</td> <td>4606a621922b28be1ff7f4621713aaafd988b8c5f1153720200c5e6dad0c5416</td> </tr> <tr> <td>MD5</td> <td>60838eeb3f8cd311de0faef80909632d</td> </tr> </tbody> </table> <p>As far as the new version goes, I looked at these samples:</p> <table> <tbody> <tr> <td>source</td> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/OTc5MDI4M2JiYzYxNGFjNWI0N2ZmN2Q0NjUwNWEyMTI/">malwr</a></td> </tr> <tr> <td>uploaded</td> <td>2013-08-05 04:16</td> </tr> <tr> <td>SHA-256</td> <td>0fed48972c9b5c7fc6735db2b8764c45c95d45bde3764933b4a4909656c1ed47</td> </tr> <tr> <td>MD5</td> <td>f2ae73d866bb4edd14ee96cf74fbb423</td> </tr> </tbody> </table> <table> <tbody> <tr> <td>source</td> <td><a href="https://web.archive.org/web/20160324035554/https://virusshare.com/download.4n6?sample=e83bc2ec7975885424668171c2e106f7982bd409e01ce6281fb0e6e722e98810">virusshare</a></td> </tr> <tr> <td>uploaded</td> <td>2012-04-12</td> </tr> <tr> <td>SHA-256</td> <td>e83bc2ec7975885424668171c2e106f7982bd409e01ce6281fb0e6e722e98810</td> </tr> <tr> <td>MD5</td> <td>04966960f3f5ed32ae479079a1bcf6e9</td> </tr> </tbody> </table> <p>All listed offsets are from the first sample respectively.</p> <h2 id="pseudo-random-number-generator">Pseudo Random Number Generator</h2> <p>Both Krakenâs DGA use a linear congruential generator (LCG) as pseudo random number generator (PRNG). The parameters are the same found in many <code>rand()</code> implementations:</p> <script type="math/tex; mode=display">r_{n+1} = 1103515245 \cdot r_{n} + 12435 \mod 2^{31}</script> <p>The bits 23 to 8 are used, i.e., <em>r/256</em> mod 32768.</p> <h2 id="seeding">Seeding</h2> <p>The DGA of both versions first initializes the pseudo random number generator (PRNG). Two values are used to determine the seed of the PRNG:</p> <ol> <li>A running counter that starts at 0 and increases in steps of one (version 1) and one or two (version 2). In version 2 the increment depends on the outcome of the DNS response for the domain. The details of the counter are discussed in Section <a href="#domain-counter"><em>Domain Counter</em></a>.</li> <li>Whether or not a list of hardcoded IPs could be contacted. These network connections are performed by <code>hardcoded_success</code> at offsets <code>001BE832</code> and <code>0x408D6C</code> respectively in the following images. The routine returns <code>True</code> if the attempts were successful.</li> </ol> <p>The following graph views are from the beginning of both DGAs. Both snippets initialize the random number â <code>ecx</code> in version 1 and <code>ebx</code> in version 2 â depending on the counter value and success of contact to hardcoded IPs. On left-hand side is the old version of the DGA, on the right-hand side the newer release (click to enlarge the images).</p> <table> <tbody> <tr> <td><strong>version 1</strong></td> <td><strong>version 2</strong></td> </tr> <tr> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_step1.png"><img alt="DGA v1 step 1" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_step1_small.png"/></a></td> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step1.png"><img alt="DGA v2 step 1" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step1_small.png"/></a></td> </tr> </tbody> </table> <p>The hardcoded values -265273224 and 143803713 on the left, as well as -1FCFBF87h and 7924542h on the right might change from sample to sample. These parameters can be used to generate different sets of domains.</p> <p>For the first version of the DGA, the snippet above boils down to the following, rather elaborate, formula:</p> <script type="math/tex; mode=display">% <![CDATA[
\begin{align}
d &= \left\lfloor{ \frac{\text{counter}}{2} } \right\rfloor  + 1000015 \\
r &= \begin{cases}
d \cdot (d + 7) \cdot (d + 12) / 9 + d \cdot (d + 1) + c_{s} &\mbox{if success with hardcoded IPs} \\
d \cdot (d + 2) \cdot (d + 7) / 9 + d \cdot (3 d + 1) + c_{f} & \mbox{otherwise} \end{cases} 
\end{align} %]]></script> <p>I found two different parameter sets. Notice that the changes are very subtle, only the first and last nibble vary:</p> <table> <thead> <tr> <th>version 1</th> <th>c<sub>s</sub></th> <th>c<sub>f</sub></th> </tr> </thead> <tbody> <tr> <td>Seed <em>a</em></td> <td>-0x0FCFBF88</td> <td>0x8924541</td> </tr> <tr> <td>Seed <em>b</em></td> <td>-0x1FCFBF87</td> <td>0x7924542</td> </tr> </tbody> </table> <p>The second version uses a much simpler formula to initialize the random number:</p> <script type="math/tex; mode=display">% <![CDATA[
\begin{align}
d &= \left\lfloor{ \frac{\text{counter}}{2} } \right\rfloor  \\
r &= 3 d + \begin{cases}c_{s} &\mbox{if success with hardcoded IPs} \\ c_{f} & \mbox{otherwise} \end{cases} 
\end{align} %]]></script> <p>Again I found two parameter sets:</p> <table> <thead> <tr> <th>version 2</th> <th>c<sub>s</sub></th> <th>c<sub>f</sub></th> </tr> </thead> <tbody> <tr> <td>Seed <em>a</em></td> <td>24938314</td> <td>24938315</td> </tr> <tr> <td>Seed <em>b</em></td> <td>1600000</td> <td>1600001</td> </tr> </tbody> </table> <p>Notice that in both versions the <em>counter</em> input to the DGA is first divided by two. The <em>Malware Analystâs Cookbook</em> (page 480) considers this as a flaw of the DGA:</p> <blockquote> <p>There are two weaknesses in Krakenâs DGA that are worth mentioning: (â¦) Odd numbers cause Krakenâs algorithm to generate the same domain names as the even numbers that precede them. This effectively cuts the number of possible domains generated by the DGA in half.</p> </blockquote> <p>Section <a href="#domain-counter"><em>Domain Counter</em></a> explains why I think this is by design and not a flaw of the DGA.</p> <h2 id="discarding-only-version-2">Discarding (only version 2)</h2> <p>Next follows code that is only present in the new version of Krakenâs DGA. The code incorporates a timestamp, which is determined by making an HTTP request to a randomly picked, legitimate website. The date is extracted from the http date header of the response and converted to unix timestamp format. For the analysed samples, the domains used to determine the time are: <em>yahoo.com</em>, <em>google.com</em>, <em>live.com</em>, <em>msn.com</em>, <em>aol.com</em>, <em>amazon.com</em>, <em>go.com</em>, <em>bbc.co.uk</em>, <em>cnn.com</em>, <em>news.com</em>, <em>download.com</em>, <em>weather.com</em>, <em>comcast.net</em>, <em>mozilla.com</em> and <em>hp.com</em>. The timestamp sets the variable <em>discards</em>:</p> <table> <tbody> <tr> <td><strong>version 1</strong></td> <td><strong>version 2</strong></td> </tr> <tr> <td><em>not present</em></td> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step2.png"><img alt="Discards" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step2_small.png"/></a></td> </tr> </tbody> </table> <p>The divisor is the number of seconds in a week, so only every 7 days the value <em>discard</em> changes.</p> <script type="math/tex; mode=display">\text{discards} = \left\lfloor \frac{\text{timestamp}_{\text{unix}} - 1207000000}{24\cdot 7\cdot 3600} \right\rfloor + 2</script> <p>The <em>discard</em> value, along with the current domain number, determines how many of the PRNG cycles are discarded:</p> <table> <tbody> <tr> <td><strong>version 1</strong></td> <td><strong>version 2</strong></td> </tr> <tr> <td><em>not present</em></td> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step3.png"><img alt="Discards" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step3_small.png"/></a></td> </tr> </tbody> </table> <p>In Pseudocode this is:</p> <pre><code>discards = timestamp / 604800 + 2
IF domain_nr % 9 &lt; 8
    IF domain_nr % 9 &gt;= 6
        discards -= 1
    REPEAT discards TIMES
        r = rand(r)/256 % 32768
</code></pre> <p>Notice that for every ninth domain discarding is skipped. Since the discards are the only time-dependent part of the DGA, those domains are invariants and prime targets for sinkholing.</p> <h2 id="length-of-random-domain">Length of Random Domain</h2> <p>After the PRNG is initialized, the length of the random part of the domain is randomly picked. The two versions use almost the same algorithm:</p> <table> <tbody> <tr> <td><strong>version 1</strong></td> <td><strong>version 2</strong></td> <td>Â </td> </tr> <tr> <td><a href="2015-12-22-krakens-two-domain-generation-algorithms/dga1_step4.png"><img alt="Length of Domain, version 1" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_step4_small.png"/></a></td> <td>Â </td> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step4.png"><img alt="Length of Domain, version 2" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step4_small.png"/></a></td> </tr> </tbody> </table> <p>Both versions first generate three random numbers (<em>r<sub>i</sub></em> is the random number after initialization and, for the second version, discarding):</p> <script type="math/tex; mode=display">% <![CDATA[
\begin{align}
r_{i+1} &= 1103515245 \cdot r_i + 12435 \mod 2^{31} \\
r_{i+2} &= 1103515245 \cdot r_{i+1} + 12435 \mod 2^{31} \\
r_{i+3} &= 1103515245 \cdot r_{i+2} + 12435 \mod 2^{31} \\
\end{align} %]]></script> <p>The first version uses the three random values to set the length as follows:</p> <script type="math/tex; mode=display">d_{length}^{(v1)} =  \left\lfloor \frac{r_{i+1}}{256} \mod 32768 \right\rfloor \left\lfloor \frac{r_{i+2}}{256} \mod 32768 \right\rfloor - \left\lfloor \frac{r_{i+3}}{256} \mod 32768 \right\rfloor \mod 6 + 6</script> <p>The second version works almost the same, apart from (a) the third random number being added rather than subtracted and (b) the minimum length bein 7 instead of 6:</p> <script type="math/tex; mode=display">d_{length}^{(v2)} = \left\lfloor \frac{r_{i+1}}{256} \mod 32768 \right\rfloor \left\lfloor \frac{r_{i+2}}{256} \mod 32768 \right\rfloor + \left\lfloor \frac{r_{i+3}}{256} \mod 32768 \right\rfloor \mod 6 + 7</script> <p>This gives lengths between 6 and 11 characters for the first version, and 7 and 12 characters for the second version.</p> <h2 id="building-the-random-domain">Building the Random Domain</h2> <p>Kraken uses straightforward calls to the random number generator to determine the characters of the random domain. All characters a-z are about equally likely picked. Both version use the exact same algorithm:</p> <table> <tbody> <tr> <td><strong>version 1</strong></td> <td><strong>version 2</strong></td> <td>Â </td> </tr> <tr> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_step5.png"><img alt="Domain characters, version 1" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_step5_small.png"/></a></td> <td>Â </td> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step5.png"><img alt="Domain characters, version 2" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step5_small.png"/></a></td> </tr> </tbody> </table> <p>In Pseudocode this is:</p> <pre><code>domain = ""
REPEAT domain_length TIMES
    r = rand(r)
    domain += (r/256 % 32768) % 26 + 'a'
</code></pre> <h2 id="base-domain">Base Domain</h2> <p>The final step of the domain generation algorithm is to append the base domain. For the first version, these base domains are four dynamic DNS providers. A few of the samples with the second DGA version use the same DDNS providers, for the most part the base domains are regular top level domains though. Domains are picked one after another from a hard-coded list:</p> <table> <tbody> <tr> <td><strong>version 1</strong></td> <td><strong>version 2</strong></td> </tr> <tr> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_step6.png"><img alt="Base Domain, version 1" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_step6_small.png"/></a></td> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step6.png"><img alt="Base domain, version 2" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_step6_small.png"/></a></td> </tr> </tbody> </table> <p>The base domains are:</p> <table> <tbody> <tr> <td>version 1, some version 2 samples</td> <td>âdyndns.orgâ â âyi.orgâ â âdynserv.comâ â âmooo.comâ</td> <td>Free DDNS Providers</td> </tr> <tr> <td>version 2</td> <td>âcomâ â ânetâ â âtvâ â âccâ</td> <td>Top Level Domains</td> </tr> </tbody> </table> <h2 id="domain-counter">Domain Counter</h2> <p>As seen above, both DGA take a running counter as input. The counter starts at zero. Instead of an upper bound, the counter is reset after 30 minutes of trying to contact the C&amp;C servers. There is some wait time between contacting domains which I did not examine; the expected number of generated domains is therefore unknown to me.</p> <table> <tbody> <tr> <td><strong>version 1</strong></td> <td><strong>version 2</strong></td> </tr> <tr> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_counter_reset.png"><img alt="Counter reset, version 1" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_counter_reset_small.png"/></a></td> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_counter_reset.png"><img alt="Counter reset, version 2" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_counter_reset_small.png"/></a></td> </tr> </tbody> </table> <p>The old DGA always increments the index by one, regardless of the call-home attempt for the generated domains. For version 2 things are a little more complicated; the DGA can increment the counter by one or two:</p> <table> <tbody> <tr> <td><strong>version 1</strong></td> <td><strong>version 2</strong></td> </tr> <tr> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_increment.png"><img alt="Counter increment, version 1" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga1_increment_small.png"/></a></td> <td><a href="/web/20160324035554/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_increment.png"><img alt="Counter increment, version 2" src="/web/20160324035554im_/https://www.johannesbader.ch/2015/12/krakens-two-domain-generation-algorithms/dga2_increment_small.png"/></a></td> </tr> </tbody> </table> <p>The counter in version 2 is incremented depending on the DNS response to the generated domain. The IP is compared to various hard-coded domains. For example:</p> <pre><code>0040AFB9 cmp     eax, 127           ; eax first tuple of IP
0040AFBC jz      short private_ip                
0040AFBE
0040AFBE loc_40AFBE:                             
0040AFBE cmp     eax, 192
0040AFC3 jnz     short loc_40AFCD
0040AFC5 cmp     ecx, 168
0040AFCB jz      short private_ip                
0040AFCD
0040AFCD loc_40AFCD:                             
0040AFCD cmp     eax, 172
0040AFD2 jnz     short loc_40AFDE
0040AFD4 cmp     ecx, 16           ; ecx second tuple of IP
0040AFD7 jl      short loc_40AFEB
0040AFD9 cmp     ecx, 31
0040AFDC jle     short private_ip                
...
</code></pre> <p>All IPs from the following list are treated specially (I do not know why 66.116.125.150 and 72.51.27.51 get special treatments, maybe those were sinkholes in the past).</p> <table> <thead> <tr> <th>range</th> <th>comment</th> </tr> </thead> <tbody> <tr> <td>127.x.x.x</td> <td>reserved range</td> </tr> <tr> <td>192.168.x.x</td> <td>reserved range</td> </tr> <tr> <td>172.16.0.0 - 172.31.255.255</td> <td>reserved range</td> </tr> <tr> <td>0.x.x.x</td> <td>includes failed queries</td> </tr> <tr> <td>1.1.1.1, 2.2.2.2, â¦ , 255.255.255.255</td> <td>unlikely answers? Sandbox detection?</td> </tr> <tr> <td>66.116.125.150</td> <td>IP in US</td> </tr> <tr> <td>72.51.27.51</td> <td>IP in Canada</td> </tr> </tbody> </table> <p>If the IP matches with one of above the subnets, the counter grows to the next multiple of two, i.e., even counters are increased by two, and odd counters are increased one.</p> <p>Since inside the DGA routine, odd counters are rounded down to the same number as their previous (even) counters, every domain that returned an IP that was not in a âblacklistedâ range will be checked <em>twice</em>. I, for one, donât think thatâs a flaw of the DGA, but a â overly complicated â way to recheck domains.</p> <h1 id="algorithm-and-samples">Algorithm and Samples</h1> <h2 id="python-implementations">Python Implementations</h2> <h3 id="version-1">Version 1</h3> <p>The following Python Code generates 1000 domains for a provided seed (either <code>a</code> or <code>b</code>). The code alternately generates domains for when the hardcoded IP callback failed and succeeded.</p> <pre><code>import time
from ctypes import c_int, c_uint
import argparse

def rand(r):
    t =  c_int(1103515245 * r + 12435).value
    return t

def crop(r):
    return (r // 256)  % 32768 

def dga(index, seed_set, temp_file=True):

    seeds = {'a': {'ex': -0x0FCFBF88, 'nex': 0x8924541}, 
            'b': {'ex': -0x1FCFBF87, 'nex': 0x7924542}}

    tlds = ["dyndns.org", "yi.org", "dynserv.com", "mooo.com"]
    domain_nr = int(index/2) + 1000015

    if temp_file:
        x = int(c_int(domain_nr*(domain_nr + 7)*(domain_nr+12)).value /9.0) 
        y = domain_nr*(domain_nr+1)
        r = c_int(x + y + seeds[seed_set]['ex']).value 
    else:
        x = int(c_int((domain_nr + 2)*(domain_nr + 7)*domain_nr).value/9.0)
        y = (domain_nr*3 + 1)*domain_nr
        r = c_int(x + y + seeds[seed_set]['nex']).value

    rands = 3*[0]
    for i in range(3):
        r = rand(r)
        rands[i] = crop(r)
    domain_length = (rands[0]*rands[1] - rands[2]) % 6 + 6
    domain = ""
    for i in range(domain_length):
        r = rand(r)
        ch = crop(r) % 26 + ord('a')
        domain += chr(ch)
    domain += "." + tlds[domain_nr % 4]
    return domain

def get_domains(nr, seed_set):
    domains = []
    for i in range(nr):
        for temp_file in range(2):
            domains.append(dga(i*2, seed_set, temp_file))
    return domains

if __name__=="__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-s', '--seed', choices=['a','b'], default='a')
    args = parser.parse_args()
    for domain in get_domains(1000, args.seed):
        print(domain)
</code></pre> <p>For example:</p> <pre><code>$ python dga_v1.py -s b
hmhxnupkc.mooo.com
quowesuqbbb.mooo.com
rffcteo.dyndns.org
adrcgmzrm.dyndns.org
bdubefoeug.yi.org
bpdyttrlp.yi.org
hovdworcxd.dynserv.com
dljemwae.dynserv.com
nlnylxvrbel.mooo.com
dcdkfq.mooo.com
gyuzohut.dyndns.org
lfiavsbyntu.dyndns.org
waxmtzkqblh.yi.org
zvfctvkdng.yi.org
hshfmrobfjr.dynserv.com
uaqjtycx.dynserv.com
prifhjstv.mooo.com
csukibyyt.mooo.com
ghcxncadnj.dyndns.org
iskqszufrft.dyndns.org
</code></pre> <p>These are also the domains from <em>The Malware Analystâs Cookbook</em>.</p> <h3 id="version-2">Version 2</h3> <p>The second DGA also takes the current date and top level set</p> <pre><code>import time
import argparse
from datetime import datetime

def rand(r):
    t =  (1103515245 * r + 12435) &amp; 0xFFFFFFFF
    return t

def crop(r):
    return (r // 256)  % 32768 

def dga(index, date, seed_set, temp_file=True, tld_set_nr=1):
    tld_sets = {1: ["com", "net", "tv", "cc"],
                2: ["dyndns.org", "yi.org", "dynserv.com", "mooo.com"]}

    seeds = {'a': {'ex': 24938314 , 'nex': 24938315 }, 
            'b': {'ex': 1600000, 'nex': 1600001}}
    tlds = tld_sets[tld_set_nr] 

    domain_nr = int(index/2)
    if temp_file:
        r = 3*domain_nr + seeds[seed_set]['ex']
    else:
        r = 3*domain_nr + seeds[seed_set]['nex']


    discards = (int(time.mktime(date.timetuple())) - 1207000000) // 604800  + 2
    if domain_nr % 9 &lt; 8:
        if domain_nr % 9 &gt;= 6:
            discards -= 1
        for _ in range(discards):
            r = crop(rand(r))

    rands = 3*[0]
    for i in range(3):
        r = rand(r)
        rands[i] = crop(r)
    domain_length = (rands[0]*rands[1] + rands[2]) % 6 + 7
    domain = ""
    for i in range(domain_length):
        r = rand(r)
        ch = crop(r) % 26 + ord('a')
        domain += chr(ch)
    domain += "." + tlds[domain_nr % 4]
    return domain

def get_domains(nr, date, seed, tld_set):
    domains = []
    for i in range(nr):
        for temp_file in range(2):
            domains.append(dga(i*2, date, seed, temp_file, tld_set))
    return domains

if __name__=="__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-d", "--date", 
            help="date for which to generate domains")
    parser.add_argument("-t", "--tld", choices=[1,2], type=int,
            help="tld set", default=1)
    parser.add_argument('-s', '--seed', choices=['a','b'], default='a')
    args = parser.parse_args()
    if args.date:
        d = datetime.strptime(args.date, "%Y-%m-%d")
    else:
        d = datetime.now()
    for domain in get_domains(1000, d, args.seed, args.tld):
        print(domain)
</code></pre> <p>For example:</p> <pre><code>$ python dga_v2.py -d 2013-12-12 -t 1 -s a
gwbgmsmhgsp.com
bizyssylscs.com
egbmbdey.net
ogoqxbevdeqm.net
iuhqhbmq.tv
iuhqhbmq.tv
wedlgyvplmt.cc
zoipmnwr.cc
gktdtghza.com
toogdpdiekwh.com
iuhqhbmq.net
oxfjukumll.net
vwmlcid.tv
glmvhcm.tv
pgmryukdb.cc
egbmbdey.cc
vsdvzwt.com
wixcaiktigew.com
xewokii.net
lvctmusxcyz.net
</code></pre> <p>You also find the code on my <a href="https://web.archive.org/web/20160324035554/https://github.com/baderj/domain_generation_algorithms/tree/master/kraken">GitHub page</a>.</p> <h2 id="properties-of-the-dga">Properties of the DGA</h2> <p>The properties of the two DGAs are:</p> <table> <thead> <tr> <th>Â </th> <th>version 1</th> <th>version 2</th> </tr> </thead> <tbody> <tr> <td>time dependent</td> <td>no</td> <td>yes</td> </tr> <tr> <td>granularity</td> <td>-</td> <td>1 week</td> </tr> <tr> <td>domains per seed and day</td> <td>variable, as many as can be generated in 30 minutes</td> <td>see version 1</td> </tr> <tr> <td>sequence</td> <td>sequential</td> <td>see version 1</td> </tr> <tr> <td>wait time between domains</td> <td>unknown</td> <td>see version 1</td> </tr> <tr> <td>top level domains</td> <td>.dyndns.org, yi.org, dynserv.com, mooo.com</td> <td>some as version 1, but mostly com, .net, .tv, .cc</td> </tr> <tr> <td>second level characters</td> <td>lower case a-z</td> <td>see version 1</td> </tr> <tr> <td>second level domain length</td> <td>6 to 11</td> <td>7 to 12</td> </tr> </tbody> </table> <h2 id="samples">Samples</h2> <p>The following table shows reports on malwr.com that contact at least one domain generated by the second version of Krakenâs DGA. Many samples seem to be downloader, e.g., Vobfus, and the domains are actually generated by the Kraken payload.</p> <table> <thead> <tr> <th>md5</th> <th>analysis date</th> <th>tlds</th> <th>Microsoft</th> <th>Kaspersky</th> <th>Sophos</th> </tr> </thead> <tbody> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MjQwN2UxZDg2NTYxNDMzMWJhZDc3NDcyZWY3MGFiMWQ/">04966960f3f5ed32ae479079a1bcf6e9</a></td> <td>16 Jul. 2013</td> <td>1<sup>A</sup></td> <td><sup>1</sup>Oderoor.gen!C</td> <td>Email-Worm.Win32.Agent.fe</td> <td><sup>2</sup>EncPk-DJ</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/OTc5MDI4M2JiYzYxNGFjNWI0N2ZmN2Q0NjUwNWEyMTI/">f2ae73d866bb4edd14ee96cf74fbb423</a></td> <td>05 Aug. 2013</td> <td>1<sup>A</sup></td> <td>Clean</td> <td><sup>3</sup>Generic</td> <td><sup>1</sup>Generic-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/OWNiMWI1YTFhMmU0NDRkMDgyN2Q5NmEyODliOGJkNTI/">c13abb6be8a1c7fc9b18c8fd0a9488b7</a></td> <td>09 Oct. 2013</td> <td>1<sup>A</sup></td> <td><sup>4</sup>Rimecud.A</td> <td><sup>2</sup>Generic</td> <td><sup>5</sup>Rimecud-DD</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YWVkYzhlNWE5NzgxNDk1MThkNWZkMzQ1MTMzNDg3ZTM/">c13abb6be8a1c7fc9b18c8fd0a9488b7</a></td> <td>10 Oct. 2013<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>3</sup>Rimecud.A</td> <td><sup>2</sup>Generic</td> <td><sup>4</sup>Rimecud-DD</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NTgwYzBjOTYzN2UwNGFhM2EyNzU4Y2NlNWFhNjA1MWQ/">1ec55311a564f8272d62ccb621a8b513</a></td> <td>22 Oct. 2013</td> <td>1<sup>A</sup></td> <td><sup>3</sup>Sisron</td> <td><sup>6</sup>Agent.hdqc</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YTVlMjliMGYzODY0NDk0YjlhOTkwYmIzNmVmYTZiMDg/">1ec55311a564f8272d62ccb621a8b513</a></td> <td>28 Nov. 2013<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>3</sup>Sisron</td> <td><sup>5</sup>Agent.hdqc</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YWVkOWYxODI4MDdhNGQwZThlMjllYzNhNDIzNjkyNGI/">1ec55311a564f8272d62ccb621a8b513</a></td> <td>18 Dec. 2013<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>3</sup>Sisron</td> <td><sup>5</sup>Agent.hdqc</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MDFjOTcwZDU5ZmU1NGM1ZmEzNWEyNGE2ZjlkMzIwNDM/">04966960f3f5ed32ae479079a1bcf6e9</a></td> <td>24 Jan. 2014<sup>R</sup></td> <td>2<sup>B</sup></td> <td><sup>0</sup>Oderoor.gen!C</td> <td><sup>2</sup>Generic</td> <td><sup>1</sup>EncPk-DJ</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NmI1MzFiZGFmNmVkNDQwYWJkZmY1MDI3YTlhOWE2YTg/">1ec55311a564f8272d62ccb621a8b513</a></td> <td>24 Jan. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>3</sup>Sisron</td> <td><sup>5</sup>Agent.hdqc</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZjRkZmJmZWUxOWE4NDZjNTk4OTUwNWFkOWRhYTRiYjI/">1ec55311a564f8272d62ccb621a8b513</a></td> <td>25 Jan. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>3</sup>Sisron</td> <td><sup>5</sup>Agent.hdqc</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/OTcyZTY2MDI4YjI4NGQ2OWJkZmQ3ODRmYTU3MWNkM2I/">04966960f3f5ed32ae479079a1bcf6e9</a></td> <td>27 Jan. 2014<sup>R</sup></td> <td>2<sup>B</sup></td> <td><sup>0</sup>Oderoor.gen!C</td> <td><sup>2</sup>Generic</td> <td><sup>1</sup>EncPk-DJ</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/OTNkMmRkMDI1ZTFmNGVmOGE5YTEwYWJiYTZlYjVkMGU/">1ec55311a564f8272d62ccb621a8b513</a></td> <td>05 Feb. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>3</sup>Sisron</td> <td><sup>5</sup>Agent.hdqc</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NDhhNTcwMDk1Zjk1NGI3OGE4M2RhYjdjZmI5NTQ5ZDU/">1ec55311a564f8272d62ccb621a8b513</a></td> <td>13 Feb. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>3</sup>Sisron</td> <td><sup>5</sup>Agent.hdqc</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YWFjODcyYjJjYWJiNGJiNTgwNmIxNmNiZWEzMGJkYjQ/">1ec55311a564f8272d62ccb621a8b513</a></td> <td>21 Feb. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>3</sup>Sisron</td> <td><sup>5</sup>Agent.hdqc</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NjE0MjI3ODE5M2I3NDQ2MTk3MmJiYTUzMTE5MTQ4MmE/">c7ec51ac3b9d91a483f1860c3d965f16</a></td> <td>03 Mar. 2014</td> <td>1<sup>A</sup></td> <td>Clean</td> <td><sup>2</sup>Generic</td> <td><sup>1</sup>Generic-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZjE2YjI2Y2I5ZGEyNDg5MmJlYTMwMmM3NDAyNjcyYzQ/">c7ec51ac3b9d91a483f1860c3d965f16</a></td> <td>17 Mar. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>0</sup>Oderoor.M</td> <td><sup>2</sup>Generic</td> <td><sup>1</sup>Generic-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZDkwMDBjZDhjMTkxNDBjMThiYmMxMTE1ZjFjZjJiNjE/">c7ec51ac3b9d91a483f1860c3d965f16</a></td> <td>19 Mar. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>0</sup>Oderoor.M</td> <td><sup>2</sup>Generic</td> <td><sup>1</sup>Generic-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/OGQwZDE2NzYwOWExNDgyYjg3MWQzY2E2YmYwYjEwZGQ/">c7ec51ac3b9d91a483f1860c3d965f16</a></td> <td>25 Mar. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>0</sup>Oderoor.M</td> <td><sup>2</sup>Generic</td> <td><sup>1</sup>Generic-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZjFkZDVhZjFiYWMzNDdhMjliMDY5YWY5N2FkODVmNGU/">c7ec51ac3b9d91a483f1860c3d965f16</a></td> <td>01 Apr. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>0</sup>Oderoor.M</td> <td><sup>2</sup>Generic</td> <td><sup>4</sup>Agent-AGLO</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/OWM4OTFhNmU5MTkxNGMzNjg4NTMyMWNlYjBkOGM0NDY/">c7ec51ac3b9d91a483f1860c3d965f16</a></td> <td>22 Apr. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td>Clean</td> <td><sup>5</sup>Agent.hegf</td> <td><sup>4</sup>Agent-AGLO</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YzQwMjc5NTUwMDMwNDk5ODlhNzQ1NGQyMGZiNzI1Njg/">c413f1a0738a3b475db2ed44aecbf3ba</a></td> <td>16 Jun. 2014</td> <td>1<sup>A</sup></td> <td><sup>0</sup>Oderoor.M</td> <td><sup>2</sup>Generic</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MTBjOTk4ZGI2NzRmNGI3MWI2NjgzYjVjNGVlMzNkOWQ/">0bfd909d651a11e3d3cdf5b091ee12a1</a></td> <td>28 Jun. 2014</td> <td>1<sup>A</sup></td> <td><sup>7</sup>Vobfus</td> <td><sup>8</sup>Win32.Agent.agdmx</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/M2ZiMzI4NzlhZmYwNDhjMDg0MmU5MjdiYjM5ZjE4MmI/">15993254499407fd7cbe701be11106f1</a></td> <td>01 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZV</td> <td><sup>7</sup>Win32.Agent.ageop</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MGZiN2VkMzNhNTg5NGE4OWFiMDhmYzRmOTBiZGE1ZTg/">1598723f88c6432e8ceee68336a08b01</a></td> <td>01 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.Agent.agcvt</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/OGM1ZmQ0MDZhN2VlNDI3Zjk3NjI3MDIwZDQyZmRkYTU/">17d4b6b618f7576023dd3b983416a180</a></td> <td>01 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.escx</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NjUxMTRiY2EyZThiNDQzZTgyN2ViZmQzYzYwYjk0YWM/">1bfac857a733ec498fc1efc0ebb6a236</a></td> <td>02 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZO</td> <td><sup>7</sup>Win32.Agent.agcnq</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/Zjg5ZWMwMTI0OGRhNDE5NDgyN2MwZmMyMmQwMzg4MGQ/">1cfb3882d79b42f2f881ea20cca0f780</a></td> <td>02 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.esdv</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZDdiMDJkYzAxMjZjNDMzZjg5ZGU1MjUxZTAyMjFjYTY/">1e291e57c007acd5aecbcddd156c46e6</a></td> <td>02 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.escj</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YjVhN2VlMDFhNTllNGI2Zjk1ZjAxOWM2MTNhZGZkZjE/">1fafa36c436af003b28fd9d7befddf01</a></td> <td>02 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.Agent.agerc</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YzljZmIwZjAyMjY1NDdjYzljMTEwZDgxOTU4ZjY3OGY/">20ff4c7b6265bc2b7e9b66bbfe4c8ee6</a></td> <td>02 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZZ</td> <td>Worm.Win32.Vobfus.esdw</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MzBlMjBkYmVkYzUwNDNjOTk2YjA0YTA0ZGQwN2JkMTk/">22a5ce2602e8a0f76e4ab1db713098c6</a></td> <td>03 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.esaj</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NTZiNGQ2YzdlZWFhNDViNGFlNDBhNzZhYWQ2MWUzMWM/">26e7996626da3fbf66b78c0b5969efc1</a></td> <td>03 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZM</td> <td><sup>7</sup>Win32.VBKrypt.urjq</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NGU2ZmI3ZTI0NTA5NGUyNWE1ZWI5NzQyMjY2ZWZlZmM/">272577cdcd11389a4b95d5eae8f3c5b1</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZW</td> <td><sup>7</sup>Win32.Agent.agexl</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YmNkYTQwMDc1Zjk2NDNkOThkNTI1ZmVjMzNiNGVlYTg/">27549feb774b058fde65bc3936a0bf36</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.Agent.agcvt</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MDI2MmE0YjM5MTI2NDU2N2JjNTdjMzQ3ZWQ0MzQ5ZGM/">2807aafab5a799ff261b3f614aecbf91</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZC</td> <td>Worm.Win32.Vobfus.erwz</td> <td><sup>1</sup>SillyFDC-AH</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ODY1MzQwNjVlYjliNDIxZTg1OGMxOGVmMjRjMmE1ODU/">2812ce13236087c1a5b30f63ae33c7a0</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZW</td> <td><sup>7</sup>Win32.Agent.agexl</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/Y2U4MThmMjY2NTliNDdkNDk4NWE2MjVlMTcyMjlhZjM/">2825b9e636ad7a9304ea97981b68bf20</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.YS</td> <td><sup>7</sup>Win32.VBKrypt.uqif</td> <td><sup>1</sup>SillyFDC-AH</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZTA3NmZmNzQyNDY2NGIyNDg1OGNjNzQzYzI1Yjc0MGQ/">292028779b7c4c2e525ccbad0e0f5161</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.Agent.agere</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MzZlYTk2NjQwODA0NDFjNjhiMGIzOGU0MTQ0MDhjMmQ/">2bc4df2819c8983b1511814809c2c641</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.esdv</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MmI3NmM5OTM4NTU2NGQxNzkzN2E5ZmE3Y2Y5NDgwYjY/">28d89ceb348459fd7d1468e130b1a706</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZD</td> <td>Worm.Win32.Vobfus.erxc</td> <td><sup>1</sup>SillyFDC-AH</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YmE4M2NjYTY1ODRkNGQxOGEyNzk2NmJkYWVhOTJhZTk/">2c3b96ca3a18140dfcd42434f3e03020</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZQ</td> <td>Worm.Win32.Vobfus.erzx</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NDljZjdhNjE0MTk4NDFiN2FmMGQ3NGYyYzQ3MzhjYTU/">2c931871fef3b50c0bd2b4961419a311</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.esat</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YzRmM2NkZTljNzVkNDgxNmI4ZjVjOTlmMTlhZTg2NDg/">2cae6bd4e939b318726eebb347db0a26</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZW</td> <td><sup>7</sup>Win32.Agent.agexl</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZWE0MDg0MzdjNzdmNGQxOThiYjI1NmM3OTI4MWZkOTI/">2cc5ad6770250338bd5844904fb18181</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.Agent.agcsv</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ODgxM2YwNjkyMzRkNDY1Mzk5ODFiZDcxNmJiZmViMjk/">2d07ba427df9cd2c4af815015a484391</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.YY</td> <td>Worm.Win32.Vobfus.ervr</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YWZjNjQzMDE5YWEzNGIyNGJmZDViM2ExNmIyYzY0Y2M/">2d321324e9a28c834a750860122233c6</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.Agent.agcvt</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZDc5ODg0NjcwNDJiNDhlNjhjYTI2ZDM1Y2Y2NjZmZDQ/">2db1a991aea1664e3dcbc5e75e108131</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.erwv</td> <td><sup>1</sup>Generic-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZTdlYzdhM2MwNjMzNDA5Y2E4MDJkMTk3YTcwMzk4N2I/">2f2a752f96ecb251efdc275f0ec8ea80</a></td> <td>04 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZV</td> <td>?</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MjAwNTU0ZjJkZGJhNDNhMmJmZTNkM2NkNjE3MjkwMmI/">2fab042f7b482e8aa2c5ecd413f2eff1</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.Agent.agcvt</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MjA5MmY0MTVlM2ZmNDJiOWJkMjJiMTRiYThjZmQwZjA/">2fcae2e2a9ed2f36bd399c77da2470c6</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZW</td> <td><sup>7</sup>Win32.Agent.agexl</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MTJiMjFmMDY2YWJlNDE4NmFiY2M3YmZiMWRiNDIzZTc/">30cc569d95b4401aa0681b8e01299981</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.YU</td> <td>?</td> <td>?</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YTQwM2E1YWYyMjczNGQ0ZmFjMWEwYmZiODJiMTNjZmI/">30cf2bf448db73c75e153216d4cd4fc0</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.VBKrypt.uron</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/Y2Y1MDQwNTU2MTBkNDQ3YmE3ODFmODZkNDlhYTVhNzQ/">302471280652d2d1817757ef0f8ad656</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.esdv</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/M2E5YmY4YTVlNzAzNGVjZmE3MGNkNzljY2JiODJkYzM/">3127e3127a2a206a8dc6bc21f4693386</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZW</td> <td><sup>7</sup>Win32.Agent.agexl</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZGQ0YjkwOWE0ZmZlNDA0YjhlZjU4MmVhZDAxMGI1Y2Y/">33bf61ebeb41d157b45d3180d1f71b76</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZN</td> <td><sup>7</sup>Win32.VBKrypt.urkc</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZWU4NGI1OTU1OTFlNDU4ODk5MmRiMmVhNmVhOTU2OTg/">33c739e7d6aa599c05ff9f94a5768921</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZR</td> <td><sup>7</sup>Win32.Agent.agcpv</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/N2QyMmMyNWE4ODIzNDc5N2E2MjQ4Y2QyYjBlOTgyOTA/">32d5e945a82fb6fb511e7bdd32cf8c21</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td>Worm.Win32.Vobfus.eseu</td> <td><sup>1</sup>Generic-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MTc0MDNkMGEzOTNlNGIxNjk4MGEzYjVjNWFiYjg0NzY/">34defe58f6d305960fff8c295bd9b851</a></td> <td>05 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZW</td> <td>?</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ODBkZmFkNmE4NDIwNDQ5Yjk1MDNjYTRjYzMxMGMzNjA/">383977446a2a42bd1427703974265606</a></td> <td>06 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZW</td> <td><sup>7</sup>Win32.Agent.agexl</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NWM4Y2NmM2M4Njg2NDJlNWEzNzg0Y2Q3N2U2ZWNkMzg/">39408e199dd996cbe915c5c32261c490</a></td> <td>06 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZN</td> <td><sup>7</sup>Win32.VBKrypt.urkc</td> <td><sup>1</sup>VB-ALW</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/Yzg2ZmI5MDZjZDhlNDk4MmIzNzUyYzQ0YzAzZTgxNGE/">395df008604e98e228ed41ce67f213b1</a></td> <td>06 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZV</td> <td><sup>7</sup>Win32.Agent.ageop</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YzIyOWEwYWRjYzY2NDZlM2E1MzI4Y2EwYjdlNmNjYmU/">3d6d6bbe37b37be79c43dc6a7b052a46</a></td> <td>06 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus</td> <td><sup>7</sup>Win32.Agent.agere</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/YWQxNjA3MDNjNTg2NDIzNzk2OGFiM2QzNTk2YmI1MDY/">38ab4d2cda29c4ba1346da4b85c81800</a></td> <td>06 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.ZW</td> <td><sup>7</sup>Win32.Agent.agexl</td> <td><sup>1</sup>SillyFDC-S</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ZWMxZTAzOWRmYjU3NDFkYWIzMmEyMzA4NWQyZGU5NWE/">3ca13a5648d4f2573f28b37638333701</a></td> <td>06 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.YF</td> <td><sup>7</sup>Win32.VBKrypt.uprs</td> <td><sup>1</sup>SillyFDC-AH</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/ODQwYTJiZTFhNmRjNGQzNTliNzliNTI4MmZmM2JmZTY/">3bc39b3af9f13317744fd0548503baa6</a></td> <td>07 Jul. 2014</td> <td>1<sup>A</sup></td> <td><sup>6</sup>Vobfus.YU</td> <td>Worm.Win32.Vobfus.erwm</td> <td><sup>1</sup>VB-ALR</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/NjNjOGRjMmE0NDc0NDhhM2EzMzJkNWFiZjAzY2ViMzE/">c413f1a0738a3b475db2ed44aecbf3ba</a></td> <td>30 Sep. 2014<sup>R</sup></td> <td>1<sup>A</sup></td> <td><sup>0</sup>Oderoor.M</td> <td>Clean</td> <td><sup>1</sup>EncPk-CK</td> </tr> <tr> <td><a href="https://web.archive.org/web/20160324035554/https://malwr.com/analysis/MzJiMzQwNmNlMDA3NDFjN2I1YWE5ZGRjZGQ4ZTllNTU/">675d97e5cdd3b7e07c7945fa5398e599</a></td> <td>21 May. 2015</td> <td>1<sup>A</sup></td> <td>?</td> <td>?</td> <td>?</td> </tr> </tbody> </table> <p class="footnote">Prefixes: <sup>0</sup>Backdoor:Win32/, <sup>1</sup>Mal/, <sup>2</sup>HEUR:Trojan.Win32., <sup>3</sup>Trojan:Win32/, <sup>4</sup>Troj/, <sup>5</sup>Trojan-Downloader.Win32., <sup>6</sup>Worm:Win32/, <sup>7</sup>Trojan.</p> <p class="footnote">TLDS: <sup>A</sup> com, net, tv, cc. <sup>B</sup>dyndns.org, yi.org, dynserv.com, mooo.com</p> </div><div class="infobox_page"><h4>DGArchive</h4>The DGA in this blog post has been implemented by the <a href="https://web.archive.org/web/20160324035554/https://dgarchive.caad.fkie.fraunhofer.de/">DGArchive</a>&nbsp; project.</div></div></div></div><div class="row collapse"><div class="small-12 medium-12 large-offset-3 large-9 columns titlebox"><div class="pad-large"><div class="hide-for-print comments"><div id="disqus_thread"></div> <script>
//<![CDATA[
                  var disqus_shortname = 'blogofjohannesbader';
          
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
//]]>
</script> <noscript>Please enable JavaScript to view the <a href="https://web.archive.org/web/20160324035554/http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> <a href="https://web.archive.org/web/20160324035554/http://disqus.com/" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> </div></div></div></div></div></div></article><a class="exit-off-canvas"></a></div></div><div class="row"><div class="twelve-columns"></div></div><footer><div class="hide-for-print" id="footer"><div class="metadata"><div class="row"><div class="large-offset-3 large-3 medium-4 columns"><h3>Blog Categories</h3><ul class="categories"><li><a href="/web/20160324035554/https://www.johannesbader.ch/category/reverse-engineering/">reverse engineering</a><span class="nr">(64)</span></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/category/tutorial/">tutorial</a><span class="nr">(13)</span></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/category/project-euler/">project euler</a><span class="nr">(13)</span></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/category/misc/">misc</a><span class="nr">(2)</span></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/category/visualization/">visualization</a><span class="nr">(3)</span></li></ul></div><div class="large-3 medium-4 columns"><h3>Tags </h3><span class="tags"><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/malware-analysis/">malware analysis (25)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/crackmes/">crackmes (23)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/dga/">dga (20)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/practical-reverse-engineering/">practical reverse engineering (16)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/math/">math (15)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/project-euler/">project euler (13)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/python/">python (11)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/visualization/">visualization (5)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/upatre/">upatre (4)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/d3js/">d3js (4)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/xbmc/">xbmc (3)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/starcraft/">starcraft (3)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/raspberry-pi/">raspberry pi (2)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/programming/">programming (2)</a></span><span class="tag"><a href="/web/20160324035554/https://www.johannesbader.ch/tag/sql/">sql (2)</a></span></span></div><div class="large-3 medium-4 columns end"><h3>Archives </h3><ul class="archives"><li><a href="/web/20160324035554/https://www.johannesbader.ch/2016/">2016</a><span class="nr">(4)</span><ul><span><a href="/web/20160324035554/https://www.johannesbader.ch/2016/03/">March</a><span class="nr">(1)</span> </span><span><a href="/web/20160324035554/https://www.johannesbader.ch/2016/02/">February</a><span class="nr">(2)</span> </span><span><a href="/web/20160324035554/https://www.johannesbader.ch/2016/01/">January</a><span class="nr">(1)</span> </span></ul></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/2015/">2015</a><span class="nr">(24)</span></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/2014/">2014</a><span class="nr">(47)</span></li><li><a href="/web/20160324035554/https://www.johannesbader.ch/2013/">2013</a><span class="nr">(20)</span></li></ul></div></div></div><div class="lastline"><div class="row"><div class="large-12 medium-12 small-12 columns copyright-text"><p>Â© 2012-2016 Johannes Bader, <a href="https://web.archive.org/web/20160324035554/http://pgp.mit.edu/pks/lookup?op=get&amp;search=0xAC3C4431B7A741E6"> PGP Key</a></p><div style="display:none"><a href="/web/20160324035554/https://www.johannesbader.ch/cdn-cgi/l/email-protection#126b777c7d7a52787d7a737c7c776170737677603c717a"><span class="__cf_email__" data-cfemail="b6cfd3d8d9def6dcd9ded7d8d8d3c5d4d7d2d3c498d5de">[email&#160;protected]</span><script data-cfhash="f9e31" type="text/javascript">/* <![CDATA[ */!function(t,e,r,n,c,a,p){try{t=document.currentScript||function(){for(t=document.getElementsByTagName('script'),e=t.length;e--;)if(t[e].getAttribute('data-cfhash'))return t[e]}();if(t&&(c=t.previousSibling)){p=t.parentNode;if(a=c.getAttribute('data-cfemail')){for(e='',r='0x'+a.substr(0,2)|0,n=2;a.length-n;n+=2)e+='%'+('0'+('0x'+a.substr(n,2)^r).toString(16)).slice(-2);p.replaceChild(document.createTextNode(decodeURIComponent(e)),c)}p.removeChild(t)}}catch(u){}}()/* ]]> */</script></a></div></div></div></div></div></div></footer><script>var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-13162485-1"]),_gaq.push(["_trackPageview"]),function(){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src=("https:"==document.location.protocol?"//web.archive.org/web/20160324035554/https://ssl":"//web.archive.org/web/20160324035554/https://www")+".google-analytics.com/ga.js";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(t,e)}();</script><script src="/web/20160324035554js_/https://www.johannesbader.ch/javascripts/all.js"></script><script type="text/javascript">/* <![CDATA[ */(function(d,s,a,i,j,r,l,m,t){try{l=d.getElementsByTagName('a');t=d.createElement('textarea');for(i=0;l.length-i;i++){try{a=l[i].href;s=a.indexOf('/cdn-cgi/l/email-protection');m=a.length;if(a&&s>-1&&m>28){j=28+s;s='';if(j<m){r='0x'+a.substr(j,2)|0;for(j+=2;j<m&&a.charAt(j)!='X';j+=2)s+='%'+('0'+('0x'+a.substr(j,2)^r).toString(16)).slice(-2);j++;s=decodeURIComponent(s)+a.substr(j,m-j)}t.innerHTML=s.replace(/</g,'&lt;').replace(/>/g,'&gt;');l[i].href='mailto:'+t.value}}catch(e){}}}catch(e){}})(document);/* ]]> */</script></body></html><!--
     FILE ARCHIVED ON 03:55:54 Mar 24, 2016 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 06:03:56 Dec 18, 2024.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
<!--
playback timings (ms):
  captures_list: 0.962
  exclusion.robots: 0.043
  exclusion.robots.policy: 0.027
  esindex: 0.014
  cdx.remote: 15.992
  LoadShardBlock: 417.142 (3)
  PetaboxLoader3.datanode: 141.629 (4)
  PetaboxLoader3.resolve: 113.515 (2)
  load_resource: 192.263
-->