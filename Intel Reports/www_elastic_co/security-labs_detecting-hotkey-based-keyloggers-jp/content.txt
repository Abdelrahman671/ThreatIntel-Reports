<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><title>未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知 — Elastic Security Labs</title><meta name="description" content="本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。"/><meta property="og:title" content="未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知 — Elastic Security Labs"/><meta property="og:description" content="本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。"/><meta property="og:image" content="https://www.elastic.co/security-labs/assets/images/detecting-hotkey-based-keyloggers-jp/Security Labs Images 12.jpg?0ee4f900d8ac85f07674aa509e636a9c"/><meta property="og:image:alt" content="本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。"/><meta property="og:site_name"/><meta property="og:url" content="https://www.elastic.co/security-labs/detecting-hotkey-based-keyloggers-jp"/><meta property="og:type" content="website"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知 — Elastic Security Labs"/><meta name="twitter:description" content="本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。"/><meta name="twitter:image" content="https://www.elastic.co/security-labs/assets/images/detecting-hotkey-based-keyloggers-jp/Security Labs Images 12.jpg?0ee4f900d8ac85f07674aa509e636a9c"/><meta name="twitter:image:alt" content="本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。"/><link rel="canonical" href="https://www.elastic.co/security-labs/detecting-hotkey-based-keyloggers-jp"/><link rel="preload" href="/security-labs/logo.svg" as="image" fetchpriority="high"/><link rel="preload" as="image" imageSrcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=3840&amp;q=75 3840w" imageSizes="100vw" fetchpriority="high"/><meta name="next-head-count" content="19"/><script src="https://play.vidyard.com/embed/v4.js" type="text/javascript" async=""></script><link rel="icon" href="/security-labs/favicon.svg"/><link rel="mask-icon" href="/security-labs/favicon.svg" color="#1C1E23"/><link rel="apple-touch-icon" href="/security-labs/favicon.svg"/><meta name="theme-color" content="#1C1E23"/><link rel="preload" href="/security-labs/_next/static/media/6d93bde91c0c2823-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/a34f9d1faa5f3315-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/369c6e283c5acc6e-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/92f44bb82993d879-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/ee71530a747ff30b-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/9fac010bc1f02be0-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/cbf5fbad4d73afac-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><script id="google-tag-manager" data-nscript="beforeInteractive">
          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-KNJMG2M');
          </script><link rel="preload" href="/security-labs/_next/static/css/265ed7605fd03477.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/265ed7605fd03477.css" data-n-g=""/><link rel="preload" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/security-labs/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js"></script><script src="/security-labs/_next/static/chunks/webpack-7987c6fda769d510.js" defer=""></script><script src="/security-labs/_next/static/chunks/framework-7a7e500878b44665.js" defer=""></script><script src="/security-labs/_next/static/chunks/main-ebd33a9f1cae5951.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/_app-cb8664d1d3df2511.js" defer=""></script><script src="/security-labs/_next/static/chunks/fec483df-43ee602fabdfe3a4.js" defer=""></script><script src="/security-labs/_next/static/chunks/877-34f408271ef44c22.js" defer=""></script><script src="/security-labs/_next/static/chunks/511-d08fe0fdd6f8a984.js" defer=""></script><script src="/security-labs/_next/static/chunks/683-a5053c37fe5bd0c9.js" defer=""></script><script src="/security-labs/_next/static/chunks/402-3e1f0db8cdad45fc.js" defer=""></script><script src="/security-labs/_next/static/chunks/616-0b017b9cfa597392.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/%5Bslug%5D-b0c191de1a3710e4.js" defer=""></script><script src="/security-labs/_next/static/0PDZemg2oGX1bus_dquF1/_buildManifest.js" defer=""></script><script src="/security-labs/_next/static/0PDZemg2oGX1bus_dquF1/_ssgManifest.js" defer=""></script></head><body><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KNJMG2M" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="__next"><main class="__variable_0351a5 __variable_1f211e __variable_a5b5f5 flex flex-col min-h-screen"><div class="scroll-percentage-container"><div class="scroll-percentage-bar" style="width:0%"></div></div><nav class="fixed w-full z-40" data-headlessui-state=""><div class="bg-gradient-to-b from-zinc-900 from-20% h-[200%] to-transparent absolute inset-0 z-0 pointer-events-none"></div><div class="container relative z-10"><div class="flex h-16 items-center justify-between"><div class="flex items-center justify-start w-full"><div><a class="hover:opacity-50 transition" href="/security-labs"><img alt="elastic security labs logo" fetchpriority="high" width="200" height="30" decoding="async" data-nimg="1" style="color:transparent" src="/security-labs/logo.svg"/></a></div><div class="hidden lg:ml-6 lg:block"><div class="flex space-x-4"><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/about"><span>About</span></a><div class="relative" data-headlessui-state=""><div><button class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" id="headlessui-menu-button-:R2kpm:" type="button" aria-haspopup="menu" aria-expanded="false" data-headlessui-state="">Topics<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="ml-1 -mr-1 h-4 w-4 text-zinc-400 relative top-[1px]"><path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd"></path></svg></button></div></div><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/vulnerability-updates"><span>Vulnerability updates</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/reports"><span>Reports</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/tools"><span>Tools</span></a></div></div><div class="hidden lg:ml-auto lg:block"><div class="flex items-center space-x-4"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/detecting-hotkey-based-keyloggers-jp"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="https://www.elastic.co/security-labs/rss/feed.xml"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-4 w-4 mr-1"><path d="M3.75 3a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75H4c6.075 0 11 4.925 11 11v.25c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V16C17 8.82 11.18 3 4 3h-.25z"></path><path d="M3 8.75A.75.75 0 013.75 8H4a8 8 0 018 8v.25a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75V16a6 6 0 00-6-6h-.25A.75.75 0 013 9.25v-.5zM7 15a2 2 0 11-4 0 2 2 0 014 0z"></path></svg><span class="hidden xl:block">Subscribe</span></a><a class="font-display inline-flex items-center justify-center rounded font-semibold disabled:!select-none disabled:!bg-gray-400 bg-blue-600 text-white hover:bg-blue-500 enabled:hover:text-white/80 transition-colors px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://cloud.elastic.co/registration?cta=cloud-registration&amp;tech=trial&amp;plcmt=navigation&amp;pg=security-labs">Start free trial</a><a class="font-display inline-flex items-center justify-center rounded font-semibold text-white disabled:!select-none disabled:!bg-gray-400 button px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://www.elastic.co/contact">Contact sales</a></div></div></div><div class="-mr-2 flex lg:hidden"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/detecting-hotkey-based-keyloggers-jp"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><button class="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" id="headlessui-disclosure-button-:R59m:" type="button" aria-expanded="false" data-headlessui-state=""><span class="sr-only">Open navigation menu</span><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="block h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path></svg></button></div></div></div></nav><main class="mb-20 flex-1 flex flex-col"><div class="h-48 md:h-64"><div class="after:absolute after:block after:bg-blue-400 after:blur-3xl after:content-[&#x27; &#x27;] after:h-96 after:opacity-5 after:right-0 after:rounded-full after:top-20 after:w-1/2 after:z-0 before:absolute before:block before:blur-3xl before:bg-orange-400 before:content-[&#x27; &#x27;] before:h-96 before:left-0 before:opacity-5 before:rounded-full before:w-1/2 before:z-0 w-full h-full relative"><div class="relative z-10 w-full h-[125%] -top-[25%] bg-no-repeat bg-cover bg-bottom flex items-center justify-center" style="background-image:url(/security-labs/grid.svg)"></div></div></div><article class="px-4"><div class="max-w-7xl mx-auto relative z-10 flex flex-col space-y-4"><div class="eyebrow break-words"><time class="block mb-2 md:mb-0 md:inline-block article-published-date" dateTime="2025-03-04T00:00:00.000Z">4 March 2025</time><span class="hidden md:inline-block md:mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/asuka-nakajima">Asuka Nakajima</a></div><h1 class="font-bold leading-tighter text-3xl md:text-5xl"><span>未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知</span></h1><p class="text-zinc-200 text-base md:text-xl">本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。</p><div class="flex items-center mt-4 text-zinc-200 text-sm space-x-4 border-t border-white/25 pt-4"><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><span>5 min read</span></span><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z"></path></svg><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/security-research">Security research</a>, </span><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/detection-science">Detection science</a></span></span></div></div><div class="max-w-7xl mx-auto"><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 sm:p-8 md:p-10 rounded-3xl mt-5 md:mt-10"><div class="relative w-full rounded-lg overflow-hidden aspect-video"><img alt="未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知" fetchpriority="high" decoding="async" data-nimg="fill" class="object-cover absolute h-full w-full" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;color:transparent" sizes="100vw" srcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=3840&amp;q=75 3840w" src="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fdetecting-hotkey-based-keyloggers-jp%2FSecurity%20Labs%20Images%2012.jpg&amp;w=3840&amp;q=75"/><div class="absolute border border-white/50 inset-0 mix-blend-overlay rounded-lg z-10"></div></div></div></div><div class="lg:max-w-7xl mx-auto relative mt-12 lg:grid lg:grid-cols-4 lg:gap-8 items-start"><div class="flex justify-center lg:col-span-3"><div class="prose lg:prose-lg prose-invert w-full article-content"><div><h2 class="font-bold text-2xl md:text-4xl relative"><span id="未公開のカーネルデータ構造を使った" class="absolute -top-32"></span>未公開のカーネルデータ構造を使った</h2>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="ホットキー型キーロガーの検知" class="absolute -top-32"></span>ホットキー型キーロガーの検知</h2>
<p>本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="はじめに" class="absolute -top-32"></span>はじめに</h2>
<p>　Elastic Security Labsでは2024年5月、<a href="https://www.elastic.co/guide/en/integrations/current/endpoint.html">Elastic Defend</a>のバージョン 8.12 より追加された、Windows上で動作するキーロガーの検知を強化する新機能を紹介する<a href="https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp">記事</a>を公開しました 。具体的には、サイバー攻撃で一般的に使われる4種類のキーロガー(ポーリング型キーロガー、フッキング型キーロガー、Raw Input Modelを用いたキーロガー、DirectInputを用いたキーロガー)を挙げ、それらに対する私たちが提供した検知手法についてを解説しました。具体的には<a href="https://learn.microsoft.com/ja-jp/windows-hardware/drivers/devtest/event-tracing-for-windows--etw-">Event Tracing for Windows</a> (ETW)における、Microsoft-Windows-Win32kプロバイダを用いた振る舞い検知の方法についてを紹介しました。<br/>
<!-- -->記事公開後、大変光栄なことに記事がMicrosoft社のPrincipal Security Researcherである<a href="https://jonathanbaror.com/">Jonathan Bar Or</a>氏の目に留まり、「ホットキー型キーロガーもある」といった貴重なご意見とともに、そのPoCコードも公開してくださりました。そこで本記事では、氏が公開したホットキー型キーロガーのPoCコードである「<a href="https://github.com/yo-yo-yo-jbo/hotkeyz">Hotkeyz</a>」 をもとに、本キーロガーの検知手法の一案についてを述べたいと思います。</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="ホットキー型キーロガーの概要" class="absolute -top-32"></span>ホットキー型キーロガーの概要</h2>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="そもそもホットキーとは何か" class="absolute -top-32"></span>そもそもホットキーとは何か？</h3>
<p>　ホットキー型キーロガーについて説明する前に、まずホットキーとは何かを解説します。ホットキーとは、キーボードショートカットの一種であり、コンピュータにおいて、特定の機能を直接呼び出して実行させるキーまたはキーの組み合わせのことを指します。例えばWindowsにおいてタスク(ウィンドウ)を切り替える際に「<strong>Alt + Tab</strong>」を押している人も多いかと思います。この時使っているこの「<strong>Alt + Tab</strong>」が、タスク切り替え機能を直接呼び出す「ホットキー」にあたります。</p>
<p><em>(注: ホットキー以外にも、キーボードショートカットは存在しますが、本記事ではそれらは対象外です。また本記事に記載の事項はすべて、筆者が検証に利用した環境である、仮想化ベースのセキュリティが動作していないWindows 10 version 22H2 OS Build 19045.5371が前提になります。他のWindowsのバージョンではまた内部の構造や挙動が違う場合があること、ご注意ください。)</em></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="任意のホットキーが登録できることを悪用する" class="absolute -top-32"></span>任意のホットキーが登録できることを悪用する</h3>
<p>　先ほどの例のようにWindowsで予め設定されたホットキーを使う以外にも、実は自分で任意のホットキーを登録することも可能です。登録方法は様々ありますが、<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-registerhotkey">RegisterHotKey</a>というWindows APIを使えば、指定のキーをホットキーとして登録することができます。例えば、以下が<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIを使って「A」(<a href="https://learn.microsoft.com/ja-jp/windows/win32/inputdev/virtual-key-codes">virtual-key code</a>で0x41)キーを、グローバルなホットキーとして登録するためのコードの例です。</p>
<pre><code>/*
BOOL RegisterHotKey(
  [in, optional] HWND hWnd, 
  [in]           int  id,
  [in]           UINT fsModifiers,
  [in]           UINT vk
);
*/
RegisterHotKey(NULL, 1, 0, 0x41);</code></pre>
<p>　ホットキーとして登録後、登録されたキーが押下された場合、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIの第一引数で指定したウィンドウ(NULLの場合はホットキー登録時のスレッド)の<a href="https://learn.microsoft.com/ja-jp/windows/win32/winmsg/about-messages-and-message-queues">メッセージキュー</a>に、<a href="https://learn.microsoft.com/ja-jp/windows/win32/inputdev/wm-hotkey">WM_HOTKEYメッセージ</a>が届くようになります。以下は実際に、メッセージキューにWM_HOTKEY メッセージが来ていないかを<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getmessage">GetMessage</a> APIを使って確認し、届いていた場合、WM_HOTKEYメッセージに内包されていた virtual-key code(今回の場合「0x41」)を取り出しているコード(メッセージループ)になります。</p>
<pre><code>MSG msg = { 0 };
while (GetMessage(&amp;msg, NULL, 0, 0)) {
    if (msg.message == WM_HOTKEY) {
        int vkCode = HIWORD(msg.lParam);
        std::cout &lt;&lt; &quot;WM_HOTKEY received! Virtual-Key Code: 0x&quot;
            &lt;&lt; std::hex &lt;&lt; vkCode &lt;&lt; std::dec &lt;&lt; std::endl;
    }
}</code></pre>
<p>　これは言い換えると、例えばメモ帳アプリに文章を書く際、Aキーから入力された文字は、文字としての入力ではなく、グローバルなホットキーとして認識されることになります。</p>
<p>　今回は「A」のみをホットキーとして登録しましたが、複数のキー(BやCやD)を同時に個々のホットキーとして登録することも可能です。これはつまり、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIでホットキーとして登録可能な範囲の任意のキー(virtual-key code)の入力は、すべてグローバルなホットキーとして横取りすることも可能であるということです。そしてホットキー型キーロガーはこの性質を悪用して、ユーザから入力されたキーを盗み取ります。<br/>
<!-- -->筆者が手元の環境で試した限りは、英数字と基本的な記号キーだけでなく、それらにSHIFT修飾子をつけたすべてキーが<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIでホットキーとして登録可能でした。そのため、キーロガーとして問題なく、情報の窃取に必要なキーの監視ができると言えるでしょう。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="密かにキーを盗み取る" class="absolute -top-32"></span>密かにキーを盗み取る</h3>
<p>　ホットキー型キーロガーがキーを盗み取る実際の流れについてを、Hotkeyzを例に紹介します。<br/>
<!-- -->Hotkeyzでは最初に、各英数字キーに加えて、一部のキー(VK_SPACEやVK_RETURNなど)のvirtual-key codeを、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIを使い個々のホットキーとして登録します。その後キーロガー内のメッセージループにて、登録されたホットキーのWM_HOTKEYメッセージが、メッセージキューに到着していないかを<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-peekmessagew">PeekMessageW</a> APIを使って確認します。そしてWM_HOTKEYメッセージが来ていた場合、メッセージに内包されているvirtual-key codeを取り出して、最終的にはそれをテキストファイルに保存します。以下がメッセージループ内のコードのコードです。特に重要な部分を抜粋して掲載しています。</p>
<pre><code>while (...)
{
    // Get the message in a non-blocking manner and poll if necessary
    if (!PeekMessageW(&amp;tMsg, NULL, WM_HOTKEY, WM_HOTKEY, PM_REMOVE))
    {
        Sleep(POLL_TIME_MILLIS);
        continue;
    }
....
   // Get the key from the message
   cCurrVk = (BYTE)((((DWORD)tMsg.lParam) &amp; 0xFFFF0000) &gt;&gt; 16);

   // Send the key to the OS and re-register
   (VOID)UnregisterHotKey(NULL, adwVkToIdMapping[cCurrVk]);
   keybd_event(cCurrVk, 0, 0, (ULONG_PTR)NULL);
   if (!RegisterHotKey(NULL, adwVkToIdMapping[cCurrVk], 0, cCurrVk))
   {
       adwVkToIdMapping[cCurrVk] = 0;
       DEBUG_MSG(L&quot;RegisterHotKey() failed for re-registration (cCurrVk=%lu,    LastError=%lu).&quot;, cCurrVk, GetLastError());
       goto lblCleanup;
   }
   // Write to the file
  if (!WriteFile(hFile, &amp;cCurrVk, sizeof(cCurrVk), &amp;cbBytesWritten, NULL))
  {
....</code></pre>
<p>　ここで特筆するべき点としては、ユーザにキーロガーの存在を気取られないため、メッセージからvirtual-key codeを取り出した時点で、いったんそのキーのホットキー登録を<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-unregisterhotkey">UnregisterHotKey</a> APIを使って解除し、その上で<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-keybd_event">keybd_event</a>を使ってキーを送信することです。これにより、ユーザからは問題無くキーが入力出来ているように見え、キーが裏で窃取されていることに気が付かれにくくなります。そしてキーを送信した後は再びそのキーを<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIを使ってホットキーとして登録し、再びユーザからの入力を待ちます。以上が、ホットキー型キーロガーの仕組みです。</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="ホットキー型キーロガーの検知手法" class="absolute -top-32"></span><strong>ホットキー型キーロガーの検知手法</strong></h2>
<p>　ホットキー型キーロガーとは何かやその仕組みについて理解したところで、次にこれをどのように検知するかについてを説明します。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="etwではregisterhotkey-apiは監視していない" class="absolute -top-32"></span>ETWではRegisterHotKey APIは監視していない</h3>
<p>　以前の記事で書いた方法と同様に、まずはホットキー型キーロガーも<a href="https://learn.microsoft.com/ja-jp/windows/win32/etw/about-event-tracing">Event Tracing for Windows</a> (ETW) を利用して検知が出来ないかを検討・調査しました。その結果、ETWでは<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIや<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">UnRegisterHotKey</code> APIを監視していないことがすぐに判明しました。Microsoft-Windows-Win32k プロダイバーのマニフェストファイルの調査に加えて、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code>のAPIの内部(具体的にはwin32kfull.sysにある<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">NtUserRegisterHotKey</code>)をリバースエンジニアリングをしたものの、これらのAPIが実行される際、ETWのイベントを送信しているような形跡は残念ながら見つかりませんでした。<br/>
<!-- -->以下の図は、ETWで監視対象となっている<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">GetAsyncKeyState</code>(<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">NtUserGetAsyncKeyState</code>)と、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">NtUserRegisterHotKey</code>の逆コンパイル結果を比較したものを示しています。<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">NtUserGetAsyncKeyState</code>の方には関数の冒頭に、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">EtwTraceGetAsyncKeyState</code>というETWのイベント書き出しに紐づく関数が存在しますが、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">NtUserRegisterHotKey</code>には存在しないのが見て取れます。</p>
<p>
　<br/>
<!-- -->Microsoft-Windows-Win32k 以外のETWプロバイダーを使って、間接的に<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIを呼び出しを監視する案もでたものの、次に紹介する、ETWを使わず「ホットキーテーブル」を利用した検知手法が、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIを監視するのと同様かそれ以上の効果が得られることが分かり、最終的にはこの案を採用することにしました。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="ホットキーテーブルgphkhashtableを利用した検知" class="absolute -top-32"></span>ホットキーテーブル(gphkHashTable)を利用した検知</h3>
<p>　ETWでは<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIの呼び出しを直接監視出来ないことが判明した時点で、ETWを利用せずに検知する方法を検討することにしました。検討の最中、「そもそも登録されたホットキーの情報がどこかに保存されているのではないか？」「もし保存されているとしたら、その情報が検知に使えるのではないか？」という考えに至りました。その仮説をもとに調査した結果、すぐに<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">NtUserRegisterHotkey</code>内にて<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">gphkHashTable</code>というラベルがつけられたハッシュテーブルを発見することが出来ました。Microsoft社が公開しているオンラインのドキュメント類を調査しても<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">gphkHashTable</code>についての情報はなかったため、これは未公開(undocumented)のカーネルデータ構造のようです。</p>
<p></p>
<p>　リバースエンジニアリングをした結果、このハッシュテーブルは、登録されたホットキーの情報を持つオブジェクトを保存しており、各オブジェクトは<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIの引数にて指定されたvirtual-key codeや修飾子の情報を保持していることが分かりました。以下の図(右)がホットキーのオブジェクト(<strong>HOT_KEY</strong>と命名)の構造体の定義の一部と、図(左)が実際にwindbg上で<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">gphkHashTable</code>にアクセスした上で、登録されたホットキーのオブジェクトを見た時の様子です。</p>
<p></p>
<p>　リバースエンジニアリングをした結果をまとめると、ghpkHashTableは図4のような構造になっていることがわかりました。具体的には、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterHotKey</code> APIで指定されたvirtual-key codeに対して0x80の余剰演算をした結果をハッシュテーブルのインデックスにしていました。そして同じインデックスを持つホットキーオブジェクトを連結リストで結ぶことで、virtual-key codeが同じでも、修飾子が違うホットキーの情報も保持・管理出来るようになっています。</p>
<p></p>
<p>　つまり<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">gphkHashTable</code>で保持している全てのHOT_KEYオブジェクトを走査すれば、登録されている全ホットキーの情報が取得できるということになります。取得した結果、主要なキー(例えば単体の英数字キー）全てが個々のホットキーとして登録されていれば、ホットキー型キーロガーが動作していることを示す強い根拠となります。</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="検知ツールを作成する" class="absolute -top-32"></span>検知ツールを作成する</h2>
<p>　では次に、実際に検知ツールの方を実装していきます。<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">gphkHashTable</code>自体はカーネル空間に存在するため、ユーザモードのアプリケーションからはアクセス出来ません。そのため検知のために、デバイスドライバを書くことにしました。具体的には<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">gphkHashTable</code>のアドレスを取得した後、ハッシュテーブルに保存されている全オブジェクトを走査した上で、ホットキーとして登録されている英数字キーの数が一定数以上ならば、ホットキー型キーロガーが存在する可能性がある事を知らせてくるデバイスドライバを作成することにしました。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="gphkhashtableのアドレスを取得する方法" class="absolute -top-32"></span>gphkHashTableのアドレスを取得する方法</h3>
<p>　検知ツールを作成するにあたり、最初に直面した課題としては「gphkHashTableのアドレスをどのようにして取得すればよいのか？」ということです。悩んだ結果、<strong>win32kfull.sys</strong>のメモリ空間内でgphkHashTableにアクセスしている命令から直接gphkHashTableのアドレスを取得することにしました。<br/>
<!-- -->リバースエンジニアリングした結果、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">IsHotKey</code>という関数内では、関数の冒頭部分にあるlea命令(lea rbx, gphkHashTable)にて、gphkHashTableのアクセスしていることがわかりました。この命令のオプコードバイト(0x48, 0x8d, 0x1d)部分をシグネチャに該当行を探索して、得られた32bit(4バイト)のオフセットからgphkHashTableのアドレスを算出することにしました。</p>
<p></p>
<p>　加えて、IsHotKey関数自体もエクスポート関数でないため、そのアドレスも何らかの方法で取得しなければいけません。そこでさらなるリバースエンジニアリングの結果、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">EditionIsHotKey</code>というエクスポートされた関数内で、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">IsHotKey</code>関数が呼ばれていることがわかりました。そこでEditionIsHotKey関数から前述と同様の方法で、IsHotKey関数のアドレスを算出することにしました。(補足ですが、<strong>win32kfull.sys</strong>のベースアドレスに関しては<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">PsLoadedModuleList</code>というAPIで探せます。)</p>
<p>　## <strong>win32kfull.sys</strong>のメモリ空間にアクセスするには</p>
<p>　<strong>gphkHashTable</strong>のアドレスを取得する方法について検討が終わったところで、実際に<strong>win32kfull.sys</strong>のメモリ空間にアクセスして、<strong>gphkHashTable</strong>のアドレスを取得するためのコードを書き始めました。この時直面した課題としては、<strong>win32kfull.sys</strong>は「セッションドライバ」であるという点ですが、ここではまず「セッション」とは何かについて、簡単に説明します。<br/>
<!-- -->Windowsでは一般的にユーザがログインした際、ユーザ毎に個別に「セッション」(1番以降のセッション番号)が割り当てられます。かなり大雑把に説明すると、最初にログインしたユーザには「セッション１」が割り当てられ、その状態で別のユーザがログインした場合今度は「セッション２」が割り当てられます。そして各ユーザは個々のセッション内で、それぞれのデスクトップ環境を持ちます。<br/>
<!-- -->この時、セッション別(ログインユーザ別)に管理するべきカーネルのデータは、カーネルメモリ内の「セッション空間」というセッション別の分離したメモリ空間で管理され、win32k ドライバが管理しているようなGUIオブジェクト(ウィンドウ、マウス・キーボード入力の情報等)もこれに該当します。これにより、ユーザ間で画面や入力情報が混ざることがないのです。(かなり大まかな説明のため、より詳しくセッションについて知りたい方はJames Forshaw氏の<a href="https://googleprojectzero.blogspot.com/2016/01/raising-dead.html">こちらのブログ記事</a>を読むことをおすすめします。)</p>
<p>
　　<br/>
<!-- -->以上の背景から、<strong>win32kfull.sys</strong>は「セッションドライバ」と呼ばれています。つまり、例えば最初のログインユーザのセッション(セッション1)内で登録されたホットキーの情報は、同じセッション内からしかアクセスできないということです。ではどうすれば良いのかというと、このような場合、<a href="https://learn.microsoft.com/ja-jp/windows-hardware/drivers/ddi/ntifs/nf-ntifs-kestackattachprocess">KeStackAttachProcess</a>が利用できることが<a href="https://eversinc33.com/posts/kernel-mode-keylogging.html">知られています</a>。<br/>
<!-- -->KeStackAttachProcessは、現在のスレッドを指定のプロセスのアドレス空間に一時的にアタッチすることが出来ます。この時、対象のセッションにいるGUIプロセス、より正確には<strong>win32kfull.sys</strong>をロードしているプロセスにアタッチすることが出来れば、対象セッションの<strong>win32kfull.sys</strong>やそのデータにアクセスすることが出来ます。今回は、ログインユーザが１ユーザであることを仮定して、各ユーザのログオン操作を担うプロセスである<strong>winlogon.exe</strong>を探してアタッチすることにしました。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="登録されているホットキーを確認する" class="absolute -top-32"></span>登録されているホットキーを確認する</h3>
<p>　<strong>winlogon.exe</strong>のプロセスにアタッチし、<strong>gphkHashTable</strong>のアドレスを特定出来た後は、後は<strong>gphkHashTable</strong>をスキャンして登録されたホットキーを確認するだけです。以下がその抜粋版のコードです。</p>
<pre><code>BOOL CheckRegisteredHotKeys(_In_ const PVOID&amp; gphkHashTableAddr)
{
-[skip]-
    // Cast the gphkHashTable address to an array of pointers.
    PVOID* tableArray = static_cast&lt;PVOID*&gt;(gphkHashTableAddr);
    // Iterate through the hash table entries.
    for (USHORT j = 0; j &lt; 0x80; j++)
    {
        PVOID item = tableArray[j];
        PHOT_KEY hk = reinterpret_cast&lt;PHOT_KEY&gt;(item);
        if (hk)
        {
            CheckHotkeyNode(hk);
        }
    }
-[skip]-
}

VOID CheckHotkeyNode(_In_ const PHOT_KEY&amp; hk)
{
    if (MmIsAddressValid(hk-&gt;pNext)) {
        CheckHotkeyNode(hk-&gt;pNext);
    }

    // Check whether this is a single numeric hotkey.
    if ((hk-&gt;vk &gt;= 0x30) &amp;&amp; (hk-&gt;vk &lt;= 0x39) &amp;&amp; (hk-&gt;modifiers1 == 0))
    {
        KdPrint((&quot;[+] hk-&gt;id: %u hk-&gt;vk: %x\n&quot;, hk-&gt;id, hk-&gt;vk));
        hotkeyCounter++;
    }
    // Check whether this is a single alphabet hotkey.
    else if ((hk-&gt;vk &gt;= 0x41) &amp;&amp; (hk-&gt;vk &lt;= 0x5A) &amp;&amp; (hk-&gt;modifiers1 == 0))
    {
        KdPrint((&quot;[+] hk-&gt;id: %u hk-&gt;vk: %x\n&quot;, hk-&gt;id, hk-&gt;vk));
        hotkeyCounter++;
    }
-[skip]-
}
....
if (CheckRegisteredHotKeys(gphkHashTableAddr) &amp;&amp; hotkeyCounter &gt;= 36)
{
   detected = TRUE;
   goto Cleanup;
}</code></pre>
<p>　コード自体は難しくなく、ハッシュテーブルの各インデックスの先頭から順に、連結リストをたどりながらすべての<strong>HOT_KEY</strong>オブジェクトにアクセスして、登録されているホットキーが単体の英数字キーか否かを確認しています。作成した検知ツールでは、すべての単体英数字キーがホットキーとして登録<br/>
<!-- -->されていた場合、ホットキー型キーロガーが存在するとしてアラートを挙げます。また、今回実装の簡略化のため、英数字単体キーのホットキーのみを対象としていますが、SHIFTなどの修飾子付きのホットキーも容易に調べることが可能です。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="hotkeyzを検知する" class="absolute -top-32"></span>Hotkeyzを検知する</h3>
<p>　検知ツール(Hotkey-based Keylogger Detector)は以下にて公開しました。使い方も以下に記載していますので、興味ある方はぜひご覧ください。加えて本研究は<a href="https://nullcon.net/goa-2025/speaker-windows-keylogger-detection">NULLCON Goa 2025</a>でも発表しましたので、その<a href="https://docs.google.com/presentation/d/1B0Gdfpo-ER2hPjDbP_NNoGZ8vXP6X1_BN7VZCqUgH8c/edit?usp=sharing">発表スライド</a>も併せてご覧いただけます。</p>
<p>*<a href="https://github.com/AsuNa-jp/HotkeybasedKeyloggerDetector">https://github.com/AsuNa-jp/HotkeybasedKeyloggerDetector</a></p>
<p>　最後に、本ツールを用いて実際にHotkeyzを検知する様子を収録したデモ動画が以下になります。</p>
<p><a href="https://drive.google.com/file/d/1koGLqA5cPlhL8C07MLg9VDD9-SW2FM9e/view?usp=drive_link">DEMO_VIDEO.mp4</a></p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="謝辞" class="absolute -top-32"></span>謝辞</h2>
<p>　<a href="https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp">前回の記事</a>を読んで下さり、その上でホットキー型キーロガーの手法について教えてくださり、その上そのPoCとなるHotkeyzを公開してくださった、Jonathan Bar Or氏に心より感謝致します。</p></div></div></div><div class="hidden lg:flex lg:col-span-1 text-sm lg:flex-col lg:space-y-6"><div class="toc"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Jump to section</h4><ul class="flex flex-col space-y-2"><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E6%9C%AA%E5%85%AC%E9%96%8B%E3%81%AE%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F"><span>未公開のカーネルデータ構造を使った</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E3%83%9B%E3%83%83%E3%83%88%E3%82%AD%E3%83%BC%E5%9E%8B%E3%82%AD%E3%83%BC%E3%83%AD%E3%82%AC%E3%83%BC%E3%81%AE%E6%A4%9C%E7%9F%A5--"><span>ホットキー型キーロガーの検知 &nbsp;</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB"><span>はじめに</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E3%83%9B%E3%83%83%E3%83%88%E3%82%AD%E3%83%BC%E5%9E%8B%E3%82%AD%E3%83%BC%E3%83%AD%E3%82%AC%E3%83%BC%E3%81%AE%E6%A6%82%E8%A6%81"><span>ホットキー型キーロガーの概要</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82%E3%83%9B%E3%83%83%E3%83%88%E3%82%AD%E3%83%BC%E3%81%A8%E3%81%AF%E4%BD%95%E3%81%8B"><span>そもそもホットキーとは何か？</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E4%BB%BB%E6%84%8F%E3%81%AE%E3%83%9B%E3%83%83%E3%83%88%E3%82%AD%E3%83%BC%E3%81%8C%E7%99%BB%E9%8C%B2%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8%E3%82%92%E6%82%AA%E7%94%A8%E3%81%99%E3%82%8B"><span>任意のホットキーが登録できることを悪用する</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E5%AF%86%E3%81%8B%E3%81%AB%E3%82%AD%E3%83%BC%E3%82%92%E7%9B%97%E3%81%BF%E5%8F%96%E3%82%8B"><span>密かにキーを盗み取る</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E3%83%9B%E3%83%83%E3%83%88%E3%82%AD%E3%83%BC%E5%9E%8B%E3%82%AD%E3%83%BC%E3%83%AD%E3%82%AC%E3%83%BC%E3%81%AE%E6%A4%9C%E7%9F%A5%E6%89%8B%E6%B3%95"><span>**ホットキー型キーロガーの検知手法**</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/detecting-hotkey-based-keyloggers-jp#etw%E3%81%A7%E3%81%AFregisterhotkey-api%E3%81%AF%E7%9B%A3%E8%A6%96%E3%81%97%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84"><span>ETWではRegisterHotKey&nbsp;APIは監視していない</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/detecting-hotkey-based-keyloggers-jp#%E3%83%9B%E3%83%83%E3%83%88%E3%82%AD%E3%83%BC%E3%83%86%E3%83%BC%E3%83%96%E3%83%ABgphkhashtable%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%9F%E6%A4%9C%E7%9F%A5"><span>ホットキーテーブル(gphkHashTable)を利用した検知</span></a></li></ul><button class="border-t border-white/20 w-full mt-3 py-2 flex items-center space-x-1 text-xs font-medium uppercase tracking-wide hover:text-white"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="w-3 h-3"><path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path></svg><span>Show more</span></button></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Elastic Security Labs Newsletter</h4><div><a target="_blank" class="button inline-flex" href="https://www.elastic.co/elastic-security-labs/newsletter?utm_source=security-labs">Sign Up</a></div></div></div></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl my-5 md:my-10 max-w-3xl mx-auto flex flex-col items-center shadow-2xl"><h4 class="font-bold leading-tight text-lg md:text-2xl">Share this article</h4><div class="flex flex-wrap items-center justify-center mt-4 space-x-4"><a class="flex items-center space-x-2 button" href="https://twitter.com/intent/tweet?text=未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知&amp;url=https://www.elastic.co/security-labs/detecting-hotkey-based-keyloggers-jp" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Twitter" title="Share this article on Twitter"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>Twitter</span></a><a class="flex items-center space-x-2 button" href="https://www.facebook.com/sharer/sharer.php?u=https://www.elastic.co/security-labs/detecting-hotkey-based-keyloggers-jp" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Facebook" title="Share this article on Facebook"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M22.5 12c0-5.799-4.701-10.5-10.5-10.5S1.5 6.201 1.5 12c0 5.301 3.901 9.699 9 10.401V14.4h-2.7v-2.7h2.7v-2.1c0-2.7 1.8-4.2 4.2-4.2 1.2 0 2.1.1 2.4.2v2.4h-1.5c-1.2 0-1.5.6-1.5 1.5v1.8h3l-.3 2.7h-2.7V22C18.599 21.3 22.5 17.301 22.5 12z"></path></svg><span>Facebook</span></a><a class="flex items-center space-x-2 button" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.elastic.co/security-labs/detecting-hotkey-based-keyloggers-jp&amp;title=未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知" target="_blank" rel="noopener noreferrer" aria-label="Share this article on LinkedIn" title="Share this article on LinkedIn"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"></path></svg><span>LinkedIn</span></a><a class="flex items-center space-x-2 button" href="https://reddit.com/submit?url=https://www.elastic.co/security-labs/detecting-hotkey-based-keyloggers-jp&amp;title=未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Reddit" title="Share this article on Reddit"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill-rule="evenodd" clip-rule="evenodd" d="M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM19.6879 11.0584C19.8819 11.3352 19.9916 11.6622 20.004 12C20.0091 12.3306 19.9205 12.656 19.7485 12.9384C19.5765 13.2208 19.3281 13.4488 19.032 13.596C19.0455 13.7717 19.0455 13.9483 19.032 14.124C19.032 16.812 15.9 18.996 12.036 18.996C8.172 18.996 5.04 16.812 5.04 14.124C5.02649 13.9483 5.02649 13.7717 5.04 13.596C4.80919 13.49 4.6042 13.335 4.43923 13.1419C4.27427 12.9487 4.15327 12.722 4.08462 12.4775C4.01598 12.2329 4.00133 11.9764 4.04169 11.7256C4.08205 11.4748 4.17646 11.2358 4.31837 11.0251C4.46028 10.8145 4.6463 10.6372 4.86354 10.5056C5.08078 10.3739 5.32404 10.2911 5.57646 10.2629C5.82889 10.2346 6.08444 10.2616 6.32541 10.3419C6.56638 10.4222 6.78701 10.5539 6.972 10.728C8.35473 9.79023 9.98146 9.27718 11.652 9.252L12.54 5.088C12.55 5.03979 12.5694 4.99405 12.5972 4.95341C12.625 4.91277 12.6605 4.87805 12.7018 4.85127C12.7431 4.82448 12.7894 4.80615 12.8378 4.79735C12.8862 4.78855 12.9359 4.78945 12.984 4.8L15.924 5.388C16.0676 5.14132 16.2944 4.9539 16.5637 4.85937C16.833 4.76484 17.1272 4.7694 17.3934 4.87222C17.6597 4.97505 17.8806 5.1694 18.0164 5.42041C18.1523 5.67141 18.1942 5.96262 18.1348 6.24177C18.0753 6.52092 17.9182 6.76972 17.6918 6.94352C17.4654 7.11732 17.1845 7.20473 16.8995 7.19006C16.6144 7.1754 16.3439 7.05962 16.1366 6.8635C15.9292 6.66738 15.7985 6.40378 15.768 6.12L13.2 5.58L12.42 9.324C14.0702 9.3594 15.6749 9.87206 17.04 10.8C17.2839 10.566 17.5902 10.4074 17.9221 10.3436C18.254 10.2797 18.5973 10.3132 18.9106 10.4401C19.2239 10.5669 19.4939 10.7817 19.6879 11.0584ZM8.20624 12.5333C8.07438 12.7307 8.004 12.9627 8.004 13.2C8.004 13.5183 8.13043 13.8235 8.35547 14.0485C8.58051 14.2736 8.88574 14.4 9.204 14.4C9.44134 14.4 9.67335 14.3296 9.87068 14.1978C10.068 14.0659 10.2218 13.8785 10.3127 13.6592C10.4035 13.4399 10.4272 13.1987 10.3809 12.9659C10.3346 12.7331 10.2204 12.5193 10.0525 12.3515C9.8847 12.1836 9.67089 12.0694 9.43811 12.0231C9.20533 11.9768 8.96405 12.0005 8.74478 12.0913C8.52551 12.1822 8.33809 12.336 8.20624 12.5333ZM12.012 17.424C13.0771 17.4681 14.1246 17.1416 14.976 16.5V16.548C15.0075 16.5173 15.0327 16.4806 15.05 16.4402C15.0674 16.3997 15.0766 16.3563 15.0772 16.3122C15.0777 16.2682 15.0696 16.2245 15.0533 16.1837C15.0369 16.1428 15.0127 16.1055 14.982 16.074C14.9513 16.0425 14.9146 16.0173 14.8742 16C14.8337 15.9826 14.7903 15.9734 14.7462 15.9728C14.7022 15.9723 14.6585 15.9804 14.6177 15.9967C14.5768 16.0131 14.5395 16.0373 14.508 16.068C13.7797 16.5904 12.895 16.8487 12 16.8C11.1061 16.8399 10.2255 16.5732 9.504 16.044C9.44182 15.993 9.36289 15.9669 9.28256 15.9708C9.20222 15.9748 9.12622 16.0085 9.06935 16.0653C9.01247 16.1222 8.97879 16.1982 8.97484 16.2786C8.97089 16.3589 8.99697 16.4378 9.048 16.5C9.89937 17.1416 10.9469 17.4681 12.012 17.424ZM14.0933 14.2458C14.2907 14.3776 14.5227 14.448 14.76 14.448L14.748 14.496C14.9107 14.4978 15.0721 14.4664 15.2223 14.4038C15.3725 14.3413 15.5084 14.2488 15.6218 14.1321C15.7352 14.0154 15.8236 13.8768 15.8818 13.7248C15.9399 13.5728 15.9665 13.4106 15.96 13.248C15.96 13.0107 15.8896 12.7787 15.7578 12.5813C15.6259 12.384 15.4385 12.2302 15.2192 12.1393C14.9999 12.0485 14.7587 12.0248 14.5259 12.0711C14.2931 12.1174 14.0793 12.2316 13.9115 12.3995C13.7436 12.5673 13.6294 12.7811 13.5831 13.0139C13.5368 13.2467 13.5605 13.4879 13.6513 13.7072C13.7422 13.9265 13.896 14.1139 14.0933 14.2458Z" fill="currentColor"></path></svg><span>Reddit</span></a></div></div></article></main><footer class="mt-auto text-xs md:text-sm"><div class="container py-6 flex flex-col md:flex-row gap-2 md:gap-0 justify-between items-center"><div class="text-zinc-300"><nav><ul class="flex space-x-4"><li><a class="hover:text-white font-medium" href="/security-labs/sitemap.xml">Sitemap</a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://elastic.co?utm_source=elastic-search-labs&amp;utm_medium=referral&amp;utm_campaign=search-labs&amp;utm_content=footer"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="inline-block w-3 h-3"><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"></path></svg><span>Elastic.co</span></a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://twitter.com/elasticseclabs"><svg class="w-4 h-4 inline-block w-3 h-3" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>@elasticseclabs</span></a></li></ul></nav></div><div class="flex flex-col space-y-1 text-zinc-300"><p>© <!-- -->2025<!-- -->. Elasticsearch B.V. All Rights Reserved.</p></div></div></footer></main></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"article":{"title":"未公開のカーネルデータ構造を使ったホットキー型キーロガーの検知","slug":"detecting-hotkey-based-keyloggers-jp","date":"2025-03-04","description":"本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。","image":"Security Labs Images 12.jpg","tags":["detection engineering","threat detection"],"body":{"raw":"\n## 未公開のカーネルデータ構造を使った\n## ホットキー型キーロガーの検知  \n\n 本記事では、ホットキー型キーロガーとは何かについてと、その検知方法について紹介します。具体的には、ホットキー型キーロガーがどのようにしてキー入力を盗み取るのかを解説した後、カーネルレベルに存在する未公開(Undocumented)のホットキーテーブルを活用した検知手法について説明します。\n\n## はじめに\n\n　Elastic Security Labsでは2024年5月、[Elastic Defend](https://www.elastic.co/guide/en/integrations/current/endpoint.html)のバージョン 8.12 より追加された、Windows上で動作するキーロガーの検知を強化する新機能を紹介する[記事](https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp)を公開しました 。具体的には、サイバー攻撃で一般的に使われる4種類のキーロガー(ポーリング型キーロガー、フッキング型キーロガー、Raw Input Modelを用いたキーロガー、DirectInputを用いたキーロガー)を挙げ、それらに対する私たちが提供した検知手法についてを解説しました。具体的には[Event Tracing for Windows](https://learn.microsoft.com/ja-jp/windows-hardware/drivers/devtest/event-tracing-for-windows--etw-) (ETW)における、Microsoft-Windows-Win32kプロバイダを用いた振る舞い検知の方法についてを紹介しました。  \n　記事公開後、大変光栄なことに記事がMicrosoft社のPrincipal Security Researcherである[Jonathan Bar Or](https://jonathanbaror.com/)氏の目に留まり、「ホットキー型キーロガーもある」といった貴重なご意見とともに、そのPoCコードも公開してくださりました。そこで本記事では、氏が公開したホットキー型キーロガーのPoCコードである「[Hotkeyz](https://github.com/yo-yo-yo-jbo/hotkeyz)」 をもとに、本キーロガーの検知手法の一案についてを述べたいと思います。\n\n## ホットキー型キーロガーの概要\n\n### そもそもホットキーとは何か？\n\n　ホットキー型キーロガーについて説明する前に、まずホットキーとは何かを解説します。ホットキーとは、キーボードショートカットの一種であり、コンピュータにおいて、特定の機能を直接呼び出して実行させるキーまたはキーの組み合わせのことを指します。例えばWindowsにおいてタスク(ウィンドウ)を切り替える際に「**Alt \\+ Tab**」を押している人も多いかと思います。この時使っているこの「**Alt \\+ Tab**」が、タスク切り替え機能を直接呼び出す「ホットキー」にあたります。\n\n*(注: ホットキー以外にも、キーボードショートカットは存在しますが、本記事ではそれらは対象外です。また本記事に記載の事項はすべて、筆者が検証に利用した環境である、仮想化ベースのセキュリティが動作していないWindows 10 version 22H2 OS Build 19045.5371が前提になります。他のWindowsのバージョンではまた内部の構造や挙動が違う場合があること、ご注意ください。)*\n\n### 任意のホットキーが登録できることを悪用する\n\n　先ほどの例のようにWindowsで予め設定されたホットキーを使う以外にも、実は自分で任意のホットキーを登録することも可能です。登録方法は様々ありますが、[RegisterHotKey](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-registerhotkey)というWindows APIを使えば、指定のキーをホットキーとして登録することができます。例えば、以下が`RegisterHotKey` APIを使って「A」([virtual-key code](https://learn.microsoft.com/ja-jp/windows/win32/inputdev/virtual-key-codes)で0x41)キーを、グローバルなホットキーとして登録するためのコードの例です。\n\n```c\n/*\nBOOL RegisterHotKey(\n  [in, optional] HWND hWnd, \n  [in]           int  id,\n  [in]           UINT fsModifiers,\n  [in]           UINT vk\n);\n*/\nRegisterHotKey(NULL, 1, 0, 0x41);\n```\n\n　ホットキーとして登録後、登録されたキーが押下された場合、`RegisterHotKey` APIの第一引数で指定したウィンドウ(NULLの場合はホットキー登録時のスレッド)の[メッセージキュー](https://learn.microsoft.com/ja-jp/windows/win32/winmsg/about-messages-and-message-queues)に、[WM\\_HOTKEYメッセージ](https://learn.microsoft.com/ja-jp/windows/win32/inputdev/wm-hotkey)が届くようになります。以下は実際に、メッセージキューにWM\\_HOTKEY メッセージが来ていないかを[GetMessage](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getmessage) APIを使って確認し、届いていた場合、WM\\_HOTKEYメッセージに内包されていた virtual-key code(今回の場合「0x41」)を取り出しているコード(メッセージループ)になります。\n\n```c\nMSG msg = { 0 };\nwhile (GetMessage(\u0026msg, NULL, 0, 0)) {\n    if (msg.message == WM_HOTKEY) {\n        int vkCode = HIWORD(msg.lParam);\n        std::cout \u003c\u003c \"WM_HOTKEY received! Virtual-Key Code: 0x\"\n            \u003c\u003c std::hex \u003c\u003c vkCode \u003c\u003c std::dec \u003c\u003c std::endl;\n    }\n}\n```\n\n 　これは言い換えると、例えばメモ帳アプリに文章を書く際、Aキーから入力された文字は、文字としての入力ではなく、グローバルなホットキーとして認識されることになります。\n\n　今回は「A」のみをホットキーとして登録しましたが、複数のキー(BやCやD)を同時に個々のホットキーとして登録することも可能です。これはつまり、`RegisterHotKey` APIでホットキーとして登録可能な範囲の任意のキー(virtual-key code)の入力は、すべてグローバルなホットキーとして横取りすることも可能であるということです。そしてホットキー型キーロガーはこの性質を悪用して、ユーザから入力されたキーを盗み取ります。  \n　筆者が手元の環境で試した限りは、英数字と基本的な記号キーだけでなく、それらにSHIFT修飾子をつけたすべてキーが`RegisterHotKey` APIでホットキーとして登録可能でした。そのため、キーロガーとして問題なく、情報の窃取に必要なキーの監視ができると言えるでしょう。\n\n### 密かにキーを盗み取る\n\n　ホットキー型キーロガーがキーを盗み取る実際の流れについてを、Hotkeyzを例に紹介します。  \nHotkeyzでは最初に、各英数字キーに加えて、一部のキー(VK\\_SPACEやVK\\_RETURNなど)のvirtual-key codeを、`RegisterHotKey` APIを使い個々のホットキーとして登録します。その後キーロガー内のメッセージループにて、登録されたホットキーのWM\\_HOTKEYメッセージが、メッセージキューに到着していないかを[PeekMessageW](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-peekmessagew) APIを使って確認します。そしてWM\\_HOTKEYメッセージが来ていた場合、メッセージに内包されているvirtual-key codeを取り出して、最終的にはそれをテキストファイルに保存します。以下がメッセージループ内のコードのコードです。特に重要な部分を抜粋して掲載しています。\n\n```c\nwhile (...)\n{\n    // Get the message in a non-blocking manner and poll if necessary\n    if (!PeekMessageW(\u0026tMsg, NULL, WM_HOTKEY, WM_HOTKEY, PM_REMOVE))\n    {\n        Sleep(POLL_TIME_MILLIS);\n        continue;\n    }\n....\n   // Get the key from the message\n   cCurrVk = (BYTE)((((DWORD)tMsg.lParam) \u0026 0xFFFF0000) \u003e\u003e 16);\n\n   // Send the key to the OS and re-register\n   (VOID)UnregisterHotKey(NULL, adwVkToIdMapping[cCurrVk]);\n   keybd_event(cCurrVk, 0, 0, (ULONG_PTR)NULL);\n   if (!RegisterHotKey(NULL, adwVkToIdMapping[cCurrVk], 0, cCurrVk))\n   {\n       adwVkToIdMapping[cCurrVk] = 0;\n       DEBUG_MSG(L\"RegisterHotKey() failed for re-registration (cCurrVk=%lu,    LastError=%lu).\", cCurrVk, GetLastError());\n       goto lblCleanup;\n   }\n   // Write to the file\n  if (!WriteFile(hFile, \u0026cCurrVk, sizeof(cCurrVk), \u0026cbBytesWritten, NULL))\n  {\n....\n```\n\n　ここで特筆するべき点としては、ユーザにキーロガーの存在を気取られないため、メッセージからvirtual-key codeを取り出した時点で、いったんそのキーのホットキー登録を[UnregisterHotKey](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-unregisterhotkey) APIを使って解除し、その上で[keybd\\_event](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-keybd_event)を使ってキーを送信することです。これにより、ユーザからは問題無くキーが入力出来ているように見え、キーが裏で窃取されていることに気が付かれにくくなります。そしてキーを送信した後は再びそのキーを`RegisterHotKey` APIを使ってホットキーとして登録し、再びユーザからの入力を待ちます。以上が、ホットキー型キーロガーの仕組みです。\n\n## **ホットキー型キーロガーの検知手法**\n\n　ホットキー型キーロガーとは何かやその仕組みについて理解したところで、次にこれをどのように検知するかについてを説明します。\n\n### ETWではRegisterHotKey APIは監視していない\n\n　以前の記事で書いた方法と同様に、まずはホットキー型キーロガーも[Event Tracing for Windows](https://learn.microsoft.com/ja-jp/windows/win32/etw/about-event-tracing) (ETW) を利用して検知が出来ないかを検討・調査しました。その結果、ETWでは`RegisterHotKey` APIや`UnRegisterHotKey` APIを監視していないことがすぐに判明しました。Microsoft-Windows-Win32k プロダイバーのマニフェストファイルの調査に加えて、`RegisterHotKey`のAPIの内部(具体的にはwin32kfull.sysにある`NtUserRegisterHotKey`)をリバースエンジニアリングをしたものの、これらのAPIが実行される際、ETWのイベントを送信しているような形跡は残念ながら見つかりませんでした。  \n　以下の図は、ETWで監視対象となっている`GetAsyncKeyState`(`NtUserGetAsyncKeyState`)と、`NtUserRegisterHotKey`の逆コンパイル結果を比較したものを示しています。`NtUserGetAsyncKeyState`の方には関数の冒頭に、`EtwTraceGetAsyncKeyState`というETWのイベント書き出しに紐づく関数が存在しますが、`NtUserRegisterHotKey`には存在しないのが見て取れます。\n\n![図1: NtUserGetAsyncKeyStateとNtUserRegisterHotKeyの逆コンパイル結果の比較](/assets/images/detecting-hotkey-based-keyloggers/image3.png)\n　  \n　Microsoft-Windows-Win32k 以外のETWプロバイダーを使って、間接的に`RegisterHotKey` APIを呼び出しを監視する案もでたものの、次に紹介する、ETWを使わず「ホットキーテーブル」を利用した検知手法が、`RegisterHotKey` APIを監視するのと同様かそれ以上の効果が得られることが分かり、最終的にはこの案を採用することにしました。\n\n### ホットキーテーブル(gphkHashTable)を利用した検知\n\n　ETWでは`RegisterHotKey` APIの呼び出しを直接監視出来ないことが判明した時点で、ETWを利用せずに検知する方法を検討することにしました。検討の最中、「そもそも登録されたホットキーの情報がどこかに保存されているのではないか？」「もし保存されているとしたら、その情報が検知に使えるのではないか？」という考えに至りました。その仮説をもとに調査した結果、すぐに`NtUserRegisterHotkey`内にて`gphkHashTable`というラベルがつけられたハッシュテーブルを発見することが出来ました。Microsoft社が公開しているオンラインのドキュメント類を調査しても`gphkHashTable`についての情報はなかったため、これは未公開(undocumented)のカーネルデータ構造のようです。\n\n![図2: ホットキーテーブルgphkHashTable。NtUserRegisterHotKey内で呼ばれたRegisterHotKey関数内にて発見](/assets/images/detecting-hotkey-based-keyloggers/image1.png)\n\n　リバースエンジニアリングをした結果、このハッシュテーブルは、登録されたホットキーの情報を持つオブジェクトを保存しており、各オブジェクトは`RegisterHotKey` APIの引数にて指定されたvirtual-key codeや修飾子の情報を保持していることが分かりました。以下の図(右)がホットキーのオブジェクト(**HOT\\_KEY**と命名)の構造体の定義の一部と、図(左)が実際にwindbg上で`gphkHashTable`にアクセスした上で、登録されたホットキーのオブジェクトを見た時の様子です。\n\n![図3: ホットキーオブジェクトの詳細。Windbg画面(図左)とHOT\\_KEY構造体の詳細](/assets/images/detecting-hotkey-based-keyloggers/image4.png)\n\n　リバースエンジニアリングをした結果をまとめると、ghpkHashTableは図4のような構造になっていることがわかりました。具体的には、`RegisterHotKey` APIで指定されたvirtual-key codeに対して0x80の余剰演算をした結果をハッシュテーブルのインデックスにしていました。そして同じインデックスを持つホットキーオブジェクトを連結リストで結ぶことで、virtual-key codeが同じでも、修飾子が違うホットキーの情報も保持・管理出来るようになっています。  \n\n![図4: gphkHashTableの構造](/assets/images/detecting-hotkey-based-keyloggers/image6.png)\n\n　つまり`gphkHashTable`で保持している全てのHOT\\_KEYオブジェクトを走査すれば、登録されている全ホットキーの情報が取得できるということになります。取得した結果、主要なキー(例えば単体の英数字キー）全てが個々のホットキーとして登録されていれば、ホットキー型キーロガーが動作していることを示す強い根拠となります。\n\n## 検知ツールを作成する\n\n　では次に、実際に検知ツールの方を実装していきます。`gphkHashTable`自体はカーネル空間に存在するため、ユーザモードのアプリケーションからはアクセス出来ません。そのため検知のために、デバイスドライバを書くことにしました。具体的には`gphkHashTable`のアドレスを取得した後、ハッシュテーブルに保存されている全オブジェクトを走査した上で、ホットキーとして登録されている英数字キーの数が一定数以上ならば、ホットキー型キーロガーが存在する可能性がある事を知らせてくるデバイスドライバを作成することにしました。\n\n### gphkHashTableのアドレスを取得する方法\n\n　検知ツールを作成するにあたり、最初に直面した課題としては「gphkHashTableのアドレスをどのようにして取得すればよいのか？」ということです。悩んだ結果、**win32kfull.sys**のメモリ空間内でgphkHashTableにアクセスしている命令から直接gphkHashTableのアドレスを取得することにしました。  \n　リバースエンジニアリングした結果、`IsHotKey`という関数内では、関数の冒頭部分にあるlea命令(lea rbx, gphkHashTable)にて、gphkHashTableのアクセスしていることがわかりました。この命令のオプコードバイト(0x48, 0x8d, 0x1d)部分をシグネチャに該当行を探索して、得られた32bit(4バイト)のオフセットからgphkHashTableのアドレスを算出することにしました。  \n\n![図5: IsHotKey関数内 ](/assets/images/detecting-hotkey-based-keyloggers/image5.png)\n \n　加えて、IsHotKey関数自体もエクスポート関数でないため、そのアドレスも何らかの方法で取得しなければいけません。そこでさらなるリバースエンジニアリングの結果、`EditionIsHotKey`というエクスポートされた関数内で、`IsHotKey`関数が呼ばれていることがわかりました。そこでEditionIsHotKey関数から前述と同様の方法で、IsHotKey関数のアドレスを算出することにしました。(補足ですが、**win32kfull.sys**のベースアドレスに関しては`PsLoadedModuleList`というAPIで探せます。)\n\n　## **win32kfull.sys**のメモリ空間にアクセスするには \n \n 　**gphkHashTable**のアドレスを取得する方法について検討が終わったところで、実際に**win32kfull.sys**のメモリ空間にアクセスして、**gphkHashTable**のアドレスを取得するためのコードを書き始めました。この時直面した課題としては、**win32kfull.sys**は「セッションドライバ」であるという点ですが、ここではまず「セッション」とは何かについて、簡単に説明します。  \n　Windowsでは一般的にユーザがログインした際、ユーザ毎に個別に「セッション」(1番以降のセッション番号)が割り当てられます。かなり大雑把に説明すると、最初にログインしたユーザには「セッション１」が割り当てられ、その状態で別のユーザがログインした場合今度は「セッション２」が割り当てられます。そして各ユーザは個々のセッション内で、それぞれのデスクトップ環境を持ちます。  \n　この時、セッション別(ログインユーザ別)に管理するべきカーネルのデータは、カーネルメモリ内の「セッション空間」というセッション別の分離したメモリ空間で管理され、win32k ドライバが管理しているようなGUIオブジェクト(ウィンドウ、マウス・キーボード入力の情報等)もこれに該当します。これにより、ユーザ間で画面や入力情報が混ざることがないのです。(かなり大まかな説明のため、より詳しくセッションについて知りたい方はJames Forshaw氏の[こちらのブログ記事](https://googleprojectzero.blogspot.com/2016/01/raising-dead.html)を読むことをおすすめします。)  \n\n![図6: セッションの概要。 セッション0はサービスプロセス専用のセッション](/assets/images/detecting-hotkey-based-keyloggers/image2.png)\n　　  \n以上の背景から、**win32kfull.sys**は「セッションドライバ」と呼ばれています。つまり、例えば最初のログインユーザのセッション(セッション1)内で登録されたホットキーの情報は、同じセッション内からしかアクセスできないということです。ではどうすれば良いのかというと、このような場合、[KeStackAttachProcess](https://learn.microsoft.com/ja-jp/windows-hardware/drivers/ddi/ntifs/nf-ntifs-kestackattachprocess)が利用できることが[知られています](https://eversinc33.com/posts/kernel-mode-keylogging.html)。  \n　KeStackAttachProcessは、現在のスレッドを指定のプロセスのアドレス空間に一時的にアタッチすることが出来ます。この時、対象のセッションにいるGUIプロセス、より正確には**win32kfull.sys**をロードしているプロセスにアタッチすることが出来れば、対象セッションの**win32kfull.sys**やそのデータにアクセスすることが出来ます。今回は、ログインユーザが１ユーザであることを仮定して、各ユーザのログオン操作を担うプロセスである**winlogon.exe**を探してアタッチすることにしました。\n\n### 登録されているホットキーを確認する\n\n　**winlogon.exe**のプロセスにアタッチし、**gphkHashTable**のアドレスを特定出来た後は、後は**gphkHashTable**をスキャンして登録されたホットキーを確認するだけです。以下がその抜粋版のコードです。\n\n```c\nBOOL CheckRegisteredHotKeys(_In_ const PVOID\u0026 gphkHashTableAddr)\n{\n-[skip]-\n    // Cast the gphkHashTable address to an array of pointers.\n    PVOID* tableArray = static_cast\u003cPVOID*\u003e(gphkHashTableAddr);\n    // Iterate through the hash table entries.\n    for (USHORT j = 0; j \u003c 0x80; j++)\n    {\n        PVOID item = tableArray[j];\n        PHOT_KEY hk = reinterpret_cast\u003cPHOT_KEY\u003e(item);\n        if (hk)\n        {\n            CheckHotkeyNode(hk);\n        }\n    }\n-[skip]-\n}\n\nVOID CheckHotkeyNode(_In_ const PHOT_KEY\u0026 hk)\n{\n    if (MmIsAddressValid(hk-\u003epNext)) {\n        CheckHotkeyNode(hk-\u003epNext);\n    }\n\n    // Check whether this is a single numeric hotkey.\n    if ((hk-\u003evk \u003e= 0x30) \u0026\u0026 (hk-\u003evk \u003c= 0x39) \u0026\u0026 (hk-\u003emodifiers1 == 0))\n    {\n        KdPrint((\"[+] hk-\u003eid: %u hk-\u003evk: %x\\n\", hk-\u003eid, hk-\u003evk));\n        hotkeyCounter++;\n    }\n    // Check whether this is a single alphabet hotkey.\n    else if ((hk-\u003evk \u003e= 0x41) \u0026\u0026 (hk-\u003evk \u003c= 0x5A) \u0026\u0026 (hk-\u003emodifiers1 == 0))\n    {\n        KdPrint((\"[+] hk-\u003eid: %u hk-\u003evk: %x\\n\", hk-\u003eid, hk-\u003evk));\n        hotkeyCounter++;\n    }\n-[skip]-\n}\n....\nif (CheckRegisteredHotKeys(gphkHashTableAddr) \u0026\u0026 hotkeyCounter \u003e= 36)\n{\n   detected = TRUE;\n   goto Cleanup;\n}\n```\n\n　コード自体は難しくなく、ハッシュテーブルの各インデックスの先頭から順に、連結リストをたどりながらすべての**HOT\\_KEY**オブジェクトにアクセスして、登録されているホットキーが単体の英数字キーか否かを確認しています。作成した検知ツールでは、すべての単体英数字キーがホットキーとして登録  \nされていた場合、ホットキー型キーロガーが存在するとしてアラートを挙げます。また、今回実装の簡略化のため、英数字単体キーのホットキーのみを対象としていますが、SHIFTなどの修飾子付きのホットキーも容易に調べることが可能です。\n\n### Hotkeyzを検知する\n\n　検知ツール(Hotkey-based Keylogger Detector)は以下にて公開しました。使い方も以下に記載していますので、興味ある方はぜひご覧ください。加えて本研究は[NULLCON Goa 2025](https://nullcon.net/goa-2025/speaker-windows-keylogger-detection)でも発表しましたので、その[発表スライド](https://docs.google.com/presentation/d/1B0Gdfpo-ER2hPjDbP_NNoGZ8vXP6X1_BN7VZCqUgH8c/edit?usp=sharing)も併せてご覧いただけます。\n\n*[https://github.com/AsuNa-jp/HotkeybasedKeyloggerDetector](https://github.com/AsuNa-jp/HotkeybasedKeyloggerDetector)\n\n　最後に、本ツールを用いて実際にHotkeyzを検知する様子を収録したデモ動画が以下になります。\n\n[DEMO\\_VIDEO.mp4](https://drive.google.com/file/d/1koGLqA5cPlhL8C07MLg9VDD9-SW2FM9e/view?usp=drive_link)\n\n## 謝辞\n\n　[前回の記事](https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp)を読んで下さり、その上でホットキー型キーロガーの手法について教えてくださり、その上そのPoCとなるHotkeyzを公開してくださった、Jonathan Bar Or氏に心より感謝致します。","code":"var Component=(()=\u003e{var a=Object.create;var o=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var w=(r,e)=\u003e()=\u003e(e||r((e={exports:{}}).exports,e),e.exports),f=(r,e)=\u003e{for(var t in e)o(r,t,{get:e[t],enumerable:!0})},h=(r,e,t,s)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let i of k(e))!y.call(r,i)\u0026\u0026i!==t\u0026\u0026o(r,i,{get:()=\u003ee[i],enumerable:!(s=g(e,i))||s.enumerable});return r};var m=(r,e,t)=\u003e(t=r!=null?a(p(r)):{},h(e||!r||!r.__esModule?o(t,\"default\",{value:r,enumerable:!0}):t,r)),u=r=\u003eh(o({},\"__esModule\",{value:!0}),r);var d=w((P,l)=\u003e{l.exports=_jsx_runtime});var K={};f(K,{default:()=\u003eT,frontmatter:()=\u003eH});var n=m(d()),H={title:\"\\u672A\\u516C\\u958B\\u306E\\u30AB\\u30FC\\u30CD\\u30EB\\u30C7\\u30FC\\u30BF\\u69CB\\u9020\\u3092\\u4F7F\\u3063\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u691C\\u77E5\",slug:\"detecting-hotkey-based-keyloggers-jp\",date:\"2025-03-04\",description:\"\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3068\\u306F\\u4F55\\u304B\\u306B\\u3064\\u3044\\u3066\\u3068\\u3001\\u305D\\u306E\\u691C\\u77E5\\u65B9\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304C\\u3069\\u306E\\u3088\\u3046\\u306B\\u3057\\u3066\\u30AD\\u30FC\\u5165\\u529B\\u3092\\u76D7\\u307F\\u53D6\\u308B\\u306E\\u304B\\u3092\\u89E3\\u8AAC\\u3057\\u305F\\u5F8C\\u3001\\u30AB\\u30FC\\u30CD\\u30EB\\u30EC\\u30D9\\u30EB\\u306B\\u5B58\\u5728\\u3059\\u308B\\u672A\\u516C\\u958B(Undocumented)\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u30C6\\u30FC\\u30D6\\u30EB\\u3092\\u6D3B\\u7528\\u3057\\u305F\\u691C\\u77E5\\u624B\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u8AAC\\u660E\\u3057\\u307E\\u3059\\u3002\",author:[{slug:\"asuka-nakajima\"}],image:\"Security Labs Images 12.jpg\",category:[{slug:\"security-research\"},{slug:\"detection-science\"}],tags:[\"detection engineering\",\"threat detection\"]};function c(r){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",br:\"br\",h3:\"h3\",strong:\"strong\",em:\"em\",code:\"code\",pre:\"pre\",img:\"img\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:\"\\u672A\\u516C\\u958B\\u306E\\u30AB\\u30FC\\u30CD\\u30EB\\u30C7\\u30FC\\u30BF\\u69CB\\u9020\\u3092\\u4F7F\\u3063\\u305F\",children:\"\\u672A\\u516C\\u958B\\u306E\\u30AB\\u30FC\\u30CD\\u30EB\\u30C7\\u30FC\\u30BF\\u69CB\\u9020\\u3092\\u4F7F\\u3063\\u305F\"}),`\n`,(0,n.jsx)(e.h2,{id:\"\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u691C\\u77E5\",children:\"\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u691C\\u77E5\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3068\\u306F\\u4F55\\u304B\\u306B\\u3064\\u3044\\u3066\\u3068\\u3001\\u305D\\u306E\\u691C\\u77E5\\u65B9\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304C\\u3069\\u306E\\u3088\\u3046\\u306B\\u3057\\u3066\\u30AD\\u30FC\\u5165\\u529B\\u3092\\u76D7\\u307F\\u53D6\\u308B\\u306E\\u304B\\u3092\\u89E3\\u8AAC\\u3057\\u305F\\u5F8C\\u3001\\u30AB\\u30FC\\u30CD\\u30EB\\u30EC\\u30D9\\u30EB\\u306B\\u5B58\\u5728\\u3059\\u308B\\u672A\\u516C\\u958B(Undocumented)\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u30C6\\u30FC\\u30D6\\u30EB\\u3092\\u6D3B\\u7528\\u3057\\u305F\\u691C\\u77E5\\u624B\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u8AAC\\u660E\\u3057\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsx)(e.h2,{id:\"\\u306F\\u3058\\u3081\\u306B\",children:\"\\u306F\\u3058\\u3081\\u306B\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000Elastic Security Labs\\u3067\\u306F2024\\u5E745\\u6708\\u3001\",(0,n.jsx)(e.a,{href:\"https://www.elastic.co/guide/en/integrations/current/endpoint.html\",rel:\"nofollow\",children:\"Elastic Defend\"}),\"\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3 8.12 \\u3088\\u308A\\u8FFD\\u52A0\\u3055\\u308C\\u305F\\u3001Windows\\u4E0A\\u3067\\u52D5\\u4F5C\\u3059\\u308B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u691C\\u77E5\\u3092\\u5F37\\u5316\\u3059\\u308B\\u65B0\\u6A5F\\u80FD\\u3092\\u7D39\\u4ECB\\u3059\\u308B\",(0,n.jsx)(e.a,{href:\"https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp\",rel:\"nofollow\",children:\"\\u8A18\\u4E8B\"}),\"\\u3092\\u516C\\u958B\\u3057\\u307E\\u3057\\u305F \\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\\u3001\\u30B5\\u30A4\\u30D0\\u30FC\\u653B\\u6483\\u3067\\u4E00\\u822C\\u7684\\u306B\\u4F7F\\u308F\\u308C\\u308B4\\u7A2E\\u985E\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC(\\u30DD\\u30FC\\u30EA\\u30F3\\u30B0\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3001\\u30D5\\u30C3\\u30AD\\u30F3\\u30B0\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3001Raw Input Model\\u3092\\u7528\\u3044\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3001DirectInput\\u3092\\u7528\\u3044\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC)\\u3092\\u6319\\u3052\\u3001\\u305D\\u308C\\u3089\\u306B\\u5BFE\\u3059\\u308B\\u79C1\\u305F\\u3061\\u304C\\u63D0\\u4F9B\\u3057\\u305F\\u691C\\u77E5\\u624B\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u3092\\u89E3\\u8AAC\\u3057\\u307E\\u3057\\u305F\\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows-hardware/drivers/devtest/event-tracing-for-windows--etw-\",rel:\"nofollow\",children:\"Event Tracing for Windows\"}),\" (ETW)\\u306B\\u304A\\u3051\\u308B\\u3001Microsoft-Windows-Win32k\\u30D7\\u30ED\\u30D0\\u30A4\\u30C0\\u3092\\u7528\\u3044\\u305F\\u632F\\u308B\\u821E\\u3044\\u691C\\u77E5\\u306E\\u65B9\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u3092\\u7D39\\u4ECB\\u3057\\u307E\\u3057\\u305F\\u3002\",(0,n.jsx)(e.br,{}),`\n`,\"\\u8A18\\u4E8B\\u516C\\u958B\\u5F8C\\u3001\\u5927\\u5909\\u5149\\u6804\\u306A\\u3053\\u3068\\u306B\\u8A18\\u4E8B\\u304CMicrosoft\\u793E\\u306EPrincipal Security Researcher\\u3067\\u3042\\u308B\",(0,n.jsx)(e.a,{href:\"https://jonathanbaror.com/\",rel:\"nofollow\",children:\"Jonathan Bar Or\"}),\"\\u6C0F\\u306E\\u76EE\\u306B\\u7559\\u307E\\u308A\\u3001\\u300C\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3082\\u3042\\u308B\\u300D\\u3068\\u3044\\u3063\\u305F\\u8CB4\\u91CD\\u306A\\u3054\\u610F\\u898B\\u3068\\u3068\\u3082\\u306B\\u3001\\u305D\\u306EPoC\\u30B3\\u30FC\\u30C9\\u3082\\u516C\\u958B\\u3057\\u3066\\u304F\\u3060\\u3055\\u308A\\u307E\\u3057\\u305F\\u3002\\u305D\\u3053\\u3067\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u3001\\u6C0F\\u304C\\u516C\\u958B\\u3057\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306EPoC\\u30B3\\u30FC\\u30C9\\u3067\\u3042\\u308B\\u300C\",(0,n.jsx)(e.a,{href:\"https://github.com/yo-yo-yo-jbo/hotkeyz\",rel:\"nofollow\",children:\"Hotkeyz\"}),\"\\u300D \\u3092\\u3082\\u3068\\u306B\\u3001\\u672C\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u691C\\u77E5\\u624B\\u6CD5\\u306E\\u4E00\\u6848\\u306B\\u3064\\u3044\\u3066\\u3092\\u8FF0\\u3079\\u305F\\u3044\\u3068\\u601D\\u3044\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u6982\\u8981\",children:\"\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u6982\\u8981\"}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u305D\\u3082\\u305D\\u3082\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u306F\\u4F55\\u304B\",children:\"\\u305D\\u3082\\u305D\\u3082\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u306F\\u4F55\\u304B\\uFF1F\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306B\\u3064\\u3044\\u3066\\u8AAC\\u660E\\u3059\\u308B\\u524D\\u306B\\u3001\\u307E\\u305A\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u306F\\u4F55\\u304B\\u3092\\u89E3\\u8AAC\\u3057\\u307E\\u3059\\u3002\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u306F\\u3001\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u30B7\\u30E7\\u30FC\\u30C8\\u30AB\\u30C3\\u30C8\\u306E\\u4E00\\u7A2E\\u3067\\u3042\\u308A\\u3001\\u30B3\\u30F3\\u30D4\\u30E5\\u30FC\\u30BF\\u306B\\u304A\\u3044\\u3066\\u3001\\u7279\\u5B9A\\u306E\\u6A5F\\u80FD\\u3092\\u76F4\\u63A5\\u547C\\u3073\\u51FA\\u3057\\u3066\\u5B9F\\u884C\\u3055\\u305B\\u308B\\u30AD\\u30FC\\u307E\\u305F\\u306F\\u30AD\\u30FC\\u306E\\u7D44\\u307F\\u5408\\u308F\\u305B\\u306E\\u3053\\u3068\\u3092\\u6307\\u3057\\u307E\\u3059\\u3002\\u4F8B\\u3048\\u3070Windows\\u306B\\u304A\\u3044\\u3066\\u30BF\\u30B9\\u30AF(\\u30A6\\u30A3\\u30F3\\u30C9\\u30A6)\\u3092\\u5207\\u308A\\u66FF\\u3048\\u308B\\u969B\\u306B\\u300C\",(0,n.jsx)(e.strong,{children:\"Alt + Tab\"}),\"\\u300D\\u3092\\u62BC\\u3057\\u3066\\u3044\\u308B\\u4EBA\\u3082\\u591A\\u3044\\u304B\\u3068\\u601D\\u3044\\u307E\\u3059\\u3002\\u3053\\u306E\\u6642\\u4F7F\\u3063\\u3066\\u3044\\u308B\\u3053\\u306E\\u300C\",(0,n.jsx)(e.strong,{children:\"Alt + Tab\"}),\"\\u300D\\u304C\\u3001\\u30BF\\u30B9\\u30AF\\u5207\\u308A\\u66FF\\u3048\\u6A5F\\u80FD\\u3092\\u76F4\\u63A5\\u547C\\u3073\\u51FA\\u3059\\u300C\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u300D\\u306B\\u3042\\u305F\\u308A\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:\"(\\u6CE8: \\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u4EE5\\u5916\\u306B\\u3082\\u3001\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u30B7\\u30E7\\u30FC\\u30C8\\u30AB\\u30C3\\u30C8\\u306F\\u5B58\\u5728\\u3057\\u307E\\u3059\\u304C\\u3001\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u305D\\u308C\\u3089\\u306F\\u5BFE\\u8C61\\u5916\\u3067\\u3059\\u3002\\u307E\\u305F\\u672C\\u8A18\\u4E8B\\u306B\\u8A18\\u8F09\\u306E\\u4E8B\\u9805\\u306F\\u3059\\u3079\\u3066\\u3001\\u7B46\\u8005\\u304C\\u691C\\u8A3C\\u306B\\u5229\\u7528\\u3057\\u305F\\u74B0\\u5883\\u3067\\u3042\\u308B\\u3001\\u4EEE\\u60F3\\u5316\\u30D9\\u30FC\\u30B9\\u306E\\u30BB\\u30AD\\u30E5\\u30EA\\u30C6\\u30A3\\u304C\\u52D5\\u4F5C\\u3057\\u3066\\u3044\\u306A\\u3044Windows 10 version 22H2 OS Build 19045.5371\\u304C\\u524D\\u63D0\\u306B\\u306A\\u308A\\u307E\\u3059\\u3002\\u4ED6\\u306EWindows\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3067\\u306F\\u307E\\u305F\\u5185\\u90E8\\u306E\\u69CB\\u9020\\u3084\\u6319\\u52D5\\u304C\\u9055\\u3046\\u5834\\u5408\\u304C\\u3042\\u308B\\u3053\\u3068\\u3001\\u3054\\u6CE8\\u610F\\u304F\\u3060\\u3055\\u3044\\u3002)\"})}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u4EFB\\u610F\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u304C\\u767B\\u9332\\u3067\\u304D\\u308B\\u3053\\u3068\\u3092\\u60AA\\u7528\\u3059\\u308B\",children:\"\\u4EFB\\u610F\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u304C\\u767B\\u9332\\u3067\\u304D\\u308B\\u3053\\u3068\\u3092\\u60AA\\u7528\\u3059\\u308B\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u5148\\u307B\\u3069\\u306E\\u4F8B\\u306E\\u3088\\u3046\\u306BWindows\\u3067\\u4E88\\u3081\\u8A2D\\u5B9A\\u3055\\u308C\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3092\\u4F7F\\u3046\\u4EE5\\u5916\\u306B\\u3082\\u3001\\u5B9F\\u306F\\u81EA\\u5206\\u3067\\u4EFB\\u610F\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3092\\u767B\\u9332\\u3059\\u308B\\u3053\\u3068\\u3082\\u53EF\\u80FD\\u3067\\u3059\\u3002\\u767B\\u9332\\u65B9\\u6CD5\\u306F\\u69D8\\u3005\\u3042\\u308A\\u307E\\u3059\\u304C\\u3001\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-registerhotkey\",rel:\"nofollow\",children:\"RegisterHotKey\"}),\"\\u3068\\u3044\\u3046Windows API\\u3092\\u4F7F\\u3048\\u3070\\u3001\\u6307\\u5B9A\\u306E\\u30AD\\u30FC\\u3092\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u3059\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\\u4F8B\\u3048\\u3070\\u3001\\u4EE5\\u4E0B\\u304C\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3092\\u4F7F\\u3063\\u3066\\u300CA\\u300D(\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/inputdev/virtual-key-codes\",rel:\"nofollow\",children:\"virtual-key code\"}),\"\\u30670x41)\\u30AD\\u30FC\\u3092\\u3001\\u30B0\\u30ED\\u30FC\\u30D0\\u30EB\\u306A\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u3059\\u308B\\u305F\\u3081\\u306E\\u30B3\\u30FC\\u30C9\\u306E\\u4F8B\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-c\",children:`/*\nBOOL RegisterHotKey(\n  [in, optional] HWND hWnd, \n  [in]           int  id,\n  [in]           UINT fsModifiers,\n  [in]           UINT vk\n);\n*/\nRegisterHotKey(NULL, 1, 0, 0x41);\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u5F8C\\u3001\\u767B\\u9332\\u3055\\u308C\\u305F\\u30AD\\u30FC\\u304C\\u62BC\\u4E0B\\u3055\\u308C\\u305F\\u5834\\u5408\\u3001\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u306E\\u7B2C\\u4E00\\u5F15\\u6570\\u3067\\u6307\\u5B9A\\u3057\\u305F\\u30A6\\u30A3\\u30F3\\u30C9\\u30A6(NULL\\u306E\\u5834\\u5408\\u306F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u767B\\u9332\\u6642\\u306E\\u30B9\\u30EC\\u30C3\\u30C9)\\u306E\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/winmsg/about-messages-and-message-queues\",rel:\"nofollow\",children:\"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u30AD\\u30E5\\u30FC\"}),\"\\u306B\\u3001\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/inputdev/wm-hotkey\",rel:\"nofollow\",children:\"WM_HOTKEY\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"}),\"\\u304C\\u5C4A\\u304F\\u3088\\u3046\\u306B\\u306A\\u308A\\u307E\\u3059\\u3002\\u4EE5\\u4E0B\\u306F\\u5B9F\\u969B\\u306B\\u3001\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u30AD\\u30E5\\u30FC\\u306BWM_HOTKEY \\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304C\\u6765\\u3066\\u3044\\u306A\\u3044\\u304B\\u3092\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getmessage\",rel:\"nofollow\",children:\"GetMessage\"}),\" API\\u3092\\u4F7F\\u3063\\u3066\\u78BA\\u8A8D\\u3057\\u3001\\u5C4A\\u3044\\u3066\\u3044\\u305F\\u5834\\u5408\\u3001WM_HOTKEY\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306B\\u5185\\u5305\\u3055\\u308C\\u3066\\u3044\\u305F virtual-key code(\\u4ECA\\u56DE\\u306E\\u5834\\u5408\\u300C0x41\\u300D)\\u3092\\u53D6\\u308A\\u51FA\\u3057\\u3066\\u3044\\u308B\\u30B3\\u30FC\\u30C9(\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u30EB\\u30FC\\u30D7)\\u306B\\u306A\\u308A\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-c\",children:`MSG msg = { 0 };\nwhile (GetMessage(\u0026msg, NULL, 0, 0)) {\n    if (msg.message == WM_HOTKEY) {\n        int vkCode = HIWORD(msg.lParam);\n        std::cout \u003c\u003c \"WM_HOTKEY received! Virtual-Key Code: 0x\"\n            \u003c\u003c std::hex \u003c\u003c vkCode \u003c\u003c std::dec \u003c\u003c std::endl;\n    }\n}\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"\\u3000\\u3053\\u308C\\u306F\\u8A00\\u3044\\u63DB\\u3048\\u308B\\u3068\\u3001\\u4F8B\\u3048\\u3070\\u30E1\\u30E2\\u5E33\\u30A2\\u30D7\\u30EA\\u306B\\u6587\\u7AE0\\u3092\\u66F8\\u304F\\u969B\\u3001A\\u30AD\\u30FC\\u304B\\u3089\\u5165\\u529B\\u3055\\u308C\\u305F\\u6587\\u5B57\\u306F\\u3001\\u6587\\u5B57\\u3068\\u3057\\u3066\\u306E\\u5165\\u529B\\u3067\\u306F\\u306A\\u304F\\u3001\\u30B0\\u30ED\\u30FC\\u30D0\\u30EB\\u306A\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u8A8D\\u8B58\\u3055\\u308C\\u308B\\u3053\\u3068\\u306B\\u306A\\u308A\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u4ECA\\u56DE\\u306F\\u300CA\\u300D\\u306E\\u307F\\u3092\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u3057\\u307E\\u3057\\u305F\\u304C\\u3001\\u8907\\u6570\\u306E\\u30AD\\u30FC(B\\u3084C\\u3084D)\\u3092\\u540C\\u6642\\u306B\\u500B\\u3005\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u3059\\u308B\\u3053\\u3068\\u3082\\u53EF\\u80FD\\u3067\\u3059\\u3002\\u3053\\u308C\\u306F\\u3064\\u307E\\u308A\\u3001\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3067\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u53EF\\u80FD\\u306A\\u7BC4\\u56F2\\u306E\\u4EFB\\u610F\\u306E\\u30AD\\u30FC(virtual-key code)\\u306E\\u5165\\u529B\\u306F\\u3001\\u3059\\u3079\\u3066\\u30B0\\u30ED\\u30FC\\u30D0\\u30EB\\u306A\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u6A2A\\u53D6\\u308A\\u3059\\u308B\\u3053\\u3068\\u3082\\u53EF\\u80FD\\u3067\\u3042\\u308B\\u3068\\u3044\\u3046\\u3053\\u3068\\u3067\\u3059\\u3002\\u305D\\u3057\\u3066\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3053\\u306E\\u6027\\u8CEA\\u3092\\u60AA\\u7528\\u3057\\u3066\\u3001\\u30E6\\u30FC\\u30B6\\u304B\\u3089\\u5165\\u529B\\u3055\\u308C\\u305F\\u30AD\\u30FC\\u3092\\u76D7\\u307F\\u53D6\\u308A\\u307E\\u3059\\u3002\",(0,n.jsx)(e.br,{}),`\n`,\"\\u7B46\\u8005\\u304C\\u624B\\u5143\\u306E\\u74B0\\u5883\\u3067\\u8A66\\u3057\\u305F\\u9650\\u308A\\u306F\\u3001\\u82F1\\u6570\\u5B57\\u3068\\u57FA\\u672C\\u7684\\u306A\\u8A18\\u53F7\\u30AD\\u30FC\\u3060\\u3051\\u3067\\u306A\\u304F\\u3001\\u305D\\u308C\\u3089\\u306BSHIFT\\u4FEE\\u98FE\\u5B50\\u3092\\u3064\\u3051\\u305F\\u3059\\u3079\\u3066\\u30AD\\u30FC\\u304C\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3067\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u53EF\\u80FD\\u3067\\u3057\\u305F\\u3002\\u305D\\u306E\\u305F\\u3081\\u3001\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3068\\u3057\\u3066\\u554F\\u984C\\u306A\\u304F\\u3001\\u60C5\\u5831\\u306E\\u7A83\\u53D6\\u306B\\u5FC5\\u8981\\u306A\\u30AD\\u30FC\\u306E\\u76E3\\u8996\\u304C\\u3067\\u304D\\u308B\\u3068\\u8A00\\u3048\\u308B\\u3067\\u3057\\u3087\\u3046\\u3002\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u5BC6\\u304B\\u306B\\u30AD\\u30FC\\u3092\\u76D7\\u307F\\u53D6\\u308B\",children:\"\\u5BC6\\u304B\\u306B\\u30AD\\u30FC\\u3092\\u76D7\\u307F\\u53D6\\u308B\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304C\\u30AD\\u30FC\\u3092\\u76D7\\u307F\\u53D6\\u308B\\u5B9F\\u969B\\u306E\\u6D41\\u308C\\u306B\\u3064\\u3044\\u3066\\u3092\\u3001Hotkeyz\\u3092\\u4F8B\\u306B\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\",(0,n.jsx)(e.br,{}),`\n`,\"Hotkeyz\\u3067\\u306F\\u6700\\u521D\\u306B\\u3001\\u5404\\u82F1\\u6570\\u5B57\\u30AD\\u30FC\\u306B\\u52A0\\u3048\\u3066\\u3001\\u4E00\\u90E8\\u306E\\u30AD\\u30FC(VK_SPACE\\u3084VK_RETURN\\u306A\\u3069)\\u306Evirtual-key code\\u3092\\u3001\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3092\\u4F7F\\u3044\\u500B\\u3005\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u3057\\u307E\\u3059\\u3002\\u305D\\u306E\\u5F8C\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u5185\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u30EB\\u30FC\\u30D7\\u306B\\u3066\\u3001\\u767B\\u9332\\u3055\\u308C\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306EWM_HOTKEY\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304C\\u3001\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u30AD\\u30E5\\u30FC\\u306B\\u5230\\u7740\\u3057\\u3066\\u3044\\u306A\\u3044\\u304B\\u3092\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-peekmessagew\",rel:\"nofollow\",children:\"PeekMessageW\"}),\" API\\u3092\\u4F7F\\u3063\\u3066\\u78BA\\u8A8D\\u3057\\u307E\\u3059\\u3002\\u305D\\u3057\\u3066WM_HOTKEY\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304C\\u6765\\u3066\\u3044\\u305F\\u5834\\u5408\\u3001\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306B\\u5185\\u5305\\u3055\\u308C\\u3066\\u3044\\u308Bvirtual-key code\\u3092\\u53D6\\u308A\\u51FA\\u3057\\u3066\\u3001\\u6700\\u7D42\\u7684\\u306B\\u306F\\u305D\\u308C\\u3092\\u30C6\\u30AD\\u30B9\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u306B\\u4FDD\\u5B58\\u3057\\u307E\\u3059\\u3002\\u4EE5\\u4E0B\\u304C\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u30EB\\u30FC\\u30D7\\u5185\\u306E\\u30B3\\u30FC\\u30C9\\u306E\\u30B3\\u30FC\\u30C9\\u3067\\u3059\\u3002\\u7279\\u306B\\u91CD\\u8981\\u306A\\u90E8\\u5206\\u3092\\u629C\\u7C8B\\u3057\\u3066\\u63B2\\u8F09\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-c\",children:`while (...)\n{\n    // Get the message in a non-blocking manner and poll if necessary\n    if (!PeekMessageW(\u0026tMsg, NULL, WM_HOTKEY, WM_HOTKEY, PM_REMOVE))\n    {\n        Sleep(POLL_TIME_MILLIS);\n        continue;\n    }\n....\n   // Get the key from the message\n   cCurrVk = (BYTE)((((DWORD)tMsg.lParam) \u0026 0xFFFF0000) \u003e\u003e 16);\n\n   // Send the key to the OS and re-register\n   (VOID)UnregisterHotKey(NULL, adwVkToIdMapping[cCurrVk]);\n   keybd_event(cCurrVk, 0, 0, (ULONG_PTR)NULL);\n   if (!RegisterHotKey(NULL, adwVkToIdMapping[cCurrVk], 0, cCurrVk))\n   {\n       adwVkToIdMapping[cCurrVk] = 0;\n       DEBUG_MSG(L\"RegisterHotKey() failed for re-registration (cCurrVk=%lu,    LastError=%lu).\", cCurrVk, GetLastError());\n       goto lblCleanup;\n   }\n   // Write to the file\n  if (!WriteFile(hFile, \u0026cCurrVk, sizeof(cCurrVk), \u0026cbBytesWritten, NULL))\n  {\n....\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u3053\\u3053\\u3067\\u7279\\u7B46\\u3059\\u308B\\u3079\\u304D\\u70B9\\u3068\\u3057\\u3066\\u306F\\u3001\\u30E6\\u30FC\\u30B6\\u306B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u5B58\\u5728\\u3092\\u6C17\\u53D6\\u3089\\u308C\\u306A\\u3044\\u305F\\u3081\\u3001\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304B\\u3089virtual-key code\\u3092\\u53D6\\u308A\\u51FA\\u3057\\u305F\\u6642\\u70B9\\u3067\\u3001\\u3044\\u3063\\u305F\\u3093\\u305D\\u306E\\u30AD\\u30FC\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u767B\\u9332\\u3092\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-unregisterhotkey\",rel:\"nofollow\",children:\"UnregisterHotKey\"}),\" API\\u3092\\u4F7F\\u3063\\u3066\\u89E3\\u9664\\u3057\\u3001\\u305D\\u306E\\u4E0A\\u3067\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-keybd_event\",rel:\"nofollow\",children:\"keybd_event\"}),\"\\u3092\\u4F7F\\u3063\\u3066\\u30AD\\u30FC\\u3092\\u9001\\u4FE1\\u3059\\u308B\\u3053\\u3068\\u3067\\u3059\\u3002\\u3053\\u308C\\u306B\\u3088\\u308A\\u3001\\u30E6\\u30FC\\u30B6\\u304B\\u3089\\u306F\\u554F\\u984C\\u7121\\u304F\\u30AD\\u30FC\\u304C\\u5165\\u529B\\u51FA\\u6765\\u3066\\u3044\\u308B\\u3088\\u3046\\u306B\\u898B\\u3048\\u3001\\u30AD\\u30FC\\u304C\\u88CF\\u3067\\u7A83\\u53D6\\u3055\\u308C\\u3066\\u3044\\u308B\\u3053\\u3068\\u306B\\u6C17\\u304C\\u4ED8\\u304B\\u308C\\u306B\\u304F\\u304F\\u306A\\u308A\\u307E\\u3059\\u3002\\u305D\\u3057\\u3066\\u30AD\\u30FC\\u3092\\u9001\\u4FE1\\u3057\\u305F\\u5F8C\\u306F\\u518D\\u3073\\u305D\\u306E\\u30AD\\u30FC\\u3092\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3092\\u4F7F\\u3063\\u3066\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u3057\\u3001\\u518D\\u3073\\u30E6\\u30FC\\u30B6\\u304B\\u3089\\u306E\\u5165\\u529B\\u3092\\u5F85\\u3061\\u307E\\u3059\\u3002\\u4EE5\\u4E0A\\u304C\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u4ED5\\u7D44\\u307F\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u691C\\u77E5\\u624B\\u6CD5\",children:(0,n.jsx)(e.strong,{children:\"\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u691C\\u77E5\\u624B\\u6CD5\"})}),`\n`,(0,n.jsx)(e.p,{children:\"\\u3000\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3068\\u306F\\u4F55\\u304B\\u3084\\u305D\\u306E\\u4ED5\\u7D44\\u307F\\u306B\\u3064\\u3044\\u3066\\u7406\\u89E3\\u3057\\u305F\\u3068\\u3053\\u308D\\u3067\\u3001\\u6B21\\u306B\\u3053\\u308C\\u3092\\u3069\\u306E\\u3088\\u3046\\u306B\\u691C\\u77E5\\u3059\\u308B\\u304B\\u306B\\u3064\\u3044\\u3066\\u3092\\u8AAC\\u660E\\u3057\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsx)(e.h3,{id:\"etw\\u3067\\u306Fregisterhotkey-api\\u306F\\u76E3\\u8996\\u3057\\u3066\\u3044\\u306A\\u3044\",children:\"ETW\\u3067\\u306FRegisterHotKey API\\u306F\\u76E3\\u8996\\u3057\\u3066\\u3044\\u306A\\u3044\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u4EE5\\u524D\\u306E\\u8A18\\u4E8B\\u3067\\u66F8\\u3044\\u305F\\u65B9\\u6CD5\\u3068\\u540C\\u69D8\\u306B\\u3001\\u307E\\u305A\\u306F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3082\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/etw/about-event-tracing\",rel:\"nofollow\",children:\"Event Tracing for Windows\"}),\" (ETW) \\u3092\\u5229\\u7528\\u3057\\u3066\\u691C\\u77E5\\u304C\\u51FA\\u6765\\u306A\\u3044\\u304B\\u3092\\u691C\\u8A0E\\u30FB\\u8ABF\\u67FB\\u3057\\u307E\\u3057\\u305F\\u3002\\u305D\\u306E\\u7D50\\u679C\\u3001ETW\\u3067\\u306F\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3084\",(0,n.jsx)(e.code,{children:\"UnRegisterHotKey\"}),\" API\\u3092\\u76E3\\u8996\\u3057\\u3066\\u3044\\u306A\\u3044\\u3053\\u3068\\u304C\\u3059\\u3050\\u306B\\u5224\\u660E\\u3057\\u307E\\u3057\\u305F\\u3002Microsoft-Windows-Win32k \\u30D7\\u30ED\\u30C0\\u30A4\\u30D0\\u30FC\\u306E\\u30DE\\u30CB\\u30D5\\u30A7\\u30B9\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u8ABF\\u67FB\\u306B\\u52A0\\u3048\\u3066\\u3001\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\"\\u306EAPI\\u306E\\u5185\\u90E8(\\u5177\\u4F53\\u7684\\u306B\\u306Fwin32kfull.sys\\u306B\\u3042\\u308B\",(0,n.jsx)(e.code,{children:\"NtUserRegisterHotKey\"}),\")\\u3092\\u30EA\\u30D0\\u30FC\\u30B9\\u30A8\\u30F3\\u30B8\\u30CB\\u30A2\\u30EA\\u30F3\\u30B0\\u3092\\u3057\\u305F\\u3082\\u306E\\u306E\\u3001\\u3053\\u308C\\u3089\\u306EAPI\\u304C\\u5B9F\\u884C\\u3055\\u308C\\u308B\\u969B\\u3001ETW\\u306E\\u30A4\\u30D9\\u30F3\\u30C8\\u3092\\u9001\\u4FE1\\u3057\\u3066\\u3044\\u308B\\u3088\\u3046\\u306A\\u5F62\\u8DE1\\u306F\\u6B8B\\u5FF5\\u306A\\u304C\\u3089\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3067\\u3057\\u305F\\u3002\",(0,n.jsx)(e.br,{}),`\n`,\"\\u4EE5\\u4E0B\\u306E\\u56F3\\u306F\\u3001ETW\\u3067\\u76E3\\u8996\\u5BFE\\u8C61\\u3068\\u306A\\u3063\\u3066\\u3044\\u308B\",(0,n.jsx)(e.code,{children:\"GetAsyncKeyState\"}),\"(\",(0,n.jsx)(e.code,{children:\"NtUserGetAsyncKeyState\"}),\")\\u3068\\u3001\",(0,n.jsx)(e.code,{children:\"NtUserRegisterHotKey\"}),\"\\u306E\\u9006\\u30B3\\u30F3\\u30D1\\u30A4\\u30EB\\u7D50\\u679C\\u3092\\u6BD4\\u8F03\\u3057\\u305F\\u3082\\u306E\\u3092\\u793A\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\",(0,n.jsx)(e.code,{children:\"NtUserGetAsyncKeyState\"}),\"\\u306E\\u65B9\\u306B\\u306F\\u95A2\\u6570\\u306E\\u5192\\u982D\\u306B\\u3001\",(0,n.jsx)(e.code,{children:\"EtwTraceGetAsyncKeyState\"}),\"\\u3068\\u3044\\u3046ETW\\u306E\\u30A4\\u30D9\\u30F3\\u30C8\\u66F8\\u304D\\u51FA\\u3057\\u306B\\u7D10\\u3065\\u304F\\u95A2\\u6570\\u304C\\u5B58\\u5728\\u3057\\u307E\\u3059\\u304C\\u3001\",(0,n.jsx)(e.code,{children:\"NtUserRegisterHotKey\"}),\"\\u306B\\u306F\\u5B58\\u5728\\u3057\\u306A\\u3044\\u306E\\u304C\\u898B\\u3066\\u53D6\\u308C\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.img,{src:\"/assets/images/detecting-hotkey-based-keyloggers/image3.png\",alt:\"\\u56F31: NtUserGetAsyncKeyState\\u3068NtUserRegisterHotKey\\u306E\\u9006\\u30B3\\u30F3\\u30D1\\u30A4\\u30EB\\u7D50\\u679C\\u306E\\u6BD4\\u8F03\",width:\"1122\",height:\"556\"}),`\n\\u3000`,(0,n.jsx)(e.br,{}),`\n`,\"Microsoft-Windows-Win32k \\u4EE5\\u5916\\u306EETW\\u30D7\\u30ED\\u30D0\\u30A4\\u30C0\\u30FC\\u3092\\u4F7F\\u3063\\u3066\\u3001\\u9593\\u63A5\\u7684\\u306B\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3092\\u547C\\u3073\\u51FA\\u3057\\u3092\\u76E3\\u8996\\u3059\\u308B\\u6848\\u3082\\u3067\\u305F\\u3082\\u306E\\u306E\\u3001\\u6B21\\u306B\\u7D39\\u4ECB\\u3059\\u308B\\u3001ETW\\u3092\\u4F7F\\u308F\\u305A\\u300C\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u30C6\\u30FC\\u30D6\\u30EB\\u300D\\u3092\\u5229\\u7528\\u3057\\u305F\\u691C\\u77E5\\u624B\\u6CD5\\u304C\\u3001\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3092\\u76E3\\u8996\\u3059\\u308B\\u306E\\u3068\\u540C\\u69D8\\u304B\\u305D\\u308C\\u4EE5\\u4E0A\\u306E\\u52B9\\u679C\\u304C\\u5F97\\u3089\\u308C\\u308B\\u3053\\u3068\\u304C\\u5206\\u304B\\u308A\\u3001\\u6700\\u7D42\\u7684\\u306B\\u306F\\u3053\\u306E\\u6848\\u3092\\u63A1\\u7528\\u3059\\u308B\\u3053\\u3068\\u306B\\u3057\\u307E\\u3057\\u305F\\u3002\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u30C6\\u30FC\\u30D6\\u30EBgphkhashtable\\u3092\\u5229\\u7528\\u3057\\u305F\\u691C\\u77E5\",children:\"\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u30C6\\u30FC\\u30D6\\u30EB(gphkHashTable)\\u3092\\u5229\\u7528\\u3057\\u305F\\u691C\\u77E5\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000ETW\\u3067\\u306F\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u306E\\u547C\\u3073\\u51FA\\u3057\\u3092\\u76F4\\u63A5\\u76E3\\u8996\\u51FA\\u6765\\u306A\\u3044\\u3053\\u3068\\u304C\\u5224\\u660E\\u3057\\u305F\\u6642\\u70B9\\u3067\\u3001ETW\\u3092\\u5229\\u7528\\u305B\\u305A\\u306B\\u691C\\u77E5\\u3059\\u308B\\u65B9\\u6CD5\\u3092\\u691C\\u8A0E\\u3059\\u308B\\u3053\\u3068\\u306B\\u3057\\u307E\\u3057\\u305F\\u3002\\u691C\\u8A0E\\u306E\\u6700\\u4E2D\\u3001\\u300C\\u305D\\u3082\\u305D\\u3082\\u767B\\u9332\\u3055\\u308C\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306E\\u60C5\\u5831\\u304C\\u3069\\u3053\\u304B\\u306B\\u4FDD\\u5B58\\u3055\\u308C\\u3066\\u3044\\u308B\\u306E\\u3067\\u306F\\u306A\\u3044\\u304B\\uFF1F\\u300D\\u300C\\u3082\\u3057\\u4FDD\\u5B58\\u3055\\u308C\\u3066\\u3044\\u308B\\u3068\\u3057\\u305F\\u3089\\u3001\\u305D\\u306E\\u60C5\\u5831\\u304C\\u691C\\u77E5\\u306B\\u4F7F\\u3048\\u308B\\u306E\\u3067\\u306F\\u306A\\u3044\\u304B\\uFF1F\\u300D\\u3068\\u3044\\u3046\\u8003\\u3048\\u306B\\u81F3\\u308A\\u307E\\u3057\\u305F\\u3002\\u305D\\u306E\\u4EEE\\u8AAC\\u3092\\u3082\\u3068\\u306B\\u8ABF\\u67FB\\u3057\\u305F\\u7D50\\u679C\\u3001\\u3059\\u3050\\u306B\",(0,n.jsx)(e.code,{children:\"NtUserRegisterHotkey\"}),\"\\u5185\\u306B\\u3066\",(0,n.jsx)(e.code,{children:\"gphkHashTable\"}),\"\\u3068\\u3044\\u3046\\u30E9\\u30D9\\u30EB\\u304C\\u3064\\u3051\\u3089\\u308C\\u305F\\u30CF\\u30C3\\u30B7\\u30E5\\u30C6\\u30FC\\u30D6\\u30EB\\u3092\\u767A\\u898B\\u3059\\u308B\\u3053\\u3068\\u304C\\u51FA\\u6765\\u307E\\u3057\\u305F\\u3002Microsoft\\u793E\\u304C\\u516C\\u958B\\u3057\\u3066\\u3044\\u308B\\u30AA\\u30F3\\u30E9\\u30A4\\u30F3\\u306E\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\u985E\\u3092\\u8ABF\\u67FB\\u3057\\u3066\\u3082\",(0,n.jsx)(e.code,{children:\"gphkHashTable\"}),\"\\u306B\\u3064\\u3044\\u3066\\u306E\\u60C5\\u5831\\u306F\\u306A\\u304B\\u3063\\u305F\\u305F\\u3081\\u3001\\u3053\\u308C\\u306F\\u672A\\u516C\\u958B(undocumented)\\u306E\\u30AB\\u30FC\\u30CD\\u30EB\\u30C7\\u30FC\\u30BF\\u69CB\\u9020\\u306E\\u3088\\u3046\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/assets/images/detecting-hotkey-based-keyloggers/image1.png\",alt:\"\\u56F32: \\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u30C6\\u30FC\\u30D6\\u30EBgphkHashTable\\u3002NtUserRegisterHotKey\\u5185\\u3067\\u547C\\u3070\\u308C\\u305FRegisterHotKey\\u95A2\\u6570\\u5185\\u306B\\u3066\\u767A\\u898B\",width:\"722\",height:\"340\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u30EA\\u30D0\\u30FC\\u30B9\\u30A8\\u30F3\\u30B8\\u30CB\\u30A2\\u30EA\\u30F3\\u30B0\\u3092\\u3057\\u305F\\u7D50\\u679C\\u3001\\u3053\\u306E\\u30CF\\u30C3\\u30B7\\u30E5\\u30C6\\u30FC\\u30D6\\u30EB\\u306F\\u3001\\u767B\\u9332\\u3055\\u308C\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306E\\u60C5\\u5831\\u3092\\u6301\\u3064\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u4FDD\\u5B58\\u3057\\u3066\\u304A\\u308A\\u3001\\u5404\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u306F\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u306E\\u5F15\\u6570\\u306B\\u3066\\u6307\\u5B9A\\u3055\\u308C\\u305Fvirtual-key code\\u3084\\u4FEE\\u98FE\\u5B50\\u306E\\u60C5\\u5831\\u3092\\u4FDD\\u6301\\u3057\\u3066\\u3044\\u308B\\u3053\\u3068\\u304C\\u5206\\u304B\\u308A\\u307E\\u3057\\u305F\\u3002\\u4EE5\\u4E0B\\u306E\\u56F3(\\u53F3)\\u304C\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306E\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8(\",(0,n.jsx)(e.strong,{children:\"HOT_KEY\"}),\"\\u3068\\u547D\\u540D)\\u306E\\u69CB\\u9020\\u4F53\\u306E\\u5B9A\\u7FA9\\u306E\\u4E00\\u90E8\\u3068\\u3001\\u56F3(\\u5DE6)\\u304C\\u5B9F\\u969B\\u306Bwindbg\\u4E0A\\u3067\",(0,n.jsx)(e.code,{children:\"gphkHashTable\"}),\"\\u306B\\u30A2\\u30AF\\u30BB\\u30B9\\u3057\\u305F\\u4E0A\\u3067\\u3001\\u767B\\u9332\\u3055\\u308C\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306E\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u898B\\u305F\\u6642\\u306E\\u69D8\\u5B50\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/assets/images/detecting-hotkey-based-keyloggers/image4.png\",alt:\"\\u56F33: \\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u306E\\u8A73\\u7D30\\u3002Windbg\\u753B\\u9762(\\u56F3\\u5DE6)\\u3068HOT_KEY\\u69CB\\u9020\\u4F53\\u306E\\u8A73\\u7D30\",width:\"1220\",height:\"410\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u30EA\\u30D0\\u30FC\\u30B9\\u30A8\\u30F3\\u30B8\\u30CB\\u30A2\\u30EA\\u30F3\\u30B0\\u3092\\u3057\\u305F\\u7D50\\u679C\\u3092\\u307E\\u3068\\u3081\\u308B\\u3068\\u3001ghpkHashTable\\u306F\\u56F34\\u306E\\u3088\\u3046\\u306A\\u69CB\\u9020\\u306B\\u306A\\u3063\\u3066\\u3044\\u308B\\u3053\\u3068\\u304C\\u308F\\u304B\\u308A\\u307E\\u3057\\u305F\\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\\u3001\",(0,n.jsx)(e.code,{children:\"RegisterHotKey\"}),\" API\\u3067\\u6307\\u5B9A\\u3055\\u308C\\u305Fvirtual-key code\\u306B\\u5BFE\\u3057\\u30660x80\\u306E\\u4F59\\u5270\\u6F14\\u7B97\\u3092\\u3057\\u305F\\u7D50\\u679C\\u3092\\u30CF\\u30C3\\u30B7\\u30E5\\u30C6\\u30FC\\u30D6\\u30EB\\u306E\\u30A4\\u30F3\\u30C7\\u30C3\\u30AF\\u30B9\\u306B\\u3057\\u3066\\u3044\\u307E\\u3057\\u305F\\u3002\\u305D\\u3057\\u3066\\u540C\\u3058\\u30A4\\u30F3\\u30C7\\u30C3\\u30AF\\u30B9\\u3092\\u6301\\u3064\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u9023\\u7D50\\u30EA\\u30B9\\u30C8\\u3067\\u7D50\\u3076\\u3053\\u3068\\u3067\\u3001virtual-key code\\u304C\\u540C\\u3058\\u3067\\u3082\\u3001\\u4FEE\\u98FE\\u5B50\\u304C\\u9055\\u3046\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306E\\u60C5\\u5831\\u3082\\u4FDD\\u6301\\u30FB\\u7BA1\\u7406\\u51FA\\u6765\\u308B\\u3088\\u3046\\u306B\\u306A\\u3063\\u3066\\u3044\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/assets/images/detecting-hotkey-based-keyloggers/image6.png\",alt:\"\\u56F34: gphkHashTable\\u306E\\u69CB\\u9020\",width:\"1113\",height:\"542\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u3064\\u307E\\u308A\",(0,n.jsx)(e.code,{children:\"gphkHashTable\"}),\"\\u3067\\u4FDD\\u6301\\u3057\\u3066\\u3044\\u308B\\u5168\\u3066\\u306EHOT_KEY\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u8D70\\u67FB\\u3059\\u308C\\u3070\\u3001\\u767B\\u9332\\u3055\\u308C\\u3066\\u3044\\u308B\\u5168\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306E\\u60C5\\u5831\\u304C\\u53D6\\u5F97\\u3067\\u304D\\u308B\\u3068\\u3044\\u3046\\u3053\\u3068\\u306B\\u306A\\u308A\\u307E\\u3059\\u3002\\u53D6\\u5F97\\u3057\\u305F\\u7D50\\u679C\\u3001\\u4E3B\\u8981\\u306A\\u30AD\\u30FC(\\u4F8B\\u3048\\u3070\\u5358\\u4F53\\u306E\\u82F1\\u6570\\u5B57\\u30AD\\u30FC\\uFF09\\u5168\\u3066\\u304C\\u500B\\u3005\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u3055\\u308C\\u3066\\u3044\\u308C\\u3070\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304C\\u52D5\\u4F5C\\u3057\\u3066\\u3044\\u308B\\u3053\\u3068\\u3092\\u793A\\u3059\\u5F37\\u3044\\u6839\\u62E0\\u3068\\u306A\\u308A\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"\\u691C\\u77E5\\u30C4\\u30FC\\u30EB\\u3092\\u4F5C\\u6210\\u3059\\u308B\",children:\"\\u691C\\u77E5\\u30C4\\u30FC\\u30EB\\u3092\\u4F5C\\u6210\\u3059\\u308B\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u3067\\u306F\\u6B21\\u306B\\u3001\\u5B9F\\u969B\\u306B\\u691C\\u77E5\\u30C4\\u30FC\\u30EB\\u306E\\u65B9\\u3092\\u5B9F\\u88C5\\u3057\\u3066\\u3044\\u304D\\u307E\\u3059\\u3002\",(0,n.jsx)(e.code,{children:\"gphkHashTable\"}),\"\\u81EA\\u4F53\\u306F\\u30AB\\u30FC\\u30CD\\u30EB\\u7A7A\\u9593\\u306B\\u5B58\\u5728\\u3059\\u308B\\u305F\\u3081\\u3001\\u30E6\\u30FC\\u30B6\\u30E2\\u30FC\\u30C9\\u306E\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u304B\\u3089\\u306F\\u30A2\\u30AF\\u30BB\\u30B9\\u51FA\\u6765\\u307E\\u305B\\u3093\\u3002\\u305D\\u306E\\u305F\\u3081\\u691C\\u77E5\\u306E\\u305F\\u3081\\u306B\\u3001\\u30C7\\u30D0\\u30A4\\u30B9\\u30C9\\u30E9\\u30A4\\u30D0\\u3092\\u66F8\\u304F\\u3053\\u3068\\u306B\\u3057\\u307E\\u3057\\u305F\\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\",(0,n.jsx)(e.code,{children:\"gphkHashTable\"}),\"\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u53D6\\u5F97\\u3057\\u305F\\u5F8C\\u3001\\u30CF\\u30C3\\u30B7\\u30E5\\u30C6\\u30FC\\u30D6\\u30EB\\u306B\\u4FDD\\u5B58\\u3055\\u308C\\u3066\\u3044\\u308B\\u5168\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u8D70\\u67FB\\u3057\\u305F\\u4E0A\\u3067\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\\u3055\\u308C\\u3066\\u3044\\u308B\\u82F1\\u6570\\u5B57\\u30AD\\u30FC\\u306E\\u6570\\u304C\\u4E00\\u5B9A\\u6570\\u4EE5\\u4E0A\\u306A\\u3089\\u3070\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304C\\u5B58\\u5728\\u3059\\u308B\\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308B\\u4E8B\\u3092\\u77E5\\u3089\\u305B\\u3066\\u304F\\u308B\\u30C7\\u30D0\\u30A4\\u30B9\\u30C9\\u30E9\\u30A4\\u30D0\\u3092\\u4F5C\\u6210\\u3059\\u308B\\u3053\\u3068\\u306B\\u3057\\u307E\\u3057\\u305F\\u3002\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"gphkhashtable\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u65B9\\u6CD5\",children:\"gphkHashTable\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u65B9\\u6CD5\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u691C\\u77E5\\u30C4\\u30FC\\u30EB\\u3092\\u4F5C\\u6210\\u3059\\u308B\\u306B\\u3042\\u305F\\u308A\\u3001\\u6700\\u521D\\u306B\\u76F4\\u9762\\u3057\\u305F\\u8AB2\\u984C\\u3068\\u3057\\u3066\\u306F\\u300CgphkHashTable\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u3069\\u306E\\u3088\\u3046\\u306B\\u3057\\u3066\\u53D6\\u5F97\\u3059\\u308C\\u3070\\u3088\\u3044\\u306E\\u304B\\uFF1F\\u300D\\u3068\\u3044\\u3046\\u3053\\u3068\\u3067\\u3059\\u3002\\u60A9\\u3093\\u3060\\u7D50\\u679C\\u3001\",(0,n.jsx)(e.strong,{children:\"win32kfull.sys\"}),\"\\u306E\\u30E1\\u30E2\\u30EA\\u7A7A\\u9593\\u5185\\u3067gphkHashTable\\u306B\\u30A2\\u30AF\\u30BB\\u30B9\\u3057\\u3066\\u3044\\u308B\\u547D\\u4EE4\\u304B\\u3089\\u76F4\\u63A5gphkHashTable\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u3053\\u3068\\u306B\\u3057\\u307E\\u3057\\u305F\\u3002\",(0,n.jsx)(e.br,{}),`\n`,\"\\u30EA\\u30D0\\u30FC\\u30B9\\u30A8\\u30F3\\u30B8\\u30CB\\u30A2\\u30EA\\u30F3\\u30B0\\u3057\\u305F\\u7D50\\u679C\\u3001\",(0,n.jsx)(e.code,{children:\"IsHotKey\"}),\"\\u3068\\u3044\\u3046\\u95A2\\u6570\\u5185\\u3067\\u306F\\u3001\\u95A2\\u6570\\u306E\\u5192\\u982D\\u90E8\\u5206\\u306B\\u3042\\u308Blea\\u547D\\u4EE4(lea rbx, gphkHashTable)\\u306B\\u3066\\u3001gphkHashTable\\u306E\\u30A2\\u30AF\\u30BB\\u30B9\\u3057\\u3066\\u3044\\u308B\\u3053\\u3068\\u304C\\u308F\\u304B\\u308A\\u307E\\u3057\\u305F\\u3002\\u3053\\u306E\\u547D\\u4EE4\\u306E\\u30AA\\u30D7\\u30B3\\u30FC\\u30C9\\u30D0\\u30A4\\u30C8(0x48, 0x8d, 0x1d)\\u90E8\\u5206\\u3092\\u30B7\\u30B0\\u30CD\\u30C1\\u30E3\\u306B\\u8A72\\u5F53\\u884C\\u3092\\u63A2\\u7D22\\u3057\\u3066\\u3001\\u5F97\\u3089\\u308C\\u305F32bit(4\\u30D0\\u30A4\\u30C8)\\u306E\\u30AA\\u30D5\\u30BB\\u30C3\\u30C8\\u304B\\u3089gphkHashTable\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u7B97\\u51FA\\u3059\\u308B\\u3053\\u3068\\u306B\\u3057\\u307E\\u3057\\u305F\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/assets/images/detecting-hotkey-based-keyloggers/image5.png\",alt:\"\\u56F35: IsHotKey\\u95A2\\u6570\\u5185 \",width:\"1128\",height:\"350\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u52A0\\u3048\\u3066\\u3001IsHotKey\\u95A2\\u6570\\u81EA\\u4F53\\u3082\\u30A8\\u30AF\\u30B9\\u30DD\\u30FC\\u30C8\\u95A2\\u6570\\u3067\\u306A\\u3044\\u305F\\u3081\\u3001\\u305D\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3082\\u4F55\\u3089\\u304B\\u306E\\u65B9\\u6CD5\\u3067\\u53D6\\u5F97\\u3057\\u306A\\u3051\\u308C\\u3070\\u3044\\u3051\\u307E\\u305B\\u3093\\u3002\\u305D\\u3053\\u3067\\u3055\\u3089\\u306A\\u308B\\u30EA\\u30D0\\u30FC\\u30B9\\u30A8\\u30F3\\u30B8\\u30CB\\u30A2\\u30EA\\u30F3\\u30B0\\u306E\\u7D50\\u679C\\u3001\",(0,n.jsx)(e.code,{children:\"EditionIsHotKey\"}),\"\\u3068\\u3044\\u3046\\u30A8\\u30AF\\u30B9\\u30DD\\u30FC\\u30C8\\u3055\\u308C\\u305F\\u95A2\\u6570\\u5185\\u3067\\u3001\",(0,n.jsx)(e.code,{children:\"IsHotKey\"}),\"\\u95A2\\u6570\\u304C\\u547C\\u3070\\u308C\\u3066\\u3044\\u308B\\u3053\\u3068\\u304C\\u308F\\u304B\\u308A\\u307E\\u3057\\u305F\\u3002\\u305D\\u3053\\u3067EditionIsHotKey\\u95A2\\u6570\\u304B\\u3089\\u524D\\u8FF0\\u3068\\u540C\\u69D8\\u306E\\u65B9\\u6CD5\\u3067\\u3001IsHotKey\\u95A2\\u6570\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u7B97\\u51FA\\u3059\\u308B\\u3053\\u3068\\u306B\\u3057\\u307E\\u3057\\u305F\\u3002(\\u88DC\\u8DB3\\u3067\\u3059\\u304C\\u3001\",(0,n.jsx)(e.strong,{children:\"win32kfull.sys\"}),\"\\u306E\\u30D9\\u30FC\\u30B9\\u30A2\\u30C9\\u30EC\\u30B9\\u306B\\u95A2\\u3057\\u3066\\u306F\",(0,n.jsx)(e.code,{children:\"PsLoadedModuleList\"}),\"\\u3068\\u3044\\u3046API\\u3067\\u63A2\\u305B\\u307E\\u3059\\u3002)\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000## \",(0,n.jsx)(e.strong,{children:\"win32kfull.sys\"}),\"\\u306E\\u30E1\\u30E2\\u30EA\\u7A7A\\u9593\\u306B\\u30A2\\u30AF\\u30BB\\u30B9\\u3059\\u308B\\u306B\\u306F\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\",(0,n.jsx)(e.strong,{children:\"gphkHashTable\"}),\"\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u65B9\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u691C\\u8A0E\\u304C\\u7D42\\u308F\\u3063\\u305F\\u3068\\u3053\\u308D\\u3067\\u3001\\u5B9F\\u969B\\u306B\",(0,n.jsx)(e.strong,{children:\"win32kfull.sys\"}),\"\\u306E\\u30E1\\u30E2\\u30EA\\u7A7A\\u9593\\u306B\\u30A2\\u30AF\\u30BB\\u30B9\\u3057\\u3066\\u3001\",(0,n.jsx)(e.strong,{children:\"gphkHashTable\"}),\"\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u305F\\u3081\\u306E\\u30B3\\u30FC\\u30C9\\u3092\\u66F8\\u304D\\u59CB\\u3081\\u307E\\u3057\\u305F\\u3002\\u3053\\u306E\\u6642\\u76F4\\u9762\\u3057\\u305F\\u8AB2\\u984C\\u3068\\u3057\\u3066\\u306F\\u3001\",(0,n.jsx)(e.strong,{children:\"win32kfull.sys\"}),\"\\u306F\\u300C\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u30C9\\u30E9\\u30A4\\u30D0\\u300D\\u3067\\u3042\\u308B\\u3068\\u3044\\u3046\\u70B9\\u3067\\u3059\\u304C\\u3001\\u3053\\u3053\\u3067\\u306F\\u307E\\u305A\\u300C\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u300D\\u3068\\u306F\\u4F55\\u304B\\u306B\\u3064\\u3044\\u3066\\u3001\\u7C21\\u5358\\u306B\\u8AAC\\u660E\\u3057\\u307E\\u3059\\u3002\",(0,n.jsx)(e.br,{}),`\n`,\"Windows\\u3067\\u306F\\u4E00\\u822C\\u7684\\u306B\\u30E6\\u30FC\\u30B6\\u304C\\u30ED\\u30B0\\u30A4\\u30F3\\u3057\\u305F\\u969B\\u3001\\u30E6\\u30FC\\u30B6\\u6BCE\\u306B\\u500B\\u5225\\u306B\\u300C\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u300D(1\\u756A\\u4EE5\\u964D\\u306E\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u756A\\u53F7)\\u304C\\u5272\\u308A\\u5F53\\u3066\\u3089\\u308C\\u307E\\u3059\\u3002\\u304B\\u306A\\u308A\\u5927\\u96D1\\u628A\\u306B\\u8AAC\\u660E\\u3059\\u308B\\u3068\\u3001\\u6700\\u521D\\u306B\\u30ED\\u30B0\\u30A4\\u30F3\\u3057\\u305F\\u30E6\\u30FC\\u30B6\\u306B\\u306F\\u300C\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\uFF11\\u300D\\u304C\\u5272\\u308A\\u5F53\\u3066\\u3089\\u308C\\u3001\\u305D\\u306E\\u72B6\\u614B\\u3067\\u5225\\u306E\\u30E6\\u30FC\\u30B6\\u304C\\u30ED\\u30B0\\u30A4\\u30F3\\u3057\\u305F\\u5834\\u5408\\u4ECA\\u5EA6\\u306F\\u300C\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\uFF12\\u300D\\u304C\\u5272\\u308A\\u5F53\\u3066\\u3089\\u308C\\u307E\\u3059\\u3002\\u305D\\u3057\\u3066\\u5404\\u30E6\\u30FC\\u30B6\\u306F\\u500B\\u3005\\u306E\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u5185\\u3067\\u3001\\u305D\\u308C\\u305E\\u308C\\u306E\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\u74B0\\u5883\\u3092\\u6301\\u3061\\u307E\\u3059\\u3002\",(0,n.jsx)(e.br,{}),`\n`,\"\\u3053\\u306E\\u6642\\u3001\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u5225(\\u30ED\\u30B0\\u30A4\\u30F3\\u30E6\\u30FC\\u30B6\\u5225)\\u306B\\u7BA1\\u7406\\u3059\\u308B\\u3079\\u304D\\u30AB\\u30FC\\u30CD\\u30EB\\u306E\\u30C7\\u30FC\\u30BF\\u306F\\u3001\\u30AB\\u30FC\\u30CD\\u30EB\\u30E1\\u30E2\\u30EA\\u5185\\u306E\\u300C\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u7A7A\\u9593\\u300D\\u3068\\u3044\\u3046\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u5225\\u306E\\u5206\\u96E2\\u3057\\u305F\\u30E1\\u30E2\\u30EA\\u7A7A\\u9593\\u3067\\u7BA1\\u7406\\u3055\\u308C\\u3001win32k \\u30C9\\u30E9\\u30A4\\u30D0\\u304C\\u7BA1\\u7406\\u3057\\u3066\\u3044\\u308B\\u3088\\u3046\\u306AGUI\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8(\\u30A6\\u30A3\\u30F3\\u30C9\\u30A6\\u3001\\u30DE\\u30A6\\u30B9\\u30FB\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u5165\\u529B\\u306E\\u60C5\\u5831\\u7B49)\\u3082\\u3053\\u308C\\u306B\\u8A72\\u5F53\\u3057\\u307E\\u3059\\u3002\\u3053\\u308C\\u306B\\u3088\\u308A\\u3001\\u30E6\\u30FC\\u30B6\\u9593\\u3067\\u753B\\u9762\\u3084\\u5165\\u529B\\u60C5\\u5831\\u304C\\u6DF7\\u3056\\u308B\\u3053\\u3068\\u304C\\u306A\\u3044\\u306E\\u3067\\u3059\\u3002(\\u304B\\u306A\\u308A\\u5927\\u307E\\u304B\\u306A\\u8AAC\\u660E\\u306E\\u305F\\u3081\\u3001\\u3088\\u308A\\u8A73\\u3057\\u304F\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u306B\\u3064\\u3044\\u3066\\u77E5\\u308A\\u305F\\u3044\\u65B9\\u306FJames Forshaw\\u6C0F\\u306E\",(0,n.jsx)(e.a,{href:\"https://googleprojectzero.blogspot.com/2016/01/raising-dead.html\",rel:\"nofollow\",children:\"\\u3053\\u3061\\u3089\\u306E\\u30D6\\u30ED\\u30B0\\u8A18\\u4E8B\"}),\"\\u3092\\u8AAD\\u3080\\u3053\\u3068\\u3092\\u304A\\u3059\\u3059\\u3081\\u3057\\u307E\\u3059\\u3002)\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.img,{src:\"/assets/images/detecting-hotkey-based-keyloggers/image2.png\",alt:\"\\u56F36: \\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u306E\\u6982\\u8981\\u3002 \\u30BB\\u30C3\\u30B7\\u30E7\\u30F30\\u306F\\u30B5\\u30FC\\u30D3\\u30B9\\u30D7\\u30ED\\u30BB\\u30B9\\u5C02\\u7528\\u306E\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\",width:\"735\",height:\"543\"}),`\n\\u3000\\u3000`,(0,n.jsx)(e.br,{}),`\n`,\"\\u4EE5\\u4E0A\\u306E\\u80CC\\u666F\\u304B\\u3089\\u3001\",(0,n.jsx)(e.strong,{children:\"win32kfull.sys\"}),\"\\u306F\\u300C\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u30C9\\u30E9\\u30A4\\u30D0\\u300D\\u3068\\u547C\\u3070\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\\u3064\\u307E\\u308A\\u3001\\u4F8B\\u3048\\u3070\\u6700\\u521D\\u306E\\u30ED\\u30B0\\u30A4\\u30F3\\u30E6\\u30FC\\u30B6\\u306E\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3(\\u30BB\\u30C3\\u30B7\\u30E7\\u30F31)\\u5185\\u3067\\u767B\\u9332\\u3055\\u308C\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306E\\u60C5\\u5831\\u306F\\u3001\\u540C\\u3058\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u5185\\u304B\\u3089\\u3057\\u304B\\u30A2\\u30AF\\u30BB\\u30B9\\u3067\\u304D\\u306A\\u3044\\u3068\\u3044\\u3046\\u3053\\u3068\\u3067\\u3059\\u3002\\u3067\\u306F\\u3069\\u3046\\u3059\\u308C\\u3070\\u826F\\u3044\\u306E\\u304B\\u3068\\u3044\\u3046\\u3068\\u3001\\u3053\\u306E\\u3088\\u3046\\u306A\\u5834\\u5408\\u3001\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows-hardware/drivers/ddi/ntifs/nf-ntifs-kestackattachprocess\",rel:\"nofollow\",children:\"KeStackAttachProcess\"}),\"\\u304C\\u5229\\u7528\\u3067\\u304D\\u308B\\u3053\\u3068\\u304C\",(0,n.jsx)(e.a,{href:\"https://eversinc33.com/posts/kernel-mode-keylogging.html\",rel:\"nofollow\",children:\"\\u77E5\\u3089\\u308C\\u3066\\u3044\\u307E\\u3059\"}),\"\\u3002\",(0,n.jsx)(e.br,{}),`\n`,\"KeStackAttachProcess\\u306F\\u3001\\u73FE\\u5728\\u306E\\u30B9\\u30EC\\u30C3\\u30C9\\u3092\\u6307\\u5B9A\\u306E\\u30D7\\u30ED\\u30BB\\u30B9\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u7A7A\\u9593\\u306B\\u4E00\\u6642\\u7684\\u306B\\u30A2\\u30BF\\u30C3\\u30C1\\u3059\\u308B\\u3053\\u3068\\u304C\\u51FA\\u6765\\u307E\\u3059\\u3002\\u3053\\u306E\\u6642\\u3001\\u5BFE\\u8C61\\u306E\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u306B\\u3044\\u308BGUI\\u30D7\\u30ED\\u30BB\\u30B9\\u3001\\u3088\\u308A\\u6B63\\u78BA\\u306B\\u306F\",(0,n.jsx)(e.strong,{children:\"win32kfull.sys\"}),\"\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u3066\\u3044\\u308B\\u30D7\\u30ED\\u30BB\\u30B9\\u306B\\u30A2\\u30BF\\u30C3\\u30C1\\u3059\\u308B\\u3053\\u3068\\u304C\\u51FA\\u6765\\u308C\\u3070\\u3001\\u5BFE\\u8C61\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u306E\",(0,n.jsx)(e.strong,{children:\"win32kfull.sys\"}),\"\\u3084\\u305D\\u306E\\u30C7\\u30FC\\u30BF\\u306B\\u30A2\\u30AF\\u30BB\\u30B9\\u3059\\u308B\\u3053\\u3068\\u304C\\u51FA\\u6765\\u307E\\u3059\\u3002\\u4ECA\\u56DE\\u306F\\u3001\\u30ED\\u30B0\\u30A4\\u30F3\\u30E6\\u30FC\\u30B6\\u304C\\uFF11\\u30E6\\u30FC\\u30B6\\u3067\\u3042\\u308B\\u3053\\u3068\\u3092\\u4EEE\\u5B9A\\u3057\\u3066\\u3001\\u5404\\u30E6\\u30FC\\u30B6\\u306E\\u30ED\\u30B0\\u30AA\\u30F3\\u64CD\\u4F5C\\u3092\\u62C5\\u3046\\u30D7\\u30ED\\u30BB\\u30B9\\u3067\\u3042\\u308B\",(0,n.jsx)(e.strong,{children:\"winlogon.exe\"}),\"\\u3092\\u63A2\\u3057\\u3066\\u30A2\\u30BF\\u30C3\\u30C1\\u3059\\u308B\\u3053\\u3068\\u306B\\u3057\\u307E\\u3057\\u305F\\u3002\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u767B\\u9332\\u3055\\u308C\\u3066\\u3044\\u308B\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3092\\u78BA\\u8A8D\\u3059\\u308B\",children:\"\\u767B\\u9332\\u3055\\u308C\\u3066\\u3044\\u308B\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3092\\u78BA\\u8A8D\\u3059\\u308B\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\",(0,n.jsx)(e.strong,{children:\"winlogon.exe\"}),\"\\u306E\\u30D7\\u30ED\\u30BB\\u30B9\\u306B\\u30A2\\u30BF\\u30C3\\u30C1\\u3057\\u3001\",(0,n.jsx)(e.strong,{children:\"gphkHashTable\"}),\"\\u306E\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u7279\\u5B9A\\u51FA\\u6765\\u305F\\u5F8C\\u306F\\u3001\\u5F8C\\u306F\",(0,n.jsx)(e.strong,{children:\"gphkHashTable\"}),\"\\u3092\\u30B9\\u30AD\\u30E3\\u30F3\\u3057\\u3066\\u767B\\u9332\\u3055\\u308C\\u305F\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3092\\u78BA\\u8A8D\\u3059\\u308B\\u3060\\u3051\\u3067\\u3059\\u3002\\u4EE5\\u4E0B\\u304C\\u305D\\u306E\\u629C\\u7C8B\\u7248\\u306E\\u30B3\\u30FC\\u30C9\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-c\",children:`BOOL CheckRegisteredHotKeys(_In_ const PVOID\u0026 gphkHashTableAddr)\n{\n-[skip]-\n    // Cast the gphkHashTable address to an array of pointers.\n    PVOID* tableArray = static_cast\u003cPVOID*\u003e(gphkHashTableAddr);\n    // Iterate through the hash table entries.\n    for (USHORT j = 0; j \u003c 0x80; j++)\n    {\n        PVOID item = tableArray[j];\n        PHOT_KEY hk = reinterpret_cast\u003cPHOT_KEY\u003e(item);\n        if (hk)\n        {\n            CheckHotkeyNode(hk);\n        }\n    }\n-[skip]-\n}\n\nVOID CheckHotkeyNode(_In_ const PHOT_KEY\u0026 hk)\n{\n    if (MmIsAddressValid(hk-\u003epNext)) {\n        CheckHotkeyNode(hk-\u003epNext);\n    }\n\n    // Check whether this is a single numeric hotkey.\n    if ((hk-\u003evk \u003e= 0x30) \u0026\u0026 (hk-\u003evk \u003c= 0x39) \u0026\u0026 (hk-\u003emodifiers1 == 0))\n    {\n        KdPrint((\"[+] hk-\u003eid: %u hk-\u003evk: %x\\\\n\", hk-\u003eid, hk-\u003evk));\n        hotkeyCounter++;\n    }\n    // Check whether this is a single alphabet hotkey.\n    else if ((hk-\u003evk \u003e= 0x41) \u0026\u0026 (hk-\u003evk \u003c= 0x5A) \u0026\u0026 (hk-\u003emodifiers1 == 0))\n    {\n        KdPrint((\"[+] hk-\u003eid: %u hk-\u003evk: %x\\\\n\", hk-\u003eid, hk-\u003evk));\n        hotkeyCounter++;\n    }\n-[skip]-\n}\n....\nif (CheckRegisteredHotKeys(gphkHashTableAddr) \u0026\u0026 hotkeyCounter \u003e= 36)\n{\n   detected = TRUE;\n   goto Cleanup;\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u30B3\\u30FC\\u30C9\\u81EA\\u4F53\\u306F\\u96E3\\u3057\\u304F\\u306A\\u304F\\u3001\\u30CF\\u30C3\\u30B7\\u30E5\\u30C6\\u30FC\\u30D6\\u30EB\\u306E\\u5404\\u30A4\\u30F3\\u30C7\\u30C3\\u30AF\\u30B9\\u306E\\u5148\\u982D\\u304B\\u3089\\u9806\\u306B\\u3001\\u9023\\u7D50\\u30EA\\u30B9\\u30C8\\u3092\\u305F\\u3069\\u308A\\u306A\\u304C\\u3089\\u3059\\u3079\\u3066\\u306E\",(0,n.jsx)(e.strong,{children:\"HOT_KEY\"}),\"\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u306B\\u30A2\\u30AF\\u30BB\\u30B9\\u3057\\u3066\\u3001\\u767B\\u9332\\u3055\\u308C\\u3066\\u3044\\u308B\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u304C\\u5358\\u4F53\\u306E\\u82F1\\u6570\\u5B57\\u30AD\\u30FC\\u304B\\u5426\\u304B\\u3092\\u78BA\\u8A8D\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\\u4F5C\\u6210\\u3057\\u305F\\u691C\\u77E5\\u30C4\\u30FC\\u30EB\\u3067\\u306F\\u3001\\u3059\\u3079\\u3066\\u306E\\u5358\\u4F53\\u82F1\\u6570\\u5B57\\u30AD\\u30FC\\u304C\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3068\\u3057\\u3066\\u767B\\u9332\",(0,n.jsx)(e.br,{}),`\n`,\"\\u3055\\u308C\\u3066\\u3044\\u305F\\u5834\\u5408\\u3001\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304C\\u5B58\\u5728\\u3059\\u308B\\u3068\\u3057\\u3066\\u30A2\\u30E9\\u30FC\\u30C8\\u3092\\u6319\\u3052\\u307E\\u3059\\u3002\\u307E\\u305F\\u3001\\u4ECA\\u56DE\\u5B9F\\u88C5\\u306E\\u7C21\\u7565\\u5316\\u306E\\u305F\\u3081\\u3001\\u82F1\\u6570\\u5B57\\u5358\\u4F53\\u30AD\\u30FC\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u306E\\u307F\\u3092\\u5BFE\\u8C61\\u3068\\u3057\\u3066\\u3044\\u307E\\u3059\\u304C\\u3001SHIFT\\u306A\\u3069\\u306E\\u4FEE\\u98FE\\u5B50\\u4ED8\\u304D\\u306E\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u3082\\u5BB9\\u6613\\u306B\\u8ABF\\u3079\\u308B\\u3053\\u3068\\u304C\\u53EF\\u80FD\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"hotkeyz\\u3092\\u691C\\u77E5\\u3059\\u308B\",children:\"Hotkeyz\\u3092\\u691C\\u77E5\\u3059\\u308B\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\\u691C\\u77E5\\u30C4\\u30FC\\u30EB(Hotkey-based Keylogger Detector)\\u306F\\u4EE5\\u4E0B\\u306B\\u3066\\u516C\\u958B\\u3057\\u307E\\u3057\\u305F\\u3002\\u4F7F\\u3044\\u65B9\\u3082\\u4EE5\\u4E0B\\u306B\\u8A18\\u8F09\\u3057\\u3066\\u3044\\u307E\\u3059\\u306E\\u3067\\u3001\\u8208\\u5473\\u3042\\u308B\\u65B9\\u306F\\u305C\\u3072\\u3054\\u89A7\\u304F\\u3060\\u3055\\u3044\\u3002\\u52A0\\u3048\\u3066\\u672C\\u7814\\u7A76\\u306F\",(0,n.jsx)(e.a,{href:\"https://nullcon.net/goa-2025/speaker-windows-keylogger-detection\",rel:\"nofollow\",children:\"NULLCON Goa 2025\"}),\"\\u3067\\u3082\\u767A\\u8868\\u3057\\u307E\\u3057\\u305F\\u306E\\u3067\\u3001\\u305D\\u306E\",(0,n.jsx)(e.a,{href:\"https://docs.google.com/presentation/d/1B0Gdfpo-ER2hPjDbP_NNoGZ8vXP6X1_BN7VZCqUgH8c/edit?usp=sharing\",rel:\"nofollow\",children:\"\\u767A\\u8868\\u30B9\\u30E9\\u30A4\\u30C9\"}),\"\\u3082\\u4F75\\u305B\\u3066\\u3054\\u89A7\\u3044\\u305F\\u3060\\u3051\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"*\",(0,n.jsx)(e.a,{href:\"https://github.com/AsuNa-jp/HotkeybasedKeyloggerDetector\",rel:\"nofollow\",children:\"https://github.com/AsuNa-jp/HotkeybasedKeyloggerDetector\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u3000\\u6700\\u5F8C\\u306B\\u3001\\u672C\\u30C4\\u30FC\\u30EB\\u3092\\u7528\\u3044\\u3066\\u5B9F\\u969B\\u306BHotkeyz\\u3092\\u691C\\u77E5\\u3059\\u308B\\u69D8\\u5B50\\u3092\\u53CE\\u9332\\u3057\\u305F\\u30C7\\u30E2\\u52D5\\u753B\\u304C\\u4EE5\\u4E0B\\u306B\\u306A\\u308A\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://drive.google.com/file/d/1koGLqA5cPlhL8C07MLg9VDD9-SW2FM9e/view?usp=drive_link\",rel:\"nofollow\",children:\"DEMO_VIDEO.mp4\"})}),`\n`,(0,n.jsx)(e.h2,{id:\"\\u8B1D\\u8F9E\",children:\"\\u8B1D\\u8F9E\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3000\",(0,n.jsx)(e.a,{href:\"https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp\",rel:\"nofollow\",children:\"\\u524D\\u56DE\\u306E\\u8A18\\u4E8B\"}),\"\\u3092\\u8AAD\\u3093\\u3067\\u4E0B\\u3055\\u308A\\u3001\\u305D\\u306E\\u4E0A\\u3067\\u30DB\\u30C3\\u30C8\\u30AD\\u30FC\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u624B\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u6559\\u3048\\u3066\\u304F\\u3060\\u3055\\u308A\\u3001\\u305D\\u306E\\u4E0A\\u305D\\u306EPoC\\u3068\\u306A\\u308BHotkeyz\\u3092\\u516C\\u958B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3063\\u305F\\u3001Jonathan Bar Or\\u6C0F\\u306B\\u5FC3\\u3088\\u308A\\u611F\\u8B1D\\u81F4\\u3057\\u307E\\u3059\\u3002\"]})]})}function b(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(c,r)})):c(r)}var T=b;return u(K);})();\n;return Component;"},"_id":"articles/detecting-hotkey-based-keyloggers-jp.mdx","_raw":{"sourceFilePath":"articles/detecting-hotkey-based-keyloggers-jp.mdx","sourceFileName":"detecting-hotkey-based-keyloggers-jp.mdx","sourceFileDir":"articles","contentType":"mdx","flattenedPath":"articles/detecting-hotkey-based-keyloggers-jp"},"type":"Article","imageUrl":"/assets/images/detecting-hotkey-based-keyloggers-jp/Security Labs Images 12.jpg","readingTime":"5 min read","series":"","url":"/detecting-hotkey-based-keyloggers-jp","headings":[{"level":2,"title":"未公開のカーネルデータ構造を使った","href":"#未公開のカーネルデータ構造を使った"},{"level":2,"title":"ホットキー型キーロガーの検知  ","href":"#ホットキー型キーロガーの検知--"},{"level":2,"title":"はじめに","href":"#はじめに"},{"level":2,"title":"ホットキー型キーロガーの概要","href":"#ホットキー型キーロガーの概要"},{"level":3,"title":"そもそもホットキーとは何か？","href":"#そもそもホットキーとは何か"},{"level":3,"title":"任意のホットキーが登録できることを悪用する","href":"#任意のホットキーが登録できることを悪用する"},{"level":3,"title":"密かにキーを盗み取る","href":"#密かにキーを盗み取る"},{"level":2,"title":"**ホットキー型キーロガーの検知手法**","href":"#ホットキー型キーロガーの検知手法"},{"level":3,"title":"ETWではRegisterHotKey APIは監視していない","href":"#etwではregisterhotkey-apiは監視していない"},{"level":3,"title":"ホットキーテーブル(gphkHashTable)を利用した検知","href":"#ホットキーテーブルgphkhashtableを利用した検知"},{"level":2,"title":"検知ツールを作成する","href":"#検知ツールを作成する"},{"level":3,"title":"gphkHashTableのアドレスを取得する方法","href":"#gphkhashtableのアドレスを取得する方法"},{"level":3,"title":"登録されているホットキーを確認する","href":"#登録されているホットキーを確認する"},{"level":3,"title":"Hotkeyzを検知する","href":"#hotkeyzを検知する"},{"level":2,"title":"謝辞","href":"#謝辞"}],"author":[{"title":"Asuka Nakajima","slug":"asuka-nakajima","description":"Senior Security Research Engineer, Elastic","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var i=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var _=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),d=(t,e)=\u003e{for(var n in e)i(t,n,{get:e[n],enumerable:!0})},s=(t,e,n,o)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let r of f(e))!l.call(t,r)\u0026\u0026r!==n\u0026\u0026i(t,r,{get:()=\u003ee[r],enumerable:!(o=j(e,r))||o.enumerable});return t};var k=(t,e,n)=\u003e(n=t!=null?x(g(t)):{},s(e||!t||!t.__esModule?i(n,\"default\",{value:t,enumerable:!0}):n,t)),p=t=\u003es(i({},\"__esModule\",{value:!0}),t);var u=_((E,c)=\u003e{c.exports=_jsx_runtime});var C={};d(C,{default:()=\u003ey,frontmatter:()=\u003eM});var a=k(u()),M={title:\"Asuka Nakajima\",description:\"Senior Security Research Engineer, Elastic\",slug:\"asuka-nakajima\"};function m(t){return(0,a.jsx)(a.Fragment,{})}function h(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(m,t)})):m(t)}var y=h;return p(C);})();\n;return Component;"},"_id":"authors/asuka-nakajima.mdx","_raw":{"sourceFilePath":"authors/asuka-nakajima.mdx","sourceFileName":"asuka-nakajima.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/asuka-nakajima"},"type":"Author","imageUrl":"","url":"/authors/asuka-nakajima"}],"category":[{"title":"Security research","slug":"security-research","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var l=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),d=(t,e)=\u003e{for(var r in e)s(t,r,{get:e[r],enumerable:!0})},c=(t,e,r,a)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let o of _(e))!j.call(t,o)\u0026\u0026o!==r\u0026\u0026s(t,o,{get:()=\u003ee[o],enumerable:!(a=f(e,o))||a.enumerable});return t};var h=(t,e,r)=\u003e(r=t!=null?x(g(t)):{},c(e||!t||!t.__esModule?s(r,\"default\",{value:t,enumerable:!0}):r,t)),p=t=\u003ec(s({},\"__esModule\",{value:!0}),t);var i=l((X,u)=\u003e{u.exports=_jsx_runtime});var D={};d(D,{default:()=\u003eC,frontmatter:()=\u003ey});var n=h(i()),y={title:\"Security research\",slug:\"security-research\"};function m(t){return(0,n.jsx)(n.Fragment,{})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(m,t)})):m(t)}var C=M;return p(D);})();\n;return Component;"},"_id":"categories/security-research.mdx","_raw":{"sourceFilePath":"categories/security-research.mdx","sourceFileName":"security-research.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/security-research"},"type":"Category","url":"/categories/security-research"},{"title":"Detection science","slug":"detection-science","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var c=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),l=(t,e)=\u003e{for(var n in e)c(t,n,{get:e[n],enumerable:!0})},i=(t,e,n,s)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let o of _(e))!g.call(t,o)\u0026\u0026o!==n\u0026\u0026c(t,o,{get:()=\u003ee[o],enumerable:!(s=f(e,o))||s.enumerable});return t};var p=(t,e,n)=\u003e(n=t!=null?x(d(t)):{},i(e||!t||!t.__esModule?c(n,\"default\",{value:t,enumerable:!0}):n,t)),D=t=\u003ei(c({},\"__esModule\",{value:!0}),t);var u=j((h,a)=\u003e{a.exports=_jsx_runtime});var X={};l(X,{default:()=\u003eF,frontmatter:()=\u003eM});var r=p(u()),M={title:\"Detection science\",slug:\"detection-science\"};function m(t){return(0,r.jsx)(r.Fragment,{})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var F=C;return D(X);})();\n;return Component;"},"_id":"categories/detection-science.mdx","_raw":{"sourceFilePath":"categories/detection-science.mdx","sourceFileName":"detection-science.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/detection-science"},"type":"Category","url":"/categories/detection-science"}]},"seriesArticles":null},"__N_SSG":true},"page":"/[slug]","query":{"slug":"detecting-hotkey-based-keyloggers-jp"},"buildId":"0PDZemg2oGX1bus_dquF1","assetPrefix":"/security-labs","isFallback":false,"gsp":true,"scriptLoader":[]}</script></body></html>