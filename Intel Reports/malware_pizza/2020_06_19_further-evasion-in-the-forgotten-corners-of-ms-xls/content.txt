<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">

<title>Further Evasion in the Forgotten Corners of MS-XLS &#8211; Yet Another Security Blog</title>
<meta name='robots' content='max-image-preview:large' />

<!-- Async WordPress.com Remote Login -->
<script id="wpcom_remote_login_js">
var wpcom_remote_login_extra_auth = '';
function wpcom_remote_login_remove_dom_node_id( element_id ) {
	var dom_node = document.getElementById( element_id );
	if ( dom_node ) { dom_node.parentNode.removeChild( dom_node ); }
}
function wpcom_remote_login_remove_dom_node_classes( class_name ) {
	var dom_nodes = document.querySelectorAll( '.' + class_name );
	for ( var i = 0; i < dom_nodes.length; i++ ) {
		dom_nodes[ i ].parentNode.removeChild( dom_nodes[ i ] );
	}
}
function wpcom_remote_login_final_cleanup() {
	wpcom_remote_login_remove_dom_node_classes( "wpcom_remote_login_msg" );
	wpcom_remote_login_remove_dom_node_id( "wpcom_remote_login_key" );
	wpcom_remote_login_remove_dom_node_id( "wpcom_remote_login_validate" );
	wpcom_remote_login_remove_dom_node_id( "wpcom_remote_login_js" );
	wpcom_remote_login_remove_dom_node_id( "wpcom_request_access_iframe" );
	wpcom_remote_login_remove_dom_node_id( "wpcom_request_access_styles" );
}

// Watch for messages back from the remote login
window.addEventListener( "message", function( e ) {
	if ( e.origin === "https://r-login.wordpress.com" ) {
		var data = {};
		try {
			data = JSON.parse( e.data );
		} catch( e ) {
			wpcom_remote_login_final_cleanup();
			return;
		}

		if ( data.msg === 'LOGIN' ) {
			// Clean up the login check iframe
			wpcom_remote_login_remove_dom_node_id( "wpcom_remote_login_key" );

			var id_regex = new RegExp( /^[0-9]+$/ );
			var token_regex = new RegExp( /^.*|.*|.*$/ );
			if (
				token_regex.test( data.token )
				&& id_regex.test( data.wpcomid )
			) {
				// We have everything we need to ask for a login
				var script = document.createElement( "script" );
				script.setAttribute( "id", "wpcom_remote_login_validate" );
				script.src = '/remote-login.php?wpcom_remote_login=validate'
					+ '&wpcomid=' + data.wpcomid
					+ '&token=' + encodeURIComponent( data.token )
					+ '&host=' + window.location.protocol
					+ '//' + window.location.hostname
					+ '&postid=149'
					+ '&is_singular=1';
				document.body.appendChild( script );
			}

			return;
		}

		// Safari ITP, not logged in, so redirect
		if ( data.msg === 'LOGIN-REDIRECT' ) {
			window.location = 'https://wordpress.com/log-in?redirect_to=' + window.location.href;
			return;
		}

		// Safari ITP, storage access failed, remove the request
		if ( data.msg === 'LOGIN-REMOVE' ) {
			var css_zap = 'html { -webkit-transition: margin-top 1s; transition: margin-top 1s; } /* 9001 */ html { margin-top: 0 !important; } * html body { margin-top: 0 !important; } @media screen and ( max-width: 782px ) { html { margin-top: 0 !important; } * html body { margin-top: 0 !important; } }';
			var style_zap = document.createElement( 'style' );
			style_zap.type = 'text/css';
			style_zap.appendChild( document.createTextNode( css_zap ) );
			document.body.appendChild( style_zap );

			var e = document.getElementById( 'wpcom_request_access_iframe' );
			e.parentNode.removeChild( e );

			document.cookie = 'wordpress_com_login_access=denied; path=/; max-age=31536000';

			return;
		}

		// Safari ITP
		if ( data.msg === 'REQUEST_ACCESS' ) {
			console.log( 'request access: safari' );

			// Check ITP iframe enable/disable knob
			if ( wpcom_remote_login_extra_auth !== 'safari_itp_iframe' ) {
				return;
			}

			// If we are in a "private window" there is no ITP.
			var private_window = false;
			try {
				var opendb = window.openDatabase( null, null, null, null );
			} catch( e ) {
				private_window = true;
			}

			if ( private_window ) {
				console.log( 'private window' );
				return;
			}

			var iframe = document.createElement( 'iframe' );
			iframe.id = 'wpcom_request_access_iframe';
			iframe.setAttribute( 'scrolling', 'no' );
			iframe.setAttribute( 'sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin allow-top-navigation-by-user-activation' );
			iframe.src = 'https://r-login.wordpress.com/remote-login.php?wpcom_remote_login=request_access&origin=' + encodeURIComponent( data.origin ) + '&wpcomid=' + encodeURIComponent( data.wpcomid );

			var css = 'html { -webkit-transition: margin-top 1s; transition: margin-top 1s; } /* 9001 */ html { margin-top: 46px !important; } * html body { margin-top: 46px !important; } @media screen and ( max-width: 660px ) { html { margin-top: 71px !important; } * html body { margin-top: 71px !important; } #wpcom_request_access_iframe { display: block; height: 71px !important; } } #wpcom_request_access_iframe { border: 0px; height: 46px; position: fixed; top: 0; left: 0; width: 100%; min-width: 100%; z-index: 99999; background: #23282d; } ';

			var style = document.createElement( 'style' );
			style.type = 'text/css';
			style.id = 'wpcom_request_access_styles';
			style.appendChild( document.createTextNode( css ) );
			document.body.appendChild( style );

			document.body.appendChild( iframe );
		}

		if ( data.msg === 'DONE' ) {
			wpcom_remote_login_final_cleanup();
		}
	}
}, false );

// Inject the remote login iframe after the page has had a chance to load
// more critical resources
window.addEventListener( "DOMContentLoaded", function( e ) {
	var iframe = document.createElement( "iframe" );
	iframe.style.display = "none";
	iframe.setAttribute( "scrolling", "no" );
	iframe.setAttribute( "id", "wpcom_remote_login_key" );
	iframe.src = "https://r-login.wordpress.com/remote-login.php"
		+ "?wpcom_remote_login=key"
		+ "&origin=aHR0cHM6Ly9tYWx3YXJlLnBpenph"
		+ "&wpcomid=169765583"
		+ "&time=1734506340";
	document.body.appendChild( iframe );
}, false );
</script>
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//s2.wp.com' />
<link rel='dns-prefetch' href='//s1.wp.com' />
<link rel='dns-prefetch' href='//widgets.wp.com' />
<link rel='dns-prefetch' href='//wordpress.com' />
<link rel="alternate" type="application/rss+xml" title="Yet Another Security Blog &raquo; Feed" href="https://malware.pizza/feed/" />
<link rel="alternate" type="application/rss+xml" title="Yet Another Security Blog &raquo; Comments Feed" href="https://malware.pizza/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Yet Another Security Blog &raquo; Further Evasion in the Forgotten Corners of&nbsp;MS-XLS Comments Feed" href="https://malware.pizza/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/feed/" />
	<script type="text/javascript">
		/* <![CDATA[ */
		function addLoadEvent(func) {
			var oldonload = window.onload;
			if (typeof window.onload != 'function') {
				window.onload = func;
			} else {
				window.onload = function () {
					oldonload();
					func();
				}
			}
		}
		/* ]]> */
	</script>
	<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/72x72\/","ext":".png","svgUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/s2.wp.com\/wp-includes\/js\/wp-emoji-release.min.js?m=1719498190i&ver=6.8-alpha-59438"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-0-1' href='https://s1.wp.com/_static/??-eJxtzFsKgCAQheENZaMg+BStRXQI80oz0vbDCILo5cAHhx/OJlwtjIUhd9FS30Ih2JGbdfEx5FrH+J6Q4MBkGb1olfij2RFN8J9MIeIbvjXua16UUUZLLY3eL2BkNNM=&cssminify=yes' type='text/css' media='all' />
<style id='wp-emoji-styles-inline-css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-2-1' href='https://s1.wp.com/_static/??-eJyljkEOwiAQRS8kjC0m6sJ4FqATpFIgM4OG21vdmLhq4vLn5b18eFblSxbMAjW1EDNDaOt0SGElhPAYzvqk9+BaTBO4VPxdpejIUgeWnlB75h38F5IbLltCH4thRqn2rdtemqhAcdr85SdBVmIO/NWvy2U4GmPGgxnN/AKJpmpc&cssminify=yes' type='text/css' media='all' />
<style id='wp-block-library-inline-css'>
.has-text-align-justify {
	text-align:justify;
}
.has-text-align-justify{text-align:justify;}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-4-1' href='https://s2.wp.com/_static/??-eJzTLy/QzcxLzilNSS3WzyrWz01NyUxMzUnNTc0rQeEU5CRWphbp5qSmJyZX6uVm5uklFxfr6OPTDpRD5sM02efaGpoZmFkYGRuZGmQBAHPvL0Y=&cssminify=yes' type='text/css' media='all' />
<style id='jetpack-sharing-buttons-style-inline-css'>
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-6-1' href='https://s2.wp.com/wp-content/plugins/coblocks/2.18.1-simple-rev.4/dist/coblocks-style.css?m=1681832297i&cssminify=yes' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-8-1' href='https://s1.wp.com/_static/??/wp-content/mu-plugins/core-compat/wp-mediaelement.css,/wp-content/mu-plugins/wpcom-bbpress-premium-themes.css?m=1432920480j&cssminify=yes' type='text/css' media='all' />
<style id='global-styles-inline-css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #fff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--medium-blue: #0087be;--wp--preset--color--bright-blue: #00aadc;--wp--preset--color--dark-gray: #4d4d4b;--wp--preset--color--light-gray: #b3b3b1;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-family--albert-sans: 'Albert Sans', sans-serif;--wp--preset--font-family--alegreya: Alegreya, serif;--wp--preset--font-family--arvo: Arvo, serif;--wp--preset--font-family--bodoni-moda: 'Bodoni Moda', serif;--wp--preset--font-family--bricolage-grotesque: 'Bricolage Grotesque', sans-serif;--wp--preset--font-family--cabin: Cabin, sans-serif;--wp--preset--font-family--chivo: Chivo, sans-serif;--wp--preset--font-family--commissioner: Commissioner, sans-serif;--wp--preset--font-family--cormorant: Cormorant, serif;--wp--preset--font-family--courier-prime: 'Courier Prime', monospace;--wp--preset--font-family--crimson-pro: 'Crimson Pro', serif;--wp--preset--font-family--dm-mono: 'DM Mono', monospace;--wp--preset--font-family--dm-sans: 'DM Sans', sans-serif;--wp--preset--font-family--dm-serif-display: 'DM Serif Display', serif;--wp--preset--font-family--domine: Domine, serif;--wp--preset--font-family--eb-garamond: 'EB Garamond', serif;--wp--preset--font-family--epilogue: Epilogue, sans-serif;--wp--preset--font-family--fahkwang: Fahkwang, sans-serif;--wp--preset--font-family--figtree: Figtree, sans-serif;--wp--preset--font-family--fira-sans: 'Fira Sans', sans-serif;--wp--preset--font-family--fjalla-one: 'Fjalla One', sans-serif;--wp--preset--font-family--fraunces: Fraunces, serif;--wp--preset--font-family--gabarito: Gabarito, system-ui;--wp--preset--font-family--ibm-plex-mono: 'IBM Plex Mono', monospace;--wp--preset--font-family--ibm-plex-sans: 'IBM Plex Sans', sans-serif;--wp--preset--font-family--ibarra-real-nova: 'Ibarra Real Nova', serif;--wp--preset--font-family--instrument-serif: 'Instrument Serif', serif;--wp--preset--font-family--inter: Inter, sans-serif;--wp--preset--font-family--josefin-sans: 'Josefin Sans', sans-serif;--wp--preset--font-family--jost: Jost, sans-serif;--wp--preset--font-family--libre-baskerville: 'Libre Baskerville', serif;--wp--preset--font-family--libre-franklin: 'Libre Franklin', sans-serif;--wp--preset--font-family--literata: Literata, serif;--wp--preset--font-family--lora: Lora, serif;--wp--preset--font-family--merriweather: Merriweather, serif;--wp--preset--font-family--montserrat: Montserrat, sans-serif;--wp--preset--font-family--newsreader: Newsreader, serif;--wp--preset--font-family--noto-sans-mono: 'Noto Sans Mono', sans-serif;--wp--preset--font-family--nunito: Nunito, sans-serif;--wp--preset--font-family--open-sans: 'Open Sans', sans-serif;--wp--preset--font-family--overpass: Overpass, sans-serif;--wp--preset--font-family--pt-serif: 'PT Serif', serif;--wp--preset--font-family--petrona: Petrona, serif;--wp--preset--font-family--piazzolla: Piazzolla, serif;--wp--preset--font-family--playfair-display: 'Playfair Display', serif;--wp--preset--font-family--plus-jakarta-sans: 'Plus Jakarta Sans', sans-serif;--wp--preset--font-family--poppins: Poppins, sans-serif;--wp--preset--font-family--raleway: Raleway, sans-serif;--wp--preset--font-family--roboto: Roboto, sans-serif;--wp--preset--font-family--roboto-slab: 'Roboto Slab', serif;--wp--preset--font-family--rubik: Rubik, sans-serif;--wp--preset--font-family--rufina: Rufina, serif;--wp--preset--font-family--sora: Sora, sans-serif;--wp--preset--font-family--source-sans-3: 'Source Sans 3', sans-serif;--wp--preset--font-family--source-serif-4: 'Source Serif 4', serif;--wp--preset--font-family--space-mono: 'Space Mono', monospace;--wp--preset--font-family--syne: Syne, sans-serif;--wp--preset--font-family--texturina: Texturina, serif;--wp--preset--font-family--urbanist: Urbanist, sans-serif;--wp--preset--font-family--work-sans: 'Work Sans', sans-serif;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}.has-albert-sans-font-family{font-family: var(--wp--preset--font-family--albert-sans) !important;}.has-alegreya-font-family{font-family: var(--wp--preset--font-family--alegreya) !important;}.has-arvo-font-family{font-family: var(--wp--preset--font-family--arvo) !important;}.has-bodoni-moda-font-family{font-family: var(--wp--preset--font-family--bodoni-moda) !important;}.has-bricolage-grotesque-font-family{font-family: var(--wp--preset--font-family--bricolage-grotesque) !important;}.has-cabin-font-family{font-family: var(--wp--preset--font-family--cabin) !important;}.has-chivo-font-family{font-family: var(--wp--preset--font-family--chivo) !important;}.has-commissioner-font-family{font-family: var(--wp--preset--font-family--commissioner) !important;}.has-cormorant-font-family{font-family: var(--wp--preset--font-family--cormorant) !important;}.has-courier-prime-font-family{font-family: var(--wp--preset--font-family--courier-prime) !important;}.has-crimson-pro-font-family{font-family: var(--wp--preset--font-family--crimson-pro) !important;}.has-dm-mono-font-family{font-family: var(--wp--preset--font-family--dm-mono) !important;}.has-dm-sans-font-family{font-family: var(--wp--preset--font-family--dm-sans) !important;}.has-dm-serif-display-font-family{font-family: var(--wp--preset--font-family--dm-serif-display) !important;}.has-domine-font-family{font-family: var(--wp--preset--font-family--domine) !important;}.has-eb-garamond-font-family{font-family: var(--wp--preset--font-family--eb-garamond) !important;}.has-epilogue-font-family{font-family: var(--wp--preset--font-family--epilogue) !important;}.has-fahkwang-font-family{font-family: var(--wp--preset--font-family--fahkwang) !important;}.has-figtree-font-family{font-family: var(--wp--preset--font-family--figtree) !important;}.has-fira-sans-font-family{font-family: var(--wp--preset--font-family--fira-sans) !important;}.has-fjalla-one-font-family{font-family: var(--wp--preset--font-family--fjalla-one) !important;}.has-fraunces-font-family{font-family: var(--wp--preset--font-family--fraunces) !important;}.has-gabarito-font-family{font-family: var(--wp--preset--font-family--gabarito) !important;}.has-ibm-plex-mono-font-family{font-family: var(--wp--preset--font-family--ibm-plex-mono) !important;}.has-ibm-plex-sans-font-family{font-family: var(--wp--preset--font-family--ibm-plex-sans) !important;}.has-ibarra-real-nova-font-family{font-family: var(--wp--preset--font-family--ibarra-real-nova) !important;}.has-instrument-serif-font-family{font-family: var(--wp--preset--font-family--instrument-serif) !important;}.has-inter-font-family{font-family: var(--wp--preset--font-family--inter) !important;}.has-josefin-sans-font-family{font-family: var(--wp--preset--font-family--josefin-sans) !important;}.has-jost-font-family{font-family: var(--wp--preset--font-family--jost) !important;}.has-libre-baskerville-font-family{font-family: var(--wp--preset--font-family--libre-baskerville) !important;}.has-libre-franklin-font-family{font-family: var(--wp--preset--font-family--libre-franklin) !important;}.has-literata-font-family{font-family: var(--wp--preset--font-family--literata) !important;}.has-lora-font-family{font-family: var(--wp--preset--font-family--lora) !important;}.has-merriweather-font-family{font-family: var(--wp--preset--font-family--merriweather) !important;}.has-montserrat-font-family{font-family: var(--wp--preset--font-family--montserrat) !important;}.has-newsreader-font-family{font-family: var(--wp--preset--font-family--newsreader) !important;}.has-noto-sans-mono-font-family{font-family: var(--wp--preset--font-family--noto-sans-mono) !important;}.has-nunito-font-family{font-family: var(--wp--preset--font-family--nunito) !important;}.has-open-sans-font-family{font-family: var(--wp--preset--font-family--open-sans) !important;}.has-overpass-font-family{font-family: var(--wp--preset--font-family--overpass) !important;}.has-pt-serif-font-family{font-family: var(--wp--preset--font-family--pt-serif) !important;}.has-petrona-font-family{font-family: var(--wp--preset--font-family--petrona) !important;}.has-piazzolla-font-family{font-family: var(--wp--preset--font-family--piazzolla) !important;}.has-playfair-display-font-family{font-family: var(--wp--preset--font-family--playfair-display) !important;}.has-plus-jakarta-sans-font-family{font-family: var(--wp--preset--font-family--plus-jakarta-sans) !important;}.has-poppins-font-family{font-family: var(--wp--preset--font-family--poppins) !important;}.has-raleway-font-family{font-family: var(--wp--preset--font-family--raleway) !important;}.has-roboto-font-family{font-family: var(--wp--preset--font-family--roboto) !important;}.has-roboto-slab-font-family{font-family: var(--wp--preset--font-family--roboto-slab) !important;}.has-rubik-font-family{font-family: var(--wp--preset--font-family--rubik) !important;}.has-rufina-font-family{font-family: var(--wp--preset--font-family--rufina) !important;}.has-sora-font-family{font-family: var(--wp--preset--font-family--sora) !important;}.has-source-sans-3-font-family{font-family: var(--wp--preset--font-family--source-sans-3) !important;}.has-source-serif-4-font-family{font-family: var(--wp--preset--font-family--source-serif-4) !important;}.has-space-mono-font-family{font-family: var(--wp--preset--font-family--space-mono) !important;}.has-syne-font-family{font-family: var(--wp--preset--font-family--syne) !important;}.has-texturina-font-family{font-family: var(--wp--preset--font-family--texturina) !important;}.has-urbanist-font-family{font-family: var(--wp--preset--font-family--urbanist) !important;}.has-work-sans-font-family{font-family: var(--wp--preset--font-family--work-sans) !important;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-10-1' href='https://s2.wp.com/wp-content/mu-plugins/jetpack-mu-wpcom-plugin/moon/vendor/automattic/jetpack-mu-wpcom/src/build/verbum-comments/verbum-comments.css?m=1729082728i&cssminify=yes' type='text/css' media='all' />
<link rel='stylesheet' id='verbum-gutenberg-css-css' href='https://widgets.wp.com/verbum-block-editor/block-editor.css?ver=1721244820' media='all' />
<link crossorigin='anonymous' rel='stylesheet' id='all-css-12-1' href='https://s2.wp.com/_static/??-eJydUMsOgjAQ/CHrxirhZPwUA3UtC32lLSH+vQsYNUo4cGlmppmd3YEhCOVdRpfB9iKYXpNLoLy1LAlDHTJLP8qelR0QOJ+J3ekN5o/lmS3mUKnuxcF67+BKToFGh3Geswj/huYGLa8V+hrI3TAgP7wac0OpwSgkpPwwuMU43lobr7pNseM5U7QYAje2VkdEjtEM9ZT5oWsmjV7wclUmLu+biLupKI7Wiz0fSnkqj1IWRfsEUfe0Nw==&cssminify=yes' type='text/css' media='all' />
<style id='independent-publisher-2-style-inline-css'>
.byline { clip: rect(1px, 1px, 1px, 1px); height: 1px; position: absolute; overflow: hidden; width: 1px; }
</style>
<link crossorigin='anonymous' rel='stylesheet' id='print-css-13-1' href='https://s1.wp.com/wp-content/mu-plugins/global-print/global-print.css?m=1465851035i&cssminify=yes' type='text/css' media='print' />
<style id='jetpack-global-styles-frontend-style-inline-css'>
:root { --font-headings: unset; --font-base: unset; --font-headings-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; --font-base-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-16-1' href='https://s2.wp.com/_static/??-eJyNjcEKwjAQRH/IuA1aehI/ReImJKmb3eAmFP9eW3oRL16GeTC8gaUaFG6BG5RuKvWYWWEOrTp87AxFZA3fKShocs/gnfevrWaOR1Q9wP+mW2YEFcyODEkU/YIfW0uhfH7TGSLJ3dE6uJaLneww2mkYT/MbUOlJHA==&cssminify=yes' type='text/css' media='all' />
<script type="text/javascript" id="jetpack_related-posts-js-extra">
/* <![CDATA[ */
var related_posts_js_options = {"post_heading":"h4"};
/* ]]> */
</script>
<script type="text/javascript" id="wpcom-actionbar-placeholder-js-extra">
/* <![CDATA[ */
var actionbardata = {"siteID":"169765583","postID":"149","siteURL":"https:\/\/malware.pizza","xhrURL":"https:\/\/malware.pizza\/wp-admin\/admin-ajax.php","nonce":"c432faa6c1","isLoggedIn":"","statusMessage":"","subsEmailDefault":"instantly","proxyScriptUrl":"https:\/\/s0.wp.com\/wp-content\/js\/wpcom-proxy-request.js?ver=20211021","shortlink":"https:\/\/wp.me\/pbujMz-2p","i18n":{"followedText":"New posts from this site will now appear in your <a href=\"https:\/\/wordpress.com\/read\">Reader<\/a>","foldBar":"Collapse this bar","unfoldBar":"Expand this bar"}};
/* ]]> */
</script>
<script type="text/javascript" id="jetpack-mu-wpcom-settings-js-before">
/* <![CDATA[ */
var JETPACK_MU_WPCOM_SETTINGS = {"assetsUrl":"https:\/\/s1.wp.com\/wp-content\/mu-plugins\/jetpack-mu-wpcom-plugin\/moon\/vendor\/automattic\/jetpack-mu-wpcom\/src\/build\/"};
/* ]]> */
</script>
<script crossorigin='anonymous' type='text/javascript'  src='https://s2.wp.com/_static/??/wp-content/mu-plugins/jetpack-plugin/moon/_inc/build/related-posts/related-posts.min.js,/wp-content/js/rlt-proxy.js?m=1733762913j'></script>
<script type="text/javascript" id="rlt-proxy-js-after">
/* <![CDATA[ */
	rltInitialize( {"token":null,"iframeOrigins":["https:\/\/widgets.wp.com"]} );
/* ]]> */
</script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://malwarepizza.wordpress.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress.com" />
<link rel="canonical" href="https://malware.pizza/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/" />
<link rel='shortlink' href='https://wp.me/pbujMz-2p' />
<link rel="alternate" type="application/json+oembed" href="https://public-api.wordpress.com/oembed/?format=json&amp;url=https%3A%2F%2Fmalware.pizza%2F2020%2F06%2F19%2Ffurther-evasion-in-the-forgotten-corners-of-ms-xls%2F&amp;for=wpcom-auto-discovery" /><link rel="alternate" type="application/xml+oembed" href="https://public-api.wordpress.com/oembed/?format=xml&amp;url=https%3A%2F%2Fmalware.pizza%2F2020%2F06%2F19%2Ffurther-evasion-in-the-forgotten-corners-of-ms-xls%2F&amp;for=wpcom-auto-discovery" />
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Further Evasion in the Forgotten Corners of MS-XLS" />
<meta property="og:url" content="https://malware.pizza/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/" />
<meta property="og:description" content="It&#8217;s been a few weeks since my last discussion1 of Excel 4.0 macro shenanigans and the space continues to change. LastLine published a great report2 which summarized the progression of weapon…" />
<meta property="article:published_time" content="2020-06-19T17:00:00+00:00" />
<meta property="article:modified_time" content="2020-06-19T17:12:51+00:00" />
<meta property="og:site_name" content="Yet Another Security Blog" />
<meta property="og:image" content="https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png" />
<meta property="og:image:width" content="1148" />
<meta property="og:image:height" content="839" />
<meta property="og:image:alt" content="" />
<meta property="og:locale" content="en_US" />
<meta property="article:publisher" content="https://www.facebook.com/WordPresscom" />
<meta name="twitter:text:title" content="Further Evasion in the Forgotten Corners of&nbsp;MS-XLS" />
<meta name="twitter:image" content="https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png?w=640" />
<meta name="twitter:card" content="summary_large_image" />

<!-- End Jetpack Open Graph Tags -->
<link rel="shortcut icon" type="image/x-icon" href="https://s1.wp.com/i/favicon.ico" sizes="16x16 24x24 32x32 48x48" />
<link rel="icon" type="image/x-icon" href="https://s1.wp.com/i/favicon.ico" sizes="16x16 24x24 32x32 48x48" />
<link rel="apple-touch-icon" href="https://s2.wp.com/i/webclip.png" />
<link rel="search" type="application/opensearchdescription+xml" href="https://malware.pizza/osd.xml" title="Yet Another Security Blog" />
<link rel="search" type="application/opensearchdescription+xml" href="https://s1.wp.com/opensearch.xml" title="WordPress.com" />
<link rel="pingback" href="https://malware.pizza/xmlrpc.php"><meta name="application-name" content="Yet Another Security Blog" /><meta name="msapplication-window" content="width=device-width;height=device-height" /><meta name="description" content="It&#039;s been a few weeks since my last discussion1 of Excel 4.0 macro shenanigans and the space continues to change. LastLine published a great report2 which summarized the progression of weaponized macros from February through May. The good folks at InQuest have continued3 identifying4 malicious5 macro documents6. @DissectMalware&#039;s excellent XLMMacroDeobfuscator7 has massively expanded its range&hellip;" />
</head>

<body class="post-template-default single single-post postid-149 single-format-standard wp-embed-responsive customizer-styles-applied jetpack-reblog-enabled author-hidden">

<div id="page" class="hfeed site">
	<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

	<div id="hero-header" class="site-hero-section">
		<header id="masthead" class="site-header" role="banner">
			<div class="inner">
				<div class="site-branding">
					
											<a class="site-logo-link" href="https://malware.pizza/">
							<img alt='' src='https://0.gravatar.com/avatar/31646210036f6d54f3525371307bafcca57deec9775e8fa6509df7401bcba358?s=80&#038;d=identicon&#038;r=G' srcset='https://0.gravatar.com/avatar/31646210036f6d54f3525371307bafcca57deec9775e8fa6509df7401bcba358?s=80&#038;d=identicon&#038;r=G 1x, https://0.gravatar.com/avatar/31646210036f6d54f3525371307bafcca57deec9775e8fa6509df7401bcba358?s=120&#038;d=identicon&#038;r=G 1.5x, https://0.gravatar.com/avatar/31646210036f6d54f3525371307bafcca57deec9775e8fa6509df7401bcba358?s=160&#038;d=identicon&#038;r=G 2x, https://0.gravatar.com/avatar/31646210036f6d54f3525371307bafcca57deec9775e8fa6509df7401bcba358?s=240&#038;d=identicon&#038;r=G 3x, https://0.gravatar.com/avatar/31646210036f6d54f3525371307bafcca57deec9775e8fa6509df7401bcba358?s=320&#038;d=identicon&#038;r=G 4x' class='avatar avatar-80 site-logo-image' height='80' width='80' loading='eager' decoding='async' />						</a><!-- .site-logo-link -->
													<p class="site-title"><a href="https://malware.pizza/" rel="home">Yet Another Security Blog</a></p>
										</div><!-- .site-branding -->

				
				
			</div><!-- .inner -->
		</header><!-- #masthead -->
	</div>

		
	
	
	<div id="content-wrapper" class="content-wrapper">
		<div id="content" class="site-content">

	<div id="primary" class="content-area">
		<main id="main" class="site-main" role="main">

		
			
<article id="post-149" class="post-149 post type-post status-publish format-standard hentry category-malware tag-excel-4-0-macros tag-malware tag-unicode">
			<header class="entry-header">
			<h1 class="entry-title">Further Evasion in the Forgotten Corners of&nbsp;MS-XLS</h1>		</header><!-- .entry-header -->		<div class="entry-meta">
			<span class="byline">
				<a href="https://malware.pizza/author/bouncyhat/" title="Posts by Malware Enthusiast" rel="author">Malware Enthusiast</a>			</span>
							<span class="cat-links">
					<a href="https://malware.pizza/category/malware/" rel="category tag">Malware</a>				</span><!-- .cat-links -->
			
			
			<span class="published-on">
				<time class="entry-date published" datetime="2020-06-19T13:00:00-04:00">June 19, 2020</time><time class="updated" datetime="2020-06-19T13:12:51-04:00">June 19, 2020</time>			</span>

			<span class="word-count">13 Minutes</span>		</div><!-- .entry-meta -->
	
	<div class="entry-content">
		
<p>It&#8217;s been a few weeks since my last <a href="https://malware.pizza/2020/05/12/evading-av-with-excel-macros-and-biff8-xls/">discussion</a><sup>1</sup> of Excel 4.0 macro shenanigans and the space continues to change. <a href="https://www.lastline.com/">LastLine </a>published <a href="https://www.lastline.com/labsblog/evolution-of-excel-4-0-macro-weaponization/">a great report</a><sup>2</sup> which summarized the progression of weaponized macros from February through May. The good folks at <a href="https://twitter.com/Inquest">InQuest </a>have <a href="https://inquest.net/flash-alerts/IQ-FA004%3AMultiple_Actors_Abusing_New_Macro_Methods">continued</a><sup>3</sup> <a href="https://twitter.com/InQuest/status/1268568312499376130">identifying</a><sup>4</sup> <a href="https://twitter.com/DissectMalware/status/1268491222299086854">malicious</a><sup>5</sup> <a href="https://twitter.com/Anti_Expl0it/status/1269895583633829888">macro documents</a><sup>6</sup>. <a href="https://twitter.com/DissectMalware">@DissectMalware</a>&#8216;s excellent <a href="https://github.com/DissectMalware/XLMMacroDeobfuscator">XLMMacroDeobfuscator</a><sup>7</sup> has massively expanded its range of macro emulation, and <a href="https://twitter.com/FortyNorthSec">FortyNorth Security</a> released <a href="https://github.com/FortyNorthSecurity/EXCELntDonut/">EXCELntDonut</a><sup>8</sup>, a tool for converting <a href="https://github.com/TheWover/donut">Donut</a><sup>9</sup> shellcode into multi-architecture Excel 4.0 macros.</p>



<p>Over the past few weeks I&#8217;ve also started seeing some of the files generated by my tool <a href="https://github.com/michaelweber/Macrome">Macrome</a><sup>10</sup> begin to <a href="https://www.virustotal.com/gui/file/b159b25b80b1830acf40813c06a48f3e72666720b7efcd406ea5031c7f214c31/detection">trigger detections on VirusTotal</a><sup>11</sup>. This is exactly the sort of thing I want to see &#8211; besides the fact that it implies that AV is getting better signal on this attack vector, it also provides an opportunity to improve my tool and take better guesses about what direction attackers will pivot in the future. I&#8217;m a big believer in a <a href="https://twitter.com/mattifestation/">@Mattifestation</a>&#8216;s approach to <a href="https://twitter.com/mattifestation/status/1263416936517468167">detection engineering</a><sup>12</sup> and detection from AV helps move the iterative development of tooling further along.</p>



<p>After realizing that some of my samples were being detected, I took several documents that had been generated during testing and submitted each of them to VirusTotal &#8211; only the larger documents appeared to be matching virus signatures. I did a quick binary search of the document sizes between what was detected on VirusTotal and what wasn&#8217;t and discovered that if a document had greater than 100 <strong>CHAR</strong> invocations, then it was considered malicious.</p>



<figure class="wp-block-image size-large"><img data-attachment-id="161" data-permalink="https://malware.pizza/100_char_expressions_match/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png" data-orig-size="1148,839" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="100_char_expressions_match" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png?w=1024" width="1024" height="748" src="https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png?w=1024" alt="" class="wp-image-161" srcset="https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png?w=1024 1024w, https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png?w=300 300w, https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png?w=768 768w, https://malware.pizza/wp-content/uploads/2020/06/100_char_expressions_match.png 1148w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>A &#8220;safe&#8221; document with exactly 100 <strong>=CHAR()</strong> expressions</figcaption></figure>



<figure class="wp-block-image size-large"><img data-attachment-id="162" data-permalink="https://malware.pizza/101_char_expressions_match/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png" data-orig-size="1163,737" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="101_char_expressions_match" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png?w=1024" width="1024" height="648" src="https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png?w=1024" alt="" class="wp-image-162" srcset="https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png?w=1024 1024w, https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png?w=300 300w, https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png?w=768 768w, https://malware.pizza/wp-content/uploads/2020/06/101_char_expressions_match.png 1163w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>A document that has one too many <strong>=CHAR()</strong> expressions</figcaption></figure>



<p>While my generated document had obfuscated the usage of the <strong>CHAR</strong> function, clearly there was a signature that could detect these alternate <strong>CHAR</strong> invocations. For reference, here is <a href="https://pastebin.com/V8SGgdZL">@DissectMalware&#8217;s macro_sheet_obfuscated_char rule</a><sup>13</sup> that the generated document attempted to avoid:</p>



<pre class="wp-block-code"><code>rule macro_sheet_obfuscated_char
{
  meta:
    description = "Finding hidden/very-hidden macros with many CHAR functions"
    Author = "DissectMalware"
    Sample = "0e9ec7a974b87f4c16c842e648dd212f80349eecb4e636087770bc1748206c3b (Zloader)"
  strings:
    $ole_marker = {D0 CF 11 E0 A1 B1 1A E1}              
    $macro_sheet_h1 = {85 00 ?? ?? ?? ?? ?? ?? 01 01}
    $macro_sheet_h2 = {85 00 ?? ?? ?? ?? ?? ?? 02 01}    
    $char_func = {06 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 1E 3D  00 41 6F 00}
  condition:
    $ole_marker at 0 and 1 of ($macro_sheet_h*) and #char_func &gt; 10
}</code></pre>



<p>My previous blog post discussed how to break the longer signature for <code>$char_func</code>, but it didn&#8217;t address what to do if the signature for the <strong>CHAR </strong>function were more reliable. In this case the signature was likely only the the three bytes of a <strong><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/87ce512d-273a-4da0-a9f8-26cf1d93508d">PtgFunc</a></strong><sup>14</sup> invocation with the <a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/00b5dd7d-51ca-4938-b7b7-483fe0e5933b"><strong>CHAR</strong> <strong>Ftab</strong> value</a><sup>15</sup> (<code>41 6F 00</code>) but repeatedly occurring enough times to avoid false positives. This is likely the reason for the &#8220;high&#8221; minimum count requirement of 101+ instances versus the 11+ in the <code>macro_sheet_obfuscated_char</code> rule.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="171" data-permalink="https://malware.pizza/image-1-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-1.png" data-orig-size="629,64" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-1" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-1.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-1.png?w=629" width="629" height="64" src="https://malware.pizza/wp-content/uploads/2020/06/image-1.png?w=629" alt="" class="wp-image-171" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-1.png 629w, https://malware.pizza/wp-content/uploads/2020/06/image-1.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-1.png?w=300 300w" sizes="(max-width: 629px) 100vw, 629px" /><figcaption>An obfuscated invocation of CHAR(65) that triggered results on VirusTotal after 101+ instances were used</figcaption></figure></div>



<p>One &#8220;quick&#8221; hack to bypass this signature is to abuse the fact that <strong><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/5d105171-6b73-4f40-a7cd-6bf2aae15e83">PtgFuncVar</a></strong><sup>16</sup> can be used instead of <strong>PtgFunc </strong>to invoke the <strong>CHAR </strong>function (<code>42 01 6F 00</code>). <strong>PtgFuncVar </strong>is largely identical to <strong>PtgFunc</strong> except for the fact that <strong>PtgFuncVar</strong> must also be provided with the number of arguments being passed into the called function. While <strong>PtgFunc</strong> is only used to call functions with a fixed number of arguments, there is nothing that stops us from invoking <strong>PtgFuncVar</strong> and providing the correct argument count. <strong>PtgFunc(CHAR)</strong> is identical to <strong>PtgFuncVar(1,CHAR)</strong>. </p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="169" data-permalink="https://malware.pizza/image-17/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image.png" data-orig-size="626,46" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image.png?w=626" loading="lazy" width="626" height="46" src="https://malware.pizza/wp-content/uploads/2020/06/image.png?w=626" alt="" class="wp-image-169" srcset="https://malware.pizza/wp-content/uploads/2020/06/image.png 626w, https://malware.pizza/wp-content/uploads/2020/06/image.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image.png?w=300 300w" sizes="(max-width: 626px) 100vw, 626px" /><figcaption>Hex dump of a <strong><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/8e3c6978-6c9f-4915-a826-07613204b244">FORMULA</a><sup>17</sup></strong><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/8e3c6978-6c9f-4915-a826-07613204b244"> </a>BIFF8 record using the alternate <strong>PtgFuncVar(1,CHAR)</strong> invocation</figcaption></figure></div>



<p>This is a nice signature evasion trick, but it ultimately is vulnerable to the same method of detection, just with a slightly different byte signature. Fundamentally, many tricks that macro sheets rely on in order to deobfuscate themselves will rely on invoking a handful of functions repeatedly. Large macro payloads can require invoking some form of <strong>CHAR</strong> and <strong>FORMULA </strong>hundreds of times &#8211; what will adversaries do once there are better signatures put into place for detecting suspiciously repeated usages of these functions?</p>



<h2 class="wp-block-heading">Re-Enter the Subroutine</h2>



<p>In normal programming, when we constantly call the same code over and over again, we write a function. Even in VBA macros, the idea of subroutines exist to allow for simple code-reuse. While the <a href="https://exceloffthegrid.com/using-excel-4-macro-functions/">Excel 4.0 Macro Functions Reference</a><sup>18</sup> mentions the idea of Excel 4.0 macro subroutines several times &#8211; it never actually details how these can be created.</p>



<p>In practice, Excel 4.0 macro subroutines are really just a sequence of <strong>RUN </strong>and <strong>RETURN </strong>functions. A subroutine is invoked by calling the <strong>RUN</strong> function with an argument referencing the start cell of the sub-macro. Execution then starts at that cell and continues down the column until a <strong>RETURN</strong> function is invoked. The argument passed to <strong>RETURN</strong> is what the return value of the function will be. For example, if we wanted to create a subroutine that would eventually return the string &#8220;Hello World&#8221;, it would look something like this:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="174" data-permalink="https://malware.pizza/image-2-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-2.png" data-orig-size="435,100" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-2" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-2.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-2.png?w=435" loading="lazy" width="435" height="100" src="https://malware.pizza/wp-content/uploads/2020/06/image-2.png?w=435" alt="" class="wp-image-174" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-2.png 435w, https://malware.pizza/wp-content/uploads/2020/06/image-2.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-2.png?w=300 300w" sizes="(max-width: 435px) 100vw, 435px" /><figcaption>A simple example of an Excel 4.0 macro subroutine &#8211; it will eventually pop up an alert saying &#8220;Hello World&#8221;</figcaption></figure></div>



<p>Excel actually even aliases the <strong>RUN</strong> command by letting users specify a cell reference or cell name and invoke it directly by appending <strong>()</strong> to the invocation as seen below:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="176" data-permalink="https://malware.pizza/image-3-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-3.png" data-orig-size="437,96" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-3" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-3.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-3.png?w=437" loading="lazy" width="437" height="96" src="https://malware.pizza/wp-content/uploads/2020/06/image-3.png?w=437" alt="" class="wp-image-176" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-3.png 437w, https://malware.pizza/wp-content/uploads/2020/06/image-3.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-3.png?w=300 300w" sizes="(max-width: 437px) 100vw, 437px" /><figcaption>This is functionally identical to the previous Macro sheet</figcaption></figure></div>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="178" data-permalink="https://malware.pizza/image-4-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-4.png" data-orig-size="440,187" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-4" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-4.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-4.png?w=440" loading="lazy" width="440" height="187" src="https://malware.pizza/wp-content/uploads/2020/06/image-4.png?w=440" alt="" class="wp-image-178" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-4.png 440w, https://malware.pizza/wp-content/uploads/2020/06/image-4.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-4.png?w=300 300w" sizes="(max-width: 440px) 100vw, 440px" /><figcaption>This is also the same, except B1 has been named MySub</figcaption></figure></div>



<p>It&#8217;s not a very common way to see macros used right now, but <a href="https://twitter.com/DissectMalware/status/1269535826813366273">malware authors are clearly already aware of this</a><sup>19</sup> as can be seen from a sample shared by <a href="https://www.twitter.com/JohnLaTwc">@JohnLaTwc</a> and analyzed by <a href="https://www.twitter.com/DissectMalware">@DissectMalware</a>:</p>



<figure class="wp-block-image"><img src="https://pbs.twimg.com/media/EZ5KEF9WoAYs_Uo?format=png&amp;name=large" alt="Image" /><figcaption>Example behavior from a <a href="https://www.virustotal.com/gui/file/a53be0bd2a838ffe172181f3953a2bc8a1b7c447fb56d885391921a7c3eac1f9/details">maldoc submitted to VirusTotal in March 2019</a><sup>20</sup> (Image from <a href="https://www.twitter.com/DissectMalware">@DissectMalware</a>)</figcaption></figure>



<p>While using subroutines in this way might be slightly helpful for slowing analysis of a document, it&#8217;s really only dipping its toes into the potential of &#8220;proper&#8221; subroutine usage in a maldoc. For example, what if instead of having the byte sequence <code>41 6F 00</code> every time we invoked <strong>CHAR</strong>, we moved the <strong>CHAR</strong> expression into a subroutine and just invoked the subroutine repeatedly? The predictable function invocation would only appear once, and it would be much harder to claim that EVERY usage of <strong>CHAR</strong> is malicious. Even Windows Defender&#8217;s aggressive blocking of <strong>=CHAR(#)</strong> invocations requires other conditions beyond matching three bytes. Here&#8217;s an example of what replacing the <strong>CHAR</strong> expression with a subroutine looks like:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="187" data-permalink="https://malware.pizza/image-5-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-5.png" data-orig-size="450,165" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-5" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-5.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-5.png?w=450" loading="lazy" width="450" height="165" src="https://malware.pizza/wp-content/uploads/2020/06/image-5.png?w=450" alt="" class="wp-image-187" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-5.png 450w, https://malware.pizza/wp-content/uploads/2020/06/image-5.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-5.png?w=300 300w" sizes="(max-width: 450px) 100vw, 450px" /><figcaption>We can actually &#8220;create&#8221; our subroutine at runtime using <strong>SET.NAME</strong> to specify the subroutine cell and its argument</figcaption></figure></div>



<p>So this is slightly different from our previous examples, but the main difference is that we are invoking <strong>SET.NAME</strong> in order to specify two values:</p>



<ol class="wp-block-list"><li>We are defining the value of <strong>InvokeCharSub </strong>to be equivalent to a reference to cell B1. Later we invoke it using <strong>InvokeCharSub()</strong>, though we could also use <strong>RUN(InvokeCharSub)</strong>. </li><li>We are setting the value of the name &#8220;arg&#8221; to 65. This is essentially how we pass arguments to our subroutine. While there does appear to be an <strong>ARGUMENT</strong> function that allows explicitly defining names to store arguments, I haven&#8217;t been able to make this work any differently than just manually setting names or cell values. While <a href="https://github.com/michaelweber/Macrome/releases/tag/0.2.0">porting EXCELntDonut macros into Macrome</a><sup>21</sup> I also realized that you can simply write <strong>arg=65</strong> in an Excel cell, and it will automatically be interpreted as <strong>SET.NAME(&#8220;arg&#8221;,65)</strong></li></ol>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="193" data-permalink="https://malware.pizza/user-defined-func-1/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/user-defined-func-1.png" data-orig-size="626,139" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="user-defined-func-1" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/user-defined-func-1.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/user-defined-func-1.png?w=626" loading="lazy" width="626" height="139" src="https://malware.pizza/wp-content/uploads/2020/06/user-defined-func-1.png?w=626" alt="" class="wp-image-193" srcset="https://malware.pizza/wp-content/uploads/2020/06/user-defined-func-1.png 626w, https://malware.pizza/wp-content/uploads/2020/06/user-defined-func-1.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/user-defined-func-1.png?w=300 300w" sizes="(max-width: 626px) 100vw, 626px" /><figcaption>What a User Defined Function invocation looks like in byte form</figcaption></figure></div>



<p>Under the covers when we call <strong>InvokeCharSub()</strong>, we are having Excel call a user defined function through the <strong>PtgFuncVar</strong> Parse Thing object. User defined functions are a <strong>PtgFuncVar</strong> edge case &#8211; one of the arguments provided to the <strong>PtgFuncVar</strong> must be a <strong><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/5f05c166-dfe3-4bbf-85aa-31c09c0258c0">PtgName</a></strong><sup>22</sup>. <strong>PtgName</strong> objects reference a <strong><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/d148e898-4504-4841-a793-ee85f3ea9eef">Lbl</a></strong><sup>23</sup> entry stored within the Excel Workbook&#8217;s <a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/ca4c1748-8729-4a93-abb9-4602b3a01fb1">Globals Substream</a><sup>24</sup>. In this case, we are looking for the 3rd <strong>Lbl</strong> entry in the substream &#8211; it&#8217;s also worth noting that the index here starts at 1, rather than 0. We&#8217;ll come back to some &#8220;fun&#8221; that malware authors can have with these labels later.</p>



<figure class="wp-block-image size-large"><img data-attachment-id="197" data-permalink="https://malware.pizza/image-8-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-8.png" data-orig-size="1055,323" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-8" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-8.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-8.png?w=1024" loading="lazy" width="1024" height="313" src="https://malware.pizza/wp-content/uploads/2020/06/image-8.png?w=1024" alt="" class="wp-image-197" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-8.png?w=1022 1022w, https://malware.pizza/wp-content/uploads/2020/06/image-8.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-8.png?w=300 300w, https://malware.pizza/wp-content/uploads/2020/06/image-8.png?w=768 768w, https://malware.pizza/wp-content/uploads/2020/06/image-8.png 1055w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>The <strong>Lbl</strong> list from our test document&#8217;s Globals Substream &#8211; the 3rd item is InvokeCharSub, our subroutine name</figcaption></figure>



<p>So we have a mechanism to replace our <strong>CHAR</strong> function invocations with <strong>SET.NAME</strong> invocation followed by a call to a user defined function. This turns one very simple cell into two cells, but there&#8217;s a workaround for that as well. A final possible optimization to reduce the size of our document is to combine our variable assignment with the invocation of our subroutine by abusing the <strong>IF</strong> function to execute two expressions in a single cell &#8211; for example:</p>



<pre class="wp-block-code"><code>=IF(SET.NAME("var",65),invokeChar(),)</code></pre>



<p>The invocation of <strong>SET.NAME</strong> here saves us from having to use two cells to invoke our subroutine and lets us use a single cell which cuts down on our <strong>FORMULA</strong> record count by about half. This is the approach used by the <strong>CharSubroutine </strong>method in <a href="https://github.com/michaelweber/Macrome">Macrome</a><sup>10</sup>.</p>



<p>Going back to <a href="https://twitter.com/mattifestation/">@Mattifestation</a>&#8216;s detection engineering approach &#8211; let&#8217;s think about how we could detect this sort of approach and then analyze it. From a detection standpoint, a massive number of invocations of <strong>SET.NAME</strong> and <strong>PtgFuncVar</strong> objects with a user defined function would likely stand out. For example, if we look at the above <strong>IF</strong> statement at the byte level we get something like:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="219" data-permalink="https://malware.pizza/setname_userdefinedfunction/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/setname_userdefinedfunction.png" data-orig-size="632,111" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="setname_userdefinedfunction" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/setname_userdefinedfunction.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/setname_userdefinedfunction.png?w=632" loading="lazy" width="632" height="111" src="https://malware.pizza/wp-content/uploads/2020/06/setname_userdefinedfunction.png?w=632" alt="" class="wp-image-219" srcset="https://malware.pizza/wp-content/uploads/2020/06/setname_userdefinedfunction.png 632w, https://malware.pizza/wp-content/uploads/2020/06/setname_userdefinedfunction.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/setname_userdefinedfunction.png?w=300 300w" sizes="(max-width: 632px) 100vw, 632px" /><figcaption>A single <strong>FORMULA</strong> record containing the <strong>SET.NAME</strong> and user defined function invocation</figcaption></figure></div>



<p>We can create a signature for this by keying on the presence of a <strong>PtgFuncVar</strong> invocation of <strong>SET.NAME</strong> (<code>42 02 58 00</code>) with some arbitrary locality to a <strong>PtgFuncVar</strong> invoking a user defined function (<code>42 ?? FF 00</code> &#8211; the <strong>Ftab</strong> value  is <code>FF 00</code>, but we need a wildcard since we can&#8217;t necessarily guess the argument count). Our signature doesn&#8217;t need to care if <strong>SET.NAME</strong> comes before or after the user defined function, we just want to check for a large number of these instances. A <a href="https://virustotal.github.io/yara/">Yara</a><sup>25</sup> signature for this could look like:</p>



<pre class="wp-block-code"><code>rule msxls_set_name_and_invoke_udf
{
  meta:
    description = "Finding XLS2003 documents with a suspicious number of SET.NAME and User Defined Function invocations"
    Author = "Michael Weber (@BouncyHat)"
  strings:
    $ole_marker = {D0 CF 11 E0 A1 B1 1A E1}
    $setname_invokeudf = {42 02 58 00 &#091;0-100] 42 ?? FF 00}
    $invokeudf_setname = {42 ?? FF 00 &#091;0-100] 42 02 58 00}
  condition:
    $ole_marker at 0 and (#setname_invokeudf &gt; 100 or #invokeudf_setname &gt; 100)
}</code></pre>



<p>Note that the wildcard range <code>[0-100]</code> probably makes this computationally expensive to run on a large dataset, but the upper bound of 100 wildcard bytes could be lowered as needed. </p>



<p>This signature could still be avoided (as is true for most signatures) with a little additional effort on the part of the attacker. As demoed in <a href="https://outflank.nl/blog/2018/10/06/old-school-evil-excel-4-0-macros-xlm/">Outflank&#8217;s research</a><sup>26</sup>, we can use Excel&#8217;s <strong>WHILE</strong> functionality to iterate over a column of seemingly harmless numbers and use them to build strings of binary data or additional macro statements to populate with the <strong>FORMULA</strong> function.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="213" data-permalink="https://malware.pizza/image-14-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-14.png" data-orig-size="435,224" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-14" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-14.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-14.png?w=435" loading="lazy" width="435" height="224" src="https://malware.pizza/wp-content/uploads/2020/06/image-14.png?w=435" alt="" class="wp-image-213" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-14.png 435w, https://malware.pizza/wp-content/uploads/2020/06/image-14.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-14.png?w=300 300w" sizes="(max-width: 435px) 100vw, 435px" /><figcaption><em>Here we have a Macro, starting at B1, that replaces our numerous </em><strong>CHAR()</strong><em> invocations with a </em>subroutine at A1</figcaption></figure></div>



<p>But let&#8217;s assume that there is a foolproof signature to identify our document and that our document has made its way into the hands of an analyst armed with a tool like <a href="https://github.com/DissectMalware/XLMMacroDeobfuscator">XLMMacroDeobfuscator</a><sup>6</sup> or <a href="https://github.com/decalage2/oletools/wiki/olevba">olevba</a><sup>27</sup>. Are there any weird behaviors that can be abused to trick analysts attempting to examine our document? Thanks to Excel&#8217;s &#8220;flexibility&#8221; with <strong>Lbl</strong> records, the answer is yes.</p>



<h2 class="wp-block-heading">(Ab)Using Names in Excel 4.0 Macros</h2>



<p>The usage of <strong>Lbl</strong> record lookups when resolving names is another opportunity for malware authors to frustrate analysis. In <a href="https://malware.pizza/2020/05/12/evading-av-with-excel-macros-and-biff8-xls/">my previous blog post</a><sup>1</sup> I discussed how Excel&#8217;s flexible handling of the <strong>Auto_Open</strong> <strong>Lbl</strong> record made signature creation extremely challenging. It seems like similar issues would apply to &#8220;variable&#8221; and subroutine name invocation as well. For example &#8211; what would you expect the output of the following macro sheet to be?</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="201" data-permalink="https://malware.pizza/image-9-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-9.png" data-orig-size="454,149" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-9" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-9.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-9.png?w=454" loading="lazy" width="454" height="149" src="https://malware.pizza/wp-content/uploads/2020/06/image-9.png?w=454" alt="" class="wp-image-201" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-9.png 454w, https://malware.pizza/wp-content/uploads/2020/06/image-9.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-9.png?w=300 300w" sizes="(max-width: 454px) 100vw, 454px" /><figcaption>Assuming case sensitivity were used, the string &#8220;arg&#8221; should be displayed</figcaption></figure></div>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="202" data-permalink="https://malware.pizza/image-10-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-10.png" data-orig-size="457,166" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-10" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-10.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-10.png?w=457" loading="lazy" width="457" height="166" src="https://malware.pizza/wp-content/uploads/2020/06/image-10.png?w=457" alt="" class="wp-image-202" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-10.png 457w, https://malware.pizza/wp-content/uploads/2020/06/image-10.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-10.png?w=300 300w" sizes="(max-width: 457px) 100vw, 457px" /><figcaption>But Excel <strong>Lbl</strong> records are much more flexible than that</figcaption></figure></div>



<p>This looks like a nice trick, but it doesn&#8217;t appear to do much to frustrate analysis &#8211; at a glance. Just HOW flexible is Excel&#8217;s interchangeability with upper case and lower case letters?</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="204" data-permalink="https://malware.pizza/image-11-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-11.png" data-orig-size="157,88" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-11" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-11.png?w=157" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-11.png?w=157" loading="lazy" width="157" height="88" src="https://malware.pizza/wp-content/uploads/2020/06/image-11.png?w=157" alt="" class="wp-image-204" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-11.png 157w, https://malware.pizza/wp-content/uploads/2020/06/image-11.png?w=150 150w" sizes="(max-width: 157px) 100vw, 157px" /><figcaption>What happens if we go into the Unicode character sets?</figcaption></figure></div>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="205" data-permalink="https://malware.pizza/image-12-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-12.png" data-orig-size="348,132" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-12" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-12.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-12.png?w=348" loading="lazy" width="348" height="132" src="https://malware.pizza/wp-content/uploads/2020/06/image-12.png?w=348" alt="" class="wp-image-205" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-12.png 348w, https://malware.pizza/wp-content/uploads/2020/06/image-12.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-12.png?w=300 300w" sizes="(max-width: 348px) 100vw, 348px" /><figcaption>Obviously the lower case Zeta symbol (<strong>ζ</strong>) was going to overwrite that capital Zeta (<strong>Ζ</strong>)</figcaption></figure></div>



<p>It&#8217;s pretty flexible. There are a surprising number of multi-case characters to confuse Excel, just take a glance at the library of valid <a href="https://www.compart.com/en/unicode/category/Ll">lower case Unicode characters</a><sup>28</sup>. Unfortunately, for defenders, the <a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/87c2a057-705c-4473-a168-6d5fac4a9eba"><strong>PtgStr</strong> record</a><sup>29</sup> used by Excel to invoke <strong>SET.NAME</strong> will happily allow attackers to set arbitrary Unicode content for arguments, so this is a challenging situation to avoid. The issues don&#8217;t stop at casing confusion either &#8211; Excel also respects <a href="https://en.wikipedia.org/wiki/Unicode_equivalence">Unicode Equivalence</a><sup>30</sup>. This behavior, which is part of the <a href="https://www.unicode.org/versions/Unicode13.0.0/UnicodeStandard-13.0.pdf">Unicode specification</a><sup>31</sup>, is a <a href="https://www.dionach.com/en-us/blog/fun-with-sql-injection-using-unicode-smuggling/">consistent</a><sup>32</sup> <a href="https://hackernoon.com/%CA%BC-%C5%9B%E2%84%87%E2%84%92%E2%84%87%E2%84%82%CA%88-how-unicode-homoglyphs-will-break-your-custom-sql-injection-sanitizing-functions-1224377f7b51">source of pain</a><sup>33</sup> <a href="https://book.hacktricks.xyz/pentesting-web/unicode-normalization-vulnerability">in the security world</a><sup>34</sup>. </p>



<p>One example of how Unicode Equivalence can frustrate analysis is Decomposed Unicode. Decomposed Unicode values are alternate representations of Unicode characters that use a series of characters instead of a single Unicode character. For example &#8211; consider the <a href="https://www.compart.com/en/unicode/U+1E01">Unicode character <strong>ḁ</strong></a><sup>35</sup>. This can be represented as 2 bytes in UTF-16 (Excel&#8217;s Unicode interpretation) as <code>1E 01</code>. Alternatively, we can represent it as the letter <strong>a</strong> and the <a href="https://www.compart.com/en/unicode/U+0325"><strong>◌̥</strong> combining diacritical mark</a><sup>36</sup> &#8211; or <code>00 61 03 25</code>. (Note: These diacritical marks are the same bit of fun that can be used to create <a href="https://zalgo.it/en/">Zalgo monstrosities</a><sup>37</sup>)</p>



<p>There also exist Unicode characters, like the <a href="https://en.wikipedia.org/wiki/Combining_Grapheme_Joiner">Combining Graphene Joiner</a><sup>38</sup> (<code>03 4F</code>) which are essentially no-op characters for most Unicode strings. The Wikipedia article for the character explicitly describes it as &#8220;default ignorable&#8221; in the first sentence:</p>



<blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow"><p>&#8220;The&nbsp;<strong>combining grapheme joiner</strong>&nbsp;(CGJ),&nbsp;U+034F&nbsp;͏&nbsp;COMBINING GRAPHEME JOINER&nbsp;(HTML&nbsp;<code>͏</code>) is a Unicode character that has no visible glyph and is &#8220;default ignorable&#8221; by applications.&#8221;</p><cite><a href="https://en.wikipedia.org/wiki/Combining_Grapheme_Joiner">https://en.wikipedia.org/wiki/Combining_Grapheme_Joiner</a></cite></blockquote>



<p>Finally, there are a sizable number of <a href="https://en.wikipedia.org/wiki/Whitespace_character">Unicode whitespace characters</a><sup>39</sup> which can change the byte contents of a string without changing its appearance. The &#8220;most interesting&#8221; of these whitespace characters are the zero-width Unicode characters. A zero-width character makes no visible change to the label. Some of these characters are ignored by Excel when comparing strings (U+200C, U+200D, U+2060, and U+FFEF), but others (U+180E and U+200B) are not.  These characters can be used to pad variable names, or create decoy names that look the same but are not actually assigned when invoking <strong>SET.NAME</strong>.</p>



<p>There&#8217;s nothing fundamentally bad about following the Unicode specification, but combining support for Unicode equivalence with some of Excel&#8217;s other flexibility can lead to very counter-intuitive equivalencies. For example, <code>1E 01</code> (<strong>ḁ</strong>) is considered the same as <code>20 60 00 41 03 25 03 4F 00</code> (a decomposed <strong>Ḁ</strong> with some ignored Unicode characters added to the string). Replacing some of those bytes with a <code>18 0E </code>or <code>20 0B</code> would break the equivalency as well, which allows us to create strings that look identical, but are not treated as such by Excel. In practice this lets us create, using <a href="https://github.com/michaelweber/Macrome">Macrome&#8217;s</a><sup>10</sup> <strong>AntiAnalysisCharSubroutine </strong>method, the following content :</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="230" data-permalink="https://malware.pizza/final-output/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/final-output.png" data-orig-size="745,223" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="final-output" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/final-output.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/final-output.png?w=745" loading="lazy" width="745" height="223" src="https://malware.pizza/wp-content/uploads/2020/06/final-output.png?w=745" alt="" class="wp-image-230" srcset="https://malware.pizza/wp-content/uploads/2020/06/final-output.png 745w, https://malware.pizza/wp-content/uploads/2020/06/final-output.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/final-output.png?w=300 300w" sizes="(max-width: 745px) 100vw, 745px" /><figcaption>It is random whether the first SET.NAME or second SET.NAME in each cell set the value passed to the subroutine</figcaption></figure></div>



<p>Although the <strong>vḁr</strong> strings appear to be identical, they are in fact quite different on disk. This means that any analysis of the cell to figure out what will actually happen will require running Excel or manually reproducing Excel&#8217;s EXACT handling of Unicode characters. Reproducing the behavior is going to require handling a lot of edge cases. If you want a sense of what analysts could be up against, here&#8217;s what the above example looks like in binary:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="233" data-permalink="https://malware.pizza/unicode_name_confusion_adjusted_for_endianness/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/unicode_name_confusion_adjusted_for_endianness.png" data-orig-size="762,278" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="unicode_name_confusion_adjusted_for_endianness" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/unicode_name_confusion_adjusted_for_endianness.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/unicode_name_confusion_adjusted_for_endianness.png?w=762" loading="lazy" width="762" height="278" src="https://malware.pizza/wp-content/uploads/2020/06/unicode_name_confusion_adjusted_for_endianness.png?w=762" alt="" class="wp-image-233" srcset="https://malware.pizza/wp-content/uploads/2020/06/unicode_name_confusion_adjusted_for_endianness.png 762w, https://malware.pizza/wp-content/uploads/2020/06/unicode_name_confusion_adjusted_for_endianness.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/unicode_name_confusion_adjusted_for_endianness.png?w=300 300w" sizes="(max-width: 762px) 100vw, 762px" /><figcaption>Note that both <strong>SET.NAME</strong> arguments are very different from the <strong>Lbl</strong> name used in <strong>=RETURN(CHAR(&#8216;vḀr&#8217;))</strong></figcaption></figure></div>



<p>In the above example the &#8220;Real&#8221; argument bytes are considered a match for the <strong>Lbl</strong> name bytes, but the &#8220;Decoy&#8221; argument bytes are not. The fact that <strong>Lbl</strong> record strings can be so wildly different from the <strong>PtgStr</strong> arguments passed to <strong>SET.NAME</strong> makes it challenging to follow Excel&#8217;s data flow without actually running Excel. Even then, Excel isn&#8217;t consistent with handling Unicode values &#8211; see what happens when null bytes are injected into the <strong>Auto_Open</strong> label after the <strong>u</strong> character:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img data-attachment-id="236" data-permalink="https://malware.pizza/image-16-2/" data-orig-file="https://malware.pizza/wp-content/uploads/2020/06/image-16.png" data-orig-size="559,166" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-16" data-image-description="" data-image-caption="" data-medium-file="https://malware.pizza/wp-content/uploads/2020/06/image-16.png?w=300" data-large-file="https://malware.pizza/wp-content/uploads/2020/06/image-16.png?w=559" loading="lazy" width="559" height="166" src="https://malware.pizza/wp-content/uploads/2020/06/image-16.png?w=559" alt="" class="wp-image-236" srcset="https://malware.pizza/wp-content/uploads/2020/06/image-16.png 559w, https://malware.pizza/wp-content/uploads/2020/06/image-16.png?w=150 150w, https://malware.pizza/wp-content/uploads/2020/06/image-16.png?w=300 300w" sizes="(max-width: 559px) 100vw, 559px" /><figcaption>The Name Manager sees Au, but the cell label is AuTo_OpEn</figcaption></figure></div>



<p>Given the already low detection rate for Excel 4.0 macros in the wild, we may never see attackers need to rely on this level of trickery. If AV does start getting better signal with their signatures though, I will not be surprised to see various forms of Unicode abuse begin to crop up.</p>



<h2 class="wp-block-heading">Updates to Macrome</h2>



<p>In the process of digging deeper into Excel documents, I&#8217;ve often come across a need to examine the byte content of specific records as a hex dump. While I don&#8217;t mind crawling through a wall of hex text, I&#8217;ve managed to save some time by modifying my tool <a href="https://github.com/michaelweber/Macrome">Macrome</a> to dump the hex content of <strong>Lbl</strong> and <strong>Formula</strong> records. All of the hex examples from this post were generated using this dump functionality. I&#8217;ve also implemented code for generating proof-of-concept documents using some of the subroutine and Unicode shenanigans that I discussed in this post. If you want to try generating some malicious documents to see how your tooling will handle these kinds of documents I&#8217;d suggest heading over to <a href="https://github.com/michaelweber/Macrome">https://github.com/michaelweber/Macrome</a> and grabbing the latest release.</p>



<p>As always, if folks have any suggestions for features or improvements, please let me know here in the comments or open an issue on the Github project page.</p>



<h2 class="wp-block-heading">References</h2>



<ol class="wp-block-list"><li><a href="https://malware.pizza/2020/05/12/evading-av-with-excel-macros-and-biff8-xls/ ">https://malware.pizza/2020/05/12/evading-av-with-excel-macros-and-biff8-xls/</a></li><li><a href="https://www.lastline.com/labsblog/evolution-of-excel-4-0-macro-weaponization/  ">https://www.lastline.com/labsblog/evolution-of-excel-4-0-macro-weaponization/ </a></li><li><a href="https://inquest.net/flash-alerts/IQ-FA004%3AMultiple_Actors_Abusing_New_Macro_Methods">https://inquest.net/flash-alerts/IQ-FA004%3AMultiple_Actors_Abusing_New_Macro_Methods</a></li><li><a href="https://twitter.com/InQuest/status/1268568312499376130">https://twitter.com/InQuest/status/1268568312499376130</a></li><li><a href="https://twitter.com/DissectMalware/status/1268491222299086854">https://twitter.com/DissectMalware/status/1268491222299086854</a></li><li><a href="https://github.com/DissectMalware/XLMMacroDeobfuscator ">https://github.com/DissectMalware/XLMMacroDeobfuscator</a></li><li><a href="https://twitter.com/Anti_Expl0it/status/1269895583633829888">https://twitter.com/Anti_Expl0it/status/1269895583633829888</a></li><li><a href="https://github.com/FortyNorthSecurity/EXCELntDonut/ ">https://github.com/FortyNorthSecurity/EXCELntDonut/</a></li><li><a href="https://github.com/TheWover/donut">https://github.com/TheWover/donut</a></li><li><a href="https://github.com/michaelweber/Macrome">https://github.com/michaelweber/Macrome</a></li><li><a href="https://www.virustotal.com/gui/file/b159b25b80b1830acf40813c06a48f3e72666720b7efcd406ea5031c7f214c31/detection">https://www.virustotal.com/gui/file/b159b25b80b1830acf40813c06a48f3e72666720b7efcd406ea5031c7f214c31/detection</a></li><li><a href="https://twitter.com/mattifestation/status/1263416936517468167">https://twitter.com/mattifestation/status/1263416936517468167</a></li><li><a href="https://pastebin.com/V8SGgdZL">https://pastebin.com/V8SGgdZL</a></li><li><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/87ce512d-273a-4da0-a9f8-26cf1d93508d">https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/87ce512d-273a-4da0-a9f8-26cf1d93508d</a></li><li><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/00b5dd7d-51ca-4938-b7b7-483fe0e5933b">https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/00b5dd7d-51ca-4938-b7b7-483fe0e5933b</a></li><li><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/5d105171-6b73-4f40-a7cd-6bf2aae15e83">https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/5d105171-6b73-4f40-a7cd-6bf2aae15e83</a></li><li><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/8e3c6978-6c9f-4915-a826-07613204b244">https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/8e3c6978-6c9f-4915-a826-07613204b244</a></li><li><a href="https://exceloffthegrid.com/using-excel-4-macro-functions/">https://exceloffthegrid.com/using-excel-4-macro-functions/</a></li><li><a href="https://twitter.com/DissectMalware/status/1269535826813366273">https://twitter.com/DissectMalware/status/1269535826813366273</a></li><li><a href="https://www.virustotal.com/gui/file/a53be0bd2a838ffe172181f3953a2bc8a1b7c447fb56d885391921a7c3eac1f9/details">https://www.virustotal.com/gui/file/a53be0bd2a838ffe172181f3953a2bc8a1b7c447fb56d885391921a7c3eac1f9/details</a></li><li><a href="https://github.com/michaelweber/Macrome/releases/tag/0.2.0 ">https://github.com/michaelweber/Macrome/releases/tag/0.2.0</a></li><li><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/5f05c166-dfe3-4bbf-85aa-31c09c0258c0">https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/5f05c166-dfe3-4bbf-85aa-31c09c0258c0</a></li><li><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/d148e898-4504-4841-a793-ee85f3ea9eef">https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/d148e898-4504-4841-a793-ee85f3ea9eef</a></li><li><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/ca4c1748-8729-4a93-abb9-4602b3a01fb1">https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/ca4c1748-8729-4a93-abb9-4602b3a01fb1</a></li><li><a href="https://virustotal.github.io/yara/ ">https://virustotal.github.io/yara/</a></li><li><a href="https://outflank.nl/blog/2018/10/06/old-school-evil-excel-4-0-macros-xlm/">https://outflank.nl/blog/2018/10/06/old-school-evil-excel-4-0-macros-xlm/</a></li><li><a href="https://github.com/decalage2/oletools/wiki/olevba">https://github.com/decalage2/oletools/wiki/olevba</a></li><li><a href="https://www.compart.com/en/unicode/category/Ll">https://www.compart.com/en/unicode/category/Ll</a></li><li><a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/87c2a057-705c-4473-a168-6d5fac4a9eba">https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/87c2a057-705c-4473-a168-6d5fac4a9eba</a></li><li><a href="https://en.wikipedia.org/wiki/Unicode_equivalence">https://en.wikipedia.org/wiki/Unicode_equivalence</a></li><li><a href="https://www.unicode.org/versions/Unicode13.0.0/UnicodeStandard-13.0.pdf">https://www.unicode.org/versions/Unicode13.0.0/UnicodeStandard-13.0.pdf</a></li><li><a href="https://www.dionach.com/en-us/blog/fun-with-sql-injection-using-unicode-smuggling/">https://www.dionach.com/en-us/blog/fun-with-sql-injection-using-unicode-smuggling/</a></li><li><a href="https://hackernoon.com/%CA%BC-%C5%9B%E2%84%87%E2%84%92%E2%84%87%E2%84%82%CA%88-how-unicode-homoglyphs-will-break-your-custom-sql-injection-sanitizing-functions-1224377f7b51">https://hackernoon.com/%CA%BC-%C5%9B%E2%84%87%E2%84%92%E2%84%87%E2%84%82%CA%88-how-unicode-homoglyphs-will-break-your-custom-sql-injection-sanitizing-functions-1224377f7b51</a></li><li><a href="https://book.hacktricks.xyz/pentesting-web/unicode-normalization-vulnerability">https://book.hacktricks.xyz/pentesting-web/unicode-normalization-vulnerability</a></li><li><a href="https://www.compart.com/en/unicode/U+1E01 ">https://www.compart.com/en/unicode/U+1E01</a></li><li><a href="https://www.compart.com/en/unicode/U+0325 ">https://www.compart.com/en/unicode/U+0325</a></li><li><a href="https://zalgo.it/en/">https://zalgo.it/en/</a></li><li><a href="https://en.wikipedia.org/wiki/Combining_Grapheme_Joiner">https://en.wikipedia.org/wiki/Combining_Grapheme_Joiner</a></li><li><a href="https://en.wikipedia.org/wiki/Whitespace_character">https://en.wikipedia.org/wiki/Whitespace_character</a></li></ol>



<p></p>
<div id="jp-post-flair" class="sharedaddy sd-like-enabled sd-sharing-enabled"><div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-twitter"><a rel="nofollow noopener noreferrer" data-shared="sharing-twitter-149" class="share-twitter sd-button share-icon" href="https://malware.pizza/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/?share=twitter" target="_blank" title="Click to share on Twitter" ><span>Twitter</span></a></li><li class="share-facebook"><a rel="nofollow noopener noreferrer" data-shared="sharing-facebook-149" class="share-facebook sd-button share-icon" href="https://malware.pizza/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/?share=facebook" target="_blank" title="Click to share on Facebook" ><span>Facebook</span></a></li><li class="share-end"></li></ul></div></div></div><div class='sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded' id='like-post-wrapper-169765583-149-67627764d9d3a' data-src='//widgets.wp.com/likes/index.html?ver=20241218#blog_id=169765583&amp;post_id=149&amp;origin=malwarepizza.wordpress.com&amp;obj_id=169765583-149-67627764d9d3a&amp;domain=malware.pizza' data-name='like-post-frame-169765583-149-67627764d9d3a' data-title='Like or Reblog'><div class='likes-widget-placeholder post-likes-widget-placeholder' style='height: 55px;'><span class='button'><span>Like</span></span> <span class='loading'>Loading...</span></div><span class='sd-text-color'></span><a class='sd-link-color'></a></div>
<div id='jp-relatedposts' class='jp-relatedposts' >
	<h3 class="jp-relatedposts-headline"><em>Related</em></h3>
</div></div>	</div><!-- .entry-content -->

	<div class="entry-footer">
		<ul class="post-tags light-text"><li>Tagged</li><li><a href="https://malware.pizza/tag/excel-4-0-macros/" rel="tag">Excel 4.0 Macros</a></li><li><a href="https://malware.pizza/tag/malware/" rel="tag">Malware</a></li><li><a href="https://malware.pizza/tag/unicode/" rel="tag">Unicode</a></li></ul><!-- .post-tags -->	</div><!-- .entry-footer -->

	<div class="entry-author-wrapper">
				<div class="site-posted-on">
			<strong>Published</strong>
			<time class="entry-date published" datetime="2020-06-19T13:00:00-04:00">June 19, 2020</time><time class="updated" datetime="2020-06-19T13:12:51-04:00">June 19, 2020</time>		</div><!-- .site-posted-on -->
	</div>
</article><!-- #post-## -->

			
	<nav class="navigation post-navigation" aria-label="Posts">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links"><div class="nav-previous"><a href="https://malware.pizza/2020/05/12/evading-av-with-excel-macros-and-biff8-xls/" rel="prev"><span class="meta-nav screen-reader-text">Previous Post</span> Evading Detection with Excel 4.0 Macros and the BIFF8 XLS&nbsp;Format</a></div></div>
	</nav>
			
<div id="comments" class="comments-area">

	
			<h2 class="comments-title">
			One thought on &ldquo;<span>Further Evasion in the Forgotten Corners of&nbsp;MS-XLS</span>&rdquo;		</h2><!-- .comments-title -->

		
		<ol class="comment-list">
					<li id="comment-18" class="pingback even thread-even depth-1">
			<div class="comment-body">
				Pingback: <a href="https://www.malware.studio/blog/2020/06/22/excel-4-0-macros-so-hot-right-now/" class="url" rel="ugc external nofollow">Excel 4.0 Macros &#8211; So hot right now</a> 			</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		
	
	
		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://malware.pizza/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate>



<div id="comment-form__verbum" class="transparent"></div><div class="verbum-form-meta"><input type='hidden' name='comment_post_ID' value='149' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />

			<input type="hidden" name="highlander_comment_nonce" id="highlander_comment_nonce" value="ca4dccea44" />
			<input type="hidden" name="verbum_show_subscription_modal" value="" /></div><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="261940cc3d" /></p><p style="display: none !important;" class="akismet-fields-container" data-prefix="ak_"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js_1" name="ak_js" value="59"/><script>document.getElementById( "ak_js_1" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	
</div><!-- #comments -->

		
		</main><!-- #main -->
	</div><!-- #primary -->

		</div><!-- #content -->

		<footer id="colophon" class="site-footer" role="contentinfo">
						<div class="site-info">
				<a href="https://wordpress.com/?ref=footer_custom_powered" rel="nofollow">Website Powered by WordPress.com</a>.
				
							</div><!-- .site-info -->
		</footer><!-- #colophon -->
	</div><!-- #content-wrapper -->
</div><!-- #page -->

<!--  -->
<script type="text/javascript" src="//0.gravatar.com/js/hovercards/hovercards.min.js?ver=202451b213a1cbb4e3271ca470eb7790af362ac2e18ce468f8945952c7bd3456d2132e" id="grofiles-cards-js"></script>
<script type="text/javascript" id="wpgroho-js-extra">
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script crossorigin='anonymous' type='text/javascript'  src='https://s2.wp.com/wp-content/mu-plugins/gravatar-hovercards/wpgroho.js?m=1610363240i'></script>

	<script>
		// Initialize and attach hovercards to all gravatars
		( function() {
			function init() {
				if ( typeof Gravatar === 'undefined' ) {
					return;
				}

				if ( typeof Gravatar.init !== 'function' ) {
					return;
				}

				Gravatar.profile_cb = function ( hash, id ) {
					WPGroHo.syncProfileData( hash, id );
				};

				Gravatar.my_hash = WPGroHo.my_hash;
				Gravatar.init(
					'body',
					'#wp-admin-bar-my-account',
					{
						i18n: {
							'Edit your profile →': 'Edit your profile →',
							'View profile →': 'View profile →',
							'Contact': 'Contact',
							'Send money': 'Send money',
							'Sorry, we are unable to load this Gravatar profile.': 'Sorry, we are unable to load this Gravatar profile.',
							'Profile not found.': 'Profile not found.',
							'Too Many Requests.': 'Too Many Requests.',
							'Internal Server Error.': 'Internal Server Error.',
						},
					}
				);
			}

			if ( document.readyState !== 'loading' ) {
				init();
			} else {
				document.addEventListener( 'DOMContentLoaded', init );
			}
		} )();
	</script>

		<div style="display:none">
	<div class="grofile-hash-map-c2ac45b22dcfd53334bd0c1a9349dd3c">
	</div>
	</div>
	<div id="actionbar" style="display: none;"
			class="actnbr-pub-independent-publisher-2 actnbr-has-follow">
		<ul>
								<li class="actnbr-btn actnbr-hidden">
						<a class="actnbr-action actnbr-actn-comment" href="https://malware.pizza/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/#comments">
							<svg class="gridicon gridicons-comment" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M12 16l-5 5v-5H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2v9c0 1.1-.9 2-2 2h-7z"/></g></svg>							<span>Comment						</span>
						</a>
					</li>
									<li class="actnbr-btn actnbr-hidden">
						<a class="actnbr-action actnbr-actn-reblog" href="">
							<svg class="gridicon gridicons-reblog" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M22.086 9.914L20 7.828V18c0 1.105-.895 2-2 2h-7v-2h7V7.828l-2.086 2.086L14.5 8.5 19 4l4.5 4.5-1.414 1.414zM6 16.172V6h7V4H6c-1.105 0-2 .895-2 2v10.172l-2.086-2.086L.5 15.5 5 20l4.5-4.5-1.414-1.414L6 16.172z"/></g></svg><span>Reblog</span>
						</a>
					</li>
									<li class="actnbr-btn actnbr-hidden">
								<a class="actnbr-action actnbr-actn-follow " href="">
			<svg class="gridicon" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path clip-rule="evenodd" d="m4 4.5h12v6.5h1.5v-6.5-1.5h-1.5-12-1.5v1.5 10.5c0 1.1046.89543 2 2 2h7v-1.5h-7c-.27614 0-.5-.2239-.5-.5zm10.5 2h-9v1.5h9zm-5 3h-4v1.5h4zm3.5 1.5h-1v1h1zm-1-1.5h-1.5v1.5 1 1.5h1.5 1 1.5v-1.5-1-1.5h-1.5zm-2.5 2.5h-4v1.5h4zm6.5 1.25h1.5v2.25h2.25v1.5h-2.25v2.25h-1.5v-2.25h-2.25v-1.5h2.25z"  fill-rule="evenodd"></path></svg>
			<span>Subscribe</span>
		</a>
		<a class="actnbr-action actnbr-actn-following  no-display" href="">
			<svg class="gridicon" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 4.5H4V15C4 15.2761 4.22386 15.5 4.5 15.5H11.5V17H4.5C3.39543 17 2.5 16.1046 2.5 15V4.5V3H4H16H17.5V4.5V12.5H16V4.5ZM5.5 6.5H14.5V8H5.5V6.5ZM5.5 9.5H9.5V11H5.5V9.5ZM12 11H13V12H12V11ZM10.5 9.5H12H13H14.5V11V12V13.5H13H12H10.5V12V11V9.5ZM5.5 12H9.5V13.5H5.5V12Z" fill="#008A20"></path><path class="following-icon-tick" d="M13.5 16L15.5 18L19 14.5" stroke="#008A20" stroke-width="1.5"></path></svg>
			<span>Subscribed</span>
		</a>
							<div class="actnbr-popover tip tip-top-left actnbr-notice" id="follow-bubble">
							<div class="tip-arrow"></div>
							<div class="tip-inner actnbr-follow-bubble">
															<ul>
											<li class="actnbr-sitename">
			<a href="https://malware.pizza">
				<img loading='lazy' alt='' src='https://s2.wp.com/i/logo/wpcom-gray-white.png' srcset='https://s2.wp.com/i/logo/wpcom-gray-white.png 1x' class='avatar avatar-50' height='50' width='50' />				Yet Another Security Blog			</a>
		</li>
										<div class="actnbr-message no-display"></div>
									<form method="post" action="https://subscribe.wordpress.com" accept-charset="utf-8" style="display: none;">
																				<div>
										<input type="email" name="email" placeholder="Enter your email address" class="actnbr-email-field" aria-label="Enter your email address" />
										</div>
										<input type="hidden" name="action" value="subscribe" />
										<input type="hidden" name="blog_id" value="169765583" />
										<input type="hidden" name="source" value="https://malware.pizza/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/" />
										<input type="hidden" name="sub-type" value="actionbar-follow" />
										<input type="hidden" id="_wpnonce" name="_wpnonce" value="48cddd8044" />										<div class="actnbr-button-wrap">
											<button type="submit" value="Sign me up">
												Sign me up											</button>
										</div>
									</form>
									<li class="actnbr-login-nudge">
										<div>
											Already have a WordPress.com account? <a href="https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fr-login.wordpress.com%2Fremote-login.php%3Faction%3Dlink%26back%3Dhttps%253A%252F%252Fmalware.pizza%252F2020%252F06%252F19%252Ffurther-evasion-in-the-forgotten-corners-of-ms-xls%252F">Log in now.</a>										</div>
									</li>
								</ul>
															</div>
						</div>
					</li>
							<li class="actnbr-ellipsis actnbr-hidden">
				<svg class="gridicon gridicons-ellipsis" height="24" width="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M7 12c0 1.104-.896 2-2 2s-2-.896-2-2 .896-2 2-2 2 .896 2 2zm12-2c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2zm-7 0c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2z"/></g></svg>				<div class="actnbr-popover tip tip-top-left actnbr-more">
					<div class="tip-arrow"></div>
					<div class="tip-inner">
						<ul>
									<li class="actnbr-sitename">
			<a href="https://malware.pizza">
				<img loading='lazy' alt='' src='https://s2.wp.com/i/logo/wpcom-gray-white.png' srcset='https://s2.wp.com/i/logo/wpcom-gray-white.png 1x' class='avatar avatar-50' height='50' width='50' />				Yet Another Security Blog			</a>
		</li>
								<li class="actnbr-folded-customize">
								<a href="https://malwarepizza.wordpress.com/wp-admin/customize.php?url=https%3A%2F%2Fmalwarepizza.wordpress.com%2F2020%2F06%2F19%2Ffurther-evasion-in-the-forgotten-corners-of-ms-xls%2F">
									<svg class="gridicon gridicons-customize" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M2 6c0-1.505.78-3.08 2-4 0 .845.69 2 2 2 1.657 0 3 1.343 3 3 0 .386-.08.752-.212 1.09.74.594 1.476 1.19 2.19 1.81L8.9 11.98c-.62-.716-1.214-1.454-1.807-2.192C6.753 9.92 6.387 10 6 10c-2.21 0-4-1.79-4-4zm12.152 6.848l1.34-1.34c.607.304 1.283.492 2.008.492 2.485 0 4.5-2.015 4.5-4.5 0-.725-.188-1.4-.493-2.007L18 9l-2-2 3.507-3.507C18.9 3.188 18.225 3 17.5 3 15.015 3 13 5.015 13 7.5c0 .725.188 1.4.493 2.007L3 20l2 2 6.848-6.848c1.885 1.928 3.874 3.753 5.977 5.45l1.425 1.148 1.5-1.5-1.15-1.425c-1.695-2.103-3.52-4.092-5.448-5.977z"/></g></svg>									<span>Customize</span>
								</a>
							</li>
																<li class="actnbr-folded-follow">
												<a class="actnbr-action actnbr-actn-follow " href="">
			<svg class="gridicon" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path clip-rule="evenodd" d="m4 4.5h12v6.5h1.5v-6.5-1.5h-1.5-12-1.5v1.5 10.5c0 1.1046.89543 2 2 2h7v-1.5h-7c-.27614 0-.5-.2239-.5-.5zm10.5 2h-9v1.5h9zm-5 3h-4v1.5h4zm3.5 1.5h-1v1h1zm-1-1.5h-1.5v1.5 1 1.5h1.5 1 1.5v-1.5-1-1.5h-1.5zm-2.5 2.5h-4v1.5h4zm6.5 1.25h1.5v2.25h2.25v1.5h-2.25v2.25h-1.5v-2.25h-2.25v-1.5h2.25z"  fill-rule="evenodd"></path></svg>
			<span>Subscribe</span>
		</a>
		<a class="actnbr-action actnbr-actn-following  no-display" href="">
			<svg class="gridicon" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 4.5H4V15C4 15.2761 4.22386 15.5 4.5 15.5H11.5V17H4.5C3.39543 17 2.5 16.1046 2.5 15V4.5V3H4H16H17.5V4.5V12.5H16V4.5ZM5.5 6.5H14.5V8H5.5V6.5ZM5.5 9.5H9.5V11H5.5V9.5ZM12 11H13V12H12V11ZM10.5 9.5H12H13H14.5V11V12V13.5H13H12H10.5V12V11V9.5ZM5.5 12H9.5V13.5H5.5V12Z" fill="#008A20"></path><path class="following-icon-tick" d="M13.5 16L15.5 18L19 14.5" stroke="#008A20" stroke-width="1.5"></path></svg>
			<span>Subscribed</span>
		</a>
										</li>
																	<li class="actnbr-signup"><a href="https://wordpress.com/start/">Sign up</a></li>
									<li class="actnbr-login"><a href="https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fr-login.wordpress.com%2Fremote-login.php%3Faction%3Dlink%26back%3Dhttps%253A%252F%252Fmalware.pizza%252F2020%252F06%252F19%252Ffurther-evasion-in-the-forgotten-corners-of-ms-xls%252F">Log in</a></li>
																	<li class="actnbr-shortlink"><a href="https://wp.me/pbujMz-2p">Copy shortlink</a></li>
																	<li class="flb-report">
										<a href="https://wordpress.com/abuse/?report_url=https://malware.pizza/2020/06/19/further-evasion-in-the-forgotten-corners-of-ms-xls/" target="_blank" rel="noopener noreferrer">
											Report this content										</a>
									</li>
																	<li class="actnbr-reader">
										<a href="https://wordpress.com/read/blogs/169765583/posts/149">
											View post in Reader										</a>
									</li>
																	<li class="actnbr-subs">
										<a href="https://subscribe.wordpress.com/">Manage subscriptions</a>
									</li>
																		<li class="actnbr-fold"><a href="">Collapse this bar</a></li>
															</ul>
					</div>
				</div>
			</li>
		</ul>
	</div>
	
<script>
window.addEventListener( "load", function( event ) {
	var link = document.createElement( "link" );
	link.href = "https://s0.wp.com/wp-content/mu-plugins/actionbar/actionbar.css?v=20241015";
	link.type = "text/css";
	link.rel = "stylesheet";
	document.head.appendChild( link );

	var script = document.createElement( "script" );
	script.src = "https://s0.wp.com/wp-content/mu-plugins/actionbar/actionbar.js?v=20231122";
	script.defer = true;
	document.body.appendChild( script );
} );
</script>

			<div id="jp-carousel-loading-overlay">
			<div id="jp-carousel-loading-wrapper">
				<span id="jp-carousel-library-loading">&nbsp;</span>
			</div>
		</div>
		<div class="jp-carousel-overlay" style="display: none;">

		<div class="jp-carousel-container">
			<!-- The Carousel Swiper -->
			<div
				class="jp-carousel-wrap swiper-container jp-carousel-swiper-container jp-carousel-transitions"
				itemscope
				itemtype="https://schema.org/ImageGallery">
				<div class="jp-carousel swiper-wrapper"></div>
				<div class="jp-swiper-button-prev swiper-button-prev">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskPrev" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="9" height="12">
							<path d="M16.2072 16.59L11.6496 12L16.2072 7.41L14.8041 6L8.8335 12L14.8041 18L16.2072 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskPrev)">
							<rect x="0.579102" width="23.8823" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
				<div class="jp-swiper-button-next swiper-button-next">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskNext" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="8" height="12">
							<path d="M8.59814 16.59L13.1557 12L8.59814 7.41L10.0012 6L15.9718 12L10.0012 18L8.59814 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskNext)">
							<rect x="0.34375" width="23.8822" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
			</div>
			<!-- The main close buton -->
			<div class="jp-carousel-close-hint">
				<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<mask id="maskClose" mask-type="alpha" maskUnits="userSpaceOnUse" x="5" y="5" width="15" height="14">
						<path d="M19.3166 6.41L17.9135 5L12.3509 10.59L6.78834 5L5.38525 6.41L10.9478 12L5.38525 17.59L6.78834 19L12.3509 13.41L17.9135 19L19.3166 17.59L13.754 12L19.3166 6.41Z" fill="white"/>
					</mask>
					<g mask="url(#maskClose)">
						<rect x="0.409668" width="23.8823" height="24" fill="#FFFFFF"/>
					</g>
				</svg>
			</div>
			<!-- Image info, comments and meta -->
			<div class="jp-carousel-info">
				<div class="jp-carousel-info-footer">
					<div class="jp-carousel-pagination-container">
						<div class="jp-swiper-pagination swiper-pagination"></div>
						<div class="jp-carousel-pagination"></div>
					</div>
					<div class="jp-carousel-photo-title-container">
						<h2 class="jp-carousel-photo-caption"></h2>
					</div>
					<div class="jp-carousel-photo-icons-container">
						<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-info" aria-label="Toggle photo metadata visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskInfo" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M12.7537 2C7.26076 2 2.80273 6.48 2.80273 12C2.80273 17.52 7.26076 22 12.7537 22C18.2466 22 22.7046 17.52 22.7046 12C22.7046 6.48 18.2466 2 12.7537 2ZM11.7586 7V9H13.7488V7H11.7586ZM11.7586 11V17H13.7488V11H11.7586ZM4.79292 12C4.79292 16.41 8.36531 20 12.7537 20C17.142 20 20.7144 16.41 20.7144 12C20.7144 7.59 17.142 4 12.7537 4C8.36531 4 4.79292 7.59 4.79292 12Z" fill="white"/>
									</mask>
									<g mask="url(#maskInfo)">
										<rect x="0.8125" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
							</span>
						</a>
												<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-comments" aria-label="Toggle photo comments visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskComments" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M4.3271 2H20.2486C21.3432 2 22.2388 2.9 22.2388 4V16C22.2388 17.1 21.3432 18 20.2486 18H6.31729L2.33691 22V4C2.33691 2.9 3.2325 2 4.3271 2ZM6.31729 16H20.2486V4H4.3271V18L6.31729 16Z" fill="white"/>
									</mask>
									<g mask="url(#maskComments)">
										<rect x="0.34668" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>

								<span class="jp-carousel-has-comments-indicator" aria-label="This image has comments."></span>
							</span>
						</a>
											</div>
				</div>
				<div class="jp-carousel-info-extra">
					<div class="jp-carousel-info-content-wrapper">
						<div class="jp-carousel-photo-title-container">
							<h2 class="jp-carousel-photo-title"></h2>
						</div>
						<div class="jp-carousel-comments-wrapper">
															<div id="jp-carousel-comments-loading">
									<span>Loading Comments...</span>
								</div>
								<div class="jp-carousel-comments"></div>
								<div id="jp-carousel-comment-form-container">
									<span id="jp-carousel-comment-form-spinner">&nbsp;</span>
									<div id="jp-carousel-comment-post-results"></div>
																														<form id="jp-carousel-comment-form">
												<label for="jp-carousel-comment-form-comment-field" class="screen-reader-text">Write a Comment...</label>
												<textarea
													name="comment"
													class="jp-carousel-comment-form-field jp-carousel-comment-form-textarea"
													id="jp-carousel-comment-form-comment-field"
													placeholder="Write a Comment..."
												></textarea>
												<div id="jp-carousel-comment-form-submit-and-info-wrapper">
													<div id="jp-carousel-comment-form-commenting-as">
																													<fieldset>
																<label for="jp-carousel-comment-form-email-field">Email (Required)</label>
																<input type="text" name="email" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-email-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-author-field">Name (Required)</label>
																<input type="text" name="author" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-author-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-url-field">Website</label>
																<input type="text" name="url" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-url-field" />
															</fieldset>
																											</div>
													<input
														type="submit"
														name="submit"
														class="jp-carousel-comment-form-button"
														id="jp-carousel-comment-form-button-submit"
														value="Post Comment" />
												</div>
											</form>
																											</div>
													</div>
						<div class="jp-carousel-image-meta">
							<div class="jp-carousel-title-and-caption">
								<div class="jp-carousel-photo-info">
									<h3 class="jp-carousel-caption" itemprop="caption description"></h3>
								</div>

								<div class="jp-carousel-photo-description"></div>
							</div>
							<ul class="jp-carousel-image-exif" style="display: none;"></ul>
							<a class="jp-carousel-image-download" href="#" target="_blank" style="display: none;">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="3" y="3" width="19" height="18">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M5.84615 5V19H19.7775V12H21.7677V19C21.7677 20.1 20.8721 21 19.7775 21H5.84615C4.74159 21 3.85596 20.1 3.85596 19V5C3.85596 3.9 4.74159 3 5.84615 3H12.8118V5H5.84615ZM14.802 5V3H21.7677V10H19.7775V6.41L9.99569 16.24L8.59261 14.83L18.3744 5H14.802Z" fill="white"/>
									</mask>
									<g mask="url(#mask0)">
										<rect x="0.870605" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
								<span class="jp-carousel-download-text"></span>
							</a>
							<div class="jp-carousel-image-map" style="display: none;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>

		</div>
		
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"https:\/\/malware.pizza\/2020\/06\/19\/further-evasion-in-the-forgotten-corners-of-ms-xls\/":149};
	</script>
				<link crossorigin='anonymous' rel='stylesheet' id='all-css-0-2' href='https://s0.wp.com/_static/??-eJyljEsKgDAMBS9kDUUquhDPom0Qaz/BNHh9KdgTuBl4w2PgIWVzKpgKRFEU5DgTg8dCm72+DTHnCicBGex2Z2EMwM9JeKtdkgvYW+YOftTaqYkaXOOix8noQU+z8S9MR0BZ&cssminify=yes' type='text/css' media='all' />
<script type="text/javascript" id="comment-like-js-extra">
/* <![CDATA[ */
var comment_like_text = {"loading":"Loading...","swipeUrl":"https:\/\/s2.wp.com\/wp-content\/mu-plugins\/comment-likes\/js\/lib\/swipe.js?ver=20131008"};
/* ]]> */
</script>
<script type="text/javascript" id="coblocks-loader-js-extra">
/* <![CDATA[ */
var wpcom_coblocks_js = {"coblocks_masonry_js":"https:\/\/s2.wp.com\/wp-content\/plugins\/coblocks\/2.18.1-simple-rev.4\/dist\/js\/coblocks-masonry.min.js","coblocks_lightbox_js":"https:\/\/s2.wp.com\/wp-content\/plugins\/coblocks\/2.18.1-simple-rev.4\/dist\/js\/coblocks-lightbox.min.js","jquery_core_js":"\/wp-includes\/js\/jquery\/jquery.min.js","jquery_migrate_js":"\/wp-includes\/js\/jquery\/jquery-migrate.min.js","masonry_js":"\/wp-includes\/js\/masonry.min.js","imagesloaded_js":"\/wp-includes\/js\/imagesloaded.min.js"};
var coblocksLigthboxData = {"closeLabel":"Close Gallery","leftLabel":"Previous","rightLabel":"Next"};
/* ]]> */
</script>
<script type="text/javascript" id="jetpack-carousel-js-extra">
/* <![CDATA[ */
var jetpackSwiperLibraryPath = {"url":"https:\/\/s2.wp.com\/wp-content\/mu-plugins\/jetpack-plugin\/moon\/_inc\/build\/carousel\/swiper-bundle.min.js"};
var jetpackCarouselStrings = {"widths":[370,700,1000,1200,1400,2000],"is_logged_in":"","lang":"en","ajaxurl":"https:\/\/malware.pizza\/wp-admin\/admin-ajax.php","nonce":"b0bf3bec23","display_exif":"1","display_comments":"1","single_image_gallery":"1","single_image_gallery_media_file":"","background_color":"black","comment":"Comment","post_comment":"Post Comment","write_comment":"Write a Comment...","loading_comments":"Loading Comments...","image_label":"Open image in full-screen.","download_original":"View full size <span class=\"photo-size\">{0}<span class=\"photo-size-times\">\u00d7<\/span>{1}<\/span>","no_comment_text":"Please be sure to submit some text with your comment.","no_comment_email":"Please provide an email address to comment.","no_comment_author":"Please provide your name to comment.","comment_post_error":"Sorry, but there was an error posting your comment. Please try again later.","comment_approved":"Your comment was approved.","comment_unapproved":"Your comment is in moderation.","camera":"Camera","aperture":"Aperture","shutter_speed":"Shutter Speed","focal_length":"Focal Length","copyright":"Copyright","comment_registration":"0","require_name_email":"1","login_url":"https:\/\/malwarepizza.wordpress.com\/wp-login.php?redirect_to=https%3A%2F%2Fmalware.pizza%2F2020%2F06%2F19%2Ffurther-evasion-in-the-forgotten-corners-of-ms-xls%2F","blog_id":"169765583","meta_data":["camera","aperture","shutter_speed","focal_length","copyright"],"stats_query_args":"blog=169765583&v=wpcom&tz=-5&user_id=0&subd=malwarepizza","is_public":"1"};
/* ]]> */
</script>
<script type="text/javascript" id="sharing-js-js-extra">
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1","is_stats_active":"1"};
/* ]]> */
</script>
<script type="text/javascript" id="verbum-settings-js-before">
/* <![CDATA[ */
window.VerbumComments = {"Log in or provide your name and email to leave a reply.":"Log in or provide your name and email to leave a reply.","Log in or provide your name and email to leave a comment.":"Log in or provide your name and email to leave a comment.","Receive web and mobile notifications for posts on this site.":"Receive web and mobile notifications for posts on this site.","Name":"Name","Email (address never made public)":"Email (address never made public)","Website (optional)":"Website (optional)","Leave a reply. (log in optional)":"Leave a reply. (log in optional)","Leave a comment. (log in optional)":"Leave a comment. (log in optional)","Log in to leave a reply.":"Log in to leave a reply.","Log in to leave a comment.":"Log in to leave a comment.","Logged in via %s":"Logged in via %s","Log out":"Log out","Email":"Email","(Address never made public)":"(Address never made public)","Instantly":"Instantly","Daily":"Daily","Reply":"Reply","Comment":"Comment","WordPress":"WordPress","Weekly":"Weekly","Notify me of new posts":"Notify me of new posts","Email me new posts":"Email me new posts","Email me new comments":"Email me new comments","Cancel":"Cancel","Write a comment...":"Write a comment...","Write a reply...":"Write a reply...","Website":"Website","Optional":"Optional","We'll keep you in the loop!":"We'll keep you in the loop!","Loading your comment...":"Loading your comment...","Discover more from":"Discover more from Yet Another Security Blog","Subscribe now to keep reading and get access to the full archive.":"Subscribe now to keep reading and get access to the full archive.","Continue reading":"Continue reading","Never miss a beat!":"Never miss a beat!","Interested in getting blog post updates? Simply click the button below to stay in the loop!":"Interested in getting blog post updates? Simply click the button below to stay in the loop!","Enter your email address":"Enter your email address","Subscribe":"Subscribe","Comment sent successfully":"Comment sent successfully","Save my name, email, and website in this browser for the next time I comment.":"Save my name, email, and website in this browser for the next time I comment.","siteId":169765583,"postId":149,"mustLogIn":false,"requireNameEmail":true,"commentRegistration":false,"connectURL":"https:\/\/malwarepizza.wordpress.com\/public.api\/connect\/?action=request&domain=malware.pizza","logoutURL":"https:\/\/malwarepizza.wordpress.com\/wp-login.php?action=logout&_wpnonce=3fc39b95e5","homeURL":"https:\/\/malware.pizza\/","subscribeToBlog":true,"subscribeToComment":true,"isJetpackCommentsLoggedIn":false,"jetpackUsername":"","jetpackUserId":0,"jetpackSignature":"","jetpackAvatar":"https:\/\/0.gravatar.com\/avatar\/?s=96&amp;d=identicon&amp;r=G","enableBlocks":true,"enableSubscriptionModal":true,"currentLocale":"en","isJetpackComments":false,"allowedBlocks":["core\/paragraph","core\/list","core\/code","core\/list-item","core\/quote","core\/image","core\/embed","core\/quote","core\/code"],"embedNonce":"c7fc681eca","verbumBundleUrl":"https:\/\/s2.wp.com\/wp-content\/mu-plugins\/jetpack-mu-wpcom-plugin\/moon\/vendor\/automattic\/jetpack-mu-wpcom\/src\/features\/verbum-comments\/dist\/index.js","isRTL":false,"vbeCacheBuster":1721244820,"iframeUniqueId":0}
/* ]]> */
</script>
<script crossorigin='anonymous' type='text/javascript'  src='https://s0.wp.com/_static/??-eJydUltSwzAMvBCOaVOG/jAchXFsJVHiF5bdktvjNAktpRQmX7al1a4kLz96Jp2NYCPviBtXoQaWCIJocoyhrV3R0QO/wJnEvE4NWuIaeyD+niBBK6zSEBYwWqmTysnMqpAiP4BVLowp7/RQo9aFQXuHu4PohexZDh29dGZO5B6dXdhEis6IGFH+gHMKklcJtcrgUCWTNYzJGsQFEeRDDVYYlEw7oc6N3+hkLmTTtN1V4LrwXFVpJ3vi22KzLzaM0Pi82wCHYjetpDuDliZurCS2YLKsTxVHq8DnyUft/NZILQS2HYmsOGAjIrqV9b+k1pFRjz4vx/asdjIRq/Hjli+WNQbwelg5eubjJAP6OH37Pwx16aO3sX5yiRTBZePrL9wS+MOnokcyEFlZPE50S6AOJ7C656xZYrbs9+f6UagVAZRQajhd0TbzDK/mZfNclvuncrfdd5+8434g'></script>
<script type="text/javascript" id="sharing-js-js-after">
/* <![CDATA[ */
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-twitter' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-twitter' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-facebook' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-facebook' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
						return false;
					}
				} );
			} )();
/* ]]> */
</script>

	<script type="text/javascript">
		(function () {
			var wpcom_reblog = {
				source: 'toolbar',

				toggle_reblog_box_flair: function (obj_id, post_id) {

					// Go to site selector. This will redirect to their blog if they only have one.
					const postEndpoint = `https://wordpress.com/post`;

					// Ideally we would use the permalink here, but fortunately this will be replaced with the 
					// post permalink in the editor.
					const originalURL = `${ document.location.href }?page_id=${ post_id }`; 
					
					const url =
						postEndpoint +
						'?url=' +
						encodeURIComponent( originalURL ) +
						'&is_post_share=true' +
						'&v=5';

					const redirect = function () {
						if (
							! window.open( url, '_blank' )
						) {
							location.href = url;
						}
					};

					if ( /Firefox/.test( navigator.userAgent ) ) {
						setTimeout( redirect, 0 );
					} else {
						redirect();
					}
				},
			};

			window.wpcom_reblog = wpcom_reblog;
		})();
	</script>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script>	<iframe src='https://widgets.wp.com/likes/master.html?ver=20241218#ver=20241218&amp;origin=https://malware.pizza' scrolling='no' id='likes-master' name='likes-master' style='display:none;'></iframe>
	<div id='likes-other-gravatars' class='wpl-new-layout' role="dialog" aria-hidden="true" tabindex="-1">
		<div class="likes-text">
			<span>%d</span>		</div>
		<ul class="wpl-avatars sd-like-gravatars"></ul>
	</div>

		<script src="//stats.wp.com/w.js?67" defer></script> <script type="text/javascript">
_tkq = window._tkq || [];
_stq = window._stq || [];
_tkq.push(['storeContext', {'blog_id':'169765583','blog_tz':'-5','user_lang':'en','blog_lang':'en','user_id':'0'}]);
_stq.push(['view', {'blog':'169765583','v':'wpcom','tz':'-5','user_id':'0','post':'149','subd':'malwarepizza'}]);
_stq.push(['extra', {'crypt':'UE40eW5QN0p8M2Y/RE1mNzc2NTVTamdsd0xoLz9RQkM2K298TXY9bERQMXc2MjhEaVZfb2wwakRoSj0mUkp1THptM1NdbkV1WjZIcU9mVWQmPUIvMlN6Jk8wW3NYVEJ3dWZOWExuWD9CbmxqLENKeHZKRG9sOWtMPXxsPzZaPWE9UDdDckNaeEFMRTd6X01ITlUsWnlbaT9+ZDF4Y1MzK2RQWDQ0NUNWby4wWzMwUXZjNUF8fnomaSt4dj05SS5NQ0FQb1h0NWkvdGp6bVI3JXZCcVM5Ti40NjRYalhyR05oS1dZZm1UZzd5dGhWfEpHL2R5WExkaCxHbnw4SDd+cnJ+Nml8Rz82QlhRS0hzLkZFY095SFldL0ZXQytCfkMyUWJDMi8tNDglcG13V3VdazBsVz1JZw=='}]);
_stq.push([ 'clickTrackerInit', '169765583', '149' ]);
</script>
<noscript><img src="https://pixel.wp.com/b.gif?v=noscript" style="height:1px;width:1px;overflow:hidden;position:absolute;bottom:1px;" alt="" /></noscript>
<script defer id="bilmur"  data-provider="wordpress.com" data-service="simple"   src="/wp-content/js/bilmur-4.min.js?i=12&m=202451"></script><script>
( function() {
	function getMobileUserAgentInfo() {
		if ( typeof wpcom_mobile_user_agent_info === 'object' ) {
			wpcom_mobile_user_agent_info.init();
			var mobileStatsQueryString = '';

			if ( wpcom_mobile_user_agent_info.matchedPlatformName !== false ) {
				mobileStatsQueryString += '&x_' + 'mobile_platforms' + '=' + wpcom_mobile_user_agent_info.matchedPlatformName;
			}

			if ( wpcom_mobile_user_agent_info.matchedUserAgentName !== false ) {
				mobileStatsQueryString += '&x_' + 'mobile_devices' + '=' + wpcom_mobile_user_agent_info.matchedUserAgentName;
			}

			if ( wpcom_mobile_user_agent_info.isIPad() ) {
				mobileStatsQueryString += '&x_' + 'ipad_views' + '=' + 'views';
			}

			if ( mobileStatsQueryString != '' ) {
				new Image().src = document.location.protocol + '//pixel.wp.com/g.gif?v=wpcom-no-pv' + mobileStatsQueryString + '&baba=' + Math.random();
			}
		}
	}

	document.addEventListener( 'DOMContentLoaded', getMobileUserAgentInfo );
} )();
</script>
<script type='disabled' id='wp-enqueue-dynamic-script:wp-i18n:after:1'>
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
</script>

<script>
(function() {
	'use strict';

	const fetches = {};
	const promises = {};
	const urls = {
		'wp-hooks': 'https://s0.wp.com/wp-content/plugins/gutenberg-core/v19.8.0/build/hooks/index.min.js?m=1733324323i&ver=84e753e2b66eb7028d38',
		'wp-i18n': 'https://s0.wp.com/wp-content/plugins/gutenberg-core/v19.8.0/build/i18n/index.min.js?m=1733324323i&ver=bd5a2533e717a1043151',
		'verbum': 'https://s2.wp.com/wp-content/mu-plugins/jetpack-mu-wpcom-plugin/moon/vendor/automattic/jetpack-mu-wpcom/src/build/verbum-comments/verbum-comments.js?m=1733934734i&minify=false&ver=0b4f9908fccda8a8b143'
	};
	const loaders = {
		'verbum': () => {
			fetchExternalScript('wp-hooks');
			fetchExternalScript('wp-i18n');
			fetchExternalScript('verbum');
			promises['wp-hooks'] = promises['wp-hooks'] || loadWPScript('wp-hooks');
			promises['wp-i18n'] = promises['wp-i18n'] || promises['wp-hooks'].then( () => loadWPScript('wp-i18n') );
			promises['verbum'] = promises['verbum'] || promises['wp-i18n'].then( () => loadWPScript('verbum') );
			return promises['verbum'];
		},
		
	};
	const scriptExtras = {
		'wp-i18n': { translations: 0, before: 0, after: 1 },
		
	};

	window.WP_Enqueue_Dynamic_Script = {
		loadScript: (handle) => {
			if (!loaders[handle]) {
				console.error('WP_Enqueue_Dynamic_Script: unregistered script `' + handle + '`.');
			}
			return loaders[handle]();
		}
	};

	function fetchExternalScript(handle) {
		if (!urls[handle]) {
			return Promise.resolve();
		}

		fetches[handle] = fetches[handle] || fetch(urls[handle], { mode: 'no-cors' });
		return fetches[handle];
	}

	function runExtraScript(handle, type, index) {
		const id = 'wp-enqueue-dynamic-script:' + handle + ':' + type + ':' + (index + 1);
		const template = document.getElementById(id);
		if (!template) {
			return Promise.reject();
		}

		const script = document.createElement( 'script' );
		script.innerHTML = template.innerHTML;
		document.body.appendChild( script );
		return Promise.resolve();
	}

	function loadExternalScript(handle) {
		if (!urls[handle]) {
			return Promise.resolve();
		}

		return fetches[handle].then(() => {
			return new Promise((resolve, reject) => {
				const script = document.createElement('script');
				script.onload = () => resolve();
				script.onerror = (e) => reject(e);
				script.src = urls[handle];
				document.body.appendChild(script);
			});
		});
	}

	function loadExtra(handle, pos) {
		const count = (scriptExtras[handle] && scriptExtras[handle][pos]) || 0;
		let promise = Promise.resolve();

		for (let i = 0; i < count; i++) {
			promise = promise.then(() => runExtraScript(handle, pos, i));
		}

		return promise;
	}

	function loadWPScript(handle) {
		// Core loads scripts in this order. See: https://github.com/WordPress/WordPress/blob/a59eb9d39c4fcba834b70c9e8dfd64feeec10ba6/wp-includes/class-wp-scripts.php#L428.
		return loadExtra(handle, 'translations')
			.then(() => loadExtra(handle, 'before'))
			.then(() => loadExternalScript(handle))
			.then(() => loadExtra(handle, 'after'));
	}
} )();
</script>

</body>
</html>
