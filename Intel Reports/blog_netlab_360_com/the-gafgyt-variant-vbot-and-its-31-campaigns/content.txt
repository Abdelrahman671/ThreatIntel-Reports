<!DOCTYPE html>
<html lang="en">
<head>

    <title>The Gafgyt variant vbot seen in its 31 campaigns</title>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" type="text/css" href="/assets/built/screen.css?v=42b57cac00" />

    <link rel="icon" href="https://blog.netlab.360.com/content/images/size/w256h256/2019/02/netlab_xs-2.png" type="image/png">
    <link rel="canonical" href="https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    <link rel="amphtml" href="https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/amp/">
    
    <meta property="og:site_name" content="360 Netlab Blog - Network Security Research Lab at 360">
    <meta property="og:type" content="article">
    <meta property="og:title" content="The Gafgyt variant vbot seen in its 31 campaigns">
    <meta property="og:description" content="Overview


Gafgyt botnets have a long history of infecting Linux devices to launch DDoS attacks. While dozens of variants have been detected, new variants are constantly emerging with changes in terms of register message, exploits, and attacking methods. On the other hand, their new botnets are usually short lived, with">
    <meta property="og:url" content="https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/">
    <meta property="og:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta property="article:published_time" content="2020-07-06T08:13:49.000Z">
    <meta property="article:modified_time" content="2020-07-06T08:14:05.000Z">
    <meta property="article:tag" content="Import 2022-11-30 11:16">
    <meta property="article:tag" content="en">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="The Gafgyt variant vbot seen in its 31 campaigns">
    <meta name="twitter:description" content="Overview


Gafgyt botnets have a long history of infecting Linux devices to launch DDoS attacks. While dozens of variants have been detected, new variants are constantly emerging with changes in terms of register message, exploits, and attacking methods. On the other hand, their new botnets are usually short lived, with">
    <meta name="twitter:url" content="https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/">
    <meta name="twitter:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="LIU Ya">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="Import 2022-11-30 11:16, en">
    <meta name="twitter:site" content="@360Netlab">
    <meta name="twitter:creator" content="@liuya0904">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="800">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "360 Netlab Blog - Network Security Research Lab at 360",
        "url": "https://blog.netlab.360.com/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png"
        }
    },
    "author": {
        "@type": "Person",
        "name": "LIU Ya",
        "image": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2022/04/eclipse--3-.jpg",
            "width": 687,
            "height": 687
        },
        "url": "https://blog.netlab.360.com/author/liu/",
        "sameAs": [
            "https://twitter.com/liuya0904"
        ]
    },
    "headline": "The Gafgyt variant vbot seen in its 31 campaigns",
    "url": "https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/",
    "datePublished": "2020-07-06T08:13:49.000Z",
    "dateModified": "2020-07-06T08:14:05.000Z",
    "keywords": "Import 2022-11-30 11:16, en",
    "description": "Overview\n\n\nGafgyt botnets have a long history of infecting Linux devices to launch DDoS attacks. While dozens of variants have been detected, new variants are constantly emerging with changes in terms of register message, exploits, and attacking methods. On the other hand, their new botnets are usually short lived, with most of the C2s watched keeping active for only a few days. In this blog, I will introduce such a sort of variant. The key findings are as follow:\n\n\n 1. This variant was active f",
    "mainEntityOfPage": "https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/"
}
    </script>

    <meta name="generator" content="Ghost 5.76">
    <link rel="alternate" type="application/rss+xml" title="360 Netlab Blog - Network Security Research Lab at 360" href="https://blog.netlab.360.com/rss/">
    
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/sodo-search.min.js" data-key="db8c743e6bb1457403d255d83f" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/main.css" data-sodo-search="https://blog.netlab.360.com/" crossorigin="anonymous"></script>
    
    <link href="https://blog.netlab.360.com/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=42b57cac00"></script>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=42b57cac00">
    <style type='text/css'>
	#ghost-portal-root {
        display: none;
    }
</style><style>:root {--ghost-accent-color: #eca265;}</style>

</head>
<body class="post-template tag-import-2022-11-30-11-16 tag-en has-cover">
<div class="viewport">

    <header id="gh-head" class="gh-head outer">
        <nav class="gh-head-inner inner">

            <div class="gh-head-brand">
                <a class="gh-head-logo" href="https://blog.netlab.360.com">
                        <img src="https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png" alt="360 Netlab Blog - Network Security Research Lab at 360" />
                </a>
                <div class="gh-head-brand-wrapper">
                    <button class="gh-search" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                    <a class="gh-burger" role="button">
                        <div class="gh-burger-box">
                            <div class="gh-burger-inner"></div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="gh-head-menu">
                <ul class="nav">
    <li class="nav-botnet"><a href="https://blog.netlab.360.com/tag/botnet/">Botnet</a></li>
    <li class="nav-dnsmon"><a href="https://blog.netlab.360.com/tag/dnsmon/">DNSMon</a></li>
    <li class="nav-ddos"><a href="https://blog.netlab.360.com/tag/ddos/">DDoS</a></li>
    <li class="nav-passivedns"><a href="https://blog.netlab.360.com/tag/pdns/">PassiveDNS</a></li>
    <li class="nav-mirai"><a href="https://blog.netlab.360.com/tag/mirai/">Mirai</a></li>
    <li class="nav-dta"><a href="https://blog.netlab.360.com/tag/dta/">DTA</a></li>
</ul>

            </div>
            <div class="gh-head-actions">
                <div class="gh-social">
                        <a class="gh-social-link gh-social-twitter" href="https://twitter.com/360Netlab" title="Twitter" target="_blank" rel="me noopener"><svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg></a>
                        <a class="gh-social-link gh-social-feedly" href="https://feedly.com/i/subscription/feed/https://blog.netlab.360.com/rss/" title="RSS" target="_blank" rel="me noopener"><svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><circle cx="6.18" cy="17.82" r="2.18"/><path d="M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z"/></svg>
</a>
                </div>
            </div>
        </nav>
    </header>

    <div class="site-content">
             <div class="floating-header">
    <div class="floating-header-logo">
        <a href="https://blog.netlab.360.com">
                <img src="/content/images/size/w30/2019/02/netlab_xs-2.png" alt="360 Netlab Blog - Network Security Research Lab at 360 icon" />
            <span>360 Netlab Blog - Network Security Research Lab at 360</span>
        </a>
    </div>
    <span class="floating-header-divider">&mdash;</span>
    <div class="floating-header-title">The Gafgyt variant vbot seen in its 31 campaigns</div>
    <div class="floating-header-share">
        <div class="floating-header-share-label">Share this <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path d="M7.5 15.5V4a1.5 1.5 0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1H18a1.5 1.5 0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2 0 0 1 1.76-1.605L7.5 15.5zm6-6v2m-3-3.5v3.5m6-1v2"/>
</svg>
</div>
        <a class="floating-header-share-tw" href="https://twitter.com/share?text=The%20Gafgyt%20variant%20vbot%20seen%20in%20its%2031%20campaigns&amp;url=https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/"
            onclick="window.open(this.href, 'share-twitter', 'width=550,height=235');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg>        </a>
        <a class="floating-header-share-fb" href="https://www.facebook.com/sharer/sharer.php?u=https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/"
            onclick="window.open(this.href, 'share-facebook','width=580,height=296');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z"/></svg>        </a>
    </div>
    <progress id="reading-progress" class="progress" value="0">
        <div class="progress-container">
            <span class="progress-bar"></span>
        </div>
    </progress>
</div>


  <main id="site-main" class="site-main">
    <article class="article post tag-import-2022-11-30-11-16 tag-en no-image ">

      <header class="article-header gh-canvas">

        <div class="article-tag post-card-tags">
          <span class="post-card-primary-tag">
            <a href="/tag/import-2022-11-30-11-16/">Import 2022-11-30 11:16</a>
          </span>
        </div>

        <h1 class="article-title">The Gafgyt variant vbot seen in its 31 campaigns</h1>


        <div class="article-byline">
          <section class="article-byline-content">

            <ul class="author-list">
              <li class="author-list-item">
                <a href="/author/liu/" class="author-avatar">
                  <img class="author-profile-image" src="/content/images/2022/04/eclipse--3-.jpg" alt="LIU Ya" />
                </a>
              </li>
            </ul>

            <div class="article-byline-meta">
              <h4 class="author-name"><a href="/author/liu/">LIU Ya</a></h4>
              <div class="byline-meta-content">
                <time class="byline-meta-date" datetime=" 2020-07-06">Jul 6, 2020</time>
                <span class="byline-reading-time"><span class="bull">&bull;</span> 7 min read</span>
              </div>
            </div>

          </section>
        </div>


      </header>

      <section class="gh-content gh-canvas">
        <!--kg-card-begin: markdown--><h2 id="overview">Overview</h2>
<p>Gafgyt botnets have a long history of infecting Linux devices to launch DDoS attacks. While dozens of variants have been detected, new variants are constantly emerging with changes in terms of register message, exploits, and attacking methods. On the other hand, their new botnets are usually short lived, with most of the C2s watched keeping active for only a few days. In this blog, I will introduce such a sort of variant. The key findings are as follow:</p>
<ol>
<li>This variant was active from mid-April to mid-June. In total 31 campaigns for this variant were detected, from which 572 samples were captured. They were spread to build 19 botnets.</li>
<li>This variant evolved through 2 versions. Both have a characteristic register message template “ver:%f:%s:%d” that includes a rarely seen format specifier “%f”.</li>
<li>Mirai code was heavily used in both versions, which makes it possible analyze them with the extracted Mirai configurations.</li>
<li>The same infrastructures, e.g., download servers, and filenames were observed being used in other families of botnet campaigns.<br>
This variant was named as vbot because vbot is found being used in an unstripped sample by the author. Accordingly the 2 versions are named as vbot1 and vbot2 in this blog.</li>
</ol>
<h2 id="vbot1">vbot1</h2>
<p>Only 1 vbot1 campaign was seen, with 26 samples captured, as shown by the following honeypot records.</p>
<p><img src="https://blog.netlab.360.com/content/images/2020/07/fig1.png" alt="fig1" loading="lazy"></p>
<p>All samples share the same C2 <code>185.225.19.200:2017</code>. Since in Gafgyt it’s common that the same source code will be compiled into binaries for different processor architectures, for simplicity, the following analysis is based on the unstripped ARM sample of <code>f696375452d08eecbde14d64c74acdde</code>. Compared with previous variants, vbot1 has a more concise main() function because most of its code was moved into 2 new functions named init_vbot() and main_c2_handler().<br>
<img src="https://blog.netlab.360.com/content/images/2020/07/fig3.png" alt="fig3" loading="lazy"><br>
The function name init_vbot indicates that the author code named their botnet as vbot. It's responsible for initializing things including watchdog, configurations, and scanner. C2 communications are done in main_c2_handler(), where a loop of connection, registration and receiving command can be found, as shown below.</p>
<p><img src="https://blog.netlab.360.com/content/images/2020/07/fig4.png" alt="fig4" loading="lazy"></p>
<p>The characteristic register message template <code>“ver:%f:%s:%d”</code> is used in the registration block that tightly follows the connection block. From the unstripped symbols we can show that the 3 specifiers separately represent version, bot type and arch. The analyzed sample has version of 4.1.<br>
Actually it’s just the rarely seen specifier <code>“%f”</code> that caused my attention to this variant because as far as I knew “%f” was not supported by Gafgyt. The original authors borrowed the design of C library functions <code>printf</code> and <code>sprintf</code>, and implemented a new function named <code>sockprintf</code> which can generate message according to the assigned string format and send it to the C2. A custom yet simple format controls is done inside sockprintf with “%f” not implemented. That function has been kept by most Gafgyt variants. When firstly encountering vbot’s register template, I imagined a new version of sockprintf. However, that’s obviously not true. To reuse sockprintf but avoid complex programming, vbot author turned to sprintf to generate the expected message then passed it to sockprintf with the supported specifier <code>“%s”</code>.<br>
Similar to many Gafgyt variants, Mirai code can be found in vbot1. Due to its tight connection with the encrypted configurations, the borrowed code can be well analyzed with the extracted configurations. If you don’t know how to extract, please go to our VB2018 <a href="https://www.virusbulletin.com/uploads/pdf/magazine/2018/VB2018-Liu-Wang.pdf?ref=blog.netlab.360.com">paper</a>. The extracted configurations are shown below, with items annotated with its owner modules.<br>
<img src="https://blog.netlab.360.com/content/images/2020/07/fig5.png" alt="fig5" loading="lazy"><br>
The commands are hidden in configurations. Except for attacking methods, vbot1 also supports remote update with the command <code>UPDATE</code>. Another worth mentioning feature is persistence mechanism, which is done by modifying crontab.</p>
<p>It’s strange that vbot1 was spread only once. After its campaign was firstly detected, 35 hours, or 1.5 days, later the first vbot2 campaign was seen from the same download server. Obviously the operators wanted to replace vbot1 with vbot2. The reason might be its buggy registration which always sends a 191-byte register message back to its C2 but only 18 bytes there are really useful, as shown by the following figure.</p>
<p><img src="https://blog.netlab.360.com/content/images/2020/07/fig2.png" alt="fig2" loading="lazy"></p>
<h2 id="vbot2">vbot2</h2>
<p>In total 30 vbot2 campaigns were seen from April 16 to June 12, 2020, with 546 samples captured from 12 download servers. From those samples 13 C2 servers were checked. Detailed analysis shows except the registration code, vbot2 actually differs a lot from vbot1 in terms of code structure, attacking methods and Mirai configuration. The following analysis is based on the x86 sample <code>f5b0ebebc924e69e34a4ddd145916594</code>. It’s stripped but key function names have been manually restored.<br>
Different from vbot1 but similar to many other variants, vbot2's C2 communications are done in main(), as shown below.</p>
<p><img src="https://blog.netlab.360.com/content/images/2020/07/fig6.png" alt="fig6" loading="lazy"></p>
<p>Nearly the same registration block as vbot1 can be found, with the 3 specifiers holding the same semantics. The analyzed sample has version of 1.5. The loop composed of “loc_804B80B -&gt; REGISTRATION -&gt; loc_804B863” is very similar to previous Gafgyt variants in terms of CFG node number and semantics. The blocks are separately responsible for establishing connection, registration, and receiving commands.<br>
5 attacking methods were checked. All of them have been seen in other variants.</p>
<p><img src="https://blog.netlab.360.com/content/images/2020/07/fig7.png" alt="fig7" loading="lazy"></p>
<p>Some vbot2 samples, e.g., <code>e36d96a74236038a348cfd667ca83528</code>, have slightly different attacking method names, as shown below.</p>
<p><img src="https://blog.netlab.360.com/content/images/2020/07/fig8.png" alt="fig8" loading="lazy"></p>
<p>2 Mirai configurations were found. The only difference lies in the 0x28 item, as shown by the following 2 figures.</p>
<p><img src="https://blog.netlab.360.com/content/images/2020/07/fig9-1.png" alt="fig9-1" loading="lazy"><br>
<img src="https://blog.netlab.360.com/content/images/2020/07/fig10.png" alt="fig10" loading="lazy"></p>
<p>From the annotations we can see the Mirai code was mainly used in modules of watchdog, killer, scanner and rand alpha string generation. Since the 0x28 item corresponds to a message to be written to the STDOUT, and the second unprintable 0x28 item is probably caused by a typo from the author.<br>
With the extracted configurations the differences from vbot1 are obvious. They are:</p>
<ol>
<li>vbot2 has different attacking methods from vbot1.</li>
<li>While vbot1 hides commands in its configuration, vbot2 directly uses them.</li>
<li>No remote update and persistence mechanism were found in vbot2.</li>
</ol>
<p>Although those great differences suggest that vbot1 and vbot2 were actually derived from different code bases, I still think they were written by the same author(s) because:</p>
<ol>
<li>The shared register message template and registration implementation are unique enough.</li>
<li>The first vbot2 campaign shared the same download and C2 server as vbot1 within a relatively short period of time (1.5 days).</li>
</ol>
<h2 id="vbotandtherhombusmalware">vbot and the RHOMBUS malware</h2>
<p>While the filename RHOMBUS was seen 4 times in vbot campaigns, its use in Gafgyt campaigns was much earlier<a href="https://twitter.com/_odisseus/status/1232957932121313281?ref=blog.netlab.360.com">[1]</a>, with the variant called RHOMBUS analysed in <a href="https://old.reddit.com/r/LinuxMalware/comments/fh3zar/memo_rhombus_an_elf_bot_installerdropper/?ref=blog.netlab.360.com">[2]</a><a href="https://blog.apnic.net/2020/05/22/rhombus-a-new-iot-malware/?ref=blog.netlab.360.com">[3]</a>. Here I make a simple comparison. In the blogged RHOMBUS malware dropper mechanism was found, with the dropper having the persistence ability across restart by modifying crontab. The dropped binaries, e.g., <code>269029c1554b13c3eccfaacf0196ff72</code> and <code>ba42665872ea41e3d2edd8978bc38c24</code>, actually belong to another Gafgyt variant that also heavily borrowed code from Mirai, as shown by the below figure.<br>
<img src="https://blog.netlab.360.com/content/images/2020/07/fig11.png" alt="fig11" loading="lazy"><br>
From the above configuration we can see that obvious similarities exist between the RHOMBUS dropped binaries and vbot1. I think the most possibility is that vbot1 evolved from RHOMBUS malware with the following modifications:</p>
<ol>
<li>The dropper’s persistence mechanism was grafted to its payload. That’s why persistence items could be found in vbot1 configuration but not in the above figure.</li>
<li>The register template was updated.</li>
<li>c2 communications were moved to the so called main_c2_handler() function.</li>
</ol>
<p>Other key points about RHOMBUS malware include:</p>
<ol>
<li>The register message template is &quot;jm:_:%d&quot; or jm:%s:%d.</li>
<li>Similar to many Gafgyt variants, C2 communications were done in main().</li>
<li>The Gafgyt characteristic function initConnection() was removed with its code broken down into snippets that can be found in main().</li>
</ol>
<h2 id="conclusion">Conclusion</h2>
<p>I have introduced a short lived Gafgyt variant vbot. During its 2 month life, 31 campaigns were seen to build 19 botnets. From vbot we can learn that it’s easy for Linux IoT botnet authors to quickly write new variants, which might be due to the fact that dozens of Gafgyt and Mirai source has been leaked online. Once a new variant is written, the behind operators usually will spread it over and over with different campaigns to build multiple botnets. Such patterns have also been observed in other variants and families, e.g., Mirai. To fight such sort of fast emerging while short living botnets, automatic IoC extraction would play an import role for quick blocking or tracking. In VB2020 conference to be held in October, I will give a <a href="https://www.virusbulletin.com/conference/vb2020/abstracts/lightweight-emulation-based-ioc-extraction-gafgyt-botnets?ref=blog.netlab.360.com">talk</a> on that topic. I hope it will help you fight against Gafgyt botnets better.</p>
<h2 id="ioc">IoC</h2>
<h3 id="downloadservers">download servers</h3>
<pre><code>104.244.75.12
142.11.194.209
185.172.110.248
185.172.110.249
185.225.19.200
192.119.66.66
192.129.188.98
205.185.123.101
23.254.164.76
45.84.196.148
50.115.173.131
85.92.108.211
</code></pre>
<h3 id="vbot1md5">vbot1 MD5</h3>
<pre><code>2a141cd2930536f74f51fb57adbb0236
8717baf17660d8e96813ccd99f32c0be
cc559b487e1ec18727f37006bd3395e0
f666c3398601cd1b017f8d4556cabbbc
6fb6aaa253c165636ee63a4fdcdb1b9e
f422707ac869240bfeea648b6f9b90ad
36997fd129a5ff09311da94c3814379c
790ae71c097662bf6efba92d2d633076
e420df68941cc7ce2d8dd4ba92fd360e
3e36440871a6e39ee87e6d7d1a42155a
ae50829a02e5265c590f2fff35e64c52
09ab7435c76df627a813fb75db15ce5d
43ee98318945a475b555045aed4f0e01
e4db8addb5123021e358576157e5e1c0
4147fb0fe442173558f86fe37728ecae
846d6ad9ea86e331f2e071eac6a269de
40b1bf1e415ae508f8a5b831c2f4e994
f696375452d08eecbde14d64c74acdde
98b07b087b98b8d679c9938b16ae4df3
aea960687f0e43b465198be7ffafcf82
3d596d37fe6536a2c759923d920f3e08
52c462f3b22646774219f91bfb44ae66
d2c273e758fd4ac2759ca1d63aafcf6c
bbee73ed05730ad95df7a77241207ea5
0f492673eb249fa1209512575040f62d
0e59d4a40bba390314ffa0713b18441c
</code></pre>
<h3 id="vbot1c2">vbot1 C2</h3>
<pre><code>185.225.19.200 -port 2017
</code></pre>
<h3 id="vbot2md5">vbot2 MD5</h3>
<pre><code>efabd7e734490b9ad12812982347f237
614581bba324c3550a18268a8cb9c221
86310b514c55d31db288a2bb2c1e6114
76d9c69036f1eaac8f7a90eba3a36bfc
e36d96a74236038a348cfd667ca83528
d45da804fd35cf502bf942ebfeb64064
90a633f30bdbb2b80642bb229d1605d1
c4391301645cc9df4da3657f4c88f7dc
8bef47e420d0cdf8d0ee69a5d1f5b74c
4c8cdcbaf16f39a461b0bf7052fe1ec3
d936a9226fbbe97993bbe604c8cd5458
125b99cc79808679a7461f1841fd80a5
3b7da3d39db6ec08373c1e4af79aff85
23f764f5f918746b9ffff952dd25cc21
6f24268273573fd5f07cacb00031f1a0
ecae928b4e4093489bd221986da39aba
d883d5a2bedf0c3a3da79358c06fa429
3e26626d4563f3199fde498d0ff9fe32
11c1d777b18ffc0f23d2435fdb4645dc
...
</code></pre>
<h3 id="vbot2c2">vbot2 C2</h3>
<pre><code>104.244.75.12_666
142.11.194.209_1337
142.11.194.209_17911
142.11.194.209_34
142.11.194.209_44
184.172.110.248_666
184.172.110.249_666
185.172.110.248_323
185.172.110.248_666
185.225.19.200_666
192.119.66.66_7331
192.129.188.98_323
205.185.123.101_666
23.254.164.76_107
23.254.164.76_33
23.254.164.76_89
45.84.196.148_1227
50.115.173.131_111
85.92.108.211_1447
</code></pre>
<!--kg-card-end: markdown-->
      </section>



      <div id="disqus_thread" class="disqus-comments gh-canvas"></div>
      <script>
        var disqus_config = function () {
          this.page.url = "https://blog.netlab.360.com/the-gafgyt-variant-vbot-and-its-31-campaigns/";
          this.page.identifier = "ghost-5eff1de87646030007b27fb6"
        };
        (function () {
          var d = document, s = d.createElement('script');
          s.src = 'https://blog-netlab-360.disqus.com/embed.js';
          s.setAttribute('data-timestamp', +new Date());
          (d.head || d.body).appendChild(s);
        })();
      </script>
    </article>

  </main>


    <aside class="read-more-wrap outer">
      <div class="inner">
        <div class="read-more-feed">
            <article class="read-more-card" 
                  style="background-image: url(/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg)" 
              >
              <header class="read-more-card-header">
                <small class="read-more-card-header-sitetitle">&mdash; 360 Netlab Blog - Network Security Research Lab at 360 &mdash;</small>
                <h3 class="read-more-card-header-title"><a href="/tag/import-2022-11-30-11-16/">Import 2022-11-30 11:16</a></h3>
              </header>
              <div class="read-more-divider"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5"/></svg>
</div>
              <div class="read-more-card-content">
                <ul>
                  <li><a href="/new-ddos-botnet-wszeor/">快讯：使用21个漏洞传播的DDoS家族WSzero已经发展到第4个版本</a></li>
                  <li><a href="/p2p-botnets-review-status-continuous-monitoring/">P2P Botnets: Review - Status - Continuous Monitoring</a></li>
                  <li><a href="/p2p-botnet-monitor/">P2P 僵尸网络：回顾·现状·持续监测</a></li>
                </ul>
              </div>
              <footer class="read-more-card-footer">
                <a href="/tag/import-2022-11-30-11-16/">See all 249 posts →</a>
              </footer>
            </article>

          
<article class="post-card post tag-0-day tag-botnet tag-ddos tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/moobot/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">0-day</span>
        </div>
        <h2 class="post-card-title">
          那些年我们一起追过的僵尸网络之Moobot
        </h2>
      </header>
      <div class="post-card-excerpt">Moobot是一个基于mirai开发的僵尸网络,样本通过Telnet弱口令和利用nday,0day漏洞传播</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Hui Wang
          </div>

          <a href="/author/huiwang/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2017/05/WechatIMG1.jpeg" alt="Hui Wang" />
          </a>
        </li>
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Alex.Turing
          </div>

          <a href="/author/alex/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2020-07-09">Jul 9, 2020</time>
      <span class="post-card-meta-length">6 min read</span>
    </footer>

  </div>

</article>
          
<article class="post-card post tag-dnsmon tag-pdns tag-ntp-2 tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/look-at-ntp-pool-using-dns-data_en/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">DNSMon</span>
        </div>
        <h2 class="post-card-title">
          Look at NTP pool using DNS data
        </h2>
      </header>
      <div class="post-card-excerpt">With the rapid development of the Internet, more and more people have realized the importance of network infrastructure.  We don’t hear people talk about NTP ( Network Time Protocol) much though.

Whether NTP can work well will affect the operation of most time-based computer system. For example, IPSEC tunnel establishment,</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Zhang Zaifeng
          </div>

          <a href="/author/zhangzaifeng-2/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2016/09/ant.jpg" alt="Zhang Zaifeng" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2020-05-26">May 26, 2020</time>
      <span class="post-card-meta-length">8 min read</span>
    </footer>

  </div>

</article>
        </div>
      </div>
    </aside>



    </div>

    <footer class="site-footer outer">
        <div class="inner">
            <section class="copyright"><a href="https://blog.netlab.360.com">360 Netlab Blog - Network Security Research Lab at 360</a> &copy; 2024</section>
            <div><a href="https://ghost.org/" target="_blank" rel="noopener">Powered by Ghost</a></div>
        </div>
    </footer>

</div>


<script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous">
</script>
<script src="/assets/built/casper.js?v=42b57cac00"></script>
<script>
$(document).ready(function () {
    // Mobile Menu Trigger
    $('.gh-burger').click(function () {
        $('body').toggleClass('gh-head-open');
    });
    // FitVids - Makes video embeds responsive
    $(".gh-content").fitVids();

    // floating-header
    // Start fitVids
      var $postContent = $(".gh-content");
      $postContent.fitVids();
      // End fitVids

      var progressBar = document.querySelector('#reading-progress');
      var header = document.querySelector('.floating-header');
      var title = document.querySelector('.article-title');

      var lastScrollY = window.scrollY;
      var lastWindowHeight = window.innerHeight;
      var lastDocumentHeight = $(document).height();
      var ticking = false;

      function onScroll() {
        lastScrollY = window.scrollY;
        requestTick();
      }

      function onResize() {
        lastWindowHeight = window.innerHeight;
        lastDocumentHeight = $(document).height();
        requestTick();
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(update);
        }
        ticking = true;
      }

      function update() {
        var trigger = title.getBoundingClientRect().top + window.scrollY;
        var triggerOffset = title.offsetHeight + 35;
        var progressMax = lastDocumentHeight - lastWindowHeight;

        // show/hide floating header
        if (lastScrollY >= trigger + triggerOffset) {
          header.classList.add('floating-active');
        } else {
          header.classList.remove('floating-active');
        }

        progressBar.setAttribute('max', progressMax);
        progressBar.setAttribute('value', lastScrollY);

        ticking = false;
      }

      window.addEventListener('scroll', onScroll, { passive: true });
      window.addEventListener('resize', onResize, false);

      update();
});
</script>



</body>
</html>
