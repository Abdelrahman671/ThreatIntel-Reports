<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<link rel="profile" href="https://gmpg.org/xfn/11">
	<title>Automatic ReZer0 payload and configuration extraction &#8211; Max Kersten</title>
<style type="text/css">
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for csharp
 * CSS class: , CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2014 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.csharp .de1, .csharp .de2 {}
.csharp  {font-family:monospace;}
.csharp .imp {font-weight: bold; color: red;}
.csharp li, .csharp .li1 {font-weight: normal; vertical-align:top;}
.csharp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.csharp .li2 {font-weight: bold; vertical-align:top;}
.csharp .kw1 {color: #0600FF; font-weight: bold;}
.csharp .kw2 {color: #FF8000; font-weight: bold;}
.csharp .kw3 {color: #008000;}
.csharp .kw4 {color: #6666cc; font-weight: bold;}
.csharp .kw5 {color: #000000;}
.csharp .co1 {color: #008080; font-style: italic;}
.csharp .co2 {color: #008080;}
.csharp .co3 {color: #008080;}
.csharp .coMULTI {color: #008080; font-style: italic;}
.csharp .es0 {color: #008080; font-weight: bold;}
.csharp .es_h {color: #008080; font-weight: bold;}
.csharp .br0 {color: #008000;}
.csharp .sy0 {color: #008000;}
.csharp .st0 {color: #666666;}
.csharp .st_h {color: #666666;}
.csharp .nu0 {color: #FF0000;}
.csharp .me1 {color: #0000FF;}
.csharp .me2 {color: #0000FF;}
.csharp .ln-xtra, .csharp li.ln-xtra, .csharp div.ln-xtra {background-color: #ffc;}
.csharp span.xtra { display:block; }
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for xml
 * CSS class: , CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2014 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.xml .de1, .xml .de2 {}
.xml  {font-family:monospace;}
.xml .imp {font-weight: bold; color: red;}
.xml li, .xml .li1 {font-weight: normal; vertical-align:top;}
.xml .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.xml .li2 {font-weight: bold; vertical-align:top;}
.xml .es0 {color: #000099; font-weight: bold;}
.xml .br0 {color: #66cc66;}
.xml .sy0 {color: #66cc66;}
.xml .st0 {color: #ff0000;}
.xml .nu0 {color: #cc66cc;}
.xml .sc-1 {color: #808080; font-style: italic;}
.xml .sc0 {color: #00bbdd;}
.xml .sc1 {color: #ddbb00;}
.xml .sc2 {color: #339933;}
.xml .sc3 {color: #009900;}
.xml .re0 {color: #000066;}
.xml .re1 {color: #000000; font-weight: bold;}
.xml .re2 {color: #000000; font-weight: bold;}
.xml .ln-xtra, .xml li.ln-xtra, .xml div.ln-xtra {background-color: #ffc;}
.xml span.xtra { display:block; }
</style>
<meta name='robots' content='max-image-preview:large' />
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link href='https://fonts.gstatic.com' crossorigin rel='preconnect' />
<link rel="alternate" type="application/rss+xml" title="Max Kersten &raquo; Feed" href="https://maxkersten.nl/feed/" />
<link rel="alternate" type="application/rss+xml" title="Max Kersten &raquo; Comments Feed" href="https://maxkersten.nl/comments/feed/" />

<link rel='stylesheet' id='wp-block-library-css' href='https://maxkersten.nl/wp-includes/css/dist/block-library/style.min.css?ver=6.7.1' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='generate-style-grid-css' href='https://maxkersten.nl/wp-content/themes/generatepress/css/unsemantic-grid.min.css?ver=1.3.46' type='text/css' media='all' />
<link rel='stylesheet' id='generate-style-css' href='https://maxkersten.nl/wp-content/themes/generatepress/style.css?ver=1.3.46' type='text/css' media='all' />
<style id='generate-style-inline-css' type='text/css'>
body{background-color:#efefef;color:#3a3a3a;}a, a:visited{color:#1e73be;text-decoration:none;}a:hover, a:focus, a:active{color:#000000;text-decoration:none;}body .grid-container{max-width:1100px;}
body, button, input, select, textarea{font-family:"Open Sans", sans-serif;}.main-navigation .main-nav ul ul li a{font-size:14px;}@media (max-width:768px){.main-title{font-size:30px;}h1{font-size:30px;}h2{font-size:25px;}}
.site-header{background-color:#ffffff;color:#3a3a3a;}.site-header a,.site-header a:visited{color:#3a3a3a;}.main-title a,.main-title a:hover,.main-title a:visited{color:#222222;}.site-description{color:#999999;}.main-navigation,.main-navigation ul ul{background-color:#222222;}.main-navigation .main-nav ul li a,.menu-toggle{color:#ffffff;}.main-navigation .main-nav ul li > a:hover,.main-navigation .main-nav ul li > a:focus, .main-navigation .main-nav ul li.sfHover > a{color:#ffffff;background-color:#3f3f3f;}button.menu-toggle:hover,button.menu-toggle:focus,.main-navigation .mobile-bar-items a,.main-navigation .mobile-bar-items a:hover,.main-navigation .mobile-bar-items a:focus{color:#ffffff;}.main-navigation .main-nav ul li[class*="current-menu-"] > a{color:#ffffff;background-color:#3f3f3f;}.main-navigation .main-nav ul li[class*="current-menu-"] > a:hover,.main-navigation .main-nav ul li[class*="current-menu-"].sfHover > a{color:#ffffff;background-color:#3f3f3f;}.main-navigation ul ul{background-color:#3f3f3f;}.main-navigation .main-nav ul ul li a{color:#ffffff;}.main-navigation .main-nav ul ul li > a:hover,.main-navigation .main-nav ul ul li > a:focus,.main-navigation .main-nav ul ul li.sfHover > a{color:#ffffff;background-color:#4f4f4f;}.main-navigation .main-nav ul ul li[class*="current-menu-"] > a{color:#ffffff;background-color:#4f4f4f;}.main-navigation .main-nav ul ul li[class*="current-menu-"] > a:hover,.main-navigation .main-nav ul ul li[class*="current-menu-"].sfHover > a{color:#ffffff;background-color:#4f4f4f;}.separate-containers .inside-article, .separate-containers .comments-area, .separate-containers .page-header, .one-container .container, .separate-containers .paging-navigation, .inside-page-header{background-color:#ffffff;}.entry-meta{color:#888888;}.entry-meta a,.entry-meta a:visited{color:#666666;}.entry-meta a:hover{color:#1e73be;}.sidebar .widget{background-color:#ffffff;}.sidebar .widget .widget-title{color:#000000;}.site-info{color:#ffffff;background-color:#222222;}.site-info a,.site-info a:visited{color:#ffffff;}.site-info a:hover{color:#606060;}.footer-bar .widget_nav_menu .current-menu-item a{color:#606060;}input[type="text"],input[type="email"],input[type="url"],input[type="password"],input[type="search"],textarea{color:#666666;background-color:#fafafa;border-color:#cccccc;}input[type="text"]:focus,input[type="email"]:focus,input[type="url"]:focus,input[type="password"]:focus,input[type="search"]:focus,textarea:focus{color:#666666;background-color:#ffffff;border-color:#bfbfbf;}button,html input[type="button"],input[type="reset"],input[type="submit"],.button,.button:visited{color:#ffffff;background-color:#666666;}button:hover,html input[type="button"]:hover,input[type="reset"]:hover,input[type="submit"]:hover,.button:hover,button:focus,html input[type="button"]:focus,input[type="reset"]:focus,input[type="submit"]:focus,.button:focus{color:#ffffff;background-color:#3f3f3f;}
@media (max-width:768px){.separate-containers .inside-article, .separate-containers .comments-area, .separate-containers .page-header, .separate-containers .paging-navigation, .one-container .site-content, .inside-page-header{padding:30px;}}.main-navigation ul ul{top:auto;}
</style>
<link rel='stylesheet' id='generate-mobile-style-css' href='https://maxkersten.nl/wp-content/themes/generatepress/css/mobile.min.css?ver=1.3.46' type='text/css' media='all' />
<link rel='stylesheet' id='fontawesome-css' href='https://maxkersten.nl/wp-content/themes/generatepress/css/font-awesome.min.css?ver=4.7' type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='generate-ie-css' href='https://maxkersten.nl/wp-content/themes/generatepress/css/ie.min.css?ver=1.3.46' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='wpgeshi-wp-geshi-highlight-css' href='https://maxkersten.nl/wp-content/plugins/wp-geshi-highlight/wp-geshi-highlight.css?ver=6.7.1' type='text/css' media='all' />
<script type="text/javascript" src="https://maxkersten.nl/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://maxkersten.nl/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="https://api.w.org/" href="https://maxkersten.nl/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://maxkersten.nl/wp-json/wp/v2/pages/3061" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://maxkersten.nl/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.7.1" />
<link rel="canonical" href="https://maxkersten.nl/binary-analysis-course/analysis-scripts/automatic-rezer0-payload-and-configuration-extraction/" />
<link rel='shortlink' href='https://maxkersten.nl/?p=3061' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://maxkersten.nl/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fmaxkersten.nl%2Fbinary-analysis-course%2Fanalysis-scripts%2Fautomatic-rezer0-payload-and-configuration-extraction%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://maxkersten.nl/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fmaxkersten.nl%2Fbinary-analysis-course%2Fanalysis-scripts%2Fautomatic-rezer0-payload-and-configuration-extraction%2F&#038;format=xml" />
<meta name="viewport" content="width=device-width, initial-scale=1"><link rel="icon" href="https://maxkersten.nl/wp-content/uploads/2021/03/cropped-libra-32x32.png" sizes="32x32" />
<link rel="icon" href="https://maxkersten.nl/wp-content/uploads/2021/03/cropped-libra-192x192.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://maxkersten.nl/wp-content/uploads/2021/03/cropped-libra-180x180.png" />
<meta name="msapplication-TileImage" content="https://maxkersten.nl/wp-content/uploads/2021/03/cropped-libra-270x270.png" />
</head>

<body data-rsssl=1 itemtype='http://schema.org/WebPage' itemscope='itemscope' class="page-template-default page page-id-3061 page-child parent-pageid-2046  right-sidebar nav-below-header fluid-header separate-containers active-footer-widgets-0 nav-aligned-left header-aligned-left dropdown-hover">
	<a class="screen-reader-text skip-link" href="#content" title="Skip to content">Skip to content</a>
			<header itemtype="http://schema.org/WPHeader" itemscope="itemscope" id="masthead" class="site-header">
		<div class="inside-header grid-container grid-parent">
						<div class="site-branding">
				<p class="main-title" itemprop="headline">
			<a href="https://maxkersten.nl/" rel="home">
				Max Kersten
			</a>
		</p>
				<p class="site-description">
			Security through explanation
		</p>
			</div>					</div><!-- .inside-header -->
	</header><!-- #masthead -->
			<nav itemtype="http://schema.org/SiteNavigationElement" itemscope="itemscope" id="site-navigation" class="main-navigation">
		<div class="inside-navigation grid-container grid-parent">
						<button class="menu-toggle" aria-controls="primary-menu" aria-expanded="false">
								<span class="mobile-menu">Menu</span>
			</button>
				<div id="primary-menu" class="main-nav">
		<ul class="menu sf-menu">
			<li class="page_item page-item-31"><a href="https://maxkersten.nl/">Home</a></li>
<li class="page_item page-item-51"><a href="https://maxkersten.nl/blog/">Blog</a></li>
<li class="page_item page-item-205 menu-item-has-children current-menu-ancestor"><a href="https://maxkersten.nl/binary-analysis-course/">Binary Analysis Course<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
<ul class='children'>
<li class="page_item page-item-240 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/introduction/">Introduction<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-208"><a href="https://maxkersten.nl/binary-analysis-course/introduction/secura-grand-slam-ctf-easy-reverse/">Practical case: Secura Grand Slam CTF &#8220;Easy Reverse&#8221;</a></li>
<li class="page_item page-item-2135"><a href="https://maxkersten.nl/binary-analysis-course/introduction/the-workstation/">The workstation</a></li>
<li class="page_item page-item-263"><a href="https://maxkersten.nl/binary-analysis-course/introduction/basic-cpu-architecture/">Basic CPU architecture</a></li>
	</ul>
</li>
<li class="page_item page-item-311 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/">Assembly basics<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-313"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/conditions-and-loops/">Conditions and loops</a></li>
<li class="page_item page-item-400"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/practical-case-patch-me-0x01/">Practical case: Patch Me 0x01</a></li>
<li class="page_item page-item-485"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/methods-and-macros-the-call-stack/">Methods and macros: the call stack</a></li>
<li class="page_item page-item-529"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/practical-case-buffer-overflow-0x01/">Practical case: Buffer Overflow 0x01</a></li>
<li class="page_item page-item-568"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/crash-course/">Crash course</a></li>
<li class="page_item page-item-1569"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/practical-case-crack-me-0x01/">Practical case: Crack Me 0x01</a></li>
<li class="page_item page-item-1680"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/practical-case-crack-me-0x02/">Practical case: Crack Me 0x02</a></li>
<li class="page_item page-item-1971"><a href="https://maxkersten.nl/binary-analysis-course/assembly-basics/practical-case-crack-me-0x03/">Practical case: Crack Me 0x03</a></li>
	</ul>
</li>
<li class="page_item page-item-1286 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/assembly-code/">Assembly code<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-1289"><a href="https://maxkersten.nl/binary-analysis-course/assembly-code/hello-world/">Hello world</a></li>
<li class="page_item page-item-1323"><a href="https://maxkersten.nl/binary-analysis-course/assembly-code/universal-product-code-calculator/">Universal Product Code calculator</a></li>
<li class="page_item page-item-1385"><a href="https://maxkersten.nl/binary-analysis-course/assembly-code/debugging-code/">Debugging code</a></li>
	</ul>
</li>
<li class="page_item page-item-610 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/binary-types/">Binary types<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-615"><a href="https://maxkersten.nl/binary-analysis-course/binary-types/dot-net/">Dot Net</a></li>
<li class="page_item page-item-687"><a href="https://maxkersten.nl/binary-analysis-course/binary-types/android/">Android</a></li>
<li class="page_item page-item-1541"><a href="https://maxkersten.nl/binary-analysis-course/binary-types/browser-plug-in/">Browser plug-in</a></li>
	</ul>
</li>
<li class="page_item page-item-1435 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/common-techniques/">Common techniques<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-1441"><a href="https://maxkersten.nl/binary-analysis-course/common-techniques/general-techniques/">General techniques</a></li>
<li class="page_item page-item-3155"><a href="https://maxkersten.nl/binary-analysis-course/common-techniques/analysing-scripts/">Analysing scripts</a></li>
<li class="page_item page-item-3439"><a href="https://maxkersten.nl/binary-analysis-course/common-techniques/debugging-dot-net-binaries/">Debugging Dot Net binaries</a></li>
	</ul>
</li>
<li class="page_item page-item-744 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/">Malware analysis<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-4305"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/dot-net-rat/">Dot Net RAT</a></li>
<li class="page_item page-item-862"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/android-sms-stealer/">Android SMS Stealer</a></li>
<li class="page_item page-item-1039"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/lnk-isesteroids-powershell-dropper/">LNK &#038; ISESteroids Powershell dropper</a></li>
<li class="page_item page-item-1079"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/emotet-droppers/">Emotet droppers</a></li>
<li class="page_item page-item-1193"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/magecart/">Magecart</a></li>
<li class="page_item page-item-1785"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/corona-ddos-bot/">Corona DDoS bot</a></li>
<li class="page_item page-item-2326"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/azorult-loader-stages/">Azorult loader stages</a></li>
<li class="page_item page-item-2472"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/emotet-javascript-downloader/">Emotet JavaScript downloader</a></li>
<li class="page_item page-item-2560"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/corona-locker/">Corona Locker</a></li>
<li class="page_item page-item-3016"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/rezer0v4-loader/">ReZer0v4 loader</a></li>
<li class="page_item page-item-3913"><a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/dumping-whispergates-wiper-from-an-eazfuscator-obfuscated-loader/">Dumping WhisperGate&#8217;s wiper from an Eazfuscator obfuscated loader</a></li>
	</ul>
</li>
<li class="page_item page-item-2046 menu-item-has-children current-menu-ancestor current-menu-parent"><a href="https://maxkersten.nl/binary-analysis-course/analysis-scripts/">Analysis scripts<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-1007"><a href="https://maxkersten.nl/binary-analysis-course/analysis-scripts/automatic-string-formatting-deobfuscation/">PowerShell string formatting deobfuscation</a></li>
<li class="page_item page-item-2764"><a href="https://maxkersten.nl/binary-analysis-course/analysis-scripts/javascript-string-concatenation-deobfuscation/">JavaScript string concatenation deobfuscation</a></li>
<li class="page_item page-item-3061 current-menu-item"><a href="https://maxkersten.nl/binary-analysis-course/analysis-scripts/automatic-rezer0-payload-and-configuration-extraction/">Automatic ReZer0 payload and configuration extraction</a></li>
<li class="page_item page-item-3206"><a href="https://maxkersten.nl/binary-analysis-course/analysis-scripts/ghidra-script-to-decrypt-strings-in-amadey-1-09/">Ghidra script to decrypt strings in Amadey 1.09</a></li>
<li class="page_item page-item-3521"><a href="https://maxkersten.nl/binary-analysis-course/analysis-scripts/ghidra-script-to-decrypt-a-string-array-in-xor-ddos/">Ghidra script to decrypt a string array in XOR DDoS</a></li>
<li class="page_item page-item-3974"><a href="https://maxkersten.nl/binary-analysis-course/analysis-scripts/ghidra-script-to-handle-stack-strings/">Ghidra script to handle stack strings</a></li>
	</ul>
</li>
<li class="page_item page-item-3978 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/malware-snippets/">Malware snippets<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-3982"><a href="https://maxkersten.nl/binary-analysis-course/malware-snippets/self-deletion/">Self Deletion</a></li>
<li class="page_item page-item-3984"><a href="https://maxkersten.nl/binary-analysis-course/malware-snippets/api-hashing/">API Hashing</a></li>
	</ul>
</li>
<li class="page_item page-item-1250 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/obtaining-samples/">Obtaining samples<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-1253"><a href="https://maxkersten.nl/binary-analysis-course/obtaining-samples/searching-samples/">Searching samples</a></li>
	</ul>
</li>
<li class="page_item page-item-2096 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/documentation/">Documentation<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-2099"><a href="https://maxkersten.nl/binary-analysis-course/documentation/article-structure/">Article structure</a></li>
	</ul>
</li>
<li class="page_item page-item-480"><a href="https://maxkersten.nl/binary-analysis-course/resources/">Resources</a></li>
<li class="page_item page-item-473"><a href="https://maxkersten.nl/binary-analysis-course/faq/">FAQ</a></li>
<li class="page_item page-item-1490 menu-item-has-children"><a href="https://maxkersten.nl/binary-analysis-course/miscellaneous/">Miscellaneous<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-1493"><a href="https://maxkersten.nl/binary-analysis-course/miscellaneous/a-year-in-review-2018-2019/">A year in review: 2018-2019</a></li>
<li class="page_item page-item-2697"><a href="https://maxkersten.nl/binary-analysis-course/miscellaneous/a-year-in-review-2019-2020/">A year in review: 2019-2020</a></li>
<li class="page_item page-item-3467"><a href="https://maxkersten.nl/binary-analysis-course/miscellaneous/a-year-in-review-2020-2021/">A year in review: 2020-2021</a></li>
<li class="page_item page-item-4031"><a href="https://maxkersten.nl/binary-analysis-course/miscellaneous/a-year-in-review-2021-2022/">A year in review: 2021-2022</a></li>
	</ul>
</li>
</ul>
</li>
<li class="page_item page-item-4353"><a href="https://maxkersten.nl/libras-ghidra-library/">Libra&#8217;s Ghidra Library</a></li>
<li class="page_item page-item-161 menu-item-has-children"><a href="https://maxkersten.nl/projects/">Projects<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
<ul class='children'>
<li class="page_item page-item-793"><a href="https://maxkersten.nl/projects/androidprojectcreator/">AndroidProjectCreator</a></li>
<li class="page_item page-item-3295 menu-item-has-children"><a href="https://maxkersten.nl/projects/m3-framework/">m3 framework<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-3292"><a href="https://maxkersten.nl/projects/m3-framework/extending-m3/">Extending m3</a></li>
<li class="page_item page-item-3329"><a href="https://maxkersten.nl/projects/m3-framework/anubis-and-cerberus-explained/">Anubis and Cerberus explained</a></li>
	</ul>
</li>
<li class="page_item page-item-3128 menu-item-has-children"><a href="https://maxkersten.nl/projects/api-client-libraries/">API client libraries<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-3351"><a href="https://maxkersten.nl/projects/api-client-libraries/hatching-triage-java-api-client/">Hatching Triage Java API client</a></li>
<li class="page_item page-item-3353"><a href="https://maxkersten.nl/projects/api-client-libraries/malshare-java-api-client/">MalShare Java API client</a></li>
<li class="page_item page-item-3700"><a href="https://maxkersten.nl/projects/api-client-libraries/malware-bazaar-java-api-client/">Malware Bazaar Java API client</a></li>
<li class="page_item page-item-4185"><a href="https://maxkersten.nl/projects/api-client-libraries/yaraify-java-api-client/">Yaraify Java API client</a></li>
	</ul>
</li>
<li class="page_item page-item-2876"><a href="https://maxkersten.nl/projects/malwaretheflag/">MalwareTheFlag</a></li>
<li class="page_item page-item-2145"><a href="https://maxkersten.nl/projects/responsible-disclosures/">Responsible Disclosures</a></li>
<li class="page_item page-item-2430"><a href="https://maxkersten.nl/projects/malpull/">MalPull</a></li>
<li class="page_item page-item-104 menu-item-has-children"><a href="https://maxkersten.nl/projects/capricorn/">Capricorn<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-109"><a href="https://maxkersten.nl/projects/capricorn/changelog/">Changelog</a></li>
	</ul>
</li>
<li class="page_item page-item-2141 menu-item-has-children"><a href="https://maxkersten.nl/projects/archive/">Archive<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
	<ul class='children'>
<li class="page_item page-item-163"><a href="https://maxkersten.nl/projects/archive/shouldersurfer/">ShoulderSurfer</a></li>
<li class="page_item page-item-167"><a href="https://maxkersten.nl/projects/archive/stringer/">Stringer</a></li>
<li class="page_item page-item-16 menu-item-has-children"><a href="https://maxkersten.nl/projects/archive/gemini/">Gemini<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
		<ul class='children'>
<li class="page_item page-item-73"><a href="https://maxkersten.nl/projects/archive/gemini/changelog/">Changelog</a></li>
		</ul>
</li>
<li class="page_item page-item-35"><a href="https://maxkersten.nl/projects/archive/whitepapers/">Whitepapers</a></li>
	</ul>
</li>
</ul>
</li>
<li class="page_item page-item-4 menu-item-has-children"><a href="https://maxkersten.nl/about-me/">About me<span role="button" class="dropdown-menu-toggle" aria-expanded="false"></span></a>
<ul class='children'>
<li class="page_item page-item-2436"><a href="https://maxkersten.nl/about-me/news-and-conferences/">News and conferences</a></li>
<li class="page_item page-item-198"><a href="https://maxkersten.nl/about-me/privacy-policy/">Privacy Policy</a></li>
</ul>
</li>
		</ul>
	</div><!-- .main-nav -->
			</div><!-- .inside-navigation -->
	</nav><!-- #site-navigation -->
		
	<div id="page" class="hfeed site grid-container container grid-parent">
		<div id="content" class="site-content">
			
	<div id="primary" class="content-area grid-parent mobile-grid-100 grid-75 tablet-grid-75">
		<main id="main" class="site-main">
						
				
<article id="post-3061" class="post-3061 page type-page status-publish" itemtype='http://schema.org/CreativeWork' itemscope='itemscope'>
	<div class="inside-article">
				
					<header class="entry-header">
				<h1 class="entry-title" itemprop="headline">Automatic ReZer0 payload and configuration extraction</h1>			</header><!-- .entry-header -->
				
				<div class="entry-content" itemprop="text">
			<p><em>This article was published on the 17th of September 2020. This article was updated on the 8th of December 2021.</em></p>
<p>Understanding how a loader works shortens the time an analyst needs when it is encountered again. It also allows an analyst to create detection rules. This is, however, still manual work. Automating the extraction of the payload and possible configuration of a loader is the ideal scenario. This article covers the automatic extraction of both, based on the <a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/rezer0v4-loader/">ReZer0 loader analysis</a> which was analysed earlier on in this course.</p>
<p>As a follow-up article, I dug deep into this loader&#8217;s details, as well as historical versions, can be found on McAfee&#8217;s Advanced Research Team&#8217;s <a href="https://www.mcafee.com/blogs/enterprise/mcafee-enterprise-atr/see-ya-sharp-a-loaders-tale/">blog</a>.</p>
<h2>Table of contents</h2>
<ul>
<li><a href="#the-approach">The approach</a></li>
<li><a href="#writing-the-extractor">Writing the extractor</a></li>
<li><a href="#conclusion">Conclusion</a></li>
<li><a href="#extractor-code">Extractor code</a></li>
</ul>
<p><a name ="the-approach"></a></p>
<h2><a href="#the-approach">The approach</a></h2>
<p>As is described in the analysis, the loader&#8217;s payload is stored within a private static byte array, whereas the configuration is stored in a private static string array. The required fields are populated based on the string array, which the loader then uses to determine which functions need to be executed.</p>
<p>Within the Dot Net framework, the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly">Assembly</a> class can be used to interact with classes, functions, and fields within a Dot Net binary.</p>
<p>Note that both required fields are <em>static</em>, meaning they are assigned their value when the file is loaded. As such, one can iterate over the private static fields within all classes, as the variable and class names are randomised per sample. Once a byte array or string array is found, additional checks can be performed. If these checks are passed, one can store the payload on the disk and print the loader&#8217;s configuration.</p>
<p><a name ="writing-the-extractor"></a></p>
<h2><a href="#writing-the-extractor">Writing the extractor</a></h2>
<p>Based on prior research, the payload is an executable, meaning one can assume it starts with the <em>MZ</em> header. The size of the string array is 37, meaning all other string arrays can be ignored. These checks, especially the second one, may change in the future. If this is the case, or to avoid missing future samples, one could dump all occurrences that are encountered. The code is given in pieces, where each part is explained in the usual step-by-step manner.</p>
<h3>Configuring the project</h3>
<p>The extractor will be written in C# using Visual Studio 2019. Other versions should work as well, but might require different or additional steps. After making a console application, one has to edit the <em>App.config</em> file to allow the project to load code from remote sources. The code snippet to add to the configuration file is given below.</p>


<div class="wp-geshi-highlight-wrap5"><div class="wp-geshi-highlight-wrap4"><div class="wp-geshi-highlight-wrap3"><div class="wp-geshi-highlight-wrap2"><div class="wp-geshi-highlight-wrap"><div class="wp-geshi-highlight"><div class="csharp"><pre class="de1"><span class="sy0">&lt;</span>runtime<span class="sy0">&gt;</span>
    <span class="sy0">&lt;</span>loadFromRemoteSources enabled<span class="sy0">=</span><span class="st0">&quot;true&quot;</span><span class="sy0">/&gt;</span>
<span class="sy0">&lt;/</span>runtime<span class="sy0">&gt;</span></pre></div></div></div></div></div></div></div>


<p>The reason as to why this is required, is the code that is executed within the ReZer0 loader when it is loaded. This is also the exact functionality on which the extractor is based.</p>
<h3>The main function</h3>
<p>To easily extract payloads from loaders in bulk, this extractor will go over each file in a given directory. As such, the program requires a single command-line argument: the path to a folder that contains the loaders that are to be analysed. Tests of this program as a whole were done based upon on the <a href="https://maxkersten.nl/binary-analysis-course/malware-analysis/rezer0v4-loader/#finding-more-samples">215 samples</a> that were found during prior research. The main function is given below.</p>


<div class="wp-geshi-highlight-wrap5"><div class="wp-geshi-highlight-wrap4"><div class="wp-geshi-highlight-wrap3"><div class="wp-geshi-highlight-wrap2"><div class="wp-geshi-highlight-wrap"><div class="wp-geshi-highlight"><div class="csharp"><pre class="de1"><span class="kw1">static</span> <span class="kw4">void</span> Main<span class="br0">&#40;</span><span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> args<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">//Get all files in the given folder</span>
	<span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> files <span class="sy0">=</span> Directory<span class="sy0">.</span><span class="me1">GetFiles</span><span class="br0">&#40;</span>args<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="co1">//Loop through all files in the given folder</span>
	<span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="kw4">string</span> file <span class="kw1">in</span> files<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="co1">//Handle each file</span>
		HandleFile<span class="br0">&#40;</span>file<span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
	<span class="co1">//Keep the window open once all files have been iterated through</span>
	Console<span class="sy0">.</span><span class="me1">ReadKey</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre></div></div></div></div></div></div></div>


<h3>Extracting the payload</h3>
<p>To extract the payload, one must load the loader sample as an assembly in C#. This does not execute the entry point of the binary, which is essential in this case. Do note that technically, all static code is executed by loading the binary. Once the loader sample is loaded, one needs to go over all classes, as the class name that contains the payload is unknown. For each class, one wants to obtain all <em>private static</em> fields, since the payload is defined as such. The type of the field is then matched for each encountered field. If the payload contains <em>MZ</em> as the first two bytes, it is safe to assume that the payload has been found. Writing it to the disk then preserves the decrypted payload. The payload is already decrypted, as it is a <em>static</em> field in the loader, meaning the value is given to the field once the executable is loaded, and prior to the execution of the main function. The code to do so is given below.</p>


<div class="wp-geshi-highlight-wrap5"><div class="wp-geshi-highlight-wrap4"><div class="wp-geshi-highlight-wrap3"><div class="wp-geshi-highlight-wrap2"><div class="wp-geshi-highlight-wrap"><div class="wp-geshi-highlight"><div class="csharp"><pre class="de1"><span class="co1">//Load the ReZer0 loader file</span>
Assembly assembly <span class="sy0">=</span> Assembly<span class="sy0">.</span><span class="me1">LoadFile</span><span class="br0">&#40;</span>file<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co1">//Loop over all classes</span>
<span class="kw1">foreach</span> <span class="br0">&#40;</span>Type type <span class="kw1">in</span> assembly<span class="sy0">.</span><span class="me1">GetTypes</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">//Get all nonpublic static fields from each class</span>
	FieldInfo<span class="br0">&#91;</span><span class="br0">&#93;</span> fields <span class="sy0">=</span> type<span class="sy0">.</span><span class="me1">GetFields</span><span class="br0">&#40;</span>BindingFlags<span class="sy0">.</span><span class="me1">NonPublic</span> <span class="sy0">|</span> BindingFlags<span class="sy0">.</span><span class="kw1">Static</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="co1">//Loop over all fields</span>
	<span class="kw1">foreach</span> <span class="br0">&#40;</span>FieldInfo fieldInfo <span class="kw1">in</span> fields<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="co1">//Get the value of each field, as the name is randomised for the loader</span>
		<span class="kw4">object</span> <span class="kw1">value</span> <span class="sy0">=</span> fieldInfo<span class="sy0">.</span><span class="me1">GetValue</span><span class="br0">&#40;</span><span class="kw1">null</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="co1">//If the type of the current field's value is a byte array, its the payload, as there is only 1 embedded in the class</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw1">value</span> <span class="kw3">is</span> <span class="kw4">Byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			<span class="co1">//Create a local variable to more easily handle it</span>
			<span class="kw4">byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span> payload <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw4">byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="kw1">value</span><span class="sy0">;</span>
			<span class="co1">//Verify that the byte array is a PE file</span>
			<span class="kw1">if</span> <span class="br0">&#40;</span>payload<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">==</span> 0x4d <span class="sy0">&amp;&amp;</span> payload<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">==</span> 0x5a<span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				<span class="co1">//Write the payload to the disk</span>
				File<span class="sy0">.</span><span class="me1">WriteAllBytes</span><span class="br0">&#40;</span>file <span class="sy0">+</span> <span class="st0">&quot;_extracted&quot;</span>, payload<span class="br0">&#41;</span><span class="sy0">;</span>
				Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span><span class="st0">&quot;Wrote payload to disk as &quot;</span> <span class="sy0">+</span> file <span class="sy0">+</span> <span class="st0">&quot;_extracted&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
				Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span><span class="st0">&quot;Payload size: &quot;</span> <span class="sy0">+</span> payload<span class="sy0">.</span><span class="me1">Length</span> <span class="sy0">+</span> <span class="st0">&quot; bytes&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
			<span class="br0">&#125;</span>
		<span class="br0">&#125;</span></pre></div></div></div></div></div></div></div>


<h3>Extracting the configuration</h3>
<p>To extract the configuration array, one can use the same loop to iterate through all fields. In this case, the requested field type is a string array. If the type matches, and the length is equal to 37, which is the length that is used for the configuration array in the loader, one can assume the configuration array has been found. All that rests then, is to print the configuration value with their corresponding settings. The knowledge based on this is based on the previous research into this loader. The code for the configuration extraction is given below.</p>


<div class="wp-geshi-highlight-wrap5"><div class="wp-geshi-highlight-wrap4"><div class="wp-geshi-highlight-wrap3"><div class="wp-geshi-highlight-wrap2"><div class="wp-geshi-highlight-wrap"><div class="wp-geshi-highlight"><div class="csharp"><pre class="de1"><span class="co1">//If the value type is a string array, it means that the raw configuration values of the loader</span>
<span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw1">value</span> <span class="kw3">is</span> <span class="kw4">String</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">//Create a local variable based on the value, casting the type safely due to the previous if-statement</span>
	<span class="kw4">String</span><span class="br0">&#91;</span><span class="br0">&#93;</span> settings <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw4">String</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="kw1">value</span><span class="sy0">;</span>
	<span class="co1">//If the length of the string array is equal to 37, it is safe to assume that the configuration array has been found</span>
	<span class="co1">//The length is based on prior research</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>settings<span class="sy0">.</span><span class="me1">Length</span> <span class="sy0">==</span> <span class="nu0">37</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="co1">//Create and instantiate the output string</span>
		<span class="kw4">String</span> output <span class="sy0">=</span> <span class="st0">&quot;Payload launch method: &quot;</span><span class="sy0">;</span>
&nbsp;
		<span class="co1">//Get the launch enum value</span>
		<span class="kw4">int</span> launchEnum <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="co1">//If the launch enum value is equal to 4, the payload is launched directly</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">4</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;launch from loader's memory&quot;</span><span class="sy0">;</span>
		<span class="br0">&#125;</span>
		<span class="co1">//In other cases, it executes the payload via a hollowed process</span>
		<span class="kw1">else</span>
		<span class="br0">&#123;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;process hollowing into &quot;</span><span class="sy0">;</span>
			<span class="co1">//Depending on the value, the loader uses a specific process</span>
			<span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				output <span class="sy0">+=</span> <span class="st0">&quot;the loader's process&quot;</span><span class="sy0">;</span>
			<span class="br0">&#125;</span>
			<span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				output <span class="sy0">+=</span> <span class="st0">&quot;MSBuild.exe&quot;</span><span class="sy0">;</span>
			<span class="br0">&#125;</span>
			<span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">2</span><span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				output <span class="sy0">+=</span> <span class="st0">&quot;vbc.exe&quot;</span><span class="sy0">;</span>
			<span class="br0">&#125;</span>
			<span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">3</span><span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				output <span class="sy0">+=</span> <span class="st0">&quot;RegSvcs.exe&quot;</span><span class="sy0">;</span>
			<span class="br0">&#125;</span>
		<span class="br0">&#125;</span>
		<span class="co1">//Add a newline for readability</span>
		output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
		<span class="co1">//Get the value of the scheduled task setting</span>
		<span class="kw4">int</span> shouldSetScheduledTask <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="co1">//Print the scheduled task value</span>
		output <span class="sy0">+=</span> <span class="st0">&quot;Sets a scheduled task: &quot;</span> <span class="sy0">+</span> shouldSetScheduledTask <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
		<span class="co1">//Get the remote payload execution setting's value</span>
		<span class="kw4">int</span> shouldExecuteRemotePayload <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">4</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="co1">//Display the value</span>
		output <span class="sy0">+=</span> <span class="st0">&quot;Executes remote payload: &quot;</span> <span class="sy0">+</span> shouldExecuteRemotePayload <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
		<span class="co1">//if the setting is enabled, the specific settings are read and printed</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>shouldExecuteRemotePayload <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			<span class="kw4">string</span> url <span class="sy0">=</span> settings<span class="br0">&#91;</span><span class="nu0">5</span><span class="br0">&#93;</span><span class="sy0">;</span>
			<span class="kw4">string</span> downloadedFileName <span class="sy0">=</span> settings<span class="br0">&#91;</span><span class="nu0">6</span><span class="br0">&#93;</span><span class="sy0">;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;URL: &quot;</span> <span class="sy0">+</span> url <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;File name on victim's machine: &quot;</span> <span class="sy0">+</span> downloadedFileName <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
		<span class="br0">&#125;</span>
&nbsp;
		<span class="co1">//Gets the anti-virtualisation detection setting</span>
		<span class="kw4">int</span> shouldDetectVirtualEnvironments <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">7</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="co1">//Prints the setting</span>
		output <span class="sy0">+=</span> <span class="st0">&quot;Exits when in a virtual environment: &quot;</span> <span class="sy0">+</span> shouldDetectVirtualEnvironments <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
		<span class="co1">//Gets the anti-sandbox setting</span>
		<span class="kw4">int</span> shouldDetectSandboxes <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">8</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="co1">//Prints the setting</span>
		output <span class="sy0">+=</span> <span class="st0">&quot;Exits when in a sandboxes: &quot;</span> <span class="sy0">+</span> shouldDetectSandboxes <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
		<span class="co1">//Gets the messabox display setting</span>
		<span class="kw4">int</span> shouldDisplayMessageBox <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">29</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="co1">//Prints the setting's value</span>
		output <span class="sy0">+=</span> <span class="st0">&quot;Displays messagebox: &quot;</span> <span class="sy0">+</span> shouldDisplayMessageBox <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
		<span class="co1">//If the setting is enabled, all details are printed</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>shouldDisplayMessageBox <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			<span class="kw4">string</span> messageBoxTitle <span class="sy0">=</span> settings<span class="br0">&#91;</span><span class="nu0">30</span><span class="br0">&#93;</span><span class="sy0">;</span>
			<span class="kw4">string</span> messageBoxText <span class="sy0">=</span> settings<span class="br0">&#91;</span><span class="nu0">31</span><span class="br0">&#93;</span><span class="sy0">;</span>
			<span class="kw4">int</span> messageBoxButtonsStyle <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">32</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
			<span class="kw4">int</span> messageBoxIconStyle <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">33</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\t</span>Title: &quot;</span> <span class="sy0">+</span> messageBoxTitle <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\t</span>Text: &quot;</span> <span class="sy0">+</span> messageBoxText <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\t</span>Buttons style: &quot;</span> <span class="sy0">+</span> messageBoxButtonsStyle <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\t</span>Icon style: &quot;</span> <span class="sy0">+</span> messageBoxIconStyle <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
		<span class="br0">&#125;</span>
&nbsp;
		<span class="co1">//Get the sleep setting</span>
		<span class="kw4">int</span> sleepTime <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">34</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="co1">//Print the setting</span>
		output <span class="sy0">+=</span> <span class="st0">&quot;Uses sleep to evade detection: &quot;</span> <span class="sy0">+</span> sleepTime <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
		<span class="co1">//If the setting is enabled, the sleep duration is also printed</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>sleepTime <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			<span class="kw4">int</span> sleepDuration <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">35</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
			output <span class="sy0">+=</span> <span class="st0">&quot;Sleeps for &quot;</span> <span class="sy0">+</span> sleepDuration <span class="sy0">+</span> <span class="st0">&quot; seconds<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
		<span class="br0">&#125;</span>
		<span class="co1">//Add a newline for readability</span>
		output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
		Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span>output<span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div></div></div></div></div></div>


<h3>Running the extractor</h3>
<p>Upon putting all the pieces together, one can run the program to iterate all files within a folder. In this test, the files were located at <em>C:\</em>. The output of the extractor for several files is given below.</p>


<div class="wp-geshi-highlight-wrap5"><div class="wp-geshi-highlight-wrap4"><div class="wp-geshi-highlight-wrap3"><div class="wp-geshi-highlight-wrap2"><div class="wp-geshi-highlight-wrap"><div class="wp-geshi-highlight"><div class="xml"><pre class="de1">Parsing C:\01a083f468e17d5da38d15907e26a71ce4ec6ee575aa5069e090e3d325f855ce
Wrote payload to disk as C:\01a083f468e17d5da38d15907e26a71ce4ec6ee575aa5069e090e3d325f855ce_extracted
Payload size: 150016 bytes
Payload launch method: process hollowing into MSBuild.exe
Sets a scheduled task: 0
Executes remote payload: 0
Exits when in a virtual environment: 0
Exits when in a sandboxes: 0
Displays messagebox: 0
Uses sleep to evade detection: 0
&nbsp;
&nbsp;
Parsing C:\03c27b0f45e222123d76ed5a54538bb27ae2739644567985c8f52216b783116d
Wrote payload to disk as C:\03c27b0f45e222123d76ed5a54538bb27ae2739644567985c8f52216b783116d_extracted
Payload size: 774144 bytes
Payload launch method: process hollowing into the loader's process
Sets a scheduled task: 1
Executes remote payload: 0
Exits when in a virtual environment: 1
Exits when in a sandboxes: 1
Displays messagebox: 0
Uses sleep to evade detection: 0
&nbsp;
&nbsp;
Parsing C:\03cb9a030d70871b55b2b60be423496a52d536dbd07a94b5597d7395cd0ec130
Wrote payload to disk as C:\03cb9a030d70871b55b2b60be423496a52d536dbd07a94b5597d7395cd0ec130_extracted
Payload size: 126976 bytes
Payload launch method: process hollowing into vbc.exe
Sets a scheduled task: 1
Executes remote payload: 0
Exits when in a virtual environment: 0
Exits when in a sandboxes: 0
Displays messagebox: 0
Uses sleep to evade detection: 1
Sleeps for 10 seconds</pre></div></div></div></div></div></div></div>


<p><a name ="conclusion"></a></p>
<h2><a href="#conclusion">Conclusion</a></h2>
<p>Based on the analysis and the usage of reflection within the Dot Net framework, it is possible to extract the required data from a given ReZer0 loader without executing it. Changing the encryption (and therefore the decryption) routine does not make a difference in this scenario, as the fields are already assigned a value once the file is loaded, effectively bypassing the complete encryption module of the loader.</p>
<hr />
<p>To contact me, you can e-mail me at [info][at][maxkersten][dot][nl], or DM me on Twitter <a href="https://twitter.com/Libranalysis">@Libranalysis</a>.</p>
<hr />
<p><a name ="extractor-code"></a></p>
<h2><a href="#extractor-code">Extractor code</a></h2>
<p>The complete code for the extractor is given below. Keep the aforementioned <em>App.config</em> changes in mind, and import the Visual Basic reference correctly in order to make the code work.</p>


<div class="wp-geshi-highlight-wrap5"><div class="wp-geshi-highlight-wrap4"><div class="wp-geshi-highlight-wrap3"><div class="wp-geshi-highlight-wrap2"><div class="wp-geshi-highlight-wrap"><div class="wp-geshi-highlight"><div class="csharp"><pre class="de1"><span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.IO</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Reflection</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">Microsoft.VisualBasic.CompilerServices</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> ReZer0_extractor
<span class="br0">&#123;</span>
    <span class="co1">/// &lt;summary&gt;</span>
    <span class="co1">/// ReZer0 payload and settings extractor by Max 'Libra' Kersten (@Libranalysis on Twitter, https://maxkersten.nl)</span>
    <span class="co1">/// Licensed under GPLv3 (https://www.gnu.org/licenses/gpl-3.0.en.html)</span>
    <span class="co1">/// &lt;/summary&gt;</span>
    <span class="kw4">class</span> Program
    <span class="br0">&#123;</span>
        <span class="co1">/// &lt;summary&gt;</span>
        <span class="co1">/// Extracts the payload from the loader to a file with the same name with &quot;_extracted&quot; appended to it.</span>
        <span class="co1">/// The config of the loader is printed to the console.</span>
        <span class="co1">/// &lt;/summary&gt;</span>
        <span class="co1">/// &lt;param name=&quot;file&quot;&gt;&lt;/param&gt;</span>
        <span class="kw1">static</span> <span class="kw4">void</span> HandleFile<span class="br0">&#40;</span><span class="kw4">string</span> file<span class="br0">&#41;</span>
        <span class="br0">&#123;</span>
            <span class="co1">//Print the file path to indicate which file is being processed</span>
            Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span><span class="st_h">@&quot;Parsing &quot;</span> <span class="sy0">+</span> file<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
            <span class="co1">//Load the ReZer0 loader file</span>
            Assembly assembly <span class="sy0">=</span> Assembly<span class="sy0">.</span><span class="me1">LoadFile</span><span class="br0">&#40;</span>file<span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="co1">//Loop over all classes</span>
            <span class="kw1">foreach</span> <span class="br0">&#40;</span>Type type <span class="kw1">in</span> assembly<span class="sy0">.</span><span class="me1">GetTypes</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
            <span class="br0">&#123;</span>
                <span class="co1">//Get all nonpublic static fields from each class</span>
                FieldInfo<span class="br0">&#91;</span><span class="br0">&#93;</span> fields <span class="sy0">=</span> type<span class="sy0">.</span><span class="me1">GetFields</span><span class="br0">&#40;</span>BindingFlags<span class="sy0">.</span><span class="me1">NonPublic</span> <span class="sy0">|</span> BindingFlags<span class="sy0">.</span><span class="kw1">Static</span><span class="br0">&#41;</span><span class="sy0">;</span>
                <span class="co1">//Loop over all fields</span>
                <span class="kw1">foreach</span> <span class="br0">&#40;</span>FieldInfo fieldInfo <span class="kw1">in</span> fields<span class="br0">&#41;</span>
                <span class="br0">&#123;</span>
                    <span class="co1">//Get the value of each field, as the name is randomised for the loader</span>
                    <span class="kw4">object</span> <span class="kw1">value</span> <span class="sy0">=</span> fieldInfo<span class="sy0">.</span><span class="me1">GetValue</span><span class="br0">&#40;</span><span class="kw1">null</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//If the type of the current field's value is a byte array, its the payload, as there is only 1 embedded in the class</span>
                    <span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw1">value</span> <span class="kw3">is</span> <span class="kw4">Byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
                    <span class="br0">&#123;</span>
                        <span class="co1">//Create a local variable to more easily handle it</span>
                        <span class="kw4">byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span> payload <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw4">byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="kw1">value</span><span class="sy0">;</span>
                        <span class="co1">//Verify that the byte array is a PE file</span>
                        <span class="kw1">if</span> <span class="br0">&#40;</span>payload<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">==</span> 0x4d <span class="sy0">&amp;&amp;</span> payload<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">==</span> 0x5a<span class="br0">&#41;</span>
                        <span class="br0">&#123;</span>
                            <span class="co1">//Write the payload to the disk</span>
                            File<span class="sy0">.</span><span class="me1">WriteAllBytes</span><span class="br0">&#40;</span>file <span class="sy0">+</span> <span class="st0">&quot;_extracted&quot;</span>, payload<span class="br0">&#41;</span><span class="sy0">;</span>
                            Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span><span class="st0">&quot;Wrote payload to disk as &quot;</span> <span class="sy0">+</span> file <span class="sy0">+</span> <span class="st0">&quot;_extracted&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span><span class="st0">&quot;Payload size: &quot;</span> <span class="sy0">+</span> payload<span class="sy0">.</span><span class="me1">Length</span> <span class="sy0">+</span> <span class="st0">&quot; bytes&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#125;</span>
                    <span class="br0">&#125;</span>
                    <span class="co1">//If the value type is a string array, it means that the raw configuration values of the loader</span>
                    <span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw1">value</span> <span class="kw3">is</span> <span class="kw4">String</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
                    <span class="br0">&#123;</span>
                        <span class="co1">//Create a local variable based on the value, casting the type safely due to the previous if-statement</span>
                        <span class="kw4">String</span><span class="br0">&#91;</span><span class="br0">&#93;</span> settings <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw4">String</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="kw1">value</span><span class="sy0">;</span>
                        <span class="co1">//If the length of the string array is equal to 37, it is safe to assume that the configuration array has been found</span>
                        <span class="co1">//The length is based on prior research</span>
                        <span class="kw1">if</span> <span class="br0">&#40;</span>settings<span class="sy0">.</span><span class="me1">Length</span> <span class="sy0">==</span> <span class="nu0">37</span><span class="br0">&#41;</span>
                        <span class="br0">&#123;</span>
                            <span class="co1">//Create and instantiate the output string</span>
                            <span class="kw4">String</span> output <span class="sy0">=</span> <span class="st0">&quot;Payload launch method: &quot;</span><span class="sy0">;</span>
&nbsp;
                            <span class="co1">//Get the launch enum value</span>
                            <span class="kw4">int</span> launchEnum <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="co1">//If the launch enum value is equal to 4, the payload is launched directly</span>
                            <span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">4</span><span class="br0">&#41;</span>
                            <span class="br0">&#123;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;launch from loader's memory&quot;</span><span class="sy0">;</span>
                            <span class="br0">&#125;</span>
                            <span class="co1">//In other cases, it executes the payload via a hollowed process</span>
                            <span class="kw1">else</span>
                            <span class="br0">&#123;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;process hollowing into &quot;</span><span class="sy0">;</span>
                                <span class="co1">//Depending on the value, the loader uses a specific process</span>
                                <span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span>
                                <span class="br0">&#123;</span>
                                    output <span class="sy0">+=</span> <span class="st0">&quot;the loader's process&quot;</span><span class="sy0">;</span>
                                <span class="br0">&#125;</span>
                                <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span>
                                <span class="br0">&#123;</span>
                                    output <span class="sy0">+=</span> <span class="st0">&quot;MSBuild.exe&quot;</span><span class="sy0">;</span>
                                <span class="br0">&#125;</span>
                                <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">2</span><span class="br0">&#41;</span>
                                <span class="br0">&#123;</span>
                                    output <span class="sy0">+=</span> <span class="st0">&quot;vbc.exe&quot;</span><span class="sy0">;</span>
                                <span class="br0">&#125;</span>
                                <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>launchEnum <span class="sy0">==</span> <span class="nu0">3</span><span class="br0">&#41;</span>
                                <span class="br0">&#123;</span>
                                    output <span class="sy0">+=</span> <span class="st0">&quot;RegSvcs.exe&quot;</span><span class="sy0">;</span>
                                <span class="br0">&#125;</span>
                            <span class="br0">&#125;</span>
                            <span class="co1">//Add a newline for readability</span>
                            output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
                            <span class="co1">//Get the value of the scheduled task setting</span>
                            <span class="kw4">int</span> shouldSetScheduledTask <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="co1">//Print the scheduled task value</span>
                            output <span class="sy0">+=</span> <span class="st0">&quot;Sets a scheduled task: &quot;</span> <span class="sy0">+</span> shouldSetScheduledTask <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
                            <span class="co1">//Get the remote payload execution setting's value</span>
                            <span class="kw4">int</span> shouldExecuteRemotePayload <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">4</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="co1">//Display the value</span>
                            output <span class="sy0">+=</span> <span class="st0">&quot;Executes remote payload: &quot;</span> <span class="sy0">+</span> shouldExecuteRemotePayload <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                            <span class="co1">//if the setting is enabled, the specific settings are read and printed</span>
                            <span class="kw1">if</span> <span class="br0">&#40;</span>shouldExecuteRemotePayload <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span>
                            <span class="br0">&#123;</span>
                                <span class="kw4">string</span> url <span class="sy0">=</span> settings<span class="br0">&#91;</span><span class="nu0">5</span><span class="br0">&#93;</span><span class="sy0">;</span>
                                <span class="kw4">string</span> downloadedFileName <span class="sy0">=</span> settings<span class="br0">&#91;</span><span class="nu0">6</span><span class="br0">&#93;</span><span class="sy0">;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;URL: &quot;</span> <span class="sy0">+</span> url <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;File name on victim's machine: &quot;</span> <span class="sy0">+</span> downloadedFileName <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                            <span class="br0">&#125;</span>
&nbsp;
                            <span class="co1">//Gets the anti-virtualisation detection setting</span>
                            <span class="kw4">int</span> shouldDetectVirtualEnvironments <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">7</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="co1">//Prints the setting</span>
                            output <span class="sy0">+=</span> <span class="st0">&quot;Exits when in a virtual environment: &quot;</span> <span class="sy0">+</span> shouldDetectVirtualEnvironments <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
                            <span class="co1">//Gets the anti-sandbox setting</span>
                            <span class="kw4">int</span> shouldDetectSandboxes <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">8</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="co1">//Prints the setting</span>
                            output <span class="sy0">+=</span> <span class="st0">&quot;Exits when in a sandboxes: &quot;</span> <span class="sy0">+</span> shouldDetectSandboxes <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
&nbsp;
                            <span class="co1">//Gets the messabox display setting</span>
                            <span class="kw4">int</span> shouldDisplayMessageBox <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">29</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="co1">//Prints the setting's value</span>
                            output <span class="sy0">+=</span> <span class="st0">&quot;Displays messagebox: &quot;</span> <span class="sy0">+</span> shouldDisplayMessageBox <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                            <span class="co1">//If the setting is enabled, all details are printed</span>
                            <span class="kw1">if</span> <span class="br0">&#40;</span>shouldDisplayMessageBox <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span>
                            <span class="br0">&#123;</span>
                                <span class="kw4">string</span> messageBoxTitle <span class="sy0">=</span> settings<span class="br0">&#91;</span><span class="nu0">30</span><span class="br0">&#93;</span><span class="sy0">;</span>
                                <span class="kw4">string</span> messageBoxText <span class="sy0">=</span> settings<span class="br0">&#91;</span><span class="nu0">31</span><span class="br0">&#93;</span><span class="sy0">;</span>
                                <span class="kw4">int</span> messageBoxButtonsStyle <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">32</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                                <span class="kw4">int</span> messageBoxIconStyle <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">33</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\t</span>Title: &quot;</span> <span class="sy0">+</span> messageBoxTitle <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\t</span>Text: &quot;</span> <span class="sy0">+</span> messageBoxText <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\t</span>Buttons style: &quot;</span> <span class="sy0">+</span> messageBoxButtonsStyle <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\t</span>Icon style: &quot;</span> <span class="sy0">+</span> messageBoxIconStyle <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                            <span class="br0">&#125;</span>
&nbsp;
                            <span class="co1">//Get the sleep setting</span>
                            <span class="kw4">int</span> sleepTime <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">34</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="co1">//Print the setting</span>
                            output <span class="sy0">+=</span> <span class="st0">&quot;Uses sleep to evade detection: &quot;</span> <span class="sy0">+</span> sleepTime <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                            <span class="co1">//If the setting is enabled, the sleep duration is also printed</span>
                            <span class="kw1">if</span> <span class="br0">&#40;</span>sleepTime <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span>
                            <span class="br0">&#123;</span>
                                <span class="kw4">int</span> sleepDuration <span class="sy0">=</span> Conversions<span class="sy0">.</span><span class="me1">ToInteger</span><span class="br0">&#40;</span>settings<span class="br0">&#91;</span><span class="nu0">35</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                                output <span class="sy0">+=</span> <span class="st0">&quot;Sleeps for &quot;</span> <span class="sy0">+</span> sleepDuration <span class="sy0">+</span> <span class="st0">&quot; seconds<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                            <span class="br0">&#125;</span>
                            <span class="co1">//Add a newline for readability</span>
                            output <span class="sy0">+=</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="sy0">;</span>
                            Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span>output<span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#125;</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span>
            <span class="br0">&#125;</span>
        <span class="br0">&#125;</span>
&nbsp;
        <span class="co1">/// &lt;summary&gt;</span>
        <span class="co1">/// ReZer0 payload and settings extractor by Max 'Libra' Kersten (@Libranalysis on Twitter, https://maxkersten.nl)</span>
        <span class="co1">/// Licensed under GPLv3 (https://www.gnu.org/licenses/gpl-3.0.en.html)</span>
        <span class="co1">/// &lt;/summary&gt;</span>
        <span class="kw1">static</span> <span class="kw4">void</span> Main<span class="br0">&#40;</span><span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> args<span class="br0">&#41;</span>
        <span class="br0">&#123;</span>
            <span class="co1">//Get all files in the given folder</span>
            <span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> files <span class="sy0">=</span> Directory<span class="sy0">.</span><span class="me1">GetFiles</span><span class="br0">&#40;</span>args<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="co1">//Loop through all files in the given folder</span>
            <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="kw4">string</span> file <span class="kw1">in</span> files<span class="br0">&#41;</span>
            <span class="br0">&#123;</span>
                <span class="co1">//Handle each file</span>
                HandleFile<span class="br0">&#40;</span>file<span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="br0">&#125;</span>
            <span class="co1">//Keep the window open once all files have been iterated through</span>
            Console<span class="sy0">.</span><span class="me1">ReadKey</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="br0">&#125;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div></div></div></div></div></div>


					</div><!-- .entry-content -->
			</div><!-- .inside-article -->
</article><!-- #post-## -->

				
								</main><!-- #main -->
	</div><!-- #primary -->

<div id="right-sidebar" itemtype="http://schema.org/WPSideBar" itemscope="itemscope" role="complementary" class="widget-area grid-25 tablet-grid-25 grid-parent sidebar">
	<div class="inside-right-sidebar">
				
		<aside id="recent-posts-2" class="widget inner-padding widget_recent_entries">
		<h4 class="widget-title">Recent Posts</h4>
		<ul>
											<li>
					<a href="https://maxkersten.nl/2024/11/27/ghidra-tip-0x08-scripting-with-microservices/">Ghidra Tip 0x08: Scripting with microservices</a>
									</li>
											<li>
					<a href="https://maxkersten.nl/2024/10/31/ghidra-tip-0x07-iterating-over-all-strings-in-a-program/">Ghidra Tip 0x07: Iterating over all strings in a Program</a>
									</li>
											<li>
					<a href="https://maxkersten.nl/2024/09/28/ghidra-tip-0x06-domainfiles-in-projects/">Ghidra Tip 0x06: DomainFiles in Projects</a>
									</li>
											<li>
					<a href="https://maxkersten.nl/2024/08/18/my-impression-of-tdi-2024-blackhat-usa-2024-and-defcon-32/">My impression of TDI 2024, BlackHat USA 2024 and DEFCON 32</a>
									</li>
											<li>
					<a href="https://maxkersten.nl/2024/06/30/ghidra-tip-0x05-headless-execution/">Ghidra Tip 0x05: Headless execution</a>
									</li>
					</ul>

		</aside><aside id="archives-2" class="widget inner-padding widget_archive"><h4 class="widget-title">Archives</h4>
			<ul>
					<li><a href='https://maxkersten.nl/2024/11/'>November 2024</a></li>
	<li><a href='https://maxkersten.nl/2024/10/'>October 2024</a></li>
	<li><a href='https://maxkersten.nl/2024/09/'>September 2024</a></li>
	<li><a href='https://maxkersten.nl/2024/08/'>August 2024</a></li>
	<li><a href='https://maxkersten.nl/2024/06/'>June 2024</a></li>
	<li><a href='https://maxkersten.nl/2024/05/'>May 2024</a></li>
	<li><a href='https://maxkersten.nl/2024/04/'>April 2024</a></li>
	<li><a href='https://maxkersten.nl/2024/03/'>March 2024</a></li>
	<li><a href='https://maxkersten.nl/2024/02/'>February 2024</a></li>
	<li><a href='https://maxkersten.nl/2023/08/'>August 2023</a></li>
	<li><a href='https://maxkersten.nl/2023/05/'>May 2023</a></li>
	<li><a href='https://maxkersten.nl/2023/04/'>April 2023</a></li>
	<li><a href='https://maxkersten.nl/2023/03/'>March 2023</a></li>
	<li><a href='https://maxkersten.nl/2023/02/'>February 2023</a></li>
	<li><a href='https://maxkersten.nl/2023/01/'>January 2023</a></li>
	<li><a href='https://maxkersten.nl/2022/12/'>December 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/11/'>November 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/10/'>October 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/09/'>September 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/08/'>August 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/07/'>July 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/06/'>June 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/05/'>May 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/04/'>April 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/03/'>March 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/02/'>February 2022</a></li>
	<li><a href='https://maxkersten.nl/2022/01/'>January 2022</a></li>
	<li><a href='https://maxkersten.nl/2021/12/'>December 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/11/'>November 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/10/'>October 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/09/'>September 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/08/'>August 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/07/'>July 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/06/'>June 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/05/'>May 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/04/'>April 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/03/'>March 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/02/'>February 2021</a></li>
	<li><a href='https://maxkersten.nl/2021/01/'>January 2021</a></li>
	<li><a href='https://maxkersten.nl/2020/12/'>December 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/11/'>November 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/10/'>October 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/09/'>September 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/08/'>August 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/07/'>July 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/06/'>June 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/05/'>May 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/04/'>April 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/03/'>March 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/02/'>February 2020</a></li>
	<li><a href='https://maxkersten.nl/2020/01/'>January 2020</a></li>
	<li><a href='https://maxkersten.nl/2019/12/'>December 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/11/'>November 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/10/'>October 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/09/'>September 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/08/'>August 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/07/'>July 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/06/'>June 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/05/'>May 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/04/'>April 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/03/'>March 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/02/'>February 2019</a></li>
	<li><a href='https://maxkersten.nl/2019/01/'>January 2019</a></li>
	<li><a href='https://maxkersten.nl/2018/12/'>December 2018</a></li>
	<li><a href='https://maxkersten.nl/2018/11/'>November 2018</a></li>
	<li><a href='https://maxkersten.nl/2018/10/'>October 2018</a></li>
	<li><a href='https://maxkersten.nl/2018/09/'>September 2018</a></li>
	<li><a href='https://maxkersten.nl/2018/08/'>August 2018</a></li>
	<li><a href='https://maxkersten.nl/2018/07/'>July 2018</a></li>
	<li><a href='https://maxkersten.nl/2018/06/'>June 2018</a></li>
	<li><a href='https://maxkersten.nl/2018/01/'>January 2018</a></li>
	<li><a href='https://maxkersten.nl/2017/10/'>October 2017</a></li>
	<li><a href='https://maxkersten.nl/2017/07/'>July 2017</a></li>
	<li><a href='https://maxkersten.nl/2017/06/'>June 2017</a></li>
	<li><a href='https://maxkersten.nl/2017/05/'>May 2017</a></li>
	<li><a href='https://maxkersten.nl/2017/04/'>April 2017</a></li>
			</ul>

			</aside><aside id="categories-2" class="widget inner-padding widget_categories"><h4 class="widget-title">Categories</h4>
			<ul>
					<li class="cat-item cat-item-10"><a href="https://maxkersten.nl/category/androidprojectcreator/">AndroidProjectCreator</a>
</li>
	<li class="cat-item cat-item-16"><a href="https://maxkersten.nl/category/api-clients/">API Clients</a>
</li>
	<li class="cat-item cat-item-9"><a href="https://maxkersten.nl/category/binary-analysis-course/">Binary Analysis Course</a>
</li>
	<li class="cat-item cat-item-4"><a href="https://maxkersten.nl/category/capricorn/">Capricorn</a>
</li>
	<li class="cat-item cat-item-18"><a href="https://maxkersten.nl/category/conferences/">Conferences</a>
</li>
	<li class="cat-item cat-item-3"><a href="https://maxkersten.nl/category/ethics/">Ethics</a>
</li>
	<li class="cat-item cat-item-2"><a href="https://maxkersten.nl/category/gemini/">Gemini</a>
</li>
	<li class="cat-item cat-item-6"><a href="https://maxkersten.nl/category/lectures/">Lectures</a>
</li>
	<li class="cat-item cat-item-19"><a href="https://maxkersten.nl/category/libras-ghidra-library/">Libra&#039;s Ghidra Library</a>
</li>
	<li class="cat-item cat-item-17"><a href="https://maxkersten.nl/category/m3/">m3</a>
</li>
	<li class="cat-item cat-item-15"><a href="https://maxkersten.nl/category/magecart/">MageCart</a>
</li>
	<li class="cat-item cat-item-13"><a href="https://maxkersten.nl/category/malpull/">MalPull</a>
</li>
	<li class="cat-item cat-item-8"><a href="https://maxkersten.nl/category/malware-analysis/">Malware Analysis</a>
</li>
	<li class="cat-item cat-item-14"><a href="https://maxkersten.nl/category/malwaretheflag/">MalwareTheFlag</a>
</li>
	<li class="cat-item cat-item-11"><a href="https://maxkersten.nl/category/responsible-disclosure/">Responsible Disclosure</a>
</li>
	<li class="cat-item cat-item-12"><a href="https://maxkersten.nl/category/reviews/">Reviews</a>
</li>
	<li class="cat-item cat-item-1"><a href="https://maxkersten.nl/category/uncategorized/">Uncategorized</a>
</li>
	<li class="cat-item cat-item-5"><a href="https://maxkersten.nl/category/web-hacking/">Web hacking</a>
</li>
	<li class="cat-item cat-item-7"><a href="https://maxkersten.nl/category/whitepapers/">Whitepapers</a>
</li>
			</ul>

			</aside>			</div><!-- .inside-right-sidebar -->
</div><!-- #secondary -->
	</div><!-- #content -->
</div><!-- #page -->
<div class="site-footer  ">
		<footer class="site-info" itemtype="http://schema.org/WPFooter" itemscope="itemscope">
		<div class="inside-site-info grid-container grid-parent">
						<div class="copyright-bar">
				<span class="copyright">&copy; 2024</span> &bull; <a href="https://generatepress.com" target="_blank" itemprop="url">GeneratePress</a>			</div>
		</div>
	</footer><!-- .site-info -->
	</div><!-- .site-footer -->

<a title="Scroll back to top" rel="nofollow" href="#" class="generate-back-to-top" style="opacity:0;visibility:hidden;" data-scroll-speed="400" data-start-scroll="300">
			<i class="fa fa-angle-up" aria-hidden="true"></i>
			<span class="screen-reader-text">Scroll back to top</span>
		</a><script type="text/javascript" src="https://maxkersten.nl/wp-content/themes/generatepress/js/navigation.min.js?ver=1.3.46" id="generate-navigation-js"></script>
<script type="text/javascript" src="https://maxkersten.nl/wp-content/themes/generatepress/js/dropdown.min.js?ver=1.3.46" id="generate-dropdown-js"></script>
<script type="text/javascript" src="https://maxkersten.nl/wp-content/themes/generatepress/js/back-to-top.min.js?ver=1.3.46" id="generate-back-to-top-js"></script>
<!--[if lt IE 9]>
<script type="text/javascript" src="https://maxkersten.nl/wp-content/themes/generatepress/js/html5shiv.min.js?ver=1.3.46" id="generate-html5-js"></script>
<![endif]-->

</body>
</html>