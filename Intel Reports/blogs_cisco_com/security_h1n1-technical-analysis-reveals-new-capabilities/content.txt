<!doctype html>
<html lang="en-US" class="no-touch js ">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<!--<link rel="profile" href="https://gmpg.org/xfn/11"> -->
	
	<meta name="blogsPostDate" content="2016-09-13 06:00:19"/><meta name="blogsPostTags" content="amp-threat-grid,h1n1-malware,malware-analysis"/><meta name="blogsPostCat" content="Security"/><meta name="article:category" content="Security"/>
<meta name="wordCount" content="1753" />
<meta name="readTime" content="420" />
	<!-- loading cdc-template web component scripts -->
	<script type='text/javascript' src="//www.cisco.com/etc/designs/cdc/clientlibs/responsive/js/web-component-foundation.min.js"></script>
	<script>
	/**
	* Invokes appropriate private methods based on input parameters based on needs of web component architecture
	* @param {Array} wcAssets array of strings that correlate to the names of web components or array of objects containing asset name and corresponding locale/path
	* @param {String} localePath specifies where web component should be retrieved from (expected format: en/us or en_au for all other locales); false if wcAssets, is array of objects
	* @param {Boolean} isWem [Optional] specifies if assets are being loaded on a WEM environment
	* @param {Boolean} needTargetter [Optional] specifies need for targetter bundle to be loaded (generally needed on external sites)
	* @param {Boolean} isRelative [Optional] specifies if asset path(s) should be relative
	* @param {String} env [Optional] specifies enviornment to append to relative path (should not be used with isRelative)
	* @param {Boolean} hasEnvOverride [Optional] specifies if environment needs to be overridden (should be used with env)
	*/
	cdc.wcAncillaryAssetAllocator.init(['cdc-template-blogs'], 'en/us', false, true, false, 'prod');
	if (window.cdc === undefined) { window.cdc = {}; }
	if (cdc.cdcMasthead === undefined) { cdc.cdcMasthead = {}; }
	if (cdc.cdcMasthead.additional === undefined) { cdc.cdcMasthead.additional = {}; }
	cdc.cdcMasthead.additional.env = 'prod';
	</script>

		<script type="text/javascript">

	if ( typeof cdc === "undefined")cdc = {};
	if ( typeof cdc.util === "undefined")cdc.util = {};
	cdc.util.ensureNamespace = function (namespaceStr) {
  		if (!namespaceStr) { return;
    		var parts = namespaceStr.split(".");
    		var o = window;
    		var i;
    		var aPart;
    		for (i = 0; i < parts.length; i++)
      			aPart = parts[i];
     		 	if (typeof (o[aPart]) != "object"){
        			o[aPart] = {};
				}
        		o = o[aPart];
  		}
	};

	cdc.dm = {};
	cdc.dm.util = {};
	cdc.dm.util.ensureNamespace = cdc.util.ensureNamespace;
	</script>

	<meta name="author" content="Josh Reynolds" /><meta name="blogsPostAuthor" content="Josh Reynolds" /><meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />
<script type="text/javascript" src="//www.cisco.com/c/dam/cdc/t/ctm-core.js"></script>


	<!-- This site is optimized with the Yoast SEO Premium plugin v19.3 (Yoast SEO v19.11) - https://yoast.com/wordpress/plugins/seo/ -->
	<title>H1N1: Technical analysis reveals new capabilities - Cisco Blogs</title>
	<meta name="description" content="This blog is the first in a 3 part series that will provide an in-depth technical analysis on the H1N1 malware. I’ll be looking at how H1N1 has evolved," />
	<link rel="canonical" href="https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities" />
	<meta property="og:locale" content="en_US" />
	<meta property="og:type" content="article" />
	<meta property="og:title" content="H1N1: Technical analysis reveals new capabilities" />
	<meta property="og:description" content="This blog is the first in a 3 part series that will provide an in-depth technical analysis on the H1N1 malware. I’ll be looking at how H1N1 has evolved," />
	<meta property="og:url" content="https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities" />
	<meta property="og:site_name" content="Cisco Blogs" />
	<meta property="article:published_time" content="2016-09-13T13:00:19+00:00" />
	<meta property="article:modified_time" content="2017-05-30T20:00:24+00:00" />
	<meta property="og:image" content="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack.png" />
	<meta property="og:image:width" content="1201" />
	<meta property="og:image:height" content="384" />
	<meta property="og:image:type" content="image/png" />
	<meta name="author" content="Josh Reynolds" />
	<meta name="twitter:card" content="summary_large_image" />
	<meta name="twitter:label1" content="Written by" />
	<meta name="twitter:data1" content="Josh Reynolds" />
	<meta name="twitter:label2" content="Est. reading time" />
	<meta name="twitter:data2" content="10 minutes" />
	<script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"Article","@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#article","isPartOf":{"@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities"},"author":{"name":"Josh Reynolds","@id":"https://blogs.cisco.com/#/schema/person/41928f06f8f4d998fa785c3e1ec18fe2"},"headline":"H1N1: Technical analysis reveals new capabilities","datePublished":"2016-09-13T13:00:19+00:00","dateModified":"2017-05-30T20:00:24+00:00","mainEntityOfPage":{"@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities"},"wordCount":1933,"publisher":{"@id":"https://blogs.cisco.com/#organization"},"image":{"@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#primaryimage"},"thumbnailUrl":"https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack.png","keywords":["AMP Threat Grid","H1N1 malware","Malware Analysis"],"articleSection":["Security"],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities","url":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities","name":"H1N1: Technical analysis reveals new capabilities - Cisco Blogs","isPartOf":{"@id":"https://blogs.cisco.com/#website"},"primaryImageOfPage":{"@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#primaryimage"},"image":{"@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#primaryimage"},"thumbnailUrl":"https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack.png","datePublished":"2016-09-13T13:00:19+00:00","dateModified":"2017-05-30T20:00:24+00:00","description":"This blog is the first in a 3 part series that will provide an in-depth technical analysis on the H1N1 malware. I’ll be looking at how H1N1 has evolved,","breadcrumb":{"@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#primaryimage","url":"https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack.png","contentUrl":"https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack.png","width":1201,"height":384},{"@type":"BreadcrumbList","@id":"https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Cisco Blogs","item":"https://blogs.cisco.com/"},{"@type":"ListItem","position":2,"name":"Security","item":"https://blogs.cisco.com/security"},{"@type":"ListItem","position":3,"name":"H1N1: Technical analysis reveals new capabilities"}]},{"@type":"WebSite","@id":"https://blogs.cisco.com/#website","url":"https://blogs.cisco.com/","name":"Cisco Blogs","description":"","publisher":{"@id":"https://blogs.cisco.com/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://blogs.cisco.com/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Organization","@id":"https://blogs.cisco.com/#organization","name":"Cisco Systems","url":"https://blogs.cisco.com/","logo":{"@type":"ImageObject","inLanguage":"en-US","@id":"https://blogs.cisco.com/#/schema/logo/image/","url":"https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2020/10/Cisco_Logo_no_TM_Sky_Blue-RGB.png","contentUrl":"https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2020/10/Cisco_Logo_no_TM_Sky_Blue-RGB.png","width":912,"height":482,"caption":"Cisco Systems"},"image":{"@id":"https://blogs.cisco.com/#/schema/logo/image/"}},{"@type":"Person","@id":"https://blogs.cisco.com/#/schema/person/41928f06f8f4d998fa785c3e1ec18fe2","name":"Josh Reynolds","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https://blogs.cisco.com/#/schema/person/image/","url":"https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2022/07/1470941003-bpfull.jpg","contentUrl":"https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2022/07/1470941003-bpfull.jpg","caption":"Josh Reynolds"},"description":"Joshua Reynolds is a part of the Research & Efficacy Team at Cisco Systems that assists in increasing the efficacy of the AMP for Endpoints and AMP ThreatGrid product lines through a number of development efforts. Joshua joined Cisco through the Sourcefire, Inc. acquisition by Cisco Systems where he performed quality assurance for the AMP for Endpoints product line. Prior to joining Sourcefire, Joshua was a System Administrator at the Calgary based consulting company Graycon Group LTD, and interned at Red Hat Asia Pacific’s Penetration Testing team while finishing his Bachelor’s degree in Information Technology at Griffith University in Australia. Joshua also holds a diploma of Information Technology from the Southern Alberta Institute of Technology where he graduated with honors.","url":"https://blogs.cisco.com/author/joshreynolds"}]}</script>
	<!-- / Yoast SEO Premium plugin. -->


<link rel='dns-prefetch' href='//www.cisco.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="Cisco Blogs &raquo; Feed" href="https://blogs.cisco.com/feed" />
<link rel="alternate" type="application/rss+xml" title="Cisco Blogs &raquo; Comments Feed" href="https://blogs.cisco.com/comments/feed" />
<link rel="alternate" type="application/rss+xml" title="Cisco Blogs &raquo; H1N1: Technical analysis reveals new capabilities Comments Feed" href="https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities/feed" />
<script type="text/javascript">
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/blogs.cisco.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.9.2"}};
/*! This file is auto-generated */
!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
</script>
<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 0.07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='wp-block-library-css'  href='https://blogs.cisco.com/wp-includes/css/dist/block-library/style.min.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp-components-css'  href='https://blogs.cisco.com/wp-includes/css/dist/components/style.min.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp-block-editor-css'  href='https://blogs.cisco.com/wp-includes/css/dist/block-editor/style.min.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp-nux-css'  href='https://blogs.cisco.com/wp-includes/css/dist/nux/style.min.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp-reusable-blocks-css'  href='https://blogs.cisco.com/wp-includes/css/dist/reusable-blocks/style.min.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp-editor-css'  href='https://blogs.cisco.com/wp-includes/css/dist/editor/style.min.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='mux_video_block_style-css'  href='https://blogs.cisco.com/wp-content/plugins/ilab-media-tools/public/blocks/mediacloud-mux.blocks.style.css' type='text/css' media='all' />
<style id='global-styles-inline-css' type='text/css'>
body{--wp--preset--color--black: #000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--cisco-midnight-blue: #0d274d;--wp--preset--color--cisco-ocean-blue: #1e4471;--wp--preset--color--cisco-sky-blue: #00bceb;--wp--preset--color--cisco-green: #6abf4b;--wp--preset--color--cisco-orange: #fbab18;--wp--preset--color--cisco-red: #e2231a;--wp--preset--color--dark-gray: #495057;--wp--preset--color--medium-gray: #9e9ea2;--wp--preset--color--light-gray: #ced4da;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
</style>
<link rel='stylesheet' id='category-css-css'  href='https://blogs.cisco.com/wp-content/plugins/cisco-category-page-enhancement/css/category-css.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='multiauthor_custom_front_style-css'  href='https://blogs.cisco.com/wp-content/plugins/cisco-multiple-authors/css/multiauthor.css?ver=1.1' type='text/css' media='all' />
<link rel='stylesheet' id='parent-style-css'  href='https://blogs.cisco.com/wp-content/themes/ciscowordpress/style.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='child-style-css'  href='https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/style.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='ciscowordpress-style-css'  href='https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/style.css?ver=5.9.2' type='text/css' media='all' />
<style id='ciscowordpress-style-inline-css' type='text/css'>
@media only screen and (min-width: 930px){
	ul#featured_categories li{
	width: calc(100%/  );
	}}
</style>
<link rel='stylesheet' id='cui-standard-css'  href='https://www.cisco.com/web/fw/cisco-ui/1.3.5/dist/css/cui-standard.min.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='style_login_widget-css'  href='https://blogs.cisco.com/wp-content/plugins/miniorange-oauth-oidc-single-sign-on/resources/css/style_login_widget.css?ver=5.9.2' type='text/css' media='all' />
<script type='text/javascript' src='https://blogs.cisco.com/wp-content/plugins/cisco-multiple-authors/js/custom-multiauthor.js?ver=5.9.2' id='multiauthor_custom_js-js'></script>
<script type='text/javascript' src='https://blogs.cisco.com/wp-content/themes/ciscowordpress/js/card-dropdown.js?ver=5.9.2' id='ciscowordpress-card-tag-dropdown-js'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://blogs.cisco.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://blogs.cisco.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.9.2" />
<link rel='shortlink' href='https://blogs.cisco.com/?p=203322' />
<link rel="alternate" type="application/json+oembed" href="https://blogs.cisco.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblogs.cisco.com%2Fsecurity%2Fh1n1-technical-analysis-reveals-new-capabilities" />
<link rel="alternate" type="text/xml+oembed" href="https://blogs.cisco.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblogs.cisco.com%2Fsecurity%2Fh1n1-technical-analysis-reveals-new-capabilities&#038;format=xml" />
<link rel="icon" href="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2024/09/cropped-Cisco-logo-thumb-sky-blue-32x32.jpg" sizes="32x32" />
<link rel="icon" href="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2024/09/cropped-Cisco-logo-thumb-sky-blue-192x192.jpg" sizes="192x192" />
<link rel="apple-touch-icon" href="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2024/09/cropped-Cisco-logo-thumb-sky-blue-180x180.jpg" />
<meta name="msapplication-TileImage" content="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2024/09/cropped-Cisco-logo-thumb-sky-blue-270x270.jpg" />
</head>
<cdc-template-micro lang="en" search-set-context="blogs">
<body class="post-template-default single single-post postid-203322 single-format-standard no-sidebar">

<div id="page" class="site">
	<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

	<header id="masthead" class="site-header">

	</header><!-- #masthead -->

	<div id="content" class="site-content">

	<div id="primary" class="content-area">
		<main id="main" class="site-main">
			<p id="breadcrumbs"><span><span><a href="https://blogs.cisco.com/">Cisco Blogs</a> / <span><a href="https://blogs.cisco.com/security">Security</a> / <span class="breadcrumb_last" aria-current="page">H1N1: Technical analysis reveals new capabilities</span></span></span></span></p>
				<div class="blog-post-header">
				</div>
<article id="post-203322" class="post-203322 post type-post status-publish format-standard has-post-thumbnail hentry category-security tag-amp-threat-grid tag-h1n1-malware tag-malware-analysis">
<div class="main-content">
	<header class="entry-header">
					<div class="entry-meta">
				September 13, 2016				<a id="post-comments" href="https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#comments">2 Comments</a>
				<hr>
			</div><!-- .entry-meta -->
			</header><!-- .entry-header -->
	<div class="blog-post-header">
		<div class="thumbnail-avatar">
			<div class="post-thumbnail" style="background-image:url(https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack.png);">				
								<img src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2022/07/1470941003-bpfull.jpg" width="102" height="102" alt="Avatar" class="avatar avatar-102 wp-user-avatar wp-user-avatar-102 photo avatar-default">
							</div>
		</div>
		<div class="blog-cat-post-author-container">
			<a href=https://blogs.cisco.com/security><h5>Security</h5></a>
			<h1 class="entry-title">H1N1: Technical analysis reveals new capabilities</h1><p class="wordcount"><span class="black">7 min read</span></p>			<p> <a href="https://blogs.cisco.com/author/joshreynolds" title="Posts by Josh Reynolds" rel="author">Josh Reynolds</a>			</p>
		</div>		
	</div> <!-- .blog-post-header -->
	<div class="entry-content">
		<p>This blog is the first in a <a href="http://blogs.cisco.com/tag/h1n1-malware">3 part series</a> that will provide an in-depth technical analysis on the H1N1 malware. I’ll be looking at how H1N1 has evolved, its obfuscation, analyzing its execution including new information stealing and user account control bypass capabilities, and finally exploring how we are both using and influencing security tools with this research.</p>
<h1>Overview</h1>
<p>Through the use of general characteristics exhibited by malware authors we are able to broadly categorize and positively identify malicious samples. These characteristics, discussed in <a href="https://blogs.cisco.com/security/the-general-behavior-of-ransomware"><em>The General Behavior of </em>Ransomware</a> are indexed in a database, which allows us to identify patterns, outliers and obtain greater visibility and insight into various threats.</p>
<h1>H1N1’s evolution: past and present</h1>
<p>These data sets provide insight into the ever-growing attack vectors that affect our customers, which include malware delivery mechanisms. In this blog series we highlight newly added functionality to a malware variant that started out as being a ‘loader’ (strictly provides capabilities of loading other more complex malware variants) known as H1N1, and has now evolved into an information stealing variant.</p>
<p>Throughout the data mining exercises conducted by my colleagues and I on the <a href="http://www.cisco.com/web/go/amptg">AMP Threat Grid</a> Research &amp; Efficacy Team (RET) we have observed a widely distributed campaign using VBA macros to infect machines with a variant of information-stealing malware. Based on the initial characteristics observed by AMP Threat Grid we believed these malicious documents were distributing a Ransomware variant; however, we later found the dropped executables to be a variant of the H1N1 loader. H1N1 is a loader malware variant that has been known to deliver Pony DLLs and Vawtrak executables to infected machines. Upon infection, H1N1 previously only provided loading and system information reporting capabilities.<sup>1,2</sup></p>
<h1>Key findings from our analysis include:</h1>
<ul>
<li>Unique obfuscation techniques</li>
<li>A novel DLL hijacking vulnerability resulting in a User Account Control bypass</li>
<li>Added information stealing capabilities</li>
<li>Self-propagation/lateral movement capabilities</li>
</ul>
<h1>Background</h1>
<p>H1N1 has added a plethora of new functionality in comparison to earlier reports. Throughout this blog series we will be analyzing the capabilities of H1N1 including: obfuscation, a User Account Control (UAC) bypass, information stealing, data exfiltration, loader/dropper, and self-propagation/lateral movement techniques used by this variant.<sup>1,2</sup></p>
<h1>Infection Vector</h1>
<p>The use of Visual Basic macros is nothing new, however, in recent months they have become one of the most popular infection vectors for all malware types, especially for Ransomware campaigns. These macros vary in sophistication from performing the download and execution of hosted binaries, to dropping the binaries themselves. In this campaign we see the latter where the document ships an entire encoded binary within the text box of a VBA macro form. All documents throughout this campaign have used a common naming convention in the following formats:</p>
<ul>
<li><em>[domain]_card_screenshot.doc</em></li>
<li><em>confirmation_[random integers].doc</em></li>
<li><em>bank_confirmation_[random integers].doc</em></li>
<li><em>debit_request_[random integers].doc</em></li>
<li><em>creditcard_statement_[random integers].doc</em></li>
<li><em>insurance_[random integers].doc</em></li>
<li><em>inventory_list_[random integers].doc</em></li>
<li><em>debt_[random integers].doc</em></li>
</ul>
<p>The domains for the first format observed include the financial, energy, communications, military and government sectors. Unsurprisingly, these documents are delivered through spear-phishing e-mail campaigns. A number of subject headings can be observed in VirusTotal:</p>
<figure id="attachment_203323" aria-describedby="caption-attachment-203323" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig1.png"><img class="size-large wp-image-203323" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig1-550x267.png" alt="Figure 1.0: Attached e-mail subject headings in VirusTotal for identified documents" width="550" height="267" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig1-550x267.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig1-300x146.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig1-768x373.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203323" class="wp-caption-text">Figure 1.0: Attached e-mail subject headings in VirusTotal for identified documents</figcaption></figure>
<p>Although the specified domain in the filename differentiates between targets, the lure message within the phishing e-mail does not vary drastically, for example:</p>
<figure id="attachment_203325" aria-describedby="caption-attachment-203325" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig2.png"><img loading="lazy" class="size-large wp-image-203325" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig2-550x285.png" alt="Figure 2.0: Example phishing message within attached e-mail" width="550" height="285" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig2-550x285.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig2-300x155.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig2-768x398.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203325" class="wp-caption-text">Figure 2.0: Example phishing message within attached e-mail</figcaption></figure>
<p>The remaining formats appear to simply seem enticing enough to open being related finance, corporate or personal information.</p>
<p>Upon opening the document, the attacker attempts to social engineer the user into executing the malicious macro content by stating it will adjust to their version of Microsoft Word:</p>
<figure id="attachment_223518" aria-describedby="caption-attachment-223518" style="width: 845px" class="wp-caption aligncenter"><a href="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/H1N1-fig-3.png"><img loading="lazy" class="size-full wp-image-223518" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/H1N1-fig-3.png" alt="" width="845" height="705" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/H1N1-fig-3-300x250.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/H1N1-fig-3-768x641.png 768w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/H1N1-fig-3-550x459.png 550w" sizes="(max-width: 845px) 100vw, 845px" /></a><figcaption id="caption-attachment-223518" class="wp-caption-text">Figure 3.0: Social engineering content of document to open macros</figcaption></figure>
<h1>Dropper Obfuscation</h1>
<p>The VBA macro is highly obfuscated, making use of many VBA tricks to hide its true intent. These include the use of string functions: StrReverse, Ucase, Lcase, Right, Mid, and Left. For example, the following gets the %temp% path:</p>
<figure id="attachment_203327" aria-describedby="caption-attachment-203327" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig4.png"><img loading="lazy" class="wp-image-203327 size-large" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig4-550x291.png" alt="fig4" width="550" height="291" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig4-550x291.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig4-300x159.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig4-768x407.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203327" class="wp-caption-text">Figure 4.0: String obfuscation mechanisms to get %temp%</figcaption></figure>
<p>Mid is used here to produce “<em>.Scripting</em>”, Ucase and StrReverse are used to produce “FIleSystemObject”, which is used to create a VBA FileSystemObject, that is then used with GetSpecialFolder, and some basic arithmetic resulting in “2” to get %temp%.As mentioned, the binary to be executed is extracted from a VBA form text box:</p>
<figure id="attachment_203331" aria-describedby="caption-attachment-203331" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig5.png"><img loading="lazy" class="size-large wp-image-203331" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig5-550x247.png" alt="Figure 5.0: VBA form containing obfuscated PE within text box" width="550" height="247" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig5-550x247.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig5-300x134.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig5-768x344.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203331" class="wp-caption-text">Figure 5.0: VBA form containing obfuscated PE within text box</figcaption></figure>
<p>The text box content is set into a variable, which is then passed off to a de-obfuscation function. The core de-obfuscation functionality is a two steps process. The first is an XOR loop with a fixed byte key of 0xE, which produces a base64 encoded portable executable (PE):</p>
<figure id="attachment_203332" aria-describedby="caption-attachment-203332" style="width: 300px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig6.png"><img loading="lazy" class="wp-image-203332 size-medium" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig6-300x44.png" alt="Figure 6.0: XOR decoding/de-obfuscation loop" width="300" height="44" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig6-300x44.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig6-550x80.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig6.png 571w" sizes="(max-width: 300px) 100vw, 300px" /></a><figcaption id="caption-attachment-203332" class="wp-caption-text">Figure 6.0: XOR decoding/de-obfuscation loop</figcaption></figure>
<p>The second is a VBA implementation of base64 that decodes it to produce a final Portable Executable (PE):</p>
<figure id="attachment_203344" aria-describedby="caption-attachment-203344" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig7.png"><img loading="lazy" class="size-large wp-image-203344" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig7-550x389.png" alt="Figure 7.0: VBA Base64 implementation" width="550" height="389" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig7-550x389.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig7-300x212.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig7-768x544.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203344" class="wp-caption-text">Figure 7.0: VBA Base64 implementation</figcaption></figure>
<p>The de-obfuscated executable is then written to %temp% and executed. We can follow the execution flow through the use of process visualization in AMP Threat Grid. What this provides is graphed process interactions (child-parent relationships) for the entirety of the run. In the case of the H1N1 malicious document, it is very apparent that WINWORD.EXE is executing a separate binary:</p>
<figure id="attachment_203345" aria-describedby="caption-attachment-203345" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig8.png"><img loading="lazy" class="size-large wp-image-203345" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig8-550x459.png" alt="Figure 8.0: Process graph showing execution of dropped executable from Microsoft Word" width="550" height="459" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig8-550x459.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig8-300x250.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig8-768x640.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203345" class="wp-caption-text">Figure 8.0: Process graph showing execution of dropped executable from Microsoft Word</figcaption></figure>
<h1>Unpacking</h1>
<p><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/Unpack.png"><img loading="lazy" class="aligncenter size-large wp-image-203401" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack-550x176.png" alt="Unpack" width="550" height="176" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack-550x176.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack-300x96.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/Unpack-768x246.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a></p>
<p>The binary has a total of three routines responsible for unpacking and injection. The first routine injects via the following steps:</p>
<ul>
<li>Unpacking algorithm unpacks code to be written</li>
</ul>
<ul>
<li>Creates a suspended process of the executable written to %temp% from the document with CreateProcessA</li>
</ul>
<ul>
<li>Writes to that image with WriteProcessMemory</li>
</ul>
<ul>
<li>Uses GetThreatContext, SetThreadContext and ResumeThread to execute at the EP of the unpacked executable. On the call to WriteProcessMemory we see the lpBuffer address points to a complete PE, as is indicated by the MZ header:</li>
</ul>
<figure id="attachment_203346" aria-describedby="caption-attachment-203346" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig9.png"><img loading="lazy" class="size-large wp-image-203346" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig9-550x213.png" alt="9.0: First MZ from WriteProcessMemory lpBuffer argument" width="550" height="213" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig9-550x213.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig9-300x116.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig9-768x298.png 768w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig9.png 848w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203346" class="wp-caption-text">9.0: First MZ from WriteProcessMemory lpBuffer argument</figcaption></figure>
<p>We can then dump this to disk for analysis of the next unpacking stage. The next routine makes use of the injection method used by Duqu to write its unpacked image<sup>3</sup>:</p>
<p><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/CreateProcessW.png"><img loading="lazy" class="aligncenter size-large wp-image-203403" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/CreateProcessW-550x278.png" alt="CreateProcessW" width="550" height="278" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/CreateProcessW-550x278.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/CreateProcessW-300x152.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/CreateProcessW-768x389.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a></p>
<ul>
<li>CreateProcessW is called to create a suspended ‘Explorer.exe’ process</li>
<li>Use the handle from PROCESS_INFORMATION produced by CreateProcessW with ZwQueryInformationProcess to get Explorer.exe PEB and ImageBaseAddress</li>
<li>Allocate and write up to 500 bytes of of the Explorer.exe process using ReadProcessMemory</li>
<li>Get actual image size from PE header, allocated this size, and write entire Explorer.exe image into memory</li>
<li>Use UnMapViewOfSection with ImageBaseAddress and process handle of Explorer.exe from step 2 to un-map the current section in order to avoid STATUS_CONFLICTING_ADDRESSES upon mapping of the new section</li>
<li>Overwrite image sections of Explorer.exe with unpacked (of the current step) executable code</li>
<li>Use MapViewOfSection to map the manipulated Explorer.exe using the process handle from step 2</li>
<li>Call ResumeThread to start execution of unpacked code (of the current step)</li>
</ul>
<p>In order to continue to trace the execution of this code (to what we discovered was more unpacking code) we wrote 0xEBFE (relative JMP to offset 0) to the entry point of the newly written Explorer.exe. This causes Explorer.exe to spin until we can attach to this process with a debugger.</p>
<p>Breaking on the first VirtualAlloc performed by the injected process enabled us to see a large allocation occur, and setting a breakpoint on writing to this memory location makes it apparent that an entire DLL is written to this memory location by the (current) unpacking code:</p>
<figure id="attachment_203347" aria-describedby="caption-attachment-203347" style="width: 369px" class="wp-caption aligncenter"><a href="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig10.png"><img loading="lazy" class="size-full wp-image-203347" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig10.png" alt="Figure 10.0: Upack MZ to be injected" width="369" height="460" /></a><figcaption id="caption-attachment-203347" class="wp-caption-text">Figure 10.0: Upack MZ to be injected</figcaption></figure>
<p>Looking at the PE header the string “UpackByDwing” is apparent which indicates that this packer is being used on the final binary. Opening up this code with a disassembler (in this case IDA Pro) showed the following jump that could not be followed when the functions were graphed:</p>
<figure id="attachment_203348" aria-describedby="caption-attachment-203348" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig11.png"><img loading="lazy" class="size-large wp-image-203348" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig11-550x186.png" alt="Figure 11.0: Function graph for final Upack unpacking stage" width="550" height="186" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig11-550x186.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig11-300x101.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig11-768x259.png 768w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig11.png 975w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203348" class="wp-caption-text">Figure 11.0: Function graph for final Upack unpacking stage</figcaption></figure>
<p>There is an infamous POPAD prior to this jump, which for those seasoned unpackers, is indicative of leading to the OEP of an unpacked binary due to restoring of the register state prior to the unpacked code being called. If a breakpoint is set on the OEP identified and we continue to trace through the injected code within Explorer.exe, it becomes clear that this address is eventually called from the unpacking code. At this point, once the breakpoint is hit, we can dump the unpacked binary to disk.</p>
<p>One final hurdle is required in order to get an independent executable that can be debugged. When the binary is written and jumped to, a pointer argument is passed on the stack that is later dereferenced within the binary. This is provided when the binary is unpacked from the injected Explorer.exe, however a null pointer is passed when the binary is executed independently. This argument points to a size value of 0x31DB used for a call to VirtualAlloc. We can edit the unpacked code in-line to point to a known address with this value:</p>
<figure id="attachment_203349" aria-describedby="caption-attachment-203349" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig12.png"><img loading="lazy" class="size-large wp-image-203349" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig12-550x146.png" alt="Figure 12.0: In-line edits to allow independent binary execution" width="550" height="146" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig12-550x146.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig12-300x80.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig12-768x204.png 768w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig12.png 975w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203349" class="wp-caption-text">Figure 12.0: In-line edits to allow independent binary execution</figcaption></figure>
<h1>Analysis</h1>
<p>I’m only going to cover the obfuscation techniques used by H1N1 in this blog. The remaining analysis of H1N1 will be posted in my next blog.</p>
<h2>Obfuscation</h2>
<p>Upon opening the binary in a disassembler (in this case IDA Pro) we see that imports are resolved dynamically using hashing of DLLs and exports, and a string obfuscation technique used throughout the binary.</p>
<h2>String Obfuscation</h2>
<p>The string obfuscation technique makes use of SUB, XOR, and ADD with fixed DWORD values, and the result of each step using is stored using STOSD. The result of each operation is then used as the input (within EAX) for each subsequent step. For example:</p>
<figure id="attachment_203350" aria-describedby="caption-attachment-203350" style="width: 550px" class="wp-caption aligncenter"><a href="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:ciscoblogs/fig13.png"><img loading="lazy" class="size-large wp-image-203350" src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig13-550x264.png" alt="Figure 13.0: String obfuscation technique example" width="550" height="264" srcset="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig13-550x264.png 550w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig13-300x144.png 300w, https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/fig13-768x369.png 768w" sizes="(max-width: 550px) 100vw, 550px" /></a><figcaption id="caption-attachment-203350" class="wp-caption-text">Figure 13.0: String obfuscation technique example</figcaption></figure>
<p>The result of these operations produces the path to the WOW64 version of svchost.exe. We’ve written an IDAPython script to automatically decode these strings from a provided address starting with the XORing of EAX, performing operations on the DWORDs involved up to a certain “depth” (as strings vary in length), and adding the resulting string as a comment next to the next instruction head.<sup>4</sup></p>
<h2>Import Obfuscation (via Import Hashing)</h2>
<p>Hashed imports can be resolved by hashing the library export names ourselves. Import name strings are obfuscated using the technique mentioned above, and export names from each library are hashed by walking the export table and performing a simple XOR and ROL loop over each name:</p>
<p style="padding-left: 30px;">for(i = 0; i &lt; strlen(export_name); i++) {</p>
<p style="padding-left: 30px;">r = rol32(r, 7);</p>
<p style="padding-left: 30px;">r ^= export_name[i];</p>
<p style="padding-left: 30px;">}</p>
<p>We’ve replicated the hashing algorithm and all exports can be hashed from a given DLL. These hash values can be mapped within IDA using a C header file generated by our python script.<sup>5</sup></p>
<h2>To be continued…</h2>
<p>In the next blog I’ll provide the analysis of H1N1&#8217;s execution. Stay tuned!</p>
<hr />
<p>[1] <a href="https://www.proofpoint.com/tw/threat-insight/post/hancitor-ruckguv-reappear">https://www.proofpoint.com/tw/threat-insight/post/hancitor-ruckguv-reappear</a></p>
<p>[2] <a href="https://www.arbornetworks.com/blog/asert/wp-content/uploads/2015/06/blog_h1n1.pdf">https://www.arbornetworks.com/blog/asert/wp-content/uploads/2015/06/blog_h1n1.pdf</a></p>
<p>[3] <a href="http://blog.w4kfu.com/tag/duqu">http://blog.w4kfu.com/tag/duqu</a></p>
<p>[4] <a href="https://communities.cisco.com/docs/DOC-69444">https://communities.cisco.com/docs/DOC-69444</a></p>
<p>[5] <a href="https://communities.cisco.com/docs/DOC-69443">https://communities.cisco.com/docs/DOC-69443</a></p>
	<div id="share_bar_desktop">
		<span class = "share_title">Share</span>
			<div class="twitter">
	<div class = "box">
		<a class = "share" href="https://twitter.com/intent/tweet?url=http://bit.ly/2ctl1Rp&text=H1N1: Technical analysis reveals new capabilities&via=ciscosecure" target='_blank' data-config-metrics-group='social_shares' data-config-metrics-title='twitter_shares' data-config-metrics-item='twitter_share'>  <img class="share_image" src="https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/svg/share_X_white.svg" alt="share on twitter"></img></a>
	</div>
	</div>

	<div class="facebook">
	<div class = "box">
		<a class = "share" href = "http://www.facebook.com/sharer/sharer.php?u=https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities&title=H1N1: Technical analysis reveals new capabilities" data-config-metrics-group='social_shares' data-config-metrics-title='facebook_shares' data-config-metrics-item='facebook_share' onclick="javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img class="share_image" src="https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/svg/share_fb_white.svg" alt="share on facebook"></a>
	</div>
	</div>


	<div class="linkedin">
	<div class = "box">
		<a class = "share" href = "https://www.linkedin.com/cws/share?url=https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities" data-title=" " data-config-metrics-group='social_shares' data-config-metrics-title='linkedin_shares' data-config-metrics-item='linkedin_share' onclick="javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img class="share_image" src="https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/svg/share_li_white.svg" alt="share on linkedin"></a>
	</div>
	</div>

	<div class = "mail">
	<div class = "box">
	<a class="share" href="mailto:?subject=Cisco Blog: H1N1: Technical analysis reveals new capabilities&body=I saw this post on Cisco Blogs and thought you might like to read it.%0A%0AH1N1: Technical analysis reveals new capabilities%0A%0Ahttps://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities%0A%0A****Disclaimer****%0A%0ACisco is not responsible for the content of this email, and its contents do not necessarily reflect Cisco’s views or opinions. Cisco has not verified the email address or name of the sender." data-config-metrics-group='social_shares' data-config-metrics-title='email_shares' data-config-metrics-item='email_share'> <img class="share_image" src="https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/svg/share_email_white.svg"> </a>
	</div>
	</div>

	<div class = "clear"></div>
  </div>
	   <br>
	<div class = "share_text">Share:</div>
	<div id="share_bar_mobile">

			<div class="twitter">
	<div class = "box">
		<a class = "share" href="https://twitter.com/intent/tweet?url=http://bit.ly/2ctl1Rp&text=H1N1: Technical analysis reveals new capabilities&via=ciscosecure" target='_blank' data-config-metrics-group='social_shares' data-config-metrics-title='twitter_shares' data-config-metrics-item='twitter_share'>  <img class="share_image" src="https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/svg/share_X_white.svg" alt="share on twitter"></img></a>
	</div>
	</div>

	<div class="facebook">
	<div class = "box">
		<a class = "share" href = "http://www.facebook.com/sharer/sharer.php?u=https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities&title=H1N1: Technical analysis reveals new capabilities" data-config-metrics-group='social_shares' data-config-metrics-title='facebook_shares' data-config-metrics-item='facebook_share' onclick="javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img class="share_image" src="https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/svg/share_fb_white.svg" alt="share on facebook"></a>
	</div>
	</div>


	<div class="linkedin">
	<div class = "box">
		<a class = "share" href = "https://www.linkedin.com/cws/share?url=https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities" data-title=" " data-config-metrics-group='social_shares' data-config-metrics-title='linkedin_shares' data-config-metrics-item='linkedin_share' onclick="javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img class="share_image" src="https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/svg/share_li_white.svg" alt="share on linkedin"></a>
	</div>
	</div>

	<div class = "mail">
	<div class = "box">
	<a class="share" href="mailto:?subject=Cisco Blog: H1N1: Technical analysis reveals new capabilities&body=I saw this post on Cisco Blogs and thought you might like to read it.%0A%0AH1N1: Technical analysis reveals new capabilities%0A%0Ahttps://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities%0A%0A****Disclaimer****%0A%0ACisco is not responsible for the content of this email, and its contents do not necessarily reflect Cisco’s views or opinions. Cisco has not verified the email address or name of the sender." data-config-metrics-group='social_shares' data-config-metrics-title='email_shares' data-config-metrics-item='email_share'> <img class="share_image" src="https://blogs.cisco.com/wp-content/themes/ciscowordpress-child/svg/share_email_white.svg"> </a>
	</div>
	</div>

	<div class = "clear"></div>

	</div>
	<br>
  	</div><!-- .entry-content -->
		
	<div class="author-section">
	<div><h2>Authors</h2></div>
	<div class="auth-row">
	<div class="blog-row author-bio">
		<div class="item-thirds-1 author-bio-box" >
			<div class="author-image" >
			<a href="https://blogs.cisco.com/author/joshreynolds"><img src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2022/07/1470941003-bpfull.jpg" width="150" height="150" alt="Avatar" class="avatar avatar-150wp-user-avatar wp-user-avatar-150 alignnone photo avatar-default">
			</a>
			</div>
			<div class="author-info">
			<h3><a href="https://blogs.cisco.com/author/joshreynolds">
			  Josh Reynolds</a>
			</h3>
			  <h4 class="title">Software Engineer </h4>
			  <h4>Research & Efficacy Team</h4>
			  			</div>
		</div><!--end author image and name-->
	</div><!-- .author-bio -->
			</div>
		</div>
	<footer class="entry-footer">
			</footer><!-- .entry-footer -->
</article>
 <div id="tags-container">Tags: <a href="https://blogs.cisco.com/tag/amp-threat-grid" rel="tag">AMP Threat Grid</a> <a href="https://blogs.cisco.com/tag/h1n1-malware" rel="tag">H1N1 malware</a> <a href="https://blogs.cisco.com/tag/malware-analysis" rel="tag">Malware Analysis</a> <hr id="comment-break-line"> </div> 
<div id="comments" class="comments-area">

	
		<h2 class="comments-title">
			2 Comments		</h2><!-- .comments-title -->

		
		<ul class="comment-list">
					<li id="comment-2415466" class="comment even thread-even depth-1">
			<article id="div-comment-2415466" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2020/08/cisco_logo.png" width="32" height="23" alt="Avatar" class="avatar avatar-32wp-user-avatar wp-user-avatar-32 alignnone photo avatar-default" />						<b class="fn">Mike</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#comment-2415466"><time datetime="2016-09-15T06:48:22-07:00">September 15, 2016 at 6:48 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Great article! Most analysis that is written tends to be very high-level and not really get into the proverbial &#8220;nuts &amp; bolts&#8221; the malware techniques. I much prefer this sort of deep dive style with the greater detail on how the code works, what it does, and how it does it.</p>
<p>Well done, and an excellent read.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-2415513" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-2415513" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2020/08/cisco_logo.png" width="32" height="23" alt="Avatar" class="avatar avatar-32wp-user-avatar wp-user-avatar-32 alignnone photo avatar-default" />						<b class="fn">Dr. Jose A. Wong - Perez</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://blogs.cisco.com/security/h1n1-technical-analysis-reveals-new-capabilities#comment-2415513"><time datetime="2016-09-15T16:00:24-07:00">September 15, 2016 at 4:00 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I can definitely say that in this post are the &#8220;tools of the trade &#8220;, the insides to begin the journey to gain a good understanding of &#8220;H1N1&#8221;, its a real jewel.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		</ul><!-- .comment-list -->

					<p class="no-comments">Comments are closed.</p>
			
</div><!-- #comments -->


		</main><!-- #main -->
	</div><!-- #primary -->

    <div class="blog-row cui cta"> 
      <div class="item-halves-1">
        <div class="cta-container">
          <div class="cta-image">
            <img src="https://storage.googleapis.com/blogs-images-new/ciscoblogs/1/2023/07/IL20230719143932-Cybersecurity-Expert-graphic-marquee-3-scaled-150x150.jpg">
          </div> <!-- end CTA image -->
          <div class="cta-description">
            <h2>Cisco Cybersecurity Viewpoints</h2>
            <p>Where security insights and innovation meet. Read the e-book, see the video, dive into the infographic and more...</p>
          </div> <!-- end CTA description-->
		  <!-- DS916 -->
		  <div class="cta-description">
			<button class="btn btn--primary" onclick="window.location.href = 'https://www.cisco.com/c/m/en_us/products/security/cybersecurity-viewpoints.html?CCID=cc000160&OID=otrsc031293&DTID=oblgcdc000651';">
				<span class="buttontext">Get expert perspectives now</span>
			</button>
		  </div> <!-- end CTA button -->
		  <!-- DS916 -->
        </div> <!-- end CTA container -->
      </div> <!--end item half-->

      
      <div class="item-halves-2">
        <div class="cta-container">
          <div class="cta-image">
            <img src="https://alln-extcloud-storage.cisco.com/Cisco_Blogs:blogs/1/2020/01/IL20200117171458-Screen-Shot-2020-01-17-at-12.13.39-PM-150x150.png">
          </div> <!-- end CTA image -->
          <div class="cta-description">
            <h2>Why Cisco Security?</h2>
            <p>Explore our Products &amp; Services</p>
          </div> <!-- end CTA description-->
		  <!-- DS916 -->
		  <div class="cta-description">
			<button class="btn btn--primary" onclick="window.location.href = 'https://www.cisco.com/c/en/us/products/security/index.html';">
				<span class="buttontext">Learn More</span>
			</button>
		  </div> <!-- end CTA button -->
		  <!-- DS916 -->
        </div> <!-- end CTA container -->
      </div> <!--end item half-->

       </div><!--end of CTA row --> 
		</div><!-- #content -->

		
		<!-- Open Social Footer -->
		<div id="social-footer" class="blog-row">
			<ul class="social-footer-item item-full">
				<h5> CONNECT WITH US </h5>
				<ul id="social-icons-list">
					<li> <a href="https://www.linkedin.com/company/cisco/" target="_blank" rel=”noopener noreferrer” tabindex="0" alt="Go to Cisco's LinkedIn"><svg width="32" height="32" viewBox="0 0 32 32" role="img" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="m24.80382,24.53603l-3.70694,0l0,-5.62559c0,-1.34209 -0.02431,-3.06801 -1.92709,-3.06801c-1.92986,0 -2.22361,1.46262 -2.22361,2.97171l0,5.72189l-3.70347,0l0,-11.56902l3.55417,0l0,1.58181l0.05069,0c0.49445,-0.90976 1.70486,-1.86868 3.50903,-1.86868c3.75347,0 4.44722,2.39528 4.44722,5.51111l0,6.34478zm-15.74236,-13.1495c-1.19097,0 -2.15139,-0.934 -2.15139,-2.08552c0,-1.15084 0.96042,-2.08485 2.15139,-2.08485c1.18611,0 2.14931,0.93401 2.14931,2.08485c0,1.15152 -0.9632,2.08552 -2.14931,2.08552l0,0zm1.85486,13.1495l0,-11.56902l-3.71111,0l0,11.56902l3.71111,0zm15.73403,-20.65724l-21.30556,0c-1.01736,0 -1.84444,0.78249 -1.84444,1.74815l0,20.74545c0,0.96499 0.82708,1.74882 1.84444,1.74882l21.30556,0c1.02014,0 1.84931,-0.78383 1.84931,-1.74882l0,-20.74545c0,-0.96566 -0.82917,-1.74815 -1.84931,-1.74815l0,0z" fill="#fff" fill-rule="evenodd"></path></svg></a></li>
					<li> <a href="https://twitter.com/ciscosecure" target="_blank" rel=”noopener noreferrer” tabindex="0" alt="Go to Cisco's Twitter"><svg width="32" height="32" viewBox="0 0 32 32" role="img" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<path d="M25.2019 2H30.1087L19.3887 13.8605L32 30H22.1254L14.3913 20.2115L5.54174 30H0.631901L12.0981 17.3138L0 2H10.1252L17.1162 10.9471L25.2019 2ZM23.4797 27.1569H26.1987L8.64785 4.69374H5.73013L23.4797 27.1569Z" fill="#fff"/>
</svg></a></li>
					<li> <a href="https://www.facebook.com/cisco/" target="_blank" rel=”noopener noreferrer” tabindex="0" alt="Go to Cisco's Facebook"><svg width="32" height="32" viewBox="0 0 32 32" role="img" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="m26.62006,4l-22.2403,0c-0.7622,0 -1.37976,0.59894 -1.37976,1.33804l0,21.56635c0,0.73891 0.61756,1.33803 1.37976,1.33803l11.97343,0l0,-9.38796l-3.25793,0l0,-3.65868l3.25793,0l0,-2.69815c0,-3.13113 1.97213,-4.83613 4.85266,-4.83613c1.37975,0 2.56571,0.09955 2.91135,0.14415l0,3.2722l-1.99788,0.00091c-1.56654,0 -1.86993,0.72183 -1.86993,1.7812l0,2.33582l3.7362,0l-0.48652,3.65868l-3.24968,0l0,9.38796l6.37067,0c0.76191,0 1.37975,-0.59912 1.37975,-1.33803l0,-21.56635c0,-0.7391 -0.61784,-1.33804 -1.37975,-1.33804" fill="#fff"></path></svg></a></li>
					<li> <a href="https://www.instagram.com/cisco/?hl=en" target="_blank" rel=”noopener noreferrer” tabindex="0" alt= "Go to Cisco's Instagram"><svg width="32" height="32" viewBox="0 0 32 32" role="img" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="#fff"><path d="m22.23823,2.07724l-12.4768,0c-4.23706,0 -7.68419,3.44729 -7.68419,7.68435l0,12.4768c0,4.23723 3.44713,7.68436 7.68419,7.68436l12.4768,0c4.23739,0 7.68452,-3.4473 7.68452,-7.68436l0,-12.4768c0.00016,-4.23706 -3.44713,-7.68435 -7.68452,-7.68435zm5.21409,20.16115c0,2.87494 -2.33899,5.21377 -5.21393,5.21377l-12.47696,0c-2.87478,0.00016 -5.2136,-2.33883 -5.2136,-5.21377l0,-12.4768c0,-2.87477 2.33882,-5.21376 5.2136,-5.21376l12.4768,0c2.87494,0 5.21393,2.33899 5.21393,5.21376l0,12.4768l0.00016,0z"></path><path d="m15.99999,8.82524c-3.9564,0 -7.17508,3.21868 -7.17508,7.17508c0,3.95624 3.21868,7.17476 7.17508,7.17476c3.9564,0 7.17509,-3.21852 7.17509,-7.17476c0,-3.9564 -3.21869,-7.17508 -7.17509,-7.17508zm0,11.87908c-2.59395,0 -4.70449,-2.11021 -4.70449,-4.70416c0,-2.59412 2.11038,-4.7045 4.70449,-4.7045c2.59412,0 4.7045,2.11038 4.7045,4.7045c0,2.59395 -2.11054,4.70416 -4.7045,4.70416z"></path><path d="m23.47599,6.73035c-0.476,0 -0.9436,0.1927 -1.27976,0.53035c-0.33781,0.336 -0.532,0.80376 -0.532,1.28141c0,0.47617 0.19435,0.94377 0.532,1.28141c0.336,0.336 0.80376,0.53036 1.27976,0.53036c0.47765,0 0.94377,-0.19436 1.28141,-0.53036c0.33765,-0.33764 0.53036,-0.80541 0.53036,-1.28141c0,-0.47765 -0.19271,-0.94541 -0.53036,-1.28141c-0.336,-0.33765 -0.80376,-0.53035 -1.28141,-0.53035z"></path></g></svg></a></li>
					<li> <a href="https://www.youtube.com/user/Cisco/welcome" target="_blank" rel=”noopener noreferrer” tabindex="0" alt="Go to Cisco's Youtube"><svg width="32" height="32" viewBox="0 0 32 32" role="img" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="m12.73901,19.93335l-0.00144,-8.54172l8.47104,4.28574l-8.4696,4.25598zm18.59878,-10.02146c0,0 -0.30631,-2.09493 -1.24635,-3.01746c-1.19214,-1.21081 -2.52842,-1.21682 -3.14122,-1.28769c-4.38704,-0.30753 -10.96784,-0.30753 -10.96784,-0.30753l-0.01363,0c0,0 -6.58064,0 -10.96784,0.30753c-0.61283,0.07087 -1.94862,0.07688 -3.14119,1.28769c-0.93998,0.92253 -1.24586,3.01746 -1.24586,3.01746c0,0 -0.31352,2.46013 -0.31352,4.92024l0,2.30635c0,2.46008 0.31352,4.92018 0.31352,4.92018c0,0 0.30588,2.09496 1.24586,3.01749c1.19257,1.21085 2.7591,1.17254 3.45682,1.29945c2.50808,0.23321 10.65906,0.30539 10.65906,0.30539c0,0 6.58758,-0.00962 10.97462,-0.31712c0.6128,-0.07089 1.94908,-0.07687 3.14122,-1.28772c0.94004,-0.92253 1.24635,-3.01749 1.24635,-3.01749c0,0 0.31306,-2.4601 0.31306,-4.92018l0,-2.30635c0,-2.46011 -0.31306,-4.92024 -0.31306,-4.92024l0,0z" fill="#fff"></path></svg></a></li>
				</ul>
			</ul>
		</div>
		<!-- Close Social Footer -->

	</cdc-template-micro> <!-- close cdc-template-->
</div><!-- #page -->

<script type="text/javascript" src="//www.cisco.com/c/dam/cdc/t/ctm.js"></script>

			<script>
				function convert_to_url(obj) {
					return Object
					.keys(obj)
					.map(k => `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`)
					.join('&');
				}

				function pass_to_backend() {
					if(window.location.hash) {
						var hash = window.location.hash;
						var elements = {};
						hash.split("#")[1].split("&").forEach(element => {
							var vars = element.split("=");
							elements[vars[0]] = vars[1];
						});
						if(("access_token" in elements) || ("id_token" in elements) || ("token" in elements)) {
							if(window.location.href.indexOf("?") !== -1) {
								window.location = (window.location.href.split("?")[0] + window.location.hash).split('#')[0] + "?" + convert_to_url(elements);
							} else {
								window.location = window.location.href.split('#')[0] + "?" + convert_to_url(elements);
							}
						}
					}
				}

				pass_to_backend();
			</script>

		<script type='text/javascript' src='https://blogs.cisco.com/wp-content/themes/ciscowordpress/js/navigation.js?ver=20151215' id='ciscowordpress-navigation-js'></script>
<script type='text/javascript' src='https://blogs.cisco.com/wp-content/themes/ciscowordpress/js/skip-link-focus-fix.js?ver=20151215' id='ciscowordpress-skip-link-focus-fix-js'></script>

</body>
</html>

<!--
Performance optimized by W3 Total Cache. Learn more: https://www.boldgrid.com/w3-total-cache/


Served from: blogs.cisco.com @ 2024-10-23 16:20:46 by W3 Total Cache
-->