<!DOCTYPE html>
<html lang="en">
<head>

    <title>Mozi, Another Botnet Using DHT</title>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" type="text/css" href="/assets/built/screen.css?v=42b57cac00" />

    <meta name="description" content="Mozi Botnet relies on the DHT protocol to build a P2P network, and uses ECDSA384 and the xor algorithm to ensure the integrity and security of its components and P2P network. The sample spreads via Telnet with weak passwords and some known exploits">
    <link rel="icon" href="https://blog.netlab.360.com/content/images/size/w256h256/2019/02/netlab_xs-2.png" type="image/png">
    <link rel="canonical" href="https://blog.netlab.360.com/mozi-another-botnet-using-dht/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    <link rel="amphtml" href="https://blog.netlab.360.com/mozi-another-botnet-using-dht/amp/">
    
    <meta property="og:site_name" content="360 Netlab Blog - Network Security Research Lab at 360">
    <meta property="og:type" content="article">
    <meta property="og:title" content="Mozi, Another Botnet Using DHT">
    <meta property="og:description" content="Mozi Botnet relies on the DHT protocol to build a P2P network, and uses ECDSA384 and the xor algorithm to ensure the integrity and security of its components and P2P network. The sample spreads via Telnet with weak passwords and some known exploits">
    <meta property="og:url" content="https://blog.netlab.360.com/mozi-another-botnet-using-dht/">
    <meta property="og:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta property="article:published_time" content="2019-12-23T10:32:13.000Z">
    <meta property="article:modified_time" content="2019-12-24T04:46:44.000Z">
    <meta property="article:tag" content="Botnet">
    <meta property="article:tag" content="en">
    <meta property="article:tag" content="DDoS">
    <meta property="article:tag" content="P2P">
    <meta property="article:tag" content="Import 2022-11-30 11:16">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Mozi, Another Botnet Using DHT">
    <meta name="twitter:description" content="Mozi Botnet relies on the DHT protocol to build a P2P network, and uses ECDSA384 and the xor algorithm to ensure the integrity and security of its components and P2P network. The sample spreads via Telnet with weak passwords and some known exploits">
    <meta name="twitter:url" content="https://blog.netlab.360.com/mozi-another-botnet-using-dht/">
    <meta name="twitter:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Alex.Turing">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="Botnet, en, DDoS, P2P, Import 2022-11-30 11:16">
    <meta name="twitter:site" content="@360Netlab">
    <meta name="twitter:creator" content="@TuringAlex">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="800">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "360 Netlab Blog - Network Security Research Lab at 360",
        "url": "https://blog.netlab.360.com/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png"
        }
    },
    "author": {
        "@type": "Person",
        "name": "Alex.Turing",
        "image": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2019/06/turing.PNG",
            "width": 1200,
            "height": 1200
        },
        "url": "https://blog.netlab.360.com/author/alex/",
        "sameAs": [
            "https://twitter.com/TuringAlex"
        ]
    },
    "headline": "Mozi, Another Botnet Using DHT",
    "url": "https://blog.netlab.360.com/mozi-another-botnet-using-dht/",
    "datePublished": "2019-12-23T10:32:13.000Z",
    "dateModified": "2019-12-24T04:46:44.000Z",
    "keywords": "Botnet, en, DDoS, P2P, Import 2022-11-30 11:16",
    "description": "Mozi Botnet relies on the DHT protocol to build a P2P network, and uses ECDSA384 and the xor algorithm to ensure the integrity and security of its components and P2P network. The sample spreads via Telnet with weak passwords and some known exploits",
    "mainEntityOfPage": "https://blog.netlab.360.com/mozi-another-botnet-using-dht/"
}
    </script>

    <meta name="generator" content="Ghost 5.76">
    <link rel="alternate" type="application/rss+xml" title="360 Netlab Blog - Network Security Research Lab at 360" href="https://blog.netlab.360.com/rss/">
    
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/sodo-search.min.js" data-key="db8c743e6bb1457403d255d83f" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/main.css" data-sodo-search="https://blog.netlab.360.com/" crossorigin="anonymous"></script>
    
    <link href="https://blog.netlab.360.com/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=42b57cac00"></script>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=42b57cac00">
    <style type='text/css'>
	#ghost-portal-root {
        display: none;
    }
</style><style>:root {--ghost-accent-color: #eca265;}</style>

</head>
<body class="post-template tag-botnet tag-en tag-ddos tag-p2p tag-import-2022-11-30-11-16 has-cover">
<div class="viewport">

    <header id="gh-head" class="gh-head outer">
        <nav class="gh-head-inner inner">

            <div class="gh-head-brand">
                <a class="gh-head-logo" href="https://blog.netlab.360.com">
                        <img src="https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png" alt="360 Netlab Blog - Network Security Research Lab at 360" />
                </a>
                <div class="gh-head-brand-wrapper">
                    <button class="gh-search" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                    <a class="gh-burger" role="button">
                        <div class="gh-burger-box">
                            <div class="gh-burger-inner"></div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="gh-head-menu">
                <ul class="nav">
    <li class="nav-botnet"><a href="https://blog.netlab.360.com/tag/botnet/">Botnet</a></li>
    <li class="nav-dnsmon"><a href="https://blog.netlab.360.com/tag/dnsmon/">DNSMon</a></li>
    <li class="nav-ddos"><a href="https://blog.netlab.360.com/tag/ddos/">DDoS</a></li>
    <li class="nav-passivedns"><a href="https://blog.netlab.360.com/tag/pdns/">PassiveDNS</a></li>
    <li class="nav-mirai"><a href="https://blog.netlab.360.com/tag/mirai/">Mirai</a></li>
    <li class="nav-dta"><a href="https://blog.netlab.360.com/tag/dta/">DTA</a></li>
</ul>

            </div>
            <div class="gh-head-actions">
                <div class="gh-social">
                        <a class="gh-social-link gh-social-twitter" href="https://twitter.com/360Netlab" title="Twitter" target="_blank" rel="me noopener"><svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg></a>
                        <a class="gh-social-link gh-social-feedly" href="https://feedly.com/i/subscription/feed/https://blog.netlab.360.com/rss/" title="RSS" target="_blank" rel="me noopener"><svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><circle cx="6.18" cy="17.82" r="2.18"/><path d="M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z"/></svg>
</a>
                </div>
            </div>
        </nav>
    </header>

    <div class="site-content">
             <div class="floating-header">
    <div class="floating-header-logo">
        <a href="https://blog.netlab.360.com">
                <img src="/content/images/size/w30/2019/02/netlab_xs-2.png" alt="360 Netlab Blog - Network Security Research Lab at 360 icon" />
            <span>360 Netlab Blog - Network Security Research Lab at 360</span>
        </a>
    </div>
    <span class="floating-header-divider">&mdash;</span>
    <div class="floating-header-title">Mozi, Another Botnet Using DHT</div>
    <div class="floating-header-share">
        <div class="floating-header-share-label">Share this <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path d="M7.5 15.5V4a1.5 1.5 0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1H18a1.5 1.5 0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2 0 0 1 1.76-1.605L7.5 15.5zm6-6v2m-3-3.5v3.5m6-1v2"/>
</svg>
</div>
        <a class="floating-header-share-tw" href="https://twitter.com/share?text=Mozi%2C%20Another%20Botnet%20Using%20DHT&amp;url=https://blog.netlab.360.com/mozi-another-botnet-using-dht/"
            onclick="window.open(this.href, 'share-twitter', 'width=550,height=235');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg>        </a>
        <a class="floating-header-share-fb" href="https://www.facebook.com/sharer/sharer.php?u=https://blog.netlab.360.com/mozi-another-botnet-using-dht/"
            onclick="window.open(this.href, 'share-facebook','width=580,height=296');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z"/></svg>        </a>
    </div>
    <progress id="reading-progress" class="progress" value="0">
        <div class="progress-container">
            <span class="progress-bar"></span>
        </div>
    </progress>
</div>


  <main id="site-main" class="site-main">
    <article class="article post tag-botnet tag-en tag-ddos tag-p2p tag-import-2022-11-30-11-16 no-image ">

      <header class="article-header gh-canvas">

        <div class="article-tag post-card-tags">
          <span class="post-card-primary-tag">
            <a href="/tag/botnet/">Botnet</a>
          </span>
        </div>

        <h1 class="article-title">Mozi, Another Botnet Using DHT</h1>

        <p class="article-excerpt">Mozi Botnet relies on the DHT protocol to build a P2P network, and uses ECDSA384 and the xor algorithm to ensure the integrity and security of its components and P2P network. The sample spreads via Telnet with weak passwords and some known exploits</p>

        <div class="article-byline">
          <section class="article-byline-content">

            <ul class="author-list">
              <li class="author-list-item">
                <a href="/author/alex/" class="author-avatar">
                  <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
                </a>
              </li>
              <li class="author-list-item">
                <a href="/author/huiwang/" class="author-avatar">
                  <img class="author-profile-image" src="/content/images/2017/05/WechatIMG1.jpeg" alt="Hui Wang" />
                </a>
              </li>
            </ul>

            <div class="article-byline-meta">
              <h4 class="author-name"><a href="/author/alex/">Alex.Turing</a>, <a href="/author/huiwang/">Hui Wang</a></h4>
              <div class="byline-meta-content">
                <time class="byline-meta-date" datetime=" 2019-12-23">Dec 23, 2019</time>
                <span class="byline-reading-time"><span class="bull">&bull;</span> 11 min read</span>
              </div>
            </div>

          </section>
        </div>


      </header>

      <section class="gh-content gh-canvas">
        <!--kg-card-begin: markdown--><h2 id="overview">Overview</h2>
<p>On September 03, 2019, a suspicious file was tagged by our new threat monitoring system and a quick checking on VT shows most engines flagged it as Gafgyt. The sample does reuse part of the Gafgyt code, but it is not really Gafgyt.</p>
<p>The sample represents a brand new P2P botnet implemented based on the DHT protocol, the last botnet which uses DHT is the Hajime, and we call it Mozi according to the characteristics of its propagation sample file name <code>Mozi.m</code>,<code>Mozi.a</code>.</p>
<p>Mozi Botnet relies on the DHT protocol to build a P2P network, and uses ECDSA384 and the xor algorithm to ensure the integrity and security of its components and P2P network. The sample spreads via Telnet with weak passwords and some known exploits (see the list below). In terms of functions, the execution of the instructions of each node in the Mozi botnet is driven by a Payload called Config issued by the Botnet Master. The main instructions include:</p>
<ul>
<li>DDoS attack</li>
<li>Collecting Bot Information</li>
<li>Execute the payload of the specified URL</li>
<li>Update the sample from the specified URL</li>
<li>Execute system or custom commands</li>
</ul>
<p>The overall network structure is shown in the following figure:<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_flow-3.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_flow.m.png" class="kg-image"></a></p>
<h2 id="samplespread">Sample Spread</h2>
<p>Mozi infects new devices through weak telnet passwords and exploits.The infection process is as follows:</p>
<ul>
<li>The current Bot node randomly uses a local port to start the http service to provide sample downloads or receives the sample download address in the Config file issued by the Botnet Master.Provides a sample download address for future infected targets.</li>
<li>The current Bot node logs in to the target device with a weak password, writes the downloader file in echo mode and runs it, and downloads the sample file from the sample download address provided by the current Bot node. Or use a vulnerability to exploit the target, and then obtain a sample file from the sample download address provided by the current Bot node.</li>
<li>Run the Mozi Bot sample on the infected target device, join the Mozi P2P network to become the new Mozi Bot node and continue to infect other new devices.</li>
</ul>
<p>The vulnerabilities used by Mozi Botnet are shown in the following table:</p>
<table>
<thead>
<tr>
<th>Vulnerability</th>
<th>Affected Aevice</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.exploit-db.com/exploits/40740?ref=blog.netlab.360.com">Eir D1000 Wireless Router RCI</a></td>
<td>Eir D1000 Router</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/6864/?ref=blog.netlab.360.com">Vacron NVR RCE</a></td>
<td>Vacron NVR devices</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/37169/?ref=blog.netlab.360.com">CVE-2014-8361</a></td>
<td>Devices using the Realtek SDK</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/41598/?ref=blog.netlab.360.com">Netgear cig-bin Command Injection</a></td>
<td>Netgear R7000 and R6400</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/43055?ref=blog.netlab.360.com">Netgear setup.cgi unauthenticated RCE</a></td>
<td>DGN1000 Netgear routers</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/41471/?ref=blog.netlab.360.com">JAWS Webserver unauthenticated shell command execution</a></td>
<td>MVPower DVR</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/43414/?ref=blog.netlab.360.com">CVE-2017-17215</a></td>
<td>Huawei Router HG532</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/37171/?ref=blog.netlab.360.com">HNAP SoapAction-Header Command Execution</a></td>
<td>D-Link Devices</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/44576/?ref=blog.netlab.360.com">CVE-2018-10561, CVE-2018-10562</a></td>
<td>GPON Routers</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/28333/?ref=blog.netlab.360.com">UPnP SOAP TelnetD Command Execution</a></td>
<td>D-Link Devices</td>
</tr>
<tr>
<td><a href="https://www.exploit-db.com/exploits/39596/?ref=blog.netlab.360.com">CCTV/DVR Remote Code Execution</a></td>
<td>CCTV DVR</td>
</tr>
</tbody>
</table>
<p>At present, we do not know the exact scale of the Botnet, we do manage to become a node to join the DHT network and are tracking some baseline numbers, we will share more details probably in another blog later on. And from other data we have collected, we can also see the number of infection has been increasing.The picture below shows the Mozi bot infection based on the log collected by our honeypot.<br>
<img src="https://blog.netlab.360.com/content/images/2019/12/fssfsadfsdff.png" alt="fssfsadfsdff" loading="lazy"></p>
<h2 id="samplereverseanalysis">Sample Reverse Analysis</h2>
<p>There are three versions of Mozi Botnet, which can be distinguished by their slightly different telnet propagation methods.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_versioin.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_versioin.png" class="kg-image"></a><br>
Our analysis is mainly focus on the latest version v2, and this blog will cover the key elements such as propagation method, Config structure and its DHT network.</p>
<h3 id="sampleinformation">Sample Information</h3>
<blockquote>
<p>MD5:eda730498b3d0a97066807a2d98909f3</p>
<p>ELF 32-bit LSB executable, ARM, version 1 (ARM), statically linked, stripped</p>
<p>Packer: NO</p>
<p>Library:uclibc</p>
<p>Version: v2</p>
</blockquote>
<p>It is worth mentioning that in the first version Mozi(sample md5: <code>849b165f28ae8b1cebe0c7430f44aff3</code>) used upx packing. But instead of using the common upx magic number to defeat unpacking, it used a novel method, to erase the value of p_filesize &amp; p_blocksize to zero, with that change, researcher need to patch the upx source code then unpacking is possible.</p>
<h3 id="commonfunctions">Common Functions</h3>
<p>Mozi doesn't have much characteristics in the host behavior level. It reuses Gafgyt's code to implements many common functions, such as single instance, process name modification, and ACL modification.</p>
<ul>
<li>Single instance, by binding local port<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_bind.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_bind.png" class="kg-image"></a></li>
<li>Change the process name to sshd or dropbear to confuse the victim<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_setname.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_setname.png" class="kg-image"></a></li>
<li>ACL modification, Open up the ports;block SSH, TELNET services to prevent Bot from being re-infected by other malicious actors.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_iptables.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_iptables.png" class="kg-image"></a></li>
</ul>
<p><a href="https://blog.netlab.360.com/content/images/2019/12/mozi_forb.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_forb.png" class="kg-image"></a></p>
<h3 id="performspecifictasks">Perform Specific Tasks</h3>
<p>After Mozi establishes the p2p network through the DHT protocol, the config file is synchronized, and the corresponding tasks are started according to the instructions in the config file.In P2P networks, nodes are untrusted, and anyone can fake a Mozi node at a very low cost.In order to ensure that the Mozi network is completely controllable and cannot be stolen by others, Mozi needs to perform signature verification on each synchronized config, and only if it can pass the signature verification can it be accepted and executed by the Mozi node.</p>
<p><a href="https://blog.netlab.360.com/content/images/2019/12/mozi_configproc.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_configproc.png" class="kg-image"></a></p>
<h4 id="documentinstructioninspection">Document &amp; Instruction Inspection</h4>
<p>Mozi uses the ECDSA384 algorithm to verify the legitimacy of files and instructions. Each sample integrates two xor-encrypted public keys, which are used to sign encrypted and decrypted config files, respectively.</p>
<pre><code> xor key:4E 66 5A 8F 80 C8 AC 23 8D AC 47 06 D5 4F 6F 7E
------------------------------------------------------------------
xored publickey A 
	4C B3 8F 68 C1 26 70 EB 9D C1 68 4E D8 4B 7D 5F 
	69 5F 9D CA 8D E2 7D 63 FF AD 96 8D 18 8B 79 1B 
	38 31 9B 12 69 73 A9 2E B6 63 29 76 AC 2F 9E 94 A1	
after decryption: 
	02 d5 d5 e7 41 ee dc c8 10 6d 2f 48 0d 04 12 21 
	27 39 c7 45 0d 2a d1 40 72 01 d1 8b cd c4 16 65 
	76 57 c1 9d e9 bb 05 0d 3b cf 6e 70 79 60 f1 ea ef
-------------------------------------------------------------------
xored publickey B
	4C A6 FB CC F8 9B 12 1F 49 64 4D 2F 3C 17 D0 B8 
	E9 7D 24 24 F2 DD B1 47 E9 34 D2 C2 BF 07 AC 53 
	22 5F D8 92 FE ED 5F A3 C9 5B 6A 16 BE 84 40 77 88
after decryption:
	02 c0 a1 43 78 53 be 3c c4 c8 0a 29 e9 58 bf c6 
	a7 1b 7e ab 72 15 1d 64 64 98 95 c4 6a 48 c3 2d 
	6c 39 82 1d 7e 25 f3 80 44 f7 2d 10 6b cb 2f 09 c6
</code></pre>
<h4 id="configfile">Config File</h4>
<p>Each sample integrates an xor-encrypted initial config file with a length of 528 bytes. Its structure is data (428 bytes), sign (96 bytes), flag (4 bytes). The sign field is a digital signature and the flag field controls if the config file is updated or not.There are many control fields in the config file. After receiving the config, the Mozi node parses the field content and executes the corresponding subtasks.The original config file is as follows.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_enconfig.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_enconfig.png" class="kg-image"></a><br>
The decryption process is shown in the following figure, where the xor key is <code>4E 66 5A 8F 80 C8 AC 23 8D AC 47 06 D5 4F 6F 7E</code></p>
<p><a href="https://blog.netlab.360.com/content/images/2019/12/mozi_xorproc.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_xorproc.png" class="kg-image"></a><br>
The decrypted config is as follows.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_denconfig.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_denconfig.png" class="kg-image"></a><br>
The supported keywords are as follows, which can be divided into three categories: declaration, control, and subtask.</p>
<pre><code>1：declaration
[cpu]　　cpu arch or os
[cpux]  cpu arch or os
[ss]	bot role
[ssx]	bot role
[nd] 	new node info which help to join DHT
2:control
[ver] 	verify 
[sv]	update  Config
[hp] 	DHT id prefix
[dip]   URL or ip:port list which can get Mozi sample
3:subtask
[atk]	DDOS attack
[ud] 	update
[dr] 	exec payload from specific URL 
[rn] 	exec system or customized cmds
[idp] 	report bot info
</code></pre>
<h4 id="botfunction">Bot Function</h4>
<ul>
<li>DDOS，<code>[atk]</code>field trigger, reuse Gafgyt attack code, support HTTP, TCP, UDP and other attacks.<pre><code>Command
-----------------------------------------
S    
T
U
KT
HTTP
</code></pre>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_atk.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_atk.png" class="kg-image"></a></li>
<li>Report Bot information,<code>[idp]</code>field trigger, the content reported are Bot ID, IP, PORT, file name (full path), gateway, cpu architecture.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_idp.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_idp.png" class="kg-image"></a></li>
<li>The payload of the specified URL is executed, and the<code>[dr]</code> field is triggered.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_dr.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_dr.png" class="kg-image"></a></li>
<li>Update from the specified URL, the <code>[ud]</code>field is triggered. Close the current node's network connection and related processes, download the new version from the specified URL, save DHT node, ID and other data, and provide them as parameters for the new version.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_ud.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_ud.png" class="kg-image"></a></li>
<li>Execute system or Bot custom command,<code>[rn]</code>field trigger.
<ul>
<li>System command<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_rnsys.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_rnsys.png" class="kg-image"></a></li>
<li>Customize the<code>GET</code>command and send the Bot ID to the peer.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_rnget.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_rnget.png" class="kg-image"></a></li>
<li>Customize the<code>run</code>command, execute the command issued by the peer, and return the result.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_rnrun.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_rnrun.png" class="kg-image"></a></li>
</ul>
</li>
</ul>
<h3 id="dht">DHT</h3>
<p>Mozi Botnet uses its own extended DHT protocol to build a P2P network. There are two benefits to this. One is to use standard DHT to quickly establish a network, and the other is to use its own extension to hide the valid payload in the vast amount of normal DHT traffic so detection is impossible without proper knowledge. Mozi uses 8 sets of public nodes and the nodes specified in the [nd] field of the Config file as bootstrap nodes, toguide new nodes to join their DHT network.</p>
<ul>
<li>Public node, sample embedded</li>
</ul>
<pre><code>dht.transmissionbt.com:6881
router.bittorrent.com:6881
router.utorrent.com:6881
bttracker.debian.org:6881
212.129.33.59:6881
82.221.103.244:6881
130.239.18.159:6881
87.98.162.88:6881
</code></pre>
<ul>
<li>[nd] Specified in the Config file<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_nd.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_nd.png" class="kg-image"></a></li>
</ul>
<h4 id="idgeneration">ID Generation</h4>
<p>The ID is 20 bytes and consists of the prefix <code>888888</code> embedded in the sample or the prefix specified by the config file [hp], plus a randomly generated string.</p>
<p><a href="https://blog.netlab.360.com/content/images/2019/12/mozi_id.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_id.png" class="kg-image"></a></p>
<h4 id="noderecognition">Node Recognition</h4>
<p>In order to distinguish regular traffic with its own traffic, Mozi uses<code>1:v4:flag(4 bytes)</code>such an identifier to identify whether the traffic is sent by its node. The meaning of the flag byte is as follows.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_node.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_node.png" class="kg-image"></a><br>
flag means is as follows</p>
<pre><code>flag(4 bytes)
----------------------------------------------
offset:
	0  -----random
	1  ----- hard-code(0x42) or from [ver]
    2  -----calc by algorithm
    3  -----calc by algorithm
</code></pre>
<p>The first byte is randomly generated. The second byte is hard-coded 0x42 or specified by the [ver] field in the config file.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_ver.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_ver.png" class="kg-image"></a><br>
The 3rd and 4th bytes are obtained by the algorithm.</p>
<pre><code>ver algorithm
----------------------------------------------
	int first,sec;
	string ver=&quot;\x31\x3a\x76\x34\x3a\x00\x00&quot;s;
	cout &lt;&lt; &quot;Please input the two number: (0x00-0xff)&quot; &lt;&lt; endl;
	cin.unsetf(ios::hex);
	cin &gt;&gt; hex &gt;&gt; first &gt;&gt; sec;
	ver[5] = char(first);
	ver[6] = char(sec);
	uint32_t va = 0;
	for(int i = 0; i &lt; 7; i++)
	{	
		uint32_t tmp = int(ver[i]);
		tmp = tmp &lt;&lt; 8;
		tmp ^= va;
		int rnd = 8;
	while (rnd--)
	{
		if ((tmp &amp; 0xffff) &gt; 0x8000)
		{
			tmp *= 2;
			tmp ^= 0xffff8005;
		}
		else
			tmp *= 2;
	}
	va = tmp&amp;0xffff;
	}
	cout  &lt;&lt; hex  &lt;&lt; &quot;Final &quot; &lt;&lt;  va &lt;&lt; endl;
</code></pre>
<blockquote>
<p>Please input the two number: (0x00-0xff)<br>
0x44 0x42<br>
Final 1f71<br>
Enter 0x44 0x42, and get the <code>0x1f71</code> same result as in the packet.</p>
</blockquote>
<h4 id="networkrequest">Network Request</h4>
<p>The network requests received by Mozi nodes can be divided into two categories, DHT requests and non-DHT requests. According to the aforementioned node identification, DHT requests are then again divided into Mozi-DHT requests and non-Mozi-DHT requests. Mozi supports three types of them, including ping, find_node, and get_peers. For non-DHT requests, there are two types based on whether the network packet length is greater than 99 or not.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_net-1.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_net-1.png" class="kg-image"></a><br>
For Mozi, Different requests have different processing logic, see below<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_query.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_query.png" class="kg-image"></a></p>
<ul>
<li>Number 2: ping, DHT request, reply to pong directly according to standard DHT process.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_ping.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_ping.png" class="kg-image"></a></li>
<li>Number 3: find_node, DHT request.</li>
<li>Number 4: get_peers, DHT request.<br>
Mozi combines <code>find_node</code> and <code>get_peers</code> into one. If the request comes from the Mozi node, there is a certain probability to send its Config content to the other party; if the request comes from a non-Mozi node, it is processed according to the standard DHT process。<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_getnode.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_getnode.png" class="kg-image"></a></li>
</ul>
<pre><code>raw data, first 128 bytes:
00000000  64 31 3a 72 64 32 3a 69 64 32 30 3a 38 38 38 38  |d1:rd2:id20:8888|
00000010  38 38 38 38 b7 96 a0 9e 66 e1 71 98 e5 4d 3e 69  |8888·. .fáq.åM&gt;i|
00000020  35 3a 6e 6f 64 65 73 36 32 34 3a 15 15 29 d2 f3  |5:nodes624:..)Òó|
00000030  a3 f7 0c fe df 1a 5d bd 3f 32 46 76 5e 62 b7 b8  |£÷.þß.]½?2Fv^b·¸|
00000040  f0 94 78 a2 c4 37 5b 8e 2c 00 0b 20 12 07 e7 f4  |ð.x¢Ä7[.,.. ..çô|
00000050  bc dc 19 a2 83 2e 67 fb 7a 5e 50 22 07 75 e8 ef  |¼Ü.¢..gûz^P&quot;.uèï|
00000060  f9 93 4a e9 91 75 36 e4 76 57 4b 7c 51 7c ff f5  |ù.Jé.u6ävWK|Q|ÿõ|
00000070  f5 c4 57 f9 dc 62 35 b4 6a 5d 18 6b 54 3c ed e1  |õÄWùÜb5´j].kT&lt;íá|
00000080  a1 c8 56 a3 cf 28 6b fa 14 06 1a 3e 3b 01 a0 e3  |¡ÈV£Ï(kú...&gt;;. ã|

The encrypted Config is located after &quot;5:nodes624:&quot;, using xor key (4E 66 5A 8F 80 C8 AC 23 8D AC 47 06 D5 4F 6F 7E), the content after decryption:

raw data:
00000000  64 31 3a 72 64 32 3a 69 64 32 30 3a 38 38 38 38  |d1:rd2:id20:8888|
00000010  38 38 38 38 b7 96 a0 9e 66 e1 71 98 e5 4d 3e 69  |8888·. .fáq.åM&gt;i|
00000020  35 3a 6e 6f 64 65 73 36 32 34 3a 				   |5:nodes624:

configuration:
00000000  5b 73 73 5d 73 6b 5b 2f 73 73 5d 5b 68 70 5d 38  |[ss]sk[/ss][hp]8|
00000010  38 38 38 38 38 38 38 5b 2f 68 70 5d 5b 63 6f 75  |8888888[/hp][cou|
00000020  6e 74 5d 68 74 74 70 3a 2f 2f 69 61 2e 35 31 2e  |nt]http://ia.51.|
00000030  6c 61 2f 67 6f 31 3f 69 64 3d 32 30 31 39 38 35  |la/go1?id=201985|
00000040  32 37 26 70 75 3d 68 74 74 70 25 33 61 25 32 66  |27&amp;pu=http%3a%2f|

</code></pre>
<ul>
<li>Number 5: <code>announce_peer</code> not supported<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_ann.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_ann.png" class="kg-image"></a></li>
<li>Number 6: Non-DHT request. The data packet length is less than 99 bytes. When the node receives this request, it will send its config content to the requester.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_6proc.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_6proc.png" class="kg-image"></a></li>
<li>Number 7: Non-DHT request, the data packet length is greater than 99 bytes. When the node receives this request, it indicates that the received data is an encrypted Config file. For the execution process, refer to the previous section.<br>
<a href="https://blog.netlab.360.com/content/images/2019/12/mozi_payload.png"><img src="https://blog.netlab.360.com/content/images/2019/12/mozi_payload.png" class="kg-image"></a></li>
</ul>
<h2 id="suggestions">Suggestions</h2>
<p>We recommend that users update the patch in a timely manner, and determine whether they are infected by looking up the process and file name, and HTTP, DHT network connection characteristics created by Mozi Botnet.</p>
<h2 id="contactus">Contact us</h2>
<p>Readers are always welcomed to reach us on <a href="https://twitter.com/360Netlab?ref=blog.netlab.360.com">twitter</a>, WeChat 360Netlab or email to netlab at 360 dot cn.</p>
<h2 id="ioclist">IoC list</h2>
<p>Sample MD5:</p>
<pre><code>eda730498b3d0a97066807a2d98909f3
849b165f28ae8b1cebe0c7430f44aff3
</code></pre>
<!--kg-card-end: markdown-->
      </section>



      <div id="disqus_thread" class="disqus-comments gh-canvas"></div>
      <script>
        var disqus_config = function () {
          this.page.url = "https://blog.netlab.360.com/mozi-another-botnet-using-dht/";
          this.page.identifier = "ghost-5e0082e77646030007b262a1"
        };
        (function () {
          var d = document, s = d.createElement('script');
          s.src = 'https://blog-netlab-360.disqus.com/embed.js';
          s.setAttribute('data-timestamp', +new Date());
          (d.head || d.body).appendChild(s);
        })();
      </script>
    </article>

  </main>


    <aside class="read-more-wrap outer">
      <div class="inner">
        <div class="read-more-feed">
            <article class="read-more-card" 
                  style="background-image: url(/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg)" 
              >
              <header class="read-more-card-header">
                <small class="read-more-card-header-sitetitle">&mdash; 360 Netlab Blog - Network Security Research Lab at 360 &mdash;</small>
                <h3 class="read-more-card-header-title"><a href="/tag/botnet/">Botnet</a></h3>
              </header>
              <div class="read-more-divider"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5"/></svg>
</div>
              <div class="read-more-card-content">
                <ul>
                  <li><a href="/911s5/">僵尸网络911 S5的数字遗产</a></li>
                  <li><a href="/headsup_xdr33_variant_of_ciahive_emeerges/">Heads up! Xdr33, A Variant Of CIA’s HIVE  Attack Kit Emerges</a></li>
                  <li><a href="/warning-hive-variant-xdr33-is-coming_cn/">警惕：魔改后的CIA攻击套件Hive进入黑灰产领域</a></li>
                </ul>
              </div>
              <footer class="read-more-card-footer">
                <a href="/tag/botnet/">See all 114 posts →</a>
              </footer>
            </article>

          
<article class="post-card post tag-lilin-dvr tag-en tag-0-day tag-botnet tag-chalubo tag-fbot tag-moobot tag-honeypot tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/multiple-botnets-are-spreading-using-lilin-dvr-0-day-en/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">LILIN DVR</span>
        </div>
        <h2 class="post-card-title">
          Multiple botnets are spreading using LILIN DVR 0-day
        </h2>
      </header>
      <div class="post-card-excerpt">Author：Yanlong Ma，Lingming Tu，Genshen Ye，Hongda Liu





When we talk about DDos botnet, we tend to think the typical scenario, some mediocre, code-borrowing scripts target old vulnerabilities. But things actually have started to change, we noticed more and more attackers beginning to use 0-day vulnerabilities.




Background


Starting from</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Alex.Turing
          </div>

          <a href="/author/alex/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
          </a>
        </li>
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Genshen Ye
          </div>

          <a href="/author/yegenshen/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2017/10/1662072805.jpg" alt="Genshen Ye" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2020-03-20">Mar 20, 2020</time>
      <span class="post-card-meta-length">4 min read</span>
    </footer>

  </div>

</article>
          
<article class="post-card post tag-botnet tag-ddos tag-p2p tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/p2p-botnet-mozi/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">Botnet</span>
        </div>
        <h2 class="post-card-title">
          P2P Botnet： Ｍozi分析报告
        </h2>
      </header>
      <div class="post-card-excerpt">Mozi Botnet是Hajime之后，另一个基于DHT协议实现的P2P Botnet</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Alex.Turing
          </div>

          <a href="/author/alex/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
          </a>
        </li>
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Hui Wang
          </div>

          <a href="/author/huiwang/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2017/05/WechatIMG1.jpeg" alt="Hui Wang" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2019-12-23">Dec 23, 2019</time>
      <span class="post-card-meta-length">13 min read</span>
    </footer>

  </div>

</article>
        </div>
      </div>
    </aside>



    </div>

    <footer class="site-footer outer">
        <div class="inner">
            <section class="copyright"><a href="https://blog.netlab.360.com">360 Netlab Blog - Network Security Research Lab at 360</a> &copy; 2024</section>
            <div><a href="https://ghost.org/" target="_blank" rel="noopener">Powered by Ghost</a></div>
        </div>
    </footer>

</div>


<script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous">
</script>
<script src="/assets/built/casper.js?v=42b57cac00"></script>
<script>
$(document).ready(function () {
    // Mobile Menu Trigger
    $('.gh-burger').click(function () {
        $('body').toggleClass('gh-head-open');
    });
    // FitVids - Makes video embeds responsive
    $(".gh-content").fitVids();

    // floating-header
    // Start fitVids
      var $postContent = $(".gh-content");
      $postContent.fitVids();
      // End fitVids

      var progressBar = document.querySelector('#reading-progress');
      var header = document.querySelector('.floating-header');
      var title = document.querySelector('.article-title');

      var lastScrollY = window.scrollY;
      var lastWindowHeight = window.innerHeight;
      var lastDocumentHeight = $(document).height();
      var ticking = false;

      function onScroll() {
        lastScrollY = window.scrollY;
        requestTick();
      }

      function onResize() {
        lastWindowHeight = window.innerHeight;
        lastDocumentHeight = $(document).height();
        requestTick();
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(update);
        }
        ticking = true;
      }

      function update() {
        var trigger = title.getBoundingClientRect().top + window.scrollY;
        var triggerOffset = title.offsetHeight + 35;
        var progressMax = lastDocumentHeight - lastWindowHeight;

        // show/hide floating header
        if (lastScrollY >= trigger + triggerOffset) {
          header.classList.add('floating-active');
        } else {
          header.classList.remove('floating-active');
        }

        progressBar.setAttribute('max', progressMax);
        progressBar.setAttribute('value', lastScrollY);

        ticking = false;
      }

      window.addEventListener('scroll', onScroll, { passive: true });
      window.addEventListener('resize', onResize, false);

      update();
});
</script>



</body>
</html>
