<!DOCTYPE html>
<html lang="en-GB">

  <head>
    <!-- General meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">

    

    
      <!-- Begin Jekyll SEO tag v2.8.0 -->
<title>Conti Ransomware | Chuong Dong</title>
<meta name="generator" content="Jekyll v3.9.5" />
<meta property="og:title" content="Conti Ransomware" />
<meta name="author" content="Chuong Dong" />
<meta property="og:locale" content="en_GB" />
<meta name="description" content="Malware Analysis Report - Conti Ransomware" />
<meta property="og:description" content="Malware Analysis Report - Conti Ransomware" />
<link rel="canonical" href="https://cdong1012.github.io//reverse%20engineering/2020/12/15/ContiRansomware/" />
<meta property="og:url" content="https://cdong1012.github.io//reverse%20engineering/2020/12/15/ContiRansomware/" />
<meta property="og:site_name" content="Chuong Dong" />
<meta property="og:image" content="https://cdong1012.github.io//assets/logos/kunal-logo.png" />
<meta property="og:type" content="article" />
<meta property="article:published_time" content="2020-12-15T00:00:00-05:00" />
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content="https://cdong1012.github.io//assets/logos/kunal-logo.png" />
<meta property="twitter:title" content="Conti Ransomware" />
<meta name="twitter:site" content="@cPeterr" />
<meta name="twitter:creator" content="@Chuong Dong" />
<script type="application/ld+json">
{"@context":"https://schema.org","@type":"BlogPosting","author":{"@type":"Person","name":"Chuong Dong"},"dateModified":"2020-12-15T00:00:00-05:00","datePublished":"2020-12-15T00:00:00-05:00","description":"Malware Analysis Report - Conti Ransomware","headline":"Conti Ransomware","image":"https://cdong1012.github.io//assets/logos/kunal-logo.png","mainEntityOfPage":{"@type":"WebPage","@id":"https://cdong1012.github.io//reverse%20engineering/2020/12/15/ContiRansomware/"},"publisher":{"@type":"Organization","logo":{"@type":"ImageObject","url":"https://cdong1012.github.io//assets/logos/logo-cdong.gif"},"name":"Chuong Dong"},"url":"https://cdong1012.github.io//reverse%20engineering/2020/12/15/ContiRansomware/"}</script>
<!-- End Jekyll SEO tag -->

    

    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#242e2b"/>

    
      
<style>/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */@import url("https://fonts.googleapis.com/css?family=Karla:700,700");@import url("https://fonts.googleapis.com/css?family=Space Mono:400,700");html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:bold}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}*{box-sizing:border-box}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}html,body{height:100%}a img{border:none}blockquote{quotes:none}blockquote:before,blockquote:after{content:'';content:none}table{border-collapse:collapse;border-spacing:0}caption,th,td{text-align:left;font-weight:normal;vertical-align:middle}html{font-size:75%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}@media screen and (min-width: 40em){html{font-size:87.5%}}@media screen and (min-width: 50em){html{font-size:93.75%}}@media screen and (min-width: 64em){html{font-size:106.25%}}@media screen and (min-width: 100em){html{font-size:118.75%}}body{font-size:1.3333333333rem;font-family:Space Mono, monospace;font-style:normal;font-weight:400;line-height:2rem}@media screen and (min-width: 40em){body{font-size:1.2142857143rem}}@media screen and (min-width: 50em){body{font-size:1.2rem}}@media screen and (min-width: 64em){body{font-size:1.1764705882rem}}@media screen and (min-width: 100em){body{font-size:1.1578947368rem}}a{color:#45a29e;text-decoration:none;transition:color .1s, background-color .1s}a:hover,a:active,a:focus{color:#66fcf1;text-decoration:none}.typeset p a,.typeset li a{background-image:linear-gradient(to bottom, transparent 50%, #45a29e 50%);background-position:0 93%;background-repeat:repeat-x;background-size:100% 0.15rem;text-shadow:0.1rem 0 #161820,0.15rem 0 #161820,-0.1rem 0 #161820,-0.15rem 0 #161820}.typeset p a:hover,.typeset p a:active,.typeset p a:focus,.typeset li a:hover,.typeset li a:active,.typeset li a:focus{background-image:linear-gradient(to bottom, transparent 50%, #66fcf1 50%)}.typeset p{line-height:2rem;margin-bottom:1.49999rem;padding-top:.50001rem;font-feature-settings:'kern', 'onum', 'liga'}@media screen and (min-width: 40em){.typeset p{margin-bottom:1.4553471429rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset p{margin-bottom:1.44999rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset p{margin-bottom:1.4411664706rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset p{margin-bottom:1.4342005263rem;padding-top:.5657994737rem}}.typeset h1,.typeset h2,.typeset h3,.typeset h4,.typeset h5,.typeset h6{color:#66fcf1;font-family:"Karla", monospace;font-feature-settings:'dlig', 'liga', 'lnum', 'kern';font-style:normal;font-weight:700}.typeset h1,.typeset .alpha{line-height:3rem;font-size:2.3333333333rem;margin-bottom:.37499rem;padding-top:.62501rem}@media screen and (min-width: 40em){.typeset h1,.typeset .alpha{font-size:2.1428571429rem;margin-bottom:.3035614286rem;padding-top:.6964385714rem}}@media screen and (min-width: 50em){.typeset h1,.typeset .alpha{font-size:2.1333333333rem;margin-bottom:.29999rem;padding-top:.70001rem}}@media screen and (min-width: 64em){.typeset h1,.typeset .alpha{font-size:2.3529411765rem;margin-bottom:.3823429412rem;padding-top:.6176570588rem}}@media screen and (min-width: 100em){.typeset h1,.typeset .alpha{font-size:2.6315789474rem;margin-bottom:.4868321053rem;padding-top:.5131678947rem}}.typeset h2,.typeset .beta{line-height:3rem;font-size:2.0833333333rem;margin-bottom:.28124rem;padding-top:.71876rem}@media screen and (min-width: 40em){.typeset h2,.typeset .beta{font-size:1.9rem;margin-bottom:.21249rem;padding-top:.78751rem}}@media screen and (min-width: 50em){.typeset h2,.typeset .beta{font-size:1.8733333333rem;margin-bottom:.20249rem;padding-top:.79751rem}}@media screen and (min-width: 64em){.typeset h2,.typeset .beta{font-size:2.0882352941rem;margin-bottom:.2830782353rem;padding-top:.7169217647rem}}@media screen and (min-width: 100em){.typeset h2,.typeset .beta{font-size:2.3105263158rem;margin-bottom:.3664373684rem;padding-top:.6335626316rem}}.typeset h3,.typeset .gamma{line-height:3rem;font-size:1.8666666667rem;margin-bottom:.19999rem;padding-top:.80001rem}@media screen and (min-width: 40em){.typeset h3,.typeset .gamma{font-size:1.7142857143rem;margin-bottom:.1428471429rem;padding-top:.8571528571rem}}@media screen and (min-width: 50em){.typeset h3,.typeset .gamma{font-size:1.7066666667rem;margin-bottom:.13999rem;padding-top:.86001rem}}@media screen and (min-width: 64em){.typeset h3,.typeset .gamma{font-size:1.7647058824rem;margin-bottom:.1617547059rem;padding-top:.8382452941rem}}@media screen and (min-width: 100em){.typeset h3,.typeset .gamma{font-size:1.8578947368rem;margin-bottom:.1967005263rem;padding-top:.8032994737rem}}.typeset h4,.typeset .delta{line-height:2rem;font-size:1.6666666667rem;margin-bottom:-.37501rem;padding-top:.37501rem}@media screen and (min-width: 40em){.typeset h4,.typeset .delta{font-size:1.5214285714rem;margin-bottom:-.4294742857rem;padding-top:.4294742857rem}}@media screen and (min-width: 50em){.typeset h4,.typeset .delta{font-size:1.5rem;margin-bottom:-.43751rem;padding-top:.43751rem}}@media screen and (min-width: 64em){.typeset h4,.typeset .delta{font-size:1.5705882353rem;margin-bottom:-.4110394118rem;padding-top:.4110394118rem}}@media screen and (min-width: 100em){.typeset h4,.typeset .delta{font-size:1.6368421053rem;margin-bottom:-.3861942105rem;padding-top:.3861942105rem}}.typeset h5,.typeset .epsilon{line-height:2rem;font-size:1.4916666667rem;margin-bottom:-.440635rem;padding-top:.440635rem}@media screen and (min-width: 40em){.typeset h5,.typeset .epsilon{font-size:1.3714285714rem;margin-bottom:-.4857242857rem;padding-top:.4857242857rem}}@media screen and (min-width: 50em){.typeset h5,.typeset .epsilon{font-size:1.3666666667rem;margin-bottom:-.48751rem;padding-top:.48751rem}}@media screen and (min-width: 64em){.typeset h5,.typeset .epsilon{font-size:1.3235294118rem;margin-bottom:-.5036864706rem;padding-top:.5036864706rem}}@media screen and (min-width: 100em){.typeset h5,.typeset .epsilon{font-size:1.3157894737rem;margin-bottom:-.5065889474rem;padding-top:.5065889474rem}}.typeset h6,.typeset .zeta{line-height:2rem;font-size:1.3333333333rem;margin-bottom:-.50001rem;padding-top:.50001rem}@media screen and (min-width: 40em){.typeset h6,.typeset .zeta{font-size:1.2142857143rem;margin-bottom:-.5446528571rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset h6,.typeset .zeta{font-size:1.2rem;margin-bottom:-.55001rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset h6,.typeset .zeta{font-size:1.1764705882rem;margin-bottom:-.5588335294rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset h6,.typeset .zeta{font-size:1.1578947368rem;margin-bottom:-.5657994737rem;padding-top:.5657994737rem}}.typeset ul,.typeset ol{line-height:2rem;margin-bottom:1.49999rem;padding-top:.50001rem}@media screen and (min-width: 40em){.typeset ul,.typeset ol{margin-bottom:1.4553471429rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset ul,.typeset ol{margin-bottom:1.44999rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset ul,.typeset ol{margin-bottom:1.4411664706rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset ul,.typeset ol{margin-bottom:1.4342005263rem;padding-top:.5657994737rem}}.typeset ul li,.typeset ol li{font-feature-settings:'kern', 'onum', 'liga';margin-left:2rem}@media screen and (min-width: 40em){.typeset ul li,.typeset ol li{margin-left:0}}.typeset ul li ol,.typeset ul li ul,.typeset ol li ol,.typeset ol li ul{padding-top:1rem;margin-bottom:1rem;margin-left:2rem}.typeset ol{list-style-type:none}.typeset ol li{counter-increment:top-level}.typeset ol li:before{content:counter(top-level) ".";font-feature-settings:'lnum', 'tnum';margin-left:-3rem;position:absolute;text-align:right;width:2em}.typeset ol li ul li:before{content:''}.typeset ol li ul li ol li{counter-increment:alt-level}.typeset ol li ul li ol li:before{content:counter(alt-level) "."}.typeset ol li ol li{counter-increment:sub-level}.typeset ol li ol li:before{content:counter(top-level) "." counter(sub-level)}.typeset ol li ol li ul li:before{content:''}.typeset ol li ol li ol li{counter-increment:sub-sub-level}.typeset ol li ol li ol li:before{content:counter(top-level) "." counter(sub-level) "." counter(sub-sub-level)}.typeset dl{line-height:2rem;margin-bottom:1.49999rem;padding-top:.50001rem}@media screen and (min-width: 40em){.typeset dl{margin-bottom:1.4553471429rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset dl{margin-bottom:1.44999rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset dl{margin-bottom:1.4411664706rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset dl{margin-bottom:1.4342005263rem;padding-top:.5657994737rem}}.typeset dl dt,.typeset dl dd{font-feature-settings:'kern', 'onum', 'liga';margin-left:2rem}@media screen and (min-width: 40em){.typeset dl dt,.typeset dl dd{margin-left:0}}.typeset dl dt{font-weight:700}.typeset dl dd+dt{padding-top:1rem}.typeset table{line-height:2rem;font-size:1.1916666667rem;margin-bottom:-.553135rem;padding-top:.553135rem;font-family:"Karla", monospace;font-feature-settings:'liga', 'lnum', 'tnum', 'kern';font-style:normal;font-weight:400;width:100%}@media screen and (min-width: 40em){.typeset table{font-size:1.0928571429rem;margin-bottom:-.5901885714rem;padding-top:.5901885714rem}}@media screen and (min-width: 50em){.typeset table{font-size:1.0866666667rem;margin-bottom:-.59251rem;padding-top:.59251rem}}@media screen and (min-width: 64em){.typeset table{font-size:.9941176471rem;margin-bottom:-.6272158824rem;padding-top:.6272158824rem}}@media screen and (min-width: 100em){.typeset table{font-size:.9263157895rem;margin-bottom:-.6526415789rem;padding-top:.6526415789rem}}.typeset table thead th{line-height:2rem;font-size:1.3333333333rem;margin-bottom:-.50001rem;padding-top:.50001rem;padding-bottom:1px}@media screen and (min-width: 40em){.typeset table thead th{font-size:1.2142857143rem;margin-bottom:-.5446528571rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset table thead th{font-size:1.2rem;margin-bottom:-.55001rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset table thead th{font-size:1.1764705882rem;margin-bottom:-.5588335294rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset table thead th{font-size:1.1578947368rem;margin-bottom:-.5657994737rem;padding-top:.5657994737rem}}.typeset b,.typeset strong,.typeset .bold{font-weight:700}.typeset em,.typeset i,.typeset .italic{font-style:italic}.typeset small,.typeset .caption{font-size:1.0666666667rem;font-family:"Karla", monospace;font-style:normal;font-weight:400}@media screen and (min-width: 40em){.typeset small,.typeset .caption{font-size:.9714285714rem}}@media screen and (min-width: 50em){.typeset small,.typeset .caption{font-size:.96rem}}@media screen and (min-width: 64em){.typeset small,.typeset .caption{font-size:.8823529412rem}}@media screen and (min-width: 100em){.typeset small,.typeset .caption{font-size:.8210526316rem}}.typeset small{line-height:1rem}.typeset .caption{line-height:2rem;margin-bottom:1.39999rem;padding-top:.60001rem;color:#529e99}@media screen and (min-width: 40em){.typeset .caption{margin-bottom:1.3642757143rem;padding-top:.6357242857rem}}@media screen and (min-width: 50em){.typeset .caption{margin-bottom:1.35999rem;padding-top:.64001rem}}@media screen and (min-width: 64em){.typeset .caption{margin-bottom:1.3308723529rem;padding-top:.6691276471rem}}@media screen and (min-width: 100em){.typeset .caption{margin-bottom:1.3078847368rem;padding-top:.6921152632rem}}.typeset h1+.caption,.typeset .alpha+.caption,.typeset h2+.caption,.typeset .beta+.caption,.typeset h3+.caption,.typeset .gamma+.caption{margin-top:-1rem}.typeset .delta+.caption,.typeset .epsilon+.caption,.typeset .zeta+.caption{margin-top:0rem}.typeset blockquote p{border-left:0.15rem solid #45a29e;font-style:italic;padding-left:1rem;margin-bottom:1.99999rem;padding-bottom:.50001rem}@media screen and (min-width: 40em){.typeset blockquote p{margin-bottom:1.9107042857rem;padding-bottom:.5446528571rem}}@media screen and (min-width: 50em){.typeset blockquote p{margin-bottom:1.89999rem;padding-bottom:.55001rem}}@media screen and (min-width: 64em){.typeset blockquote p{margin-bottom:1.8823429412rem;padding-bottom:.5588335294rem}}@media screen and (min-width: 100em){.typeset blockquote p{margin-bottom:1.8684110526rem;padding-bottom:.5657994737rem}}@media screen and (min-width: 40em){.typeset blockquote{margin-left:-1rem}}.typeset hr{background-image:linear-gradient(to bottom, transparent 50%, #529e99 50%);background-position:0 50%;background-repeat:repeat-x;background-size:100% 0.15rem;border:0;margin:0;padding-bottom:3rem;padding-top:0.5rem}.typeset code,.typeset pre{background-color:#1f2833;font-family:Menlo, monospace}.typeset pre{display:block;margin-bottom:2rem;padding:1rem;white-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word}.typeset code{font-size:1.0666666667rem;line-height:1rem}@media screen and (min-width: 40em){.typeset code{font-size:.9714285714rem}}@media screen and (min-width: 50em){.typeset code{font-size:.96rem}}@media screen and (min-width: 64em){.typeset code{font-size:.8823529412rem}}@media screen and (min-width: 100em){.typeset code{font-size:.8210526316rem}}.typeset .upper{font-kerning:normal;letter-spacing:0.1rem;text-transform:uppercase}.typeset .small-caps{font-feature-settings:'smcp', 'kern';font-kerning:normal;letter-spacing:0.1rem}.typeset .lining-numerals{font-feature-settings:'lnum', 'kern'}.typeset .oldstyle-numerals{font-feature-settings:'onum', 'kern'}.hll{background-color:#c510bc}.c{color:#54dbf3;font-style:italic}.err{color:#a61717;background-color:#e3d2d2}.k{color:#c59659;font-weight:bold}.o{color:#c59659;font-weight:bold}.cm{color:#999988;font-style:italic}.cp{color:#999999;font-weight:bold;font-style:italic}.c1{color:#999988;font-style:italic}.cs{color:#999999;font-weight:bold;font-style:italic}.gd{color:#000000;background-color:#fdd}.ge{color:#000000;font-style:italic}.gr{color:#a00}.gh{color:#999}.gi{color:#000000;background-color:#dfd}.go{color:#888}.gp{color:#555}.gs{font-weight:bold}.gu{color:#aaa}.gt{color:#a00}.kc{color:#000000;font-weight:bold}.kd{color:#000000;font-weight:bold}.kn{color:#000000;font-weight:bold}.kp{color:#000000;font-weight:bold}.kr{color:#000000;font-weight:bold}.kt{color:#445588;font-weight:bold}.m{color:#099}.s{color:#fce773}.na{color:teal}.nb{color:#0086B3}.nc{color:#445588;font-weight:bold}.no{color:teal}.nd{color:#3c5d5d;font-weight:bold}.ni{color:purple}.ne{color:#99b898;font-weight:bold}.nf{color:#99b898;font-weight:bold}.nl{color:#99b898;font-weight:bold}.nn{color:#555}.nt{color:#ff847c}.nv{color:teal}.ow{color:#000000;font-weight:bold}.w{color:#bbb}.mf{color:#099}.mh{color:#099}.mi{color:#099}.mo{color:#099}.sb{color:#fce773}.sc{color:#fce773}.sd{color:#fce773}.s2{color:#fce773}.se{color:#fce773}.sh{color:#fce773}.si{color:#773f00}.sx{color:#fce773}.sr{color:#009926}.s1{color:#ff847c}.ss{color:#990073}.bp{color:#999}.vc{color:#2e878a}.vg{color:#2e878a}.vi{color:#2e878a}.il{color:#099}body{background:#161820;color:#efeff0;height:100%;display:flex;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;overflow-x:hidden}.container{width:90%;max-width:1200px;margin:0 auto}.header .nav,.footer .nav{text-align:right}.header .logo,.footer .logo{-webkit-box-flex:0;-webkit-flex:0 0 auto;-moz-box-flex:0;-moz-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto}.header .container,.footer .container{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-flex-direction:row;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;-webkit-justify-content:space-between;-moz-justify-content:space-between;justify-content:space-between;padding:1rem 0}@media screen and (min-width: 40em){.header .container,.footer .container{-webkit-box-align:center;-ms-flex-align:center;-webkit-align-items:center;-moz-align-items:center;align-items:center}}.header .nav{display:flex;flex-direction:column-reverse;align-items:flex-end;justify-content:flex-end;overflow:hidden}.feature{padding-bottom:.4rem;margin-bottom:1.6rem;text-align:center;background:#c5c6c7;background-size:cover;background-position:center}.feature .container{min-height:40vh;max-width:60%;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;-moz-justify-content:center;justify-content:center}.logo{display:inline-block;line-height:0;max-height:7rem;display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;-webkit-align-items:center;-moz-align-items:center;align-items:center}.logo img{max-height:7rem}.nav a{padding:.2rem}.nav--social a{display:inline-block;line-height:1}.small{padding-top:.8rem;color:#529e99;display:inline-block}.footer{background:#161820;color:#529e99}.footer a{color:#529e99}.footer a:hover{color:#161820}.footer .container{-webkit-flex-wrap:wrap;-moz-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.footer .small{padding-top:0}.nav--paginator{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;-webkit-justify-content:space-between;-moz-justify-content:space-between;justify-content:space-between;color:#529e99;text-align:center}.pagination{min-width:20%}.main{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-webkit-flex:1 0 auto;-moz-box-flex:1;-moz-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;-webkit-box-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;-moz-justify-content:flex-start;justify-content:flex-start;margin-bottom:1.6rem}@media screen and (min-width: 40em){.main{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;-moz-justify-content:center;justify-content:center;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-flex-direction:row;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row}}.header,.feature,.footer{-webkit-box-flex:0;-webkit-flex:0 0 auto;-moz-box-flex:0;-moz-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto}@media screen and (min-width: 40em){.content{width:85%}}.share .button{margin-right:.3rem}@media screen and (min-width: 40em){.aside{max-width:20%;margin-left:5%;-webkit-box-flex:1;-webkit-flex:1 0 auto;-moz-box-flex:1;-moz-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;opacity:0.7;transition:opacity .1s}.aside .section{position:sticky;top:0}.aside--left{margin-left:0;margin-right:5%;order:-1}.aside:hover{opacity:1}}.section{margin:0}.list{list-style:none}.list--nav{overflow:hidden;margin-bottom:var(--listHeight, 0)}.list .item--post,.list .item--result,.list .item--category{margin-left:0}@media screen and (min-width: 40em){.item--nav{margin-left:.4rem;display:inline-block}}.item--nav:first-of-type{margin-left:0}.item--current a{color:#529e99}a .icon{transition:fill .1s}a .icon:hover{fill:currentColor}.icon{vertical-align:middle;width:1.1em;height:1.1em;fill:CurrentColor}img{max-width:100%;height:auto}.figure{line-height:0}.figure--left{float:left;padding-right:.8rem}.figure--right{float:right;text-align:right;padding-left:.8rem}.figure--center{text-align:center;clear:both}.video,.map{position:relative;padding-bottom:56.25%;height:0}.video iframe,.map iframe{position:absolute;top:0;left:0;width:100%;height:100%}.map{padding-bottom:70%}.figure,.video,.map,.form{margin-bottom:.8rem}audio,video{width:100%}.form{position:relative}.form__legend{font-style:italic;color:#529e99;position:absolute;overflow:hidden;right:0;clip:rect(0 0 0 0)}button,.button,input[type="text"],input[type="email"],input[type="search"],input[type="submit"],input[type="color"],textarea,select{padding:.6rem 1.2rem;margin-bottom:.6rem;transition:color .1s, background-color .1s, border .1s;line-height:inherit;border:none;box-shadow:none;border-radius:0;-webkit-appearance:none}button .icon,.button .icon,input[type="text"] .icon,input[type="email"] .icon,input[type="search"] .icon,input[type="submit"] .icon,input[type="color"] .icon,textarea .icon,select .icon{margin:0 0 .35rem}input[type="submit"],button,.button{cursor:pointer;display:inline-block;color:#161820;background:#45a29e;transition:box-shadow .1s;will-change:box-shadow;box-shadow:inset 0 0 0 2rem transparent}input[type="submit"]:hover,button:hover,.button:hover{box-shadow:inset 0 0 0 2rem rgba(0,0,0,0.25)}input[type="submit"]:active,input[type="submit"]:focus,button:active,button:focus,.button:active,.button:focus{box-shadow:inset 0 0 0 2rem rgba(0,0,0,0.25)}.button--nav{background:none;color:#45a29e;margin-bottom:0;min-height:4rem;min-width:4rem}@media screen and (min-width: 40em){.button--nav{display:none}}.button--nav:hover,.button--nav:focus{box-shadow:none;color:#66fcf1}a:focus,a:hover:focus,button:focus,button:hover:focus,.button:focus,.button:hover:focus,input:focus,input:hover:focus,textarea:focus,textarea:hover:focus,select:focus,select:hover:focus{outline:solid 0.12rem #45a29e;outline-offset:-.12rem}a:hover:focus{outline:none}input[type="text"],input[type="email"],input[type="search"],input[type="color"],textarea,select{width:100%;border:1px solid #529e99}input[type="text"]:hover,input[type="email"]:hover,input[type="search"]:hover,input[type="color"]:hover,textarea:hover,select:hover{border-color:#efeff0}select{background:#1f2833}textarea{resize:vertical}label{line-height:2rem;margin-bottom:1.49999rem;padding-top:.50001rem}@media screen and (min-width: 40em){label{margin-bottom:1.4553471429rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){label{margin-bottom:1.44999rem;padding-top:.55001rem}}@media screen and (min-width: 64em){label{margin-bottom:1.4411664706rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){label{margin-bottom:1.4342005263rem;padding-top:.5657994737rem}}code{padding:.12rem .2rem;color:#66fcf1}pre code{padding:0}.required{color:#fff}::-webkit-input-placeholder{opacity:0.5}::-moz-placeholder{opacity:0.5}:-ms-input-placeholder{opacity:0.5}:-moz-placeholder{opacity:0.5}::selection{background:#66fcf1;color:#161820;text-shadow:none}.typeset a>code{text-shadow:none}.typeset .button,.typeset button{background-image:none;text-shadow:none;color:#161820}.typeset .button:hover,.typeset .button:active,.typeset .button:focus,.typeset button:hover,.typeset button:active,.typeset button:focus{background-image:none;color:#161820}.typeset hr{width:100%}.typeset li>p{padding:0;margin:0}.typeset .nav a{padding-left:0;padding-right:0;margin-left:.2rem;margin-right:.2rem}.typeset pre{white-space:pre;overflow-x:scroll}</style>


    

    
  
    <link rel="icon" type="image/png" href="/assets/logos/16x.png" sizes="16x16">
    <link rel="apple-touch-icon" sizes="16x16" href="/assets/logos/16x.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/32x.png" sizes="32x32">
    <link rel="apple-touch-icon" sizes="32x32" href="/assets/logos/32x.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/96x.png" sizes="96x96">
    <link rel="apple-touch-icon" sizes="96x96" href="/assets/logos/96x.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/120.png" sizes="120x120">
    <link rel="apple-touch-icon" sizes="120x120" href="/assets/logos/120.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/144.png" sizes="144x144">
    <link rel="apple-touch-icon" sizes="144x144" href="/assets/logos/144.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/180.png" sizes="180x180">
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/logos/180.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/512.png" sizes="512x512">
    <link rel="apple-touch-icon" sizes="512x512" href="/assets/logos/512.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/1024.png" sizes="1024x1024">
    <link rel="apple-touch-icon" sizes="1024x1024" href="/assets/logos/1024.png">
  

<link rel="shortcut icon" href="/assets/logos/logo-cdong.gif">


    <!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-168923617-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-168923617-1');
  gtag('config', 'UA-168923617-1', {
    'anonymize_ip': true
  });
</script>


    <!-- Overwrite this file with code you want before the closing head tag -->

    <meta name="google-site-verification" content="fhiMUAXjII16BlWNx0x4tY2MXKJwEcdDVjILoXGUXYA" />
  </head>
  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-168923617-1"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'UA-168923617-1');
  </script>


  <body class="layout-post  conti-ransomware">
    <svg xmlns="http://www.w3.org/2000/svg" style="height: 0; position: absolute" xmlns:xlink="http://www.w3.org/1999/xlink">
  <symbol id="codepen" viewbox="0 0 16 16"><path d="M15.988 5.443c-.004-.02-.007-.04-.012-.058l-.01-.033c-.006-.017-.012-.034-.02-.05-.003-.012-.01-.023-.014-.034l-.023-.045-.02-.032-.03-.04-.024-.03c-.01-.013-.022-.026-.034-.038l-.027-.027-.04-.032-.03-.024-.012-.01L8.38.117c-.23-.155-.53-.155-.76 0L.305 4.99.296 5c-.012.007-.022.015-.032.023-.014.01-.027.02-.04.032l-.027.027-.034.037-.024.03-.03.04c-.006.012-.013.022-.02.033l-.023.045-.015.034c-.007.016-.012.033-.018.05l-.01.032c-.005.02-.01.038-.012.058l-.006.03C.002 5.5 0 5.53 0 5.56v4.875c0 .03.002.06.006.09l.007.03c.003.02.006.04.013.058l.01.033c.006.018.01.035.018.05l.015.033c.006.016.014.03.023.047l.02.03c.008.016.018.03.03.042.007.01.014.02.023.03.01.012.02.025.034.036.01.01.018.02.028.026l.04.033.03.023.01.01 7.31 4.876c.116.078.248.117.382.116.134 0 .266-.04.38-.116l7.314-4.875.01-.01c.012-.007.022-.015.032-.023.014-.01.027-.02.04-.032l.027-.027.034-.037.024-.03.03-.04.02-.032.023-.046.015-.033.018-.052.01-.033c.005-.02.01-.038.013-.058 0-.01.003-.02.004-.03.004-.03.006-.06.006-.09V5.564c0-.03-.002-.06-.006-.09l-.007-.03zM8 9.626L5.568 8 8 6.374 10.432 8 8 9.626zM7.312 5.18l-2.98 1.993-2.406-1.61 5.386-3.59v3.206zM3.095 8l-1.72 1.15v-2.3L3.095 8zm1.237.828l2.98 1.993v3.208l-5.386-3.59 2.406-1.61zm4.355 1.993l2.98-1.993 2.407 1.61-5.387 3.59v-3.206zM12.905 8l1.72-1.15v2.3L12.905 8zm-1.237-.827L8.688 5.18V1.97l5.386 3.59-2.406 1.61z" fill-rule="nonzero"></path></symbol>
  <symbol id="dribbble" viewbox="0 0 16 16"><path d="M8 16c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm6.747-6.905c-.234-.074-2.115-.635-4.257-.292.894 2.456 1.258 4.456 1.328 4.872 1.533-1.037 2.624-2.68 2.93-4.58zM10.67 14.3c-.102-.6-.5-2.688-1.46-5.18l-.044.014C5.312 10.477 3.93 13.15 3.806 13.4c1.158.905 2.614 1.444 4.194 1.444.947 0 1.85-.194 2.67-.543zm-7.747-1.72c.155-.266 2.03-3.37 5.555-4.51.09-.03.18-.056.27-.08-.173-.39-.36-.778-.555-1.16C4.78 7.85 1.47 7.807 1.17 7.8l-.003.208c0 1.755.665 3.358 1.756 4.57zM1.31 6.61c.307.005 3.122.017 6.318-.832-1.132-2.012-2.353-3.705-2.533-3.952-1.912.902-3.34 2.664-3.784 4.785zM6.4 1.368c.188.253 1.43 1.943 2.548 4 2.43-.91 3.46-2.293 3.582-2.468C11.323 1.827 9.736 1.176 8 1.176c-.55 0-1.087.066-1.6.19zm6.89 2.322c-.145.194-1.29 1.662-3.816 2.694.16.325.31.656.453.99.05.117.1.235.147.352 2.274-.286 4.533.172 4.758.22-.015-1.613-.59-3.094-1.543-4.257z"></path></symbol>
  <symbol id="designernews" viewbox="0 0 16 16"><path d="M7.514 7.988c0-2.555-1.57-4.287-4.56-4.287H0v8.6h3.016c2.903 0 4.498-1.75 4.498-4.31zM5.37 8c0 1.844-.946 2.642-2.467 2.642H2.13V5.358h.773C4.36 5.358 5.37 6.193 5.37 8zM16 12.3V3.7h-1.98v4.81L10.853 3.7h-2.07v8.6h1.982V7.152l3.39 5.146H16z"></path></symbol>
  <symbol id="facebook" viewbox="0 0 16 16"><path d="M15.117 0H.883C.395 0 0 .395 0 .883v14.234c0 .488.395.883.883.883h7.663V9.804H6.46V7.39h2.086V5.607c0-2.066 1.262-3.19 3.106-3.19.883 0 1.642.064 1.863.094v2.16h-1.28c-1 0-1.195.476-1.195 1.176v1.54h2.39l-.31 2.416h-2.08V16h4.077c.488 0 .883-.395.883-.883V.883C16 .395 15.605 0 15.117 0" fill-rule="nonzero"></path></symbol>
  <symbol id="flickr" viewbox="0 0 16 16"><path d="M0 8c0 2.05 1.662 3.71 3.71 3.71 2.05 0 3.713-1.66 3.713-3.71S5.76 4.29 3.71 4.29C1.663 4.29 0 5.95 0 8zm8.577 0c0 2.05 1.662 3.71 3.712 3.71C14.337 11.71 16 10.05 16 8s-1.662-3.71-3.71-3.71c-2.05 0-3.713 1.66-3.713 3.71z"></path></symbol>
  <symbol id="github" viewbox="0 0 16 16"><path d="M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8"></path></symbol>
  <symbol id="hackernews" viewbox="0 0 16 16"><path d="M0 0v16h16V0H0zm8.92 8.96v3H7.25v-3l-2.75-5h1.96l1.66 3.48L9.7 3.96h1.88l-2.66 5z"></path></symbol>
  <symbol id="instagram" viewbox="0 0 16 16"><path d="M8 0C5.827 0 5.555.01 4.702.048 3.85.088 3.27.222 2.76.42c-.526.204-.973.478-1.417.923-.445.444-.72.89-.923 1.417-.198.51-.333 1.09-.372 1.942C.008 5.555 0 5.827 0 8s.01 2.445.048 3.298c.04.852.174 1.433.372 1.942.204.526.478.973.923 1.417.444.445.89.72 1.417.923.51.198 1.09.333 1.942.372.853.04 1.125.048 3.298.048s2.445-.01 3.298-.048c.852-.04 1.433-.174 1.942-.372.526-.204.973-.478 1.417-.923.445-.444.72-.89.923-1.417.198-.51.333-1.09.372-1.942.04-.853.048-1.125.048-3.298s-.01-2.445-.048-3.298c-.04-.852-.174-1.433-.372-1.942-.204-.526-.478-.973-.923-1.417-.444-.445-.89-.72-1.417-.923-.51-.198-1.09-.333-1.942-.372C10.445.008 10.173 0 8 0zm0 1.44c2.136 0 2.39.01 3.233.048.78.036 1.203.166 1.485.276.374.145.64.318.92.598.28.28.453.546.598.92.11.282.24.705.276 1.485.038.844.047 1.097.047 3.233s-.01 2.39-.048 3.233c-.036.78-.166 1.203-.276 1.485-.145.374-.318.64-.598.92-.28.28-.546.453-.92.598-.282.11-.705.24-1.485.276-.844.038-1.097.047-3.233.047s-2.39-.01-3.233-.048c-.78-.036-1.203-.166-1.485-.276-.374-.145-.64-.318-.92-.598-.28-.28-.453-.546-.598-.92-.11-.282-.24-.705-.276-1.485C1.45 10.39 1.44 10.136 1.44 8s.01-2.39.048-3.233c.036-.78.166-1.203.276-1.485.145-.374.318-.64.598-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276C5.61 1.45 5.864 1.44 8 1.44zm0 2.452c-2.27 0-4.108 1.84-4.108 4.108 0 2.27 1.84 4.108 4.108 4.108 2.27 0 4.108-1.84 4.108-4.108 0-2.27-1.84-4.108-4.108-4.108zm0 6.775c-1.473 0-2.667-1.194-2.667-2.667 0-1.473 1.194-2.667 2.667-2.667 1.473 0 2.667 1.194 2.667 2.667 0 1.473-1.194 2.667-2.667 2.667zm5.23-6.937c0 .53-.43.96-.96.96s-.96-.43-.96-.96.43-.96.96-.96.96.43.96.96z"></path></symbol>
  <symbol id="linkedin" viewbox="0 0 16 16"><path d="M13.632 13.635h-2.37V9.922c0-.886-.018-2.025-1.234-2.025-1.235 0-1.424.964-1.424 1.96v3.778h-2.37V6H8.51V7.04h.03c.318-.6 1.092-1.233 2.247-1.233 2.4 0 2.845 1.58 2.845 3.637v4.188zM3.558 4.955c-.762 0-1.376-.617-1.376-1.377 0-.758.614-1.375 1.376-1.375.76 0 1.376.617 1.376 1.375 0 .76-.617 1.377-1.376 1.377zm1.188 8.68H2.37V6h2.376v7.635zM14.816 0H1.18C.528 0 0 .516 0 1.153v13.694C0 15.484.528 16 1.18 16h13.635c.652 0 1.185-.516 1.185-1.153V1.153C16 .516 15.467 0 14.815 0z" fill-rule="nonzero"></path></symbol>
  <symbol id="medium" viewbox="0 0 16 16"><path d="M11.824 12.628l-.276.45.798.398 2.744 1.372c.15.076.294.11.418.11.278 0 .467-.177.467-.492V5.883l-4.15 6.745zm4.096-8.67c-.004-.003 0-.01-.003-.012l-4.825-2.412c-.06-.03-.123-.038-.187-.044-.016 0-.03-.01-.047-.01-.184 0-.368.092-.467.254l-.24.39-.5.814-1.89 3.08 1.89 3.076.5.813.5.812.59.95 4.71-7.64c.02-.03.01-.06-.02-.08zm-6.27 7.045L7.17 6.97l-.295-.477-.294-.477-.25-.416v4.867l3.32 1.663.5.25.5.25-.5-.813-.5-.813zM.737 1.68L.59 1.608c-.085-.042-.166-.062-.24-.062-.206 0-.35.16-.35.427v10.162c0 .272.2.594.442.716l4.145 2.08c.107.06.208.08.3.08.257 0 .438-.2.438-.53V4.01c0-.02-.012-.04-.03-.047L.738 1.68z"></path></symbol>
  <symbol id="pinterest" viewbox="0 0 16 16"><path d="M8 0C3.582 0 0 3.582 0 8c0 3.39 2.108 6.285 5.084 7.45-.07-.633-.133-1.604.028-2.295.146-.625.938-3.977.938-3.977s-.24-.48-.24-1.188c0-1.11.646-1.943 1.448-1.943.683 0 1.012.513 1.012 1.127 0 .687-.436 1.713-.662 2.664-.19.797.4 1.445 1.185 1.445 1.42 0 2.514-1.498 2.514-3.662 0-1.915-1.376-3.254-3.342-3.254-2.276 0-3.61 1.707-3.61 3.472 0 .687.263 1.424.593 1.825.066.08.075.15.057.23-.06.252-.196.796-.223.907-.035.146-.115.178-.268.107-.998-.465-1.624-1.926-1.624-3.1 0-2.524 1.834-4.84 5.287-4.84 2.774 0 4.932 1.977 4.932 4.62 0 2.757-1.74 4.977-4.153 4.977-.81 0-1.572-.422-1.833-.92l-.5 1.902c-.18.695-.667 1.566-.994 2.097.75.232 1.545.357 2.37.357 4.417 0 8-3.582 8-8s-3.583-8-8-8z" fill-rule="nonzero"></path></symbol>
  <symbol id="rss" viewbox="0 0 16 16"><path d="M12.8 16C12.8 8.978 7.022 3.2 0 3.2V0c8.777 0 16 7.223 16 16h-3.2zM2.194 11.61c1.21 0 2.195.985 2.195 2.196 0 1.21-.985 2.194-2.196 2.194C.984 16 0 15.017 0 13.806c0-1.21.983-2.195 2.194-2.195zM10.606 16h-3.11c0-4.113-3.383-7.497-7.496-7.497v-3.11c5.818 0 10.606 4.79 10.606 10.607z"></path></symbol>
  <symbol id="reddit" viewbox="0 0 16 16"><path d="M1.473 9.368c-.04.185-.06.374-.06.566 0 2.3 2.94 4.173 6.554 4.173 3.613 0 6.553-1.872 6.553-4.173 0-.183-.02-.364-.055-.54l-.01-.022c-.013-.036-.02-.073-.02-.11-.2-.784-.745-1.497-1.533-2.072-.03-.01-.058-.026-.084-.047-.017-.013-.03-.028-.044-.043-1.198-.824-2.91-1.34-4.807-1.34-1.88 0-3.576.506-4.772 1.315-.01.012-.02.023-.033.033-.026.022-.056.04-.087.05-.805.576-1.364 1.293-1.572 2.086 0 .038-.01.077-.025.114l-.005.01zM8 13.003c-1.198 0-2.042-.26-2.58-.8-.116-.116-.116-.305 0-.422.117-.11.307-.11.424 0 .42.42 1.125.63 2.155.63 1.03 0 1.73-.2 2.15-.62.11-.11.3-.11.42 0 .11.12.11.31 0 .43-.54.54-1.38.8-2.58.8zM5.592 7.945c-.61 0-1.12.51-1.12 1.12 0 .608.51 1.102 1.12 1.102.61 0 1.103-.494 1.103-1.102 0-.61-.494-1.12-1.103-1.12zm4.83 0c-.61 0-1.12.51-1.12 1.12 0 .608.51 1.102 1.12 1.102.61 0 1.103-.494 1.103-1.102 0-.61-.494-1.12-1.103-1.12zM13.46 6.88c.693.556 1.202 1.216 1.462 1.94.3-.225.48-.578.48-.968 0-.67-.545-1.214-1.214-1.214-.267 0-.52.087-.728.243zM1.812 6.64c-.67 0-1.214.545-1.214 1.214 0 .363.16.7.43.927.268-.72.782-1.37 1.478-1.92-.202-.14-.443-.22-.694-.22zm6.155 8.067c-3.944 0-7.152-2.14-7.152-4.77 0-.183.016-.363.046-.54-.53-.33-.86-.91-.86-1.545 0-1 .82-1.812 1.82-1.812.45 0 .87.164 1.2.455 1.24-.796 2.91-1.297 4.75-1.33l1.21-3.69.27.063s.01 0 .01.002l2.82.663c.23-.533.76-.908 1.38-.908.82 0 1.49.67 1.49 1.492 0 .823-.67 1.492-1.49 1.492s-1.49-.67-1.49-1.49L9.4 2.18l-.98 2.99c1.77.07 3.37.57 4.57 1.35.33-.31.764-.48 1.225-.48 1 0 1.814.81 1.814 1.81 0 .66-.36 1.26-.92 1.58.02.17.04.33.04.5-.01 2.63-3.21 4.77-7.16 4.77zM13.43 1.893c-.494 0-.895.4-.895.894 0 .493.4.894.894.894.49 0 .89-.4.89-.89s-.4-.89-.9-.89z"></path></symbol>
  <symbol id="skype" viewbox="0 0 16 16"><path d="M8.035 12.6c-2.685 0-3.885-1.322-3.885-2.313 0-.51.374-.865.89-.865 1.15 0 .85 1.653 2.995 1.653 1.096 0 1.703-.597 1.703-1.208 0-.368-.18-.775-.904-.954l-2.387-.597C4.524 7.833 4.175 6.79 4.175 5.812c0-2.034 1.91-2.798 3.704-2.798 1.65 0 3.6.916 3.6 2.136 0 .523-.452.827-.97.827-.98 0-.798-1.36-2.773-1.36-.98 0-1.523.444-1.523 1.08 0 .636.774.84 1.446.993l1.767.392c1.936.433 2.427 1.566 2.427 2.633 0 1.652-1.266 2.886-3.82 2.886m7.4-3.264l-.014.084-.028-.16c.015.024.028.05.042.076.082-.45.125-.912.125-1.373 0-1.023-.2-2.014-.595-2.948-.38-.902-.925-1.712-1.62-2.407-.692-.696-1.5-1.242-2.4-1.623C10.015.59 9.025.39 8.005.39c-.48 0-.963.045-1.43.135H6.57l.08.04-.16-.023.08-.016C5.927.183 5.205 0 4.472 0 3.278 0 2.155.466 1.31 1.313.465 2.16 0 3.286 0 4.483c0 .763.195 1.512.563 2.175l.013-.083.028.16c-.015-.026-.027-.052-.04-.077-.076.43-.115.867-.115 1.305 0 1.022.2 2.014.593 2.948.38.903.925 1.713 1.62 2.408.693.695 1.5 1.242 2.4 1.623.932.397 1.92.597 2.94.597.445 0 .89-.04 1.325-.118l-.077-.043.162.028-.084.014c.67.378 1.426.58 2.2.58 1.194 0 2.317-.466 3.162-1.313.845-.846 1.31-1.972 1.31-3.17 0-.765-.197-1.517-.566-2.18" fill-rule="nonzero"></path></symbol>
  <symbol id="tumblr" viewbox="0 0 16 16"><path d="M9.708 16c-3.396 0-4.687-2.504-4.687-4.274V6.498H3.403V4.432C5.83 3.557 6.412 1.368 6.55.12c.01-.086.077-.12.115-.12H9.01v4.076h3.2v2.422H8.997v4.98c.01.667.25 1.58 1.472 1.58h.067c.424-.012.994-.136 1.29-.278l.77 2.283c-.288.424-1.594.916-2.77.936h-.12z" fill-rule="nonzero"></path></symbol>
  <symbol id="twitch" viewbox="0 0 16 16"><g fill-rule="nonzero"><path d="M1.393 0L.35 2.783v11.13h3.824V16h2.088l2.085-2.088h3.13L15.65 9.74V0H1.394zm1.39 1.39H14.26v7.653l-2.435 2.435H8l-2.085 2.085v-2.085H2.783V1.39z"></path><path d="M6.61 8.348H8V4.175H6.61v4.173zm3.824 0h1.39V4.175h-1.39v4.173z"></path></g></symbol>
  <symbol id="twitter" viewbox="0 0 16 16"><path d="M16 3.038c-.59.26-1.22.437-1.885.517.677-.407 1.198-1.05 1.443-1.816-.634.375-1.337.648-2.085.795-.598-.638-1.45-1.036-2.396-1.036-1.812 0-3.282 1.468-3.282 3.28 0 .258.03.51.085.75C5.152 5.39 2.733 4.084 1.114 2.1.83 2.583.67 3.147.67 3.75c0 1.14.58 2.143 1.46 2.732-.538-.017-1.045-.165-1.487-.41v.04c0 1.59 1.13 2.918 2.633 3.22-.276.074-.566.114-.865.114-.21 0-.416-.02-.617-.058.418 1.304 1.63 2.253 3.067 2.28-1.124.88-2.54 1.404-4.077 1.404-.265 0-.526-.015-.783-.045 1.453.93 3.178 1.474 5.032 1.474 6.038 0 9.34-5 9.34-9.338 0-.143-.004-.284-.01-.425.64-.463 1.198-1.04 1.638-1.7z" fill-rule="nonzero"></path></symbol>
  <symbol id="vimeo" viewbox="0 0 16 16"><path d="M15.992 4.275c-.07 1.56-1.16 3.697-3.263 6.41-2.176 2.832-4.017 4.248-5.522 4.248-.933 0-1.722-.862-2.367-2.588L3.55 7.6c-.48-1.724-.993-2.587-1.542-2.587-.12 0-.538.252-1.255.755L0 4.796C.79 4.1 1.568 3.406 2.335 2.71c1.053-.912 1.844-1.39 2.37-1.44 1.246-.12 2.012.733 2.3 2.56.31 1.97.526 3.194.647 3.673.36 1.634.754 2.45 1.185 2.45.335 0 .838-.53 1.51-1.59.67-1.06 1.028-1.866 1.076-2.42.096-.915-.263-1.374-1.077-1.374-.383 0-.778.087-1.185.262.788-2.58 2.29-3.834 4.508-3.762 1.644.048 2.42 1.116 2.324 3.205z" fill-rule="nonzero"></path></symbol>
  <symbol id="youtube" viewbox="0 0 16 16"><path d="M0 7.345c0-1.294.16-2.59.16-2.59s.156-1.1.636-1.587c.608-.637 1.408-.617 1.764-.684C3.84 2.36 8 2.324 8 2.324s3.362.004 5.6.166c.314.038.996.04 1.604.678.48.486.636 1.588.636 1.588S16 6.05 16 7.346v1.258c0 1.296-.16 2.59-.16 2.59s-.156 1.102-.636 1.588c-.608.638-1.29.64-1.604.678-2.238.162-5.6.166-5.6.166s-4.16-.037-5.44-.16c-.356-.067-1.156-.047-1.764-.684-.48-.487-.636-1.587-.636-1.587S0 9.9 0 8.605v-1.26zm6.348 2.73V5.58l4.323 2.255-4.32 2.24h-.002z"></path></symbol>
  <symbol id="link" viewbox="0 0 16 16"><path d="M5.86 12.7l-.81.8c-.7.7-1.84.7-2.54 0a1.75 1.75 0 0 1 0-2.5l2.98-2.96c.61-.61 1.77-1.52 2.62-.68a1 1 0 1 0 1.4-1.4c-1.44-1.43-3.57-1.17-5.42.67L1.1 9.6a3.72 3.72 0 0 0 0 5.32 3.78 3.78 0 0 0 5.34 0l.8-.8a1 1 0 1 0-1.39-1.42zm9.03-11.5c-1.55-1.53-3.7-1.6-5.14-.19l-1 1a1 1 0 1 0 1.39 1.41l1-1c.75-.74 1.72-.43 2.35.2a1.75 1.75 0 0 1 0 2.5l-3.17 3.15c-1.46 1.45-2.14.77-2.43.48a1 1 0 0 0-1.4 1.4c.67.67 1.43 1 2.23 1 .98 0 2.01-.5 3-1.47l3.17-3.15a3.72 3.72 0 0 0 0-5.32z"></path></symbol>
  <symbol id="email" viewbox="0 0 16 11"><path fill-rule="evenodd" d="M1.33 0h13.34L8 5 1.33 0zM16 0v11H0V0l8 6 8-6z"></path></symbol>
  <symbol id="nav" viewbox="0 0 16 11"><path d="M0 12h16v-2H0v2zm0-5h16V5H0v2zm0-7v2h16V0H0z"></path></symbol>
</svg>


    <header class="header">
  <div class="container">
    <a class="logo" href="/">
  <img src="/assets/logos/logo-cdong.gif" alt="">
</a>


    
<nav class="nav  nav--header">
  <ul class="list  list--nav">
    

      

      <li class="item  item--nav">
        <a href="/">Home</a>
      </li>
    

      

      <li class="item  item--nav">
        <a href="/about/">About</a>
      </li>
    

      

      <li class="item  item--nav">
        <a href="/blog/">Blog</a>
      </li>
    

      

      <li class="item  item--nav">
        <a href="/search/">Search</a>
      </li>
    
  </ul>
  <button class="button  button--nav" aria-label="Menu toggle">
    <svg width="16" height="16" class="icon  icon--nav" role="img" alt="Menu"><title>Menu</title>
<use xlink:href="#nav" fill="CurrentColor"></use></svg>

  </button>
</nav>


<script type="text/javascript">
  // Get list and button
  const navList = document.querySelector('.header .list--nav')
  const button  = document.querySelector('.header .button--nav')

  // Hide nav and apply toggle
  const collapseNav = () => {
    if (document.body.clientWidth < 640) {
      navList.style.setProperty('--listHeight', `-${navList.offsetHeight}px`)
    } else {
      navList.removeAttribute('style')
    }

    button.onclick = () => {
      navList.style.setProperty('transition', `margin .1s`)
      if (navList.style.getPropertyValue('--listHeight')) {
        navList.style.removeProperty('--listHeight')
      } else {
        navList.style.setProperty('--listHeight', `-${navList.offsetHeight}px`)
      }
    }
  }

  collapseNav()

  // Check on resize if to collapse nav
  window.addEventListener('resize', () => {
    collapseNav()
  })
</script>

  </div>

  





  <meta name="google-site-verification" content="fhiMUAXjII16BlWNx0x4tY2MXKJwEcdDVjILoXGUXYA">
</header>


<main class="main  container">

  <article class="article  article--post  content  typeset">

    

<small class="small  post-meta">
  
  
    
      <span class="label  label--category"><a href="/categories/#reverse%20engineering">Reverse Engineering</a></span>
    
   · <time datetime="2020-12-15T00:00:00-05:00" class="time">15 Dec 2020</time>
</small>

    
    <h1 id="conti-ransomware-v2">Conti Ransomware v2</h1>

<h2 id="overview">Overview</h2>

<p>This is my full analysis for the Conti Ransomware version 2. Over the last few months, I have seen quite a few companies getting hit by this ransomware, so it’s been interesting analyzing and figuring how it works.</p>

<p>As one of the newer ransomware families, Conti utilizes multi-threading features on Windows to encrypt files on machines To the fullest extent, making itself a lot faster than most ransomware out there.</p>

<p>From the analysis, it’s clear that Conti is designed to target and encrypt business environments that uses SMB for file sharing and other services. Similar to the Sodinokibi family, Conti has the ability to scan existing ports and SMB shares on the network to spread its encryption, which can be a lot more impactful since it is not limited to the local machine.</p>

<p>By the time this blog post comes out, researchers have found newer samples of the version 3. Even though this is an old sample, I still think it’s beneficial to provide the community with a deeper understanding about this malware.</p>

<p><img src="/uploads/new_overview.png" alt="alt text"></p>

<p><em>Figure 1: Conti overview</em></p>

<h2 id="iocs">IOCS</h2>

<p><strong><em>Conti Ransomware version 2</em></strong> comes in the form of a 32-bit PE file (either <strong>.exe</strong> or <strong>.dll</strong>).</p>

<p><strong>MD5</strong>: 0a49ed1c5419bb9752821d856f7ce4ff</p>

<p><strong>SHA256</strong>: 03b9c7a3b73f15dfc2dcb0b74f3e971fdda7d1d1e2010c6d1861043f90a2fecd</p>

<p><strong>Sample</strong>: https://bazaar.abuse.ch/sample/03b9c7a3b73f15dfc2dcb0b74f3e971fdda7d1d1e2010c6d1861043f90a2fecd/</p>

<p><strong>Unpacked sample</strong>: https://bazaar.abuse.ch/sample/d3c75c5bc4ae087d547bd722bd84478ee6baf8c3355b930f26cc19777cd39d4c/</p>

<p><img src="/uploads/VirusTotal.PNG" alt="alt text"></p>

<p><em>Figure 2: VirusTotal result</em></p>

<h2 id="ransom-note">Ransom Note</h2>

<p><img src="/uploads/Conti32.PNG" alt="alt text"></p>

<p><em>Figure 3: Conti Ransom Note</em></p>

<p>The ID appended at the end is actually hard-coded, so it’s not a victim’s ID. This ID is most likely just the ID of this particular Conti sample.</p>

<p>Below is the HTTPS version of the website for recovery service.</p>

<p><img src="/uploads/Conti33.PNG" alt="alt text"></p>

<p><em>Figure 4: Conti Website</em></p>

<h2 id="dependencies">Dependencies</h2>

<p>The ransomware only has <strong><em>Kernel32.dll, User32.dll, and WS2_32.dll</em></strong> as visible imported DLLs.</p>

<p>However, it does dynamically resolve a lot of DLLs through decrypting stack strings and calling <strong>LoadLibrary</strong> as seen here.</p>

<p><img src="/uploads/Conti1.PNG" alt="alt text"></p>

<p><em>Figure 5: Conti resolving DLL string names (sub_571010)</em></p>

<p>Here is the full list of the imported DLLs.</p>

<ul>
  <li><strong>Kernel32.dll</strong></li>
  <li><strong>Ntdll.dll</strong></li>
  <li><strong>Ole32.dll</strong></li>
  <li><strong>Shell32.dll</strong></li>
  <li><strong>Ws2_32.dll</strong></li>
  <li><strong>Shlwapi.dll</strong></li>
  <li><strong>Advapi32.dll</strong></li>
  <li><strong>Iphlpapi.dll</strong></li>
  <li><strong>Rstrtmgr.dll</strong></li>
  <li><strong>Netapi32.dll</strong></li>
  <li><strong>OleAut32_dll</strong></li>
  <li><strong>User32.dll</strong></li>
</ul>

<h2 id="pe-layout">PE Layout</h2>

<p>The unpacked version of the malware is around 208 KB in size, which consists of the <strong>.text, .rdata, .data, .rsrc, and .reloc</strong> sections.</p>

<p>One of the main reasons why this executable is so big is because of the obsfucation method the developer uses. Instead of implementing a single string decryption function, they used one decrypting for loop for each encrypted string, which greatly increased the amount of raw code.</p>

<p><img src="/uploads/Conti2.PNG" alt="alt text"></p>

<p><em>Figure 6: Conti Layout</em></p>

<h2 id="code-analysis">Code Analysis</h2>

<h3 id="string-decryption">String Decryption</h3>

<p>As mentioned above, Conti uses the method of building up a stack “string” that is encrypted and proceeds to decrypt it with a for loop. Every string is encrypted differently, so the for loop changes slightly for each of them.</p>

<p><img src="/uploads/Conti3.PNG" alt="alt text"></p>

<p><em>Figure 7: String decryption of explorer.exe (sub_58B2D0)</em></p>

<p>Most of the decryption loops can be simplified to this single form where <strong>buffer</strong> is the encrypted string, <strong>a</strong> and <strong>b</strong> are positive numbers, and <strong>c</strong> is either <strong>1 or -1</strong>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)):</span>
    <span class="nb">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">*</span> <span class="p">(</span><span class="n">c</span> <span class="o">*</span> <span class="p">(</span><span class="nb">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">b</span><span class="p">))</span> <span class="o">%</span> <span class="mi">127</span> <span class="o">+</span> <span class="mi">127</span><span class="p">)</span> <span class="o">%</span> <span class="mi">127</span>
</code></pre></div></div>

<h3 id="dynamically-resolve-api">Dynamically Resolve API</h3>

<p>When resolving APIs, Conti calls a particular function that takes in an integer representing the DLL to find, an API hash value, and an offset into the API buffer.</p>

<p>The DLL name is retrieved from the given integer through a switch statement.</p>

<ul>
  <li>15 ==&gt; Kernel32.dll</li>
  <li>16 ==&gt; Ws2_32.dll</li>
  <li>17 ==&gt; Netapi32.dll</li>
  <li>18 ==&gt; Iphlpapi.dll</li>
  <li>19 ==&gt; Rstrtmgr.dll</li>
  <li>20 ==&gt; User32.dll</li>
  <li>21 ==&gt; Ws2_32.dll</li>
  <li>22 ==&gt; Shlwapi.dll</li>
  <li>23 ==&gt; Shell32.dll</li>
  <li>24 ==&gt; Ole32.dll</li>
  <li>25 ==&gt; OleAut32.dll</li>
  <li>26 ==&gt; Ntdll.dll</li>
</ul>

<p>After getting the DLL name, Conti will manually locate the export directory of that DLL, loop through each API, hash the name, and compare it with the hash from the parameter. After finding the correct API with the right hash value, it will proceed to find the address to that function.</p>

<p><img src="/uploads/Conti4.PNG" alt="alt text"></p>

<p><em>Figure 8: Function looping through export table and hash API name (sub_5737C0)</em></p>

<p>For the hashing algorithm, the constant <strong>0x5BD1E995</strong> gives this away that this is <a href="https://github.com/abrandoned/murmur2/blob/master/MurmurHash2.c">Murmur Hash</a></p>

<p><img src="/uploads/Conti5.PNG" alt="alt text"></p>

<p><em>Figure 9: Conti’s Murmur Hashing implementation (sub_575970)</em></p>

<p>After finding the address of the API, the malware adds that into its API array at the provided offset. This helps reducing the time to look up an API’s address if the malware has already resolved it before.</p>

<h3 id="run-once-mutex">Run-once Mutex</h3>

<p>Conti attempts to decrypt the string <strong>“jkbmusop9iqkamvcrewuyy777”</strong> and use that as the name of a Mutex object.</p>

<p>Then, it checks if there is an instant of that Mutex running already. If there is, it will just wait until that thread exits before exiting.</p>

<p><img src="/uploads/Conti6.PNG" alt="alt text"></p>

<p><em>Figure 10: Checking for Mutex (sub_587E20)</em></p>

<h3 id="command-line-arguments">Command-line Arguments</h3>

<p>Conti can only be ran with command-line arguments, so it must be launched by a loader. Upon execution, it will process these arguments and behave accordingly.</p>

<table>
  <thead>
    <tr>
      <th>CMD Args</th>
      <th>Functionality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>-m   local</td>
      <td>Encrypting the local machine’s hard drive with multiple threads</td>
    </tr>
    <tr>
      <td>-m       net</td>
      <td>Encrypting network shares via SMB with mutiple threads</td>
    </tr>
    <tr>
      <td>-m   all</td>
      <td>Encrypting both locally and on the network with multiple threads</td>
    </tr>
    <tr>
      <td>-p   [directory]</td>
      <td>Encrypt a specific directory locally with 1 thread</td>
    </tr>
    <tr>
      <td>-size     [chunk mode]</td>
      <td>Large encryption chunk mode</td>
    </tr>
    <tr>
      <td>-log     [file name]</td>
      <td>Logging mode. Log everything to the file with the given name</td>
    </tr>
    <tr>
      <td>backups</td>
      <td>Unimplemented for some reason</td>
    </tr>
  </tbody>
</table>

<h3 id="encryption">Encryption</h3>

<p>Despite having 3 different encrypting schemes, the main mechanism is relatively the same.</p>

<p>First, it calls a function to populate a structure used to initialize information about the thread/threads of that encrypting schemes. These information includes the number of threads to spawn and a thread buffer that is used to store thread <strong>HANDLE</strong> objects.</p>

<p><img src="/uploads/Conti7.PNG" alt="alt text"></p>

<p><em>Figure 11: Function initializing thread struct (sub_58BDB0)</em></p>

<p>Next, it calls this function to launch child threads. It checks the thread struct to see if the encrypting flag is set. If it is, loop from <strong>0 to thread_count - 1</strong> and spawn a thread to encrypt each time. It also adds these threads into the thread buffer for easy clean-up later.</p>

<p><img src="/uploads/Conti8.PNG" alt="alt text"></p>

<p><em>Figure 12: Function launching encrypting threads (sub_58BE30)</em></p>

<h4 id="multi-threading">Multi-threading</h4>

<p>Beside when the argument <strong>-p</strong> is provided, multi-threading is involved for every other scheme of encryption. Conti will call <strong>GetNativeSystemInfo</strong> to retrieve information about the running system.</p>

<p>If the argument <strong>“-m all”</strong> is provided, the number of threads to spawn will be double the amount of processors because it needs to encrypt both locally and on the network.</p>

<p>For everything else, the number of threads to spawn is the same as the number of processors.</p>

<p><img src="/uploads/Conti9.PNG" alt="alt text"></p>

<p><em>Figure 13: Determining how many threads to spawn from number of processor (sub_587E20)</em></p>

<p>Being able to thread its encryption, Conti utilizes all of the CPU threads available to simultaneously go through and encrypt the file system with incredible speed.</p>

<p><img src="/uploads/Conti10.PNG" alt="alt text"></p>

<p><em>Figure 14: Realistic representation of what happens when Conti runs</em></p>

<p>The most interesting information in the thread structure is the string of the path to be encrypted. After having launch the threads, Conti’s main program will continuously traverse the file system and provide the thread structure with directory names. All of these threads will check this information and encrypt the updated path immediately. Because the workload is divided efficiently, Conti is able to speed up its traversing and encryption to a great extent.</p>

<p><img src="/uploads/Conti11.PNG" alt="alt text"></p>

<p><em>Figure 15: Main thread providing the drives to be encrypted (sub_587E20)</em></p>

<h3 id="encrypting-locally">Encrypting Locally</h3>

<h4 id="rsa-public-key">RSA Public Key</h4>

<p>First, each thread will call <strong>CryptAcquireContextA</strong> with the cryptographic provider type <strong>PROV_RSA_AES</strong> to retrieve a handle of a CSP for RSA encryption. Using that CSP, it will call <strong>CryptImportKey</strong> to import from the hard-coded RSA public key.</p>

<p><img src="/uploads/Conti13.PNG" alt="alt text"></p>

<p><em>Figure 16: RSA Public Key embedded in the .data section</em></p>

<p><img src="/uploads/Conti12.PNG" alt="alt text"></p>

<p><em>Figure 17: CryptAcquireContextA and CryptImportKey called (sub_58BC20)</em></p>

<p>Next, it will enter an infinite loop to wait for the main thread to add a target drive path or to send a stop signal. This is accomplished solely through the shared thread struct that was created before launching these threads. Because the struct is shared between multiple threads, calls to <strong>EnterCriticalSection</strong> and <strong>LeaveCriticalSection</strong> are critical to maintain a thread-safe environment during encryption.</p>

<p><img src="/uploads/Conti14.PNG" alt="alt text"></p>

<p><em>Figure 18: Each thread continuously polling for a path name and encrypt it (sub_58BC20)</em></p>

<p>In the main encrypting function, it will iteratively call <strong>FindFirstFile</strong> on the directory name to search for all files and folders inside, avoiding the two current path and parent path names <strong>”.”</strong> and <strong>”..”</strong> which can cause an infinite loop if processed.</p>

<h4 id="directory-check">Directory Check</h4>

<p>If the file being checked is a directory, it will check to see if the directory name is valid or not. If it is, then the child thread will add that path to the thread struct for itself or any other available thread to encrypt.</p>

<p><img src="/uploads/Conti15.PNG" alt="alt text"></p>

<p><em>Figure 19: Checking if the path is a valid directory (sub_586340)</em></p>

<p>These are the directory name that Conti will avoid encrypting.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tmp, winnt, temp, thumb, $Recycle.Bin, $RECYCLE.BIN, System Volume Information, Boot, Windows, Trend Micro
</code></pre></div></div>

<h4 id="normal-file-check">Normal File Check</h4>

<p>If the file is just a normal file, Conti will check to see if the file name is valid before proceed to encrypt it.</p>

<p><img src="/uploads/Conti16.PNG" alt="alt text"></p>

<p><em>Figure 20: Checking if the path is a valid file (sub_586340)</em></p>

<p>Conti will avoid encrypting any file with these names or extensions.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CONTI_LOG.txt, readme.txt, .msi, .sys, .lnk, .dll, .exe
</code></pre></div></div>

<h4 id="normal-file-encryption">Normal File Encryption</h4>

<p>First, Conti populates a structure in memory. I call this structure <strong>CONTI_STRUCT</strong>.</p>

<pre><code class="language-C">struct CONTI_STRUCT
{
  char *file_name;
  HANDLE hFile;
  LARGE_INTEGER file_size;
  int CHACHA8_const[4];
  int CHACHA8_256_KEY[8];
  int block_counter;
  int block_counter_ptr;
  int CHACHA8_none[2];
  int random1[2];
  int random2[8];
  BYTE encrypted_key[524]; // encrypted ChaCha8 key
};
</code></pre>

<p>Conti will call <strong>CryptGenRandom</strong> to generate 2 different random buffers and put them into the <strong>CONTI_STRUCT</strong>. Then, it populates the ChaCha8 constants which is just <strong>“expand 32-byte k”</strong> in hex form.</p>

<p>The first buffer is 256 bits, which is later used as the <strong>ChaCha8</strong> encrypting key, and the second one is 64 bits, which is used as the <strong>ChaCha8</strong> nonce.</p>

<p>Next, it will copy the key and nonce into the buffer at the end of the struct and encrypt it using the RSA key imported earlier. This is to ensure that the ChaCha key can not be recovered without the RSA private key.</p>

<p><img src="/uploads/Conti17.PNG" alt="alt text"></p>

<p><em>Figure 21: Generating random number (sub_5805A0)</em></p>

<p><img src="/uploads/ChaCha8_init.PNG" alt="alt text"></p>

<p><em>Figure 22: Populating ChaCha8 constants and encrypt the random numbers with the RSA key (sub_5805A0)</em></p>

<p>Conti has 3 file categories for encryption - small, medium, and large files. Small files are marked with the value of <strong>0x24</strong>, medium with <strong>0x26</strong>, and large with <strong>0x25</strong>.</p>

<p>Before encryption, Conti will write the encrypted ChaCha8 key from <strong>CONTI_STRUCT</strong>, this mark, and the file size to at the end of the to-be-encrypted file.</p>

<p><img src="/uploads/Conti19.PNG" alt="alt text"></p>

<p><em>Figure 23: Writing the encrypted random ChaCha8 key, mark, and size to file (sub_57E4B0)</em></p>

<p><img src="/uploads/Conti20.PNG" alt="alt text"></p>

<p><em>Figure 24: The key at the end of an encrypted file</em></p>

<h4 id="1-small-file">1. Small File</h4>

<p>Small files are files that are potentially less than 1MB in size. Conti looks for all files that is smaller than 1MB or by checking for these extensions below.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.4dd, .4dl, .accdb, .accdc, .accde, .accdr, .accdt, .accft, .adb, .ade, .adf, .adp, .arc, .ora, 
.alf, .ask, .btr, .bdf, .cat, .cdb, .ckp, .cma, .cpd, .dacpac, .dad, .dadiagrams, .daschema, .db, 
.db-shm, .db-wal, .db3, .dbc, .dbf, .dbs, .dbt, .dbv, .dbx, .dcb, .dct, .dcx, .ddl, .dlis, .dp1, 
.dqy, .dsk, .dsn, .dtsx, .dxl, .eco, .ecx, .edb, .epim, .exb, .fcd, .fdb, .fic, .fmp, .fmp12, .fmpsl, 
.fol, .fp3, .fp4, .fp5, .fp7, .fpt, .frm, .gdb, .grdb, .gwi, .hdb, .his, .ib, .idb, .ihx, .itdb, .itw, 
.jet, .jtx, .kdb, .kexi, .kexic, .kexis, .lgc, .lwx, .maf, .maq, .mar, .mas, .mav, .mdb, .mdf, .mpd, .mud, 
.mwb, .myd, .ndf, .nnt, .nrmlib, .ns2, .ns3, .ns4, .nsf, .nv, .nv2, .nwdb, .nyf, .odb, .oqy, .orx, .owc, 
.p96, .p97, .pan, .pdb, .pdm, .pnz, .qry, .qvd, .rbf, .rctd, .rod, .rodx, .rpd, .rsd, .sas7bdat, .sbf, .scx, 
.sdb, .sdc, .sdf, .sis, .spq, .sql, .sqlite, .sqlite3, .sqlitedb, .te, .temx, .tmd, .tps, .trc, .trm, .udb, 
.udl, .usr, .v12, .vis, .vpd, .vvv, .wdb, .wmdb, .wrk, .xdb, .xld, .xmlff, .abcddb, .abs, .abx, .accdw, .adn, 
.db2, .fm5, .hjt, .icg, .icr, .kdb, .lut, .maw, .mdn, .mdt
</code></pre></div></div>

<p>Encrypting small files are straightforward. Since these files are small enough, it typically does not require to loop and encrypt more than once. The file content is read into a buffer and encrypted directly. Just to be safe, the malware author did limit the maximum buffer size to read to 5MB, but it’s unlikely that the files going into this function is that big.</p>

<p><img src="/uploads/Conti21.PNG" alt="alt text"></p>

<p><em>Figure 25: Small File Encrypting mechanism (sub_580460)</em></p>

<h4 id="2-medium-file">2. Medium File</h4>

<p>Medium files are files that are between 1MB to 5MB.</p>

<p>For these files, Conti only encrypts the first 1 MB of the files.</p>

<p><img src="/uploads/Conti22.PNG" alt="alt text"></p>

<p><em>Figure 26: Medium File Encrypting mechanism (sub_5805A0)</em></p>

<h4 id="3-large-file">3. Large file</h4>

<p>Large files are files that are larger than 5MB. Conti specifically looks for these by checking for these extensions.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.vdi, .vhd, .vmdk, .pvm, .vmem, .vmsn, .vmsd, .nvram, .vmx, .raw, .qcow2, .subvol, .bin, .vsv, .avhd, .vmrs, .vhdx,
.avdx, .vmcx, .iso
</code></pre></div></div>

<p>The large file encrypting function processes the <strong>-size</strong> chunk mode argument and uses it in a switch statement to determine the encrypting offset and the encrypting size.</p>

<p>According to <a href="https://twitter.com/demonslay335">Michael Gillespie</a>, here are the chunk mode values:</p>

<ul>
  <li>0x14 (default) ==&gt; represent 3 chunks of (file_size / 100 * 7)</li>
  <li>0x32 ==&gt; represent 5 chunks of (file_size / 100 * 10)</li>
</ul>

<p>The mechanism of encrypting can be simplify to this. Basically, Conti will encrypt <strong><em>encrypt_length</em></strong> amount of bytes and skip the next <strong><em>encrypt_offset</em></strong> before encrypting again until it reaches the end of the file. This makes encryption quicker for large files because it does not have to encrypt everything.</p>

<p>Also according to Michael, Conti has a bug where the keystream sometime goes out of sync in-between chunks during encryption because the encrypted buffer size is rounded up to the nearest 64 which is the ChaCha state matrix size.</p>

<p><img src="/uploads/Conti23.PNG" alt="alt text"></p>

<p><em>Figure 27: Large File Encrypting mechanism (sub_57FFD0)</em></p>

<h4 id="4-chacha8-encryption">4. ChaCha8 Encryption</h4>

<p>The <strong>ChaCha8</strong> implementation is pretty straightforward. The 256-byte key that was randomly generated earlier is then used as the encrypting key.</p>

<p><img src="/uploads/ChaCha8.png" alt="alt text"></p>

<p><em>Figure 28: Conti’s ChaCha8 implementation (sub_575AC0)</em></p>

<p>In order to be able to decrypt the files, we need to know the random key that Conti uses for each file, and the only way to retrieve it is through the encrypted key buffer at the end of the file.</p>

<p>Since that buffer is encrypted with a public RSA key, we need the private RSA key to decrypt this.</p>

<p>Nonetheless, since they are using a hard-coded public key, if anyone pays the ransom for this Conti version, the private key can be retrieved. It will be simple to write a decrypting tool if that is the case, and all of the samples with this ID will become useless after.</p>

<p>This implementation clearly reflects how the Conti group mainly targets big companies instead of aiming to spread the malware to normal computer users. Once a company (or anyone) pays off the ransom, they have to discard all of the samples that use the private key and develop newer samples to spread.</p>

<p><img src="/uploads/ChaChaEncryption.png" alt="alt text"></p>

<p><em>Figure 29: Conti’s Encryption method</em></p>

<h3 id="delete-shadow-copy-with-com-objects">Delete Shadow Copy with COM Objects</h3>

<p>Before encrypting, Conti’s main thread calls <strong>CoInitializeEx, CoInitializeSecurity, and CoCreateInstance</strong> to creates a single object of the class <strong>IWbemLocator</strong> with the specified CLSID <em>4590F811-1D3A-11D0-891F-00AA004B2E24</em>.</p>

<p><img src="/uploads/Conti25.PNG" alt="alt text"></p>

<p><em>Figure 30: Initializing COM Object (sub_576B80)</em></p>

<p>Next, it checks if the processor architecture of the machine is <strong>x86-64</strong> . If it is, then Conti will call <strong>CoCreateInstance</strong> to create a single object of the class <strong>IWbemContext</strong> with the specified CLSID <em>674B6698-EE92-11D0-AD71-00C04FD8FDFF</em>.</p>

<p>With this <strong>Call Context</strong> object, it can modify the <strong>__ProviderArchitecture</strong> to force load the specified provider version which is 64-bit architecture.</p>

<p><img src="/uploads/Conti26.PNG" alt="alt text"></p>

<p><em>Figure 31: Force load 64-bit if needed (sub_576B80)</em></p>

<p>Using the <strong>IWbemLocator</strong> object earlier, Conti calls its <strong>ConnectServer</strong> method to connect with the local <em>ROOT\CIMV2</em> namespace and obtain the pointer to an <strong>IWbemServices</strong> object.</p>

<p><img src="/uploads/Conti27.PNG" alt="alt text"></p>

<p><em>Figure 32: Connecting to ROOT\CIMV2 to get IWbemServices object (sub_576B80)</em></p>

<p>With this IWbemServices object, it executes the SQL query <strong>“SELECT * FROM Win32_ShadowCopy”</strong> to retrieve a enumerator of all the shadow copies stored in the local server.</p>

<p>By enumerating through these informations, Conti extracts the ID of each shadow copy, add that to the format string <strong>“cmd.exe /c C:\Windows\System32\wbem\WMIC.exe shadowcopy where “ID=’%s’” delete”</strong>, and create a new process to execute. This will eventually deletes all the shadow copy storage areas in the computer.</p>

<p><img src="/uploads/Conti28.PNG" alt="alt text"></p>

<p><em>Figure 33: Building cmd string to delete shadowcopy based on ID (sub_576B80)</em></p>

<h3 id="network-encryption">Network Encryption</h3>

<p>For the network encryption, Conti calls <strong>CreateIoCompletionPort</strong> to spawn as many concurrently running threads as there are processors in the system, and these threads waits for a list of network shares to start encryption.</p>

<p><img src="/uploads/Conti29.PNG" alt="alt text"></p>

<p><em>Figure 34: CreateIoCompletionPort to spawn network encrypting thread (sub_58A6F0)</em></p>

<p>The main thread then calls <strong>NetShareEnum</strong> to get an enumerator to extract information about shared network resources. This scans the system to see if there exists any existing SMB network shares.</p>

<p>After getting this “ARP” cache, it will check if the IP addresses of hosts in the list start with <strong>“172.”, “192.168.”, “10.”, and “169.”</strong>. Since it only cares about encrypting local systems, any other IP address ranges is ignored.</p>

<p>It will then scan and look for every shares with the name that is not <strong>“ADMIN$”</strong>, get the full path to the shares, and add it to an array of network shares.</p>

<p><img src="/uploads/Conti30.PNG" alt="alt text"></p>

<p><em>Figure 35: Scanning SMB for all existing SMB network shares (sub_5898D0)</em></p>

<p>After extracting this, it will loop through and call the function from <em>Figure 15</em> to push these share names into the thread struct so the child threads can begin encrypting.</p>

<p>If scanning SMB for network hosts fails, Conti will perform just a port scan using <strong>CreateIoCompletionPort GetQueuedCompletionStatus, and PostQueuedCompletionStatus</strong></p>

<p><img src="/uploads/Conti31.PNG" alt="alt text"></p>

<p><em>Figure 36: Conti port scans (sub_58A370)</em></p>

<p>After this point, the encryption happens the same as the local encryption, with share names being pushed into the shared thread struct for the child processes to encrypt.</p>

<h2 id="key-findings">Key findings</h2>

<p>Overall, Conti ransomware is a sophisticated sample with many unique functionalities. By sacrificing the tremendous increase in size, the Conti team has implement a really troublesome string encryption method, which ended up taking me a while to go through and resolve all of the strings.</p>

<p>The encryption scheme is a bit boring with a randomly generated key protected by a hard-coded public RSA key. However, the multi-threading encryption is implemented elegantly using a shared structure between all of the threads, which results in extreme encrypting speed. Conti also avoids encrypting large files entirely, so it’s obvious that the malware authors prioritize speed over encrypting quality. With its networking functionality, the ransomware actively looks for available shares on the network to spread its encryption. This mainly targets small business and enterprise fields that uses the SMB protocol for file sharing, as we have seen with Advantech, Riverside Community Care, Ixsight Technologies, Total Systems Services, …</p>

<p><strong>NOTE:</strong> For anyone who wants to analyze this sample further, you should set up a folder on your machine and runs the ransomware with the command line argument <em>“-p [directory]”</em> to test encryption on that directory only. It’s a pretty neat way to set up a small environment for testing and dynamic analysis that the authors have provided us with, so huge shoutout to them for that!</p>

<h2 id="yara-rule">YARA rule</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rule ContiV2 {
	meta:
	  	description = "YARA rule for Conti Ransomware v2"
		reference = "http://chuongdong.com/reverse%20engineering/2020/12/15/ContiRansomware/"
		author = "@cPeterr"
    		date = "2020-12-15"
    		rule_version = "v2"
    		malware_type = "ransomware"
    		malware_family = "Ransom:W32/Conti"
		tlp = "white"
	strings:
		$str1 = "polzarutu1982@protonmail.com"
		$str2 = "http://m232fdxbfmbrcehbrj5iayknxnggf6niqfj6x4iedrgtab4qupzjlaid.onion"
    		$str3 = "expand 32-byte k"
		$string_decryption = { 8a 07 8d 7f 01 0f b6 c0 b9 ?? 00 00 00 2b c8 6b c1 ?? 99 f7 fe 8d 42 7f 99 f7 fe 88 57 ff }
    		$compare_size = { ?? ?? 00 00 50 00 }
	condition:
		all of ($str*) and $string_decryption and $compare_size
}
</code></pre></div></div>

<h2 id="references">References</h2>

<p>https://twitter.com/Arkbird_SOLG/status/1337565128561225728</p>

<p>https://twitter.com/VK_Intel/status/1297252264126685185</p>

<p>https://www.bleepingcomputer.com/news/security/conti-ransomware-shows-signs-of-being-ryuks-successor/</p>

<p>https://www.carbonblack.com/blog/tau-threat-discovery-conti-ransomware/</p>

<p>https://id-ransomware.malwarehunterteam.com/identify.php?case=2c61281154a1c9df22081099c5c36503a63e9b01</p>

<p>https://twitter.com/demonslay335/status/1339975671817318400</p>



    <div class="share">
  
    
      
      
      
      

      

      <a class="button" href="https://twitter.com/intent/tweet/?url=https://cdong1012.github.io//reverse%20engineering/2020/12/15/ContiRansomware/&amp;text=Conti%20Ransomware&amp;via=cPeterr" style="background: #0d94e7">Twitter  <svg width="16" height="16" class="icon  icon--twitter" role="img" alt="twitter"><title>twitter</title>
<use xlink:href="#twitter" fill="CurrentColor"></use></svg>
</a>

    
  
    
      
      
      
      

      

      <a class="button" href="https://facebook.com/sharer/sharer.php?u=https://cdong1012.github.io//reverse%20engineering/2020/12/15/ContiRansomware/" style="background: #3B5998">Facebook  <svg width="16" height="16" class="icon  icon--facebook" role="img" alt="facebook"><title>facebook</title>
<use xlink:href="#facebook" fill="CurrentColor"></use></svg>
</a>

    
  
    
      
      
      
      

      

      <a class="button" href="mailto:?subject=Conti%20Ransomware&amp;body=Hey,%20check%20out%20this:%20https://cdong1012.github.io//reverse%20engineering/2020/12/15/ContiRansomware/" style="background: true">Email  <svg width="16" height="16" class="icon  icon--email" role="img" alt="email"><title>email</title>
<use xlink:href="#email" fill="CurrentColor"></use></svg>
</a>

    
  
</div>


    


  </article>

  

</main>

<footer class="footer">
  <div class="container">
    <div class="copyright  typeset">
      <small class="small">© Chuong Dong 2024</small>
    </div>

    
<nav class="nav  nav--footer">
  <ul class="list list--nav">
    

      

      <li class="item  item--nav">
        <a href="https://cdong1012.github.io">Chuong's Security Blog</a>
      </li>
    
  </ul>
</nav>


  </div>
</footer>


    <script type="text/javascript">
(() => {
  const registerServiceWorker = () => {
    if (!navigator.serviceWorker) {
      return;
    }

    navigator.serviceWorker
      .register("/sw.js")
      .then(registration => {
        console.log("Service Worker: registered");
      })
      .catch(err => {
        console.log("Service Worker: registration failed ", err);
      });
  };

  registerServiceWorker();
})();
</script>


    <!-- Overwrite this file with code you want before the closing body tag -->

  </body>

</html>
