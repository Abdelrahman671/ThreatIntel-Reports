<!doctype html><html lang="en"><head><title data-rh="true">Deobfuscating PowerShell Malware Droppers | by Ryan Cornateanu | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2021-09-27T05:51:51.756Z"/><meta data-rh="true" name="title" content="Deobfuscating PowerShell Malware Droppers | by Ryan Cornateanu | Medium"/><meta data-rh="true" property="og:title" content="Deobfuscating PowerShell Malware Droppers"/><meta data-rh="true" property="al:android:url" content="medium://p/b6c34499e41d"/><meta data-rh="true" property="al:ios:url" content="medium://p/b6c34499e41d"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="I recently saw a video of Ahmed S Kasmani dissecting a ComRAT PowerShell script to obtain the main malware that it drops onto the victim’s computer. If you haven’t seen the video yet, I highly…"/><meta data-rh="true" property="og:description" content="I recently saw a video of Ahmed S Kasmani dissecting a ComRAT PowerShell script to obtain the main malware that it drops onto the victim’s…"/><meta data-rh="true" property="og:url" content="https://ryancor.medium.com/deobfuscating-powershell-malware-droppers-b6c34499e41d"/><meta data-rh="true" property="al:web:url" content="https://ryancor.medium.com/deobfuscating-powershell-malware-droppers-b6c34499e41d"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:1200/1*yBQU9rG-T2stllALAmE5vg.png"/><meta data-rh="true" property="article:author" content="https://ryancor.medium.com"/><meta data-rh="true" name="author" content="Ryan Cornateanu"/><meta data-rh="true" name="robots" content="index,noarchive,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="Deobfuscating PowerShell Malware Droppers"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/b6c34499e41d"/><meta data-rh="true" property="twitter:description" content="I recently saw a video of Ahmed S Kasmani dissecting a ComRAT PowerShell script to obtain the main malware that it drops onto the victim’s…"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:1200/1*yBQU9rG-T2stllALAmE5vg.png"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="12 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/5d8de952517e8160e40ef9841c781cdc14a5db313057fa3c3de41c6f5b494b19"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:304:304/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:240:240/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:152:152/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:120:120/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="mask-icon" href="https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png" color="#171717"/><link data-rh="true" rel="preconnect" href="https://glyph.medium.com" crossOrigin=""/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://ryancor.medium.com"/><link data-rh="true" rel="canonical" href="https://ryancor.medium.com/deobfuscating-powershell-malware-droppers-b6c34499e41d"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/b6c34499e41d"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*yBQU9rG-T2stllALAmE5vg.png"],"url":"https:\u002F\u002Fryancor.medium.com\u002Fdeobfuscating-powershell-malware-droppers-b6c34499e41d","dateCreated":"2021-09-26T23:04:22.679Z","datePublished":"2021-09-26T23:04:22.679Z","dateModified":"2022-01-05T05:37:05.421Z","headline":"Deobfuscating PowerShell Malware Droppers - Ryan Cornateanu - Medium","name":"Deobfuscating PowerShell Malware Droppers - Ryan Cornateanu - Medium","description":"I recently saw a video of Ahmed S Kasmani dissecting a ComRAT PowerShell script to obtain the main malware that it drops onto the victim’s computer. If you haven’t seen the video yet, I highly…","identifier":"b6c34499e41d","author":{"@type":"Person","name":"Ryan Cornateanu","url":"https:\u002F\u002Fryancor.medium.com"},"creator":["Ryan Cornateanu"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fryancor.medium.com\u002F","logo":{"@type":"ImageObject","width":272,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:544\u002F7*V1_7XP4snlmqrc_0Njontw.png"}},"mainEntityOfPage":"https:\u002F\u002Fryancor.medium.com\u002Fdeobfuscating-powershell-malware-droppers-b6c34499e41d"}</script><style type="text/css" data-fela-rehydration="556" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}.grecaptcha-badge{visibility:hidden}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="556" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{width:auto}.av path{fill:#242424}.aw{height:25px}.ax{margin-left:16px}.ay{border:none}.az{border-radius:20px}.ba{width:240px}.bb{background:#F9F9F9}.bc path{fill:#6B6B6B}.be{outline:none}.bf{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bg{font-size:14px}.bh{width:100%}.bi{padding:10px 20px 10px 0}.bj{background-color:transparent}.bk{color:#242424}.bl::placeholder{color:#6B6B6B}.bm{display:inline-block}.bn{margin-left:12px}.bo{margin-right:12px}.bp{border-radius:4px}.bq{margin-left:24px}.br{height:24px}.bx{background-color:#F9F9F9}.by{border-radius:50%}.bz{height:32px}.ca{width:32px}.cb{justify-content:center}.ch{max-width:680px}.ci{min-width:0}.cj{animation:k1 1.2s ease-in-out infinite}.ck{height:100vh}.cl{margin-bottom:16px}.cm{margin-top:48px}.cn{align-items:flex-start}.co{flex-direction:column}.cp{justify-content:space-between}.cq{margin-bottom:24px}.cw{width:80%}.cx{background-color:#F2F2F2}.dd{height:44px}.de{width:44px}.df{margin:auto 0}.dg{margin-bottom:4px}.dh{height:16px}.di{width:120px}.dj{width:80px}.dp{margin-bottom:8px}.dq{width:96%}.dr{width:98%}.ds{width:81%}.dt{margin-left:8px}.du{color:#6B6B6B}.dv{font-size:13px}.dw{height:100%}.ep{color:#FFFFFF}.eq{fill:#FFFFFF}.er{background:#1A8917}.es{border-color:#1A8917}.ew:disabled{cursor:inherit !important}.ex:disabled{opacity:0.3}.ey:disabled:hover{background:#1A8917}.ez:disabled:hover{border-color:#1A8917}.fa{border-radius:99em}.fb{border-width:1px}.fc{border-style:solid}.fd{box-sizing:border-box}.fe{text-decoration:none}.ff{text-align:center}.fi{margin-right:32px}.fj{position:relative}.fk{fill:#6B6B6B}.fn{background:transparent}.fo svg{margin-left:4px}.fp svg{fill:#6B6B6B}.fr{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.fs{position:absolute}.fz{margin:0 24px}.gd{background:rgba(255, 255, 255, 1)}.ge{border:1px solid #F2F2F2}.gf{box-shadow:0 1px 4px #F2F2F2}.gg{max-height:100vh}.gh{overflow-y:auto}.gi{left:0}.gj{top:calc(100vh + 100px)}.gk{bottom:calc(100vh + 100px)}.gl{width:10px}.gm{pointer-events:none}.gn{word-break:break-word}.go{word-wrap:break-word}.gp:after{display:block}.gq:after{content:""}.gr:after{clear:both}.gs{line-height:1.23}.gt{letter-spacing:0}.gu{font-style:normal}.gv{font-weight:700}.ia{align-items:baseline}.ib{width:48px}.ic{height:48px}.id{border:2px solid rgba(255, 255, 255, 1)}.ie{z-index:0}.if{box-shadow:none}.ig{border:1px solid rgba(0, 0, 0, 0.05)}.ih{margin-bottom:2px}.ii{flex-wrap:nowrap}.ij{font-size:16px}.ik{line-height:24px}.im{margin:0 8px}.in{display:inline}.io{color:#1A8917}.ip{fill:#1A8917}.is{flex:0 0 auto}.iv{flex-wrap:wrap}.iw{padding-left:8px}.ix{padding-right:8px}.jy> *{flex-shrink:0}.jz{overflow-x:scroll}.ka::-webkit-scrollbar{display:none}.kb{scrollbar-width:none}.kc{-ms-overflow-style:none}.kd{width:74px}.ke{flex-direction:row}.kf{z-index:2}.kg{margin-right:4px}.kj{-webkit-user-select:none}.kk{border:0}.kl{fill:rgba(117, 117, 117, 1)}.ko{outline:0}.kp{user-select:none}.kq> svg{pointer-events:none}.kz{cursor:progress}.la{opacity:1}.lb{padding:4px 0}.le{margin-top:0px}.lf{width:16px}.lh{display:inline-flex}.ln{max-width:100%}.lo{padding:8px 2px}.lp svg{color:#6B6B6B}.mg{line-height:1.58}.mh{letter-spacing:-0.004em}.mi{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.nd{margin-bottom:-0.46em}.ne{text-decoration:underline}.nk{overflow-x:auto}.nl{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.nm{padding:20px}.nn{border-radius:0}.no{background:#F2F2F2}.np{line-height:1.18}.nq{letter-spacing:-0.022em}.nr{margin-top:-0.09em}.ns{margin-bottom:-0.09em}.nt{white-space:pre-wrap}.nu{min-width:fit-content}.nv{margin-left:auto}.nw{margin-right:auto}.nx{max-width:770px}.ny{clear:both}.oa{cursor:zoom-in}.ob{z-index:auto}.od{height:auto}.oe{margin-top:10px}.of{max-width:728px}.oi{line-height:1.12}.oj{font-weight:600}.pe{margin-bottom:-0.28em}.pf{max-width:761px}.pl{max-width:3460px}.pm{padding:2px 4px}.pn{font-size:75%}.po> strong{font-family:inherit}.pp{max-width:3468px}.pq{margin-top:0.91em}.pr{max-width:2764px}.ps{max-width:2316px}.pt{max-width:2318px}.pu{max-width:2322px}.pv{max-width:2432px}.pw{max-width:2980px}.px{font-style:italic}.py{max-width:2616px}.pz{max-width:2588px}.qa{max-width:1806px}.qb{max-width:2610px}.qc{max-width:2314px}.qd{max-width:2894px}.qe{max-width:5560px}.qf{list-style-type:disc}.qg{margin-left:30px}.qh{padding-left:0px}.qn{margin-bottom:26px}.qo{margin-top:6px}.qp{margin-top:8px}.qq{margin-right:8px}.qr{padding:8px 16px}.qs{border-radius:100px}.qt{transition:background 300ms ease}.qv{white-space:nowrap}.qw{border-top:none}.qx{margin-bottom:14px}.qy{height:52px}.qz{max-height:52px}.ra{box-sizing:content-box}.rb{position:static}.rc{z-index:1}.re{max-width:155px}.rk{margin-right:20px}.rq{height:0px}.rr{margin-bottom:40px}.sg{height:64px}.sh{width:64px}.si{align-self:flex-end}.sj{color:rgba(255, 255, 255, 1)}.sk{fill:rgba(255, 255, 255, 1)}.sl{background:rgba(25, 25, 25, 1)}.sm{border-color:rgba(25, 25, 25, 1)}.sp:disabled{opacity:0.1}.sq:disabled:hover{background:rgba(25, 25, 25, 1)}.sr:disabled:hover{border-color:rgba(25, 25, 25, 1)}.ss{flex:1 1 auto}.sy{padding-right:4px}.sz{font-weight:500}.tm{margin-top:16px}.tn{margin-bottom:54px}.tt{gap:18px}.tu{fill:rgba(61, 61, 61, 1)}.ug{border-bottom:solid 1px #E5E5E5}.uh{margin-top:72px}.ui{padding:24px 0}.uj{margin-bottom:0px}.uk{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.et:hover{background:#156D12}.eu:hover{border-color:#156D12}.ev:hover{cursor:pointer}.fl:hover{color:#242424}.fm:hover{fill:#242424}.fq:hover svg{fill:#242424}.ft:hover{background-color:rgba(0, 0, 0, 0.1)}.il:hover{text-decoration:underline}.iq:hover:not(:disabled){color:#156D12}.ir:hover:not(:disabled){fill:#156D12}.kn:hover{fill:rgba(8, 8, 8, 1)}.lc:hover{fill:#000000}.ld:hover p{color:#000000}.lg:hover{color:#000000}.lq:hover svg{color:#000000}.qu:hover{background-color:#F2F2F2}.sf:hover{background-color:none}.sn:hover{background:#000000}.so:hover{border-color:#242424}.tv:hover{fill:rgba(25, 25, 25, 1)}.bd:focus-within path{fill:#242424}.km:focus{fill:rgba(8, 8, 8, 1)}.lr:focus svg{color:#000000}.oc:focus{transform:scale(1.01)}.kr:active{border-style:none}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bw{width:64px}.cg{margin:0 64px}.cv{height:48px}.dc{margin-bottom:52px}.do{margin-bottom:48px}.ef{font-size:14px}.eg{line-height:20px}.em{font-size:13px}.eo{padding:5px 12px}.fh{display:flex}.fy{margin-bottom:68px}.gc{max-width:680px}.hq{font-size:42px}.hr{margin-top:1.19em}.hs{margin-bottom:32px}.ht{line-height:52px}.hu{letter-spacing:-0.011em}.hz{align-items:center}.jk{border-top:solid 1px #F2F2F2}.jl{border-bottom:solid 1px #F2F2F2}.jm{margin:32px 0 0}.jn{padding:3px 8px}.jw> *{margin-right:24px}.jx> :last-child{margin-right:0}.ky{margin-top:0px}.lm{margin:0}.mz{font-size:20px}.na{margin-top:2.14em}.nb{line-height:32px}.nc{letter-spacing:-0.003em}.nj{margin-top:56px}.pa{font-size:24px}.pb{margin-top:1.95em}.pc{line-height:30px}.pd{letter-spacing:-0.016em}.pk{margin-top:0.94em}.qm{margin-top:1.14em}.rj{display:inline-block}.rp{margin-bottom:104px}.rs{flex-direction:row}.rv{margin-bottom:0}.rw{margin-right:20px}.st{max-width:500px}.tk{line-height:24px}.tl{letter-spacing:0}.ts{margin-bottom:72px}.ua{margin:40px 0 0}.uf{padding-top:72px}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kx{margin-top:0px}.og{margin-left:auto}.oh{text-align:center}.ri{display:inline-block}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kw{margin-top:0px}.rh{display:inline-block}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.ku{margin-top:0px}.kv{margin-right:0px}.rg{display:inline-block}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dx{font-size:13px}.dy{line-height:20px}.eh{padding:0px 8px 1px}.fu{margin-bottom:4px}.gw{font-size:32px}.gx{margin-top:1.01em}.gy{margin-bottom:24px}.gz{line-height:38px}.ha{letter-spacing:-0.014em}.hv{align-items:flex-start}.it{flex-direction:column}.iy{margin:24px -24px 0}.iz{padding:0}.jo> *{margin-right:8px}.jp> :last-child{margin-right:24px}.kh{margin-left:0px}.ks{margin-top:0px}.kt{margin-right:0px}.li{margin:0}.ls{border:1px solid #F2F2F2}.lt{border-radius:99em}.lu{padding:0px 16px 0px 12px}.lv{height:38px}.lw{align-items:center}.ly svg{margin-right:8px}.mj{font-size:18px}.mk{margin-top:1.56em}.ml{line-height:28px}.mm{letter-spacing:-0.003em}.nf{margin-top:40px}.ok{font-size:20px}.ol{margin-top:1.2em}.om{line-height:24px}.on{letter-spacing:0}.pg{margin-top:0.67em}.qi{margin-top:1.34em}.rf{display:inline-block}.rl{margin-bottom:96px}.sd{margin-bottom:20px}.se{margin-right:0}.sx{max-width:100%}.ta{font-size:24px}.tb{line-height:30px}.tc{letter-spacing:-0.016em}.to{margin-bottom:64px}.tw{margin:32px 0 0}.ub{padding-top:48px}.lx:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ed{font-size:14px}.ee{line-height:20px}.ek{font-size:13px}.el{padding:5px 12px}.fg{display:flex}.fx{margin-bottom:68px}.gb{max-width:680px}.hl{font-size:42px}.hm{margin-top:1.19em}.hn{margin-bottom:32px}.ho{line-height:52px}.hp{letter-spacing:-0.011em}.hy{align-items:center}.jg{border-top:solid 1px #F2F2F2}.jh{border-bottom:solid 1px #F2F2F2}.ji{margin:32px 0 0}.jj{padding:3px 8px}.ju> *{margin-right:24px}.jv> :last-child{margin-right:0}.ll{margin:0}.mv{font-size:20px}.mw{margin-top:2.14em}.mx{line-height:32px}.my{letter-spacing:-0.003em}.ni{margin-top:56px}.ow{font-size:24px}.ox{margin-top:1.95em}.oy{line-height:30px}.oz{letter-spacing:-0.016em}.pj{margin-top:0.94em}.ql{margin-top:1.14em}.ro{margin-bottom:104px}.rt{flex-direction:row}.rx{margin-bottom:0}.ry{margin-right:20px}.su{max-width:500px}.ti{line-height:24px}.tj{letter-spacing:0}.tr{margin-bottom:72px}.tz{margin:40px 0 0}.ue{padding-top:72px}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bu{width:64px}.ce{margin:0 48px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{font-size:13px}.ec{line-height:20px}.ej{padding:0px 8px 1px}.fw{margin-bottom:68px}.ga{max-width:680px}.hg{font-size:42px}.hh{margin-top:1.19em}.hi{margin-bottom:32px}.hj{line-height:52px}.hk{letter-spacing:-0.011em}.hx{align-items:center}.jc{border-top:solid 1px #F2F2F2}.jd{border-bottom:solid 1px #F2F2F2}.je{margin:32px 0 0}.jf{padding:3px 8px}.js> *{margin-right:24px}.jt> :last-child{margin-right:0}.lk{margin:0}.mr{font-size:20px}.ms{margin-top:2.14em}.mt{line-height:32px}.mu{letter-spacing:-0.003em}.nh{margin-top:56px}.os{font-size:24px}.ot{margin-top:1.95em}.ou{line-height:30px}.ov{letter-spacing:-0.016em}.pi{margin-top:0.94em}.qk{margin-top:1.14em}.rn{margin-bottom:104px}.ru{flex-direction:row}.rz{margin-bottom:0}.sa{margin-right:20px}.sv{max-width:500px}.tg{line-height:24px}.th{letter-spacing:0}.tq{margin-bottom:72px}.ty{margin:40px 0 0}.ud{padding-top:72px}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bt{width:24px}.cd{margin:0 24px}.cs{height:40px}.cz{margin-bottom:44px}.dl{margin-bottom:32px}.dz{font-size:13px}.ea{line-height:20px}.ei{padding:0px 8px 1px}.fv{margin-bottom:4px}.hb{font-size:32px}.hc{margin-top:1.01em}.hd{margin-bottom:24px}.he{line-height:38px}.hf{letter-spacing:-0.014em}.hw{align-items:flex-start}.iu{flex-direction:column}.ja{margin:24px 0 0}.jb{padding:0}.jq> *{margin-right:8px}.jr> :last-child{margin-right:8px}.ki{margin-left:0px}.lj{margin:0}.lz{border:1px solid #F2F2F2}.ma{border-radius:99em}.mb{padding:0px 16px 0px 12px}.mc{height:38px}.md{align-items:center}.mf svg{margin-right:8px}.mn{font-size:18px}.mo{margin-top:1.56em}.mp{line-height:28px}.mq{letter-spacing:-0.003em}.ng{margin-top:40px}.oo{font-size:20px}.op{margin-top:1.2em}.oq{line-height:24px}.or{letter-spacing:0}.ph{margin-top:0.67em}.qj{margin-top:1.34em}.rm{margin-bottom:96px}.sb{margin-bottom:20px}.sc{margin-right:0}.sw{max-width:100%}.td{font-size:24px}.te{line-height:30px}.tf{letter-spacing:-0.016em}.tp{margin-bottom:64px}.tx{margin:32px 0 0}.uc{padding-top:48px}.me:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="print">.rd{display:none}</style><style type="text/css" data-fela-rehydration="556" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.nz{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="p q r s t u v w x i d y z"><a class="du ag dv bf ak b am an ao ap aq ar as at s u w i d q dw z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb6c34499e41d&amp;%7Efeature=LoOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---top_nav_layout_nav----------------------------------" rel="noopener follow">Open in app<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="none" viewBox="0 0 10 10" class="dt"><path fill="currentColor" d="M.985 8.485a.375.375 0 1 0 .53.53zM8.75 1.25h.375A.375.375 0 0 0 8.75.875zM8.375 6.5a.375.375 0 1 0 .75 0zM3.5.875a.375.375 0 1 0 0 .75zm-1.985 8.14 7.5-7.5-.53-.53-7.5 7.5zm6.86-7.765V6.5h.75V1.25zM3.5 1.625h5.25v-.75H3.5z"></path></svg></a><div class="ab q"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><button class="bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff" data-testid="headerSignUpButton">Sign up</button></span></p><div class="ax l"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSignInButton" href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fryancor.medium.com%2Fdeobfuscating-powershell-malware-droppers-b6c34499e41d&amp;source=post_page---top_nav_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign in</a></span></p></div></div></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" href="https://medium.com/?source=---top_nav_layout_nav----------------------------------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="719" height="160" fill="none" viewBox="0 0 719 160" class="au av aw"><path fill="#242424" d="m174.104 9.734.215-.047V8.02H130.39L89.6 103.89 48.81 8.021H1.472v1.666l.212.047c8.018 1.81 12.09 4.509 12.09 14.242V137.93c0 9.734-4.087 12.433-12.106 14.243l-.212.047v1.671h32.118v-1.665l-.213-.048c-8.018-1.809-12.089-4.509-12.089-14.242V30.586l52.399 123.305h2.972l53.925-126.743V140.75c-.687 7.688-4.721 10.062-11.982 11.701l-.215.05v1.652h55.948v-1.652l-.215-.05c-7.269-1.639-11.4-4.013-12.087-11.701l-.037-116.774h.037c0-9.733 4.071-12.432 12.087-14.242m25.555 75.488c.915-20.474 8.268-35.252 20.606-35.507 3.806.063 6.998 1.312 9.479 3.714 5.272 5.118 7.751 15.812 7.368 31.793zm-.553 5.77h65.573v-.275c-.186-15.656-4.721-27.834-13.466-36.196-7.559-7.227-18.751-11.203-30.507-11.203h-.263c-6.101 0-13.584 1.48-18.909 4.16-6.061 2.807-11.407 7.003-15.855 12.511-7.161 8.874-11.499 20.866-12.554 34.343q-.05.606-.092 1.212a50 50 0 0 0-.065 1.151 85.807 85.807 0 0 0-.094 5.689c.71 30.524 17.198 54.917 46.483 54.917 25.705 0 40.675-18.791 44.407-44.013l-1.886-.664c-6.557 13.556-18.334 21.771-31.738 20.769-18.297-1.369-32.314-19.922-31.042-42.395m139.722 41.359c-2.151 5.101-6.639 7.908-12.653 7.908s-11.513-4.129-15.418-11.63c-4.197-8.053-6.405-19.436-6.405-32.92 0-28.067 8.729-46.22 22.24-46.22 5.657 0 10.111 2.807 12.236 7.704zm43.499 20.008c-8.019-1.897-12.089-4.722-12.089-14.951V1.309l-48.716 14.353v1.757l.299-.024c6.72-.543 11.278.386 13.925 2.83 2.072 1.915 3.082 4.853 3.082 8.987v18.66c-4.803-3.067-10.516-4.56-17.448-4.56-14.059 0-26.909 5.92-36.176 16.672-9.66 11.205-14.767 26.518-14.767 44.278-.003 31.72 15.612 53.039 38.851 53.039 13.595 0 24.533-7.449 29.54-20.013v16.865h43.711v-1.746zM424.1 19.819c0-9.904-7.468-17.374-17.375-17.374-9.859 0-17.573 7.632-17.573 17.374s7.721 17.374 17.573 17.374c9.907 0 17.375-7.47 17.375-17.374m11.499 132.546c-8.019-1.897-12.089-4.722-12.089-14.951h-.035V43.635l-43.714 12.551v1.705l.263.024c9.458.842 12.047 4.1 12.047 15.152v81.086h43.751v-1.746zm112.013 0c-8.018-1.897-12.089-4.722-12.089-14.951V43.635l-41.621 12.137v1.71l.246.026c7.733.813 9.967 4.257 9.967 15.36v59.279c-2.578 5.102-7.415 8.131-13.274 8.336-9.503 0-14.736-6.419-14.736-18.073V43.638l-43.714 12.55v1.703l.262.024c9.459.84 12.05 4.097 12.05 15.152v50.17a56.3 56.3 0 0 0 .91 10.444l.787 3.423c3.701 13.262 13.398 20.197 28.59 20.197 12.868 0 24.147-7.966 29.115-20.43v17.311h43.714v-1.747zm169.818 1.788v-1.749l-.213-.05c-8.7-2.006-12.089-5.789-12.089-13.49v-63.79c0-19.89-11.171-31.761-29.883-31.761-13.64 0-25.141 7.882-29.569 20.16-3.517-13.01-13.639-20.16-28.606-20.16-13.146 0-23.449 6.938-27.869 18.657V43.643L545.487 55.68v1.715l.263.024c9.345.829 12.047 4.181 12.047 14.95v81.784h40.787v-1.746l-.215-.053c-6.941-1.631-9.181-4.606-9.181-12.239V66.998c1.836-4.289 5.537-9.37 12.853-9.37 9.086 0 13.692 6.296 13.692 18.697v77.828h40.797v-1.746l-.215-.053c-6.94-1.631-9.18-4.606-9.18-12.239V75.066a42 42 0 0 0-.578-7.26c1.947-4.661 5.86-10.177 13.475-10.177 9.214 0 13.691 6.114 13.691 18.696v77.828z"></path></svg></a><div class="ax h"><div class="ab ay az ba bb q bc bd"><div class="bm" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bn bo ab"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z" clip-rule="evenodd"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ay be bf bg z bh bi bj bk bl" placeholder="Search" value=""/></div></div></div><div class="h k w fg fh"><div class="fi ab"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2Fnew-story&amp;source=---top_nav_layout_nav-----------------------new_post_topnav-----------" rel="noopener follow"><div class="bf b bg z du fj fk ab q fl fm"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" aria-label="Write"><path fill="currentColor" d="M14 4a.5.5 0 0 0 0-1zm7 6a.5.5 0 0 0-1 0zm-7-7H4v1h10zM3 4v16h1V4zm1 17h16v-1H4zm17-1V10h-1v10zm-1 1a1 1 0 0 0 1-1h-1zM3 20a1 1 0 0 0 1 1v-1zM4 3a1 1 0 0 0-1 1h1z"></path><path stroke="currentColor" d="m17.5 4.5-8.458 8.458a.25.25 0 0 0-.06.098l-.824 2.47a.25.25 0 0 0 .316.316l2.47-.823a.25.25 0 0 0 .098-.06L19.5 6.5m-2-2 2.323-2.323a.25.25 0 0 1 .354 0l1.646 1.646a.25.25 0 0 1 0 .354L19.5 6.5m-2-2 2 2"></path></svg><div class="dt l">Write</div></div></a></span></div></div><div class="k j i d"><div class="fi ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" href="https://medium.com/search?source=---top_nav_layout_nav----------------------------------" rel="noopener follow"><div class="bf b bg z du fj fk ab q fl fm"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" aria-label="Search"><path fill="currentColor" fill-rule="evenodd" d="M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z" clip-rule="evenodd"></path></svg></div></a></div></div><div class="fi h k j"><div class="ab q"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><button class="bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff" data-testid="headerSignUpButton">Sign up</button></span></p><div class="ax l"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSignInButton" href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fryancor.medium.com%2Fdeobfuscating-powershell-malware-droppers-b6c34499e41d&amp;source=post_page---top_nav_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign in</a></span></p></div></div></div><div class="l" aria-hidden="false"><button class="ay fn am ab q ao fo fp fq" aria-label="user options menu" data-testid="headerUserIcon"><div class="l fj"><img alt="" class="l fd by bz ca cx" src="https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png" width="32" height="32" loading="lazy" role="presentation"/><div class="fr by l bz ca fs n ay ft"></div></div></button></div></div></div><div class="l"><div class="fu fv fw fx fy l"><div class="ab cb"><div class="ci bh fz ga gb gc"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="fs gi gj gk gl gm"></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><div><h1 id="0071" class="pw-post-title gs gt gu bf gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hk hl hm hn ho hp hq hr hs ht hu bk" data-testid="storyTitle">Deobfuscating PowerShell Malware Droppers</h1><div><div class="speechify-ignore ab cp"><div class="speechify-ignore bh l"><div class="hv hw hx hy hz ab"><div><div class="ab ia"><div><div class="bm" aria-hidden="false"><a rel="noopener follow" href="/?source=post_page---byline--b6c34499e41d--------------------------------"><div class="l ib ic by id ie"><div class="l fj"><img alt="Ryan Cornateanu" class="l fd by dd de cx" src="https://miro.medium.com/v2/resize:fill:88:88/2*C-CaB_Tc2FWfSLM1qV14Gg.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="if by l dd de fs n ig ft"></div></div></div></a></div></div></div></div><div class="bn bh l"><div class="ab"><div style="flex:1"><span class="bf b bg z bk"><div class="ih ab q"><div class="ab q ii"><div class="ab q"><div><div class="bm" aria-hidden="false"><p class="bf b ij ik bk"><a class="af ag ah ai aj ak al am an ao ap aq ar il" data-testid="authorName" rel="noopener follow" href="/?source=post_page---byline--b6c34499e41d--------------------------------">Ryan Cornateanu</a></p></div></div></div><span class="im in" aria-hidden="true"><span class="bf b bg z du">·</span></span><p class="bf b ij ik du"><span><a class="io ip ah ai aj ak al am an ao ap aq ar ex iq ir" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F239d5a05aa69&amp;operation=register&amp;redirect=https%3A%2F%2Fryancor.medium.com%2Fdeobfuscating-powershell-malware-droppers-b6c34499e41d&amp;user=Ryan+Cornateanu&amp;userId=239d5a05aa69&amp;source=post_page-239d5a05aa69--byline--b6c34499e41d---------------------post_header-----------" rel="noopener follow">Follow</a></span></p></div></div></span></div></div><div class="l is"><span class="bf b bg z du"><div class="ab cn it iu iv"><span class="bf b bg z du"><div class="ab ae"><span data-testid="storyReadTime">12 min read</span><div class="iw ix l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="bf b bg z du">·</span></span></div><span data-testid="storyPublishDate">Sep 26, 2021</span></div></span></div></span></div></div></div><div class="ab cp iy iz ja jb jc jd je jf jg jh ji jj jk jl jm jn"><div class="h k w fg fh q"><div class="kd l"><div class="ab q ke kf"><div class="pw-multi-vote-icon fj kg kh ki kj"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fb6c34499e41d&amp;operation=register&amp;redirect=https%3A%2F%2Fryancor.medium.com%2Fdeobfuscating-powershell-malware-droppers-b6c34499e41d&amp;user=Ryan+Cornateanu&amp;userId=239d5a05aa69&amp;source=---header_actions--b6c34499e41d---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="kk ao kl km kn ko am kp kq kr kj"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l ks kt ku kv kw kx ky"><p class="bf b dv z du"><span class="kz">--</span></p></div></div></div><div><div class="bm" aria-hidden="false"><button class="ao kk la lb ab q fk lc ld" aria-label="responses"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="le"><path d="M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z"></path></svg></button></div></div></div><div class="ab q jo jp jq jr js jt ju jv jw jx jy jz ka kb kc"><div class="lf k j i d"></div><div class="h k"><div><div class="bm" aria-hidden="false"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerBookmarkButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb6c34499e41d&amp;operation=register&amp;redirect=https%3A%2F%2Fryancor.medium.com%2Fdeobfuscating-powershell-malware-droppers-b6c34499e41d&amp;source=---header_actions--b6c34499e41d---------------------bookmark_footer-----------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="none" viewBox="0 0 25 25" class="du lg" aria-label="Add to list bookmark button"><path fill="currentColor" d="M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z"></path></svg></a></span></div></div></div><div class="fd lh cn"><div class="l ae"><div class="ab cb"><div class="li lj lk ll lm ln ci bh"><div class="ab"><div class="bm bh" aria-hidden="false"><div><div class="bm" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af fk ah ai aj ak al lo an ao ap ex lp lq ld lr ls lt lu lv s lw lx ly lz ma mb mc u md me mf"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0m9-10C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2m3.376 10.416-4.599 3.066a.5.5 0 0 1-.777-.416V8.934a.5.5 0 0 1 .777-.416l4.599 3.066a.5.5 0 0 1 0 .832" clip-rule="evenodd"></path></svg><div class="j i d"><p class="bf b bg z du">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bm" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bm" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af fk ah ai aj ak al lo an ao ap ex lp lq ld lr ls lt lu lv s lw lx ly lz ma mb mc u md me mf"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1" clip-rule="evenodd"></path></svg><div class="j i d"><p class="bf b bg z du">Share</p></div></button></div></div></div></div></div></div></div></div></div><p id="30b0" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">I recently saw a <a class="af ne" href="https://www.youtube.com/watch?v=K8n1xv1KxNI" rel="noopener ugc nofollow" target="_blank">video</a> of <a class="af ne" href="https://www.youtube.com/channel/UC0vsNncAvJlPh2XGUi5s33Q" rel="noopener ugc nofollow" target="_blank">Ahmed S Kasmani</a> dissecting a ComRAT PowerShell script to obtain the main malware that it drops onto the victim’s computer. If you haven’t seen the video yet, I highly encourage you to watch it. This paper is going to go into similar detail, as well as my own approach to deobfuscating PowerShell scripts to get to the main payload. To follow along, you can use this hash to download this script from VirusTotal:</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="5656" class="np nq gu nl b ij nr ns l nt nu">134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef8</span></pre><p id="f047" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">So what is ‘ComRAT’ besides a city and municipality in Moldova and the capital of the autonomous region of Gagauzia? It was started by a Turla hacker group, one of Russia’s most advanced state-sponsored hacking groups that began in 2007. Although the latest version of ComRAT v4 was created in 2017, it is still being used a bit today.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw nx"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*YTIYg7N_3N8Zj3xiq1icVA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*YTIYg7N_3N8Zj3xiq1icVA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*YTIYg7N_3N8Zj3xiq1icVA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*YTIYg7N_3N8Zj3xiq1icVA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*YTIYg7N_3N8Zj3xiq1icVA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*YTIYg7N_3N8Zj3xiq1icVA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*YTIYg7N_3N8Zj3xiq1icVA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*YTIYg7N_3N8Zj3xiq1icVA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*YTIYg7N_3N8Zj3xiq1icVA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*YTIYg7N_3N8Zj3xiq1icVA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*YTIYg7N_3N8Zj3xiq1icVA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*YTIYg7N_3N8Zj3xiq1icVA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*YTIYg7N_3N8Zj3xiq1icVA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*YTIYg7N_3N8Zj3xiq1icVA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="314" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">ComRAT Timeline from ZDnet[.]com</figcaption></figure><p id="b7ae" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Turla hacking group’s modus operandi was to target government and military facilities. Turla has since been dubbed by other names such as Snake, Krypton, and Venomous Bear.</p><h1 id="a81f" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">Attack Chain</h1><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pf"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*BIf9pJqt18CQfClcmc-rHg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*BIf9pJqt18CQfClcmc-rHg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*BIf9pJqt18CQfClcmc-rHg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*BIf9pJqt18CQfClcmc-rHg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*BIf9pJqt18CQfClcmc-rHg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*BIf9pJqt18CQfClcmc-rHg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*BIf9pJqt18CQfClcmc-rHg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*BIf9pJqt18CQfClcmc-rHg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*BIf9pJqt18CQfClcmc-rHg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*BIf9pJqt18CQfClcmc-rHg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*BIf9pJqt18CQfClcmc-rHg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*BIf9pJqt18CQfClcmc-rHg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*BIf9pJqt18CQfClcmc-rHg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*BIf9pJqt18CQfClcmc-rHg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="247" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Mechanism of Attack</figcaption></figure><p id="ab87" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">In this paper, we will be going over how the dropper operates, and the logic on how the malware gets to stage 2, which is the DLL payload. This cyber-kill chain graph will be a work in progress on my end as I did not fully reverse engineer much after the DLL was dropped. Maybe I will turn this into a series, where I go over every part of the chain, but for now let’s focus on the first three components in the graphic above.</p><h1 id="8348" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">Diving into the PowerShell</h1><p id="ec89" class="pw-post-body-paragraph mg mh gu mi b mj pg ml mm mn ph mp mq mr pi mt mu mv pj mx my mz pk nb nc nd gn bk">For this lab exercise, we are going to use Visual Studio Code on a Windows VM since they have a great linter for PowerShell scripts. Let’s open up the file, and dive in.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pl"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*yBQU9rG-T2stllALAmE5vg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*yBQU9rG-T2stllALAmE5vg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*yBQU9rG-T2stllALAmE5vg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*yBQU9rG-T2stllALAmE5vg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*yBQU9rG-T2stllALAmE5vg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*yBQU9rG-T2stllALAmE5vg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*yBQU9rG-T2stllALAmE5vg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*yBQU9rG-T2stllALAmE5vg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*yBQU9rG-T2stllALAmE5vg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*yBQU9rG-T2stllALAmE5vg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*yBQU9rG-T2stllALAmE5vg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*yBQU9rG-T2stllALAmE5vg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*yBQU9rG-T2stllALAmE5vg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*yBQU9rG-T2stllALAmE5vg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="391" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Original PowerShell opened in VSC</figcaption></figure><p id="adfe" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Three major things hit me at first… 1) this is a lot of base64, 2) the PowerShell is not formatted out correctly, and 3) the variable names are completely randomized. First let’s take care of how many lines of code the base64 is taking up. We can easily fix this by going to <code class="cx pm pn po nl b">View-&gt;Toggle Word Wrap</code> and uncheck it by simply clicking on it. Now, we want this to be properly formatted, this can be fixed by hitting <code class="cx pm pn po nl b">SHIFT+ALT+F</code>.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pp"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*yvboEjYjpmEEKTXCi6OkvA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*yvboEjYjpmEEKTXCi6OkvA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*yvboEjYjpmEEKTXCi6OkvA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*yvboEjYjpmEEKTXCi6OkvA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*yvboEjYjpmEEKTXCi6OkvA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*yvboEjYjpmEEKTXCi6OkvA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*yvboEjYjpmEEKTXCi6OkvA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*yvboEjYjpmEEKTXCi6OkvA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*yvboEjYjpmEEKTXCi6OkvA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*yvboEjYjpmEEKTXCi6OkvA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*yvboEjYjpmEEKTXCi6OkvA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*yvboEjYjpmEEKTXCi6OkvA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*yvboEjYjpmEEKTXCi6OkvA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*yvboEjYjpmEEKTXCi6OkvA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="355" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">PowerShell reformatted</figcaption></figure><p id="c613" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">This looks a lot cleaner! Time to break down the two functions inside this PowerShell and start renaming function / variable names. Let’s start with the first one. It looks like some sort of string generator.</p><h1 id="c979" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">Obfuscation of Function &amp; Variable Names</h1><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="656f" class="np nq gu nl b ij nr ns l nt nu">function TVM730egf([string[]]$GP50afa) {<br/>     $UC33gfa = ((1..(Get-Random -Min 2 -Max 4) | <br/>        % { [Char](Get-Random -Min 0x41 -Max 0x5B) }) -join &#x27;&#x27;);<br/>     $EQ33abh = ((1..(Get-Random -Min 2 -Max 4) | <br/>        % { [Char](Get-Random -Min 0x30 -Max 0x3A) }) -join &#x27;&#x27;);<br/>     $OFK689fa = ((1..(Get-Random -Min 2 -Max 4) | <br/>        % { [Char](Get-Random -Min 0x61 -Max 0x6B) }) -join &#x27;&#x27;);<br/>     $TTG32aa = $UC33gfa + $EQ33abh + $OFK689fa;<br/>     if ($GP50afa -contains $TTG32aa) {<br/>          $TTG32aa = Get-RandomVar $GP50afa;<br/>     } <br/>     $GP50afa += $TTG32aa;<br/>     return $TTG32aa, $GP50afa;<br/>}</span></pre><p id="338b" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">The first three lines look to be generating only capital letters ranging from 2 to 4 bytes. The second line does exactly the same thing as line 1 but only generates numbers. The third generator generates a 2 to 4 byte lowercase string. Let’s rename a few variables and see how it looks.</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="2439" class="np nq gu nl b ij nr ns l nt nu">function rand_string_generator([string[]]$param1_str) {<br/>     $rand_upper_str = ((1..(Get-Random -Min 2 -Max 4) ...<br/>     $rand_num_str = ((1..(Get-Random -Min 2 -Max 4) ...<br/>     $rand_lower_str = ((1..(Get-Random -Min 2 -Max 4) ...<br/>     $rand_str_gen = $rand_upper_str <br/>                     + $rand_num_str <br/>                     + $rand_lower_str;<br/>     if ($param1_str -contains $rand_str_gen) {<br/>          $rand_str_gen = Get-RandomVar $param1_str;<br/>     } <br/>     $param1_str += $rand_str_gen;<br/>     return $rand_str_gen, $param1_str;<br/>}</span></pre><p id="c969" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Now we can copy this function, and paste it into a PowerShell command line, and see what the output will look like.</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="e407" class="np nq gu nl b ij nr ns l nt nu">PS C:\Users\ryancor&gt; rand_string_generator(&quot;test&quot;)<br/>FN36dd<br/>test<br/>FN36dd</span></pre><p id="08ed" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Easy enough, this looks like it feeds in a string, and does a check to make sure the random string it generates does not match the string parameter. If they are a match, it will get a random byte from the parameter string and add it to the random string. Looks like this function gets referenced about 10 times throughout the program.</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="fde7" class="np nq gu nl b ij nr ns l nt nu">$rand_string_array = @();<br/>[string]$PS061hh, [string[]]$rand_string_array = <br/>                        rand_string_generator $rand_string_array;<br/>[string]$RPW45dij, [string[]]$rand_string_array = <br/>                        rand_string_generator $rand_string_array;<br/>[string]$RIZ505ia, [string[]]$rand_string_array = <br/>                        rand_string_generator $rand_string_array;<br/>...</span><span id="31e6" class="np nq gu nl b ij pq ns l nt nu">PS C:\Users\ryancor&gt; $rand_string_array<br/>XLA320efe<br/>YUP59cg<br/>CB456fgb<br/>BW13chi<br/>NQG095gg<br/>NP120ceh<br/>YG27gf<br/>OXN26bd<br/>VE440ihi<br/>GH90ggd</span></pre><p id="7fc9" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">If we look at the array and the single random strings returned, they never get referenced again in the program. With that being said, if we pay attention to the how the function and variable names are specifically labeled, we find a massive similarity to the output above. The string generator takes in a string and concatenates an array of randomized bytes that start with two to three uppercase letters, followed by two to three integers, then lastly, two to three lowercase letters. This entire script follows this <code class="cx pm pn po nl b">XXX000xxx</code> naming convention. So it’s safe to say this is how they obfuscated the entire dropper as I assume the author’s copy of this PowerShell script has debug symbols that helped the malware writers QA their work before shipping this out to their targets/victims.</p><h1 id="522b" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">Executing Embedded C# Code</h1><p id="d65f" class="pw-post-body-paragraph mg mh gu mi b mj pg ml mm mn ph mp mq mr pi mt mu mv pj mx my mz pk nb nc nd gn bk">Time to move on over to <code class="cx pm pn po nl b">function PAZ488af</code> which referenced the random string generator, but we are going to start from the top as it has important information about what’s going to be dropped, while also renaming some variables to better understand what is happening here. Starting with the first 10 lines, there is already so much going on:</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="3569" class="np nq gu nl b ij nr ns l nt nu">$task_sched = New-Object -ComObject(&#x27;Schedule.Service&#x27;);<br/>$task_sched.connect(&#x27;localhost&#x27;);<br/>$objFoldr = $task_sched.GetFolder($param2);<br/>$null_task = $task_sched.NewTask($null);</span><span id="86f3" class="np nq gu nl b ij pq ns l nt nu">[string]$filename = [System.IO.Path]::GetTempFileName();<br/>Remove-Item -Path $filename -Force;<br/>[string]$ps1_name = [System.IO.Path]::GetFileName($filename);</span><span id="a58d" class="np nq gu nl b ij pq ns l nt nu">$ascii = New-Object System.Text.ASCIIEncoding;<br/>$base64_decoded_bytes = <br/>              [Convert]::FromBase64String(&quot;cHVibGljIHN0YXRpY....&quot;);<br/>$ps_decoded_class = $ascii.GetString($base64_decoded_bytes, 0, <br/>                                     $base64_decoded_bytes.Length);<br/>try { <br/>      Add-Type $ps_decoded_class -erroraction &#x27;silentlycontinue&#x27; } <br/> catch {<br/>      return;<br/> }</span></pre><p id="e906" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">The first four lines are dedicated to testing the presence of a folder, and scheduling a task at <code class="cx pm pn po nl b">Microsoft\Windows\Customer Experience Improvement Program</code>, we don’t know what significance this has yet but maybe we will find out later. If you’re wondering how I found out what <code class="cx pm pn po nl b">$param2</code> was in <code class="cx pm pn po nl b">$task_sched.GetFolder($param2);</code> was, all I had to do was trace out how this function was being called, and the second to last line of this PowerShell dropper shows the string arguments that were used.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pr"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*PyTd6P0FzsQA9nu_CBfRuQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*PyTd6P0FzsQA9nu_CBfRuQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*PyTd6P0FzsQA9nu_CBfRuQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*PyTd6P0FzsQA9nu_CBfRuQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*PyTd6P0FzsQA9nu_CBfRuQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*PyTd6P0FzsQA9nu_CBfRuQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*PyTd6P0FzsQA9nu_CBfRuQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*PyTd6P0FzsQA9nu_CBfRuQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*PyTd6P0FzsQA9nu_CBfRuQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*PyTd6P0FzsQA9nu_CBfRuQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*PyTd6P0FzsQA9nu_CBfRuQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*PyTd6P0FzsQA9nu_CBfRuQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*PyTd6P0FzsQA9nu_CBfRuQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*PyTd6P0FzsQA9nu_CBfRuQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="38" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">String Arguments Used</figcaption></figure><p id="a0e8" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">The next 3 lines will grab the PowerShell script name and remove the path from it until it is just a filename string. Now, the last few lines of the script above are decoding a large base64 string, so we can use <a class="af ne" href="https://gchq.github.io/CyberChef" rel="noopener ugc nofollow" target="_blank">cyberchef</a> to see this is.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw ps"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*FVxq1Soiv47ojwp0gF0azw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*FVxq1Soiv47ojwp0gF0azw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*FVxq1Soiv47ojwp0gF0azw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*FVxq1Soiv47ojwp0gF0azw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*FVxq1Soiv47ojwp0gF0azw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*FVxq1Soiv47ojwp0gF0azw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*FVxq1Soiv47ojwp0gF0azw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*FVxq1Soiv47ojwp0gF0azw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*FVxq1Soiv47ojwp0gF0azw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*FVxq1Soiv47ojwp0gF0azw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*FVxq1Soiv47ojwp0gF0azw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*FVxq1Soiv47ojwp0gF0azw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*FVxq1Soiv47ojwp0gF0azw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*FVxq1Soiv47ojwp0gF0azw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="500" loading="lazy" role="presentation"/></picture></div></div></figure><p id="737b" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Looks like some interesting embedded C#! So what I like to do since that classname will most likely be referenced in our script, is copy and paste this into our dropper file. Yes, you can execute C# functions from PowerShell, and that’s what the <code class="cx pm pn po nl b">try,except</code> statement is attempting to do. As shown in Microsoft’s documentation, the <code class="cx pm pn po nl b">Add-Type</code> cmdlet lets you define a Microsoft .NET Core class in your PowerShell session. You can then instantiate objects, by using the <code class="cx pm pn po nl b">New-Object</code> cmdlet, and use the objects just as you would use any .NET Core object.</p><p id="075b" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">So let’s rename the classname <code class="cx pm pn po nl b">RZP645be</code> to <code class="cx pm pn po nl b">decryption_class</code>, and the function within <code class="cx pm pn po nl b">XD014ic</code> to <code class="cx pm pn po nl b">decrypt</code>, since this looks to be a simple multi-key byte XOR decryption. You’ll notice as we are replacing this in the script, we can see it is being called a couple of times throughout the PowerShell script.</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="a9e4" class="np nq gu nl b ij nr ns l nt nu">$TEX262hh = &#x27;H4sIAAAAAAAEAIy5xw7ETJIeeB9g3qEhCJAEzgy9KQ...&#x27;<br/>$HT29hh = [Convert]::FromBase64String($TEX262hh);<br/>$MO67cc = &#x27;H4sIAAAAAAAEAIy5xw7ETJIeeB9g3qEhCJAEzgy9KQ...&#x27;<br/>$PVU468aa = [Convert]::FromBase64String($MO67cc);<br/>$GS459ea = &quot;$((1..(Get-Random -Min 8 -Max 10) | % <br/>        {[Char](Get-Random -Min 0x3A -Max 0x5B)}) -join &#x27;&#x27;)<br/>        $((1..(Get-Random -Min 5 -Max 8) | % {[Char](Get-Random <br/>        -Min 0x30 -Max 0x3A)}) -join &#x27;&#x27;)<br/>        $((1..(Get-Random -Min 8 -Max 10) | %{[Char](Get-Random <br/>        -Min 0x61 -Max 0x7B)}) -join &#x27;&#x27;)&quot;;<br/>[byte[]]$JQ587aa = [decryption_class]::decrypt($HT29hh, <br/>                                        $ascii.GetBytes($GS459ea));<br/>[byte[]]$QIG418ba = [decryption_class]::decrypt($PVU468aa, <br/>                                        $ascii.GetBytes($GS459ea));<br/>$AT85ced = [Convert]::ToBase64String($JQ587aa);<br/>$ARO88iab = [Convert]::ToBase64String($QIG418ba);</span></pre><p id="c402" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Let’s break this down, we have two extremely large base64 strings, and so we will start with those using cyberchef. Once you use the base64 decoder, you’ll notice both of these encoded strings have very similar headers, so it has to mean something:</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="1b7b" class="np nq gu nl b ij nr ns l nt nu">...........¹Ç.ÄL..x.`Þ¡!...Î.½)</span></pre><p id="3ea7" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">The problem is, we have no idea what type of file format this is. So we can use cyberchef’s <code class="cx pm pn po nl b">Detect File Type plugin</code> to help us identify.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pt"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*afVN4u-gzTpXzw9JuNqhSw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*afVN4u-gzTpXzw9JuNqhSw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*afVN4u-gzTpXzw9JuNqhSw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*afVN4u-gzTpXzw9JuNqhSw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*afVN4u-gzTpXzw9JuNqhSw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*afVN4u-gzTpXzw9JuNqhSw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*afVN4u-gzTpXzw9JuNqhSw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*afVN4u-gzTpXzw9JuNqhSw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*afVN4u-gzTpXzw9JuNqhSw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*afVN4u-gzTpXzw9JuNqhSw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*afVN4u-gzTpXzw9JuNqhSw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*afVN4u-gzTpXzw9JuNqhSw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*afVN4u-gzTpXzw9JuNqhSw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*afVN4u-gzTpXzw9JuNqhSw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="544" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Detecting file format of unknown bytes</figcaption></figure><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pu"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*va9m52eMYrwMgFYJT56lqg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*va9m52eMYrwMgFYJT56lqg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*va9m52eMYrwMgFYJT56lqg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*va9m52eMYrwMgFYJT56lqg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*va9m52eMYrwMgFYJT56lqg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*va9m52eMYrwMgFYJT56lqg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*va9m52eMYrwMgFYJT56lqg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*va9m52eMYrwMgFYJT56lqg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*va9m52eMYrwMgFYJT56lqg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*va9m52eMYrwMgFYJT56lqg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*va9m52eMYrwMgFYJT56lqg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*va9m52eMYrwMgFYJT56lqg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*va9m52eMYrwMgFYJT56lqg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*va9m52eMYrwMgFYJT56lqg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="544" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Gunzip the bytes</figcaption></figure><p id="db17" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">It looks like we have more PowerShell code being decompressed. So we can start renaming variables to make this script look cleaner.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pv"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*zTw6U_nILQnu-d624fezSQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*zTw6U_nILQnu-d624fezSQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*zTw6U_nILQnu-d624fezSQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*zTw6U_nILQnu-d624fezSQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*zTw6U_nILQnu-d624fezSQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*zTw6U_nILQnu-d624fezSQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*zTw6U_nILQnu-d624fezSQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*zTw6U_nILQnu-d624fezSQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*zTw6U_nILQnu-d624fezSQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*zTw6U_nILQnu-d624fezSQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*zTw6U_nILQnu-d624fezSQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*zTw6U_nILQnu-d624fezSQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*zTw6U_nILQnu-d624fezSQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*zTw6U_nILQnu-d624fezSQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="78" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">PowerShell Script Dropper Base64 Encoded Strings</figcaption></figure><p id="5164" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">We are not sure what it’s decrypting, given the fact that these are compressed bytes, and not encrypted bytes from what we were able to prove with cyberchef, but maybe it will become more clear as we move along. At this point, I took the decompressed code, and moved it to a separate file that I named <code class="cx pm pn po nl b">dropper_part_2.ps1</code>, and reformatted it.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pw"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*xvHmokc5mgt-paLHB7xjMg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*xvHmokc5mgt-paLHB7xjMg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*xvHmokc5mgt-paLHB7xjMg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*xvHmokc5mgt-paLHB7xjMg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*xvHmokc5mgt-paLHB7xjMg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*xvHmokc5mgt-paLHB7xjMg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*xvHmokc5mgt-paLHB7xjMg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*xvHmokc5mgt-paLHB7xjMg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*xvHmokc5mgt-paLHB7xjMg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*xvHmokc5mgt-paLHB7xjMg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*xvHmokc5mgt-paLHB7xjMg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*xvHmokc5mgt-paLHB7xjMg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*xvHmokc5mgt-paLHB7xjMg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*xvHmokc5mgt-paLHB7xjMg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="369" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">New IOC dropper script</figcaption></figure><p id="01c3" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Let’s go back to our main dropper script because we have to take a look at this function (<code class="cx pm pn po nl b">[decryption_class]::decrypt</code>) a little closer. Once the script decrypts the decoded bytes, it assigns certain pointer values.</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="4501" class="np nq gu nl b ij nr ns l nt nu">[byte[]]$decrypted_ps_bytes_1 = <br/>                          [decryption_class]::decrypt($ps_decoded_1, <br/>                                        $ascii.GetBytes($rand_key));<br/>[byte[]]$decrypted_ps_bytes_2 = <br/>                          [decryption_class]::decrypt($ps_decoded_2, <br/>                                        $ascii.GetBytes($rand_key));<br/>$base64_encoded_decrypted_bytes_1 = <br/>                   [Convert]::ToBase64String($decrypted_ps_bytes_1);<br/>$base64_encoded_decrypted_bytes_2 =         <br/>                   [Convert]::ToBase64String($decrypted_ps_bytes_2);<br/>...</span><span id="0ceb" class="np nq gu nl b ij pq ns l nt nu">$sqmclient_reg_path = &quot;HKLM:\SOFTWARE\Microsoft\SQMClient\Windows&quot;;<br/>if ([System.IntPtr]::Size -eq 4) {<br/>    $HQO388ea = $base64_encoded_decrypted_bytes_1;<br/>}<br/>else {<br/>    $HQO388ea = $base64_encoded_decrypted_bytes_2;<br/>}</span></pre><p id="1f60" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">We have two ways of figuring out what is the purpose of the decryption, we can simply figure out what <code class="cx pm pn po nl b">[System.IntPtr]::Size</code> does, or we can actually debug this. The lazy way is to look at the Microsoft docs. It states that the size of a pointer or handle in this process is measured in bytes. The value of this property is 4 in a 32-bit process, and 8 in a 64-bit process. You can define the process type by setting the <code class="cx pm pn po nl b">/platform</code> switch when you compile your code with the C# and Visual Basic compilers. Now we know why there were basically two identical PowerShell scripts being decoded, one will most likely drop a 64-bit DLL or EXE, and the other script will drop a 32-bit one.</p><h1 id="1760" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">Writing &amp; Persistence Mechanisms</h1><p id="b925" class="pw-post-body-paragraph mg mh gu mi b mj pg ml mm mn ph mp mq mr pi mt mu mv pj mx my mz pk nb nc nd gn bk">As you can see below, after renaming some variables, we can see the main purpose of the rest of the script is to create schedulers, triggers, and executions with the <code class="cx pm pn po nl b">wsqmcons</code> binary, which is a software component of Microsoft<em class="px">. </em>Windows SQM consolidator is tasked with collecting and sending usage data to Microsoft. <code class="cx pm pn po nl b">Wsqmcons</code> is a file that runs the Windows SQM consolidator, and is usually deemed as a safe file for your PC. In this case, it is used being used for malicious purposes. The modification of the scheduled task shown below indicates the primary purpose of this task modification is to decode and execute a PowerShell script contained within the registry key <code class="cx pm pn po nl b">HKLM:\SOFTWARE\Microsoft\SQMClient\Windows = WSqmCons</code> and the script will inject the payload into the <code class="cx pm pn po nl b">WsqmCons</code> registry key.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw py"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*9llSCmTVCJMnfXFPLztKIg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*9llSCmTVCJMnfXFPLztKIg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*9llSCmTVCJMnfXFPLztKIg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*9llSCmTVCJMnfXFPLztKIg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*9llSCmTVCJMnfXFPLztKIg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*9llSCmTVCJMnfXFPLztKIg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*9llSCmTVCJMnfXFPLztKIg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*9llSCmTVCJMnfXFPLztKIg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*9llSCmTVCJMnfXFPLztKIg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*9llSCmTVCJMnfXFPLztKIg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*9llSCmTVCJMnfXFPLztKIg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*9llSCmTVCJMnfXFPLztKIg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*9llSCmTVCJMnfXFPLztKIg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*9llSCmTVCJMnfXFPLztKIg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="406" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Malware disguising itself as a safe process</figcaption></figure><p id="6c4b" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Knowing this now, I feel comfortable to skip the rest of the main script we were looking at. So we can focus our attention back to the script that we just decoded (the script that we dubbed <code class="cx pm pn po nl b">dropper_part_2.ps1</code>).</p><h1 id="2c85" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">PE Dropper</h1><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw pz"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*5KxejX-A7IuGaWR7lyUX6A.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*5KxejX-A7IuGaWR7lyUX6A.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*5KxejX-A7IuGaWR7lyUX6A.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*5KxejX-A7IuGaWR7lyUX6A.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*5KxejX-A7IuGaWR7lyUX6A.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*5KxejX-A7IuGaWR7lyUX6A.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*5KxejX-A7IuGaWR7lyUX6A.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*5KxejX-A7IuGaWR7lyUX6A.png 640w, https://miro.medium.com/v2/resize:fit:720/1*5KxejX-A7IuGaWR7lyUX6A.png 720w, https://miro.medium.com/v2/resize:fit:750/1*5KxejX-A7IuGaWR7lyUX6A.png 750w, https://miro.medium.com/v2/resize:fit:786/1*5KxejX-A7IuGaWR7lyUX6A.png 786w, https://miro.medium.com/v2/resize:fit:828/1*5KxejX-A7IuGaWR7lyUX6A.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*5KxejX-A7IuGaWR7lyUX6A.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*5KxejX-A7IuGaWR7lyUX6A.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="107" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Execution of C# Script</figcaption></figure><p id="7970" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Analyzing the first few lines, it looks fairly similar to what we saw before in the main script. I’ll take this base64 string and decode it in cyberchef. Once you do this you’ll notice another blob of C# code.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw qa"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*XYOy7-QeetgbeBeHZoLRyg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*XYOy7-QeetgbeBeHZoLRyg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*XYOy7-QeetgbeBeHZoLRyg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*XYOy7-QeetgbeBeHZoLRyg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*XYOy7-QeetgbeBeHZoLRyg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*XYOy7-QeetgbeBeHZoLRyg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*XYOy7-QeetgbeBeHZoLRyg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*XYOy7-QeetgbeBeHZoLRyg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*XYOy7-QeetgbeBeHZoLRyg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*XYOy7-QeetgbeBeHZoLRyg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*XYOy7-QeetgbeBeHZoLRyg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*XYOy7-QeetgbeBeHZoLRyg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*XYOy7-QeetgbeBeHZoLRyg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*XYOy7-QeetgbeBeHZoLRyg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="452" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Under the hood of the C# Script</figcaption></figure><p id="ff7f" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">When we highlight some of the public classes and functions, we can see where they are being highlighted in the PowerShell script. <code class="cx pm pn po nl b">VO01bag</code>, which has the functions <code class="cx pm pn po nl b">XOP22aj</code> &amp; <code class="cx pm pn po nl b">RJ85ige</code>, looks like a simple gunzip compression and decompression, so we can rename those accordingly. The class <code class="cx pm pn po nl b">WQS70fb</code> and function <code class="cx pm pn po nl b">YQ498hff</code> looks like it takes in an input of bytes and writes them out to a file. I’ve renamed them as well since we can see them being used throughout the file. Now if we go back to the decompression function from the decoded C# with our renamed variables, it feels like we are getting closer to our PE file.</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="34bc" class="np nq gu nl b ij nr ns l nt nu">public static byte[] decompress_array(byte[] arrayToDecompress)<br/>{<br/>  using (MemoryStream inStream = newMemoryStream(arrayToDecompress))<br/>  using (GZipStream bigStream = new GZipStream(inStream,         <br/>                                        CompressionMode.Decompress))<br/>  using (MemoryStream bigStreamOut = new MemoryStream())<br/>  {<br/>     WriteClass.write_to_file(bigStream, bigStreamOut);<br/>     return bigStreamOut.ToArray();<br/>  }<br/>}</span></pre><p id="8319" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Our <code class="cx pm pn po nl b">WriteClass</code> does not get called in the PowerShell script, but it does get called in C# code within the <code class="cx pm pn po nl b">DecompressionClass</code>, which tells us that after certain bytes are decompressed, it gets written to a file because if we reference this <code class="cx pm pn po nl b">decompress_array</code> function, we can see it being used as such:</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="d288" class="np nq gu nl b ij nr ns l nt nu">$FV18hi = [DecompressionClass]::decompress_array($TEM52cbe);<br/>....<br/>$PEBytes = [DecompressionClass]::decompress_array($PEbytes);</span></pre><p id="1115" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Looks like we found out where our PE bytes are being decompressed, written, and dropped.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw qb"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*tJqb8C4MEkhySYUIbjZ8rw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*tJqb8C4MEkhySYUIbjZ8rw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*tJqb8C4MEkhySYUIbjZ8rw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*tJqb8C4MEkhySYUIbjZ8rw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*tJqb8C4MEkhySYUIbjZ8rw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*tJqb8C4MEkhySYUIbjZ8rw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*tJqb8C4MEkhySYUIbjZ8rw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*tJqb8C4MEkhySYUIbjZ8rw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*tJqb8C4MEkhySYUIbjZ8rw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*tJqb8C4MEkhySYUIbjZ8rw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*tJqb8C4MEkhySYUIbjZ8rw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*tJqb8C4MEkhySYUIbjZ8rw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*tJqb8C4MEkhySYUIbjZ8rw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*tJqb8C4MEkhySYUIbjZ8rw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="277" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">PE Dropper</figcaption></figure><p id="0890" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">The remainder of the script before the PE bytes get written to memory, is the use of a 3DES decryption algorithm with an initialization vector of <code class="cx pm pn po nl b">FVADRCORAOSKBHPX</code> to encrypt/decrypt the contents of another PowerShell script with a password and salt. It will then be stored in a Windows registry path as seen in the screenshot above. In turn, it will make analysis of the script impossible without the correct password and salt combination. This command (<code class="cx pm pn po nl b">IEX</code>) on the last line will execute the dropped PE file onto the victim machine. You can find the open-source PowerSploit script <a class="af ne" href="https://github.com/PowerShellMafia/PowerSploit/blob/master/ScriptModification/Out-EncryptedScript.ps1" rel="noopener ugc nofollow" target="_blank">here</a>.</p><p id="e0bd" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">For the moment we have all been waiting for, let’s take the base64 string I labeled as <code class="cx pm pn po nl b">$pe_encoded_bytes</code> and throw it into cyber chef to decode and decompress.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw qc"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*_hshushs3sGclwFWv7X5bg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*_hshushs3sGclwFWv7X5bg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*_hshushs3sGclwFWv7X5bg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*_hshushs3sGclwFWv7X5bg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*_hshushs3sGclwFWv7X5bg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*_hshushs3sGclwFWv7X5bg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*_hshushs3sGclwFWv7X5bg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*_hshushs3sGclwFWv7X5bg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*_hshushs3sGclwFWv7X5bg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*_hshushs3sGclwFWv7X5bg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*_hshushs3sGclwFWv7X5bg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*_hshushs3sGclwFWv7X5bg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*_hshushs3sGclwFWv7X5bg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*_hshushs3sGclwFWv7X5bg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="545" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Decoded &amp; Decompressed PE</figcaption></figure><p id="cb0c" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">If we click the file save icon, we can download this binary. Now we can check the IOC on it, and see if anything pops up in VirusTotal.</p><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="3ba4" class="np nq gu nl b ij nr ns l nt nu">➜ file payload.bin<br/>payload.dll: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows<br/>➜ openssl sha1 payload.dll<br/>SHA1(payload.dll)= d117643019d665a29ce8a7b812268fb8d3e5aadb</span></pre><p id="25d6" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Looks like we are dealing with a dynamic link library file, which we will not be able to reverse engineer for this paper (but we’ll still want to see this payload through eventually).</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw qd"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*bF9ClpbfwakZ4Npy34WL6A.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*bF9ClpbfwakZ4Npy34WL6A.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*bF9ClpbfwakZ4Npy34WL6A.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*bF9ClpbfwakZ4Npy34WL6A.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*bF9ClpbfwakZ4Npy34WL6A.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*bF9ClpbfwakZ4Npy34WL6A.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*bF9ClpbfwakZ4Npy34WL6A.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*bF9ClpbfwakZ4Npy34WL6A.png 640w, https://miro.medium.com/v2/resize:fit:720/1*bF9ClpbfwakZ4Npy34WL6A.png 720w, https://miro.medium.com/v2/resize:fit:750/1*bF9ClpbfwakZ4Npy34WL6A.png 750w, https://miro.medium.com/v2/resize:fit:786/1*bF9ClpbfwakZ4Npy34WL6A.png 786w, https://miro.medium.com/v2/resize:fit:828/1*bF9ClpbfwakZ4Npy34WL6A.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*bF9ClpbfwakZ4Npy34WL6A.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*bF9ClpbfwakZ4Npy34WL6A.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="450" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">VirusTotal Hit</figcaption></figure><p id="7446" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Looks like we hit the <a class="af ne" href="https://www.virustotal.com/gui/file/b93484683014aca8e909c9b5648d8f0ac21a45d0c193f6ca40f0b01d2464c1c4/detection" rel="noopener ugc nofollow" target="_blank">jackpot</a>, and I’m sure the DLL will show all the inner workings of how ComRAT works.</p><figure class="nf ng nh ni nj ny nv nw paragraph-image"><div role="button" tabindex="0" class="nz oa fj ob bh oc"><div class="nv nw qe"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*NHKnZUu1CbbWMQ4pVWvcoQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ln od c" width="700" height="172" loading="lazy" role="presentation"/></picture></div></div><figcaption class="oe ff of nv nw og oh bf b bg z du">Disassembly of DLL</figcaption></figure><p id="eb48" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Taking a small peak under the hood of this DLL, we can see a lot of the imported API calls have to do with cryptography and process injections, which could mean there are other stages to this malware, but as you can see to the right of the picture above, there is a function I reverse engineered already that is responsible for decrypting and resolving 100’s of APIs from Kernel32.</p><h1 id="bfa0" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">IOCs</h1><ul class=""><li id="1015" class="mg mh gu mi b mj pg ml mm mn ph mp mq mr pi mt mu mv pj mx my mz pk nb nc nd qf qg qh bk">Main PowerShell Script</li></ul><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="aedb" class="np nq gu nl b ij nr ns l nt nu">134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef</span></pre><ul class=""><li id="b3fa" class="mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd qf qg qh bk">PE Dropper PowerShell Script</li></ul><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="2e11" class="np nq gu nl b ij nr ns l nt nu">187bf95439da038c1bc291619507ff5e426d250709fa5e3eda7fda99e1c9854c</span></pre><ul class=""><li id="dd96" class="mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd qf qg qh bk">Dropped DLL Backdoor</li></ul><pre class="nf ng nh ni nj nk nl nm nn ay no bk"><span id="3833" class="np nq gu nl b ij nr ns l nt nu">b93484683014aca8e909c9b5648d8f0ac21a45d0c193f6ca40f0b01d2464c1c4</span></pre><h1 id="c56c" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">Conclusion</h1><p id="91aa" class="pw-post-body-paragraph mg mh gu mi b mj pg ml mm mn ph mp mq mr pi mt mu mv pj mx my mz pk nb nc nd gn bk">This PowerShell script that we went through installs a secondary PowerShell script, to which we analyzed and figured that it decodes and loads either a 32-bit DLL or a 64-bit DLL that will most likely be used as its communication module. It was stated by CISA that the FBI has had high confidence that this malware is a Russian state sponsored APT (Advanced Persistent Threat) group that uses this malicious virus to exploit victim’s networks. With that being said, here are all the PowerShell scripts I deobfuscated for this research paper. <a class="af ne" href="https://gist.github.com/ryancor/96c127914807ac46d237c3dde5c74ef9" rel="noopener ugc nofollow" target="_blank">Dropper Part I</a> &amp; <a class="af ne" href="https://gist.github.com/ryancor/39a73746bb783d1101ab9444d7a08f58" rel="noopener ugc nofollow" target="_blank">Dropper Part II</a>.</p><p id="46f9" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Thank you for following along! I hope you enjoyed it as much as I did. If you have any questions on this article or where to find the challenge, please DM me at my Instagram: @hackersclub or Twitter: @ringoware</p><p id="be3b" class="pw-post-body-paragraph mg mh gu mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gn bk">Happy Hunting :)</p><h1 id="8620" class="oi nq gu bf oj ok ol om on oo op oq or os ot ou ov ow ox oy oz pa pb pc pd pe bk">References</h1><ul class=""><li id="e563" class="mg mh gu mi b mj pg ml mm mn ph mp mq mr pi mt mu mv pj mx my mz pk nb nc nd qf qg qh bk"><a class="af ne" href="https://malpedia.caad.fkie.fraunhofer.de/actor/turla_group" rel="noopener ugc nofollow" target="_blank">Malpedia: Turla Group</a></li><li id="7f16" class="mg mh gu mi b mj qi ml mm mn qj mp mq mr qk mt mu mv ql mx my mz qm nb nc nd qf qg qh bk"><a class="af ne" href="https://www.zdnet.com/article/turla-hacker-group-steals-antivirus-logs-to-see-if-its-malware-was-detected/" rel="noopener ugc nofollow" target="_blank">ZDNet: Hacking group steals antivirus logs to see if its malware was detected</a></li><li id="edf3" class="mg mh gu mi b mj qi ml mm mn qj mp mq mr qk mt mu mv ql mx my mz qm nb nc nd qf qg qh bk"><a class="af ne" href="https://us-cert.cisa.gov/ncas/analysis-reports/ar20-303a" rel="noopener ugc nofollow" target="_blank">CISA: Malware Analysis Report (AR20–303A)</a></li></ul></div></div></div></div></section></div></div></article></div><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="qn qo ab iv"><div class="qp ab"><a class="qq ay am ao" href="https://medium.com/tag/malware?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><div class="qr fj cx qs ge qt qu bf b bg z bk qv">Malware</div></a></div><div class="qp ab"><a class="qq ay am ao" href="https://medium.com/tag/reverse-engineering?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><div class="qr fj cx qs ge qt qu bf b bg z bk qv">Reverse Engineering</div></a></div><div class="qp ab"><a class="qq ay am ao" href="https://medium.com/tag/programming?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><div class="qr fj cx qs ge qt qu bf b bg z bk qv">Programming</div></a></div><div class="qp ab"><a class="qq ay am ao" href="https://medium.com/tag/computer-science?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><div class="qr fj cx qs ge qt qu bf b bg z bk qv">Computer Science</div></a></div><div class="qp ab"><a class="qq ay am ao" href="https://medium.com/tag/threat-intelligence?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><div class="qr fj cx qs ge qt qu bf b bg z bk qv">Threat Intelligence</div></a></div></div></div></div><div class="l"></div><footer class="qw qx qy qz ra ab q rb rc c"><div class="l ae"><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="ab cp rd"><div class="ab q ke"><div class="re l"><span class="l rf rg rh e d"><div class="ab q ke kf"><div class="pw-multi-vote-icon fj kg kh ki kj"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fb6c34499e41d&amp;operation=register&amp;redirect=https%3A%2F%2Fryancor.medium.com%2Fdeobfuscating-powershell-malware-droppers-b6c34499e41d&amp;user=Ryan+Cornateanu&amp;userId=239d5a05aa69&amp;source=---footer_actions--b6c34499e41d---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="kk ao kl km kn ko am kp kq kr kj"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l ks kt ku kv kw kx ky"><p class="bf b dv z du"><span class="kz">--</span></p></div></div></span><span class="l h g f ri rj"><div class="ab q ke kf"><div class="pw-multi-vote-icon fj kg kh ki kj"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fb6c34499e41d&amp;operation=register&amp;redirect=https%3A%2F%2Fryancor.medium.com%2Fdeobfuscating-powershell-malware-droppers-b6c34499e41d&amp;user=Ryan+Cornateanu&amp;userId=239d5a05aa69&amp;source=---footer_actions--b6c34499e41d---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="kk ao kl km kn ko am kp kq kr kj"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l ks kt ku kv kw kx ky"><p class="bf b dv z du"><span class="kz">--</span></p></div></div></span></div><div class="bq ab"><div><div class="bm" aria-hidden="false"><button class="ao kk la lb ab q fk lc ld" aria-label="responses"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="le"><path d="M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z"></path></svg></button></div></div></div></div><div class="ab q"><div class="rk l is"><div><div class="bm" aria-hidden="false"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerBookmarkButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb6c34499e41d&amp;operation=register&amp;redirect=https%3A%2F%2Fryancor.medium.com%2Fdeobfuscating-powershell-malware-droppers-b6c34499e41d&amp;source=---footer_actions--b6c34499e41d---------------------bookmark_footer-----------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="none" viewBox="0 0 25 25" class="du lg" aria-label="Add to list bookmark button"><path fill="currentColor" d="M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z"></path></svg></a></span></div></div></div><div class="rk l is"><div class="bm" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bm" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af fk ah ai aj ak al lo an ao ap ex lp lq ld lr"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1" clip-rule="evenodd"></path></svg></button></div></div></div></div></div></div></div></div></div></footer><div class="rl rm rn ro rp l"><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="rq bh r rr"></div><div class="ab rs rt ru iu it"><div class="rv rw rx ry rz sa sb sc sd se ab cp"><div class="h k"><a tabindex="0" rel="noopener follow" href="/?source=post_page---post_author_info--b6c34499e41d--------------------------------"><div class="l fj"><img alt="Ryan Cornateanu" class="l fd by ic ib cx" src="https://miro.medium.com/v2/resize:fill:96:96/2*C-CaB_Tc2FWfSLM1qV14Gg.jpeg" width="48" height="48" loading="lazy"/><div class="fr by l ic ib fs n ay sf"></div></div></a></div><div class="j i d"><a tabindex="0" rel="noopener follow" href="/?source=post_page---post_author_info--b6c34499e41d--------------------------------"><div class="l fj"><img alt="Ryan Cornateanu" class="l fd by sg sh cx" src="https://miro.medium.com/v2/resize:fill:128:128/2*C-CaB_Tc2FWfSLM1qV14Gg.jpeg" width="64" height="64" loading="lazy"/><div class="fr by l sg sh fs n ay sf"></div></div></a></div><div class="j i d si is"><div class="ab"><span><button class="bf b bg z sj qr sk sl sm sn so ev ew sp sq sr fa fb fc fd bm fe ff">Follow</button></span></div></div></div><div class="ab co ss"><div class="st su sv sw sx l"><a class="af ag ah aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="/?source=post_page---post_author_info--b6c34499e41d--------------------------------"><h2 class="pw-author-name bf sz ta tb tc td te tf mr tg th mv ti tj mz tk tl bk"><span class="gn sy">Written by <!-- -->Ryan Cornateanu</span></h2></a><div class="qp ab ia"><div class="l is"><span class="pw-follower-count bf b bg z du"><a class="af ag ah ai aj ak al am an ao ap aq ar il" rel="noopener follow" href="/followers?source=post_page---post_author_info--b6c34499e41d--------------------------------">450 Followers</a></span></div><div class="bf b bg z du ab nt"><span class="im l" aria-hidden="true"><span class="bf b bg z du">·</span></span><a class="af ag ah ai aj ak al am an ao ap aq ar il" rel="noopener follow" href="/following?source=post_page---post_author_info--b6c34499e41d--------------------------------">5 Following</a></div></div><div class="tm l"><p class="bf b bg z bk"><span class="gn">Security Researcher | Reverse Engineer | Embedded Systems</span></p></div></div></div><div class="h k"><div class="ab"><span><button class="bf b bg z sj qr sk sl sm sn so ev ew sp sq sr fa fb fc fd bm fe ff">Follow</button></span></div></div></div></div></div></div><div class="tn l"><div class="rq bh r to tp tq tr ts"></div><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="ab q cp"><h2 class="bf sz ok om on oo oq or os ou ov ow oy oz pa pc pd bk">No responses yet</h2><div class="ab tt"><div><div class="bm" aria-hidden="false"><a class="tu tv" href="https://policy.medium.com/medium-rules-30e5502c4eb4?source=post_page---post_responses--b6c34499e41d--------------------------------" rel="noopener follow" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25"><path fill-rule="evenodd" d="M11.987 5.036a.754.754 0 0 1 .914-.01c.972.721 1.767 1.218 2.6 1.543.828.322 1.719.485 2.887.505a.755.755 0 0 1 .741.757c-.018 3.623-.43 6.256-1.449 8.21-1.034 1.984-2.662 3.209-4.966 4.083a.75.75 0 0 1-.537-.003c-2.243-.874-3.858-2.095-4.897-4.074-1.024-1.951-1.457-4.583-1.476-8.216a.755.755 0 0 1 .741-.757c1.195-.02 2.1-.182 2.923-.503.827-.322 1.6-.815 2.519-1.535m.468.903c-.897.69-1.717 1.21-2.623 1.564-.898.35-1.856.527-3.026.565.037 3.45.469 5.817 1.36 7.515.884 1.684 2.25 2.762 4.284 3.571 2.092-.81 3.465-1.89 4.344-3.575.886-1.698 1.299-4.065 1.334-7.512-1.149-.039-2.091-.217-2.99-.567-.906-.353-1.745-.873-2.683-1.561m-.009 9.155a2.672 2.672 0 1 0 0-5.344 2.672 2.672 0 0 0 0 5.344m0 1a3.672 3.672 0 1 0 0-7.344 3.672 3.672 0 0 0 0 7.344m-1.813-3.777.525-.526.916.917 1.623-1.625.526.526-2.149 2.152z" clip-rule="evenodd"></path></svg></a></div></div></div></div><div class="tw tx ty tz ua l"></div></div></div></div><div class="ub uc ud ue uf l bx"><div class="h k j"><div class="rq bh ug uh"></div><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="ui ab ke iv"><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Help</p></a></div><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Status</p></a></div><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/about?autoplay=1&amp;source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">About</p></a></div><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Careers</p></a></div><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="pressinquiries@medium.com?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Press</p></a></div><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Blog</p></a></div><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Privacy</p></a></div><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Terms</p></a></div><div class="uj uk l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Text to speech</p></a></div><div class="uj l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/business?source=post_page-----b6c34499e41d--------------------------------" rel="noopener follow"><p class="bf b dv z du">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20241216-164309-0d4958d8a6"</script><script>window.__GRAPHQL_URI__ = "https://ryancor.medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"","group":"enabled","tags":["group-edgeCachePosts","post-b6c34499e41d","user-239d5a05aa69"],"serverVariantState":"44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a","middlewareEnabled":true,"cacheStatus":"DYNAMIC","shouldUseCache":true,"vary":[],"lohpSummerUpsellEnabled":false},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"USER","id":"239d5a05aa69","explicit":true},"viewerIsBot":false},"debug":{"requestId":"e3161b9c-d76d-4ae4-80cc-a4d2432602d8","hybridDevServices":[],"originalSpanCarrier":{"traceparent":"00-a2892f8e01776f1080b56bd8c68f144b-be17d877f6da2278-01"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fryancor.medium.com\u002Fdeobfuscating-powershell-malware-droppers-b6c34499e41d","host":"ryancor.medium.com","hostname":"ryancor.medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false,"partnerProgram":{"selectedCountryCode":null},"queryString":"","currentHash":""},"config":{"nodeEnv":"production","version":"main-20241216-164309-0d4958d8a6","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20241216-164309-0d4958d8a6","commit":"0d4958d8a6e728d0bc7ba6245eaad002411a6eb7"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"7*V1_7XP4snlmqrc_0Njontw.png","height":110,"width":500},"postLogo":{"imageId":"bd978bb536350a710e8efb012513429cabdc4c28700604261aeda246d0f980b7","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyV2":"e8a5e126-792b-4ee6-8fba-d574c1b02fc5","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyV2":"3815d7d6-b8ca-4224-9b8c-182f9047866e","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyOneYearFree":"e6c0637a-2bad-4171-ab4f-3c268633d83c","monthly25PercentOffFirstYear":"235ecc62-0cdb-49ae-9378-726cd21c504b","monthly20PercentOffFirstYear":"ba518864-9c13-4a99-91ca-411bf0cac756","monthly15PercentOffFirstYear":"594c029b-9f89-43d5-88f8-8173af4e070e","monthly10PercentOffFirstYear":"c6c7bc9a-40f2-4b51-8126-e28511d5bdb0","monthlyForStudents":"629ebe51-da7d-41fd-8293-34cd2f2030a8","yearlyOneYearFree":"78ba7be9-0d9f-4ece-aa3e-b54b826f2bf1","yearly25PercentOffFirstYear":"2dbb010d-bb8f-4eeb-ad5c-a08509f42d34","yearly20PercentOffFirstYear":"47565488-435b-47f8-bf93-40d5fbe0ebc8","yearly15PercentOffFirstYear":"8259809b-0881-47d9-acf7-6c001c7f720f","yearly10PercentOffFirstYear":"9dd694fb-96e1-472c-8d9e-3c868d5c1506","yearlyForStudents":"e29345ef-ab1c-4234-95c5-70e50fe6bc23","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":""}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","viewer":null,"collectionByDomainOrSlug({\"domainOrSlug\":\"ryancor.medium.com\"})":null,"postResult({\"id\":\"b6c34499e41d\"})":{"__ref":"Post:b6c34499e41d"}},"LinkedAccounts:239d5a05aa69":{"__typename":"LinkedAccounts","mastodon":null,"id":"239d5a05aa69"},"User:239d5a05aa69":{"__typename":"User","id":"239d5a05aa69","linkedAccounts":{"__ref":"LinkedAccounts:239d5a05aa69"},"isSuspended":false,"name":"Ryan Cornateanu","imageId":"2*C-CaB_Tc2FWfSLM1qV14Gg.jpeg","customDomainState":{"__typename":"CustomDomainState","live":{"__typename":"CustomDomain","domain":"ryancor.medium.com"}},"hasSubdomain":true,"username":"ryancor","verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":450,"followingCount":5,"collectionFollowingCount":0},"bio":"Security Researcher | Reverse Engineer | Embedded Systems","membership":null,"allowNotes":true,"viewerEdge":{"__ref":"UserViewerEdge:userId:239d5a05aa69-viewerId:lo_4b102bea9bab"},"twitterScreenName":""},"Topic:d4e7f4144ac5":{"__typename":"Topic","slug":"cybersecurity","id":"d4e7f4144ac5","name":"Cybersecurity"},"Paragraph:51ada4465103_0":{"__typename":"Paragraph","id":"51ada4465103_0","name":"0071","type":"H3","href":null,"layout":null,"metadata":null,"text":"Deobfuscating PowerShell Malware Droppers","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_1":{"__typename":"Paragraph","id":"51ada4465103_1","name":"30b0","type":"P","href":null,"layout":null,"metadata":null,"text":"I recently saw a video of Ahmed S Kasmani dissecting a ComRAT PowerShell script to obtain the main malware that it drops onto the victim’s computer. If you haven’t seen the video yet, I highly encourage you to watch it. This paper is going to go into similar detail, as well as my own approach to deobfuscating PowerShell scripts to get to the main payload. To follow along, you can use this hash to download this script from VirusTotal:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":17,"end":22,"href":"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=K8n1xv1KxNI","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":26,"end":41,"href":"https:\u002F\u002Fwww.youtube.com\u002Fchannel\u002FUC0vsNncAvJlPh2XGUi5s33Q","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_2":{"__typename":"Paragraph","id":"51ada4465103_2","name":"5656","type":"PRE","href":null,"layout":null,"metadata":null,"text":"134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef8","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_3":{"__typename":"Paragraph","id":"51ada4465103_3","name":"f047","type":"P","href":null,"layout":null,"metadata":null,"text":"So what is ‘ComRAT’ besides a city and municipality in Moldova and the capital of the autonomous region of Gagauzia? It was started by a Turla hacker group, one of Russia’s most advanced state-sponsored hacking groups that began in 2007. Although the latest version of ComRAT v4 was created in 2017, it is still being used a bit today.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*YTIYg7N_3N8Zj3xiq1icVA.png":{"__typename":"ImageMetadata","id":"1*YTIYg7N_3N8Zj3xiq1icVA.png","originalHeight":345,"originalWidth":770,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_4":{"__typename":"Paragraph","id":"51ada4465103_4","name":"65f4","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*YTIYg7N_3N8Zj3xiq1icVA.png"},"text":"ComRAT Timeline from ZDnet[.]com","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_5":{"__typename":"Paragraph","id":"51ada4465103_5","name":"b7ae","type":"P","href":null,"layout":null,"metadata":null,"text":"Turla hacking group’s modus operandi was to target government and military facilities. Turla has since been dubbed by other names such as Snake, Krypton, and Venomous Bear.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_6":{"__typename":"Paragraph","id":"51ada4465103_6","name":"a81f","type":"H3","href":null,"layout":null,"metadata":null,"text":"Attack Chain","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*BIf9pJqt18CQfClcmc-rHg.png":{"__typename":"ImageMetadata","id":"1*BIf9pJqt18CQfClcmc-rHg.png","originalHeight":268,"originalWidth":761,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_7":{"__typename":"Paragraph","id":"51ada4465103_7","name":"bad9","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*BIf9pJqt18CQfClcmc-rHg.png"},"text":"Mechanism of Attack","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_8":{"__typename":"Paragraph","id":"51ada4465103_8","name":"ab87","type":"P","href":null,"layout":null,"metadata":null,"text":"In this paper, we will be going over how the dropper operates, and the logic on how the malware gets to stage 2, which is the DLL payload. This cyber-kill chain graph will be a work in progress on my end as I did not fully reverse engineer much after the DLL was dropped. Maybe I will turn this into a series, where I go over every part of the chain, but for now let’s focus on the first three components in the graphic above.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_9":{"__typename":"Paragraph","id":"51ada4465103_9","name":"8348","type":"H3","href":null,"layout":null,"metadata":null,"text":"Diving into the PowerShell","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_10":{"__typename":"Paragraph","id":"51ada4465103_10","name":"ec89","type":"P","href":null,"layout":null,"metadata":null,"text":"For this lab exercise, we are going to use Visual Studio Code on a Windows VM since they have a great linter for PowerShell scripts. Let’s open up the file, and dive in.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*yBQU9rG-T2stllALAmE5vg.png":{"__typename":"ImageMetadata","id":"1*yBQU9rG-T2stllALAmE5vg.png","originalHeight":1930,"originalWidth":3460,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_11":{"__typename":"Paragraph","id":"51ada4465103_11","name":"0174","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*yBQU9rG-T2stllALAmE5vg.png"},"text":"Original PowerShell opened in VSC","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_12":{"__typename":"Paragraph","id":"51ada4465103_12","name":"adfe","type":"P","href":null,"layout":null,"metadata":null,"text":"Three major things hit me at first… 1) this is a lot of base64, 2) the PowerShell is not formatted out correctly, and 3) the variable names are completely randomized. First let’s take care of how many lines of code the base64 is taking up. We can easily fix this by going to View-\u003EToggle Word Wrap and uncheck it by simply clicking on it. Now, we want this to be properly formatted, this can be fixed by hitting SHIFT+ALT+F.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":275,"end":297,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":412,"end":423,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*yvboEjYjpmEEKTXCi6OkvA.png":{"__typename":"ImageMetadata","id":"1*yvboEjYjpmEEKTXCi6OkvA.png","originalHeight":1756,"originalWidth":3468,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_13":{"__typename":"Paragraph","id":"51ada4465103_13","name":"ff82","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*yvboEjYjpmEEKTXCi6OkvA.png"},"text":"PowerShell reformatted","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_14":{"__typename":"Paragraph","id":"51ada4465103_14","name":"c613","type":"P","href":null,"layout":null,"metadata":null,"text":"This looks a lot cleaner! Time to break down the two functions inside this PowerShell and start renaming function \u002F variable names. Let’s start with the first one. It looks like some sort of string generator.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_15":{"__typename":"Paragraph","id":"51ada4465103_15","name":"c979","type":"H3","href":null,"layout":null,"metadata":null,"text":"Obfuscation of Function & Variable Names","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_16":{"__typename":"Paragraph","id":"51ada4465103_16","name":"656f","type":"PRE","href":null,"layout":null,"metadata":null,"text":"function TVM730egf([string[]]$GP50afa) {\n     $UC33gfa = ((1..(Get-Random -Min 2 -Max 4) | \n        % { [Char](Get-Random -Min 0x41 -Max 0x5B) }) -join '');\n     $EQ33abh = ((1..(Get-Random -Min 2 -Max 4) | \n        % { [Char](Get-Random -Min 0x30 -Max 0x3A) }) -join '');\n     $OFK689fa = ((1..(Get-Random -Min 2 -Max 4) | \n        % { [Char](Get-Random -Min 0x61 -Max 0x6B) }) -join '');\n     $TTG32aa = $UC33gfa + $EQ33abh + $OFK689fa;\n     if ($GP50afa -contains $TTG32aa) {\n          $TTG32aa = Get-RandomVar $GP50afa;\n     } \n     $GP50afa += $TTG32aa;\n     return $TTG32aa, $GP50afa;\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_17":{"__typename":"Paragraph","id":"51ada4465103_17","name":"338b","type":"P","href":null,"layout":null,"metadata":null,"text":"The first three lines look to be generating only capital letters ranging from 2 to 4 bytes. The second line does exactly the same thing as line 1 but only generates numbers. The third generator generates a 2 to 4 byte lowercase string. Let’s rename a few variables and see how it looks.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_18":{"__typename":"Paragraph","id":"51ada4465103_18","name":"2439","type":"PRE","href":null,"layout":null,"metadata":null,"text":"function rand_string_generator([string[]]$param1_str) {\n     $rand_upper_str = ((1..(Get-Random -Min 2 -Max 4) ...\n     $rand_num_str = ((1..(Get-Random -Min 2 -Max 4) ...\n     $rand_lower_str = ((1..(Get-Random -Min 2 -Max 4) ...\n     $rand_str_gen = $rand_upper_str \n                     + $rand_num_str \n                     + $rand_lower_str;\n     if ($param1_str -contains $rand_str_gen) {\n          $rand_str_gen = Get-RandomVar $param1_str;\n     } \n     $param1_str += $rand_str_gen;\n     return $rand_str_gen, $param1_str;\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_19":{"__typename":"Paragraph","id":"51ada4465103_19","name":"c969","type":"P","href":null,"layout":null,"metadata":null,"text":"Now we can copy this function, and paste it into a PowerShell command line, and see what the output will look like.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_20":{"__typename":"Paragraph","id":"51ada4465103_20","name":"e407","type":"PRE","href":null,"layout":null,"metadata":null,"text":"PS C:\\Users\\ryancor\u003E rand_string_generator(\"test\")\nFN36dd\ntest\nFN36dd","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_21":{"__typename":"Paragraph","id":"51ada4465103_21","name":"08ed","type":"P","href":null,"layout":null,"metadata":null,"text":"Easy enough, this looks like it feeds in a string, and does a check to make sure the random string it generates does not match the string parameter. If they are a match, it will get a random byte from the parameter string and add it to the random string. Looks like this function gets referenced about 10 times throughout the program.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_22":{"__typename":"Paragraph","id":"51ada4465103_22","name":"fde7","type":"PRE","href":null,"layout":null,"metadata":null,"text":"$rand_string_array = @();\n[string]$PS061hh, [string[]]$rand_string_array = \n                        rand_string_generator $rand_string_array;\n[string]$RPW45dij, [string[]]$rand_string_array = \n                        rand_string_generator $rand_string_array;\n[string]$RIZ505ia, [string[]]$rand_string_array = \n                        rand_string_generator $rand_string_array;\n...","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_23":{"__typename":"Paragraph","id":"51ada4465103_23","name":"31e6","type":"PRE","href":null,"layout":null,"metadata":null,"text":"PS C:\\Users\\ryancor\u003E $rand_string_array\nXLA320efe\nYUP59cg\nCB456fgb\nBW13chi\nNQG095gg\nNP120ceh\nYG27gf\nOXN26bd\nVE440ihi\nGH90ggd","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_24":{"__typename":"Paragraph","id":"51ada4465103_24","name":"7fc9","type":"P","href":null,"layout":null,"metadata":null,"text":"If we look at the array and the single random strings returned, they never get referenced again in the program. With that being said, if we pay attention to the how the function and variable names are specifically labeled, we find a massive similarity to the output above. The string generator takes in a string and concatenates an array of randomized bytes that start with two to three uppercase letters, followed by two to three integers, then lastly, two to three lowercase letters. This entire script follows this XXX000xxx naming convention. So it’s safe to say this is how they obfuscated the entire dropper as I assume the author’s copy of this PowerShell script has debug symbols that helped the malware writers QA their work before shipping this out to their targets\u002Fvictims.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":518,"end":527,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_25":{"__typename":"Paragraph","id":"51ada4465103_25","name":"522b","type":"H3","href":null,"layout":null,"metadata":null,"text":"Executing Embedded C# Code","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_26":{"__typename":"Paragraph","id":"51ada4465103_26","name":"d65f","type":"P","href":null,"layout":null,"metadata":null,"text":"Time to move on over to function PAZ488af which referenced the random string generator, but we are going to start from the top as it has important information about what’s going to be dropped, while also renaming some variables to better understand what is happening here. Starting with the first 10 lines, there is already so much going on:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":24,"end":41,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_27":{"__typename":"Paragraph","id":"51ada4465103_27","name":"3569","type":"PRE","href":null,"layout":null,"metadata":null,"text":"$task_sched = New-Object -ComObject('Schedule.Service');\n$task_sched.connect('localhost');\n$objFoldr = $task_sched.GetFolder($param2);\n$null_task = $task_sched.NewTask($null);","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_28":{"__typename":"Paragraph","id":"51ada4465103_28","name":"86f3","type":"PRE","href":null,"layout":null,"metadata":null,"text":"[string]$filename = [System.IO.Path]::GetTempFileName();\nRemove-Item -Path $filename -Force;\n[string]$ps1_name = [System.IO.Path]::GetFileName($filename);","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_29":{"__typename":"Paragraph","id":"51ada4465103_29","name":"a58d","type":"PRE","href":null,"layout":null,"metadata":null,"text":"$ascii = New-Object System.Text.ASCIIEncoding;\n$base64_decoded_bytes = \n              [Convert]::FromBase64String(\"cHVibGljIHN0YXRpY....\");\n$ps_decoded_class = $ascii.GetString($base64_decoded_bytes, 0, \n                                     $base64_decoded_bytes.Length);\ntry { \n      Add-Type $ps_decoded_class -erroraction 'silentlycontinue' } \n catch {\n      return;\n }","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_30":{"__typename":"Paragraph","id":"51ada4465103_30","name":"e906","type":"P","href":null,"layout":null,"metadata":null,"text":"The first four lines are dedicated to testing the presence of a folder, and scheduling a task at Microsoft\\Windows\\Customer Experience Improvement Program, we don’t know what significance this has yet but maybe we will find out later. If you’re wondering how I found out what $param2 was in $task_sched.GetFolder($param2); was, all I had to do was trace out how this function was being called, and the second to last line of this PowerShell dropper shows the string arguments that were used.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":97,"end":154,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":276,"end":283,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":291,"end":322,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*PyTd6P0FzsQA9nu_CBfRuQ.png":{"__typename":"ImageMetadata","id":"1*PyTd6P0FzsQA9nu_CBfRuQ.png","originalHeight":148,"originalWidth":2764,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_31":{"__typename":"Paragraph","id":"51ada4465103_31","name":"09f6","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*PyTd6P0FzsQA9nu_CBfRuQ.png"},"text":"String Arguments Used","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_32":{"__typename":"Paragraph","id":"51ada4465103_32","name":"a0e8","type":"P","href":null,"layout":null,"metadata":null,"text":"The next 3 lines will grab the PowerShell script name and remove the path from it until it is just a filename string. Now, the last few lines of the script above are decoding a large base64 string, so we can use cyberchef to see this is.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":212,"end":221,"href":"https:\u002F\u002Fgchq.github.io\u002FCyberChef","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*FVxq1Soiv47ojwp0gF0azw.png":{"__typename":"ImageMetadata","id":"1*FVxq1Soiv47ojwp0gF0azw.png","originalHeight":1652,"originalWidth":2316,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_33":{"__typename":"Paragraph","id":"51ada4465103_33","name":"8090","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*FVxq1Soiv47ojwp0gF0azw.png"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_34":{"__typename":"Paragraph","id":"51ada4465103_34","name":"737b","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks like some interesting embedded C#! So what I like to do since that classname will most likely be referenced in our script, is copy and paste this into our dropper file. Yes, you can execute C# functions from PowerShell, and that’s what the try,except statement is attempting to do. As shown in Microsoft’s documentation, the Add-Type cmdlet lets you define a Microsoft .NET Core class in your PowerShell session. You can then instantiate objects, by using the New-Object cmdlet, and use the objects just as you would use any .NET Core object.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":246,"end":256,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":331,"end":339,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":466,"end":476,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_35":{"__typename":"Paragraph","id":"51ada4465103_35","name":"075b","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s rename the classname RZP645be to decryption_class, and the function within XD014ic to decrypt, since this looks to be a simple multi-key byte XOR decryption. You’ll notice as we are replacing this in the script, we can see it is being called a couple of times throughout the PowerShell script.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":30,"end":38,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":42,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":84,"end":91,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":95,"end":102,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_36":{"__typename":"Paragraph","id":"51ada4465103_36","name":"a9e4","type":"PRE","href":null,"layout":null,"metadata":null,"text":"$TEX262hh = 'H4sIAAAAAAAEAIy5xw7ETJIeeB9g3qEhCJAEzgy9KQ...'\n$HT29hh = [Convert]::FromBase64String($TEX262hh);\n$MO67cc = 'H4sIAAAAAAAEAIy5xw7ETJIeeB9g3qEhCJAEzgy9KQ...'\n$PVU468aa = [Convert]::FromBase64String($MO67cc);\n$GS459ea = \"$((1..(Get-Random -Min 8 -Max 10) | % \n        {[Char](Get-Random -Min 0x3A -Max 0x5B)}) -join '')\n        $((1..(Get-Random -Min 5 -Max 8) | % {[Char](Get-Random \n        -Min 0x30 -Max 0x3A)}) -join '')\n        $((1..(Get-Random -Min 8 -Max 10) | %{[Char](Get-Random \n        -Min 0x61 -Max 0x7B)}) -join '')\";\n[byte[]]$JQ587aa = [decryption_class]::decrypt($HT29hh, \n                                        $ascii.GetBytes($GS459ea));\n[byte[]]$QIG418ba = [decryption_class]::decrypt($PVU468aa, \n                                        $ascii.GetBytes($GS459ea));\n$AT85ced = [Convert]::ToBase64String($JQ587aa);\n$ARO88iab = [Convert]::ToBase64String($QIG418ba);","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_37":{"__typename":"Paragraph","id":"51ada4465103_37","name":"c402","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s break this down, we have two extremely large base64 strings, and so we will start with those using cyberchef. Once you use the base64 decoder, you’ll notice both of these encoded strings have very similar headers, so it has to mean something:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_38":{"__typename":"Paragraph","id":"51ada4465103_38","name":"1b7b","type":"PRE","href":null,"layout":null,"metadata":null,"text":"...........¹Ç.ÄL..x.`Þ¡!...Î.½)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_39":{"__typename":"Paragraph","id":"51ada4465103_39","name":"3ea7","type":"P","href":null,"layout":null,"metadata":null,"text":"The problem is, we have no idea what type of file format this is. So we can use cyberchef’s Detect File Type plugin to help us identify.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":92,"end":115,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*afVN4u-gzTpXzw9JuNqhSw.png":{"__typename":"ImageMetadata","id":"1*afVN4u-gzTpXzw9JuNqhSw.png","originalHeight":1800,"originalWidth":2318,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_40":{"__typename":"Paragraph","id":"51ada4465103_40","name":"7609","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*afVN4u-gzTpXzw9JuNqhSw.png"},"text":"Detecting file format of unknown bytes","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*va9m52eMYrwMgFYJT56lqg.png":{"__typename":"ImageMetadata","id":"1*va9m52eMYrwMgFYJT56lqg.png","originalHeight":1804,"originalWidth":2322,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_41":{"__typename":"Paragraph","id":"51ada4465103_41","name":"7722","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*va9m52eMYrwMgFYJT56lqg.png"},"text":"Gunzip the bytes","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_42":{"__typename":"Paragraph","id":"51ada4465103_42","name":"db17","type":"P","href":null,"layout":null,"metadata":null,"text":"It looks like we have more PowerShell code being decompressed. So we can start renaming variables to make this script look cleaner.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*zTw6U_nILQnu-d624fezSQ.png":{"__typename":"ImageMetadata","id":"1*zTw6U_nILQnu-d624fezSQ.png","originalHeight":270,"originalWidth":2432,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_43":{"__typename":"Paragraph","id":"51ada4465103_43","name":"078a","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*zTw6U_nILQnu-d624fezSQ.png"},"text":"PowerShell Script Dropper Base64 Encoded Strings","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_44":{"__typename":"Paragraph","id":"51ada4465103_44","name":"5164","type":"P","href":null,"layout":null,"metadata":null,"text":"We are not sure what it’s decrypting, given the fact that these are compressed bytes, and not encrypted bytes from what we were able to prove with cyberchef, but maybe it will become more clear as we move along. At this point, I took the decompressed code, and moved it to a separate file that I named dropper_part_2.ps1, and reformatted it.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":302,"end":320,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*xvHmokc5mgt-paLHB7xjMg.png":{"__typename":"ImageMetadata","id":"1*xvHmokc5mgt-paLHB7xjMg.png","originalHeight":1568,"originalWidth":2980,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_45":{"__typename":"Paragraph","id":"51ada4465103_45","name":"42ac","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*xvHmokc5mgt-paLHB7xjMg.png"},"text":"New IOC dropper script","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_46":{"__typename":"Paragraph","id":"51ada4465103_46","name":"01c3","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s go back to our main dropper script because we have to take a look at this function ([decryption_class]::decrypt) a little closer. Once the script decrypts the decoded bytes, it assigns certain pointer values.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":90,"end":117,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_47":{"__typename":"Paragraph","id":"51ada4465103_47","name":"4501","type":"PRE","href":null,"layout":null,"metadata":null,"text":"[byte[]]$decrypted_ps_bytes_1 = \n                          [decryption_class]::decrypt($ps_decoded_1, \n                                        $ascii.GetBytes($rand_key));\n[byte[]]$decrypted_ps_bytes_2 = \n                          [decryption_class]::decrypt($ps_decoded_2, \n                                        $ascii.GetBytes($rand_key));\n$base64_encoded_decrypted_bytes_1 = \n                   [Convert]::ToBase64String($decrypted_ps_bytes_1);\n$base64_encoded_decrypted_bytes_2 =         \n                   [Convert]::ToBase64String($decrypted_ps_bytes_2);\n...","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_48":{"__typename":"Paragraph","id":"51ada4465103_48","name":"0ceb","type":"PRE","href":null,"layout":null,"metadata":null,"text":"$sqmclient_reg_path = \"HKLM:\\SOFTWARE\\Microsoft\\SQMClient\\Windows\";\nif ([System.IntPtr]::Size -eq 4) {\n    $HQO388ea = $base64_encoded_decrypted_bytes_1;\n}\nelse {\n    $HQO388ea = $base64_encoded_decrypted_bytes_2;\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_49":{"__typename":"Paragraph","id":"51ada4465103_49","name":"1f60","type":"P","href":null,"layout":null,"metadata":null,"text":"We have two ways of figuring out what is the purpose of the decryption, we can simply figure out what [System.IntPtr]::Size does, or we can actually debug this. The lazy way is to look at the Microsoft docs. It states that the size of a pointer or handle in this process is measured in bytes. The value of this property is 4 in a 32-bit process, and 8 in a 64-bit process. You can define the process type by setting the \u002Fplatform switch when you compile your code with the C# and Visual Basic compilers. Now we know why there were basically two identical PowerShell scripts being decoded, one will most likely drop a 64-bit DLL or EXE, and the other script will drop a 32-bit one.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":102,"end":123,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":420,"end":429,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_50":{"__typename":"Paragraph","id":"51ada4465103_50","name":"1760","type":"H3","href":null,"layout":null,"metadata":null,"text":"Writing & Persistence Mechanisms","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_51":{"__typename":"Paragraph","id":"51ada4465103_51","name":"b925","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see below, after renaming some variables, we can see the main purpose of the rest of the script is to create schedulers, triggers, and executions with the wsqmcons binary, which is a software component of Microsoft. Windows SQM consolidator is tasked with collecting and sending usage data to Microsoft. Wsqmcons is a file that runs the Windows SQM consolidator, and is usually deemed as a safe file for your PC. In this case, it is used being used for malicious purposes. The modification of the scheduled task shown below indicates the primary purpose of this task modification is to decode and execute a PowerShell script contained within the registry key HKLM:\\SOFTWARE\\Microsoft\\SQMClient\\Windows = WSqmCons and the script will inject the payload into the WsqmCons registry key.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":166,"end":174,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":315,"end":323,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":670,"end":723,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":772,"end":780,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":225,"end":227,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*9llSCmTVCJMnfXFPLztKIg.png":{"__typename":"ImageMetadata","id":"1*9llSCmTVCJMnfXFPLztKIg.png","originalHeight":1516,"originalWidth":2616,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_52":{"__typename":"Paragraph","id":"51ada4465103_52","name":"aa9e","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*9llSCmTVCJMnfXFPLztKIg.png"},"text":"Malware disguising itself as a safe process","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_53":{"__typename":"Paragraph","id":"51ada4465103_53","name":"6c4b","type":"P","href":null,"layout":null,"metadata":null,"text":"Knowing this now, I feel comfortable to skip the rest of the main script we were looking at. So we can focus our attention back to the script that we just decoded (the script that we dubbed dropper_part_2.ps1).","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":190,"end":208,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_54":{"__typename":"Paragraph","id":"51ada4465103_54","name":"2c85","type":"H3","href":null,"layout":null,"metadata":null,"text":"PE Dropper","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*5KxejX-A7IuGaWR7lyUX6A.png":{"__typename":"ImageMetadata","id":"1*5KxejX-A7IuGaWR7lyUX6A.png","originalHeight":392,"originalWidth":2588,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_55":{"__typename":"Paragraph","id":"51ada4465103_55","name":"7bd8","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*5KxejX-A7IuGaWR7lyUX6A.png"},"text":"Execution of C# Script","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_56":{"__typename":"Paragraph","id":"51ada4465103_56","name":"7970","type":"P","href":null,"layout":null,"metadata":null,"text":"Analyzing the first few lines, it looks fairly similar to what we saw before in the main script. I’ll take this base64 string and decode it in cyberchef. Once you do this you’ll notice another blob of C# code.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*XYOy7-QeetgbeBeHZoLRyg.png":{"__typename":"ImageMetadata","id":"1*XYOy7-QeetgbeBeHZoLRyg.png","originalHeight":1164,"originalWidth":1806,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_57":{"__typename":"Paragraph","id":"51ada4465103_57","name":"b92e","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*XYOy7-QeetgbeBeHZoLRyg.png"},"text":"Under the hood of the C# Script","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_58":{"__typename":"Paragraph","id":"51ada4465103_58","name":"ff7f","type":"P","href":null,"layout":null,"metadata":null,"text":"When we highlight some of the public classes and functions, we can see where they are being highlighted in the PowerShell script. VO01bag, which has the functions XOP22aj & RJ85ige, looks like a simple gunzip compression and decompression, so we can rename those accordingly. The class WQS70fb and function YQ498hff looks like it takes in an input of bytes and writes them out to a file. I’ve renamed them as well since we can see them being used throughout the file. Now if we go back to the decompression function from the decoded C# with our renamed variables, it feels like we are getting closer to our PE file.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":130,"end":137,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":163,"end":170,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":173,"end":180,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":286,"end":293,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":307,"end":315,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_59":{"__typename":"Paragraph","id":"51ada4465103_59","name":"34bc","type":"PRE","href":null,"layout":null,"metadata":null,"text":"public static byte[] decompress_array(byte[] arrayToDecompress)\n{\n  using (MemoryStream inStream = newMemoryStream(arrayToDecompress))\n  using (GZipStream bigStream = new GZipStream(inStream,         \n                                        CompressionMode.Decompress))\n  using (MemoryStream bigStreamOut = new MemoryStream())\n  {\n     WriteClass.write_to_file(bigStream, bigStreamOut);\n     return bigStreamOut.ToArray();\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_60":{"__typename":"Paragraph","id":"51ada4465103_60","name":"8319","type":"P","href":null,"layout":null,"metadata":null,"text":"Our WriteClass does not get called in the PowerShell script, but it does get called in C# code within the DecompressionClass, which tells us that after certain bytes are decompressed, it gets written to a file because if we reference this decompress_array function, we can see it being used as such:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":4,"end":14,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":106,"end":124,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":239,"end":255,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_61":{"__typename":"Paragraph","id":"51ada4465103_61","name":"d288","type":"PRE","href":null,"layout":null,"metadata":null,"text":"$FV18hi = [DecompressionClass]::decompress_array($TEM52cbe);\n....\n$PEBytes = [DecompressionClass]::decompress_array($PEbytes);","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_62":{"__typename":"Paragraph","id":"51ada4465103_62","name":"1115","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks like we found out where our PE bytes are being decompressed, written, and dropped.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*tJqb8C4MEkhySYUIbjZ8rw.png":{"__typename":"ImageMetadata","id":"1*tJqb8C4MEkhySYUIbjZ8rw.png","originalHeight":1032,"originalWidth":2610,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_63":{"__typename":"Paragraph","id":"51ada4465103_63","name":"a363","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*tJqb8C4MEkhySYUIbjZ8rw.png"},"text":"PE Dropper","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_64":{"__typename":"Paragraph","id":"51ada4465103_64","name":"0890","type":"P","href":null,"layout":null,"metadata":null,"text":"The remainder of the script before the PE bytes get written to memory, is the use of a 3DES decryption algorithm with an initialization vector of FVADRCORAOSKBHPX to encrypt\u002Fdecrypt the contents of another PowerShell script with a password and salt. It will then be stored in a Windows registry path as seen in the screenshot above. In turn, it will make analysis of the script impossible without the correct password and salt combination. This command (IEX) on the last line will execute the dropped PE file onto the victim machine. You can find the open-source PowerSploit script here.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":146,"end":162,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":454,"end":457,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":582,"end":586,"href":"https:\u002F\u002Fgithub.com\u002FPowerShellMafia\u002FPowerSploit\u002Fblob\u002Fmaster\u002FScriptModification\u002FOut-EncryptedScript.ps1","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_65":{"__typename":"Paragraph","id":"51ada4465103_65","name":"e0bd","type":"P","href":null,"layout":null,"metadata":null,"text":"For the moment we have all been waiting for, let’s take the base64 string I labeled as $pe_encoded_bytes and throw it into cyber chef to decode and decompress.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":87,"end":104,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*_hshushs3sGclwFWv7X5bg.png":{"__typename":"ImageMetadata","id":"1*_hshushs3sGclwFWv7X5bg.png","originalHeight":1800,"originalWidth":2314,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_66":{"__typename":"Paragraph","id":"51ada4465103_66","name":"eb61","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*_hshushs3sGclwFWv7X5bg.png"},"text":"Decoded & Decompressed PE","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_67":{"__typename":"Paragraph","id":"51ada4465103_67","name":"cb0c","type":"P","href":null,"layout":null,"metadata":null,"text":"If we click the file save icon, we can download this binary. Now we can check the IOC on it, and see if anything pops up in VirusTotal.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_68":{"__typename":"Paragraph","id":"51ada4465103_68","name":"3ba4","type":"PRE","href":null,"layout":null,"metadata":null,"text":"➜ file payload.bin\npayload.dll: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\n➜ openssl sha1 payload.dll\nSHA1(payload.dll)= d117643019d665a29ce8a7b812268fb8d3e5aadb","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_69":{"__typename":"Paragraph","id":"51ada4465103_69","name":"25d6","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks like we are dealing with a dynamic link library file, which we will not be able to reverse engineer for this paper (but we’ll still want to see this payload through eventually).","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*bF9ClpbfwakZ4Npy34WL6A.png":{"__typename":"ImageMetadata","id":"1*bF9ClpbfwakZ4Npy34WL6A.png","originalHeight":1858,"originalWidth":2894,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_70":{"__typename":"Paragraph","id":"51ada4465103_70","name":"d558","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*bF9ClpbfwakZ4Npy34WL6A.png"},"text":"VirusTotal Hit","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_71":{"__typename":"Paragraph","id":"51ada4465103_71","name":"7446","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks like we hit the jackpot, and I’m sure the DLL will show all the inner workings of how ComRAT works.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":22,"end":29,"href":"https:\u002F\u002Fwww.virustotal.com\u002Fgui\u002Ffile\u002Fb93484683014aca8e909c9b5648d8f0ac21a45d0c193f6ca40f0b01d2464c1c4\u002Fdetection","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*NHKnZUu1CbbWMQ4pVWvcoQ.png":{"__typename":"ImageMetadata","id":"1*NHKnZUu1CbbWMQ4pVWvcoQ.png","originalHeight":1362,"originalWidth":5560,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:51ada4465103_72":{"__typename":"Paragraph","id":"51ada4465103_72","name":"e72e","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*NHKnZUu1CbbWMQ4pVWvcoQ.png"},"text":"Disassembly of DLL","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_73":{"__typename":"Paragraph","id":"51ada4465103_73","name":"eb48","type":"P","href":null,"layout":null,"metadata":null,"text":"Taking a small peak under the hood of this DLL, we can see a lot of the imported API calls have to do with cryptography and process injections, which could mean there are other stages to this malware, but as you can see to the right of the picture above, there is a function I reverse engineered already that is responsible for decrypting and resolving 100’s of APIs from Kernel32.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_74":{"__typename":"Paragraph","id":"51ada4465103_74","name":"bfa0","type":"H3","href":null,"layout":null,"metadata":null,"text":"IOCs","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_75":{"__typename":"Paragraph","id":"51ada4465103_75","name":"1015","type":"ULI","href":null,"layout":null,"metadata":null,"text":"Main PowerShell Script","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_76":{"__typename":"Paragraph","id":"51ada4465103_76","name":"aedb","type":"PRE","href":null,"layout":null,"metadata":null,"text":"134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_77":{"__typename":"Paragraph","id":"51ada4465103_77","name":"b3fa","type":"ULI","href":null,"layout":null,"metadata":null,"text":"PE Dropper PowerShell Script","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_78":{"__typename":"Paragraph","id":"51ada4465103_78","name":"2e11","type":"PRE","href":null,"layout":null,"metadata":null,"text":"187bf95439da038c1bc291619507ff5e426d250709fa5e3eda7fda99e1c9854c","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_79":{"__typename":"Paragraph","id":"51ada4465103_79","name":"dd96","type":"ULI","href":null,"layout":null,"metadata":null,"text":"Dropped DLL Backdoor","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_80":{"__typename":"Paragraph","id":"51ada4465103_80","name":"3833","type":"PRE","href":null,"layout":null,"metadata":null,"text":"b93484683014aca8e909c9b5648d8f0ac21a45d0c193f6ca40f0b01d2464c1c4","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_81":{"__typename":"Paragraph","id":"51ada4465103_81","name":"c56c","type":"H3","href":null,"layout":null,"metadata":null,"text":"Conclusion","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_82":{"__typename":"Paragraph","id":"51ada4465103_82","name":"91aa","type":"P","href":null,"layout":null,"metadata":null,"text":"This PowerShell script that we went through installs a secondary PowerShell script, to which we analyzed and figured that it decodes and loads either a 32-bit DLL or a 64-bit DLL that will most likely be used as its communication module. It was stated by CISA that the FBI has had high confidence that this malware is a Russian state sponsored APT (Advanced Persistent Threat) group that uses this malicious virus to exploit victim’s networks. With that being said, here are all the PowerShell scripts I deobfuscated for this research paper. Dropper Part I & Dropper Part II.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":542,"end":556,"href":"https:\u002F\u002Fgist.github.com\u002Fryancor\u002F96c127914807ac46d237c3dde5c74ef9","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":559,"end":574,"href":"https:\u002F\u002Fgist.github.com\u002Fryancor\u002F39a73746bb783d1101ab9444d7a08f58","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_83":{"__typename":"Paragraph","id":"51ada4465103_83","name":"46f9","type":"P","href":null,"layout":null,"metadata":null,"text":"Thank you for following along! I hope you enjoyed it as much as I did. If you have any questions on this article or where to find the challenge, please DM me at my Instagram: @hackersclub or Twitter: @ringoware","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_84":{"__typename":"Paragraph","id":"51ada4465103_84","name":"be3b","type":"P","href":null,"layout":null,"metadata":null,"text":"Happy Hunting :)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_85":{"__typename":"Paragraph","id":"51ada4465103_85","name":"8620","type":"H3","href":null,"layout":null,"metadata":null,"text":"References","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_86":{"__typename":"Paragraph","id":"51ada4465103_86","name":"e563","type":"ULI","href":null,"layout":null,"metadata":null,"text":"Malpedia: Turla Group","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":21,"href":"https:\u002F\u002Fmalpedia.caad.fkie.fraunhofer.de\u002Factor\u002Fturla_group","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_87":{"__typename":"Paragraph","id":"51ada4465103_87","name":"7f16","type":"ULI","href":null,"layout":null,"metadata":null,"text":"ZDNet: Hacking group steals antivirus logs to see if its malware was detected","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":77,"href":"https:\u002F\u002Fwww.zdnet.com\u002Farticle\u002Fturla-hacker-group-steals-antivirus-logs-to-see-if-its-malware-was-detected\u002F","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:51ada4465103_88":{"__typename":"Paragraph","id":"51ada4465103_88","name":"edf3","type":"ULI","href":null,"layout":null,"metadata":null,"text":"CISA: Malware Analysis Report (AR20–303A)","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":41,"href":"https:\u002F\u002Fus-cert.cisa.gov\u002Fncas\u002Fanalysis-reports\u002Far20-303a","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"UserViewerEdge:userId:239d5a05aa69-viewerId:lo_4b102bea9bab":{"__typename":"UserViewerEdge","id":"userId:239d5a05aa69-viewerId:lo_4b102bea9bab","isMuting":false},"PostViewerEdge:postId:b6c34499e41d-viewerId:lo_4b102bea9bab":{"__typename":"PostViewerEdge","shouldIndexPostForExternalSearch":true,"id":"postId:b6c34499e41d-viewerId:lo_4b102bea9bab"},"Tag:malware":{"__typename":"Tag","id":"malware","displayTitle":"Malware","normalizedTagSlug":"malware"},"Tag:reverse-engineering":{"__typename":"Tag","id":"reverse-engineering","displayTitle":"Reverse Engineering","normalizedTagSlug":"reverse-engineering"},"Tag:programming":{"__typename":"Tag","id":"programming","displayTitle":"Programming","normalizedTagSlug":"programming"},"Tag:computer-science":{"__typename":"Tag","id":"computer-science","displayTitle":"Computer Science","normalizedTagSlug":"computer-science"},"Tag:threat-intelligence":{"__typename":"Tag","id":"threat-intelligence","displayTitle":"Threat Intelligence","normalizedTagSlug":"threat-intelligence"},"Post:b6c34499e41d":{"__typename":"Post","id":"b6c34499e41d","collection":null,"content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"4e61","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:51ada4465103_0"},{"__ref":"Paragraph:51ada4465103_1"},{"__ref":"Paragraph:51ada4465103_2"},{"__ref":"Paragraph:51ada4465103_3"},{"__ref":"Paragraph:51ada4465103_4"},{"__ref":"Paragraph:51ada4465103_5"},{"__ref":"Paragraph:51ada4465103_6"},{"__ref":"Paragraph:51ada4465103_7"},{"__ref":"Paragraph:51ada4465103_8"},{"__ref":"Paragraph:51ada4465103_9"},{"__ref":"Paragraph:51ada4465103_10"},{"__ref":"Paragraph:51ada4465103_11"},{"__ref":"Paragraph:51ada4465103_12"},{"__ref":"Paragraph:51ada4465103_13"},{"__ref":"Paragraph:51ada4465103_14"},{"__ref":"Paragraph:51ada4465103_15"},{"__ref":"Paragraph:51ada4465103_16"},{"__ref":"Paragraph:51ada4465103_17"},{"__ref":"Paragraph:51ada4465103_18"},{"__ref":"Paragraph:51ada4465103_19"},{"__ref":"Paragraph:51ada4465103_20"},{"__ref":"Paragraph:51ada4465103_21"},{"__ref":"Paragraph:51ada4465103_22"},{"__ref":"Paragraph:51ada4465103_23"},{"__ref":"Paragraph:51ada4465103_24"},{"__ref":"Paragraph:51ada4465103_25"},{"__ref":"Paragraph:51ada4465103_26"},{"__ref":"Paragraph:51ada4465103_27"},{"__ref":"Paragraph:51ada4465103_28"},{"__ref":"Paragraph:51ada4465103_29"},{"__ref":"Paragraph:51ada4465103_30"},{"__ref":"Paragraph:51ada4465103_31"},{"__ref":"Paragraph:51ada4465103_32"},{"__ref":"Paragraph:51ada4465103_33"},{"__ref":"Paragraph:51ada4465103_34"},{"__ref":"Paragraph:51ada4465103_35"},{"__ref":"Paragraph:51ada4465103_36"},{"__ref":"Paragraph:51ada4465103_37"},{"__ref":"Paragraph:51ada4465103_38"},{"__ref":"Paragraph:51ada4465103_39"},{"__ref":"Paragraph:51ada4465103_40"},{"__ref":"Paragraph:51ada4465103_41"},{"__ref":"Paragraph:51ada4465103_42"},{"__ref":"Paragraph:51ada4465103_43"},{"__ref":"Paragraph:51ada4465103_44"},{"__ref":"Paragraph:51ada4465103_45"},{"__ref":"Paragraph:51ada4465103_46"},{"__ref":"Paragraph:51ada4465103_47"},{"__ref":"Paragraph:51ada4465103_48"},{"__ref":"Paragraph:51ada4465103_49"},{"__ref":"Paragraph:51ada4465103_50"},{"__ref":"Paragraph:51ada4465103_51"},{"__ref":"Paragraph:51ada4465103_52"},{"__ref":"Paragraph:51ada4465103_53"},{"__ref":"Paragraph:51ada4465103_54"},{"__ref":"Paragraph:51ada4465103_55"},{"__ref":"Paragraph:51ada4465103_56"},{"__ref":"Paragraph:51ada4465103_57"},{"__ref":"Paragraph:51ada4465103_58"},{"__ref":"Paragraph:51ada4465103_59"},{"__ref":"Paragraph:51ada4465103_60"},{"__ref":"Paragraph:51ada4465103_61"},{"__ref":"Paragraph:51ada4465103_62"},{"__ref":"Paragraph:51ada4465103_63"},{"__ref":"Paragraph:51ada4465103_64"},{"__ref":"Paragraph:51ada4465103_65"},{"__ref":"Paragraph:51ada4465103_66"},{"__ref":"Paragraph:51ada4465103_67"},{"__ref":"Paragraph:51ada4465103_68"},{"__ref":"Paragraph:51ada4465103_69"},{"__ref":"Paragraph:51ada4465103_70"},{"__ref":"Paragraph:51ada4465103_71"},{"__ref":"Paragraph:51ada4465103_72"},{"__ref":"Paragraph:51ada4465103_73"},{"__ref":"Paragraph:51ada4465103_74"},{"__ref":"Paragraph:51ada4465103_75"},{"__ref":"Paragraph:51ada4465103_76"},{"__ref":"Paragraph:51ada4465103_77"},{"__ref":"Paragraph:51ada4465103_78"},{"__ref":"Paragraph:51ada4465103_79"},{"__ref":"Paragraph:51ada4465103_80"},{"__ref":"Paragraph:51ada4465103_81"},{"__ref":"Paragraph:51ada4465103_82"},{"__ref":"Paragraph:51ada4465103_83"},{"__ref":"Paragraph:51ada4465103_84"},{"__ref":"Paragraph:51ada4465103_85"},{"__ref":"Paragraph:51ada4465103_86"},{"__ref":"Paragraph:51ada4465103_87"},{"__ref":"Paragraph:51ada4465103_88"}]},"validatedShareKey":"","shareKeyCreator":null},"creator":{"__ref":"User:239d5a05aa69"},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","mediumUrl":"https:\u002F\u002Fryancor.medium.com\u002Fdeobfuscating-powershell-malware-droppers-b6c34499e41d","primaryTopic":{"__ref":"Topic:d4e7f4144ac5"},"topics":[{"__typename":"Topic","slug":"cybersecurity"},{"__typename":"Topic","slug":"programming"}],"isPublished":true,"latestPublishedVersion":"51ada4465103","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":0},"clapCount":73,"allowResponses":true,"isLimitedState":false,"title":"Deobfuscating PowerShell Malware Droppers","isSeries":false,"sequence":null,"uniqueSlug":"deobfuscating-powershell-malware-droppers-b6c34499e41d","socialTitle":"","socialDek":"","canonicalUrl":"","metaDescription":"","latestPublishedAt":1632721911756,"readingTime":11.343396226415093,"previewContent":{"__typename":"PreviewContent","subtitle":"I recently saw a video of Ahmed S Kasmani dissecting a ComRAT PowerShell script to obtain the main malware that it drops onto the victim’s…"},"previewImage":{"__ref":"ImageMetadata:1*yBQU9rG-T2stllALAmE5vg.png"},"isShortform":false,"seoTitle":"","firstPublishedAt":1632697462679,"updatedAt":1641361025421,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","viewerEdge":{"__ref":"PostViewerEdge:postId:b6c34499e41d-viewerId:lo_4b102bea9bab"},"isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:malware"},{"__ref":"Tag:reverse-engineering"},{"__ref":"Tag:programming"},{"__ref":"Tag:computer-science"},{"__ref":"Tag:threat-intelligence"}],"isNewsletter":false,"statusForCollection":null,"pendingCollection":null,"detectedLanguage":"en","wordCount":2582,"layerCake":3,"responsesLocked":false}}</script><script>window.__MIDDLEWARE_STATE__={"session":{"xsrf":""},"cache":{"cacheStatus":"HIT"}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.48bdf878.js"></script><script src="https://cdn-client.medium.com/lite/static/js/9865.1496d74a.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.872afbe3.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.d9108df7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.ff22a7a5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5049.d1ead72d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4810.6318add7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6618.db187378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2707.a4e221ac.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9977.933c1c9a.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8599.73cb8339.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5250.9f9e01d2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9898.d9e26c5e.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2648.26563adf.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8393.826a25fb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4863.28ab43f6.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6589.247b1d02.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5642.0f82ef97.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6546.cd03f950.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6834.8aa8d357.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2420.2a5e2d95.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/839.1c286b32.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7975.60bcefe8.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2106.0350840b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7394.73a57633.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5794.9e8ff5dd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8204.7749bc66.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4391.59acaed3.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.2dc8b1c6.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8414.6565ad5f.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/3974.8d3e0217.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2527.d5e0c2f5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostResponsesContent.7ad7ca92.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/responses.editor.5a11f4da.chunk.js"></script><script>window.main();</script><script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'8f3c657cb811e0f7',t:'MTczNDQ5NjAwNC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon='{"rayId":"8f3c657cb811e0f7","version":"2024.10.5","serverTiming":{"name":{"cfExtPri":true,"cfL4":true,"cfSpeedBrain":true,"cfCacheStatus":true}},"token":"0b5f665943484354a59c39c6833f7078","b":1}' crossorigin="anonymous"></script>
</body></html>