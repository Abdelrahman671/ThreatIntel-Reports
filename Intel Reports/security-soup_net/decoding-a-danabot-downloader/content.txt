<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
	<meta charset="UTF-8" /> 
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<link rel="profile" href="http://gmpg.org/xfn/11">
		<link rel="pingback" href="https://security-soup.net/xmlrpc.php">
		<script>(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script>
<title>Decoding a DanaBot Downloader &#8211; Security Soup</title>
<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//stats.wp.com' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//v0.wordpress.com' />
<link rel="alternate" type="application/rss+xml" title="Security Soup &raquo; Feed" href="https://security-soup.net/feed/" />
<link rel="alternate" type="application/rss+xml" title="Security Soup &raquo; Comments Feed" href="https://security-soup.net/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Security Soup &raquo; Decoding a DanaBot Downloader Comments Feed" href="https://security-soup.net/decoding-a-danabot-downloader/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/security-soup.net\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.5.5"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://security-soup.net/wp-includes/css/dist/block-library/style.min.css?ver=6.5.5' type='text/css' media='all' />
<style id='wp-block-library-inline-css' type='text/css'>
.has-text-align-justify{text-align:justify;}
</style>
<link rel='stylesheet' id='mediaelement-css' href='https://security-soup.net/wp-includes/js/mediaelement/mediaelementplayer-legacy.min.css?ver=4.2.17' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css' href='https://security-soup.net/wp-includes/js/mediaelement/wp-mediaelement.min.css?ver=6.5.5' type='text/css' media='all' />
<style id='jetpack-sharing-buttons-style-inline-css' type='text/css'>
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
</style>
<link rel='stylesheet' id='font-awesome-css' href='https://security-soup.net/wp-content/plugins/contact-widgets/assets/css/font-awesome.min.css?ver=4.7.0' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
body{--wp--preset--color--black: #1f1f1f;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--primary: ;--wp--preset--color--secondary: ;--wp--preset--color--dark-gray: #333333;--wp--preset--color--gray: #6e6e6e;--wp--preset--color--light-gray: #d9d9d9;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 16px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 22px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-size--regular: 18px;--wp--preset--font-size--larger: 28px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}body .is-layout-flex{flex-wrap: wrap;align-items: center;}body .is-layout-flex > *{margin: 0;}body .is-layout-grid{display: grid;}body .is-layout-grid > *{margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
.wp-block-navigation a:where(:not(.wp-element-button)){color: inherit;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
.wp-block-pullquote{font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='cpsh-shortcodes-css' href='https://security-soup.net/wp-content/plugins/column-shortcodes//assets/css/shortcodes.css?ver=1.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='yada-wiki-css' href='https://security-soup.net/wp-content/plugins/yada-wiki/inc/../css/yadawiki.css?ver=6.5.5' type='text/css' media='all' />
<link rel='stylesheet' id='stsblogfeedly-fonts-css' href='https://fonts.googleapis.com/css?family=Karla%3A400%2C400i%2C700%2C700i' type='text/css' media='all' />
<link rel='stylesheet' id='stsblogfeedly-style-css' href='https://security-soup.net/wp-content/themes/blogfeedly/style.css?ver=6.5.5' type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='stsblogfeedly-ie-css' href='https://security-soup.net/wp-content/themes/blogfeedly/css/ie.css?ver=1.6.0' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='wpcw-css' href='https://security-soup.net/wp-content/plugins/contact-widgets/assets/css/style.min.css?ver=1.0.1' type='text/css' media='all' />
<link rel='stylesheet' id='newsletter-css' href='https://security-soup.net/wp-content/plugins/newsletter/style.css?ver=8.3.2' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css' href='https://security-soup.net/wp-content/plugins/jetpack/css/jetpack.css?ver=13.4' type='text/css' media='all' />
<!--[if lt IE 9]>
<script type="text/javascript" src="https://security-soup.net/wp-content/themes/blogfeedly/js/html5.js?ver=3.7.3" id="stsblogfeedly-html5-js"></script>
<![endif]-->
<script type="text/javascript" src="https://security-soup.net/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://security-soup.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="https://api.w.org/" href="https://security-soup.net/wp-json/" /><link rel="alternate" type="application/json" href="https://security-soup.net/wp-json/wp/v2/posts/1678" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://security-soup.net/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.5.5" />
<link rel="canonical" href="https://security-soup.net/decoding-a-danabot-downloader/" />
<link rel='shortlink' href='https://wp.me/paC05P-r4' />
<link rel="alternate" type="application/json+oembed" href="https://security-soup.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fsecurity-soup.net%2Fdecoding-a-danabot-downloader%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://security-soup.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fsecurity-soup.net%2Fdecoding-a-danabot-downloader%2F&#038;format=xml" />
	<style>img#wpstats{display:none}</style>
		
		<style type="text/css">
		.site-title a,.site-description { color: ; }
		.site-navigation{ border-color: ; }
		#menu-toggle { background-color: ; }
		.site-navigation a,#menu-toggle{ color: ; }
		.archive-list-title, .page-title, .not-found .page-title, .social-title, .comments-title, .tag-links, .parent-post-link, .comment-author .fn, .comment-author .url, .comment-reply-title, .entry-content h1, .entry-content h2, .entry-content h3, .entry-content h4, .entry-content h5, .entry-content h6, .entry-content th, .entry-title, .entry-title a, .entry-title a:hover{ color: ; }
		.entry-meta, .entry-meta *, .entry-meta, .entry-meta *:hover{ color: ; }
		.entry-summary, .comments-area, .comments-area p, .entry-content, .entry-content address, .entry-content dt, .page-content, .page-content p, .entry-content p, .entry-content span, .entry-content div, .entry-content li, .entry-content ul, .entry-content ol, .entry-content td, .entry-content dd, .entry-content blockquote { color: ; }
		.page-content .search-field, .archive-list-title, .comments-area *, .entry-content *{ border-color: ; }
		.archive-list a, .comments-area a, .page .entry-content a, .single .entry-content a, .error404 .entry-content a { color: ; }
		.tag-links a, button:hover, button:focus, button:active, input[type="submit"]:hover, input[type="submit"]:focus, input[type="submit"]:active, input[type="button"]:hover, input[type="button"]:focus, input[type="button"]:active, input[type="reset"]:hover, input[type="reset"]:focus, input[type="reset"]:active, button, input[type="submit"], input[type="button"], input[type="reset"], a.more-link{ background-color: ; }
		button:hover, button:focus, button:active, input[type="submit"]:hover, input[type="submit"]:focus, input[type="submit"]:active, input[type="button"]:hover, input[type="button"]:focus, input[type="button"]:active, input[type="reset"]:hover, input[type="reset"]:focus, input[type="reset"]:active, button, input[type="submit"], input[type="button"], input[type="reset"], a.more-link{ border-color: ; }
		.tag-links a, button:hover, button:focus, button:active, input[type="submit"]:hover, input[type="submit"]:focus, input[type="submit"]:active, input[type="button"]:hover, input[type="button"]:focus, input[type="button"]:active, input[type="reset"]:hover, input[type="reset"]:focus, input[type="reset"]:active, button, input[type="submit"], input[type="button"], input[type="reset"], a.more-link{ color: ; }
		.nav-previous a, .nav-next a, .nav-previous a:hover, .nav-next a:hover,.pagination .page-numbers, .pagination .page-numbers:hover{ background-color: ; }
		.nav-previous a, .nav-next a, .nav-previous a:hover, .nav-next a:hover,.pagination .page-numbers,.pagination .page-numbers:hover{ color: ; }
		.featured-sidebar .widget-title{ color: ; }
		.featured-sidebar *{ color: ; }
		.featured-sidebar a{ color: ; }
		.featured-sidebar .tagcloud a, .featured-sidebar .widget-title, .featured-sidebar *{ border-color: ; }
		.featured-sidebar .widget input[type="submit"]{ background-color: ; }
		.featured-sidebar .widget input[type="submit"]{ color: ; }
				.site-footer{ background-color: #1e74bf; }
		.site-footer .widget-title{ color: #1e74bf; }
		.site-footer li, .site-footer ol, .site-footer ul, .site-footer p, .site-footer span, .site-footer div, .site-footer { color: ; }
		.icon-chevron-up:before, .site-footer a{ color: ; }
		.site-footer .tagcloud a, .site-footer *{ border-color: #ffffff; }
		.site-footer .widget input[type="submit"] { background-color: #1e74bf; }
		.site-footer .widget input[type="submit"] { border-color: #1e74bf; }
		.site-footer .widget input[type="submit"] { color: #ffffff; }
		body{ background: ; }
		.site-navigation, .site-header, .site-navigation .menu-wrap{ background: ; }


		</style>
		
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Decoding a DanaBot Downloader" />
<meta property="og:url" content="https://security-soup.net/decoding-a-danabot-downloader/" />
<meta property="og:description" content="Summary I came across a fairly interesting VBS-based DanaBot downloader the other day, and I figured it was worth doing a quick write-up on the obfuscation scheme and a few of the other TPPs I obse…" />
<meta property="article:published_time" content="2022-03-15T03:52:44+00:00" />
<meta property="article:modified_time" content="2022-03-15T03:52:47+00:00" />
<meta property="og:site_name" content="Security Soup" />
<meta property="og:image" content="https://security-soup.net/wp-content/uploads/2019/02/Screen-Shot-2019-02-22-at-12.04.13-AM.png" />
<meta property="og:image:width" content="666" />
<meta property="og:image:height" content="528" />
<meta property="og:image:alt" content="" />
<meta name="twitter:text:title" content="Decoding a DanaBot Downloader" />
<meta name="twitter:image" content="https://security-soup.net/wp-content/uploads/2019/02/Screen-Shot-2019-02-22-at-12.04.13-AM.png?w=640" />
<meta name="twitter:card" content="summary_large_image" />

<!-- End Jetpack Open Graph Tags -->
<link rel="icon" href="https://security-soup.net/wp-content/uploads/2019/02/cropped-souplock2-3-32x32.png" sizes="32x32" />
<link rel="icon" href="https://security-soup.net/wp-content/uploads/2019/02/cropped-souplock2-3-192x192.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://security-soup.net/wp-content/uploads/2019/02/cropped-souplock2-3-180x180.png" />
<meta name="msapplication-TileImage" content="https://security-soup.net/wp-content/uploads/2019/02/cropped-souplock2-3-270x270.png" />
</head>
<body class="post-template-default single single-post postid-1678 single-format-standard wp-custom-logo single-author animated-navigation">
<div id="page" class="site">
	<header class="site-header">
		<div class="inner">
			<a href="https://security-soup.net/" class="custom-logo-link" rel="home"><img src="https://security-soup.net/wp-content/uploads/2019/02/cropped-website_newlogo.png" width="778" alt="Security Soup" /></a>						<p class="site-title screen-reader-text"><a href="https://security-soup.net/" rel="home">Security Soup</a></p>
									<p class="site-description">infosec news, commentary, and research</p>
					</div> <!-- .inner -->
	</header><!-- .site-header -->
	<nav class="site-navigation" aria-label="Menu">
		<div class="menu-wrap"><ul id="menu-blog" class="menu"><li id="menu-item-321" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-321"><a href="https://security-soup.net">Home</a></li>
<li id="menu-item-326" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-326"><a href="https://security-soup.net/about-2/">About</a></li>
<li id="menu-item-328" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-328"><a href="https://security-soup.net/?page_id=320">Resources</a></li>
<li id="menu-item-1414" class="menu-item menu-item-type-post_type menu-item-object-yada_wiki menu-item-1414"><a href="https://security-soup.net/wiki/welcome-to-the-infosec-wiki/">Knowledge Base</a></li>
<li id="menu-item-327" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-327"><a title="ryan@security-soup.net" href="https://security-soup.net/contact-2/">Contact</a></li>
</ul></div>		<a href="#" id="menu-toggle" title="Show Menu">Menu</a>
	</nav><!-- .site-navigation --><div id="content" class="site-content">
	<!-- If has sidebar start -->
	<main id="main" class="site-main main-with-sidebar inner">
		<div class="main-has-sidebar">
			<!-- If has sidebar end -->
			<article id="post-1678" class="post-1678 post type-post status-publish format-standard has-post-thumbnail hentry category-malware-analysis category-research category-tutorial tag-attck tag-danabot tag-malware-analysis tag-python tag-research tag-tools tag-tutorial tag-vbscript tag-yara">
		<div class="post-thumbnail">
		<img width="666" height="528" src="https://security-soup.net/wp-content/uploads/2019/02/Screen-Shot-2019-02-22-at-12.04.13-AM.png" class="attachment-post-thumbnail size-post-thumbnail wp-post-image" alt="" decoding="async" fetchpriority="high" srcset="https://security-soup.net/wp-content/uploads/2019/02/Screen-Shot-2019-02-22-at-12.04.13-AM.png 666w, https://security-soup.net/wp-content/uploads/2019/02/Screen-Shot-2019-02-22-at-12.04.13-AM-300x238.png 300w" sizes="(max-width: 666px) 100vw, 666px" />	</div><!-- .post-thumbnail -->
		<header class="entry-header">
		<h1 class="entry-title">Decoding a DanaBot Downloader</h1>		<div class="entry-meta">
			<span class="posted-on"><span class="screen-reader-text">Posted on </span><a href="https://security-soup.net/decoding-a-danabot-downloader/" rel="bookmark"><time class="entry-date published" datetime="2022-03-15T03:52:44+00:00">March 15, 2022</time><time class="updated" datetime="2022-03-15T03:52:47+00:00">March 15, 2022</time></a></span><span class="entry-author"><span class="author vcard"><span class="screen-reader-text">Author </span><a class="url fn n" href="https://security-soup.net/author/admin/">admin</a></span></span><span class="cat-links"><span class="screen-reader-text">Posted in </span><a href="https://security-soup.net/category/malware-analysis/" rel="category tag">Malware Analysis</a>, <a href="https://security-soup.net/category/research/" rel="category tag">Research</a>, <a href="https://security-soup.net/category/tutorial/" rel="category tag">Tutorial</a></span><span class="comments-link"><a href="https://security-soup.net/decoding-a-danabot-downloader/#respond">Leave a Reply</a></span>		</div>
	</header><!-- .entry-header -->
	<div class="entry-content">
		
		
<h2 class="wp-block-heading">Summary</h2>



<p>I came across a fairly interesting VBS-based <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.danabot">DanaBot</a> downloader the other day, and I figured it was worth doing a quick write-up on the obfuscation scheme and a few of the other TPPs I observed. The social engineering pretext used in this campaign was interesting as it leveraged an &#8220;unclaimed property&#8221; themed lure and required user interaction to deliver the first stage payload. A VBS file then fetches the DanaBot downloader. The VBS file contains an embedded URL that is not obfuscated, but the actual execution mechanism is encoded in a very long string. </p>



<p>In this blog, we will take a quick look at the social engineering pretext, then review the obfuscation scheme itself. Finally we will wrap up with coverage of three different methods to analyze and decode the VBS (each in order of complexity and potential to make you hate yourself). The first method we will review is the usage of a VBS debugger for quick a win. We will then review an alternative where we can debug the VBS file itself without any special tools, but just by editing a few lines of code in the file. Finally, we will conclude with (debatably) the ultimate exercise in futility, which is writing a Python decoder from scratch. This method doesn&#8217;t do anything for us beyond instilling a sense of satisfaction and provide an opportunity to understand the underlying obfuscation scheme a little bit better, and learn a little Python to boot. Let’s go!</p>



<div class="wp-block-image"><figure class="aligncenter size-full"><a href="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.32.06-AM-1.png"><img decoding="async" width="509" height="828" src="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.32.06-AM-1.png" alt="" class="wp-image-1689" srcset="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.32.06-AM-1.png 509w, https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.32.06-AM-1-184x300.png 184w" sizes="(max-width: 509px) 100vw, 509px" /></a><figcaption>Figure 1. This Analyst&#8217;s thought process in meme format. </figcaption></figure></div>



<h2 class="wp-block-heading">DanaBot Overview and Delivery </h2>



<p>I don&#8217;t typically do much analysis on DanaBot as I simply don&#8217;t see it as often as the other eCrime variants that are delivered in massive volumes and in widespread campaigns. In this case, I found it interesting based on the social engineering scheme that required user interaction and the website landing page that had several elements that attempted to reassure victims and instill a sense of security. In addition, DanaBot caught my eye as it has been covered in the news and via <a href="https://www.zscaler.com/blogs/security-research/danabot-launches-ddos-attack-against-ukrainian-ministry-defense">OSINT reports</a> from Zscaler that have linked DanaBot to recent DDoS campaigns against Ukrainian organizations, possibly in support of strategic objectives related to Russia&#8217;s war efforts. The authors make a point to stress that &#8220;It is unclear whether this is an act of individual hacktivism, state-sponsored, or possibly a false flag operation.&#8221; To be clear, there is no known link here observed between the campaign covered in this blog and DDoS events in Ukraine &#8212; they are simply both linked to DanaBot. </p>



<div class="wp-block-image"><figure class="aligncenter size-full"><a href="https://security-soup.net/wp-content/uploads/2022/03/danabot_drawing.png"><img decoding="async" width="961" height="271" src="https://security-soup.net/wp-content/uploads/2022/03/danabot_drawing.png" alt="" class="wp-image-1708" srcset="https://security-soup.net/wp-content/uploads/2022/03/danabot_drawing.png 961w, https://security-soup.net/wp-content/uploads/2022/03/danabot_drawing-300x85.png 300w, https://security-soup.net/wp-content/uploads/2022/03/danabot_drawing-768x217.png 768w" sizes="(max-width: 961px) 100vw, 961px" /></a><figcaption>Figure 2. Execution chain for delivery of DanaBot</figcaption></figure></div>



<p>The DanaBot malware is a banker/infostealer originally <a href="https://www.proofpoint.com/us/threat-insight/post/danabot-new-banking-trojan-surfaces-down-under-0">discovered by Proofpoint</a> researchers in 2018. It is operated by a financially motivated criminal group tracked as “<a href="https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2020CrowdStrikeGlobalThreatReport.pdf" data-type="URL" data-id="https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2020CrowdStrikeGlobalThreatReport.pdf">SCULLY SPIDER</a>” by CrowdStrike in a Malware as a Service (MaaS) model with multiple affiliate partners. Although DanaBot&#8217;s core functionality has focused on stealing banking credentials, it has <a href="https://www.zscaler.com/blogs/security-research/spike-danabot-malware-activity#:~:text=DanaBot%20is%20a%20malware%2Das,affiliates%20to%20the%20threat%20landscape.">been known</a> to be used in DDoS operations before. </p>



<p>DanaBot has been delivered via a variety methods in the past, including cracked games, sabotaged code packages, and phishing emails. In this case the VBS files was hosted on a fake &#8220;unclaimed property&#8221; website: www[.]moneyunclaimed[.]net. </p>



<ul id="block-dc171c61-04ef-4c95-b371-a2eb7eaa61f4"><li>Filename:&nbsp;<a href="https://www.virustotal.com/gui/search/name%253Arpetitto-s980361ad.vbs">rpetitto-s980361ad.vbs</a></li><li>SHA256: <a href="https://www.virustotal.com/gui/file/2186495019ee3d4838df3482eaa3c6b37f08d68b8ef0675342cb761ccf04c4fc">a4f1ea5dd434deee93bdf312f658a7a26f767c7683601fa8b23ef096392eef17</a></li></ul>



<p>I have observed other domains in recent campaigns with a similar theme such as www[.]unclaimed2[.]com and/or www[.]unclaimedhq[.]com. All of these sites lure a potential victim to performing a &#8220;search&#8221; for unclaimed property. The threat actors use a questionable selection of thumbnail portraits, but I&#8217;m assuming most visitors won&#8217;t notice or care. The site is slick enough to likely fool most potential victims. </p>



<div class="wp-block-image"><figure class="aligncenter size-full"><a href="https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_10-money.png"><img loading="lazy" decoding="async" width="987" height="743" src="https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_10-money.png" alt="" class="wp-image-1719" srcset="https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_10-money.png 987w, https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_10-money-300x226.png 300w, https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_10-money-768x578.png 768w" sizes="(max-width: 987px) 100vw, 987px" /></a><figcaption>Figure 3. The landing page</figcaption></figure></div>



<p>And this is where things get interesting. The website is interactive, and in fact even requires user interaction to complete the initial malware delivery. If a user clicks on &#8220;Search&#8221;, they will be taken to a fake search page and prompted to input their First and Last Names and their state of residence. It even has a captcha in an attempt to appear more legitimate! There are other themes leveraged in the page such as making reference to the McAfee and GoDaddy brands in the sites&#8217; footers to further cultivate a sense of trust and security with the victim. </p>



<div class="wp-block-image"><figure class="aligncenter size-full"><a href="https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_57-captcha.png"><img loading="lazy" decoding="async" width="1018" height="719" src="https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_57-captcha.png" alt="" class="wp-image-1720" srcset="https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_57-captcha.png 1018w, https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_57-captcha-300x212.png 300w, https://security-soup.net/wp-content/uploads/2022/03/2022-03-14-22_25_57-captcha-768x542.png 768w" sizes="(max-width: 1018px) 100vw, 1018px" /></a><figcaption>Figure 4. Running the property &#8220;report&#8221;</figcaption></figure></div>



<p>If the potential victim is &#8220;fortunate&#8221; enough to get results, they are prompted to download a &#8220;report&#8221; that allegedly contains their unclaimed property findings. However, in reality this ZIP archive that is downloaded contains a copy of winRAR and also the initial VBS downloader. </p>



<h2 class="wp-block-heading">The Obfuscation Scheme </h2>



<p>The URL is plainly available, but execution is not. If all you care about is IOCs, you can just stop here. But we don&#8217;t just care about IOCs. Because IOCs without contextual behavior aren&#8217;t that helpful. We can do better. Unfortunately, simply accessing the VBS code turned out to be just the first stage of the battle. This particular file has two loops that encode the script that is later executed as a function. In most analysis scenarios, speed is of the essence, so it is often better to rely on these tools to dump the code via dynamic analysis sandbox or debugger, but I often prefer to take a static analysis approach and manually decode the scripts in order to teas out the underlying subtleties of their operation. It is also just a fun exercise, akin to putting together a puzzle or deciphering a riddle. This type of approach may also provide some insight into adversary tactics, techniques, and procedures (TTPs) that would otherwise be lost (or at least glossed over) when employing dynamic analysis.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://security-soup.net/wp-content/uploads/2022/03/vbs_modded.png"><img loading="lazy" decoding="async" width="1024" height="669" src="https://security-soup.net/wp-content/uploads/2022/03/vbs_modded-1024x669.png" alt="" class="wp-image-1692" srcset="https://security-soup.net/wp-content/uploads/2022/03/vbs_modded-1024x669.png 1024w, https://security-soup.net/wp-content/uploads/2022/03/vbs_modded-300x196.png 300w, https://security-soup.net/wp-content/uploads/2022/03/vbs_modded-768x502.png 768w, https://security-soup.net/wp-content/uploads/2022/03/vbs_modded.png 1463w" sizes="(max-width: 1024px) 100vw, 1024px" /></a><figcaption>Figure 5 . The entire VBS content </figcaption></figure></div>



<p>The primary obfuscation technique utilized in this script is a string operations. The URL that hosts the final DanaBot payload is in clear text, but the function containing the execution is encoded in a very long string (over 2,000 characters). There are two loops that iterate through this string. All of the text in comments or quotes is meaningless and can be ignored for the purpose of analysis. </p>



<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://security-soup.net/wp-content/uploads/2022/03/prettified.png"><img loading="lazy" decoding="async" width="1024" height="630" src="https://security-soup.net/wp-content/uploads/2022/03/prettified-1024x630.png" alt="" class="wp-image-1694" srcset="https://security-soup.net/wp-content/uploads/2022/03/prettified-1024x630.png 1024w, https://security-soup.net/wp-content/uploads/2022/03/prettified-300x185.png 300w, https://security-soup.net/wp-content/uploads/2022/03/prettified-768x473.png 768w, https://security-soup.net/wp-content/uploads/2022/03/prettified.png 1472w" sizes="(max-width: 1024px) 100vw, 1024px" /></a><figcaption>Figure 6. Prettified VBS</figcaption></figure></div>



<p>The first loops takes slices of two characters each and adds them to a dictionary object. The second loop iterates through the string and takes slices of two characters and then looks up those values in the dictionary it just created. It then accesses the key that corresponds to the lookup value. Since the dictionary is 256 keys long, each key correlates to a character in the extended ascii set. Finally, these keys are converted to their ascii values, stored in a final variable and then executed as s function. </p>



<h2 class="wp-block-heading">Decoding the Downloader 3 Ways </h2>



<p>So at this point we have a basic understanding of how the code works and we have the network IOC for the next stage payload. The final piece of information an analyst would typically investigate is the manner in which the next stage is executed. This is important for many reasons &#8212; but perhaps most importantly &#8212;  the understanding of the specific tactics, techniques, and procedures (TTPs) can provide helpful contextual enrichment for developing detection content and identifying potential residual disk artifacts.  In this next section, we will take a look at 3 options at how one could go about fully decoding the script to isolate these execution details. </p>



<h3 class="wp-block-heading">Method 1: Using Vbsedit to debug</h3>



<p>First, and perhaps most viable, is simply using a debugger to execute the code in a controlled manner and capturing the result as output. I have found the tool that is easiest and best for this purpose to be <a href="https://www.vbsedit.com/" data-type="URL" data-id="https://www.vbsedit.com/">VbsEdit</a>. This tool is not free, however, the lifetime license is very reasonably priced. There is also an evaluation license that allows usage of the tool, but implements some guardrails with an additional delay and some obstacles in the form of message prompts in the evaluation mode. Either way, the tool works great and you can set break points and use the debugger console to step through the code. You can use this to populate variables and/or jump straight to the full output as shown below. </p>



<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://security-soup.net/wp-content/uploads/2022/03/vbs_debug.png"><img loading="lazy" decoding="async" width="1024" height="484" src="https://security-soup.net/wp-content/uploads/2022/03/vbs_debug-1024x484.png" alt="" class="wp-image-1715" srcset="https://security-soup.net/wp-content/uploads/2022/03/vbs_debug-1024x484.png 1024w, https://security-soup.net/wp-content/uploads/2022/03/vbs_debug-300x142.png 300w, https://security-soup.net/wp-content/uploads/2022/03/vbs_debug-768x363.png 768w, https://security-soup.net/wp-content/uploads/2022/03/vbs_debug.png 1083w" sizes="(max-width: 1024px) 100vw, 1024px" /></a><figcaption>Figure 7. Debugger output </figcaption></figure></div>



<p>This is is a powerful tool whose capability to debug the code for quick output is hard to beat.  Automatically de-obfuscating the code saves a ton of time, which can then be spent on other analysis or using the gathered information to pivot further on an investigation. In this sample, we uncovered multiple tool marks of interest: including the creation of a shell object and usage of wscript to kick off the script, the full path for the next stage payload written to disk, and the usage of rundll32 to execute that payload. This is a common technique that most EDR platforms should detect, but if you are following along at home, there are ATT&amp;CK tagings below if you need to check for coverage.   </p>



<h3 class="wp-block-heading">Method 2: Modifying the VBS code to print to file </h3>



<p>The second method we will look at is somewhat slower, but still provides quick output. The advantage to this method is that it does not require any additional tooling beyond a text editor and the ability to run VBscript. The idea here with this approach is that instead of executing the script within a shell object, we will simply re-direct the script&#8217;s content as output to a file of our choosing. This requires the addition of just 4 extra lines of code. It should be noted that using this method is safest to also comment out the &#8220;Execute(temp)&#8221; function by prepending the line with &#8220;REM&#8221;. </p>



<pre class="wp-block-code"><code>Set objFSO = CreateObject("Scripting.FileSystemObject")
outfile = "&lt;INSERT PATH TO FILE>"
sET objFile = objFSO.CreateTextFile(outFile,True)
objFile.Write &lt;INSERT THE FUNCTION'S ARGUMENT HERE> &amp; vbCrLf</code></pre>



<p>The variable names in the code don&#8217;t matter. You can change them to whatever you wish. I just use what I copied off the guy that showed me how to do this. One additional note: the 4 line in the above can be moved around to wherever you like, sort of like using it as a break point, as that will output the script to file at that point in its execution. The fourth line also needs to be modified with the specific argument that is called by the function being debugged. </p>



<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://security-soup.net/wp-content/uploads/2022/03/write-file.png"><img loading="lazy" decoding="async" width="1024" height="609" src="https://security-soup.net/wp-content/uploads/2022/03/write-file-1024x609.png" alt="" class="wp-image-1712" srcset="https://security-soup.net/wp-content/uploads/2022/03/write-file-1024x609.png 1024w, https://security-soup.net/wp-content/uploads/2022/03/write-file-300x179.png 300w, https://security-soup.net/wp-content/uploads/2022/03/write-file-768x457.png 768w, https://security-soup.net/wp-content/uploads/2022/03/write-file.png 1504w" sizes="(max-width: 1024px) 100vw, 1024px" /></a><figcaption>Figure 8. File modification to write to file</figcaption></figure></div>



<h3 class="wp-block-heading">Method 3: Writing a Python Script (slow and pointless?)</h3>



<p>Alright, so I&#8217;ve spent plenty of my time here writing a blog post that probably three people will ever read, and if you think that was a waste of time, well have I got a surprise for you&#8230;Because I wasn&#8217;t content to just extract my IOCs and TTPs and write my little Yara rule (see below). No. I decided I wanted to commune with this code for a more deeper understanding of how it worked, and how it fit in with the greater mysteries of the Universe. Also, I hadn&#8217;t written any code in a while, and I thought it could be a fun exercise to crack the ole knuckles, scrape off the rust, and slap together some Python. Ultimately, I didn&#8217;t unlock any mysteries of the Universe, but I did write some dodgy Python and learned a few things &#8212; so I will count that as a win in my book. </p>



<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.52.50-AM.png"><img loading="lazy" decoding="async" width="1024" height="623" src="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.52.50-AM-1024x623.png" alt="" class="wp-image-1699" srcset="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.52.50-AM-1024x623.png 1024w, https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.52.50-AM-300x183.png 300w, https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.52.50-AM-768x467.png 768w, https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-9.52.50-AM.png 1351w" sizes="(max-width: 1024px) 100vw, 1024px" /></a><figcaption>Figure 9. If a Python falls in the forest with nobody around, does it still make a sound?</figcaption></figure></div>



<p>The <a href="https://github.com/Sec-Soup/Python-ToolBox/blob/master/vbs-decode-dana/vbs-decode-dana.py" data-type="URL" data-id="https://github.com/Sec-Soup/Python-ToolBox/blob/master/vbs-decode-dana/vbs-decode-dana.py">script</a> here is very simple as you can see below. We don&#8217;t need any fancy imports or dependencies, just plain ole Python does the trick. Basically, the Python script works exactly like the VBScript. It first takes a string variable, then sets another variable to ensure we grab a pair of characters from the string. We then take two slices of the string, the first being for the creation of the dictionary, and the second used to build the command. After the first slice is converted into a dictionary, the second slice is simply indexed. </p>



<p>We then need to access the items in the dictionary and loop through the second slice&#8217;s index. For each character pain in that loop, we look up the key for that value in the dictionary and convert the key&#8217;s decimal value it into its ascii character. Then it is just a matter of joining the characters and printing them out to the console. Voilà! </p>



<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-6.49.13-PM.png"><img loading="lazy" decoding="async" width="1024" height="514" src="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-6.49.13-PM-1024x514.png" alt="" class="wp-image-1698" srcset="https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-6.49.13-PM-1024x514.png 1024w, https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-6.49.13-PM-300x151.png 300w, https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-6.49.13-PM-768x385.png 768w, https://security-soup.net/wp-content/uploads/2022/03/Screen-Shot-2022-03-13-at-6.49.13-PM.png 1056w" sizes="(max-width: 1024px) 100vw, 1024px" /></a><figcaption>Figure 10 . The fruits of our labors. </figcaption></figure></div>



<h2 class="wp-block-heading">Conclusion</h2>



<p>So that’s it, my take on conducting analysis on a recent DanaBot downloader sample. This campaign caught my eye as the social engineering tactic was fairly convincing. The VBScript itself used an interesting string obfuscation method as well, although nothing novel. I’ve shared a few resources and tools that can hopefully enable analysts to improve the velocity their data gathering for triage and investigations.  ATT&amp;CK tagging is provided below, and I’ve included some IOCs from similar campaigns, and include a quick Yara signature that could help detect this particular downloader. I hope some of the analysis techniques will be helpful to those learning the ropes and/or looking for new methods to add to their current toolkit. Thanks for reading!</p>



<h2 class="wp-block-heading">Detection</h2>



<pre class="wp-block-code"><code>rule VBS_Downloader
//Downloaders were observed delivering Danabot in February/March of 2022
{
  meta: 
    description = "Simple rule to detect VBS downloaders"
    created = "2022-03-13"
    author = "Ryan Campbell @sec_soup"

strings:
  $a = "CreateObject(\"Scripting.Dictionary\")" 
  $b = "Dict.Add Mid("
  $c = "-1,2), i"
  $d = "Mod 2 = 0 and Dict.count &lt;&gt; 256 then"
  $e = "Mod 2 = 0 and Dict.count = 256 then"
  $f = "Chrw(Dict.Item(Mid("
  $g = "Execute(temp)"

  
condition:
  6 of ($a,$b,$c,$d,$e,$f,$g)
  filesize &lt; 50KB
}</code></pre>



<h2 class="wp-block-heading">IOCs</h2>



<p>www[.]moneyunclaimed[.]net<br>www[.]unclaimed2[.]com<br>www[.]unclaimedhq[.]com<br>z3[.]goldfishcloud[.]top<br>2186495019ee3d4838df3482eaa3c6b37f08d68b8ef0675342cb761ccf04c4fc</p>



<h2 class="wp-block-heading">ATT&amp;CK Tagging</h2>



<ul><li><strong>Execution</strong><ul><li><strong>User Execution (<a rel="noreferrer noopener" href="https://attack.mitre.org/techniques/T1204/" target="_blank">ATT&amp;CK ID: T1204</a>)</strong></li><li><strong>Command and Scripting Interpreter:&nbsp;Visual Basic</strong>&nbsp;<strong>(<a href="https://attack.mitre.org/techniques/T1059/005/" data-type="URL" data-id="https://attack.mitre.org/techniques/T1059/005/">ATT&amp;ACK ID: T1059.005</a>)&nbsp;</strong></li><li><strong>Signed Binary Proxy Execution:&nbsp;Rundll32 (<a href="https://attack.mitre.org/techniques/T1218/011/">ATT&amp;CK ID: T1218.011</a>)</strong></li></ul></li><li><strong>Defense Evasion</strong><ul><li><strong>Deobfuscate/Decode Files or Information (<a href="https://attack.mitre.org/techniques/T1140/">ATT&amp;CK ID: T1140</a>)</strong></li><li><strong>Masquerading (<a href="https://attack.mitre.org/techniques/T1036/">ATT&amp;CK ID: T1036</a>)</strong></li></ul></li><li><strong>Command and Control</strong><ul><li><strong>Remote File Copy (<a href="https://attack.mitre.org/techniques/T1105/">ATT&amp;CK ID: T1105</a>)</strong></li></ul></li></ul>



<h2 class="wp-block-heading">References</h2>



<p>[1] <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.danabot">https://malpedia.caad.fkie.fraunhofer.de/details/win.danabot</a></p>



<p>[2] <a href="https://www.proofpoint.com/us/threat-insight/post/danabot-new-banking-trojan-surfaces-down-under-0">https://www.proofpoint.com/us/threat-insight/post/danabot-new-banking-trojan-surfaces-down-under-0</a></p>



<p>[3] <a href="https://www.zscaler.com/blogs/security-research/danabot-launches-ddos-attack-against-ukrainian-ministry-defense">https://www.zscaler.com/blogs/security-research/danabot-launches-ddos-attack-against-ukrainian-ministry-defense</a></p>



<p>[4] <a href="https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2020CrowdStrikeGlobalThreatReport.pdf">https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2020CrowdStrikeGlobalThreatReport.pdf</a></p>



<p>[5] <a href="https://www.zscaler.com/blogs/security-research/spike-danabot-malware-activity#:~:text=DanaBot%20is%20a%20malware%2Das,affiliates%20to%20the%20threat%20landscape.">https://www.zscaler.com/blogs/security-research/spike-danabot-malware-activity#:~:text=DanaBot%20is%20a%20malware%2Das,affiliates%20to%20the%20threat%20landscape.</a></p>



<p>[6] <a href="https://www.virustotal.com/gui/file/2186495019ee3d4838df3482eaa3c6b37f08d68b8ef0675342cb761ccf04c4fc">https://www.virustotal.com/gui/file/2186495019ee3d4838df3482eaa3c6b37f08d68b8ef0675342cb761ccf04c4fc</a></p>



<p>[7] <a href="https://www.vbsedit.com/" data-type="URL" data-id="https://www.vbsedit.com/">https://www.vbsedit.com/</a></p>



<p>[8] <a href="https://github.com/Sec-Soup">https://github.com/Sec-Soup</a></p>



<p>[9] <a href="https://github.com/Sec-Soup/Python-ToolBox/blob/master/vbs-decode-dana/vbs-decode-dana.py">https://github.com/Sec-Soup/Python-ToolBox/blob/master/vbs-decode-dana/vbs-decode-dana.py</a></p>
			</div><!-- .entry-content -->
						<footer class="entry-footer">
								<div class="tag-links">Tagged: <a href="https://security-soup.net/tag/attck/" rel="tag">ATT&amp;CK</a><a href="https://security-soup.net/tag/danabot/" rel="tag">Danabot</a><a href="https://security-soup.net/tag/malware-analysis/" rel="tag">Malware Analysis</a><a href="https://security-soup.net/tag/python/" rel="tag">Python</a><a href="https://security-soup.net/tag/research/" rel="tag">Research</a><a href="https://security-soup.net/tag/tools/" rel="tag">Tools</a><a href="https://security-soup.net/tag/tutorial/" rel="tag">Tutorial</a><a href="https://security-soup.net/tag/vbscript/" rel="tag">VBScript</a><a href="https://security-soup.net/tag/yara/" rel="tag">YARA</a></div>			</footer><!-- .entry-footer -->
		</article><!-- #post -->
	<nav class="navigation post-navigation" aria-label="Posts">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links"><div class="nav-previous"><a href="https://security-soup.net/weekly-news-roundup-march-6-to-march-12/" rel="prev">&larr; Weekly News Roundup — March 6 to March 12</a></div><div class="nav-next"><a href="https://security-soup.net/weekly-news-roundup-march-13-to-march-19/" rel="next">Weekly News Roundup — March 13 to March 19 &rarr;</a></div></div>
	</nav><div id="comments" class="comments-area">
		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/decoding-a-danabot-downloader/#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://security-soup.net/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate><p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> <span class="required-field-message">Required fields are marked <span class="required">*</span></span></p><p class="comment-form-comment"><label for="comment">Comment <span class="required">*</span></label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" required></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" autocomplete="name" required /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" autocomplete="email" required /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200" autocomplete="url" /></p>
<p class="comment-subscription-form"><input type="checkbox" name="subscribe_comments" id="subscribe_comments" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-label" for="subscribe_comments">Notify me of follow-up comments by email.</label></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog">Notify me of new posts by email.</label></p><p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='1678' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="7b06489fd5" /></p><p style="display: none !important;" class="akismet-fields-container" data-prefix="ak_"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js_1" name="ak_js" value="204"/><script>document.getElementById( "ak_js_1" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	</div><!-- .comments-area -->				<!-- If has sidebar start -->
	</div>

<aside id="secondary" class="featured-sidebar widget-area">
	<section id="search-4" class="widget widget_search"><form role="search" method="get" class="search-form" action="https://security-soup.net/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" />
				</label>
				<input type="submit" class="search-submit" value="Search" />
			</form></section><section id="wpcw_social-3" class="widget wpcw-widgets wpcw-widget-social"><ul><li class="no-label"><a href="https://security-soup.net/feed/" target="_blank" title="Visit Security Soup on RSS feed"><span class="fa fa-2x fa-rss"></span></a></li><li class="no-label"><a href="https://twitter.com/sec_soup" target="_blank" title="Visit Security Soup on Twitter"><span class="fa fa-2x fa-twitter"></span></a></li><li class="no-label"><a href="https://www.linkedin.com/in/ryan-campbell-7219b7138/" target="_blank" title="Visit Security Soup on LinkedIn"><span class="fa fa-2x fa-linkedin"></span></a></li><li class="no-label"><a href="https://github.com/sec-soup" target="_blank" title="Visit Security Soup on GitHub"><span class="fa fa-2x fa-github"></span></a></li></ul></section><section id="newsletterwidget-3" class="widget widget_newsletterwidget"><h2 class="widget-title">Newsletter Sign-up</h2>Please submit your email if you would like to receive the Weekly News Roundups when they are posted.<div class="tnp tnp-subscription tnp-widget">
<form method="post" action="https://security-soup.net/?na=s">
<input type="hidden" name="nr" value="widget">
<input type="hidden" name="nlang" value="">
<div class="tnp-field tnp-field-email"><label for="tnp-1">Email</label>
<input class="tnp-email" type="email" name="ne" id="tnp-1" value="" placeholder="" required></div>
<div class="tnp-field tnp-field-button" style="text-align: left"><input class="tnp-submit" type="submit" value="Subscribe" style="">
</div>
</form>
</div>
</section><section id="archives-4" class="widget widget_archive"><h2 class="widget-title">Archives</h2>
			<ul>
					<li><a href='https://security-soup.net/2022/10/'>October 2022</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2022/09/'>September 2022</a>&nbsp;(2)</li>
	<li><a href='https://security-soup.net/2022/08/'>August 2022</a>&nbsp;(1)</li>
	<li><a href='https://security-soup.net/2022/07/'>July 2022</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2022/06/'>June 2022</a>&nbsp;(2)</li>
	<li><a href='https://security-soup.net/2022/05/'>May 2022</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2022/04/'>April 2022</a>&nbsp;(1)</li>
	<li><a href='https://security-soup.net/2022/03/'>March 2022</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2022/02/'>February 2022</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2022/01/'>January 2022</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2021/12/'>December 2021</a>&nbsp;(2)</li>
	<li><a href='https://security-soup.net/2021/11/'>November 2021</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2021/10/'>October 2021</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2021/09/'>September 2021</a>&nbsp;(6)</li>
	<li><a href='https://security-soup.net/2021/08/'>August 2021</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2021/07/'>July 2021</a>&nbsp;(2)</li>
	<li><a href='https://security-soup.net/2021/06/'>June 2021</a>&nbsp;(3)</li>
	<li><a href='https://security-soup.net/2021/05/'>May 2021</a>&nbsp;(1)</li>
	<li><a href='https://security-soup.net/2021/04/'>April 2021</a>&nbsp;(3)</li>
	<li><a href='https://security-soup.net/2021/03/'>March 2021</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2021/02/'>February 2021</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2021/01/'>January 2021</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2020/12/'>December 2020</a>&nbsp;(3)</li>
	<li><a href='https://security-soup.net/2020/11/'>November 2020</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2020/10/'>October 2020</a>&nbsp;(3)</li>
	<li><a href='https://security-soup.net/2020/09/'>September 2020</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2020/08/'>August 2020</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2020/07/'>July 2020</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2020/06/'>June 2020</a>&nbsp;(3)</li>
	<li><a href='https://security-soup.net/2020/05/'>May 2020</a>&nbsp;(6)</li>
	<li><a href='https://security-soup.net/2020/04/'>April 2020</a>&nbsp;(3)</li>
	<li><a href='https://security-soup.net/2020/03/'>March 2020</a>&nbsp;(3)</li>
	<li><a href='https://security-soup.net/2020/02/'>February 2020</a>&nbsp;(3)</li>
	<li><a href='https://security-soup.net/2020/01/'>January 2020</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2019/12/'>December 2019</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2019/11/'>November 2019</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2019/10/'>October 2019</a>&nbsp;(1)</li>
	<li><a href='https://security-soup.net/2019/09/'>September 2019</a>&nbsp;(7)</li>
	<li><a href='https://security-soup.net/2019/08/'>August 2019</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2019/07/'>July 2019</a>&nbsp;(6)</li>
	<li><a href='https://security-soup.net/2019/06/'>June 2019</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2019/05/'>May 2019</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2019/04/'>April 2019</a>&nbsp;(5)</li>
	<li><a href='https://security-soup.net/2019/03/'>March 2019</a>&nbsp;(6)</li>
	<li><a href='https://security-soup.net/2019/02/'>February 2019</a>&nbsp;(4)</li>
	<li><a href='https://security-soup.net/2019/01/'>January 2019</a>&nbsp;(1)</li>
			</ul>

			</section><section id="tag_cloud-3" class="widget widget_tag_cloud"><h2 class="widget-title">Tags</h2><div class="tagcloud"><a href="https://security-soup.net/tag/attck/" class="tag-cloud-link tag-link-23 tag-link-position-1" style="font-size: 14px;" aria-label="ATT&amp;CK (3 items)">ATT&amp;CK<span class="tag-link-count"> (3)</span></a>
<a href="https://security-soup.net/tag/career-development/" class="tag-cloud-link tag-link-44 tag-link-position-2" style="font-size: 14px;" aria-label="Career Development (1 item)">Career Development<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/certificaton/" class="tag-cloud-link tag-link-43 tag-link-position-3" style="font-size: 14px;" aria-label="Certificaton (1 item)">Certificaton<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/cissp/" class="tag-cloud-link tag-link-42 tag-link-position-4" style="font-size: 14px;" aria-label="CISSP (1 item)">CISSP<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/cyberchef/" class="tag-cloud-link tag-link-58 tag-link-position-5" style="font-size: 14px;" aria-label="CyberChef (1 item)">CyberChef<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/cyberpolicy/" class="tag-cloud-link tag-link-62 tag-link-position-6" style="font-size: 14px;" aria-label="Cyberpolicy (1 item)">Cyberpolicy<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/danabot/" class="tag-cloud-link tag-link-66 tag-link-position-7" style="font-size: 14px;" aria-label="Danabot (1 item)">Danabot<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/dns/" class="tag-cloud-link tag-link-48 tag-link-position-8" style="font-size: 14px;" aria-label="DNS (1 item)">DNS<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/domain-names/" class="tag-cloud-link tag-link-45 tag-link-position-9" style="font-size: 14px;" aria-label="Domain Names (1 item)">Domain Names<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/doppeldridex/" class="tag-cloud-link tag-link-64 tag-link-position-10" style="font-size: 14px;" aria-label="DoppelDridex (1 item)">DoppelDridex<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/doppelspider/" class="tag-cloud-link tag-link-65 tag-link-position-11" style="font-size: 14px;" aria-label="DoppelSpider (1 item)">DoppelSpider<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/dridex/" class="tag-cloud-link tag-link-49 tag-link-position-12" style="font-size: 14px;" aria-label="Dridex (2 items)">Dridex<span class="tag-link-count"> (2)</span></a>
<a href="https://security-soup.net/tag/emotet/" class="tag-cloud-link tag-link-13 tag-link-position-13" style="font-size: 14px;" aria-label="Emotet (11 items)">Emotet<span class="tag-link-count"> (11)</span></a>
<a href="https://security-soup.net/tag/excel/" class="tag-cloud-link tag-link-27 tag-link-position-14" style="font-size: 14px;" aria-label="Excel (2 items)">Excel<span class="tag-link-count"> (2)</span></a>
<a href="https://security-soup.net/tag/flawedammyy/" class="tag-cloud-link tag-link-22 tag-link-position-15" style="font-size: 14px;" aria-label="FlawedAmmyy (1 item)">FlawedAmmyy<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/government/" class="tag-cloud-link tag-link-61 tag-link-position-16" style="font-size: 14px;" aria-label="Government (1 item)">Government<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/javascript/" class="tag-cloud-link tag-link-20 tag-link-position-17" style="font-size: 14px;" aria-label="JavaScript (1 item)">JavaScript<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/macros/" class="tag-cloud-link tag-link-14 tag-link-position-18" style="font-size: 14px;" aria-label="Macros (12 items)">Macros<span class="tag-link-count"> (12)</span></a>
<a href="https://security-soup.net/tag/malware-analysis/" class="tag-cloud-link tag-link-15 tag-link-position-19" style="font-size: 14px;" aria-label="Malware Analysis (17 items)">Malware Analysis<span class="tag-link-count"> (17)</span></a>
<a href="https://security-soup.net/tag/mitreattack/" class="tag-cloud-link tag-link-39 tag-link-position-20" style="font-size: 14px;" aria-label="MITREattack (1 item)">MITREattack<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/msiexec/" class="tag-cloud-link tag-link-26 tag-link-position-21" style="font-size: 14px;" aria-label="msiexec (1 item)">msiexec<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/news/" class="tag-cloud-link tag-link-7 tag-link-position-22" style="font-size: 14px;" aria-label="News (146 items)">News<span class="tag-link-count"> (146)</span></a>
<a href="https://security-soup.net/tag/oledump-py/" class="tag-cloud-link tag-link-36 tag-link-position-23" style="font-size: 14px;" aria-label="oledump.py (2 items)">oledump.py<span class="tag-link-count"> (2)</span></a>
<a href="https://security-soup.net/tag/olevba/" class="tag-cloud-link tag-link-54 tag-link-position-24" style="font-size: 14px;" aria-label="olevba (1 item)">olevba<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/phishing/" class="tag-cloud-link tag-link-47 tag-link-position-25" style="font-size: 14px;" aria-label="Phishing (2 items)">Phishing<span class="tag-link-count"> (2)</span></a>
<a href="https://security-soup.net/tag/policy/" class="tag-cloud-link tag-link-60 tag-link-position-26" style="font-size: 14px;" aria-label="Policy (1 item)">Policy<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/powershell/" class="tag-cloud-link tag-link-57 tag-link-position-27" style="font-size: 14px;" aria-label="PowerShell (2 items)">PowerShell<span class="tag-link-count"> (2)</span></a>
<a href="https://security-soup.net/tag/python/" class="tag-cloud-link tag-link-51 tag-link-position-28" style="font-size: 14px;" aria-label="Python (4 items)">Python<span class="tag-link-count"> (4)</span></a>
<a href="https://security-soup.net/tag/regsvr32/" class="tag-cloud-link tag-link-56 tag-link-position-29" style="font-size: 14px;" aria-label="regsvr32 (1 item)">regsvr32<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/research/" class="tag-cloud-link tag-link-18 tag-link-position-30" style="font-size: 14px;" aria-label="Research (10 items)">Research<span class="tag-link-count"> (10)</span></a>
<a href="https://security-soup.net/tag/tlds/" class="tag-cloud-link tag-link-46 tag-link-position-31" style="font-size: 14px;" aria-label="TLDs (1 item)">TLDs<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/tools/" class="tag-cloud-link tag-link-17 tag-link-position-32" style="font-size: 14px;" aria-label="Tools (4 items)">Tools<span class="tag-link-count"> (4)</span></a>
<a href="https://security-soup.net/tag/tutorial/" class="tag-cloud-link tag-link-16 tag-link-position-33" style="font-size: 14px;" aria-label="Tutorial (6 items)">Tutorial<span class="tag-link-count"> (6)</span></a>
<a href="https://security-soup.net/tag/valak/" class="tag-cloud-link tag-link-53 tag-link-position-34" style="font-size: 14px;" aria-label="Valak (1 item)">Valak<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/vbscript/" class="tag-cloud-link tag-link-67 tag-link-position-35" style="font-size: 14px;" aria-label="VBScript (1 item)">VBScript<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/wmi/" class="tag-cloud-link tag-link-52 tag-link-position-36" style="font-size: 14px;" aria-label="WMI (1 item)">WMI<span class="tag-link-count"> (1)</span></a>
<a href="https://security-soup.net/tag/yara/" class="tag-cloud-link tag-link-35 tag-link-position-37" style="font-size: 14px;" aria-label="YARA (2 items)">YARA<span class="tag-link-count"> (2)</span></a></div>
</section><section id="yadawiki_toc_widget-3" class="widget widget_yadawiki_toc_widget"><div class="widget-text yadawiki_toc_widget_box"><div class="widget-title"><h2 class="widget-title">Knowledge Base</h2></div><div class="widget_links"><h1>Table of Contents</h1>
<ul>
<li><a href="https://security-soup.net/wiki/information-security-news/" class="wikilink-published">Information Security News</a></li>
<li><a href="https://security-soup.net/wiki/technical-research-whitepapers/" class="wikilink-published">Technical Research & Blogs</a></li>
<li><a href="https://security-soup.net/wiki/documentation-frameworks/" class="wikilink-published">Recommended Reading</a></li>
<li><a href="https://security-soup.net/wiki/tools-tips/" class="wikilink-published">Tools & Platforms</a></li>
<li><a href="https://security-soup.net/wiki/career-development/" class="wikilink-published">Training & Development</a></li>
<li><a href="https://security-soup.net/wiki/article-index/" class="wikilink-published">Article Index</a></li>
</ul>
</div></div></section></aside><!-- #secondary -->
<!-- If has sidebar end -->

		</main><!-- .site-main -->
	</div><!-- .site-content -->
			<footer class="site-footer">
		<div class="inner">
			<div class="supplementary">
	<div class="grid">
			<div class="one-fourth">
			<section id="wpcw_contact-6" class="widget wpcw-widgets wpcw-widget-contact"><h2 class="widget-title">Contact</h2><ul><li class="has-label"><strong>Email</strong><br><div><a href="mailto:r&#121;an&#64;&#115;&#101;c&#117;ri&#116;y-s&#111;&#117;p&#46;&#110;et">r&#121;an&#64;&#115;&#101;c&#117;ri&#116;y-s&#111;&#117;p&#46;&#110;et</a></div></li></ul></section>		</div>
				<div class="one-fourth">
			<section id="wpcw_social-5" class="widget wpcw-widgets wpcw-widget-social"><ul><li class="no-label"><a href="https://security-soup.net/feed/" target="_blank" title="Visit Security Soup on RSS feed"><span class="fa fa-2x fa-rss"></span></a></li><li class="no-label"><a href="https://twitter.com/sec_soup" target="_blank" title="Visit Security Soup on Twitter"><span class="fa fa-2x fa-twitter"></span></a></li><li class="no-label"><a href="https://www.linkedin.com/in/ryan-campbell-7219b7138/" target="_blank" title="Visit Security Soup on LinkedIn"><span class="fa fa-2x fa-linkedin"></span></a></li></ul></section><section id="wpcw_contact-4" class="widget wpcw-widgets wpcw-widget-contact"><h2 class="widget-title">Contact Us</h2><ul><li class="has-label"><strong>Email</strong><br><div><a href="mailto:&#114;yan&#64;&#115;ec&#117;r&#105;&#116;y-soup.ne&#116;">&#114;yan&#64;&#115;ec&#117;r&#105;&#116;y-soup.ne&#116;</a></div></li></ul></section>		</div>
				<div class="one-fourth">
			<section id="newsletterwidget-2" class="widget widget_newsletterwidget"><h2 class="widget-title">Newsletter Sign-up</h2>Please submit your email if you would like to receive the Weekly News Roundups when they are posted.<div class="tnp tnp-subscription tnp-widget">
<form method="post" action="https://security-soup.net/?na=s">
<input type="hidden" name="nr" value="widget">
<input type="hidden" name="nlang" value="">
<div class="tnp-field tnp-field-email"><label for="tnp-3">Email</label>
<input class="tnp-email" type="email" name="ne" id="tnp-3" value="" placeholder="" required></div>
<div class="tnp-field tnp-field-button" style="text-align: left"><input class="tnp-submit" type="submit" value="Subscribe" style="">
</div>
</form>
</div>
</section>		</div>
				<div class="one-fourth">
			<section id="calendar-5" class="widget widget_calendar"><div id="calendar_wrap" class="calendar_wrap"><table id="wp-calendar" class="wp-calendar-table">
	<caption>December 2024</caption>
	<thead>
	<tr>
		<th scope="col" title="Monday">M</th>
		<th scope="col" title="Tuesday">T</th>
		<th scope="col" title="Wednesday">W</th>
		<th scope="col" title="Thursday">T</th>
		<th scope="col" title="Friday">F</th>
		<th scope="col" title="Saturday">S</th>
		<th scope="col" title="Sunday">S</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td colspan="6" class="pad">&nbsp;</td><td>1</td>
	</tr>
	<tr>
		<td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td>
	</tr>
	<tr>
		<td>9</td><td>10</td><td>11</td><td>12</td><td>13</td><td>14</td><td>15</td>
	</tr>
	<tr>
		<td>16</td><td>17</td><td id="today">18</td><td>19</td><td>20</td><td>21</td><td>22</td>
	</tr>
	<tr>
		<td>23</td><td>24</td><td>25</td><td>26</td><td>27</td><td>28</td><td>29</td>
	</tr>
	<tr>
		<td>30</td><td>31</td>
		<td class="pad" colspan="5">&nbsp;</td>
	</tr>
	</tbody>
	</table><nav aria-label="Previous and next months" class="wp-calendar-nav">
		<span class="wp-calendar-nav-prev"><a href="https://security-soup.net/2022/10/">&laquo; Oct</a></span>
		<span class="pad">&nbsp;</span>
		<span class="wp-calendar-nav-next">&nbsp;</span>
	</nav></div></section>		</div>
		</div><!-- .grid -->
</div><!-- .supplementary -->			<div class="site-info">
				<p class="copyright">
			&copy;2024 Security Soup			<!-- Delete below lines to remove copyright from footer -->
			<span class="footer-info-right">
				 | Theme by <a href="https://superbthemes.com/">SuperbThemes.Com</a>
			</span>
			<!-- Delete above lines to remove copyright from footer -->
				</p>
				<a href="#" id="back-to-top" title="Back To Top"><i aria-hidden="true" class="icon-chevron-up"></i></a>
			</div><!-- .site-info -->
		</div><!-- .inner -->
	</footer><!-- .site-footer -->
</div><!-- .site -->
<script type="text/javascript" src="https://security-soup.net/wp-includes/js/comment-reply.min.js?ver=6.5.5" id="comment-reply-js" async="async" data-wp-strategy="async"></script>
<script type="text/javascript" src="https://security-soup.net/wp-content/themes/blogfeedly/js/custom.js?ver=1.6.0" id="stsblogfeedly-script-js"></script>
<script type="text/javascript" src="https://stats.wp.com/e-202451.js" id="jetpack-stats-js" data-wp-strategy="defer"></script>
<script type="text/javascript" id="jetpack-stats-js-after">
/* <![CDATA[ */
_stq = window._stq || [];
_stq.push([ "view", JSON.parse("{\"v\":\"ext\",\"blog\":\"156820185\",\"post\":\"1678\",\"tz\":\"0\",\"srv\":\"security-soup.net\",\"j\":\"1:13.4\"}") ]);
_stq.push([ "clickTrackerInit", "156820185", "1678" ]);
/* ]]> */
</script>
<script defer type="text/javascript" src="https://security-soup.net/wp-content/plugins/akismet/_inc/akismet-frontend.js?ver=1715292814" id="akismet-frontend-js"></script>
</body>
</html>