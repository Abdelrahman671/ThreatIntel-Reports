<!DOCTYPE html>
<html lang="pt-br">
    <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Analyzing a Brute Ratel Badger</title>

    <meta name="description" content="root@PandorasBox:~#">

    <!-- Social Twitter -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@NaisuBanana">
    <meta name="twitter:title" content="Analyzing a Brute Ratel Badger">
    <meta name="twitter:description" content="root@PandorasBox:~#">

    
    <meta property="twitter:image:src" content="https://blog.spookysec.net//assets/img/blog-image.png">
    

    <!-- Social Facebook/Open Graph -->
    <meta property="og:url" content="https://blog.spookysec.net//analyzing-brc4-badgers/">
    <meta property="og:title" content="Analyzing a Brute Ratel Badger">
    
    <meta property="og:image" content="https://blog.spookysec.net//assets/img/blog-image.png">
    
    <meta property="og:description" content="root@PandorasBox:~#">
    <meta property="og:site_name" content="Ronnie's Blog">

    <!-- Favicon -->
    <link rel="shortcut icon" href="/assets/img/icons/favicon.ico" type="image/x-icon" />

    <!-- Apple Touch Icons -->
    <link rel="apple-touch-icon" href="/assets/img/icons/apple-touch-icon.png" />
    <link rel="apple-touch-icon" sizes="57x57" href="/assets/img/icons/apple-touch-icon-57x57.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/assets/img/icons/apple-touch-icon-72x72.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/assets/img/icons/apple-touch-icon-114x114.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/assets/img/icons/apple-touch-icon-144x144.png" />
    <link rel="apple-touch-icon" sizes="60x60" href="/assets/img/icons/apple-touch-icon-60x60.png" />
    <link rel="apple-touch-icon" sizes="120x120" href="/assets/img/icons/apple-touch-icon-120x120.png" />
    <link rel="apple-touch-icon" sizes="76x76" href="/assets/img/icons/apple-touch-icon-76x76.png" />
    <link rel="apple-touch-icon" sizes="152x152" href="/assets/img/icons/apple-touch-icon-152x152.png" />

    <!-- Windows 8 Tile Icons -->
    <meta name="application-name" content="Ronnie Blog">
    <meta name="msapplication-TileColor" content="#5d4d7a">
    <meta name="msapplication-square70x70logo" content="smalltile.png" />
    <meta name="msapplication-square150x150logo" content="mediumtile.png" />
    <meta name="msapplication-wide310x150logo" content="widetile.png" />
    <meta name="msapplication-square310x310logo" content="largetile.png" />

    <!-- Android Lolipop Theme Color -->
    <meta name="theme-color" content="#5d4d7a">

    <link rel="stylesheet" href="/assets/css/main.css">
    <link rel="canonical" href="https://blog.spookysec.net//analyzing-brc4-badgers/">
</head>

    <body>
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" display="none" version="1.1"><defs><symbol id="icon-menu" viewBox="0 0 1024 1024"><path class="path1" d="M128 213.333h768q17.667 0 30.167 12.5t12.5 30.167-12.5 30.167-30.167 12.5h-768q-17.667 0-30.167-12.5t-12.5-30.167 12.5-30.167 30.167-12.5zM128 725.333h768q17.667 0 30.167 12.5t12.5 30.167-12.5 30.167-30.167 12.5h-768q-17.667 0-30.167-12.5t-12.5-30.167 12.5-30.167 30.167-12.5zM128 469.333h768q17.667 0 30.167 12.5t12.5 30.167-12.5 30.167-30.167 12.5h-768q-17.667 0-30.167-12.5t-12.5-30.167 12.5-30.167 30.167-12.5z"/></symbol><symbol id="icon-search" viewBox="0 0 951 1024"><path class="path1" d="M658.286 475.429q0-105.714-75.143-180.857t-180.857-75.143-180.857 75.143-75.143 180.857 75.143 180.857 180.857 75.143 180.857-75.143 75.143-180.857zM950.857 950.857q0 29.714-21.714 51.429t-51.429 21.714q-30.857 0-51.429-21.714l-196-195.429q-102.286 70.857-228 70.857-81.714 0-156.286-31.714t-128.571-85.714-85.714-128.571-31.714-156.286 31.714-156.286 85.714-128.571 128.571-85.714 156.286-31.714 156.286 31.714 128.571 85.714 85.714 128.571 31.714 156.286q0 125.714-70.857 228l196 196q21.143 21.143 21.143 51.429z"/></symbol><symbol id="icon-email" viewBox="0 0 1024 1024"><path class="path1" d="M950.857 859.429v-438.857q-18.286 20.571-39.429 37.714-153.143 117.714-243.429 193.143-29.143 24.571-47.429 38.286t-49.429 27.714-58.571 14h-1.143q-27.429 0-58.571-14t-49.429-27.714-47.429-38.286q-90.286-75.429-243.429-193.143-21.143-17.143-39.429-37.714v438.857q0 7.429 5.429 12.857t12.857 5.429h841.143q7.429 0 12.857-5.429t5.429-12.857zM950.857 258.857v-14t-0.286-7.429-1.714-7.143-3.143-5.143-5.143-4.286-8-1.429h-841.143q-7.429 0-12.857 5.429t-5.429 12.857q0 96 84 162.286 110.286 86.857 229.143 181.143 3.429 2.857 20 16.857t26.286 21.429 25.429 18 28.857 15.714 24.571 5.143h1.143q11.429 0 24.571-5.143t28.857-15.714 25.429-18 26.286-21.429 20-16.857q118.857-94.286 229.143-181.143 30.857-24.571 57.429-66t26.571-75.143zM1024 237.714v621.714q0 37.714-26.857 64.571t-64.571 26.857h-841.143q-37.714 0-64.571-26.857t-26.857-64.571v-621.714q0-37.714 26.857-64.571t64.571-26.857h841.143q37.714 0 64.571 26.857t26.857 64.571z"/></symbol><symbol id="icon-close" viewBox="0 0 805 1024"><path class="path1" d="M741.714 755.429q0 22.857-16 38.857l-77.714 77.714q-16 16-38.857 16t-38.857-16l-168-168-168 168q-16 16-38.857 16t-38.857-16l-77.714-77.714q-16-16-16-38.857t16-38.857l168-168-168-168q-16-16-16-38.857t16-38.857l77.714-77.714q16-16 38.857-16t38.857 16l168 168 168-168q16-16 38.857-16t38.857 16l77.714 77.714q16 16 16 38.857t-16 38.857l-168 168 168 168q16 16 16 38.857z"/></symbol><symbol id="icon-twitter" viewBox="0 0 951 1024"><path class="path1" d="M925.714 233.143q-38.286 56-92.571 95.429 0.571 8 0.571 24 0 74.286-21.714 148.286t-66 142-105.429 120.286-147.429 83.429-184.571 31.143q-154.857 0-283.429-82.857 20 2.286 44.571 2.286 128.571 0 229.143-78.857-60-1.143-107.429-36.857t-65.143-91.143q18.857 2.857 34.857 2.857 24.571 0 48.571-6.286-64-13.143-106-63.714t-42-117.429v-2.286q38.857 21.714 83.429 23.429-37.714-25.143-60-65.714t-22.286-88q0-50.286 25.143-93.143 69.143 85.143 168.286 136.286t212.286 56.857q-4.571-21.714-4.571-42.286 0-76.571 54-130.571t130.571-54q80 0 134.857 58.286 62.286-12 117.143-44.571-21.143 65.714-81.143 101.714 53.143-5.714 106.286-28.571z"/></symbol><symbol id="icon-facebook" viewBox="0 0 585 1024"><path class="path1" d="M548 6.857v150.857h-89.714q-49.143 0-66.286 20.571t-17.143 61.714v108h167.429l-22.286 169.143h-145.143v433.714h-174.857v-433.714h-145.714v-169.143h145.714v-124.571q0-106.286 59.429-164.857t158.286-58.571q84 0 130.286 6.857z"/></symbol><symbol id="icon-rss" viewBox="0 0 805 1024"><path class="path1" d="M219.429 768q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714zM512 838.286q1.143 16-9.714 27.429-10.286 12-26.857 12h-77.143q-14.286 0-24.571-9.429t-11.429-23.714q-12.571-130.857-105.429-223.714t-223.714-105.429q-14.286-1.143-23.714-11.429t-9.429-24.571v-77.143q0-16.571 12-26.857 9.714-9.714 24.571-9.714h2.857q91.429 7.429 174.857 46t148 103.714q65.143 64.571 103.714 148t46 174.857zM804.571 839.429q1.143 15.429-10.286 26.857-10.286 11.429-26.286 11.429h-81.714q-14.857 0-25.429-10t-11.143-24.286q-6.857-122.857-57.714-233.429t-132.286-192-192-132.286-233.429-58.286q-14.286-0.571-24.286-11.143t-10-24.857v-81.714q0-16 11.429-26.286 10.286-10.286 25.143-10.286h1.714q149.714 7.429 286.571 68.571t243.143 168q106.857 106.286 168 243.143t68.571 286.571z"/></symbol><symbol id="icon-google-plus" viewBox="0 0 951 1024"><path class="path1" d="M420 454.857q0 20.571 18.286 40.286t44.286 38.857 51.714 42 44 59.429 18.286 81.143q0 51.429-27.429 98.857-41.143 69.714-120.571 102.571t-170.286 32.857q-75.429 0-140.857-23.714t-98-78.571q-21.143-34.286-21.143-74.857 0-46.286 25.429-85.714t67.714-65.714q74.857-46.857 230.857-57.143-18.286-24-27.143-42.286t-8.857-41.714q0-20.571 12-48.571-26.286 2.286-38.857 2.286-84.571 0-142.571-55.143t-58-139.714q0-46.857 20.571-90.857t56.571-74.857q44-37.714 104.286-56t124.286-18.286h238.857l-78.857 50.286h-74.857q42.286 36 64 76t21.714 91.429q0 41.143-14 74t-33.714 53.143-39.714 37.143-34 35.143-14 37.714zM336.571 400q21.714 0 44.571-9.429t37.714-24.857q30.286-32.571 30.286-90.857 0-33.143-9.714-71.429t-27.714-74-48.286-59.143-66.857-23.429q-24 0-47.143 11.143t-37.429 30q-26.857 33.714-26.857 91.429 0 26.286 5.714 55.714t18 58.857 29.714 52.857 42.857 38.286 55.143 14.857zM337.714 898.857q33.143 0 63.714-7.429t56.571-22.286 41.714-41.714 15.714-62.286q0-14.286-4-28t-8.286-24-15.429-23.714-16.857-20-22-19.714-20.857-16.571-23.714-17.143-20.857-14.857q-9.143-1.143-27.429-1.143-30.286 0-60 4t-61.429 14.286-55.429 26.286-39.143 42.571-15.429 60.286q0 40 20 70.571t52.286 47.429 68 25.143 72.857 8.286zM800.571 398.286h121.714v61.714h-121.714v125.143h-60v-125.143h-121.143v-61.714h121.143v-124h60v124z"/></symbol><symbol id="icon-github-alt" viewBox="0 0 951 1024"><path class="path1" d="M365.714 694.857q0 22.857-7.143 46.857t-24.571 43.429-41.429 19.429-41.429-19.429-24.571-43.429-7.143-46.857 7.143-46.857 24.571-43.429 41.429-19.429 41.429 19.429 24.571 43.429 7.143 46.857zM731.429 694.857q0 22.857-7.143 46.857t-24.571 43.429-41.429 19.429-41.429-19.429-24.571-43.429-7.143-46.857 7.143-46.857 24.571-43.429 41.429-19.429 41.429 19.429 24.571 43.429 7.143 46.857zM822.857 694.857q0-68.571-39.429-116.571t-106.857-48q-23.429 0-111.429 12-40.571 6.286-89.714 6.286t-89.714-6.286q-86.857-12-111.429-12-67.429 0-106.857 48t-39.429 116.571q0 50.286 18.286 87.714t46.286 58.857 69.714 34.286 80 16.857 85.143 4h96q46.857 0 85.143-4t80-16.857 69.714-34.286 46.286-58.857 18.286-87.714zM950.857 594.286q0 118.286-34.857 189.143-21.714 44-60.286 76t-80.571 49.143-97.143 27.143-98 12.571-95.429 2.571q-44.571 0-81.143-1.714t-84.286-7.143-87.143-17.143-78.286-29.429-69.143-46.286-49.143-65.714q-35.429-70.286-35.429-189.143 0-135.429 77.714-226.286-15.429-46.857-15.429-97.143 0-66.286 29.143-124.571 61.714 0 108.571 22.571t108 70.571q84-20 176.571-20 84.571 0 160 18.286 60-46.857 106.857-69.143t108-22.286q29.143 58.286 29.143 124.571 0 49.714-15.429 96 77.714 91.429 77.714 227.429z"/></symbol><symbol id="icon-right-arrow"><path d="M21.205,5.007c-0.429-0.444-1.143-0.444-1.587,0c-0.429,0.429-0.429,1.143,0,1.571l8.047,8.047H1.111  C0.492,14.626,0,15.118,0,15.737c0,0.619,0.492,1.127,1.111,1.127h26.554l-8.047,8.032c-0.429,0.444-0.429,1.159,0,1.587  c0.444,0.444,1.159,0.444,1.587,0l9.952-9.952c0.444-0.429,0.444-1.143,0-1.571L21.205,5.007z" fill="#489472"/></symbol><symbol id="icon-linkedin" viewBox="0 0 12 14"><path class="path1" d="M1.852 11.047h1.805v-5.422h-1.805v5.422zM3.773 3.953q-0.008-0.406-0.281-0.672t-0.727-0.266-0.738 0.266-0.285 0.672q0 0.398 0.277 0.668t0.723 0.27h0.008q0.461 0 0.742-0.27t0.281-0.668zM8.344 11.047h1.805v-3.109q0-1.203-0.57-1.82t-1.508-0.617q-1.062 0-1.633 0.914h0.016v-0.789h-1.805q0.023 0.516 0 5.422h1.805v-3.031q0-0.297 0.055-0.438 0.117-0.273 0.352-0.465t0.578-0.191q0.906 0 0.906 1.227v2.898zM12 3.25v7.5q0 0.93-0.66 1.59t-1.59 0.66h-7.5q-0.93 0-1.59-0.66t-0.66-1.59v-7.5q0-0.93 0.66-1.59t1.59-0.66h7.5q0.93 0 1.59 0.66t0.66 1.59z"></path></symbol></defs></svg>

        <header class="header-post">
   	<p>λ</p>
    <div class="search-wrapper">

    <div class="search-form">
        <input arial-label="Search for a post" type="text" class="search-field" placeholder="Search...">
        <svg class="icon-remove-sign"><use xlink:href="#icon-close"></use></svg>

        <ul class="search-results search-list"></ul>
    </div>

</div>

<!-- Menu Open -> Fade effect -->
<div id="fade" class="overlay"></div>
<a id="slide" class="slideButton fade">
    <svg id="open" class="icon-menu"><use xlink:href="#icon-menu"></use></svg>
    <svg id="close" class="icon-menu"><use xlink:href="#icon-close"></use></svg>
</a>

<aside id="sidebar">
  <div id="topmenu">
    
    <ul>
      <li><span>1</span></li>
      <li><span> /analyzing-brc4-badgers/</span></li>
      <li><span>⌘ blogspace λ </span></li>
      <li><span>* Menu</span></li>
    </ul>

    <ul>
      <li><span>utf-8</span></li>
      <li><span>web</span></li>
      <li><span>.html</span></li>
    </ul>
  </div>

  <nav id="navigation" role="navigation">
    
      <ul>
      
        
            <li>
                <span class="counter-menu">1</span>
                <svg viewBox="0 0 50 50" class="icon-arrow-menu">
                    <use xlink:href="#icon-right-arrow"></use>
                </svg>
                <a key-trigger=1
                    href="https://blog.spookysec.net//"> home</a>
            </li>
        
      
        
            <li>
                <span class="counter-menu">2</span>
                <svg viewBox="0 0 50 50" class="icon-arrow-menu">
                    <use xlink:href="#icon-right-arrow"></use>
                </svg>
                <a key-trigger=2
                    href="https://blog.spookysec.net//posts"> my posts</a>
            </li>
        
      
        
            <li>
                <span class="counter-menu">3</span>
                <svg viewBox="0 0 50 50" class="icon-arrow-menu">
                    <use xlink:href="#icon-right-arrow"></use>
                </svg>
                <a key-trigger=3
                    href="https://blog.spookysec.net//tags"> tags</a>
            </li>
        
      
      </ul>
    
  </nav>
</aside>

<a id="search" class="dosearch">
    <svg class="icon-menu icon-search"><use xlink:href="#icon-search"></use></svg>
</a>

</header>

        <div class="tree-posts">

    <h3>*Posts*</h3>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/CISA-ICS-CTF-Reg-the-Dots.md/">
                <h2 class="post-title" itemprop="name">2024-CISA-ICS-CTF---Register-the-Dots.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/CISA-ICS-CTF-RAM.md/">
                <h2 class="post-title" itemprop="name">2024-CISA-ICS-CTF---Read-Askew-Manuscripts.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/CISA-ICS-CTF-Mission-Inconceivable.md/">
                <h2 class="post-title" itemprop="name">2024-CISA-ICS-CTF---Mission-Inconceivable.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/CISA-ICS-CTF-Mdl-Trains.md/">
                <h2 class="post-title" itemprop="name">2024-CISA-ICS-CTF---Modeling-Trains.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/CISA-ICS-CTF-Follow-the-Charts.md/">
                <h2 class="post-title" itemprop="name">2024-CISA-ICS-CTF---Follow-the-Charts.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/CISA-ICS-CTF-Extend-Your-Stay.md/">
                <h2 class="post-title" itemprop="name">2024-CISA-ICS-CTF---Extend-Your-Stay.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/ROP-Emporium-Split32/">
                <h2 class="post-title" itemprop="name">ROP-Emporium---Split.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/ROP-Emporium-ret2win/">
                <h2 class="post-title" itemprop="name">ROP-Emporium---Ret2Win.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/DnD-Kerberos-Service-Accounts-&-Attacks-pt-1.5/">
                <h2 class="post-title" itemprop="name">Deception-in-Depth---Overview-of-Kerberos,-Service-Accounts-&-Attacks---Part-1.5.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/DnD-Hiding-Users-and-Groups/">
                <h2 class="post-title" itemprop="name">Deception-in-Depth---Hiding-AD-Users-and-Groups---Part-1.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/Backdooring-KeePass/">
                <h2 class="post-title" itemprop="name">Backdooring-KeePass-for-Fun-and-Profit.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/Deploying-BHCE/">
                <h2 class="post-title" itemprop="name">Deploying-BloodHound-Community-Edition-for-Pentesters.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/Enriching-BloodHound-Data/">
                <h2 class="post-title" itemprop="name">Enriching-BloodHound-Data.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/Programming-with-Impacket.md/">
                <h2 class="post-title" itemprop="name">Programming-with-Impacket---Working-with-SMB.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/2023-SZC-Biscuits/">
                <h2 class="post-title" itemprop="name">Source-Zero-Con-Writeup---Biscuits.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/2023-SZC-Compromised/">
                <h2 class="post-title" itemprop="name">Source-Zero-Con-Writeup---Compromised.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/recovering-straighttalk-account-number/">
                <h2 class="post-title" itemprop="name">Recovering-Your-Straight-Talk-Account-Number.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/DnD-building-from-breaches/">
                <h2 class="post-title" itemprop="name">Deception-in-Depth---Building-Deceptions-from-Breaches.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/DnD-Deceiving-BH/">
                <h2 class="post-title" itemprop="name">Deceiving-Bloodhound---Remote-Registry-Session-Spoofing.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/analyzing-brc4-badgers/">
                <h2 class="post-title" itemprop="name">Analyzing-a-Brute-Ratel-Badger.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/cs-beacon-analysis/">
                <h2 class="post-title" itemprop="name">Cobalt-Strike-Beacon-Analysis-from-a-Live-C2.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/szc-stl-killer/">
                <h2 class="post-title" itemprop="name">Source-Zero-Con-CTF---STL-Killer.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/szc-rev-eng/">
                <h2 class="post-title" itemprop="name">Source-Zero-Con-CTF---Baby-XBee-1-2.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/ad-lab-2/">
                <h2 class="post-title" itemprop="name">Building-an-Active-Directory-Lab---Part-2.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/DnD-SMB-Session-Spoofing-Improved/">
                <h2 class="post-title" itemprop="name">Deception-in-Depth---Spoofing-SMB-User-Sessions-Improved.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/stage-v-stageless-1/">
                <h2 class="post-title" itemprop="name">Staged-vs-Stageless-Payloads.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/ad-lab-1/">
                <h2 class="post-title" itemprop="name">Building-an-Active-Directory-Lab---Part-1.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/email-spoofing/">
                <h2 class="post-title" itemprop="name">Email-Spoofing---A-Full-Guide.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/overwolf-dllinjection/">
                <h2 class="post-title" itemprop="name">OverWolfHelperx64---DLL-Injection-LOLBAS.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/DnD-LSASS-Injection/">
                <h2 class="post-title" itemprop="name">Deception-in-Depth---LSASS-Injection.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/DnD-Spoofing/">
                <h2 class="post-title" itemprop="name">Deception-in-Depth---Spoofing-Logged-in-Users.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/kali-ootb/">
                <h2 class="post-title" itemprop="name">How-Secure-is-Kali-Out-of-the-Box?.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/remote-ntlm-relaying/">
                <h2 class="post-title" itemprop="name">Remote-NTLM-Relaying-via-Meterpreter.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/certifications/">
                <h2 class="post-title" itemprop="name">Certification-Talk.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/google/">
                <h2 class="post-title" itemprop="name">Google-Is-Your-Best-Friend.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/tacacs-wireshark/">
                <h2 class="post-title" itemprop="name">Decrypting-TACACS+-Traffic-in-Wireshark.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/onkyo-lfi/">
                <h2 class="post-title" itemprop="name">CVE-2020-12447-LFI-Within-Onkyo-TX-NR585-Web-Interface.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/zcron/">
                <h2 class="post-title" itemprop="name">CVE-2020-11799---Z-Cron-Lack-of-Access-Control.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/api-keys/">
                <h2 class="post-title" itemprop="name">Finding-API-Keys-on-Github.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/domain-controller-sync/">
                <h2 class="post-title" itemprop="name">DC-Sync---The-Downfall-of-your-Network.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/kerberos-abuse/">
                <h2 class="post-title" itemprop="name">Quering-and-Cracking-Kerberos-Tickets!.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/bsides-writeup/">
                <h2 class="post-title" itemprop="name">CTF---B-Sides-Fredericton-CTF.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/linksysre/">
                <h2 class="post-title" itemprop="name">Linksys-EA6100-Firmware-Reverse-Engineering.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/bluekeep/">
                <h2 class="post-title" itemprop="name">The-BlueKeep-Module.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/redirects/">
                <h2 class="post-title" itemprop="name">Web---IP-Grabbing-Redirects.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/Pivoting/">
                <h2 class="post-title" itemprop="name">Post-Exploitation---Pivoting-with-SSHuttle.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/file-transfer/">
                <h2 class="post-title" itemprop="name">Post-Exploitation---File-Transfer.md</h2>
            </a>
        </div>
    </article>

    

    <article role="article" class="post-item" itemscope="itemscope" itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
        <div class="content">
            <a title="Open the post" href="/post-exploit/">
                <h2 class="post-title" itemprop="name">Exploitation-and-Post---Maintaining-Access.md</h2>
            </a>
        </div>
    </article>

    

</div>

        <section class="post" itemscope itemtype="http://schema.org/BlogPosting">
            
                <div class="time">
                    <time itemprop="datePublished" datetime="2022-07-09 00:00:00 +0000">09 Jul 2022</time>
                </div>
            
            <h1 class="post-title" itemprop="name">Analyzing a Brute Ratel Badger</h1>

            <article role="article" id="scroll" class="post-content" itemprop="articleBody">
                <p>Now a days <a href="https://bruteratel.com/">Brute Ratel</a> (sometimes called the “Angry Monkey C2”) seems to be a hot topic within the information security community. There’s been lots of drama surrounding the author (<a href="https://twitter.com/NinjaParanoid">ParanoidNinja</a>), rumors of the C2 being backdoored, and even some <a href="https://unit42.paloaltonetworks.com/brute-ratel-c4-tool/">blog posts</a> from well known and respected individuals within the security community indicating that the C2 framework is potentially being used by APT29 (aka the Russian State Sponsored groups).</p>

<p>So, with all these controversies, where do we go from here? Well, validating the claim that the C2 Framework is backdoored can be quite difficult to prove as that would involve me spending several thousand dollars to acquire the framework itself… So, that’s not exaclty feasable. I can however get the next best thing. A Brute Ratel Beacon, or Agent (or as they like to call it, a “Badger”).</p>

<h2 id="acquiring-a-badger-for-analysis">Acquiring a Badger for Analysis</h2>
<p>How can we do this exactly? Fortunately, I have a VirusTotal Enterprise license! This means we can pull down (download) a publicly tagged “Brute Ratel” sample from the community. To do so, we’re going to use a search for something like <code class="language-plaintext highlighter-rouge">Comment:"Brute Ratel"</code> and see if we get any hits…</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709143536.png" alt="[Pasted image 20220709143536.png]" /></p>

<p>Suprise Suprise, we got six hits! Let’s go with the most obvious one, <a href="https://www.virustotal.com/gui/file/3ad53495851bafc48caf6d2227a434ca2e0bef9ab3bd40abfe4ea8f318d37bbe">badger_x64.exe</a> (SHA256 Sum: 3ad53495851bafc48caf6d2227a434ca2e0bef9ab3bd40abfe4ea8f318d37bbe).</p>

<h2 id="lab-setup">Lab Setup</h2>
<p>For this lab, we will be using REMWorkstation + REMnux. Here’s a diagram that breaks down the lab setup:</p>

<p><img src="https://blog.spookysec.net/img/Untitled Diagram.drawio.png" alt="[Untitled Diagram.drawio.png]" /></p>

<ul>
  <li>REMWorkstation has the IP Address of 192.168.128.12</li>
  <li>REMNux has the IP Address of 192.168.128.10</li>
  <li>Default Gateway has the IP Address of 192.168.128.2</li>
  <li>REMNUx <strong>can</strong> route to 192.168.128.2, but the route is not configured.</li>
  <li>If REMNux is configured to route to the Default Gateway, outbound  traffic to the internet <strong>is</strong> allowed</li>
</ul>

<p>In addition:</p>
<ul>
  <li>REMNux will have an iptables rule that will accept all and any traffic going into it.</li>
  <li>REMNux will be running FakeDNS and iNetSim</li>
  <li>REMNux will be running WireShark</li>
  <li>REMWorkstation will be running Fiddler</li>
</ul>

<p>And thats our lab!</p>

<h2 id="dynamic-analysis---malware-detonation">Dynamic Analysis - Malware Detonation</h2>
<p>Now that we have our sample acquired, and you’re familiar with my lab setup, let’s double click some EXEs!</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709151411.png" alt="[Pasted image 20220709151411.png]" /></p>

<p>So, right off the bat, we can see some beacons to 156.65.186.50 over HTTPS. Looking at these requests in Fiddler, we can see that the sample is using the user agent: <code class="language-plaintext highlighter-rouge">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</code> with no extra headers.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709151806.png" alt="[Pasted image 20220709151806.png]" />
This is suprisingly bare. Let’s pivot over to iNetSim and see whats going on over there.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709152048.png" alt="[Pasted image 20220709152048.png]" /></p>

<p>On that side, we can see a little bit more. The file that the “Badger” requested is <code class="language-plaintext highlighter-rouge">/admin</code>, and there is also some POST data that we missed!</p>

<p>Let’s see if we can find that in Fiddler… Unfortunately, I could not find the request in Fiddler, I’ll have to revert and redetonate the sample in a bit…</p>

<p>Edit: Fiddler actually caused some issues w/ cutting the POST data off to inetsim :(.</p>

<h3 id="procmonprocdot-analysis">Procmon/ProcDot Analysis</h3>
<p>For now - Let’s move over to ProcMon and ProcDot and see what the badger is looking for.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709152935.png" alt="[Pasted image 20220709152935.png]" /></p>

<p>Starting out, this is an absolutely massive graph. Let’s start from the top and work our way down.</p>

<p>At the top:</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709153041.png" alt="[Pasted image 20220709153041.png]" /></p>

<p>It appears that the badger is first checking to see if there are any registry keys correlated to a proxy on the system. Since no proxies are in place, BRC4 likely foudn nothing.</p>

<p>On the far right, we can see a couple of cached web page responses saved to disk. If you’d like to read that data - all it contains is the iNetSim HTTP Response.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709153734.png" alt="[Pasted image 20220709153734.png]" /></p>

<p>Moving on down the graph, we can see another read attempt on another registry key relating to proxies:</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709153819.png" alt="[Pasted image 20220709153819.png]" /></p>

<p>One interesting thing I’d like to point out is the Badger is leveraging a bunch of ThreadCreates and ThreadOpens to potentially confuse AV or EDR.</p>

<p>Zooming out, all the black diamons are all new threads and Thread ID Numbers.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709153956.png" alt="[Pasted image 20220709153956.png]" /></p>

<p>Scrolling down a bit more, this pattern continues. More Threads being created to read registry keys relating to proxies:</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709154108.png" alt="[Pasted image 20220709154108.png]" /></p>

<h3 id="back-to-inetsim">Back to iNetSim</h3>

<p>Now that we know a bit more about what the program is trying to do, let’s go back to iNetSim and read the POST data from the Web Server.</p>

<p>All of the POST data is stored in <code class="language-plaintext highlighter-rouge">/var/lib/inetsim/postdata/*</code>. I hope that helps someone in the future… :)</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709160032.png" alt="[Pasted image 20220709160032.png]" /></p>

<p>Let’s bring the input into CyberChef and decode the Base64.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709160124.png" alt="[Pasted image 20220709160124.png]" /></p>

<h3 id="searching-for-encryption-in-apimonitor">Searching for Encryption in APIMonitor</h3>

<p>Interesting! The POST Data is encrypted. I think I know a trick or two that could help us decode this. To do so, we’ll need to hop into API Monitor and hook into the process and observe the API Calls the badger is performing. We’re looking for a call to Microsoft’s Cryptographic API <em>or</em> a call to the HTTP APIs as we know some cryptographic function performs before the POST data is sent…</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709161445.png" alt="[Pasted image 20220709161445.png]" /></p>

<p>By searching for a common Windows API (RtlUTF8ToUnicodeN), we can quickly find where some data conversion is taking place to give us a good starting point of reference.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709161701.png" alt="[Pasted image 20220709161701.png]" /></p>

<p>Looking at the CallStack, we see some lovely Windows API calls that look very close to what we need. Since some sort of technique is being used to dynamically resolved the APIs needed is being used, let’s back off of APIMonitor and move over to a Debugger.</p>

<h3 id="pivoting-to-x64dbg">Pivoting to x64Dbg</h3>

<p>I have setup x64Dbg to use counter-antidebugging techniques using ScyllaHide, so if there are any techniques implemented, we won’t have to worry about them.</p>

<p>After letting the program run for a while, I set a breakpoint on a couple of the common HTTP APIs. We got a hit on InternetOpenW; in my suprise, in the stack window, here we are. We have the unencrypted data starting at us!</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709212027.png" alt="[Pasted image 20220709212027.png]" /></p>

<p>It appears to be some JSON that looks like so:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"desktop-2c3Iqh0"</span><span class="err">,</span><span class="w">
	</span><span class="nl">"wver"</span><span class="p">:</span><span class="s2">"x64/10.0"</span><span class="err">,</span><span class="w">
	</span><span class="s2">"arch:"</span><span class="err">x</span><span class="mi">64</span><span class="s2">",
	"</span><span class="err">bld</span><span class="s2">":"</span><span class="mi">16322</span><span class="s2">",
	"</span><span class="err">p_name</span><span class="s2">":"</span><span class="err">&lt;base</span><span class="mi">64</span><span class="w"> </span><span class="err">blob&gt;</span><span class="s2">",
	"</span><span class="err">uid</span><span class="s2">":"</span><span class="err">REM</span><span class="s2">",
	"</span><span class="err">pid</span><span class="s2">":""
}
</span></code></pre></div></div>
<p>The Base64 glob is still relatively interesting to me, p_name, could this mean program_name? Let’s decode it!</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709212302.png" alt="[Pasted image 20220709212302.png]" /></p>

<p>It appears so! I set a BreakPoint earlier in the stack and let the execution flow to see if I could extract any more information from the Badger, doing so did yeild some extra results!</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709212945.png" alt="[Pasted image 20220709212945.png]" /></p>

<p>We have an auth token now and a more complete JSON blob.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
</span><span class="nl">"cds"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
	</span><span class="nl">"auth"</span><span class="p">:</span><span class="s2">"2K4TBS7L9GK2C205"</span><span class="w">
	</span><span class="p">},</span><span class="w">
</span><span class="nl">"mtdt"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
	</span><span class="nl">"h_name"</span><span class="p">:</span><span class="s2">"DESKTOP-2C3IQH0"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"wver"</span><span class="p">:</span><span class="s2">"x64/10.0"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"arch"</span><span class="p">:</span><span class="s2">"x64"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"bld"</span><span class="p">:</span><span class="s2">"16322"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"p_name"</span><span class="p">:</span><span class="s2">"&lt;base64 blob&gt;"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"uid"</span><span class="p">:</span><span class="s2">"REM"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"pid"</span><span class="p">:</span><span class="s2">""</span><span class="w">
	</span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Unfortunately, our analysis stops here as we don’t have a live C2 server to observe interactions with. Though, we could explore <em>how</em> the badger interacts with the C2 server if we carefully observe how the badger parses the response from the C2 server. There is definately some hardcoded commands that we would be able to use to manipulate the badger itself with iNetSim.</p>

<p>I would have liked to have caught the Windows API that actually encodes/encrypts this data, so I could write a small decoder for the information if you have the badger; but it appears that wasn’t meant for tonight :(</p>

<h2 id="basic-static-analysis">Basic Static Analysis</h2>
<p>So, this section is going to be much shorter than the last, as I’ve already found the interesting C2 related data; Now, we’re going to play an interesting game of “How good is Brute Ratel’s Obfuscation Techniques”! The answer isn’t very good.</p>

<p>To start, we’re going to chuck the EXE into Cyberchef and look at some of the clear text ASCII values.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709221750.png" alt="[Pasted image 20220709221750.png]" /></p>

<h3 id="http-request-information">HTTP Request Information</h3>
<p>So, right off the bat, it’s not looking so good. We can see a <strong>lot</strong> of interesting strings; we can see a lot of the HTTP POST information broken up into various strings. For example:</p>
<ul>
  <li>/logi</li>
  <li>AppleWeb</li>
  <li>Kit/537</li>
  <li>65.186.5</li>
  <li>159</li>
  <li>443</li>
</ul>

<p>Some of these strings are incredibly meaningful! For example, putting together the bits 159.65.186.50 gives away our command and control server, and 443 gives away the port! How interesting…</p>

<h3 id="windows-apis">Windows APIs</h3>
<p>Looking a little bit lower, we can see some of the Windows APIs the program uses as well. They appear to be jumbled up, but still readable to the human eye.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709221944.png" alt="[Pasted image 20220709221944.png]" /></p>

<ul>
  <li>VirtualProtect</li>
  <li>GetLastError</li>
  <li>GetModuleHandleW</li>
  <li>GetProcAddress</li>
</ul>

<p>The more you keep looking, the more you see the pattern.</p>

<h3 id="http-post-data">HTTP POST Data</h3>
<p>Interestingly enough, you can actually find a lot of the HTTP POST Data that we had to work oh so hard to reverse engineer to find…</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709222246.png" alt="[Pasted image 20220709222246.png]" /></p>

<ul>
  <li>arch</li>
  <li>bld</li>
  <li>fname</li>
  <li>h_name</li>
</ul>

<p>Continuing our search, we may be able to learn more about the badgers capabilities. Looking at the screenshot above, towards the bottom, we can make out “Download Failed”. Perhaps this badger has the ability to upload files to the server? Let’s keep digging.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709222528.png" alt="[Pasted image 20220709222528.png]" /></p>

<h3 id="badgers-like-ldap">Badgers like LDAP!</h3>
<p>It looks like the badger uploads PNG/image files to the C2 server. It also makes some queries to LDAP as well and will communicate with the Global Catalog. If it can’t, it’ll spit out some binding errors.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709222736.png" alt="[Pasted image 20220709222736.png]" /></p>

<p>Searching lower down the list, we can see some of the information it collects, like Password Expiration, if the password never expires, and if there is a bad password supplied.</p>

<h3 id="the-badger-is-self-aware">The Badger is Self Aware?</h3>
<p>Continuing our string-hunt, here’s one of the most interesting sets of strings… Badger itself is embedded as a string in the binary :facepalm:
<img src="https://blog.spookysec.net/img/Pasted image 20220709223019.png" alt="[Pasted image 20220709223019.png]" /></p>

<p>I’ve already loaded up the binary into Ghidra and there’s a whole lot of nothing. It seems to be a bit beyond my skill level to reverse engineer in a classic sense, so I’ll have to do some more research on my own time to figure out if I can post a followup showing off the actual binary internals.</p>

<h2 id="misc-findings">Misc Findings</h2>
<p>Here are some interesting things I found that I wanted to include in the post, but couldn’t easily write into the flow of the post. I still think this is worth mentioning.</p>

<h3 id="punycode-the-thing-i-forgot-existed">PUNYCode! The thing I forgot existed?</h3>
<p>Here is an interesting String Compare after executing a HTTP Request; it asppears that this badger is checking to see if some of the response headers contain <code class="language-plaintext highlighter-rouge">xn--</code>. This may be a sign that a threat actor is spoofing a common domain like <code class="language-plaintext highlighter-rouge">Google.com</code> to <code class="language-plaintext highlighter-rouge">http://xn--ggle-0nda.xn--om-ubc/</code>, which displays just like the normal domain does! Browser settings can be configured to always display xn–, though some by default will render the link as normal. Thanks to <a href="https://twitter.com/ShitSecure/status/1546047868095631362">@ShitSecure</a> for pointing this out &lt;3
<img src="https://blog.spookysec.net/img/Pasted image 20220709213754.png" alt="[Pasted image 20220709213754.png]" /></p>

<h3 id="traffic-generation-to-windowsupdatecom">Traffic Generation to windowsupdate.com</h3>
<p>Another interesting aspect of this badger is that it periodically reaches out to <code class="language-plaintext highlighter-rouge">ctldl.windowsupdate.com</code>. I originally thought this was Windows being Windows, but it turns out that this is hardcoded within the binary. This is likely a cloaking mechanism to throw off AV/EDR/Sandboxes.</p>

<p><img src="https://blog.spookysec.net/img/Pasted image 20220709214256.png" alt="[Pasted image 20220709214256.png]" /></p>

<p>I hope you all enjoyed :)
~Ronnie</p>

            </article>

            <section class="share">

    <h3>Share</h3>

    <a aria-label="Share on Twitter" href="https://twitter.com/intent/tweet?text=&quot;&quot;%20https://blog.spookysec.net//analyzing-brc4-badgers/%20via%20&#64;NaisuBanana&hashtags=Malware Analysis,Command and Control Frameworks,Brute Ratel,Windows,Cyber Security,"
    onclick="window.open(this.href, 'twitter-share', 'width=550,height=235');return false;" title="Share on Twitter">
        <svg class="icon icon-twitter"><use xlink:href="#icon-twitter"></use></svg>
    </a>

</section>

            <section class="comments">

    <h3>Comments</h3>
    <div id="disqus_thread"></div>

</section>

<script type="text/javascript">

    var disqus_loaded = false;

    function load_disqus(){
        disqus_loaded = true;
        var disqus_shortname = '';
        var disqus_title = '';
        var disqus_url = '/analyzing-brc4-badgers/';
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        var ldr = document.getElementById('disqus_loader');
    };

    window.onscroll = function(e) {
        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 800)) {
            //hit bottom of page
            if (disqus_loaded==false)
                load_disqus()
        }
    };
</script>

            <footer>

	<p>Made with <span id="heart">💚</span></p>

</footer>

            <script src="/assets/js/main.js"></script>
        </section>
    </body>
</html>
