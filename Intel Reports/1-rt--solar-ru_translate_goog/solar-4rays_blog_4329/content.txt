<!doctype html>
<html lang="ru" class="page">
 <head>
  <base href="https://rt-solar.ru/solar-4rays/blog/4329/">
  <meta name="hmac-token-name" content="Ajax-Token">
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="yandex-verification" content="0d4807dbb5bcd957">
  <script charset="utf-8" src="/6087d063c2c19d2a39052df2.js?1721742133200"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script><!-- and it's easy to individually load additional languages -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/go.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/powershell.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/properties.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/vim.min.js"></script>
  <script>hljs.highlightAll();</script>
  <style>
        pre code {
            font-size: 16px;
        }
	</style><!-- and it's easy to individually load additional languages -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/go.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/dos.min.js"></script>
  <script>hljs.highlightAll();</script>
  <style type="text/css">
        div[id^="wait_"] {
            display: none !important;
            background: none !important;
            border: 0 !important;
            color: #000000;
            font-family: Verdana, Arial, sans-serif;
            font-size: 11px;
            font-style: normal !important;
            font-variant: normal !important;
            font-weight: normal;
            letter-spacing: normal !important;
            line-height: normal;
            padding: 0 !important;
            position: absolute;
            text-align: center !important;
            text-indent: 0 !important;
            width: 0px !important;
            height: 0px !important;
            word-spacing: normal !important;
            z-index: 0;
            content: "";
        }
	</style>
  <title>Уязвимость десериализации VIEWSTATE: угроза от Obstinate Mogwai </title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="robots" content="index, follow">
  <meta name="description" content="Узнайте, как APT-группировка Obstinate Mogwai эксплуатирует уязвимость десериализации VIEWSTATE, и получите советы по обнаружению и защите от подобных атак.">
  <link rel="canonical" href="https://rt-solar.ru/solar-4rays/blog/4329/">
  <script>if(!window.BX)window.BX={};if(!window.BX.message)window.BX.message=function(mess){if(typeof mess==='object'){for(let i in mess) {BX.message[i]=mess[i];} return true;}};</script>
  <script>(window.BX||top.BX).message({'pull_server_enabled':'N','pull_config_timestamp':'0','pull_guest_mode':'N','pull_guest_user_id':'0'});(window.BX||top.BX).message({'PULL_OLD_REVISION':'Для продолжения корректной работы с сайтом необходимо перезагрузить страницу.'});</script>
  <script>(window.BX||top.BX).message({'JS_CORE_LOADING':'Загрузка...','JS_CORE_NO_DATA':'- Нет данных -','JS_CORE_WINDOW_CLOSE':'Закрыть','JS_CORE_WINDOW_EXPAND':'Развернуть','JS_CORE_WINDOW_NARROW':'Свернуть в окно','JS_CORE_WINDOW_SAVE':'Сохранить','JS_CORE_WINDOW_CANCEL':'Отменить','JS_CORE_WINDOW_CONTINUE':'Продолжить','JS_CORE_H':'ч','JS_CORE_M':'м','JS_CORE_S':'с','JSADM_AI_HIDE_EXTRA':'Скрыть лишние','JSADM_AI_ALL_NOTIF':'Показать все','JSADM_AUTH_REQ':'Требуется авторизация!','JS_CORE_WINDOW_AUTH':'Войти','JS_CORE_IMAGE_FULL':'Полный размер'});</script>
  <script src="/bitrix/js/main/core/core.min.js?1729168697223197"></script>
  <script>BX.Runtime.registerExtension({'name':'main.core','namespace':'BX','loaded':true});</script>
  <script>BX.setJSList(['/bitrix/js/main/core/core_ajax.js','/bitrix/js/main/core/core_promise.js','/bitrix/js/main/polyfill/promise/js/promise.js','/bitrix/js/main/loadext/loadext.js','/bitrix/js/main/loadext/extension.js','/bitrix/js/main/polyfill/promise/js/promise.js','/bitrix/js/main/polyfill/find/js/find.js','/bitrix/js/main/polyfill/includes/js/includes.js','/bitrix/js/main/polyfill/matches/js/matches.js','/bitrix/js/ui/polyfill/closest/js/closest.js','/bitrix/js/main/polyfill/fill/main.polyfill.fill.js','/bitrix/js/main/polyfill/find/js/find.js','/bitrix/js/main/polyfill/matches/js/matches.js','/bitrix/js/main/polyfill/core/dist/polyfill.bundle.js','/bitrix/js/main/core/core.js','/bitrix/js/main/polyfill/intersectionobserver/js/intersectionobserver.js','/bitrix/js/main/lazyload/dist/lazyload.bundle.js','/bitrix/js/main/polyfill/core/dist/polyfill.bundle.js','/bitrix/js/main/parambag/dist/parambag.bundle.js']);
</script>
  <script>BX.Runtime.registerExtension({'name':'jquery','namespace':'window','loaded':true});</script>
  <script>(window.BX||top.BX).message({'LANGUAGE_ID':'ru','FORMAT_DATE':'DD.MM.YYYY','FORMAT_DATETIME':'DD.MM.YYYY HH:MI:SS','COOKIE_PREFIX':'BITRIX_SM','SERVER_TZ_OFFSET':'10800','UTF_MODE':'Y','SITE_ID':'s1','SITE_DIR':'/','USER_ID':'','SERVER_TIME':'1729726608','USER_TZ_OFFSET':'0','USER_TZ_AUTO':'Y','bitrix_sessid':'1cc7f2e199563f9c2cfab27899d99725'});</script>
  <script src="/bitrix/js/pull/protobuf/protobuf.min.js?164627213676433"></script>
  <script src="/bitrix/js/pull/protobuf/model.min.js?164627213614190"></script>
  <script src="/bitrix/js/main/core/core_promise.min.js?16462710652490"></script>
  <script src="/bitrix/js/rest/client/rest.client.min.js?16462774609240"></script>
  <script src="/bitrix/js/pull/client/pull.client.min.js?170481021749554"></script>
  <script src="/bitrix/js/main/jquery/jquery-1.12.4.min.js?166074245897163"></script>
  <script src="/bitrix/js/arturgolubev.cssinliner/script.js?16887402524336"></script>
  <script>BX.setJSList(['/local/templates/4rays/js/vendor.js','/local/templates/4rays/js/main.js']);</script>
  <script rel="nofollow" src="https://www.google.com/recaptcha/api.js?render=6LdNc_AiAAAAAMcHaXKWB3Xp2Mn1a18Jvq0vUqco"></script>
  <script>window.recaptcha = { siteKey: "6LdNc_AiAAAAAMcHaXKWB3Xp2Mn1a18Jvq0vUqco", tokenLifeTime: 100 };</script>
  <script src="/bitrix/js/b01110011.recaptcha/script.js"></script>
  <style>.grecaptcha-badge {display: none;}</style>
  <script type="text/javascript">
					(function () {
						"use strict";

						var counter = function ()
						{
							var cookie = (function (name) {
								var parts = ("; " + document.cookie).split("; " + name + "=");
								if (parts.length == 2) {
									try {return JSON.parse(decodeURIComponent(parts.pop().split(";").shift()));}
									catch (e) {}
								}
							})("BITRIX_CONVERSION_CONTEXT_s1");

							if (cookie && cookie.EXPIRE >= BX.message("SERVER_TIME"))
								return;

							var request = new XMLHttpRequest();
							request.open("POST", "/bitrix/tools/conversion/ajax_counter.php", true);
							request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
							request.send(
								"SITE_ID="+encodeURIComponent("s1")+
								"&sessid="+encodeURIComponent(BX.bitrix_sessid())+
								"&HTTP_REFERER="+encodeURIComponent(document.referrer)
							);
						};

						if (window.frameRequestStart === true)
							BX.addCustomEvent("onFrameDataReceived", counter);
						else
							BX.ready(counter);
					})();
				</script>
  <meta property="og:image" content="https://rt-solar.ru/upload/iblock/bab/bo0h9yfgi555d1ucy2dmkia5el2fnscw/1392x516.png">
  <script src="/bitrix/cache/js/s1/4rays/template_faf99a77b9ddd284fc1436a75db8673f/template_faf99a77b9ddd284fc1436a75db8673f_v1.js?17295794821507330"></script>
  <script>agic_ready_event(0); agic_action_event(0);</script>
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width">
  <link rel="shortcut icon" href="/local/templates/4rays/favicon.ico" type="image/x-icon">
  <meta name="theme-color" content="#fff">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#da532c"><!-- Google Tag Manager -->
  <script>(function (w, d, s, l, i) {
			w[l] = w[l] || [];
			w[l].push({
				'gtm.start':
					new Date().getTime(), event: 'gtm.js'
			});
			var f = d.getElementsByTagName(s)[0],
				j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
			j.async = true;
			j.src =
				'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
			f.parentNode.insertBefore(j, f);
		})(window, document, 'script', 'dataLayer', 'GTM-PBTP3X2');</script><!-- End Google Tag Manager -->
  <script>
		if (!('IntersectionObserver' in window)) {
			var script = document.createElement("script");
			script.src = "https://raw.githubusercontent.com/w3c/IntersectionObserver/master/polyfill/intersection-observer.js";
			document.getElementsByTagName('head')[0].appendChild(script);
		}
	</script>
  <link rel="preload" href="/bitrix/cache/css/s1_united_490/91e086f8d7bb88590b0ed8c6049e99fa.css" as="style">
  <link href="/bitrix/cache/css/s1_united_490/91e086f8d7bb88590b0ed8c6049e99fa.css" type="text/css" rel="stylesheet" onerror="document.body.classList.add('agic_reload_css');">
  <meta http-equiv="X-Translated-By" content="Google">
  <meta http-equiv="X-Translated-To" content="es">
  <script type="text/javascript" src="https://www.gstatic.com/_/translate_http/_/js/k=translate_http.tr.pt_BR.xJ1CtmUvBec.O/am=DAY/d=1/rs=AN8SPfo94k2LWTu7fNiNbeqcVz9iNVvYQQ/m=corsproxy" data-sourceurl="https://rt-solar.ru/solar-4rays/blog/4329/"></script>
  <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" rel="stylesheet">
  <script type="text/javascript" src="https://www.gstatic.com/_/translate_http/_/js/k=translate_http.tr.pt_BR.xJ1CtmUvBec.O/am=DAY/d=1/exm=corsproxy/ed=1/rs=AN8SPfo94k2LWTu7fNiNbeqcVz9iNVvYQQ/m=phishing_protection" data-phishing-protection-enabled="false" data-forms-warning-enabled="true" data-source-url="https://rt-solar.ru/solar-4rays/blog/4329/"></script>
  <meta name="robots" content="none">
 </head>
 <body class="page__body ">
  <script type="text/javascript" src="https://www.gstatic.com/_/translate_http/_/js/k=translate_http.tr.pt_BR.xJ1CtmUvBec.O/am=DAY/d=1/exm=corsproxy,phishing_protection/ed=1/rs=AN8SPfo94k2LWTu7fNiNbeqcVz9iNVvYQQ/m=navigationui" data-environment="prod" data-proxy-url="https://1-rt--solar-ru.translate.goog" data-proxy-full-url="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_enc=1&amp;_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp" data-source-url="https://rt-solar.ru/solar-4rays/blog/4329/" data-source-language="en" data-target-language="es" data-display-language="en" data-detected-source-language="" data-is-source-untranslated="false" data-source-untranslated-url="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://rt-solar.ru/solar-4rays/blog/4329/&amp;anno=2" data-client="webapp"></script>
  <noscript>
   <img src="/d9ba8e10bfb7d9b8ef940fc268bca8f7.gif" width="0" height="0" alt="">
  </noscript>
  <header class="page-header">
   <div class="page-header__header">
    <div class="wrapper page-header__wrapper">
     <div class="page-header__left-wrapper"><button class="page-header__burger-menu js-menu-burger"></button> <a class="page-header__link-logo page-header__link-logo_desctop" href="https://1-rt--solar-ru.translate.goog/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img class="page-header__logo" src="/local/templates/4rays/images/logo.svg" alt="Логотип компании Солар" width="107" height="20"> </a>
      <nav class="page-header__nav main-nav"><!--<form class="page-header__search page-header__search_mobile main-nav__search js-search-form-mobile" action="/search/result.php">
              <input class="page-header__search-input main-nav__search-input" type="text" placeholder="Что будем искать?" required>
              <button class="page-header__search-submit" type="submit" aria-label="Найти">
                <svg class="page-header__search-icon-mobile">
                  <use xlink:href="/local/templates/4rays/images/sprites.svg#search-icon-mobile"></use>
                </svg>
              </button>
          </form>--> <a class="page-header__link-logo page-header__link-logo_mobile" href="https://1-rt--solar-ru.translate.goog/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img class="page-header__logo" src="/local/templates/4rays/images/logo.svg" alt="Логотип компании Ростелеком Солар" width="107" height="20"> </a>
       <ul class="main-nav__list">
        <li class="main-nav__item"><a class="main-nav__link main-nav__link_about" href="https://1-rt--solar-ru.translate.goog/solar-4rays/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">
          <svg><use xlink:href="/local/templates/4rays/images/sprites.svg#menu-link-about"></use>
          </svg><span>О центре</span> </a></li>
        <li class="main-nav__item point"><a class="main-nav__link" href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Блог Solar 4RAYS</a></li>
        <li class="main-nav__item"><a class="main-nav__link main-nav__link-first-level js-menu-link_first-level"> <span>Экспертные услуги</span>
          <svg class="main-nav__arrow-icon main-nav__arrow-icon_mobile"><use xlink:href="/local/templates/4rays/images/sprites.svg#menu-arrow-mobile"></use>
          </svg></a>
         <div class="main-nav__submenu-wrapper">
          <div class="wrapper main-nav__container">
           <div class="main-nav__header">
            <p class="main-nav__title js-mobile-close-menu">
             <svg class="main-nav__title-icon"><use xlink:href="/local/templates/4rays/images/sprites.svg#nav-title-icon"></use>
             </svg><span>Экспертные услуги</span></p><button class="main-nav__close-button main-nav__close-button_desctop js-close-menu">
             <svg class="main-nav__close-menu-icon"><use xlink:href="/local/templates/4rays/images/sprites.svg#close-menu-button"></use>
             </svg></button> <button class="main-nav__close-button main-nav__close-button_mobile js-close-mobile-menu">
             <svg class="main-nav__close-menu-icon"><use xlink:href="/local/templates/4rays/images/sprites.svg#close-menu-button"></use>
             </svg></button>
           </div>
           <div class="main-nav__tabs-section">
            <div class="main-nav__tabs-wrapper">
             <div class="main-nav__tabs-button-wrapper"><button class="main-nav__tab-button js-menu-tab active" data-tab-name="defense">DEFENSE </button> <button class="main-nav__tab-button js-menu-tab" data-tab-name="offense">OFFENSE </button>
             </div>
            </div>
            <ul class="main-nav__submenu-list main-nav__submenu-list_small" data-tab-name="defense">
             <li class="main-nav__submenu-item"><a class="main-nav__submenu-link main-nav__submenu-link_new" href="https://1-rt--solar-ru.translate.goog/services/jsoc/digital-forensic-and-incident-response/eir/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <span class="main-nav__sub-link-title">Расследование и реагирование на инциденты (DFIR) </span> <span class="main-nav__sub-link-text">Помощь в отражении атак любой сложности </span> </a></li>
             <li class="main-nav__submenu-item"><a class="main-nav__submenu-link main-nav__submenu-link_new" href="https://1-rt--solar-ru.translate.goog/services/jsoc/compromise-assessment/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <span class="main-nav__sub-link-title">Выявление следов компрометации </span> <span class="main-nav__sub-link-text">Compromise Assessment </span> </a></li>
            </ul>
            <ul class="main-nav__submenu-list main-nav__submenu-list_small hidden" data-tab-name="offense">
             <li class="main-nav__submenu-item"><a class="main-nav__submenu-link" href="https://1-rt--solar-ru.translate.goog/services/jsoc/security-assessment/pentest/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <span class="main-nav__sub-link-title">Тестирование на проникновение </span> <span class="main-nav__sub-link-text">Моделирование атак для оценки защищенности </span> </a></li>
             <li class="main-nav__submenu-item"><a class="main-nav__submenu-link" href="https://1-rt--solar-ru.translate.goog/services/jsoc/security-assessment/vulnerability-assessment/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <span class="main-nav__sub-link-title">Анализ защищенности</span> <span class="main-nav__sub-link-text">Поиск уязвимостей в&nbsp;мобильных и&nbsp;веб‑приложениях </span> </a></li>
             <li class="main-nav__submenu-item"><a class="main-nav__submenu-link" href="https://1-rt--solar-ru.translate.goog/services/jsoc/security-assessment/red-teaming/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <span class="main-nav__sub-link-title">Red Teaming</span> <span class="main-nav__sub-link-text">Отработка навыков противодействия целенаправленным атакам </span> </a></li>
            </ul>
           </div>
          </div>
         </div></li>
       </ul><button class="btn page-header__report page-header__report_mobile js-open-report-popup">Сообщить об инциденте </button>
      </nav>
     </div>
     <div class="page-header__right-wrapper"><button class="btn btn_small page-header__report page-header__report_desctop js-open-report-popup"> Сообщить об инциденте </button> <button class="btn btn_small btn_full-orange page-header__subscribe js-open-subscribe-popup"> <span class="desctop">Подписаться на рассылку</span> <span class="mobile">Подписаться</span> </button> <!--<form class="page-header__search page-header__search_desctop js-search-form" action="/search/result.php">
				  <div class="page-header__search-form-wrapper">
					<button class="page-header__open-search-btn js-open-button" type="button">
					  <svg class="page-header__search-icon" width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
					  <path d="M11 25.1076L13.886 22.2207" stroke="white"/>
					  <path d="M19.1014 21.6741C22.0482 21.6741 24.4371 19.2619 24.4371 16.2863C24.4371 13.3107 22.0482 10.8984 19.1014 10.8984C16.1545 10.8984 13.7656 13.3107 13.7656 16.2863C13.7656 19.2619 16.1545 21.6741 19.1014 21.6741Z" stroke="white" stroke-miterlimit="10"/>
					  <circle cx="18" cy="18" r="17.5" stroke="white"/>
					  </svg>
					  <svg class="page-header__search-close-icon" width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
					  <circle cx="18" cy="18" r="17.5" fill="white" stroke="white"/>
					  <path fill-rule="evenodd" clip-rule="evenodd" d="M16.9411 17.9998L11 23.9409L12.0607 25.0016L18.0017 19.0605L23.9428 25.0016L25.0035 23.9409L19.0624 17.9998L25.0034 12.0587L23.9428 10.998L18.0017 16.9391L12.0607 10.998L11 12.0587L16.9411 17.9998Z" fill="#2B323A"/>
					  </svg>
					</button>
					<input class="page-header__search-input" type="text" placeholder="Поиск по сайту" required>
					<button class="btn btn_small btn_orange page-header__search-submit" type="submit">Найти</button>
				  </div>
			  </form>-->
     </div>
    </div>
   </div>
  </header>
  <main class="page__main ">
   <section class="section promo-detail">
    <div class="wrapper promo-detail__wrapper">
     <div class="promo-detail__col promo-detail__col_1">
      <ul class="promo-detail__list-commands">
       <li class="promo-detail__command-item">#Уязвимости и эксплойты</li>
       <li class="promo-detail__command-item">#Целевые атаки</li>
       <li class="promo-detail__command-item">#Web приложения</li>
      </ul>
      <svg class="promo-detail__logo-4rays" width="94" height="94" viewbox="0 0 94 94" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M36.6609 46.3749C36.6609 46.3749 21.468 66.4157 14.1724 75.5149H25.8867L38.9361 46.3749H36.6421H36.6609Z" fill="#834ED8" /> <path d="M61.7618 20.0927L44.6134 75.5151H34.6289L59.4678 20.0927H61.7618Z" fill="#834ED8" /> <path d="M78.0096 0.765747L56.9313 94.7657H46.646L75.6968 0.765747H78.0096Z" fill="#834ED8" /> <path d="M74.7548 59.2894C75.7137 64.591 76.9735 70.3062 78.6282 75.5326H68.813L72.4608 59.2894H74.7548Z" fill="#834ED8" />
      </svg>
     </div>
     <div class="promo-detail__col promo-detail__col_2">
      <ul class="breadcrumbs promo-detail__breadcrumbs">
       <li class="breadcrumbs__item"><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Блог Solar 4RAYS</a></li>
       <li class="breadcrumbs__item"><span>Десериализация VIEWSTATE: как “недозакрытая” уязвимость играет на руку проправительственным группировкам</span></li>
      </ul>
      <h1 class="title-h1 title-h1_small promo-detail__title">Десериализация VIEWSTATE: как “недозакрытая” уязвимость играет на руку проправительственным группировкам</h1>
      <div class="promo-detail__time-wrapper"><time class="promo-detail__time promo-detail__time-item" datetime="1">17.05.2024</time>
      </div>
     </div>
    </div>
   </section>
   <section class="section blog-wrapper blog-wrapper_for-detail">
    <div class="wrapper"><picture>
      <source media="(max-width: 768px)" srcset="https://1-rt--solar-ru.translate.goog/upload/iblock/79d/xpip50qcvxijl9s51y614lx8p0lhvyf9/1392x516.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1" width="721" height="267">
      <img class="detail-prev-img" width="1389" height="516" src="/upload/iblock/79d/xpip50qcvxijl9s51y614lx8p0lhvyf9/1392x516.png" alt="">
     </picture>
     <div class="blog-wrapper__container">
      <div class="blog-wrapper__col blog-wrapper__col_1">
       <div class="article-body">
        <style>
    .article-body figure img {
        margin: 0 auto 0.5rem;
    }
</style>
        <p style="font-size: 18pt;">Оглавление</p>
        <ul>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#VIEWSTATE">Что такое VIEWSTATE</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#Obstinate-Mogwai">Эксплуатация десериализации VIEWSTATE в исполнении Obstinate Mogwai</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#attribution">Несколько слов об атрибуции</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#exploitation-framework">VIEWSTATE exploitation framework</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#VIEWSTATE-detection">Обнаружение десериализации VIEWSTATE</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#Machine-Key">Митигация. Machine Key</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#conclusion">Заключение</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#IOCs">IOCs</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#attachment-1">Приложение I – .NET-сборки из памяти</a></li>
         <li><a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#attachment-2">Приложение II – Примеры событий при загрузке вредоносной сборки</a></li>
        </ul><br>
        <p>В конце 2023 года команда Solar 4RAYS проводила расследование атаки на российскую телеком-компанию. Её сеть была скомпрометирована азиатской APT-группировкой, которую мы назвали Obstinate Mogwai (или «Упрямый Демон» в переводе с английского). «Упрямый», потому что в ходе работы над инцидентом мы видели, как хакеры вновь и вновь возвращались в атакованную организацию, пока мы окончательно не закрыли им все возможности для проникновения. Делали они это с помощью давно известной уязвимости десериализации ненадежных данных в параметре VIEWSTATE среды ASP.NET (далее будем называть это десериализацией VIEWSTATE).</p>
        <p>Скоро мы напишем подробный отчет про Obstinate Mogwai в целом (и обязательно опубликуем его в нашем блоге). В этой же статье сфокусируемся только на десериализации VIEWSTATE. Вспомним историю исследования уязвимости, опишем, как обнаружить подобные атаки и как на них реагировать. В конце также приведем индикаторы компрометации. Надеемся, эта информация будет полезна как командам DFIR и Threat Hunting, так и сотрудникам ИБ-отделов, и системным администраторам.</p>
        <p>Кстати, если вы увидели подозрительную активность в своей сети и считаете, что тоже стали жертвой хакерской группировки,&nbsp;<a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/?frominner=ngc2180_uppage&amp;_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#report-popup">пишите нам</a>. Эксперты Solar 4RAYS проведут расследование, выявят проблемы и дадут необходимые рекомендации, чтобы защитить вашу инфраструктуру от хакеров.</p><br><br>
        <details><summary><p style="font-size: 18pt;" id="VIEWSTATE">Что такое VIEWSTATE</p>
          <svg><use xlink:href="/local/templates/4rays/images/sprites.svg#arrow-details"></use>
          </svg></summary>
         <p>VIEWSTATE – это параметр в ASP.NET Framework, в котором сохраняется состояние ASPX-страницы при выполнении HTTP-запросов (например, значения элементов управления в форме и другая информация о странице). HTTP является протоколом без сохранения состояния (stateless), поэтому в ASP.NET эту задачу решают с помощью VIEWSTATE. В HTTP-запросах данные VIEWSTATE сериализуются и десериализуются на стороне получателя.</p>
         <p>В ASP.NET для этого используется класс <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://learn.microsoft.com/en-us/dotnet/api/system.web.ui.objectstateformatter?view%3Dnetframework-4.8.1">ObjectStateFormatter</a>, который сам Microsoft назвал ненадежным и не рекомендовал в качестве провайдера сериализации объектов. Он же является одной из причин существования RCE-уязвимости.</p>
         <p>Исследования уязвимости десериализации и атак, с ней связанных, – это отдельная большая тема, о которой выпущено большое количество публикаций и статей. Для оценки масштаба вспомним самые важные события, связанные с десериализацией в ASP.NET.</p>
         <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/37b/mxgkkek4c7ilwnuqgrg539qksc4bkw3r/deser_timeline.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="deser_timeline.png" src="/upload/medialibrary/37b/mxgkkek4c7ilwnuqgrg539qksc4bkw3r/deser_timeline.png" title="История исследования десериализации в индустрии"> </a>
          <figcaption>
           История исследования десериализации в индустрии
          </figcaption>
         </figure>
         <p>Сентябрь 2014 – Microsoft выпускает патч KB 290524, который по умолчанию включает MAC-валидацию для всех версий ASP.NET (с 1.1 до 4.5.2).</p>
         <p>Ноябрь 2014 – эксперт Александр Херцог (Alexandre Herzog) на конференции Application Security Forum – Western Switzerland (<a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://x.com/appsec_forum">@appsec_forum</a>) демонстрирует уязвимость десериализации VIEWSTATE в SharePoint. Представленный способ опирался на отсутствие MAC-валидации в ASP.NET.</p>
         <p>Июль 2017 – эксперты Альваро Муноз (Alvaro Muñoz) и Олександр Мирош (Oleksandr Mirosh) выступают с докладом <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-JSON-Attacks-wp.pdf">“Friday the 13th JSON Attacks”</a> на Black Hat 2017 в США, где показывают гаджеты для эксплуатации десериализации VIEWSTATE.</p>
         <p>Апрель 2019 – известный эксперт в области десериализации <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://soroush.me/blog/2019/04/exploiting-deserialisation-in-asp-net-via-viewstate/">Соруш Далили</a> выпускает своё исследование проблемы. Приводим его краткую выжимку: выпущенный Microsoft в 2014 году патч затрудняет использование уязвимости, но не закрывает её полностью: проверку MAC-валидации можно успешно проходить, если у злоумышленника есть доступ к веб-серверу, а именно – к ключам валидации VIEWSTATE (подробнее о них - далее в статье).</p>
         <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/d33/okvsn0mbd3yqd3q3aui4i2ujpkv8kbpg/image002.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Ключи валидации VIEWSTATE в файле web.config веб-приложения" src="/upload/medialibrary/d33/okvsn0mbd3yqd3q3aui4i2ujpkv8kbpg/image002.png" title="Ключи валидации VIEWSTATE в файле web.config веб-приложения"> </a>
          <figcaption>
           Ключи валидации VIEWSTATE в файле web.config веб-приложения
          </figcaption>
         </figure>
         <p>Исследование номинировали на Pwnie Awards как <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://web.archive.org/web/20190803165724/https:/pwnies.com/nominations/">“Most under-hyped research”</a> (самое недостаточно раскрученное исследование). Среди прочего в тексте исследования упоминается, что уязвимость относится к WON’T FIX (не будет исправляться). Одно предложение из описания заявки на номинацию красноречиво описывает суть уязвимости:</p>
         <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/1b5/dd171syn4z7w3p2kqfc8wm837anwhute/image003.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Описание статьи Соруш Далили в номинации “Most under-hyped research” на церемонии Pwnie awards 2019" src="/upload/medialibrary/1b5/dd171syn4z7w3p2kqfc8wm837anwhute/image003.png" title="Описание статьи Соруш Далили в номинации “Most under-hyped research” на церемонии Pwnie awards 2019"> </a>
          <figcaption>
           Описание статьи Соруш Далили в номинации “Most under-hyped research” на церемонии Pwnie awards 2019
          </figcaption>
         </figure>
         <p>Другими словами, если злоумышленники каким-либо образом получают доступ к ключам валидации VIEWSTATE веб-приложения на сервере, то они могут, используя уязвимость десериализации, удаленно выполнять код на этом сервере.</p>
         <p>Февраль 2020 – Microsoft выпускает патч для CVE-2020-0688 – уязвимости, смысл которой в том, что у всех версий Exchange после установки были одинаковые ключи валидации для backend ECP. Вскоре стали доступны публичные POC. В данном случае для успешной эксплуатации требовались валидные учетные данные, которые позволяли получить доступ до backend панели ECP. Эту уязвимость можно рассматривать как частный случай уязвимости десериализации VIEWSTATE, так как CVE-2020-0688 работала только на один путь – backend ECP. Тем не менее, эта важная уязвимость, которая могла напомнить злоумышленникам о десериализации и её возможностях, так как именно после этой CVE стали появляться публичные отчеты об эксплуатации уязвимости десериализации VIEWSTATE в общем формате (на произвольных путях) в дикой среде.</p><br><br>
         <p style="font-size: 18pt;">Атаки с помощью десериализации в дикой природе</p>
         <p>Июнь 2020 – Австралийский центр кибербезопасности (ACSC) Управления радиотехнической обороны выпустил <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.cyber.gov.au/about-us/advisories/advisory-2020-008-copy-paste-compromises-tactics-techniques-and-procedures-used-target-multiple-australian-networks">рекомендации 2020-008 об атаке Copy-paste compromises</a>, в которых были описаны тактики и техники неизвестной прогосударственной группировки, которая эксплуатировала уязвимости десериализации:</p>
         <ul>
          <li>Telerik UI CVE-2019-18935 – уязвимость десериализации в .NET JavaScriptSerializer. Использовали для запуска реверс шелла;</li>
          <li>CVE-2020-0688 – злоумышленники использовали уязвимость для размещения различных веб-шеллов (кастомных и open source), в том числе фреймворка <code>js_eval</code> собственной разработки, который работает только в памяти и является многомодульным;</li>
          <li>вредоносные dotm-шаблоны Word, которые также загружали Powershell Empire с помощью десериализации нагрузок “вручную” – через вызов десериализации уязвимым провайдером – BinaryFormatter.</li>
         </ul>
         <p>В мае 2020 года были выпущены рекомендации:</p>
         <ul>
          <li><a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.cyber.gov.au/about-us/advisories/advisory-2020-004-remote-code-execution-vulnerability-being-actively-exploited-vulnerable-versions-telerik-ui-sophisticated-actors">2020-004</a> по обнаружению эксплуатации уязвимости в CVE-2019-18935 в ПО Telerik, а также по реагированию на такую атаку.</li>
          <li><a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.cyber.gov.au/about-us/advisories/2020-006-detecting-and-mitigating-exploitation-vulnerability-microsoft-internet-information-services">2020-006</a> по обнаружению эксплуатации десериализации VIEWSTATE и уязвимости в ПО Telerik, а также по реагированию на подобные атаки. В этих рекомендациях впервые упоминалось, что для обнаружения атак десериализации можно использовать событие Application Event ID 1316 (подробнее о нём – далее в тексте).</li>
         </ul>
         <p>Июль 2021 – эксперты SYGNIA выпустили отчет по атаке группировки Praying Mantis, которая использовала 4 разные уязвимости десериализации:</p>
         <ul>
          <li>Checkbox Survey RCE Exploit (CVE-2021-27852) – десериализация кастомной реализации VIEWSTATE для reflective загрузки вредоноса NodeIISWeb – очень похож на фреймворк js_eval из рекомендаций Австралийского центра кибербезопасности;</li>
          <li>Десериализация VIEWSTATE с помощью украденных ключей IIS – злоумышленники несколько раз возвращались в инфраструктуру этим методом, им же они пользовались для горизонтального перемещения;</li>
          <li>Десериализация объекта из ASP.NET MSSQL базы – злоумышленники записывали в MSSQL базу вредоносный объект в сериализованном виде, который далее запрашивал и десериализовывал IIS-сервер когда получал запрос со специально сформированным cookies. В этом случае также загружали вредонос NodeIISWeb;</li>
          <li>Telerik UI CVE-2019-18935 – уязвимость десериализации в .NET JavaScriptSerializer. Использовали для загрузки веб-шеллов.</li>
         </ul>
         <p>Высока вероятность, что эксперты SYGNIA и ACSC столкнулись с одной и той же группировкой, так как было много пересечений по тактикам, техникам и процедурам.</p>
         <p>Март 2022 – эксперты Mandiant поделились большим набором кейсов атак группировки APT41, в большинстве из которых эксплуатировались уязвимости десериализации VIEWSTATE:</p>
         <ul>
          <li>Июнь 2020 – APT41, через уязвимость directory traversal, получили доступ к web.config файлу с ключами проприетарного веб-приложения на ASP.NET. Ключи использовали для десериализации вредоносных VIEWSTATE-нагрузок и загрузки сборок в память. Сборки записывали веб-шеллы по заранее закодированным путям на файловой системе. Также использовался гаджет <code>DisableActivitySurrogateSelectorTypeCheck</code> утилиты ysoserial.net.</li>
          <li>Май 2021 – как и в июне 2020 злоумышленники эксплуатировали десериализацию VIEWSTATE в проприетарном веб-приложении. Откуда были получены ключи неизвестно (вероятно, также через directory traversal уязвимость).</li>
          <li>Июнь-декабрь 2021 – использование уязвимости нулевого дня в ASP.NET веб-приложении USAHERDS (диагностическая система оповещения о чрезвычайных ситуациях в области охраны здоровья животных) для атаки на правительства нескольких штатов в США. Уязвимость аналогична CVE-2020-0688 (использование статических ключей). Предполагается, что первоначальный доступ к ключам был получен также через directory traversal уязвимость.</li>
         </ul>
         <p>Март 2023 – Агентство по кибербезопасности и защите инфраструктуры (CISA), ФБР и MS-ISAC выпустили совместные рекомендации по противодействию атакам с помощью уязвимостей десериализации. Рекомендации создали на основе анализа атак нескольких группировок, произошедших в ноябре 2022 на множество правительственных IIS-серверов. В атаках использовалась уязвимость десериализации в ПО Progress Telerik.</p>
         <p>Ноябрь 2023 – эксперты Solar 4RAYS реагируют на инцидент в инфраструктуре телеком-компании, где группировка Obstinate Mogwai эксплуатирует уязвимости десериализации VIEWSTATE для повторного возвращения.</p>
         <p></p>
        </details><br><br>
        <p style="font-size: 18pt;line-height: 2.25rem;" id="Obstinate-Mogwai">Эксплуатация десериализации VIEWSTATE в исполнении Obstinate Mogwai</p>
        <p>В конце 2023 года в процессе реагирования на инцидент мы стали замечать на Exchange-серверах выполнение powershell-команд от процесса w3wp – worker-процесса Exchange. Причем команды выполнялись от самого процесса w3wp без создания дочерних процессов powershell.exe.</p>
        <p>Примеры выполняемых команд:</p>
        <pre>    <code class="powershell">
net user &lt;REDACTED&gt;
gci c:\programdata\
reg query HKEY_LOCAL_MACHINE\system\currentcontrolset\control\securityproviders\wdigest /v uselogoncredential
Get-ItemProperty -Path HKLM:\system\currentcontrolset\control\securityproviders\wdigest).uselogoncredential
Get-ChildItem -Path "c:\programdata"
Get-ChildItem -Path "c:\users"
Remove-Item -Path "c:\programdata\1.log"
Remove-Item -Path "c:\windows\system\l.txt"
Test-Connection -Count 1 -ComputerName &lt;REDACTED&gt;
Resolve-DnsName -Name &lt;REDACTED&gt;
Remove-Item -Path "C:\Program Files\Microsoft\Exchange Server\V15\FrontEnd\HttpProxy\owa\auth\Current\themes\resources\frown.aspx"
Remove-Item -Path "c:\windows\temp\user.log"            
    </code>
</pre>
        <p>С помощью powershell-команд на Exchange-сервер копировались и другие инструменты атакующих (например, powershell-скрипт <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://github.com/Kevin-Robertson/Invoke-TheHash/tree/master?tab%3Dreadme-ov-file%23invoke-smbclient">Invoke-SMBClient из фреймворка Inveigh</a>), а также выполнялась эксфильтрация данных и содержимого почтовых ящиков.</p>
        <p>К тому времени используемые в прошлых атаках вредоносные aspx-файлы (вебшеллы) из доступных извне каталогов Exchange мы уже удалили, но атакующие продолжали выполнять команды. Мы стали искать, каким образом и с помощью чего они это делают.</p>
        <p>В IIS-логах в окрестности времени выполнения команд были обнаружены следующие POST-запросы с характерным UserAgent:</p>
        <p><code style="word-wrap:break-word;"> POST /owa/auth/RedirSuiteServiceProxy.aspx 443 77.223.109[.]164 python-requests/2.30.0 <br>
           POST /owa/auth/RedirSuiteServiceProxy.aspx 443 45.12.67[.]18 python-requests/2.30.0 <br>
           POST /owa/auth/RedirSuiteServiceProxy.aspx 443 77.223.109[.]163 python-requests/2.30.0 </code></p>
        <p>Причем все они выполнялись к легитимному aspx-файлу <code style="word-wrap:break-word;">(C:\Program Files\Microsoft\Exchange Server\V15\FrontEnd\HttpProxy\owa\auth\RedirSuiteServiceProxy.aspx)</code>.</p>
        <p>В ходе более тщательного поиска индикаторов по всему образу одного из Exchange-серверов в журнале Windows мы обнаружили событие с ID 1316:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/8c7/axk5det0ugrjjmmtayjd5ow6g8ukzxs9/image004.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Пример события Application Event 1316 с подозрительным VIEWSTATE" src="/upload/medialibrary/8c7/axk5det0ugrjjmmtayjd5ow6g8ukzxs9/image004.png" title="Пример события Application Event 1316 с подозрительным VIEWSTATE"> </a>
         <figcaption>
          Пример события Application Event 1316 с подозрительным VIEWSTATE
         </figcaption>
        </figure>
        <p>В параметре <code>PersistedState</code> в событии 1316 отображается base64-закодированный сериализованный VIEWSTATE, который при десериализации (во время или после) как раз и вызвал Exception, из-за которого это событие и появилось в журнале событий. После декодирования из basе64 VIEWSTATE выглядел следующим образом:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/e8a/vi91f2f9pe578gvihtlcnvyvinjgicuh/as_disable_check.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Декодированный VIEWSTATE с гаджетом ActivitySurrogateDisableTypeCheck" src="/upload/medialibrary/e8a/vi91f2f9pe578gvihtlcnvyvinjgicuh/as_disable_check.png" title="Декодированный VIEWSTATE с гаджетом ActivitySurrogateDisableTypeCheck"> </a>
         <figcaption>
          Декодированный VIEWSTATE с гаджетом ActivitySurrogateDisableTypeCheck
         </figcaption>
        </figure>
        <p>Первые два байта представляют собой заголовок сериализованного VIEWSTATE – FF 01, вот его общая структура:</p>
        <pre id="SERIALIZED_VIEWSTATE">    <code class="c">  
struct SERIALIZED_VIEWSTATE {
    byte Marker_Format = 0xFF; // https://referencesource.microsoft.com/#System.Web/UI/ObjectStateFormatter.cs,116 
    byte Marker_Version_1 = 0x01; // https://referencesource.microsoft.com/#System.Web/UI/ObjectStateFormatter.cs,117
    byte token = 0x32; // https://referencesource.microsoft.com/#System.Web/UI/ObjectStateFormatter.cs,90
    variable_size length_7BitEncodedInt; // size may vary: [1-4] bytes, https://referencesource.microsoft.com/#mscorlib/system/io/binaryreader.cs,582
    SERIALIZED_DATA d; // has size of length_7BitEncodedInt
    _HashSize MAC_bytes; //_HashSize depends on validation algorithm (16, 20 or 32 bytes), https://referencesource.microsoft.com/#System.Web/Configuration/MachineKeySection.cs,88
}         
struct SERIALIZED_DATA {
    struct SerializationHeaderRecord { // https://referencesource.microsoft.com/#mscorlib/system/runtime/serialization/formatters/binary/binarycommonclasses.cs,455 
        byte binaryHeaderEnum = 0x0 (SerializedStreamHeader); // https://referencesource.microsoft.com/#mscorlib/system/runtime/serialization/formatters/binary/binaryenums.cs,27
        dword topId = 0x1;
        dword headerId = 0xFFFFFFFF;
        dword majorVersion = 0x1; // https://referencesource.microsoft.com/#mscorlib/system/runtime/serialization/formatters/binary/binarycommonclasses.cs,417
        dword minorVersion = 0x0; //https://referencesource.microsoft.com/#mscorlib/system/runtime/serialization/formatters/binary/binarycommonclasses.cs,418
    }
    data; // serialized data itself
}            
    </code>
</pre>
        <p>Приведенных выше структур в исходном коде нет — это наша интерпретация для лучшего понимания. По ссылкам можно найти исходный код и ознакомиться с подробностями реализации.</p>
        <p>В сериализованных данных наше внимание привлек гаджет (сериализованный код для выполнения заданных команд) <code>ActivitySurrogateDisableTypeCheck</code>, а именно строчка “<a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://github.com/pwntester/ysoserial.net/blob/1dba9c4416ba6e79b6b262b758fa75e2ee9008e9/ysoserial/Generators/ActivitySurrogateDisableTypeCheck.cs%23L48">xaml_payload</a>”, по которой мы вышли на утилиту ysoserial.net. Этот инструмент с открытым исходным кодом позволяет генерировать нагрузки для эксплуатации различных уязвимостей десериализации. Его предназначение – отключение проверок, введенных в .NET 4.8+ для другого гаджета <code>ActivitySurrogateSelector</code>. Он, в свою очередь, позволяет загружать произвольные .NET сборки (далее – сборки) в память. Судя по структуре наблюдаемых нами VIEWSTATE-нагрузок, злоумышленники генерировали их с помощью ysoserial.net, и все они были гаджетами <code>ActivitySurrogateDisableTypeCheck</code>.</p>
        <p>Больше никаких VIEWSTATE-нагрузок мы не нашли. Следов применения гаджета <code>ActivitySurrogateSelector</code> также не обнаружили. Однако спустя некоторое время мы все-таки поймали настоящий payload – благодаря ошибке самих злоумышленников. А как именно они ошиблись, расскажем далее.</p>
        <p style="font-size: 14pt;">Злодеи тоже ошибаются</p>
        <p>У гаджета <code>ActivitySurrogateDisableTypeCheck</code> есть важная особенность. Он отключает проверки .NET 4.8+ на время жизни соответствующего w3wp-процесса. Как известно, w3wp-процессы могут перезапускаться:</p>
        <ul>
         <li>по расписанию;</li>
         <li>при зависании (например, если процесс не ответит на heart beat запрос IIS);</li>
         <li>при ручном перезапуске;</li>
         <li>по другим причинам.</li>
        </ul>
        <p>Но если бы они не перезапускались, то можно было бы использовать этот гаджет один раз и больше не применять до тех пор, пока “жив” атакуемый w3wp-процесс.</p>
        <p>Расписание перезапуска отображается в расширенных настройках пулов приложений в IIS Manager в разделе Recycling:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/85f/pi8yew0y2p5pl01xwi1ermw1q1wisqhu/image006.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Настройки перезапуска worker-процессов по умолчанию" src="/upload/medialibrary/85f/pi8yew0y2p5pl01xwi1ermw1q1wisqhu/image006.png" title="Настройки перезапуска worker-процессов по умолчанию"> </a>
         <figcaption>
          Настройки перезапуска worker-процессов по умолчанию
         </figcaption>
        </figure>
        <p>У заказчика время перезапуска worker-процесса, который отвечал за приложение OWA, составляло 14 дней, а не установленные по умолчанию 29 часов. В результате мы наблюдали следующий timeline событий:</p>
        <p style="border: 1px solid #834ED8;padding:5px;"><code>11:00</code> Event ID 1316 Viewstate was invalid – отправка гаджета <code>ActivitySurrogateDisableTypeCheck</code> <br><code>XX:YY</code> перезапуск w3wp процесса и потеря эффекта гаджета <code>ActivitySurrogateDisableTypeCheck</code> <br><code>16:00</code> Event ID 1316 Viewstate was invalid – неудачная попытка выполнения powershell-команды из-за перезапущенного w3wp процесса и отсутствующего эффекта гаджета <code>ActivitySurrogateDisableTypeCheck</code>.</p>
        <p>Именно в этом событии в PersistedState находилась VIEWSTATE-нагрузка, которая позволяла атакующим выполнять powershell-команды. То есть, судя по всему, злоумышленники допустили ошибку и забыли “активировать” гаджет <code>ActivitySurrogateDisableTypeCheck</code>, так как, вероятно, думали, что сохранился эффект от прошлого гаджета, использованного в 11:00.</p>
        <p>После декодирования из basе64 VIEWSTATE выглядел следующим образом:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/354/rpxfdj6pj593ijv0h6cj2u3y0eghltd6/as_payload.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Декодированный VIEWSTATE с гаджетом ActivitySurrogateSelector и нагрузкой" src="/upload/medialibrary/354/rpxfdj6pj593ijv0h6cj2u3y0eghltd6/as_payload.png" title="Декодированный VIEWSTATE с гаджетом ActivitySurrogateSelector и нагрузкой"> </a>
         <figcaption>
          Декодированный VIEWSTATE с гаджетом ActivitySurrogateSelector и нагрузкой
         </figcaption>
        </figure>
        <p>Это был гаджет <code>ActivitySurrogateSelector</code>. Он загружал в память сборку в виде dll-файла с помощью <code>Assembly.Load(byte[])</code> и запускал её вызовом конструктора сборки. В результате анализа выяснилось, что dll позволяла выполнять powershell-команды (подробности далее).</p>
        <p>Так мы, наконец, поняли, каким образом и с помощью какой уязвимости злоумышленники вновь и вновь восстанавливали присутствие в сети заказчика. Мы распознали десериализацию VIEWSTATE, для успешной эксплуатации которой необходимо знать <b>как минимум ключ валидации VIEWSTATE</b>. В тот момент ключи валидации пула OWA у заказчика были установлены в режиме автоматической генерации.</p>
        <p>Для замены ключей мы пробовали перезапускать пулы и даже перезагружать почтовые серверы, но это не принесло желаемого результата. Во многих публичных статьях, которые связаны с десериализацией VIEWSTATE, приводят расплывчатые рекомендации на этот случай:</p>
        <p>1) <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://soroush.me/blog/2019/05/danger-of-stealing-auto-generated-net-machine-keys/">Danger of stealing auto generated net machine keys (Soroush Dalili, 2019)</a></p>
        <p style="border: 1px solid #834ED8;padding:5px;">“Recommendation: <br>
          Create a new Application Pool for your ASP.NET application when you need to reset all the credentials for any reasons. This will ensure that a new ASP.NET key will be generated for the application.”</p>
        <p>То есть для “сброса” ключей рекомендуется создать пул заново. В случае с Exchange-сервером сделать это не так уж просто. Сложнее, наверное, только полная переустановка Exchange. Впрочем, как оказалось, даже переустановка Exchange не поможет изменить auto generated-ключи, так как мастер-ключ не удаляется из реестра, поэтому при повторной установке будут использованы те же самые ключи.</p>
        <p>2) <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.sygnia.co/threat-reports-and-advisories/praying-mantis-an-advanced-memory-resident-attack/">Praying Mantis An Advanced Memory Resident Attack (Sygnia, 2021)</a></p>
        <p style="border: 1px solid #834ED8;padding:5px;">“In addition to these security measures, encryption and validation keys should be handled with care as sensitive credentials. If possible, use auto-generated keys, otherwise routinely rotate the machine keys on your IIS servers to make sure you would not be susceptible to attacks where keys were stolen or leaked.”</p>
        <p>Рекомендуется по возможности использовать автоматически сгенерированные ключи, но нет никаких рекомендаций, что делать в случае их компрометации.</p>
        <p>3) <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.mandiant.com/resources/blog/apt41-us-state-governments">Does This Look Infected? A Summary of APT41 Targeting U.S. State Governments (Mandiant, 2022)</a></p>
        <p style="border: 1px solid #834ED8;padding:5px;">“Generating unique machineKey values is critical to the security of an ASP.NET web application because the values are used to secure the integrity of the ViewState.”</p>
        <p>Конкретных рекомендаций нет. В статье обращают внимание на то, чтобы значения ключей были уникальными. В случае автоматически сгенерированных ключей они будут уникальными, но снова нет информации, что делать при компрометации этих уникальных ключей.</p>
        <p>Конкретные меры были описаны только в рекомендациях <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.cyber.gov.au/about-us/advisories/2020-006-detecting-and-mitigating-exploitation-vulnerability-microsoft-internet-information-services">2020-006</a> от ACSC в июне 2020, но там не раскрывалось, как менять автоматически сгенерированные ключи, которые по умолчанию используются в Exchange-серверах.</p><br><br>
        <p id="attribution" style="font-size: 18pt;">Несколько слов об атрибуции</p>
        <p>Отметим несколько фактов касательно атрибуции расследованных нами инцидентов. При реагировании на атаку группировки Obstinate Mogwai мы наблюдали следующую технику загрузки в память .NET бэкдора:</p>
        <p style="border: 1px solid #834ED8;padding:5px;"><code> powershell exec bypass -f c:\programdata\microsoft\WDF\ctfmon.ps1</code></p>
        <p>Загружаемый в память бэкдор имел некоторое сходство с C++ версией бэкдора KingOfHearts группировки IAmTheKing, про которую <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://securelist.com/iamtheking-and-the-slothfulmedia-malware-family/99000/">писали</a> в 2020 г.</p>
        <p>В результате выполнения Powershell команды расшифровывался файл <code>C:\ProgramData\Microsoft\WDF\WDF.log</code>, и в память powershell.exe загружалась .NET сборка, представляющая собой бэкдор. Файл <code>ctfmon.ps1</code> при этом весил 13MB, так как был обфусцирован следующим образом:</p>
        <p style="display: inline-block;width:48%;"><a style="display: inline-block;" class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/97f/hxa76uzy28mwab08jb33twks8orzf2xn/image008.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="image008.png" src="/upload/medialibrary/97f/hxa76uzy28mwab08jb33twks8orzf2xn/image008.png"> </a></p>
        <p style="display: inline-block;width:48%;"><a style="display: inline-block;" class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/9f0/8mt64bj9je2sgpjlpgeir0p5rxoeg3eu/image009.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="image009.png" src="/upload/medialibrary/9f0/8mt64bj9je2sgpjlpgeir0p5rxoeg3eu/image009.png"> </a></p>
        <p>Именно такую уникальную обфускацию мы уже наблюдали в инцидентах 2020-2021 годов, про которые рассказывали в 2021 году в докладе <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.youtube.com/watch?v%3DCcsI3eeG5l0">“Operation LongChain. История одного расследования”</a>.</p>
        <p><a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.mandiant.com/resources/blog/apt41-us-state-governments">По данным </a><a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.mandiant.com/resources/blog/apt41-us-state-governments">Mandiant</a>, APT41 в июне 2020 года использовала при эксплуатации десериализации VIEWSTATE гаджет <code>ActivitySurrogateDisableTypeCheck</code>, который мы также наблюдали при реагировании в нашем инциденте. Именно этот гаджет подвел злоумышленников и помог раскрыть одну из сборок фреймворка.</p>
        <p>В исследованном инциденте Obstinate Mogwai для проведения атак десериализации использовали свой собственный фреймворк, который отличался от js_eval, описанного в <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.cyber.gov.au/sites/default/files/2023-02/ACSC-Advisory-2020-008-Copy-Paste-Compromises.pdf">кейсе </a><a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.cyber.gov.au/sites/default/files/2023-02/ACSC-Advisory-2020-008-Copy-Paste-Compromises.pdf">ACSC</a><a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.cyber.gov.au/sites/default/files/2023-02/ACSC-Advisory-2020-008-Copy-Paste-Compromises.pdf"> в 2020 году</a>.</p>
        <p>Другими словами, надёжная атрибуция атак, которые мы расследовали, к какой-либо из известных APT-группировок – дело непростое, так как некоторые азиатские группы регулярно заимствуют друг у друга вредоносный инструментарий. В будущем мы посвятим этому вопросу отдельную публикацию.</p><br><br>
        <p style="font-size: 18pt;" id="exploitation-framework">VIEWSTATE exploitation framework</p>
        <p>VIEWSTATE exploitation framework – наше имя для набора скриптов/библиотек, которыми оперировали злоумышленники в описываемой атаке. На основании проделанного исследования мы пришли к выводу, что оператор при проведении подобных атак работает на более высоком уровне – у него имеется нечто вроде оболочки, куда он вводит команды и получает результат в удобном формате.</p>
        <p>На это указывает одна из особенностей работы фреймворка, а именно использование под каждое конкретное действие отдельной скомпилированной на ходу сборки. Нам удалось достать из памяти атакованного worker-процесса следующие файлы:</p>
        <table>
         <tbody>
          <tr>
           <th>Assembly name</th>
           <th>Compilation timestamp</th>
           <th>Main class name</th>
           <th>POST query param name to fetch data from</th>
           <th>Number of extracted assemblies</th>
           <th>Action</th>
          </tr>
          <tr>
           <td>Microsoft.Exchange.Management.Powershell.Support.dll</td>
           <td rowspan="2">2023-01-04 09:11:36</td>
           <td>Ps</td>
           <td>cadata</td>
           <td>8</td>
           <td>Выполнить powershell команду, зашифрованную в параметре cadata POST-запроса и отправить вывод в ответе</td>
          </tr>
          <tr>
           <td>Microsoft.Exchange.MessageSecurity.dll</td>
           <td>FileDown</td>
           <td>cadataIV</td>
           <td>2</td>
           <td>Выполнить эксфильтрацию файла по пути, указанном в параметре cadataIV</td>
          </tr>
          <tr>
           <td>Microsoft.Exchange.UM.UMCommon.dll</td>
           <td>2023-01-04 09:11:35</td>
           <td>FileView</td>
           <td>cadataSig</td>
           <td>1</td>
           <td>Отобразить метаданные файла или каталога, указанных в параметре cadataSig</td>
          </tr>
         </tbody>
        </table>
        <p style="text-align: center;"><b>Сборки, извлеченные из памяти атакованного worker-процесса w3wp.exe</b></p>
        <p>Даты компиляции разных сборок практически совпадают. Конечно, в нашем распоряжении довольно небольшая выборка, но, скорее всего, она свидетельствует о том, что все доступные сборки компилировались каким-либо скриптом для дальнейшего использования во фреймворке. В утилите ysoserial.net “из коробки” гаджет <code>ActivitySurrogateSelectorFromFile</code> требует на вход cs-файл и компилирует его при каждом запуске. Но ничто не мешает изменить это поведение: заранее скомпилировать все используемые сборки и генерировать разные VIEWSTATE нагрузки в зависимости от ключей валидации. Также отметим, что у всех сборок отсутствует TypeLib ID. Либо он был удалён специально, либо сборки компилировались в режиме командной строки (как, например, в ysoserial.net).</p>
        <p>Каждая сборка получала данные в одном параметре POST-запроса в XOR-зашифрованном и в base64-закодированном виде. Отдельно отметим, что названия параметров не случайны. Именно такие параметры используются в cookies в механизме FBA (Form-based Authentication – специальный модуль IIS, который отвечает за конвертацию пары имени и пароля пользователя в cookies и обратно):</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/570/7g3hndu2j0igqtz0wp1vnk5q3dmddhqw/image010.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Параметры cookies в механизме FBA" src="/upload/medialibrary/570/7g3hndu2j0igqtz0wp1vnk5q3dmddhqw/image010.png" title="Параметры cookies в механизме FBA"> </a>
         <figcaption>
          Параметры cookies в механизме FBA (<a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-2-ProxyOracle/">источник</a>)
         </figcaption>
        </figure>
        <p>Этих cookies в памяти атакованного worker-процесса Exchange (пул OWA) очень много, что значительно усложняет восстановление POST-запросов злоумышленников. Нам не удалось получить ни один запрос, так как, скорее всего, garbage collector их удалил из-за большой активности самого worker-процесса.</p>
        <p>После выполнения основного действия сборки (Ps, FileView и FileDown) отправляли зашифрованный с помощью XOR ответ злоумышленникам. Ключ шифрования во всех сборках использовался один и тот же:</p>
        <p style="border: 1px solid #834ED8;padding:5px;"><code> 45 AF 33 27 56 DF CA BB 12 67 9A 52 63 B8 2B C7 62 1F 10 8D 15</code></p>
        <p>В таблице выше мы привели столбец <b>Number of extracted assemblies</b>, чтобы подчеркнуть вышеупомянутую особенность работы VIEWSTATE Exploitation Framework – одно действие – одна сборка.</p>
        <p>Это означает, например, что для выполнения одной команды powershell будет отправлен отдельный POST-запрос с Ps-сборкой. Если злоумышленник снова захочет выполнить powershell-команду, то будет отправлен тот же POST-запрос, содержащий VIEWSTATE с Ps-сборкой, но с другим параметром cadata. В памяти атакованного worker-процесса это будет выглядеть так:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/30b/fm1nbfmkdmzvacwela2w6cg19npdjh2a/image011.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Вредоносные .NET Ps-сборки в worker-процессе w3wp (пул OWA) в Process Hacker" src="/upload/medialibrary/30b/fm1nbfmkdmzvacwela2w6cg19npdjh2a/image011.png" title="Вредоносные .NET Ps-сборки в worker-процессе w3wp (пул OWA) в Process Hacker"> </a>
         <figcaption>
          Вредоносные .NET Ps-сборки в worker-процессе w3wp (пул OWA) в Process Hacker
         </figcaption>
        </figure>
        <p>Видно, что в адресное пространство атакованного w3wp-процесса загружены одни и те же сборки <code>Microsoft.Exchange.Management.Powershell.Support.dll</code>, которые выполняют powershell-команду.</p>
        <p>Рассмотрим сборки, используемые Obstinate Mogwai, которые нам удалось извлечь.</p>
        <p style="font-size: 14pt;">Ps-сборка</p>
        <p>Сборка предназначена для выполнения зашифрованной с помощью XOR Powershell-команды, которая передается в POST-запросе в параметре cadata. Отметим, что дочерний процесс powershell.exe при этом не создается из-за использования класса PowerShell из пространства имён System.Management.Automation.</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/40c/1ga9ntc0ibyzu91nv6wosqvxzdyf2dem/image012.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Основной функционал Ps-сборки" src="/upload/medialibrary/40c/1ga9ntc0ibyzu91nv6wosqvxzdyf2dem/image012.png" title="Основной функционал Ps-сборки"> </a>
         <figcaption>
          Основной функционал Ps-сборки
         </figcaption>
        </figure>
        <p style="font-size: 14pt;">FileDown-сборка</p>
        <p>Сборка предназначена для эксфильтрации файла, путь до которого указывается в XOR-зашифрованном и base64-закодированном виде в параметре cadataIV.</p>
        <p style="font-size: 14pt;">FileView-сборка</p>
        <p>Сборка предназначена для получения метаданных указанного файла или каталога, путь до которого указывается в XOR-зашифрованном и base64-закодированном виде в параметре cadataSig.</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/03e/0pzyp51lm00xuxwby1ww3bk716gmr2dl/image013.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Основной функционал FileView-сборки&quot;" src="/upload/medialibrary/03e/0pzyp51lm00xuxwby1ww3bk716gmr2dl/image013.png" title="Основной функционал FileView-сборки&quot;"> </a>
         <figcaption>
          Основной функционал FileView-сборки
         </figcaption>
        </figure>
        <p>Примечательно, что выходные данные сборки формируются в бинарном виде. В качестве наглядного примера этой логики можно рассмотреть следующий каталог и то, как будет выглядеть собранная о нем информация до XOR-шифрования:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/9f6/kq5w56a6o1p4qk79g7mtj2b2fa2d214k/image014.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="image014.png" src="/upload/medialibrary/9f6/kq5w56a6o1p4qk79g7mtj2b2fa2d214k/image014.png"> </a>
        </figure>
        <p>Значение в attribs складывается из стандартных <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://learn.microsoft.com/en-us/windows/win32/fileio/file-attribute-constants">констант атрибутов файла или каталога</a> по именам, но злоумышленники изменили их стандартные значения. По-видимому, это было сделано для того, чтобы атрибуты умещались в один байт.</p>
        <table>
         <tbody>
          <tr>
           <th><code>Константа</code></th>
           <th><code>Значение в сборке</code></th>
           <th><code>Значение Windows</code></th>
          </tr>
          <tr>
           <td><code>FILE_ATTRIBUTE_REPARSE_POINT</code></td>
           <td><code>0x01</code></td>
           <td><code>0x400</code></td>
          </tr>
          <tr>
           <td><code>FILE_ATTRIBUTE_SYSTEM</code></td>
           <td><code>0x02</code></td>
           <td><code>0x004</code></td>
          </tr>
          <tr>
           <td><code>FILE_ATTRIBUTE_HIDDEN</code></td>
           <td><code>0x04</code></td>
           <td><code>0x002</code></td>
          </tr>
          <tr>
           <td><code>FILE_ATTRIBUTE_READONLY</code></td>
           <td><code>0x08</code></td>
           <td><code>0x001</code></td>
          </tr>
          <tr>
           <td><code>FILE_ATTRIBUTE_ARCHIVE</code></td>
           <td><code>0x10</code></td>
           <td><code>0x020</code></td>
          </tr>
          <tr>
           <td><code>FILE_ATTRIBUTE_DIRECTORY</code></td>
           <td><code>0x20</code></td>
           <td><code>0x010</code></td>
          </tr>
         </tbody>
        </table>
        <p>Наличие такой бинарной структуры для метаданных файлов и каталогов еще раз указывает на то, что злоумышленники, очевидно, обладают фреймворком, который в том числе преобразует эти данные в человекочитаемый вид.</p>
        <p>Важно отметить, что в отличие от того же js_eval, в рамках существующей архитектуры фреймворка мы могли наблюдать только те сборки, которые были непосредственно использованы в атаке. Учитывая опыт исследования js_eval, где механизм выполнения модулей разворачивался на стороне жертвы, можно предположить, что существуют другие сборки, используемые в рамках нового фреймворка, такие как FileUpload (по аналогии с FileDown), загрузка shellcode и тд. Это делает VIEWSTATE Exploitation Framework серьезным инструментом с широким модульным функционалом, который можно легко расширять.</p><br><br>
        <p style="font-size: 18pt;" id="VIEWSTATE-detection">Обнаружение десериализации VIEWSTATE</p>
        <p>В этом разделе мы делимся практическими советами по детектированию атак десериализации VIEWSTATE. В зависимости от конкретного случая, для обнаружения могут быть использованы разные техники, описанные ниже.</p>
        <p style="font-size: 14pt;">Обнаружение Memory-only сборок в памяти</p>
        <p>Про обнаружение описанных выше .NET-сборок в памяти была написана не одна статья. Регион памяти процесса w3wp, в который была загружена Memory-only сборка с помощью метода <code>Assembly.Load(byte[])</code>, имеет отличительные <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://www.elastic.co/security-labs/hunting-memory-net-attacks">параметры</a> по которым его можно задетектить:</p>
        <ul>
         <li>Тип <code>MEM_MAPPED</code>, хотя отсутствует объект отображенного в память файла (пустой столбец Use);</li>
         <li>Параметр защиты области памяти <code>PAGE_READWRITE</code>, но без <code>EXECUTE</code>.</li>
        </ul>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/05d/n0byt78b733qmdc7iioco1nbbgjbnsl2/image016.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Особенности поиска .NET сборок в памяти worker-процесса w3wp" src="/upload/medialibrary/05d/n0byt78b733qmdc7iioco1nbbgjbnsl2/image016.png" title="Особенности поиска .NET сборок в памяти worker-процесса w3wp"> </a>
         <figcaption>
          Особенности поиска .NET сборок в памяти worker-процесса w3wp
         </figcaption>
        </figure>
        <p>В упомянутой статье от Elastic Security Labs в том числе предлагается <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://gist.githubusercontent.com/dezhub/2875fa6dc78083cedeab10abc551cb58/raw/24838aa3e33abda0719614d7675447a00a9d57af/Get-ClrReflection.ps1">powershell-скрипт</a> для поиска и дампа подобных сборок.</p>
        <p style="font-size: 14pt;">Обнаружение по событию Application Event ID 1316</p>
        <p>Другой способ детектирования основывается на анализе журнала Windows Application, а именно, на двух разных типах одного события ID 1316:</p>
        <ul>
         <li>Viewstate was invalid (Event detail code 50204).</li>
         <li>The viewstate supplied failed integrity check (Event detail code 50203).</li>
        </ul>
        <p>Данные события возникают, если произошло какое-либо исключение при десериализации VIEWSTATE.</p>
        <p>Для понимания механизма возникновения этих исключений, нужно проследить цепочку вызовов в исходном коде, ведущей к десериализации VIEWSTATE. Она начинается в методе <code><a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://referencesource.microsoft.com/%23System.Web/UI/HiddenFieldPageStatePersister.cs,20">HiddenFieldPageStatePersister::Load</a></code>, далее вызывается <code>Util::DeserializeWithAssert</code>, после чего выполнение переходит в метод <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://referencesource.microsoft.com/%23System.Web/UI/ObjectStateFormatter.cs,365"><code>ObjectStateFormatter::Deserialize</code></a>, где как раз и происходит MAC-валидация (The viewstate supplied failed integrity check), а после – &nbsp;десериализация VIEWSTATE. Эта последовательность лучше всего представлена на стеке вызовов:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/888/qcu30ygyov9wxqqxhaxiq8i3219y3rl7/viewstate_call_stack.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Стек вызовов во время десериализации VIEWSTATE" src="/upload/medialibrary/888/qcu30ygyov9wxqqxhaxiq8i3219y3rl7/viewstate_call_stack.png" title="Стек вызовов во время десериализации VIEWSTATE"> </a>
         <figcaption>
          Стек вызовов во время десериализации VIEWSTATE
         </figcaption>
        </figure>
        <p>Примечательно, что в методе <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://referencesource.microsoft.com/%23System.Web/UI/Page.cs,2088"><code>LoadPageStateFromPersistenceMedium</code></a> присутствует вызов метода <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://referencesource.microsoft.com/%23System.Web/UI/Page.cs,2122"><code>ShouldSuppressMacValidationException</code></a>, который по умолчанию скрывает (не записывает в журнал событий Windows) событие ID 1316 The viewstate supplied failed integrity check (Event detail code 50203). При параметрах по умолчанию оно может появиться в журнале <b>только в том случае, если в POST-запросе имеется корректный параметр <code>__VIEWSTATEGENERATOR</code></b>. Возможно, это было сделано разработчиками Microsoft в том числе для того, чтобы злоумышленник не получал дополнительной информации о возникшей ошибке валидации VIEWSTATE.</p>
        <p>Теперь, когда мы знаем, где выбрасываются эти исключения, подробнее рассмотрим указанные в начале этого раздела два типа события ID 1316.</p>
        <p>Событие <b>The viewstate supplied failed integrity check</b> (Event detail code 50203) связано с ошибкой валидации MAC, которая выполняется <b>до </b>десериализации, поэтому если мы видим в журнале это событие, то:</p>
        <ul>
         <li>VIEWSTATE <b>не был десериализован</b>, то есть пока сервер “в безопасности”;</li>
         <li>мы видим это событие в журнале, так как в POST-запросе использовался корректный параметр <code>__VIEWSTATEGENERATOR</code>.</li>
        </ul>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/4d8/hxs586a18d883e67bu2fpdxpdo3msnm5/image018.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="image018.png" src="/upload/medialibrary/4d8/hxs586a18d883e67bu2fpdxpdo3msnm5/image018.png" title="Событие ID 1316 The viewstate supplied failed integrity check (Event detail code 50203)."> </a>
         <figcaption>
          Событие ID 1316 The viewstate supplied failed integrity check (Event detail code 50203).
         </figcaption>
        </figure>
        <p>Событие <b>Viewstate was invalid</b> (Event detail code 50204) возникает<b> во время или после</b> десериализации. Это означает, что у отправителя VIEWSTATE имеются корректные ключи валидации и необходимо уделить особое внимание содержимому VIEWSTATE (значение <code>PersistedState</code> из события).</p>
        <p>Ранее мы уже <a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#SERIALIZED_VIEWSTATE">приводили</a>&nbsp;структуру заголовка сериализованного VIEWSTATE. Его первые два байта (Marker_Format и Marker_Version_1) во всех случаях одинаковые, так как представляют собой заголовок VIEWSTATE. В третьем байте указывается тип сериализованных данных. Мы проанализировали гаджеты утилиты <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://github.com/pwntester/ysoserial.net/tree/master">ysoserial.net</a>, которые подходят в качестве нагрузок для VIEWSTATE, и заметили, что все они “под капотом” представляют собой данные, сериализованные <code>BinaryFormatter</code>, то есть имеют тип <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://referencesource.microsoft.com/%23System.Web/UI/ObjectStateFormatter.cs,90">Token_BinarySerialized</a> (0x32). Эти данные можно использовать для детектирующего правила. В итоге первые три байта вредоносного VIEWSTATE в hex выглядят так:</p>
        <p><code>FF 01 32 или “/wEy”</code> в base64.</p>
        <p>Таким образом, если в событии ID 1316 Viewstate was invalid (Event detail code 50204) в первых четырех символах поля <code>PersistedState</code> мы видим <code>/wEy</code>, то обязательно стоит обратить на это внимание. Если подтвердится, что отправитель (поля User host address или Client IP) не является легитимным, то стоит “бить тревогу”, так как у него есть возможность RCE на данном IIS-сервере.</p>
        <p>Также отметим другие полезные поля событий ID 1316:</p>
        <p><code>Process ID</code> – можно сразу знать, из какого PID дампить вредоносные сборки;</p>
        <p><code>User-Agent</code> – если является уникальным, то можно отследить другие запросы. Обычно используется в паре с полями <code>Client IP</code> и <code>User host address</code>;</p>
        <p><code>Account name</code> – позволяет оценить права, с которыми может происходить RCE в случае вредоносного VIEWSTATE;</p>
        <p><code>Machine name</code> – имя атакованного хоста.</p>
        <p style="font-size: 14pt;">Особые случаи</p>
        <p><b>Первая особенность</b>, которая существенно усложняет детектирование атаки, – это использование зашифрованного VIEWSTATE, что исключает возможность оперативно анализировать его содержимое.</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/21f/x8f887jnnhw5t81zn1bw4kttbqwq5g4x/image019.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Пример события Application Event ID 1316 с зашифрованным VIEWSTATE" src="/upload/medialibrary/21f/x8f887jnnhw5t81zn1bw4kttbqwq5g4x/image019.png" title="Пример события Application Event ID 1316 с зашифрованным VIEWSTATE"> </a>
         <figcaption>
          Пример события Application Event ID 1316 с зашифрованным VIEWSTATE
         </figcaption>
        </figure>
        <p>В версиях .NET 4.5+ он шифруется по умолчанию, даже если параметр конфигурации <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://referencesource.microsoft.com/%23System.Web/UI/ViewStateEncryptionMode.cs,15"><code>viewStateEncryptionMode</code></a> установлен в Never.</p>
        <p>В legacy версии &lt;4.5 VIEWSTATE не шифруется по умолчанию, даже при параметре конфигурации <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://referencesource.microsoft.com/%23System.Web/UI/ViewStateEncryptionMode.cs,15"><code>viewStateEncryptionMode</code></a> установленном в <code>Always</code>. Зашифрован <code>VIEWSTATE</code> или нет, определяется по наличию параметра <code>__VIEWSTATEENCRYPTED</code> в запросе.</p>
        <p>Отметим, что использование legacy версии .NET (&lt;4.5) или новой (&gt;=4.5) зависит от параметра конфигурации <a rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://referencesource.microsoft.com/%23System.Web/Configuration/MachineKeyCompatibilityMode.cs,10">MachineKeyCompatibilityMode</a> и, например, не задается через IIS Manager:</p>
        <p><code>&lt;machineKey validationKey="&lt;REDACTED&gt;" decryptionKey="&lt;REDACTED&gt;" validation="SHA1" decryption="AES" <b>compatibilityMode="Framework45</b>" /&gt;</code></p>
        <p>Параметр имеет следующие значения:</p>
        <p></p>
        <pre>    <code class="java">
public enum MachineKeyCompatibilityMode { <br>
    &nbsp;&nbsp;// 2.0 SP1 mode encryption doesn't use IVs when encrypting data and is included only for legacy reasons. <br>
    &nbsp;&nbsp;Framework20SP1 = 0, <br>
                
    &nbsp;&nbsp;// 2.0 SP2 mode encryption uses IVs when encrypting data. <br>
    &nbsp;&nbsp;// See: DevDiv Bugs #137864 (http://bugcheck/bugs/DevDivBugs/137864) <br>
    &nbsp;&nbsp;Framework20SP2 = 1, <br>
                
    &nbsp;&nbsp;// 4.5 mode encryption uses IVs, signing, and a purpose (subkey derivation) to encrypt data. <br>
    &nbsp;&nbsp;// See: DevDiv #48244 (http://vstfdevdiv:8080/DevDiv2/web/wi.aspx?id=48244), which the overall Crypto DCR is a reaction to <br>
    &nbsp;&nbsp;// See: DevDiv #87406 (http://vstfdevdiv:8080/DevDiv2/web/wi.aspx?id=87406) <br>
    &nbsp;&nbsp;Framework45 = 2, <br>
}    
        </code>
  </pre>
        <p></p>
        <p>По умолчанию, используется значение <code>Framework20SP1</code>, если в файле конфигурации в элементе <code>httpRuntime</code> в атрибуте <code>targetFramework</code> не указано значение "4.5":</p>
        <p><code> &lt;httpRuntime <b>targetFramework="4.5"</b> /&gt;</code></p>
        <p>В этом случае в качестве <code>MachineKeyCompatibilityMode</code> будет использоваться <code>Framework45</code> и VIEWSTATE будут шифроваться по умолчанию.</p>
        <p>IIS, который используется в Microsoft Exchange в качестве веб-движка, по умолчанию использует legacy версию .NET-фреймворка.</p>
        <p><b>Вторая особенность:</b> возможны случаи, когда после десериализации вредоносного VIEWSTATE событие Event ID 1316 не будет записано в журнал. Такое поведение определяется специфическим содержимым полезной нагрузки VIEWSTATE. В этом случае для детектирования можно использовать события механизма Event Tracing for Windows (ETW). В этом может помочь информация из двух событий сборки: <code>AssemblyLoad_V1</code> (наступает, когда сборка загружается) и <code>ModuleLoad_V2</code> (вызывается при загрузке модуля), примеры таких событий при загрузке вредоносной сборки находятся в <a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#attachment-2">Приложении&nbsp;II</a>.</p>
        <p>Для детекта можно использовать следующую логику: у вредоносной сборки в событии <code>AssemblyLoad_V1</code> в поле <code>FullyQualifiedAssemblyName</code> значение <code>PublicKeyToken</code> обычно равно <code>null</code>, так как чаще всего вредоносные сборки не подписаны, а в событии <code>ModuleLoad_V2</code> в поле <code>ModuleILPath</code> будет только имя сборки, а не полный путь до файла.</p>
        <table>
         <tbody>
          <tr>
           <th><code>Сборка</code></th>
           <th><code>AssemblyLoad_V1 FullyQualifiedAssemblyName PublicKey</code></th>
           <th><code>ModuleLoad_V2 <br>
              ModuleILPath</code></th>
          </tr>
          <tr>
           <td><code>Легитимная</code></td>
           <td><code>PublicKeyToken=31bf3856ad364e35</code></td>
           <td><code>C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Runtime.InteropServices.RuntimeInformation\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Runtime.InteropServices.RuntimeInformation.dll</code></td>
          </tr>
          <tr>
           <td><code>Вредоносная</code></td>
           <td>null</td>
           <td><code>Microsoft.Exchange.Management.Powershell.Support</code></td>
          </tr>
         </tbody>
        </table>
        <p>Стоит уделять особое внимание анализу имени сборки, так как у злоумышленников есть возможность изменить его вручную с целью сделать его похожим на путь.</p>
        <p>Мы подготовили Sigma правило, детектирующее загрузку вредоносных in-memory сборок, его можно найти в разделе <a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#IOCs">IOCs</a>.</p><br><br>
        <p style="font-size: 18pt;" id="Machine-Key">Митигация. Machine Key</p>
        <p>После обнаружения атаки с помощью десериализации VIEWSTATE, необходимо заменить Machine Key, так как сам факт успешной атаки означает, что ключи валидации и расшифровки были скомпрометированы.</p>
        <p style="font-size: 14pt;">Замена вручную созданных ключей</p>
        <p>В случае использования обычных (не автоматически сгенерированных) ключей процедуру замены можно выполнить прямо в IIS Manager на вкладке Machine Key:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/6f8/5kkcgawd12lbjxzwxb2urpfstqd8rrvf/image020.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Смена ключей в IIS Manager" src="/upload/medialibrary/6f8/5kkcgawd12lbjxzwxb2urpfstqd8rrvf/image020.png" title="Смена ключей в IIS Manager"> </a>
         <figcaption>
          Смена ключей в IIS Manager
         </figcaption>
        </figure>
        <p>Для этого необходимо выполнить следующие действия:</p>
        <p>1) Generate Keys -&gt; Apply для атакованных приложений (рекомендуется сделать это для всех приложений веб-сервера).</p>
        <p>2) Обязательно перезапустить службу IIS (или весь сервер), так как worker-процесс будет использовать “старые” ключи из памяти:</p>
        <p style="border: 1px solid #834ED8;padding:5px;"><code> net stop w3svc <br>
           net start w3svc </code></p>
        <p>Смену ключей необходимо делать в первую очередь для тех приложений, которые атакуют злоумышленники и которые доступны извне без аутентификации (например, owa и ecp для Exchange). В общем случае рекомендуется сделать смену ключей для всех приложений веб-сервера для большей безопасности (например, через настройки ключей для всего сайта), так как чаще всего проблематично понять, какими ключами обладает злоумышленник.</p>
        <p>Значения ключей, заданные для сайта, распространяются на все его приложения только в том случае, если у приложения не заданы свои настройки ключей. Это необходимо учитывать при смене ключей.</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/c8c/5dlbiy9zv1yo74712zi0zzpjaywxtw5p/image025.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img src="/upload/medialibrary/c8c/5dlbiy9zv1yo74712zi0zzpjaywxtw5p/image025.png" alt=""> </a>
        </figure>
        <p style="font-size: 14pt;">Замена автоматически сгенерированных ключей</p>
        <p>В случае использования автоматически сгенерированных ключей процедура их замены выглядит нетривиально хотя бы потому, что в публичном пространстве практически нет инструкций на эту тему. В то же время во многих статьях по настройке IIS рекомендуют использовать именно такие ключи, а значит, проблема их замены может иметь массовый характер. Также auto generated-ключи используются по умолчанию во всех приложениях Exchange после установки.</p>
        <p>В случае использования автоматически сгенерированных ключей вкладка Machine Key в IIS Manager выглядит так:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/4ae/trv8qrcmgxynp1tga2yq7st3e990knqy/image022.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Auto generated ключи в IIS Manager" src="/upload/medialibrary/4ae/trv8qrcmgxynp1tga2yq7st3e990knqy/image022.png" title="Auto generated ключи в IIS Manager"> </a>
         <figcaption>
          Auto generated ключи в IIS Manager
         </figcaption>
        </figure>
        <p>Поля, в которых ранее были указаны значения ключей, не редактируются и не содержат самих значений. Чтобы понять, как их заменить, нужно исследовать механизм их генерации и хранения.</p>
        <p>В результате глубокого исследования исходного кода, мы выяснили, что ключи <b>генерируются </b>при каждом новом запуске приложения (при старте домена) на основе мастер-ключа из реестра, который после самой первой генерации (скорее всего, после установки IIS/Exchange или первого использования генерации) не меняется. Происходит это в два этапа:</p>
        <p>1) генерация мастер-ключа, который хранится в реестре;</p>
        <p>2) runtime-генерация Validation и Decryption ключей.</p>
        <p>Мастер-ключ хранится в реестре и в дальнейшем используется при генерации ключей, которые уже непосредственно участвуют в валидации и расшифровке. Сами они <b>хранятся </b>в памяти worker-процесса. Результаты нашего исследования местоположения ключей представлены в таблице:</p>
        <table>
         <tbody>
          <tr>
           <th><code>Identity</code></th>
           <th><code>Master key registry path</code></th>
           <th><code>Encrypted</code></th>
          </tr>
          <tr>
           <td><code>LocalSystem</code></td>
           <td><code>HKLM\SECURITY\Policy\Secrets\L$ASP.NETAutoGenKeysV44.0.30319.0\</code></td>
           <td><code>Yes</code></td>
          </tr>
          <tr>
           <td><code>ApplicationPoolIdentity</code></td>
           <td><code>HKU\S-1-5-82-&lt;Virt_Acc_SID&gt;\SOFTWARE\Microsoft\ASP.NET\4.0.30319.0:AutoGenKeyV4</code></td>
           <td><code>No</code></td>
          </tr>
          <tr>
           <td><code>LocalService</code></td>
           <td><code>HKU\S-1-5-19\SOFTWARE\Microsoft\ASP.NET\4.0.30319.0:AutoGenKeyV4</code></td>
           <td><code>No</code></td>
          </tr>
          <tr>
           <td><code>NetworkService</code></td>
           <td><code>HKU\S-1-5-20\SOFTWARE\Microsoft\ASP.NET\4.0.30319.0:AutoGenKeyV4</code></td>
           <td><code>No</code></td>
          </tr>
          <tr>
           <td><code>Custom Account</code></td>
           <td><code>HKU\S-1-5-21-&lt;USER_SID&gt;\SOFTWARE\Microsoft\ASP.NET\4.0.30319.0:AutoGenKeyV4</code></td>
           <td><code>No</code></td>
          </tr>
          <tr>
           <td><code> With Load User Profile False <br>
              or <br>
              if errors occurred <br>
              (fallback like mechanism) </code></td>
           <td><code>HKLM\SOFTWARE\Microsoft\ASP.NET\4.0.30319.0\AutoGenKeys\&lt;USER_SID&gt;:AutoGenKeyV4</code></td>
           <td><code>No</code></td>
          </tr>
         </tbody>
        </table>
        <p>Identity – пользователь, от которого запускается worker-процесс, он задается в разделе Process Model в настройках пула на вкладке Application Pools в IIS Manager:</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/080/qwkxi3sz8x697fo29j36bsxy70fcfkg9/image023.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="Задание пользователя в настройках пула, от которого будет запускаться worker-процесс" src="/upload/medialibrary/080/qwkxi3sz8x697fo29j36bsxy70fcfkg9/image023.png" title="Задание пользователя в настройках пула, от которого будет запускаться worker-процесс"> </a>
         <figcaption>
          Задание пользователя в настройках пула, от которого будет запускаться worker-процесс
         </figcaption>
        </figure>
        <p>Как видно из таблицы, при работе worker-процесса с правами LocalSystem, мастер-ключ хранится в реестре в зашифрованном виде.</p>
        <p>Таким образом, алгоритм замены ключей выглядит следующим образом:</p>
        <p>1) Удалить все значения из соответствующего ключа реестра (см. таблицу выше). Это позволит при следующем запуске worker-процесса записать новые сгенерированные значения, тем самым обновив мастер-ключ.</p>
        <p>2) Выполнить перезапуск worker-процесса или всего сервера, аналогично алгоритму для вручную созданных ключей (<code>net stop w3svc</code>). Пока он не будет перезапущен, worker-процесс будет использовать старые значения ключей.</p>
        <p>На рисунке показано, что нужно удалять для разных типов Identity.</p>
        <figure><a class="js-article-body-img-zoom" href="https://1-rt--solar-ru.translate.goog/upload/medialibrary/e83/wlqljyb1hsdwow325ru12u3wfs18i466/reg_autogen_keys.png?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img alt="reg_autogen_keys.png" src="/upload/medialibrary/e83/wlqljyb1hsdwow325ru12u3wfs18i466/reg_autogen_keys.png"> </a>
        </figure>
        <p>Отметим, что для защиты от атак десериализации можно также завести все IIS-серверы за VPN, чтобы у злоумышленников не было возможности отправить запрос с вредоносным VIEWSTATE.&nbsp; Поля, в которых ранее были указаны значения ключей, не редактируются и не содержат самих значений. Чтобы понять, как их заменить, нужно исследовать механизм их генерации и хранения.</p><br><br>
        <p style="font-size: 18pt;" id="conclusion">Заключение</p>
        <p>Несмотря на то, что уязвимость десериализации VIEWSTATE существует уже более 10 лет, мы видим, что с 2020 года началась и продолжается её активная эксплуатация в дикой среде различными группировками, в том числе Obstinate Mogwai. Обнаружить эксплуатацию этой уязвимости – задача нетривиальная. Детектировать инцидент приходится буквально по одному событию журнала Windows, которое в определенных обстоятельствах может и не записываться. Кроме того, атакуемые процессы на серверах Exchange работают с высочайшими привилегиями (worker-процесс Exchange работает с правами LocalSystem), что делает эту уязвимость ещё более опасной.</p>
        <p>Надеемся, что в нашей статье вы нашли много полезной информации об уязвимости десериализации VIEWSTATE и способах детектирования подобных атак. Ниже представлены индикаторы компрометации.</p>
        <p>А если вы увидели подозрительную активность в своей сети и считаете, что тоже стали жертвой хакерской группировки,&nbsp;<a href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/?frominner=ngc2180_uppage&amp;_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1#report-popup">пишите нам</a>. Эксперты Solar 4RAYS помогут выявить инцидент и ограничить его распространение, а также защитить вашу инфраструктуру от подобных атак в будущем.</p>
        <p>P.S. Кстати, Obstinate Mogwai – не единственная группировка, использующая уязвимость десериализации VIEWSTATE. В последние месяцы мы видели как минимум ещё одну. Подробнее о ней расскажем на грядущей конференции Positive Hack Days и в нашем блоге. Следите за обновлениями!</p><br><br>
        <p style="font-size: 18pt;" id="IOCs">IOCs</p>
        <p style="font-size: 14pt;">File hashes</p>
        <p><code> MD5 <br>
           41a15b8d3d8c840be37690f8353e8934 <br>
           6c63601e9c115c0e7ff3220e023b33bb <br>
           817c8c15040261490b75d5476f8ba5d6 <br><br>
           SHA1 <br>
           41b543f397e77461dee196b830c30024dc20605d <br>
           b4d3db052fa682abd38218620c27351766275911 <br>
           348dbaa262410684153228a904c60e0d9cc17014 <br><br>
           SHA256 <br>
           503275fbf9bcd6575a6f8a014c903727eb28f2d77f067082fcf4f60c2ca630f5 <br>
           06240b9dfb75b8a430c7c34cbb13cd066acf7f0e1d889891f576d7f4bc999c15 <br>
           4608df9207e6612bcc548d0db39a2d03ed74c9c0f30c696a3a6ef2cc792c250a </code></p>
        <p style="font-size: 14pt;">IP</p>
        <p>IP-адреса, с которых наблюдалась эксплуатация уязвимости десериализации VIEWSTATE.</p>
        <p><code> 45.12.67[.]18 <br>
           77.223.109[.]162 <br>
           77.223.109[.]163 <br>
           77.223.109[.]164 <br>
           77.223.109[.]165 <br>
           193.47.34[.]229 </code></p>
        <p style="font-size: 14pt;">Sigma</p>
        <p>Правило для обнаружения загрузки вредоносных in memory only сборок в память</p>
        <pre>    <code class="properties">
title: Detect Malicious Assembly and Module Load Events <br>
id: 2617e7ed-adb7-40ba-b0f3-8f9945fe6c09 <br>
status:  <br>
description: Detects suspicious Assembly and Module Load events indicative of potentially malicious activity. <br>
references: <br>
author: SOLAR 4RAYS  <br>
date:  <br>
modified:  <br>
logsource: <br>
&nbsp;&nbsp;product: SilkETW <br>
detection: <br>
&nbsp;&nbsp;assemblywithoutsignature: <br>
&nbsp;&nbsp;&nbsp;&nbsp;EventName: 'Loader/AssemblyLoad' <br>
&nbsp;&nbsp;&nbsp;&nbsp;XmlEventData.FullyQualifiedAssemblyName|contains: 'PublicKeyToken=null' <br>
&nbsp;&nbsp;modulewithoutpath: <br>
&nbsp;&nbsp;&nbsp;&nbsp;EventName: 'Loader/ModuleLoad' <br>
&nbsp;&nbsp;&nbsp;&nbsp;XmlEventData.ModuleILPath|re: '\s"[^\\]+"' <br>
&nbsp;&nbsp;condition: assemblywithoutsignature and modulewithoutpath <br>
falsepositives: <br>
&nbsp;&nbsp;- Legitimate changes to assemblies and modules. <br>
level: high     
    </code>
</pre>
        <p style="font-size: 14pt;">Yara</p>
        <pre>    <code class="javascript">
rule mem_apt_obstinate_mogway_viewstate_assemblies {
    &nbsp;&nbsp;meta:
    &nbsp;&nbsp;&nbsp;&nbsp;description = "detects malicious assemblies loaded in memory via viewstate deserialization using leaked keys"
    &nbsp;&nbsp;&nbsp;&nbsp;author = "SOLAR 4RAYS"
    &nbsp;&nbsp;&nbsp;&nbsp;date = "20240423"
    &nbsp;&nbsp;&nbsp;&nbsp;hash = "41a15b8d3d8c840be37690f8353e8934" // execute powershell cmd
    &nbsp;&nbsp;&nbsp;&nbsp;hash = "6c63601e9c115c0e7ff3220e023b33bb" // upload file to C2
    &nbsp;&nbsp;&nbsp;&nbsp;hash = "817c8c15040261490b75d5476f8ba5d6" // fileview
    &nbsp;&nbsp;strings:
        &nbsp;&nbsp;&nbsp;&nbsp;// xor key used in viewstate payloads
        &nbsp;&nbsp;&nbsp;&nbsp;$ = { 45 AF 33 27 56 DF CA BB 12 67 9A 52 63 B8 2B C7 62 1F 10 8D 15 }
    &nbsp;&nbsp;condition:
        &nbsp;&nbsp;&nbsp;&nbsp;any of them
}          
    </code>
</pre>
        <p style="font-size: 14pt;">MITRE</p>
        <table>
         <tbody>
          <tr>
           <th>Техника, тактика</th>
           <th>Процедура</th>
          </tr>
          <tr>
           <td>Initial Access<br>
             T1190 – Exploit Public-Facing Application</td>
           <td>APT-группировка Obstinate Mogway (далее - злоумышленник) эксплуатировала уязвимость десериализации VIEWSTATE для удаленного выполнения кода на Exchange-серверах жертвы</td>
          </tr>
          <tr>
           <td>Execution<br>
             T1059.001 – Command and Scripting Interpreter: PowerShell</td>
           <td>Злоумышленник выполнял powershell-команды путем загрузки .NET-сборок в память процесса w3wp.exe в результате эксплуатации уязвимости десериализации VIEWSTATE, а также запускал .NET RAT в памяти путем запуска powershell скрипта</td>
          </tr>
          <tr>
           <td>Persistence<br>
             T1505.003 Server Software Component: Web Shell</td>
           <td>Злоумышленник в начале инцидента использовал различные вебшеллы для выполнения команд и закрепления</td>
          </tr>
          <tr>
           <td>Defense Evasion<br>
             T1055.001 Process Injection: Dynamic-link Library Injection</td>
           <td>Злоумышленник загружал вредоносные .NET-сборки в память процесса w3wp.exe</td>
          </tr>
          <tr>
           <td>Defense Evasion<br>
             T1055.003 Process Injection: Thread Execution Hijacking</td>
           <td>Злоумышленник загружал .NET RAT в процесс powershell.exe</td>
          </tr>
          <tr>
           <td>Defense Evasion<br>
             T1036.005 – Masquerading: Match Legitimate Name or Location</td>
           <td>Злоумышленник назвал .NET-сборки именами, мимикрирующими под легитимные .NET-сборки для дополнительной скрытности</td>
          </tr>
          <tr>
           <td>Defense Evasion <br>
             T1070.004 – Indicator Removal on Host: File Deletion</td>
           <td>Злоумышленник удалял свои файлы и архивы с данными</td>
          </tr>
          <tr>
           <td>Credential Access<br>
             T1003.001 OS Credential Dumping: LSASS Memory</td>
           <td>Злоумышленник включал настройку в реестре для упрощения дампа аутентификационного материала в открытом виде</td>
          </tr>
          <tr>
           <td>Discovery<br>
             T1012 Query Registry</td>
           <td>Злоумышленник проверял настройки реестра через утилиту reg.exe</td>
          </tr>
          <tr>
           <td>Discovery<br>
             T1083 File and Directory Discovery</td>
           <td>Злоумышленник получал содержимое интересующих его каталогов с помощью Get-ChildItem команд</td>
          </tr>
          <tr>
           <td>Discovery<br>
             T1087.001 Account Discovery: Local Account</td>
           <td>Злоумышленник выполнял команды net user</td>
          </tr>
          <tr>
           <td>Command and Control<br>
             T1071.001 – Application Layer Protocol: Web Protocols</td>
           <td>Злоумышленник отправлял POST-запросы с вредоносными нагрузками VIEWSTATE</td>
          </tr>
          <tr>
           <td>Command and Control<br>
             T1132.001 Data Encoding: Standard Encoding</td>
           <td>Злоумышленник в POST-запросах отправлял зашифрованные команды (xor + base64) и получал результаты их выполнения в xor-зашифрованном виде</td>
          </tr>
          <tr>
           <td>Command and Control<br>
             T1001.003 Data Obfuscation: Protocol Impersonation</td>
           <td>Злоумышленник отправлял POST-запросы с параметрами, имена которых мимикрируют под легитимные названия cookies в POST-запросах механизма Form-based Authentication.</td>
          </tr>
         </tbody>
        </table><br><br>
        <p style="font-size: 18pt;" id="attachment-1">Приложение I – .NET-сборки из памяти</p><br>
        <table>
         <tbody>
          <tr>
           <th><code>name</code></th>
           <th><code>md5</code></th>
           <th><code>comment</code></th>
          </tr>
          <tr>
           <td><code>Microsoft.Exchange.Management.Powershell.Support.dll</code></td>
           <td><code>41a15b8d3d8c840be37690f8353e8934</code></td>
           <td><code>Ps-сборка из памяти w3wp.exe</code></td>
          </tr>
          <tr>
           <td><code>Microsoft.Exchange.UM.UMCommon.dll</code></td>
           <td><code>817c8c15040261490b75d5476f8ba5d6</code></td>
           <td><code>FileView-сборка из памяти w3wp.exe</code></td>
          </tr>
          <tr>
           <td><code>Microsoft.Exchange.MessageSecurity.dll</code></td>
           <td><code>6c63601e9c115c0e7ff3220e023b33bb</code></td>
           <td><code>FileDown-сборка из памяти w3wp.exe</code></td>
          </tr>
         </tbody>
        </table><br><br>
        <p style="font-size: 18pt;line-height: 2.25rem;" id="attachment-2">Приложение II – Примеры событий при загрузке вредоносной сборки</p>
        <p><b>AssemblyLoad_V1</b></p>
        <pre style="word-wrap:break-word;">
    <code class="json">
{ <br>
&nbsp;&nbsp;"ProviderGuid": "e13c0d23-ccbc-4e12-931b-d9cc2eee27e4", <br>
    &nbsp;&nbsp;"YaraMatch": [], <br>
    &nbsp;&nbsp;"ProviderName": "Microsoft-Windows-DotNETRuntime", <br>
    &nbsp;&nbsp;"EventName": "Loader/AssemblyLoad", <br>
    &nbsp;&nbsp;"Opcode": 37, <br>
    &nbsp;&nbsp;"OpcodeName": "AssemblyLoad", <br>
    &nbsp;&nbsp;"TimeStamp": &lt;REDACTED&gt;, <br>
    &nbsp;&nbsp;"ThreadID": 12268, <br>
    &nbsp;&nbsp;"ProcessID": 15308, <br>
    &nbsp;&nbsp;"ProcessName": "w3wp", <br>
    &nbsp;&nbsp;"PointerSize": 8, <br>
    &nbsp;&nbsp;"EventDataLength": 238, <br>
    &nbsp;&nbsp;"XmlEventData": { <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"FormattedMessage": "AssemblyID=2,209,623,677,488;\r\nAppDomainID=2,209,468,624,928;\r\nAssemblyFlags=0;\r\nFullyQualifiedAssemblyName=0;\r\nClrInstanceID=Microsoft.Exchange.Management.Powershell.Support, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null ", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"ProviderName": "Microsoft-Windows-DotNETRuntime", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"ClrInstanceID": "29", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"AppDomainID": "2,209,468,624,928", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"BindingID": "0", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"MSec": "7581.5038", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"AssemblyID": "2,209,623,677,488", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"PID": "15308", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"TID": "12268", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"AssemblyFlags": "0", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"PName": "", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"FullyQualifiedAssemblyName": "Microsoft.Exchange.Management.Powershell.Support, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", <br>
    &nbsp;&nbsp;&nbsp;&nbsp;"EventName": "Loader/AssemblyLoad" <br>
&nbsp;&nbsp;} <br>
}
    </code>
</pre>
        <p><b>ModuleLoad_V2</b></p>
        <pre style="word-wrap:break-word;">
    <code class="json">
{
    &nbsp;&nbsp;"ProviderGuid": "e13c0d23-ccbc-4e12-931b-d9cc2eee27e4", <br>
    &nbsp;&nbsp;"YaraMatch": [], <br>
    &nbsp;&nbsp;"ProviderName": "Microsoft-Windows-DotNETRuntime", <br>
    &nbsp;&nbsp;"EventName": "Loader/ModuleLoad", <br>
    &nbsp;&nbsp;"Opcode": 33, <br>
    &nbsp;&nbsp;"OpcodeName": "ModuleLoad", <br>
    &nbsp;&nbsp;"TimeStamp": &lt;REDACTED&gt;, <br>
    &nbsp;&nbsp;"ThreadID": 12268, <br>
    &nbsp;&nbsp;"ProcessID": 15308, <br>
    &nbsp;&nbsp;"ProcessName": "w3wp", <br>
    &nbsp;&nbsp;"PointerSize": 8, <br>
    &nbsp;&nbsp;"EventDataLength": 170, <br>
    &nbsp;&nbsp;"XmlEventData": { <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ModuleID": "140,735,524,732,376", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ManagedPdbSignature": "00000000-0000-0000-0000-000000000000", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"Reserved1": "0", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ManagedPdbBuildPath": "", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ModuleNativePath": "", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"NativePdbBuildPath": "", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"FormattedMessage": "ModuleID=140,735,524,732,376;\r\nAssemblyID=2,209,625,905,760;\r\nModuleFlags=Manifest;\r\nModuleILPath=0;\r\nModuleNativePath=Microsoft.Exchange.Management.Powershell.Support;\r\nClrInstanceID=;\r\nManagedPdbSignature=29;\r\nManagedPdbAge=00000000-0000-0000-0000-000000000000;\r\nManagedPdbBuildPath=0;\r\nNativePdbSignature=;\r\nNativePdbAge=00000000-0000-0000-0000-000000000000;\r\nNativePdbBuildPath=0 ", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"MSec": "9847.4270", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"NativePdbAge": "0", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ModuleFlags": "Manifest", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"AssemblyID": "2,209,625,905,760", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"PID": "15308", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"NativePdbSignature": "00000000-0000-0000-0000-000000000000", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ModuleILPath": "Microsoft.Exchange.Management.Powershell.Support", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"TID": "12268", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ManagedPdbAge": "0", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ProviderName": "Microsoft-Windows-DotNETRuntime", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"PName": "", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"ClrInstanceID": "29", <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"EventName": "Loader/ModuleLoad" <br>
    &nbsp;&nbsp;} <br>
}     
    </code>
</pre>
       </div>
      </div>
      <aside class="blog-wrapper__col blog-wrapper__col_2 blog-wrapper__col_2-for-detail">
       <div class="author"><!--noindex-->
        <p>Материал подготовила</p>
        <p class="title-h3 author__title">команда 4RAYS</p><!--/noindex-->
       </div><!--<div class="similar-news">

                    <p class="title-h3 similar-news__title">Hard-Hit HardBit. Анализ версий шифровальщика семейства HardBit и дикриптор!!!(связанная статья)</p>
                    <div class="similar-news__info-wrapper">
                        <time class="similar-news__date similar-news__text" datetime="2023.11.20">20.11.2023(Дата связаной статьи)</time>
                        <div class="similar-news__line">|</div>
                        <p class="text similar-news__article-category similar-news__text">ВЕБИНАР???</p>
                    </div><a class="btn btn_small similar-news__btn" href="#">Подробнее об отчете???</a>
                </div>-->
       <div class="blog-wrapper__sticky"><!--noindex--> <a href="https://1-rt--solar-ru.translate.goog/bitrix/rss.php?ID=40&amp;SECTION_ID=208LANG%3Dru&amp;TYPE=Solar4RAYS&amp;LIMIT=-1&amp;_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1" target="_blank"><button class="btn rss-btn rss-btn_detail rss-btn_white"><span class="mobile">RSS</span><span class="laptop">Подписаться на RSS</span>
          <svg class="rss-btn__icon"><use xlink:href="/local/templates/4rays/images/sprites.svg#rss-icon"></use>
          </svg></button></a> <!--/noindex--> <!--noindex-->
        <script>if (window.location.hash != '' && window.location.hash != '#') top.BX.ajax.history.checkRedirectStart('bxajaxid', '35900cc1afbf923659c64865dcb130e9')</script>
        <div id="comp_35900cc1afbf923659c64865dcb130e9">
         <form class="form aside-form aside-form_white js-subscribe-aside" name="4rays_subscribe" action="/solar-4rays/blog/4329/" method="POST" enctype="multipart/form-data">
          <input type="hidden" name="bxajaxid" id="bxajaxid_35900cc1afbf923659c64865dcb130e9_8BACKi" value="35900cc1afbf923659c64865dcb130e9"><input type="hidden" name="AJAX_CALL" value="Y">
          <script type="text/javascript">
function _processform_8BACKi(){
	if (BX('bxajaxid_35900cc1afbf923659c64865dcb130e9_8BACKi'))
	{
		var obForm = BX('bxajaxid_35900cc1afbf923659c64865dcb130e9_8BACKi').form;
		BX.bind(obForm, 'submit', function() {BX.ajax.submitComponentForm(this, 'comp_35900cc1afbf923659c64865dcb130e9', true)});
	}
	BX.removeCustomEvent('onAjaxSuccess', _processform_8BACKi);
}
if (BX('bxajaxid_35900cc1afbf923659c64865dcb130e9_8BACKi'))
	_processform_8BACKi();
else
	BX.addCustomEvent('onAjaxSuccess', _processform_8BACKi);
</script><input type="hidden" name="sessid" id="sessid" value="1cc7f2e199563f9c2cfab27899d99725"><input type="hidden" name="WEB_FORM_ID" value="115"> <input type="hidden" name="form_text_1112" value="" id="utm_source"> <input type="hidden" name="form_text_1113" value="" id="utm_medium"> <input type="hidden" name="form_text_1114" value="" id="utm_campaign"> <input type="hidden" name="form_text_1115" value="" id="utm_term"> <input type="hidden" name="form_text_1116" value="" id="reff"> <input type="hidden" name="form_text_1117" value="https://rt-solar.ru/solar-4rays/blog/4329/"> <input type="hidden" name="form_text_1118" class="client-id-ga" value=""> <input type="hidden" name="form_text_1119" class="client-id-ym" value=""> <input type="hidden" name="form_text_1120" class="ga-counter-id" value=""> <input type="hidden" name="form_text_1121" class="ym-counter-id" value=""> <input type="hidden" name="recaptcha_token" value="">
          <p class="title-h3 aside-form__title aside-form__title_dark">Подпишитесь на новые статьи Solar 4RAYS</p>
          <div class="form__item form__item-email"><input class="form__input form__input_white" id="aside-form__user-mail" type="email" name="form_text_1938" required> <label class="form__label" for="aside-form__user-mail">Email</label><span class="form__border form__border_grey"></span>
          </div>
          <div class="form__item form__item-checkbox"><label class="form__label-checkbox form__label-checkbox_dark"> <input class="form__checkbox visually-hidden" type="checkbox" name="personal_mailing" required><span class="form__fake-checked"></span><span class="form__checkbox-text form__checkbox-text_small">Я даю <a href="https://1-rt--solar-ru.translate.goog/upload/docs/sog_1_PDN.docx?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">согласие</a> на обработку своих данных согласно <a href="https://1-rt--solar-ru.translate.goog/about_company/information/pd/ppopd.pdf?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">политике обработки персональных данных.</a></span> </label>
          </div>
          <div class="form__item form__item-submit"><input type="submit" name="web_form_submit" value="Подписаться на рассылку" class="btn btn_orange btn_small form__submit" style="cursor: pointer;">
          </div>
         </form>
        </div>
        <script>if (top.BX.ajax.history.bHashCollision) top.BX.ajax.history.checkRedirectFinish('bxajaxid', '35900cc1afbf923659c64865dcb130e9');</script>
        <script>top.BX.ready(BX.defer(function() {window.AJAX_PAGE_STATE = new top.BX.ajax.component('comp_35900cc1afbf923659c64865dcb130e9'); top.BX.ajax.history.init(window.AJAX_PAGE_STATE);}))</script><!--/noindex-->
       </div>
      </aside>
     </div>
    </div>
   </section>
  </main>
  <div class="popup success mfp-hide js-success-popup">
   <p class="success__title">Спасибо!</p>
   <p class="success__title">Вы подписались на рассылку нашего блога</p><button class="btn btn_orange success__btn-close js-success-close-btn">Закрыть окно</button>
  </div>
  <div id="report-popup" class="popup mfp-hide js-report-popup">
   <div class="callback"><button class="close-popup-button js-close-popup">
     <svg class="close-popup-button__svg"><use xlink:href="/local/templates/4rays/images/sprites.svg#close-button"></use>
     </svg></button>
    <div class="callback__wrapper">
     <p class="title-h2 form__title">Сообщить об инциденте</p>
     <p class="text form__text">Для получения СРОЧНОЙ помощи при атаке заполните заявку. Эксперты центра противодействия кибератакам Solar JSOC работают 24/7.</p>
     <script>if (window.location.hash != '' && window.location.hash != '#') top.BX.ajax.history.checkRedirectStart('bxajaxid', 'dcf653d2c1ac62511d6253df35dc580d')</script>
     <div id="comp_dcf653d2c1ac62511d6253df35dc580d">
      <form class="form js-form-report" name="4rays_incident" action="/solar-4rays/blog/4329/" method="POST" enctype="multipart/form-data">
       <input type="hidden" name="bxajaxid" id="bxajaxid_dcf653d2c1ac62511d6253df35dc580d_Ar8Szp" value="dcf653d2c1ac62511d6253df35dc580d"><input type="hidden" name="AJAX_CALL" value="Y">
       <script type="text/javascript">
function _processform_Ar8Szp(){
	if (BX('bxajaxid_dcf653d2c1ac62511d6253df35dc580d_Ar8Szp'))
	{
		var obForm = BX('bxajaxid_dcf653d2c1ac62511d6253df35dc580d_Ar8Szp').form;
		BX.bind(obForm, 'submit', function() {BX.ajax.submitComponentForm(this, 'comp_dcf653d2c1ac62511d6253df35dc580d', true)});
	}
	BX.removeCustomEvent('onAjaxSuccess', _processform_Ar8Szp);
}
if (BX('bxajaxid_dcf653d2c1ac62511d6253df35dc580d_Ar8Szp'))
	_processform_Ar8Szp();
else
	BX.addCustomEvent('onAjaxSuccess', _processform_Ar8Szp);
</script><input type="hidden" name="sessid" id="sessid_1" value="1cc7f2e199563f9c2cfab27899d99725"><input type="hidden" name="WEB_FORM_ID" value="114"> <input type="hidden" name="form_text_1112" value="" id="utm_source"> <input type="hidden" name="form_text_1113" value="" id="utm_medium"> <input type="hidden" name="form_text_1114" value="" id="utm_campaign"> <input type="hidden" name="form_text_1115" value="" id="utm_term"> <input type="hidden" name="form_text_1116" value="" id="reff"> <input type="hidden" name="form_text_1117" value="https://rt-solar.ru/solar-4rays/blog/4329/"> <input type="hidden" name="form_text_1118" class="client-id-ga" value=""> <input type="hidden" name="form_text_1119" class="client-id-ym" value=""> <input type="hidden" name="form_text_1120" class="ga-counter-id" value=""> <input type="hidden" name="form_text_1121" class="ym-counter-id" value=""> <input type="hidden" name="recaptcha_token" value="">
       <div class="form__item"><input class="form__input" id="report__company-name" type="text" name="form_text_1931" required> <label class="form__label" for="report__company-name">Компания</label><span class="form__border"></span>
       </div>
       <div class="form__item"><input class="form__input" id="report__user-name" type="text" name="form_text_1932" required> <label class="form__label" for="report__user-name">Имя Фамилия</label><span class="form__border"></span>
       </div>
       <div class="form__item"><input class="form__input js-phone-input" id="report__user-phone" type="tel" name="form_text_1933" required> <label class="form__label" for="report__user-phone">Номер телефона</label><span class="form__border"></span>
       </div>
       <div class="form__item callback__item-email"><input class="form__input" id="report__user-mail" type="email" name="form_text_1934" required> <label class="form__label" for="report__user-mail">Email</label><span class="form__border"></span>
       </div>
       <p class="title-h3 form__title-h3">Выберите тип инцидента</p>
       <div class="form__radio-wrapper"><label class="form__label-radio"> <input class="form__radio callback__radio visually-hidden" type="radio" name="choise" value="Подозрение на компрометацию" data-form-tab="1"><span class="form__fake-radio">Подозрение на компрометацию</span> </label> <label class="form__label-radio"> <input class="form__radio callback__radio visually-hidden" type="radio" name="choise" value="Утечка информации" data-form-tab="1"><span class="form__fake-radio">Утечка информации</span> </label> <label class="form__label-radio"> <input class="form__radio callback__radio visually-hidden" type="radio" name="choise" value="Взлом публичных сервисов" data-form-tab="1"><span class="form__fake-radio">Взлом публичных сервисов</span> </label> <label class="form__label-radio"> <input class="form__radio callback__radio visually-hidden" type="radio" name="choise" value="Шифрование данных" data-form-tab="2"><span class="form__fake-radio">Шифрование данных</span> </label> <label class="form__label-radio"> <input class="form__radio callback__radio visually-hidden" type="radio" name="choise" value="Другое" data-form-tab="3"><span class="form__fake-radio">Другое</span> </label> <input name="form_text_1935" class="incedent" type="hidden" value="">
        <script type="text/javascript">
        $('body').on('click', '.form__label-radio', function() {
            var incedentVal = '';
            $( ".callback__radio" ).each(function( index ) {
                if( $(this).is(':checked') ) { 
                    incedentVal = $(this).val();
                    $('.incedent').val(incedentVal);
                }
            });
        })
    </script>
       </div>
       <div class="form__tab-wrapper">
        <div class="form__tab-item" id="form-tab-0">
         <div class="form__warning">
          Предложение по реагированию не включает помощь с отражением DDoS-атак
         </div>
        </div>
        <div class="form__tab-item hidden" id="form-tab-1">
         <div class="form__tab-text">
          Команда Solar JSOC готова экстренно помочь с реагированием на инцидент только в вашей собственной инфраструктуре.
         </div>
         <div class="form__tab-text">
          Услуги реагирования на инцидент в арендуемой инфраструктуре на текущий момент не предоставляются.
         </div>
        </div>
        <div class="form__tab-item hidden" id="form-tab-2">
         <div class="form__tab-text">
          Команда Solar JSOC поможет выявить и устранить вектор заражения, но не может гарантировать восстановление зашифрованных данных.
         </div>
        </div>
        <div class="form__tab-item hidden" id="form-tab-3">
         <div class="form__item form__item-other-option"><input class="form__input" id="report__other-option" type="text" name="form_text_1936"> <label class="form__label" for="report__other-option">Укажите свой вариант</label><span class="form__border"></span>
         </div>
         <div class="form__warning">
          Предложение по реагированию не включает помощь с отражением DDoS-атак
         </div>
        </div>
       </div>
       <div class="form__item form__item-checkbox"><label class="form__label-checkbox"> <input class="form__checkbox visually-hidden" type="checkbox" name="personal_data" required><span class="form__fake-checked"></span><span class="form__checkbox-text"> Нажимая "Сообщить об инциденте", вы даете <a href="https://1-rt--solar-ru.translate.goog/upload/docs/sog_1_PDN.docx?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">согласие</a> на обработку своих данных согласно <a href="https://1-rt--solar-ru.translate.goog/about_company/information/pd/ppopd.pdf?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">политике обработки персональных данных.</a></span> </label>
       </div>
       <div class="form__item form__item-submit"><input type="submit" name="web_form_submit" value="Сообщить об инциденте" class="btn btn_orange form__submit" style="cursor: pointer;">
       </div>
      </form>
     </div>
     <script>if (top.BX.ajax.history.bHashCollision) top.BX.ajax.history.checkRedirectFinish('bxajaxid', 'dcf653d2c1ac62511d6253df35dc580d');</script>
     <script>top.BX.ready(BX.defer(function() {window.AJAX_PAGE_STATE = new top.BX.ajax.component('comp_dcf653d2c1ac62511d6253df35dc580d'); top.BX.ajax.history.init(window.AJAX_PAGE_STATE);}))</script>
    </div>
   </div>
   <div class="saccess hidden">
    <p class="success__title">Спасибо, заявка получена.</p>
    <p class="success__title">Мы свяжемся с вами в течение 30 минут.</p>
    <p class="success__text">Узнайте больше об услуге экстренного реагирования на инциденты <a class="link link_orange" href="https://1-rt--solar-ru.translate.goog/services/jsoc/digital-forensic-and-incident-response/eir/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">здесь</a></p><button class="btn btn_orange success__btn-close js-close-popup">Закрыть окно</button>
   </div>
  </div>
  <div class="popup mfp-hide js-subscribe-popup">
   <div class="callback"><button class="close-popup-button js-close-popup">
     <svg class="close-popup-button__svg"><use xlink:href="/local/templates/4rays/images/sprites.svg#close-button"></use>
     </svg></button>
    <div class="callback__wrapper">
     <p class="title-h2 form__title">Подпишитесь на рассылку Solar 4RAYS</p>
     <p class="text form__text">Будьте в курсе об актуальных киберугрозах и способах противостоять им</p>
     <script>if (window.location.hash != '' && window.location.hash != '#') top.BX.ajax.history.checkRedirectStart('bxajaxid', '13f728174a9d58bb6b1bd488dfcb4f5c')</script>
     <div id="comp_13f728174a9d58bb6b1bd488dfcb4f5c">
      <form class="form js-form-subscribe" name="4rays_subscribe" action="/solar-4rays/blog/4329/" method="POST" enctype="multipart/form-data">
       <input type="hidden" name="bxajaxid" id="bxajaxid_13f728174a9d58bb6b1bd488dfcb4f5c_XrQFCj" value="13f728174a9d58bb6b1bd488dfcb4f5c"><input type="hidden" name="AJAX_CALL" value="Y">
       <script type="text/javascript">
function _processform_XrQFCj(){
	if (BX('bxajaxid_13f728174a9d58bb6b1bd488dfcb4f5c_XrQFCj'))
	{
		var obForm = BX('bxajaxid_13f728174a9d58bb6b1bd488dfcb4f5c_XrQFCj').form;
		BX.bind(obForm, 'submit', function() {BX.ajax.submitComponentForm(this, 'comp_13f728174a9d58bb6b1bd488dfcb4f5c', true)});
	}
	BX.removeCustomEvent('onAjaxSuccess', _processform_XrQFCj);
}
if (BX('bxajaxid_13f728174a9d58bb6b1bd488dfcb4f5c_XrQFCj'))
	_processform_XrQFCj();
else
	BX.addCustomEvent('onAjaxSuccess', _processform_XrQFCj);
</script><input type="hidden" name="sessid" id="sessid_2" value="1cc7f2e199563f9c2cfab27899d99725"><input type="hidden" name="WEB_FORM_ID" value="115"> <input type="hidden" name="form_text_1112" value="" id="utm_source"> <input type="hidden" name="form_text_1113" value="" id="utm_medium"> <input type="hidden" name="form_text_1114" value="" id="utm_campaign"> <input type="hidden" name="form_text_1115" value="" id="utm_term"> <input type="hidden" name="form_text_1116" value="" id="reff"> <input type="hidden" name="form_text_1117" value="https://rt-solar.ru/solar-4rays/blog/4329/"> <input type="hidden" name="form_text_1118" class="client-id-ga" value=""> <input type="hidden" name="form_text_1119" class="client-id-ym" value=""> <input type="hidden" name="form_text_1120" class="ga-counter-id" value=""> <input type="hidden" name="form_text_1121" class="ym-counter-id" value=""> <input type="hidden" name="recaptcha_token" value="">
       <div class="form__item"><input class="form__input" id="experts__user-name" type="text" name="form_text_1939" required> <label class="form__label" for="experts__user-name">Имя Фамилия</label><span class="form__border"></span>
       </div><!--<div class="form__item">
                <input class="form__input js-phone-input" id="experts__user-phone" type="tel" name="form_text_1940" required>
                <label class="form__label" for="experts__user-phone">Номер телефона</label><span class="form__border"></span>
              </div>-->
       <div class="form__item callback__item-email"><input class="form__input" id="experts__user-mail" type="email" name="form_text_1941" required> <label class="form__label" for="experts__user-mail">Email</label><span class="form__border"></span>
       </div>
       <div class="form__item form__item-checkbox"><label class="form__label-checkbox"> <input class="form__checkbox visually-hidden" type="checkbox" name="personal_data" required><span class="form__fake-checked"></span><span class="form__checkbox-text">Я даю <a href="https://1-rt--solar-ru.translate.goog/upload/docs/sog_1_PDN.docx?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">согласие</a> на обработку своих данных согласно <a href="https://1-rt--solar-ru.translate.goog/about_company/information/pd/ppopd.pdf?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">политике обработки персональных данных.</a></span> </label>
       </div>
       <div class="form__item form__item-submit"><input type="submit" name="web_form_submit" value="Подписаться на рассылку" class="btn btn_orange form__submit" style="cursor: pointer;">
       </div>
      </form>
     </div>
     <script>if (top.BX.ajax.history.bHashCollision) top.BX.ajax.history.checkRedirectFinish('bxajaxid', '13f728174a9d58bb6b1bd488dfcb4f5c');</script>
     <script>top.BX.ready(BX.defer(function() {window.AJAX_PAGE_STATE = new top.BX.ajax.component('comp_13f728174a9d58bb6b1bd488dfcb4f5c'); top.BX.ajax.history.init(window.AJAX_PAGE_STATE);}))</script>
    </div>
   </div>
   <div class="saccess hidden">
    <p class="success__title">Спасибо!</p>
    <p class="success__title">Вы подписались на рассылку нашего блога</p><button class="btn btn_orange success__btn-close js-close-popup">Закрыть окно</button>
   </div>
  </div>
  <div class="popup mfp-hide js-experts-popup experts-popup">
   <div class="callback"><button class="close-popup-button js-close-popup">
     <svg class="close-popup-button__svg"><use xlink:href="/local/templates/4rays/images/sprites.svg#close-button"></use>
     </svg></button>
    <div class="callback__wrapper">
     <p class="title-h2 form__title experts-popup__title">Для получения бесплатной консультации заполните форму ниже и отправьте заявку. Наш менеджер свяжется с вами в ближайшее время.</p>
     <script>if (window.location.hash != '' && window.location.hash != '#') top.BX.ajax.history.checkRedirectStart('bxajaxid', '72657e8725ffb1c643595b9417b6bc6f')</script>
     <div id="comp_72657e8725ffb1c643595b9417b6bc6f">
      <form class="form js-form-experts" name="4rays_expert" action="/solar-4rays/blog/4329/" method="POST" enctype="multipart/form-data">
       <input type="hidden" name="bxajaxid" id="bxajaxid_72657e8725ffb1c643595b9417b6bc6f_dCjmSk" value="72657e8725ffb1c643595b9417b6bc6f"><input type="hidden" name="AJAX_CALL" value="Y">
       <script type="text/javascript">
function _processform_dCjmSk(){
	if (BX('bxajaxid_72657e8725ffb1c643595b9417b6bc6f_dCjmSk'))
	{
		var obForm = BX('bxajaxid_72657e8725ffb1c643595b9417b6bc6f_dCjmSk').form;
		BX.bind(obForm, 'submit', function() {BX.ajax.submitComponentForm(this, 'comp_72657e8725ffb1c643595b9417b6bc6f', true)});
	}
	BX.removeCustomEvent('onAjaxSuccess', _processform_dCjmSk);
}
if (BX('bxajaxid_72657e8725ffb1c643595b9417b6bc6f_dCjmSk'))
	_processform_dCjmSk();
else
	BX.addCustomEvent('onAjaxSuccess', _processform_dCjmSk);
</script><input type="hidden" name="sessid" id="sessid_3" value="1cc7f2e199563f9c2cfab27899d99725"><input type="hidden" name="WEB_FORM_ID" value="116"> <input type="hidden" name="form_text_1112" value="" id="utm_source"> <input type="hidden" name="form_text_1113" value="" id="utm_medium"> <input type="hidden" name="form_text_1114" value="" id="utm_campaign"> <input type="hidden" name="form_text_1115" value="" id="utm_term"> <input type="hidden" name="form_text_1116" value="" id="reff"> <input type="hidden" name="form_text_1117" value="https://rt-solar.ru/solar-4rays/blog/4329/"> <input type="hidden" name="form_text_1118" class="client-id-ga" value=""> <input type="hidden" name="form_text_1119" class="client-id-ym" value=""> <input type="hidden" name="form_text_1120" class="ga-counter-id" value=""> <input type="hidden" name="form_text_1121" class="ym-counter-id" value=""> <input type="hidden" name="recaptcha_token" value="">
       <div class="form__item"><input class="form__input" id="experts__user-name" type="text" name="form_text_1939" required> <label class="form__label" for="experts__user-name">Имя Фамилия</label><span class="form__border"></span>
       </div>
       <div class="form__item"><input class="form__input js-phone-input" id="experts__user-phone" type="tel" name="form_text_1940" required> <label class="form__label" for="experts__user-phone">Номер телефона</label><span class="form__border"></span>
       </div>
       <div class="form__item callback__item-email"><input class="form__input" id="experts__user-mail" type="email" name="form_text_1941" required> <label class="form__label" for="experts__user-mail">Email</label><span class="form__border"></span>
       </div>
       <div class="form__item form__item-checkbox"><label class="form__label-checkbox"> <input class="form__checkbox visually-hidden" type="checkbox" name="personal_data" required><span class="form__fake-checked"></span><span class="form__checkbox-text">Я даю <a href="https://1-rt--solar-ru.translate.goog/upload/docs/sog_1_PDN.docx?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">согласие</a> на обработку своих данных согласно <a href="https://1-rt--solar-ru.translate.goog/about_company/information/pd/ppopd.pdf?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">политике обработки персональных данных.</a></span> </label>
       </div>
       <div class="form__item form__item-submit"><input type="submit" name="web_form_submit" value="Оставить заявку" class="btn btn_orange form__submit" style="cursor: pointer;">
       </div>
      </form>
     </div>
     <script>if (top.BX.ajax.history.bHashCollision) top.BX.ajax.history.checkRedirectFinish('bxajaxid', '72657e8725ffb1c643595b9417b6bc6f');</script>
     <script>top.BX.ready(BX.defer(function() {window.AJAX_PAGE_STATE = new top.BX.ajax.component('comp_72657e8725ffb1c643595b9417b6bc6f'); top.BX.ajax.history.init(window.AJAX_PAGE_STATE);}))</script>
    </div>
   </div>
   <div class="saccess hidden">
    <p class="success__title">Спасибо, заявка получена.</p>
    <p class="success__text">Мы свяжемся с вами в течение двух часов (в рабочее время).</p><button class="btn btn_orange success__btn-close js-close-popup">Закрыть окно</button>
   </div>
  </div>
  <footer class="footer">
   <div class="footer-decor">
    <div class="footer-decor__list">
     <div class="footer-decor__col footer-decor__col_1">
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
     </div>
     <div class="footer-decor__col footer-decor__col_2">
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
     </div>
    </div>
    <div class="footer-decor__list footer-decor__list_revers">
     <div class="footer-decor__col footer-decor__col_1">
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
     </div>
     <div class="footer-decor__col footer-decor__col_2">
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
     </div>
    </div>
    <div class="footer-decor__list">
     <div class="footer-decor__col footer-decor__col_1">
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
     </div>
     <div class="footer-decor__col footer-decor__col_2">
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
      <div class="footer-decor__item">
       Defense
      </div>
      <div class="footer-decor__item">
       Offense
      </div>
      <div class="footer-decor__item">
       Innovation
      </div>
      <div class="footer-decor__item">
       Prediction
      </div>
     </div>
    </div>
   </div>
   <div class="footer__container">
    <div class="wrapper footer__wrapper">
     <div class="footer__menu-solar4rays"><a class="footer__logo footer__logo_solar4rays" href="https://1-rt--solar-ru.translate.goog/solar-4rays/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img src="/local/templates/4rays/images/logo-4rays.svg" alt="Логотип Solar 4RAYS" width="125" height="24"> </a>
      <div class="footer__menu-wrapper">
       <ul class="footer__menu">
        <li class="footer__menu-item"><a class="footer__menu-link link" href="https://1-rt--solar-ru.translate.goog/solar-4rays/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">О центре исследований</a></li>
        <li class="footer__menu-item"><a class="footer__menu-link link" href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Блог Solar 4RAYS</a></li>
        <li class="footer__menu-item hidden"><a class="footer__menu-link link" href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Экспертные сервисы</a></li>
       </ul>
       <ul class="footer__social-list">
        <li class="footer__social-item"><a href="https://1-rt--solar-ru.translate.goog/bitrix/rss.php?ID=40&amp;SECTION_ID=208LANG%3Dru&amp;TYPE=Solar4RAYS&amp;LIMIT=-1&amp;_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1" target="_blank"><button class="footer__social-link">
           <svg width="44" height="44" viewbox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_713_11427)">
             <rect x="0.25" y="0.4375" width="43" height="43" rx="21.5" stroke="white" />
             <g clip-path="url(#clip1_713_11427)">
              <path d="M15.7593 13C14.8825 13 14.0229 13.086 13.1891 13.2235V16.2407C14.0229 16.0602 14.8825 15.9656 15.7679 15.9656C22.533 15.9656 28.043 21.467 28.043 28.2321C28.043 29.1175 27.9398 29.9771 27.7679 30.8109H30.7851C30.9312 29.9771 31.0086 29.1089 31.0086 28.2321C30.9914 19.8338 24.1662 13 15.7593 13ZM18.5272 28.2321C18.5272 29.7536 17.2894 31 15.7593 31C14.2292 31 13 29.7622 13 28.2321C13 26.702 14.2464 25.4728 15.7593 25.4728C17.2722 25.4728 18.5272 26.7106 18.5272 28.2321ZM15.7593 19.0172C14.8653 19.0172 13.9971 19.1461 13.1805 19.3868V22.5415C13.9713 22.1805 14.8395 21.9742 15.7593 21.9742C19.2063 21.9742 22.0172 24.7851 22.0172 28.2321C22.0172 29.1519 21.8195 30.0201 21.4585 30.8109H24.6132C24.8539 29.9943 24.9828 29.1261 24.9828 28.2321C24.9828 23.1519 20.8481 19.0172 15.7679 19.0172H15.7593Z" fill="white" />
             </g>
            </g> <defs>
             <clippath id="clip0_713_11427">
              <rect width="44" height="44" fill="white" />
             </clippath>
             <clippath id="clip1_713_11427">
              <rect width="17.9914" height="18" fill="white" transform="translate(13 13)" />
             </clippath>
            </defs>
           </svg></button></a></li>
       </ul>
      </div>
     </div>
     <div class="footer__menu-solar"><a class="footer__logo footer__logo_solar" href="https://1-rt--solar-ru.translate.goog/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1"> <img src="/local/templates/4rays/images/logo.svg" alt="Логотип компании Солар" width="127" height="24"> </a>
      <div class="footer__menu-wrapper">
       <ul class="footer__menu">
        <li class="footer__menu-item"><a class="footer__menu-link link" href="https://1-rt--solar-ru.translate.goog/about_company/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Компания</a></li>
        <li class="footer__menu-item hidden"><a class="footer__menu-link link" href="https://1-rt--solar-ru.translate.goog/solar-4rays/blog/4329/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Решения</a></li>
        <li class="footer__menu-item"><a class="footer__menu-link link" href="https://1-rt--solar-ru.translate.goog/events/calendar/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Мероприятия</a></li>
        <li class="footer__menu-item"><a class="footer__menu-link link" href="https://1-rt--solar-ru.translate.goog/about_company/career/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Карьера</a></li>
       </ul>
       <ul class="footer__social-list">
        <li class="footer__social-item"><a class="footer__social-link" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://t.me/solar_security" target="_blank" rel="nofollow">
          <svg width="44" height="44" viewbox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_352_2287)">
            <rect x="0.25" y="0.4375" width="43" height="43" rx="21.5" stroke="white" />
            <path d="M11 21.1509C11.2478 20.7544 11.641 20.56 12.0557 20.4013C17.6029 18.2759 23.1508 16.1523 28.6985 14.0284C29.49 13.7254 30.2814 13.422 31.0736 13.1206C31.178 13.0808 31.2849 13.0408 31.3943 13.0214C32.0725 12.9014 32.5946 13.2958 32.5635 13.9844C32.5382 14.5461 32.4142 15.1069 32.2975 15.6603C31.6383 18.7866 30.9686 21.9107 30.3015 25.0354C29.9535 26.6662 29.6036 28.2966 29.2543 29.9273C29.2439 29.9751 29.23 30.0222 29.217 30.0694C28.9056 31.1958 28.0643 31.1666 27.3877 30.681C25.8135 29.5515 24.2579 28.3963 22.6946 27.2517C22.6383 27.2104 22.5813 27.1704 22.5117 27.1207C22.4626 27.1622 22.4139 27.199 22.37 27.2409C21.5666 28.0065 20.7632 28.7723 19.9609 29.5391C19.7278 29.7619 19.4591 29.8869 19.1107 29.8744C19.1387 29.4433 19.1639 29.0259 19.1931 28.6087C19.2725 27.4811 19.3582 26.3539 19.4301 25.2258C19.4457 24.9831 19.5093 24.8037 19.7038 24.6298C22.6578 21.9901 25.6022 19.34 28.5489 16.6921C28.6011 16.6453 28.6653 16.6041 28.6987 16.5456C28.7401 16.4731 28.7983 16.3616 28.7701 16.3106C28.7389 16.2538 28.6096 16.2074 28.5389 16.2242C28.3651 16.2654 28.1845 16.3199 28.0343 16.4136C25.4385 18.031 22.8467 19.6548 20.2542 21.2777C19.1126 21.9923 17.9729 22.71 16.8275 23.4184C16.7463 23.4686 16.6135 23.4916 16.524 23.4642C14.9434 22.9805 13.366 22.4868 11.7876 21.9959C11.4665 21.896 11.1736 21.7569 11 21.446L11 21.1509Z" fill="white" />
           </g> <defs>
            <clippath id="clip0_352_2287">
             <rect width="44" height="44" fill="white" />
            </clippath>
           </defs>
          </svg></a></li>
        <li class="footer__social-item"><a class="footer__social-link" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://vk.com/solar_security/" target="_blank" rel="nofollow">
          <svg width="44" height="44" viewbox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_352_2290)">
            <rect x="0.25" y="0.4375" width="43" height="43" rx="21.5" stroke="white" />
            <path d="M23.3377 29C15.7708 29 11.1799 23.7402 11 15H14.8324C14.9519 21.4204 17.8675 24.141 20.1026 24.7005V15H23.7753V20.5408C25.9311 20.3014 28.1876 17.7812 28.946 15H32.561C31.9825 18.42 29.5259 20.9402 27.7903 21.9798C29.5273 22.8204 32.3221 25.0206 33.4 29H29.4266C28.5876 26.3399 26.5325 24.2795 23.7766 23.9998V29H23.3377Z" fill="white" />
           </g> <defs>
            <clippath id="clip0_352_2290">
             <rect width="44" height="44" fill="white" />
            </clippath>
           </defs>
          </svg></a></li>
        <li class="footer__social-item"><a class="footer__social-link" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://dzen.ru/solar_security/" target="_blank" rel="nofollow">
          <svg width="44" height="44" viewbox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_352_2293)">
            <rect x="0.25" y="0.4375" width="43" height="43" rx="21.5" stroke="white" />
            <path d="M33 21.6176V22.3521C32.683 22.3521 32.3691 22.3439 32.056 22.3539C30.6756 22.3984 29.2943 22.4433 27.9308 22.6935C26.8099 22.8991 25.7435 23.2426 24.8315 23.9599C23.8061 24.7657 23.2089 25.8398 22.8781 27.0807C22.5749 28.2179 22.4651 29.3823 22.4067 30.5519C22.3695 31.2912 22.3609 32.0317 22.3384 32.7714C22.3362 32.8432 22.3237 32.914 22.3142 33H21.6452C21.6452 32.7788 21.6556 32.5515 21.6434 32.3251C21.5816 31.1706 21.5431 30.0131 21.4393 28.8621C21.3451 27.8165 21.1215 26.7912 20.6579 25.8359C19.9063 24.2861 18.6427 23.3653 17.0093 22.9104C15.965 22.6196 14.8942 22.496 13.8161 22.4377C12.9326 22.3897 12.047 22.3759 11.1626 22.3465C11.1133 22.3448 11.064 22.3387 11 22.3336V21.66C11.1431 21.66 11.285 21.6651 11.4264 21.6591C12.4543 21.615 13.4844 21.5973 14.5098 21.5161C15.8097 21.4128 17.0954 21.2106 18.2768 20.6079C19.7286 19.8677 20.6077 18.6649 21.0579 17.1254C21.3394 16.1632 21.4774 15.1751 21.534 14.1774C21.5928 13.1448 21.6218 12.11 21.6642 11.0765C21.6651 11.0562 21.6729 11.0363 21.6811 11H22.3604C22.3604 11.4714 22.3475 11.9359 22.3626 12.3995C22.4141 13.9506 22.488 15.5 22.9014 17.0092C23.5246 19.284 25.0217 20.6416 27.2977 21.1799C28.5497 21.4763 29.825 21.5783 31.1063 21.6146C31.7312 21.6323 32.3574 21.6176 33 21.6176Z" fill="white" />
           </g> <defs>
            <clippath id="clip0_352_2293">
             <rect width="44" height="44" fill="white" />
            </clippath>
           </defs>
          </svg></a></li><!--                        <li class="footer__social-item">--> <!--                            <a class="footer__social-link" href="https://vk.com/solarlife_super/" target="_blank"--> <!--                               rel="nofollow">--> <!--                                <svg width="44" height="44" viewBox="0 0 44 44" fill="none"--> <!--                                     xmlns="http://www.w3.org/2000/svg">--> <!--                                    <g clip-path="url(#clip0_352_2296)">--> <!--                                        <rect x="0.25" y="0.4375" width="43" height="43" rx="21.5" stroke="white"/>--> <!--                                        <g>--> <!--                                            <path id="Logo" fill-rule="evenodd" clip-rule="evenodd"--> <!--                                                  d="M27.9911 22.2647C28.1134 21.8528 27.9911 21.5645 27.4202 21.5645H25.5172C25.0278 21.5645 24.8104 21.8253 24.688 22.1137C24.688 22.1137 23.7229 24.5027 22.35 26.0405C21.9015 26.4936 21.7112 26.6309 21.4665 26.6309C21.3442 26.6309 21.1675 26.4936 21.1675 26.0817V22.2647C21.1675 21.7704 21.0315 21.5645 20.6237 21.5645H17.6333C17.3343 21.5645 17.144 21.7979 17.144 22.0038C17.144 22.4706 17.8236 22.5805 17.9052 23.8711V26.6995C17.9052 27.3174 17.7964 27.4272 17.5518 27.4272C16.9129 27.4272 15.3361 25.0382 14.4118 22.2922C14.2215 21.7841 14.0448 21.5645 13.5555 21.5645H11.6525C11.1087 21.5645 11 21.8253 11 22.1137C11 22.6217 11.6389 25.148 14.004 28.4844C15.5808 30.7636 17.7964 31.9994 19.8082 31.9994C21.0179 31.9994 21.1675 31.7248 21.1675 31.2579V29.5279C21.1675 28.9787 21.2762 28.8689 21.6704 28.8689C21.9558 28.8689 22.4316 29.0062 23.5598 30.1046C24.8511 31.409 25.0686 31.9994 25.789 31.9994H27.692C28.2358 31.9994 28.5076 31.7248 28.3445 31.1893C28.1678 30.6538 27.5561 29.8712 26.7405 28.9375C26.292 28.4021 25.6259 27.8391 25.4356 27.5508C25.1502 27.1801 25.2317 27.0153 25.4356 26.6995C25.4356 26.6858 27.76 23.3906 27.9911 22.2647Z"--> <!--                                                  fill="white"/>--> <!--                                            <g id="hr">--> <!--                                                <path d="M28.6002 18.087V15.1653C28.6002 14.2348 27.9182 13.6522 26.8451 13.6522C26.0929 13.6522 25.451 13.9739 25.0799 14.5044V12H24.0469V18.087H25.0799V15.8261C25.0799 15.0348 25.7117 14.4783 26.4539 14.4783C27.156 14.4783 27.5571 14.8435 27.5571 15.4696V18.087H28.6002Z"--> <!--                                                      fill="white"/>--> <!--                                                <path d="M32.5822 14.5392L32.7426 13.7044C32.6122 13.6696 32.4819 13.6522 32.3214 13.6522C31.6695 13.6522 31.1781 14.0087 30.9173 14.5044V13.7739H29.8843V18.087H30.9173V15.8783C30.9173 15.0957 31.4288 14.4783 32.181 14.4783C32.3415 14.4783 32.4718 14.5044 32.5822 14.5392Z"--> <!--                                                      fill="white"/>--> <!--                                            </g>--> <!--                                        </g>--> <!--                                    </g>--> <!--                                    <defs>--> <!--                                        <clipPath id="clip0_352_2296">--> <!--                                            <rect width="44" height="44" fill="white"/>--> <!--                                        </clipPath>--> <!--                                    </defs>--> <!--                                </svg>--> <!--                            </a>--> <!--                        </li>-->
        <li class="footer__social-item"><a class="footer__social-link" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://rutube.ru/channel/25858674/" target="_blank" rel="nofollow">
          <svg width="44" height="44" viewbox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_352_2301)">
            <rect x="0.25" y="0.4375" width="43" height="43" rx="21.5" stroke="white" />
            <path d="M26.9955 23.7204C28.3331 22.6587 29.1915 21.2061 29.1915 19.3828V18.5897C29.1915 15.388 26.5539 13.0355 23.3015 13.0355L14 13L14.0056 30.9659L18.3989 31V24.9021H22.9146L25.8582 31H31L26.9955 23.7204ZM24.7022 19.1649C24.7022 20.4398 23.6515 21.1635 22.3558 21.1635H18.3991V16.849H22.3558C23.6515 16.849 24.7022 17.7447 24.7022 19.02V19.1649Z" fill="white" />
           </g> <defs>
            <clippath id="clip0_352_2301">
             <rect width="44" height="44" fill="white" />
            </clippath>
           </defs>
          </svg></a></li>
        <li class="footer__social-item"><a class="footer__social-link" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://habr.com/ru/company/solarsecurity/" target="_blank" rel="nofollow">
          <svg width="44" height="44" viewbox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_352_2304)">
            <rect x="0.25" y="0.4375" width="43" height="43" rx="21.5" stroke="white" />
            <path d="M25.5329 13V20.382H18.6776V13H15V31H18.6776V23.7651H25.5329V31H29.2105V13H25.5329Z" fill="white" />
           </g> <defs>
            <clippath id="clip0_352_2304">
             <rect width="44" height="44" fill="white" />
            </clippath>
           </defs>
          </svg></a></li>
       </ul>
      </div>
     </div>
     <div class="footer-form" id="subscriptions-4rays">
      <p class="title-h2 footer-form__title">Подпишитесь на рассылку Solar 4RAYS</p>
      <p class="text footer-form__prev-text">Будьте в курсе актуальных киберугроз и способов противостоять им</p>
      <script>if (window.location.hash != '' && window.location.hash != '#') top.BX.ajax.history.checkRedirectStart('bxajaxid', '6159c9acb3df478b693b344288809bbc')</script>
      <div id="comp_6159c9acb3df478b693b344288809bbc">
       <form class="form footer-form__form js-footer-form" name="4rays_subscribe" action="/solar-4rays/blog/4329/" method="POST" enctype="multipart/form-data">
        <input type="hidden" name="bxajaxid" id="bxajaxid_6159c9acb3df478b693b344288809bbc_KurokV" value="6159c9acb3df478b693b344288809bbc"><input type="hidden" name="AJAX_CALL" value="Y">
        <script type="text/javascript">
function _processform_KurokV(){
	if (BX('bxajaxid_6159c9acb3df478b693b344288809bbc_KurokV'))
	{
		var obForm = BX('bxajaxid_6159c9acb3df478b693b344288809bbc_KurokV').form;
		BX.bind(obForm, 'submit', function() {BX.ajax.submitComponentForm(this, 'comp_6159c9acb3df478b693b344288809bbc', true)});
	}
	BX.removeCustomEvent('onAjaxSuccess', _processform_KurokV);
}
if (BX('bxajaxid_6159c9acb3df478b693b344288809bbc_KurokV'))
	_processform_KurokV();
else
	BX.addCustomEvent('onAjaxSuccess', _processform_KurokV);
</script><input type="hidden" name="sessid" id="sessid_4" value="1cc7f2e199563f9c2cfab27899d99725"><input type="hidden" name="WEB_FORM_ID" value="115"> <input type="hidden" name="form_text_1112" value="" id="utm_source"> <input type="hidden" name="form_text_1113" value="" id="utm_medium"> <input type="hidden" name="form_text_1114" value="" id="utm_campaign"> <input type="hidden" name="form_text_1115" value="" id="utm_term"> <input type="hidden" name="form_text_1116" value="" id="reff"> <input type="hidden" name="form_text_1117" value="https://rt-solar.ru/solar-4rays/blog/4329/"> <input type="hidden" name="form_text_1118" class="client-id-ga" value=""> <input type="hidden" name="form_text_1119" class="client-id-ym" value=""> <input type="hidden" name="form_text_1120" class="ga-counter-id" value=""> <input type="hidden" name="form_text_1121" class="ym-counter-id" value=""> <input type="hidden" name="recaptcha_token" value="">
        <div class="form__item"><input class="form__input" id="subscribe__user-name" type="text" name="form_text_1937" required> <label class="form__label" for="subscribe__user-name">Имя Фамилия</label><span class="form__border"></span>
        </div>
        <div class="form__item callback__item-email"><input class="form__input" id="subscribe__user-mail" type="email" name="form_text_1938" required> <label class="form__label" for="subscribe__user-mail">Email</label><span class="form__border"></span>
        </div>
        <div class="form__item form__item-checkbox"><label class="form__label-checkbox"> <input class="form__checkbox visually-hidden" type="checkbox" name="personal_data" required><span class="form__fake-checked"></span><span class="form__checkbox-text">Я даю <a href="https://1-rt--solar-ru.translate.goog/upload/docs/sog_1_PDN.docx?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">согласие</a> на обработку своих данных согласно <a href="https://1-rt--solar-ru.translate.goog/about_company/information/pd/ppopd.pdf?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">политике обработки персональных данных.</a></span> </label>
        </div>
        <div class="form__item form__item-submit"><input type="submit" name="web_form_submit" value="Подписаться на рассылку" class="btn btn_orange form__submit" style="cursor: pointer;">
        </div>
       </form>
      </div>
      <script>if (top.BX.ajax.history.bHashCollision) top.BX.ajax.history.checkRedirectFinish('bxajaxid', '6159c9acb3df478b693b344288809bbc');</script>
      <script>top.BX.ready(BX.defer(function() {window.AJAX_PAGE_STATE = new top.BX.ajax.component('comp_6159c9acb3df478b693b344288809bbc'); top.BX.ajax.history.init(window.AJAX_PAGE_STATE);}))</script>
     </div>
     <div class="footer__copyright">
      <p class="text footer__text">2015-<span class="js-current-year">2023</span> © ООО «СОЛАР СЕКЬЮРИТИ» — системы и средства информационной безопасности и защиты данных. Продолжая использовать наш сайт, вы даете согласие на обработку файлов <a class="link link_orange" href="https://1-rt--solar-ru.translate.goog/about_company/information/cookie/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Cookies</a> и других пользовательских данных в соответствии с <a class="link link_orange" href="https://1-rt--solar-ru.translate.goog/about_company/information/legal/?_x_tr_sl=en&amp;_x_tr_tl=es&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp&amp;_x_tr_enc=1">Политикой конфиденциальности </a> .</p>
      <p class="text footer__text">Наш сайт защищен с помощью reCAPTCHA и соответствует <a class="link link_orange" rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://policies.google.com/privacy" target="_blank">Политике конфиденциальности </a> и <a class="link link_orange" rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=es&amp;hl=en&amp;client=webapp&amp;u=https://policies.google.com/terms" target="_blank"> Условиям использования </a> Google.</p>
     </div>
    </div>
   </div>
  </footer>
  <script>function gtElInit() {var lib = new google.translate.TranslateService();lib.translatePage('en', 'es', function () {});}</script>
  <script src="https://translate.google.com/translate_a/element.js?cb=gtElInit&amp;hl=en&amp;client=wt" type="text/javascript"></script>
 </body>
</html>