1/33
Analysis of Suspected Lazarus Attacks Against South
Korea
mp-weixin-qq-com.translate.goog/s/w-KF5HUNe8-KlmFl6zLkZw
Antiy CERT Antiy Group 2022-11-01 12:47 Posted in Beijing

01
Overview
Recently, Antiy CERT discovered an attack activity against South Korea. The title of the
decoy document is "Sogang KLEC.docx" (Sogang University Korean Language Education
Center.docx). Analyze and judge the obtained samples and associated malicious payloads,
and finally associate them with the Lazarus organization.
Lazarus organization, also known as HIDDEN COBRA, APT38, Zinc, Guardians of Peace,
etc., is one of the most active APT organizations in the peninsula region. The
organization's attack targets involve dozens of countries such as Poland, Chile, the United
States, Mexico, Brazil, etc., and carry out targeted attacks on financial institutions and
individuals such as banks and Bitcoin exchanges to obtain economic benefits. It is the
largest financial institution in the world. one of the threats. In addition, the group also
infiltrated institutions and enterprises such as aerospace, COVID-19 vaccine technology,
government, media, etc. to steal important information and carry out sabotage and
extortion.

0 2
Attack process
The attack flow of this attack is roughly as follows:
1. Using template injection, wait for the decoy document to be opened and download the
malicious template constructed by the attacker to the host for execution.
2. The macro code in the template requests the specified URL, downloads the malicious
payload and injects it into WINWORD.exe for execution.
3. The downloaded malicious payload is mainly used to release the download tool
IEUpdate.exe and execute it, and add it to the registry RUN for persistence.
4. After IEUpdate.exe is executed, it sends a message to obtain the C2 used for subsequent
communication, and downloads different malicious payloads for execution according to
the returned information.
5. There are two known payloads, hvncengine.dll and shellengine.dll, which are used to
communicate with C2 for remote control.
2/33
Figure 2-1 Schematic diagram of the attack flow

03
Sample analysis
3.1 Decoy documents

Table 3-1 Decoy documents
virus name
Trojan/Generic.ASHMacro.7D6
original file name
Sogang KLEC.docx
MD5
f1a61ee026eac8583ee840d297792478
File size
13.25 MB (13889306 bytes)
file format
Office Open XML Document
Exploiting Vulnerabilities
none
release method
remote template injection
creation time
2022-04-06 8:40:00 UTC
Last edit time
2022-08-05 2:40:00 UTC
creator
none
last saver
exciting
3/33
Text national language
ko-KR
VT first upload time
2022-08-16 21:05:35 UTC
VT test results
16/65

Through the correlation function of the public intelligence platform, the download link of
the decoy document was found. The information indicates that the decoy document was
downloaded from the large attachment storage site provided by Naver Mail. It is
speculated that the attacker may send phishing emails through Naver Mail to attack.
Naver Mail is known to be an email service provided by the South Korean internet group
Naver Corporation.
Figure 3‑1 Decoy document download link

SaniTOX is a security protection software from South Korea's Jiransecurity company. The
decoy document imitates SaniTOX to induce victims to enable macros. The main content
of the malicious document is as follows.
Figure 3-2 The main content of the decoy document of this attack

After correlating the content of the document body, it is found that the body content of
the decoy document appears not for the first time.
4/33
Figure 3‑3 The main content of the decoy document in past attacks 

The attacker uses Word template injection to download and execute the malicious
template after the victim opens the decoy document. The address of the template is
http://23.106.160.173/temp2.dotm.
Figure 3-4 Remote template link

3.2 Template file

Table 3-2 Template file
virus name
Trojan/Generic.ASMacro.36F1B
original file name
D5583E63.dotm
MD5
8D7C3F3C56AD3069908901790ADFA826
File size
68.12KB (69755 bytes)
file format
Office Open XML Document
Exploiting Vulnerabilities
none
release method
macro documentation
[1]
5/33
creation time
2022-07-31 2:45:00 UTC
Last edit time
2022-08-03 14:48:00 UTC
creator
exciting
last saver
exciting
VT first upload time
2022-08-16 21:13:22 UTC
VT test results
37/65

The template contains malicious macro code that executes automatically when the
document is opened. The main function of the macro code is to download malicious
payloads. If the download is successful, the downloaded malicious payloads will be
injected into the Winword program for execution.
Figure 3‑5 Download malicious payload

This function injects the downloaded malicious payload into WinWord for execution.
6/33
Figure 3-6 Injection function

The malicious payload injected into the Winword process will release the IEUpdate.exe
and error.log files under %LocalAppData%\Microsoft\PlayReady, and then bypass UAC
through fodhelper.exe to elevate the permissions of IEUpdate.exe to execute, in the
error.log file Some URL links "s/ucnpe74wo87d3mm/server.txt?dl=0" that need to be
accessed later are recorded.
Figure 3-7 The file released by the malicious payload and the content in error.log

Modify the registry startup item to implement the persistence function.
7/33
Figure 3‑8 Add the IEUpdate.exe file to the registry RUN

3.3 IEUpdate.exe download tool

Table 3-3 Binary executable files
virus name
Trojan/Generic.ASMalwS.2D
original file name
IEUpdate.exe
MD5
c073012bc50b6a4f55f8edcce294a0b4
processor architecture
Intel 386 or later, and compatibles
File size
92.00KB (94208 bytes)
file format
Win32 EXE
timestamp
2022-08-03 03:27:06 UTC
digital signature
none
Packing type
none
compiled language
Microsoft Visual C++ v.11 - 2012
VT first upload time
2022-08-16 21:13:22 UTC
VT test results
49/72

First, determine whether the path you are in contains ":\myapp.exe", and if so, exit.
8/33
Figure 3-9 Determine the path you are in

Set the delay time through sleep to determine whether the delay time takes effect, so as to
bypass part of the sandbox that modifies the sleep time.
Figure 3‑10 Sandbox detection

Obtain the device description information of the main hard disk, and concatenate it with
"VDEVICE". The concatenated string is hashed with CRC and then concatenated with "0".
The format is "0+CRC hashed value".
Figure 3-11 Obtain host information and generate host ID

Determine whether it has administrator privileges by creating a directory under the
system directory.
9/33
Figure 3-12 Permission Judgment

Get the version information of the operating system.
Figure 3-13 Obtaining OS version information

Obtain a process snapshot and determine whether the currently running process contains
"v3l4sp.exe", "AYAgent.aye", and "IEUpdate.exe". Among them, "v3l4sp.exe" is a
subprogram of the free antivirus software V3 Lite of the Korean company AhnLab, and
"AYAgent.aye" is a part of the Internet security suite ALYac of the Korean company
ESTsoft.
Figure 3-14 Detection of designated anti-virus software

If the path is "%LocalAppData%\Microsoft\PlayReady\IEUpdate.exe" and the process ID
does not match the current process, close the previous IEUpdate.exe process.
10/33
Figure 3-15 Close the previous process

Set the flag according to whether "/s" and "/a" are included in the parameters of cmdline,
and select different branches to execute according to the previously set administrator
permission flag.
Figure 3-16 Set the mark according to the parameter

Determine whether the previous privilege escalation operation was successful. If you have
administrator rights, it will add itself to the Windows Defender exclusion list via
PowerShell commands.
11/33
Figure 3‑17 Add this file to Windows Defender whitelist

If you are not an administrator, create a new thread and execute it in a loop, as shown
below.
Figure 3-18 Creating a thread

The thread creates another thread function, which is used to communicate with the C2.
First, splicing "dl.dropboxusercontent.com" with the content obtained from the error.log
file, and obtaining the C2 address of the next communication from the URL formed after
splicing.
Figure 3‑19 Obtaining the C2 address from Dropbox

12/33
Then return the operating system version information, whether there is a specified
antivirus software, and the previously generated uid as the online package.
Figure 3-20 Constructing the online package

The online package return function will send the collected information to post2.php.
Figure 3-21 Sending an online package

Then receive data from the spliced ​​URL, process the data, and obtain the content after the
third "%" in the data, and use "\r" and "\n" as the terminators. This content will serve as
the resource address for subsequent download URLs. Get the Arabic numerals of
numbers 0-9, and get the instruction ID after processing.
13/33
Figure 3-22 Sending a request and receiving a command from C2

Execute the issued command cyclically, and will judge whether to repeat the execution.
14/33
Figure 3-23 Execute the command issued by C2

Download the dll file and select the export function to execute.
15/33
Figure 3-24 Download subsequent load execution

The information of the above samples was searched through the public intelligence
platform, and two files were found in the PCAP file associated with the decoy document,
which should be malicious payloads downloaded by IEUpdate.exe, and they have the
same return data structure and decryption algorithm.
Table 3-4 Return data structure
16/33
offset to
header
length
(byte)
explain
0x0
0xC
Fixed data, decrypted as )(*&POIU:LKJ
0xC
0x8
Fixed data, replaceable with received data on demand
0x14
0x4
This part of the data is determined according to the content
of the execution
0x18
0x4
The length of the returned data (size)
0x1C
size
returned data
0x1C+size
0xC
Fixed data, decrypted to ^%$#YTREHGFD

During the process of returning the file, the data structure of the returned data will be
adjusted appropriately, as shown in the following figure.
Table 3-5 File return data structure
offset to header
length
(byte)
explain
0x0
0xC
Fixed data, decrypted as )(*&POIU:LKJ
0xC
0x8
Fixed data, replaceable with received data on
demand
0x14
0x8
overall file size
0x1C
0x4
file path length
0x20
size1
file path (size1)
0x20+size1
0x8
the position of the current file pointer
0x28+size1
0x4
The size of the current read file content (size2)
17/33
0x2C+size1
size2
read file content
0x2C+size1+size2
0xC
Fixed data, decrypted to ^%$#YTREHGFD

The positions of ")(*&POIU:LKJ" and "^%$#YTREHGFD" on the keyboard are shown in
the figure below.
Figure 3-25 The position of the fixed content in the returned data structure on the
keyboard

3.4 hvncengine.dll hvnc

Table 3-6 Binary executable files
virus name
Trojan/Generic.ASMalwS.2D
original file name
hvncengine.dll
MD5
5beade9f8191c6a9c47050d4e3771b80
processor architecture
Intel 386 or later, and compatibles
File size
77.00KB (78848 bytes)
file format
Win32 DLLs
18/33
timestamp
2022-08-03 03:30:53 UTC
digital signature
none
Packing type
none
compiled language
Microsoft Visual C++ v.7.10 - 11.0 - Visual 2012
VT first upload time
2022-08-16 21:15:12 UTC
VT test results
48/71

There are two exported functions SEEnd and SEStart in the malicious payload. SEEnd is
used to close the socket connection and wait for the thread. SEStart is the main function
of the load, which is used to communicate with the C2 to realize the hvnc function.
After the sample runs, it first generates a string with the host ID like IEUpdate.exe.
Figure 3-26 Obtain host information and generate host ID

Every ten minutes, a malicious function is executed.
Figure 3-27 Setting the interval time

Create a desktop with the above string with the host ID as the name.
19/33
Figure 3-28 Create a new desktop

After entering the thread function, like IEUpdate.exe, read the content in "error.log" and
splicing it with "dl.dropboxusercontent.com", obtain the C2 address through GET request,
and then try to connect through socket.
Figure 3‑29 Get C2 from Dropbox and connect

If the connection is successful, the previously generated host identifier will be sent over
the socket and the current thread's association with the desktop will be set.
20/33
Figure 3-30 Sending a specific string

Receive commands from the server in turn to realize the function of hvnc.
Figure 3-31 Receive command parsing and execution

Different operations are presented according to the issued commands. The reverse
analysis commands and corresponding functions are roughly as follows.
Table 3-7 Commands and corresponding functions
21/33
Order
Function
0x1
Continuously send screenshots
0x2
Stop sending screenshots
0x3
Execute the command line issued
0x5
Simulate keyboard operations
0x6
Simulate mouse operation
0x7
Open explorer.exe and set the taskbar to always be displayed
0x8
start chrome.exe

3.5 shellengine.dll backdoor

Table 3-8 Binary executable files
virus name
Trojan/Generic.ASMalwS.2D
original file name
shellengine.dll
MD5
edaff44ac5242188d427755d2b2aff94
processor architecture
Intel 386 or later, and compatibles
File size
276.50 KB (283136 bytes)
file format
Win32 DLLs
timestamp
2022-08-03 01:49:57 UTC
digital signature
none
22/33
Packing type
none
compiled language
Microsoft Visual C++ v.7.10 - 11.0 - Visual 2012
VT first upload time
2022-08-16 21:15:12 UTC
VT test results
42/71

Collect host information and generate host identifiers.
Figure 3-32 Collect host information and generate host identifier

Create a pipe for communicating with the cmd.exe child process.
23/33
Figure 3‑33 Creating a pipeline

Create a thread and pass the return result of cmd.exe back to C2.
24/33
Figure 3‑34 Obtain the execution result of cmd.exe and return it

Create a thread that communicates with the C2 and is used to implement the main
malicious function.
Figure 3-35 Threads that implement malicious functions

Same as the previous two samples, the content in "error.log" is still read and then spliced ​​
with "dl.dropboxusercontent.com", the C2 for subsequent communication is obtained
from this address, and the socket connection is attempted.
25/33
Figure 3‑36 Get C2 from Dropbox and connect

If a socket connection can be established, it will receive commands from the server and
implement different malicious functions according to the commands.
26/33
Figure 3-37 Implementing different malicious functions according to instructions

Different operations are presented according to the issued commands. The reverse
analysis commands and corresponding functions are roughly as follows.
Table 3-9 Commands and corresponding functions
Order
Function
0x1
According to the received data, change the 8 bytes at offset 0xC of the
returned data structure
0x2
Restart the cmd.exe process or execute the command line through cmd.exe
0x4
Get a list of disks or get a list of subdirectories and file names in a specified
directory
0x6
Get the specified file
0xA
Get screenshot information
0xB
Set a marker to stop taking screenshots
0xD
Simulate mouse clicks
0xE
Simulate mouse movement
0xF
Modify the parameters of image conversion
0x14
Change the 8 bytes at offset 0xC of the return data structure to the data stored
in the sample
0x1E
return chrome key
0x1F
Get the files in the specified directory

04
Traceability analysis
27/33
Through the similarity of pdb paths and the same custom encryption function, it can be
inferred that the three PE files involved in the attack should belong to the same attacker.
According to the high similarity between the VBA code and the IEUpdate.exe download
tool code contained in the template file and the code of the corresponding files in the
previous attack activities of the Lazarus organization, it is speculated that this attack
activity also belongs to the Lazarus organization.
The pdbs of the three files, IEUpdate.exe, hvncengine.dll, and shellengine.dll, are all in
the same directory.
Figure 4‑1 pdb of IEUpdate.exe

Figure 4‑2 pdb of hvncengine.dll

Figure 4‑3 pdb of shellengine.dll
28/33

The custom encryption functions of hvncengine.dll and shellengine.dll are exactly the
same, but the keys used are different. The key of IEUpdate.exe and shellengine.dll is
"LNfYIU", and the key of hvncengine.dll is "WhdeEg".
Figure 4-4 Custom encryption function

The template files with malicious macros and the IEUpdate.exe download tool are mostly
similar to the sample code previously discovered by the Lazarus group.
Figure 4‑5 vba code involved in this attack

Figure 4‑6 VBA code 
[2]
29/33

Figure 4‑7 The download tool code involved in this attack

30/33
Figure 4‑8 Download tool code involved in previous attacks[2]

0 5
Threat Framework Mapping
The ATT&CK framework map of the behavioral technical points of the Lazarus
organization-related attack activities is as follows:
31/33
Figure 5-1 Lazarus organization's attack activity corresponding to the ATT&CK threat
framework map

This series of activities involves a total of 28 technical points in 11 stages in the ATT&CK
framework. The specific behaviors are described in the following table:
Table 5-1 ATT&CK technical behavior description table
ATT&CK
Stage/Category
specific behavior
Notes
resource
development
get infrastructure
Use DropBox to store the C2 address of
subsequent connections
initial visit
Phishing
Speculation may use phishing emails to
spread decoy files
initial visit
watering hole attack
Speculation that decoy files may be spread
through watering hole attacks
implement
Use inter-process
communication
The shellengine.dll backdoor can execute
cmd commands through pipes
implement
induce users to
execute
Induce users to open a decoy document
constructed by the attacker
Persistence
Bootstrap or login with
autostart
Persistence by modifying registry startup
keys
escalation of
rights
Abuse of Elevated
Control Privileges
Bypassing UAC via fodhelper.exe
escalation of
rights
process injection
Inject IEUpdate.exe into the
WINWORD.exe process
defensive
evasion
Abuse of Elevated
Control Privileges
Bypassing UAC via fodhelper.exe
defensive
evasion
Deobfuscate/decode
files or messages
The key string of the sample species is
encrypted by a custom algorithm
32/33
defensive
evasion
weaken defense
mechanisms
Modify Windows Defender's whitelist
defensive
evasion
process injection
Inject IEUpdate.exe into the
WINWORD.exe process
defensive
evasion
template injection
Using template injection to load remote
malicious template execution
defensive
evasion
Virtualization/Sandbox
Escape
Avoid some sandboxes by judging whether
the sleep delay is successful
credential
access
Steal web session
cookies
steal chrome cookies
Find
Discover the
application window
Discover application windows for remote
desktop control
Find
Discover files and
directories
Discover files and directories in the target
machine
Find
discovery process
Discover process information in the target
machine
Find
Query the registry
target machine found
Find
Discover system
information
Discover the system version and other
information of the target machine
Find
Discover system
owner/user
Find the current user of the target machine
Find
find system time
Find the current system time of the target
machine
Find
Virtualization/Sandbox
Escape
Avoid some sandboxes by judging whether
the sleep delay is successful
collect
Collect local system
data
Collect data such as system version,
username, file list, files, etc.
collect
input capture
Capture mouse and keyboard messages
33/33
collect
take screenshot
take screenshot
command and
control
Use application layer
protocols
Use socket to communicate with C2
data exfiltration
Backhaul using C2
channel
The data is also sent back through the C2
channel

06
Summarize
The Lazarus group is the top hacker gang in the peninsula region, focusing on long-term
and persistent cyberattacks against specific targets, with the purpose of stealing funds and
achieving political goals. It is one of the biggest threats to global financial institutions. In
this attack, the Lazarus group used a multi-stage download tool and obtained the C2
address through Dropbox, which made it more difficult to obtain the attack payload. At
the same time, there were behaviors of detecting the designated anti-software
components and sandboxes in the sample, which interfered with the analysis. The sample
also uses fodhelper.exe to bypass UAC to escalate the privileges of malicious processes,
making the attack more difficult to detect by means of process injection and changing the
exclusion list of Windows Defender. The anti-virus software ALyac and Ahnlab detected
in the sample are both popular anti-virus software in South Korea. Combined with the
name of the decoy file "Sogang KLEC.docx" and the pictures in the text of the decoy
document, it can be inferred that this is an attack against South Korea.

References:

[1] 한국인터넷정보센터 (KRNIC)를사칭한정보수집악성이메일주의!! (변종내용추가)
https://blog.alyac.co.kr/4586
[2] Snow and gluttony: Analysis of suspected Lazarus attacks against Korean companies
https://ti.qianxin.com/blog/articles/analysis-of-the-lazarus-group-attacks-on-korean-
companies/




