<!DOCTYPE html>
<html lang="en-GB">

  <head>
    <!-- General meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">

    

    
      <!-- Begin Jekyll SEO tag v2.8.0 -->
<title>BlackMatter Ransomware v2.0 | Chuong Dong</title>
<meta name="generator" content="Jekyll v3.9.5" />
<meta property="og:title" content="BlackMatter Ransomware v2.0" />
<meta name="author" content="Chuong Dong" />
<meta property="og:locale" content="en_GB" />
<meta name="description" content="Malware Analysis Report - BlackMatter Ransomware v2" />
<meta property="og:description" content="Malware Analysis Report - BlackMatter Ransomware v2" />
<link rel="canonical" href="https://cdong1012.github.io//reverse%20engineering/2021/09/05/BlackMatterRansomware/" />
<meta property="og:url" content="https://cdong1012.github.io//reverse%20engineering/2021/09/05/BlackMatterRansomware/" />
<meta property="og:site_name" content="Chuong Dong" />
<meta property="og:image" content="https://cdong1012.github.io//assets/logos/kunal-logo.png" />
<meta property="og:type" content="article" />
<meta property="article:published_time" content="2021-09-05T00:00:00-04:00" />
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content="https://cdong1012.github.io//assets/logos/kunal-logo.png" />
<meta property="twitter:title" content="BlackMatter Ransomware v2.0" />
<meta name="twitter:site" content="@cPeterr" />
<meta name="twitter:creator" content="@Chuong Dong" />
<script type="application/ld+json">
{"@context":"https://schema.org","@type":"BlogPosting","author":{"@type":"Person","name":"Chuong Dong"},"dateModified":"2021-09-05T00:00:00-04:00","datePublished":"2021-09-05T00:00:00-04:00","description":"Malware Analysis Report - BlackMatter Ransomware v2","headline":"BlackMatter Ransomware v2.0","image":"https://cdong1012.github.io//assets/logos/kunal-logo.png","mainEntityOfPage":{"@type":"WebPage","@id":"https://cdong1012.github.io//reverse%20engineering/2021/09/05/BlackMatterRansomware/"},"publisher":{"@type":"Organization","logo":{"@type":"ImageObject","url":"https://cdong1012.github.io//assets/logos/logo-cdong.gif"},"name":"Chuong Dong"},"url":"https://cdong1012.github.io//reverse%20engineering/2021/09/05/BlackMatterRansomware/"}</script>
<!-- End Jekyll SEO tag -->

    

    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#242e2b"/>

    
      
<style>/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */@import url("https://fonts.googleapis.com/css?family=Karla:700,700");@import url("https://fonts.googleapis.com/css?family=Space Mono:400,700");html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:bold}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}*{box-sizing:border-box}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}html,body{height:100%}a img{border:none}blockquote{quotes:none}blockquote:before,blockquote:after{content:'';content:none}table{border-collapse:collapse;border-spacing:0}caption,th,td{text-align:left;font-weight:normal;vertical-align:middle}html{font-size:75%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}@media screen and (min-width: 40em){html{font-size:87.5%}}@media screen and (min-width: 50em){html{font-size:93.75%}}@media screen and (min-width: 64em){html{font-size:106.25%}}@media screen and (min-width: 100em){html{font-size:118.75%}}body{font-size:1.3333333333rem;font-family:Space Mono, monospace;font-style:normal;font-weight:400;line-height:2rem}@media screen and (min-width: 40em){body{font-size:1.2142857143rem}}@media screen and (min-width: 50em){body{font-size:1.2rem}}@media screen and (min-width: 64em){body{font-size:1.1764705882rem}}@media screen and (min-width: 100em){body{font-size:1.1578947368rem}}a{color:#45a29e;text-decoration:none;transition:color .1s, background-color .1s}a:hover,a:active,a:focus{color:#66fcf1;text-decoration:none}.typeset p a,.typeset li a{background-image:linear-gradient(to bottom, transparent 50%, #45a29e 50%);background-position:0 93%;background-repeat:repeat-x;background-size:100% 0.15rem;text-shadow:0.1rem 0 #161820,0.15rem 0 #161820,-0.1rem 0 #161820,-0.15rem 0 #161820}.typeset p a:hover,.typeset p a:active,.typeset p a:focus,.typeset li a:hover,.typeset li a:active,.typeset li a:focus{background-image:linear-gradient(to bottom, transparent 50%, #66fcf1 50%)}.typeset p{line-height:2rem;margin-bottom:1.49999rem;padding-top:.50001rem;font-feature-settings:'kern', 'onum', 'liga'}@media screen and (min-width: 40em){.typeset p{margin-bottom:1.4553471429rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset p{margin-bottom:1.44999rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset p{margin-bottom:1.4411664706rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset p{margin-bottom:1.4342005263rem;padding-top:.5657994737rem}}.typeset h1,.typeset h2,.typeset h3,.typeset h4,.typeset h5,.typeset h6{color:#66fcf1;font-family:"Karla", monospace;font-feature-settings:'dlig', 'liga', 'lnum', 'kern';font-style:normal;font-weight:700}.typeset h1,.typeset .alpha{line-height:3rem;font-size:2.3333333333rem;margin-bottom:.37499rem;padding-top:.62501rem}@media screen and (min-width: 40em){.typeset h1,.typeset .alpha{font-size:2.1428571429rem;margin-bottom:.3035614286rem;padding-top:.6964385714rem}}@media screen and (min-width: 50em){.typeset h1,.typeset .alpha{font-size:2.1333333333rem;margin-bottom:.29999rem;padding-top:.70001rem}}@media screen and (min-width: 64em){.typeset h1,.typeset .alpha{font-size:2.3529411765rem;margin-bottom:.3823429412rem;padding-top:.6176570588rem}}@media screen and (min-width: 100em){.typeset h1,.typeset .alpha{font-size:2.6315789474rem;margin-bottom:.4868321053rem;padding-top:.5131678947rem}}.typeset h2,.typeset .beta{line-height:3rem;font-size:2.0833333333rem;margin-bottom:.28124rem;padding-top:.71876rem}@media screen and (min-width: 40em){.typeset h2,.typeset .beta{font-size:1.9rem;margin-bottom:.21249rem;padding-top:.78751rem}}@media screen and (min-width: 50em){.typeset h2,.typeset .beta{font-size:1.8733333333rem;margin-bottom:.20249rem;padding-top:.79751rem}}@media screen and (min-width: 64em){.typeset h2,.typeset .beta{font-size:2.0882352941rem;margin-bottom:.2830782353rem;padding-top:.7169217647rem}}@media screen and (min-width: 100em){.typeset h2,.typeset .beta{font-size:2.3105263158rem;margin-bottom:.3664373684rem;padding-top:.6335626316rem}}.typeset h3,.typeset .gamma{line-height:3rem;font-size:1.8666666667rem;margin-bottom:.19999rem;padding-top:.80001rem}@media screen and (min-width: 40em){.typeset h3,.typeset .gamma{font-size:1.7142857143rem;margin-bottom:.1428471429rem;padding-top:.8571528571rem}}@media screen and (min-width: 50em){.typeset h3,.typeset .gamma{font-size:1.7066666667rem;margin-bottom:.13999rem;padding-top:.86001rem}}@media screen and (min-width: 64em){.typeset h3,.typeset .gamma{font-size:1.7647058824rem;margin-bottom:.1617547059rem;padding-top:.8382452941rem}}@media screen and (min-width: 100em){.typeset h3,.typeset .gamma{font-size:1.8578947368rem;margin-bottom:.1967005263rem;padding-top:.8032994737rem}}.typeset h4,.typeset .delta{line-height:2rem;font-size:1.6666666667rem;margin-bottom:-.37501rem;padding-top:.37501rem}@media screen and (min-width: 40em){.typeset h4,.typeset .delta{font-size:1.5214285714rem;margin-bottom:-.4294742857rem;padding-top:.4294742857rem}}@media screen and (min-width: 50em){.typeset h4,.typeset .delta{font-size:1.5rem;margin-bottom:-.43751rem;padding-top:.43751rem}}@media screen and (min-width: 64em){.typeset h4,.typeset .delta{font-size:1.5705882353rem;margin-bottom:-.4110394118rem;padding-top:.4110394118rem}}@media screen and (min-width: 100em){.typeset h4,.typeset .delta{font-size:1.6368421053rem;margin-bottom:-.3861942105rem;padding-top:.3861942105rem}}.typeset h5,.typeset .epsilon{line-height:2rem;font-size:1.4916666667rem;margin-bottom:-.440635rem;padding-top:.440635rem}@media screen and (min-width: 40em){.typeset h5,.typeset .epsilon{font-size:1.3714285714rem;margin-bottom:-.4857242857rem;padding-top:.4857242857rem}}@media screen and (min-width: 50em){.typeset h5,.typeset .epsilon{font-size:1.3666666667rem;margin-bottom:-.48751rem;padding-top:.48751rem}}@media screen and (min-width: 64em){.typeset h5,.typeset .epsilon{font-size:1.3235294118rem;margin-bottom:-.5036864706rem;padding-top:.5036864706rem}}@media screen and (min-width: 100em){.typeset h5,.typeset .epsilon{font-size:1.3157894737rem;margin-bottom:-.5065889474rem;padding-top:.5065889474rem}}.typeset h6,.typeset .zeta{line-height:2rem;font-size:1.3333333333rem;margin-bottom:-.50001rem;padding-top:.50001rem}@media screen and (min-width: 40em){.typeset h6,.typeset .zeta{font-size:1.2142857143rem;margin-bottom:-.5446528571rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset h6,.typeset .zeta{font-size:1.2rem;margin-bottom:-.55001rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset h6,.typeset .zeta{font-size:1.1764705882rem;margin-bottom:-.5588335294rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset h6,.typeset .zeta{font-size:1.1578947368rem;margin-bottom:-.5657994737rem;padding-top:.5657994737rem}}.typeset ul,.typeset ol{line-height:2rem;margin-bottom:1.49999rem;padding-top:.50001rem}@media screen and (min-width: 40em){.typeset ul,.typeset ol{margin-bottom:1.4553471429rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset ul,.typeset ol{margin-bottom:1.44999rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset ul,.typeset ol{margin-bottom:1.4411664706rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset ul,.typeset ol{margin-bottom:1.4342005263rem;padding-top:.5657994737rem}}.typeset ul li,.typeset ol li{font-feature-settings:'kern', 'onum', 'liga';margin-left:2rem}@media screen and (min-width: 40em){.typeset ul li,.typeset ol li{margin-left:0}}.typeset ul li ol,.typeset ul li ul,.typeset ol li ol,.typeset ol li ul{padding-top:1rem;margin-bottom:1rem;margin-left:2rem}.typeset ol{list-style-type:none}.typeset ol li{counter-increment:top-level}.typeset ol li:before{content:counter(top-level) ".";font-feature-settings:'lnum', 'tnum';margin-left:-3rem;position:absolute;text-align:right;width:2em}.typeset ol li ul li:before{content:''}.typeset ol li ul li ol li{counter-increment:alt-level}.typeset ol li ul li ol li:before{content:counter(alt-level) "."}.typeset ol li ol li{counter-increment:sub-level}.typeset ol li ol li:before{content:counter(top-level) "." counter(sub-level)}.typeset ol li ol li ul li:before{content:''}.typeset ol li ol li ol li{counter-increment:sub-sub-level}.typeset ol li ol li ol li:before{content:counter(top-level) "." counter(sub-level) "." counter(sub-sub-level)}.typeset dl{line-height:2rem;margin-bottom:1.49999rem;padding-top:.50001rem}@media screen and (min-width: 40em){.typeset dl{margin-bottom:1.4553471429rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset dl{margin-bottom:1.44999rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset dl{margin-bottom:1.4411664706rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset dl{margin-bottom:1.4342005263rem;padding-top:.5657994737rem}}.typeset dl dt,.typeset dl dd{font-feature-settings:'kern', 'onum', 'liga';margin-left:2rem}@media screen and (min-width: 40em){.typeset dl dt,.typeset dl dd{margin-left:0}}.typeset dl dt{font-weight:700}.typeset dl dd+dt{padding-top:1rem}.typeset table{line-height:2rem;font-size:1.1916666667rem;margin-bottom:-.553135rem;padding-top:.553135rem;font-family:"Karla", monospace;font-feature-settings:'liga', 'lnum', 'tnum', 'kern';font-style:normal;font-weight:400;width:100%}@media screen and (min-width: 40em){.typeset table{font-size:1.0928571429rem;margin-bottom:-.5901885714rem;padding-top:.5901885714rem}}@media screen and (min-width: 50em){.typeset table{font-size:1.0866666667rem;margin-bottom:-.59251rem;padding-top:.59251rem}}@media screen and (min-width: 64em){.typeset table{font-size:.9941176471rem;margin-bottom:-.6272158824rem;padding-top:.6272158824rem}}@media screen and (min-width: 100em){.typeset table{font-size:.9263157895rem;margin-bottom:-.6526415789rem;padding-top:.6526415789rem}}.typeset table thead th{line-height:2rem;font-size:1.3333333333rem;margin-bottom:-.50001rem;padding-top:.50001rem;padding-bottom:1px}@media screen and (min-width: 40em){.typeset table thead th{font-size:1.2142857143rem;margin-bottom:-.5446528571rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){.typeset table thead th{font-size:1.2rem;margin-bottom:-.55001rem;padding-top:.55001rem}}@media screen and (min-width: 64em){.typeset table thead th{font-size:1.1764705882rem;margin-bottom:-.5588335294rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){.typeset table thead th{font-size:1.1578947368rem;margin-bottom:-.5657994737rem;padding-top:.5657994737rem}}.typeset b,.typeset strong,.typeset .bold{font-weight:700}.typeset em,.typeset i,.typeset .italic{font-style:italic}.typeset small,.typeset .caption{font-size:1.0666666667rem;font-family:"Karla", monospace;font-style:normal;font-weight:400}@media screen and (min-width: 40em){.typeset small,.typeset .caption{font-size:.9714285714rem}}@media screen and (min-width: 50em){.typeset small,.typeset .caption{font-size:.96rem}}@media screen and (min-width: 64em){.typeset small,.typeset .caption{font-size:.8823529412rem}}@media screen and (min-width: 100em){.typeset small,.typeset .caption{font-size:.8210526316rem}}.typeset small{line-height:1rem}.typeset .caption{line-height:2rem;margin-bottom:1.39999rem;padding-top:.60001rem;color:#529e99}@media screen and (min-width: 40em){.typeset .caption{margin-bottom:1.3642757143rem;padding-top:.6357242857rem}}@media screen and (min-width: 50em){.typeset .caption{margin-bottom:1.35999rem;padding-top:.64001rem}}@media screen and (min-width: 64em){.typeset .caption{margin-bottom:1.3308723529rem;padding-top:.6691276471rem}}@media screen and (min-width: 100em){.typeset .caption{margin-bottom:1.3078847368rem;padding-top:.6921152632rem}}.typeset h1+.caption,.typeset .alpha+.caption,.typeset h2+.caption,.typeset .beta+.caption,.typeset h3+.caption,.typeset .gamma+.caption{margin-top:-1rem}.typeset .delta+.caption,.typeset .epsilon+.caption,.typeset .zeta+.caption{margin-top:0rem}.typeset blockquote p{border-left:0.15rem solid #45a29e;font-style:italic;padding-left:1rem;margin-bottom:1.99999rem;padding-bottom:.50001rem}@media screen and (min-width: 40em){.typeset blockquote p{margin-bottom:1.9107042857rem;padding-bottom:.5446528571rem}}@media screen and (min-width: 50em){.typeset blockquote p{margin-bottom:1.89999rem;padding-bottom:.55001rem}}@media screen and (min-width: 64em){.typeset blockquote p{margin-bottom:1.8823429412rem;padding-bottom:.5588335294rem}}@media screen and (min-width: 100em){.typeset blockquote p{margin-bottom:1.8684110526rem;padding-bottom:.5657994737rem}}@media screen and (min-width: 40em){.typeset blockquote{margin-left:-1rem}}.typeset hr{background-image:linear-gradient(to bottom, transparent 50%, #529e99 50%);background-position:0 50%;background-repeat:repeat-x;background-size:100% 0.15rem;border:0;margin:0;padding-bottom:3rem;padding-top:0.5rem}.typeset code,.typeset pre{background-color:#1f2833;font-family:Menlo, monospace}.typeset pre{display:block;margin-bottom:2rem;padding:1rem;white-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word}.typeset code{font-size:1.0666666667rem;line-height:1rem}@media screen and (min-width: 40em){.typeset code{font-size:.9714285714rem}}@media screen and (min-width: 50em){.typeset code{font-size:.96rem}}@media screen and (min-width: 64em){.typeset code{font-size:.8823529412rem}}@media screen and (min-width: 100em){.typeset code{font-size:.8210526316rem}}.typeset .upper{font-kerning:normal;letter-spacing:0.1rem;text-transform:uppercase}.typeset .small-caps{font-feature-settings:'smcp', 'kern';font-kerning:normal;letter-spacing:0.1rem}.typeset .lining-numerals{font-feature-settings:'lnum', 'kern'}.typeset .oldstyle-numerals{font-feature-settings:'onum', 'kern'}.hll{background-color:#c510bc}.c{color:#54dbf3;font-style:italic}.err{color:#a61717;background-color:#e3d2d2}.k{color:#c59659;font-weight:bold}.o{color:#c59659;font-weight:bold}.cm{color:#999988;font-style:italic}.cp{color:#999999;font-weight:bold;font-style:italic}.c1{color:#999988;font-style:italic}.cs{color:#999999;font-weight:bold;font-style:italic}.gd{color:#000000;background-color:#fdd}.ge{color:#000000;font-style:italic}.gr{color:#a00}.gh{color:#999}.gi{color:#000000;background-color:#dfd}.go{color:#888}.gp{color:#555}.gs{font-weight:bold}.gu{color:#aaa}.gt{color:#a00}.kc{color:#000000;font-weight:bold}.kd{color:#000000;font-weight:bold}.kn{color:#000000;font-weight:bold}.kp{color:#000000;font-weight:bold}.kr{color:#000000;font-weight:bold}.kt{color:#445588;font-weight:bold}.m{color:#099}.s{color:#fce773}.na{color:teal}.nb{color:#0086B3}.nc{color:#445588;font-weight:bold}.no{color:teal}.nd{color:#3c5d5d;font-weight:bold}.ni{color:purple}.ne{color:#99b898;font-weight:bold}.nf{color:#99b898;font-weight:bold}.nl{color:#99b898;font-weight:bold}.nn{color:#555}.nt{color:#ff847c}.nv{color:teal}.ow{color:#000000;font-weight:bold}.w{color:#bbb}.mf{color:#099}.mh{color:#099}.mi{color:#099}.mo{color:#099}.sb{color:#fce773}.sc{color:#fce773}.sd{color:#fce773}.s2{color:#fce773}.se{color:#fce773}.sh{color:#fce773}.si{color:#773f00}.sx{color:#fce773}.sr{color:#009926}.s1{color:#ff847c}.ss{color:#990073}.bp{color:#999}.vc{color:#2e878a}.vg{color:#2e878a}.vi{color:#2e878a}.il{color:#099}body{background:#161820;color:#efeff0;height:100%;display:flex;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;overflow-x:hidden}.container{width:90%;max-width:1200px;margin:0 auto}.header .nav,.footer .nav{text-align:right}.header .logo,.footer .logo{-webkit-box-flex:0;-webkit-flex:0 0 auto;-moz-box-flex:0;-moz-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto}.header .container,.footer .container{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-flex-direction:row;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;-webkit-justify-content:space-between;-moz-justify-content:space-between;justify-content:space-between;padding:1rem 0}@media screen and (min-width: 40em){.header .container,.footer .container{-webkit-box-align:center;-ms-flex-align:center;-webkit-align-items:center;-moz-align-items:center;align-items:center}}.header .nav{display:flex;flex-direction:column-reverse;align-items:flex-end;justify-content:flex-end;overflow:hidden}.feature{padding-bottom:.4rem;margin-bottom:1.6rem;text-align:center;background:#c5c6c7;background-size:cover;background-position:center}.feature .container{min-height:40vh;max-width:60%;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;-moz-justify-content:center;justify-content:center}.logo{display:inline-block;line-height:0;max-height:7rem;display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;-webkit-align-items:center;-moz-align-items:center;align-items:center}.logo img{max-height:7rem}.nav a{padding:.2rem}.nav--social a{display:inline-block;line-height:1}.small{padding-top:.8rem;color:#529e99;display:inline-block}.footer{background:#161820;color:#529e99}.footer a{color:#529e99}.footer a:hover{color:#161820}.footer .container{-webkit-flex-wrap:wrap;-moz-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.footer .small{padding-top:0}.nav--paginator{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;-webkit-justify-content:space-between;-moz-justify-content:space-between;justify-content:space-between;color:#529e99;text-align:center}.pagination{min-width:20%}.main{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-webkit-flex:1 0 auto;-moz-box-flex:1;-moz-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;-webkit-box-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;-moz-justify-content:flex-start;justify-content:flex-start;margin-bottom:1.6rem}@media screen and (min-width: 40em){.main{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;-moz-justify-content:center;justify-content:center;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-flex-direction:row;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row}}.header,.feature,.footer{-webkit-box-flex:0;-webkit-flex:0 0 auto;-moz-box-flex:0;-moz-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto}@media screen and (min-width: 40em){.content{width:85%}}.share .button{margin-right:.3rem}@media screen and (min-width: 40em){.aside{max-width:20%;margin-left:5%;-webkit-box-flex:1;-webkit-flex:1 0 auto;-moz-box-flex:1;-moz-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;opacity:0.7;transition:opacity .1s}.aside .section{position:sticky;top:0}.aside--left{margin-left:0;margin-right:5%;order:-1}.aside:hover{opacity:1}}.section{margin:0}.list{list-style:none}.list--nav{overflow:hidden;margin-bottom:var(--listHeight, 0)}.list .item--post,.list .item--result,.list .item--category{margin-left:0}@media screen and (min-width: 40em){.item--nav{margin-left:.4rem;display:inline-block}}.item--nav:first-of-type{margin-left:0}.item--current a{color:#529e99}a .icon{transition:fill .1s}a .icon:hover{fill:currentColor}.icon{vertical-align:middle;width:1.1em;height:1.1em;fill:CurrentColor}img{max-width:100%;height:auto}.figure{line-height:0}.figure--left{float:left;padding-right:.8rem}.figure--right{float:right;text-align:right;padding-left:.8rem}.figure--center{text-align:center;clear:both}.video,.map{position:relative;padding-bottom:56.25%;height:0}.video iframe,.map iframe{position:absolute;top:0;left:0;width:100%;height:100%}.map{padding-bottom:70%}.figure,.video,.map,.form{margin-bottom:.8rem}audio,video{width:100%}.form{position:relative}.form__legend{font-style:italic;color:#529e99;position:absolute;overflow:hidden;right:0;clip:rect(0 0 0 0)}button,.button,input[type="text"],input[type="email"],input[type="search"],input[type="submit"],input[type="color"],textarea,select{padding:.6rem 1.2rem;margin-bottom:.6rem;transition:color .1s, background-color .1s, border .1s;line-height:inherit;border:none;box-shadow:none;border-radius:0;-webkit-appearance:none}button .icon,.button .icon,input[type="text"] .icon,input[type="email"] .icon,input[type="search"] .icon,input[type="submit"] .icon,input[type="color"] .icon,textarea .icon,select .icon{margin:0 0 .35rem}input[type="submit"],button,.button{cursor:pointer;display:inline-block;color:#161820;background:#45a29e;transition:box-shadow .1s;will-change:box-shadow;box-shadow:inset 0 0 0 2rem transparent}input[type="submit"]:hover,button:hover,.button:hover{box-shadow:inset 0 0 0 2rem rgba(0,0,0,0.25)}input[type="submit"]:active,input[type="submit"]:focus,button:active,button:focus,.button:active,.button:focus{box-shadow:inset 0 0 0 2rem rgba(0,0,0,0.25)}.button--nav{background:none;color:#45a29e;margin-bottom:0;min-height:4rem;min-width:4rem}@media screen and (min-width: 40em){.button--nav{display:none}}.button--nav:hover,.button--nav:focus{box-shadow:none;color:#66fcf1}a:focus,a:hover:focus,button:focus,button:hover:focus,.button:focus,.button:hover:focus,input:focus,input:hover:focus,textarea:focus,textarea:hover:focus,select:focus,select:hover:focus{outline:solid 0.12rem #45a29e;outline-offset:-.12rem}a:hover:focus{outline:none}input[type="text"],input[type="email"],input[type="search"],input[type="color"],textarea,select{width:100%;border:1px solid #529e99}input[type="text"]:hover,input[type="email"]:hover,input[type="search"]:hover,input[type="color"]:hover,textarea:hover,select:hover{border-color:#efeff0}select{background:#1f2833}textarea{resize:vertical}label{line-height:2rem;margin-bottom:1.49999rem;padding-top:.50001rem}@media screen and (min-width: 40em){label{margin-bottom:1.4553471429rem;padding-top:.5446528571rem}}@media screen and (min-width: 50em){label{margin-bottom:1.44999rem;padding-top:.55001rem}}@media screen and (min-width: 64em){label{margin-bottom:1.4411664706rem;padding-top:.5588335294rem}}@media screen and (min-width: 100em){label{margin-bottom:1.4342005263rem;padding-top:.5657994737rem}}code{padding:.12rem .2rem;color:#66fcf1}pre code{padding:0}.required{color:#fff}::-webkit-input-placeholder{opacity:0.5}::-moz-placeholder{opacity:0.5}:-ms-input-placeholder{opacity:0.5}:-moz-placeholder{opacity:0.5}::selection{background:#66fcf1;color:#161820;text-shadow:none}.typeset a>code{text-shadow:none}.typeset .button,.typeset button{background-image:none;text-shadow:none;color:#161820}.typeset .button:hover,.typeset .button:active,.typeset .button:focus,.typeset button:hover,.typeset button:active,.typeset button:focus{background-image:none;color:#161820}.typeset hr{width:100%}.typeset li>p{padding:0;margin:0}.typeset .nav a{padding-left:0;padding-right:0;margin-left:.2rem;margin-right:.2rem}.typeset pre{white-space:pre;overflow-x:scroll}</style>


    

    
  
    <link rel="icon" type="image/png" href="/assets/logos/16x.png" sizes="16x16">
    <link rel="apple-touch-icon" sizes="16x16" href="/assets/logos/16x.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/32x.png" sizes="32x32">
    <link rel="apple-touch-icon" sizes="32x32" href="/assets/logos/32x.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/96x.png" sizes="96x96">
    <link rel="apple-touch-icon" sizes="96x96" href="/assets/logos/96x.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/120.png" sizes="120x120">
    <link rel="apple-touch-icon" sizes="120x120" href="/assets/logos/120.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/144.png" sizes="144x144">
    <link rel="apple-touch-icon" sizes="144x144" href="/assets/logos/144.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/180.png" sizes="180x180">
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/logos/180.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/512.png" sizes="512x512">
    <link rel="apple-touch-icon" sizes="512x512" href="/assets/logos/512.png">
  
    <link rel="icon" type="image/png" href="/assets/logos/1024.png" sizes="1024x1024">
    <link rel="apple-touch-icon" sizes="1024x1024" href="/assets/logos/1024.png">
  

<link rel="shortcut icon" href="/assets/logos/logo-cdong.gif">


    <!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-168923617-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-168923617-1');
  gtag('config', 'UA-168923617-1', {
    'anonymize_ip': true
  });
</script>


    <!-- Overwrite this file with code you want before the closing head tag -->

    <meta name="google-site-verification" content="fhiMUAXjII16BlWNx0x4tY2MXKJwEcdDVjILoXGUXYA" />
  </head>
  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-168923617-1"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'UA-168923617-1');
  </script>


  <body class="layout-post  blackmatter-ransomware-v2-0">
    <svg xmlns="http://www.w3.org/2000/svg" style="height: 0; position: absolute" xmlns:xlink="http://www.w3.org/1999/xlink">
  <symbol id="codepen" viewbox="0 0 16 16"><path d="M15.988 5.443c-.004-.02-.007-.04-.012-.058l-.01-.033c-.006-.017-.012-.034-.02-.05-.003-.012-.01-.023-.014-.034l-.023-.045-.02-.032-.03-.04-.024-.03c-.01-.013-.022-.026-.034-.038l-.027-.027-.04-.032-.03-.024-.012-.01L8.38.117c-.23-.155-.53-.155-.76 0L.305 4.99.296 5c-.012.007-.022.015-.032.023-.014.01-.027.02-.04.032l-.027.027-.034.037-.024.03-.03.04c-.006.012-.013.022-.02.033l-.023.045-.015.034c-.007.016-.012.033-.018.05l-.01.032c-.005.02-.01.038-.012.058l-.006.03C.002 5.5 0 5.53 0 5.56v4.875c0 .03.002.06.006.09l.007.03c.003.02.006.04.013.058l.01.033c.006.018.01.035.018.05l.015.033c.006.016.014.03.023.047l.02.03c.008.016.018.03.03.042.007.01.014.02.023.03.01.012.02.025.034.036.01.01.018.02.028.026l.04.033.03.023.01.01 7.31 4.876c.116.078.248.117.382.116.134 0 .266-.04.38-.116l7.314-4.875.01-.01c.012-.007.022-.015.032-.023.014-.01.027-.02.04-.032l.027-.027.034-.037.024-.03.03-.04.02-.032.023-.046.015-.033.018-.052.01-.033c.005-.02.01-.038.013-.058 0-.01.003-.02.004-.03.004-.03.006-.06.006-.09V5.564c0-.03-.002-.06-.006-.09l-.007-.03zM8 9.626L5.568 8 8 6.374 10.432 8 8 9.626zM7.312 5.18l-2.98 1.993-2.406-1.61 5.386-3.59v3.206zM3.095 8l-1.72 1.15v-2.3L3.095 8zm1.237.828l2.98 1.993v3.208l-5.386-3.59 2.406-1.61zm4.355 1.993l2.98-1.993 2.407 1.61-5.387 3.59v-3.206zM12.905 8l1.72-1.15v2.3L12.905 8zm-1.237-.827L8.688 5.18V1.97l5.386 3.59-2.406 1.61z" fill-rule="nonzero"></path></symbol>
  <symbol id="dribbble" viewbox="0 0 16 16"><path d="M8 16c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm6.747-6.905c-.234-.074-2.115-.635-4.257-.292.894 2.456 1.258 4.456 1.328 4.872 1.533-1.037 2.624-2.68 2.93-4.58zM10.67 14.3c-.102-.6-.5-2.688-1.46-5.18l-.044.014C5.312 10.477 3.93 13.15 3.806 13.4c1.158.905 2.614 1.444 4.194 1.444.947 0 1.85-.194 2.67-.543zm-7.747-1.72c.155-.266 2.03-3.37 5.555-4.51.09-.03.18-.056.27-.08-.173-.39-.36-.778-.555-1.16C4.78 7.85 1.47 7.807 1.17 7.8l-.003.208c0 1.755.665 3.358 1.756 4.57zM1.31 6.61c.307.005 3.122.017 6.318-.832-1.132-2.012-2.353-3.705-2.533-3.952-1.912.902-3.34 2.664-3.784 4.785zM6.4 1.368c.188.253 1.43 1.943 2.548 4 2.43-.91 3.46-2.293 3.582-2.468C11.323 1.827 9.736 1.176 8 1.176c-.55 0-1.087.066-1.6.19zm6.89 2.322c-.145.194-1.29 1.662-3.816 2.694.16.325.31.656.453.99.05.117.1.235.147.352 2.274-.286 4.533.172 4.758.22-.015-1.613-.59-3.094-1.543-4.257z"></path></symbol>
  <symbol id="designernews" viewbox="0 0 16 16"><path d="M7.514 7.988c0-2.555-1.57-4.287-4.56-4.287H0v8.6h3.016c2.903 0 4.498-1.75 4.498-4.31zM5.37 8c0 1.844-.946 2.642-2.467 2.642H2.13V5.358h.773C4.36 5.358 5.37 6.193 5.37 8zM16 12.3V3.7h-1.98v4.81L10.853 3.7h-2.07v8.6h1.982V7.152l3.39 5.146H16z"></path></symbol>
  <symbol id="facebook" viewbox="0 0 16 16"><path d="M15.117 0H.883C.395 0 0 .395 0 .883v14.234c0 .488.395.883.883.883h7.663V9.804H6.46V7.39h2.086V5.607c0-2.066 1.262-3.19 3.106-3.19.883 0 1.642.064 1.863.094v2.16h-1.28c-1 0-1.195.476-1.195 1.176v1.54h2.39l-.31 2.416h-2.08V16h4.077c.488 0 .883-.395.883-.883V.883C16 .395 15.605 0 15.117 0" fill-rule="nonzero"></path></symbol>
  <symbol id="flickr" viewbox="0 0 16 16"><path d="M0 8c0 2.05 1.662 3.71 3.71 3.71 2.05 0 3.713-1.66 3.713-3.71S5.76 4.29 3.71 4.29C1.663 4.29 0 5.95 0 8zm8.577 0c0 2.05 1.662 3.71 3.712 3.71C14.337 11.71 16 10.05 16 8s-1.662-3.71-3.71-3.71c-2.05 0-3.713 1.66-3.713 3.71z"></path></symbol>
  <symbol id="github" viewbox="0 0 16 16"><path d="M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8"></path></symbol>
  <symbol id="hackernews" viewbox="0 0 16 16"><path d="M0 0v16h16V0H0zm8.92 8.96v3H7.25v-3l-2.75-5h1.96l1.66 3.48L9.7 3.96h1.88l-2.66 5z"></path></symbol>
  <symbol id="instagram" viewbox="0 0 16 16"><path d="M8 0C5.827 0 5.555.01 4.702.048 3.85.088 3.27.222 2.76.42c-.526.204-.973.478-1.417.923-.445.444-.72.89-.923 1.417-.198.51-.333 1.09-.372 1.942C.008 5.555 0 5.827 0 8s.01 2.445.048 3.298c.04.852.174 1.433.372 1.942.204.526.478.973.923 1.417.444.445.89.72 1.417.923.51.198 1.09.333 1.942.372.853.04 1.125.048 3.298.048s2.445-.01 3.298-.048c.852-.04 1.433-.174 1.942-.372.526-.204.973-.478 1.417-.923.445-.444.72-.89.923-1.417.198-.51.333-1.09.372-1.942.04-.853.048-1.125.048-3.298s-.01-2.445-.048-3.298c-.04-.852-.174-1.433-.372-1.942-.204-.526-.478-.973-.923-1.417-.444-.445-.89-.72-1.417-.923-.51-.198-1.09-.333-1.942-.372C10.445.008 10.173 0 8 0zm0 1.44c2.136 0 2.39.01 3.233.048.78.036 1.203.166 1.485.276.374.145.64.318.92.598.28.28.453.546.598.92.11.282.24.705.276 1.485.038.844.047 1.097.047 3.233s-.01 2.39-.048 3.233c-.036.78-.166 1.203-.276 1.485-.145.374-.318.64-.598.92-.28.28-.546.453-.92.598-.282.11-.705.24-1.485.276-.844.038-1.097.047-3.233.047s-2.39-.01-3.233-.048c-.78-.036-1.203-.166-1.485-.276-.374-.145-.64-.318-.92-.598-.28-.28-.453-.546-.598-.92-.11-.282-.24-.705-.276-1.485C1.45 10.39 1.44 10.136 1.44 8s.01-2.39.048-3.233c.036-.78.166-1.203.276-1.485.145-.374.318-.64.598-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276C5.61 1.45 5.864 1.44 8 1.44zm0 2.452c-2.27 0-4.108 1.84-4.108 4.108 0 2.27 1.84 4.108 4.108 4.108 2.27 0 4.108-1.84 4.108-4.108 0-2.27-1.84-4.108-4.108-4.108zm0 6.775c-1.473 0-2.667-1.194-2.667-2.667 0-1.473 1.194-2.667 2.667-2.667 1.473 0 2.667 1.194 2.667 2.667 0 1.473-1.194 2.667-2.667 2.667zm5.23-6.937c0 .53-.43.96-.96.96s-.96-.43-.96-.96.43-.96.96-.96.96.43.96.96z"></path></symbol>
  <symbol id="linkedin" viewbox="0 0 16 16"><path d="M13.632 13.635h-2.37V9.922c0-.886-.018-2.025-1.234-2.025-1.235 0-1.424.964-1.424 1.96v3.778h-2.37V6H8.51V7.04h.03c.318-.6 1.092-1.233 2.247-1.233 2.4 0 2.845 1.58 2.845 3.637v4.188zM3.558 4.955c-.762 0-1.376-.617-1.376-1.377 0-.758.614-1.375 1.376-1.375.76 0 1.376.617 1.376 1.375 0 .76-.617 1.377-1.376 1.377zm1.188 8.68H2.37V6h2.376v7.635zM14.816 0H1.18C.528 0 0 .516 0 1.153v13.694C0 15.484.528 16 1.18 16h13.635c.652 0 1.185-.516 1.185-1.153V1.153C16 .516 15.467 0 14.815 0z" fill-rule="nonzero"></path></symbol>
  <symbol id="medium" viewbox="0 0 16 16"><path d="M11.824 12.628l-.276.45.798.398 2.744 1.372c.15.076.294.11.418.11.278 0 .467-.177.467-.492V5.883l-4.15 6.745zm4.096-8.67c-.004-.003 0-.01-.003-.012l-4.825-2.412c-.06-.03-.123-.038-.187-.044-.016 0-.03-.01-.047-.01-.184 0-.368.092-.467.254l-.24.39-.5.814-1.89 3.08 1.89 3.076.5.813.5.812.59.95 4.71-7.64c.02-.03.01-.06-.02-.08zm-6.27 7.045L7.17 6.97l-.295-.477-.294-.477-.25-.416v4.867l3.32 1.663.5.25.5.25-.5-.813-.5-.813zM.737 1.68L.59 1.608c-.085-.042-.166-.062-.24-.062-.206 0-.35.16-.35.427v10.162c0 .272.2.594.442.716l4.145 2.08c.107.06.208.08.3.08.257 0 .438-.2.438-.53V4.01c0-.02-.012-.04-.03-.047L.738 1.68z"></path></symbol>
  <symbol id="pinterest" viewbox="0 0 16 16"><path d="M8 0C3.582 0 0 3.582 0 8c0 3.39 2.108 6.285 5.084 7.45-.07-.633-.133-1.604.028-2.295.146-.625.938-3.977.938-3.977s-.24-.48-.24-1.188c0-1.11.646-1.943 1.448-1.943.683 0 1.012.513 1.012 1.127 0 .687-.436 1.713-.662 2.664-.19.797.4 1.445 1.185 1.445 1.42 0 2.514-1.498 2.514-3.662 0-1.915-1.376-3.254-3.342-3.254-2.276 0-3.61 1.707-3.61 3.472 0 .687.263 1.424.593 1.825.066.08.075.15.057.23-.06.252-.196.796-.223.907-.035.146-.115.178-.268.107-.998-.465-1.624-1.926-1.624-3.1 0-2.524 1.834-4.84 5.287-4.84 2.774 0 4.932 1.977 4.932 4.62 0 2.757-1.74 4.977-4.153 4.977-.81 0-1.572-.422-1.833-.92l-.5 1.902c-.18.695-.667 1.566-.994 2.097.75.232 1.545.357 2.37.357 4.417 0 8-3.582 8-8s-3.583-8-8-8z" fill-rule="nonzero"></path></symbol>
  <symbol id="rss" viewbox="0 0 16 16"><path d="M12.8 16C12.8 8.978 7.022 3.2 0 3.2V0c8.777 0 16 7.223 16 16h-3.2zM2.194 11.61c1.21 0 2.195.985 2.195 2.196 0 1.21-.985 2.194-2.196 2.194C.984 16 0 15.017 0 13.806c0-1.21.983-2.195 2.194-2.195zM10.606 16h-3.11c0-4.113-3.383-7.497-7.496-7.497v-3.11c5.818 0 10.606 4.79 10.606 10.607z"></path></symbol>
  <symbol id="reddit" viewbox="0 0 16 16"><path d="M1.473 9.368c-.04.185-.06.374-.06.566 0 2.3 2.94 4.173 6.554 4.173 3.613 0 6.553-1.872 6.553-4.173 0-.183-.02-.364-.055-.54l-.01-.022c-.013-.036-.02-.073-.02-.11-.2-.784-.745-1.497-1.533-2.072-.03-.01-.058-.026-.084-.047-.017-.013-.03-.028-.044-.043-1.198-.824-2.91-1.34-4.807-1.34-1.88 0-3.576.506-4.772 1.315-.01.012-.02.023-.033.033-.026.022-.056.04-.087.05-.805.576-1.364 1.293-1.572 2.086 0 .038-.01.077-.025.114l-.005.01zM8 13.003c-1.198 0-2.042-.26-2.58-.8-.116-.116-.116-.305 0-.422.117-.11.307-.11.424 0 .42.42 1.125.63 2.155.63 1.03 0 1.73-.2 2.15-.62.11-.11.3-.11.42 0 .11.12.11.31 0 .43-.54.54-1.38.8-2.58.8zM5.592 7.945c-.61 0-1.12.51-1.12 1.12 0 .608.51 1.102 1.12 1.102.61 0 1.103-.494 1.103-1.102 0-.61-.494-1.12-1.103-1.12zm4.83 0c-.61 0-1.12.51-1.12 1.12 0 .608.51 1.102 1.12 1.102.61 0 1.103-.494 1.103-1.102 0-.61-.494-1.12-1.103-1.12zM13.46 6.88c.693.556 1.202 1.216 1.462 1.94.3-.225.48-.578.48-.968 0-.67-.545-1.214-1.214-1.214-.267 0-.52.087-.728.243zM1.812 6.64c-.67 0-1.214.545-1.214 1.214 0 .363.16.7.43.927.268-.72.782-1.37 1.478-1.92-.202-.14-.443-.22-.694-.22zm6.155 8.067c-3.944 0-7.152-2.14-7.152-4.77 0-.183.016-.363.046-.54-.53-.33-.86-.91-.86-1.545 0-1 .82-1.812 1.82-1.812.45 0 .87.164 1.2.455 1.24-.796 2.91-1.297 4.75-1.33l1.21-3.69.27.063s.01 0 .01.002l2.82.663c.23-.533.76-.908 1.38-.908.82 0 1.49.67 1.49 1.492 0 .823-.67 1.492-1.49 1.492s-1.49-.67-1.49-1.49L9.4 2.18l-.98 2.99c1.77.07 3.37.57 4.57 1.35.33-.31.764-.48 1.225-.48 1 0 1.814.81 1.814 1.81 0 .66-.36 1.26-.92 1.58.02.17.04.33.04.5-.01 2.63-3.21 4.77-7.16 4.77zM13.43 1.893c-.494 0-.895.4-.895.894 0 .493.4.894.894.894.49 0 .89-.4.89-.89s-.4-.89-.9-.89z"></path></symbol>
  <symbol id="skype" viewbox="0 0 16 16"><path d="M8.035 12.6c-2.685 0-3.885-1.322-3.885-2.313 0-.51.374-.865.89-.865 1.15 0 .85 1.653 2.995 1.653 1.096 0 1.703-.597 1.703-1.208 0-.368-.18-.775-.904-.954l-2.387-.597C4.524 7.833 4.175 6.79 4.175 5.812c0-2.034 1.91-2.798 3.704-2.798 1.65 0 3.6.916 3.6 2.136 0 .523-.452.827-.97.827-.98 0-.798-1.36-2.773-1.36-.98 0-1.523.444-1.523 1.08 0 .636.774.84 1.446.993l1.767.392c1.936.433 2.427 1.566 2.427 2.633 0 1.652-1.266 2.886-3.82 2.886m7.4-3.264l-.014.084-.028-.16c.015.024.028.05.042.076.082-.45.125-.912.125-1.373 0-1.023-.2-2.014-.595-2.948-.38-.902-.925-1.712-1.62-2.407-.692-.696-1.5-1.242-2.4-1.623C10.015.59 9.025.39 8.005.39c-.48 0-.963.045-1.43.135H6.57l.08.04-.16-.023.08-.016C5.927.183 5.205 0 4.472 0 3.278 0 2.155.466 1.31 1.313.465 2.16 0 3.286 0 4.483c0 .763.195 1.512.563 2.175l.013-.083.028.16c-.015-.026-.027-.052-.04-.077-.076.43-.115.867-.115 1.305 0 1.022.2 2.014.593 2.948.38.903.925 1.713 1.62 2.408.693.695 1.5 1.242 2.4 1.623.932.397 1.92.597 2.94.597.445 0 .89-.04 1.325-.118l-.077-.043.162.028-.084.014c.67.378 1.426.58 2.2.58 1.194 0 2.317-.466 3.162-1.313.845-.846 1.31-1.972 1.31-3.17 0-.765-.197-1.517-.566-2.18" fill-rule="nonzero"></path></symbol>
  <symbol id="tumblr" viewbox="0 0 16 16"><path d="M9.708 16c-3.396 0-4.687-2.504-4.687-4.274V6.498H3.403V4.432C5.83 3.557 6.412 1.368 6.55.12c.01-.086.077-.12.115-.12H9.01v4.076h3.2v2.422H8.997v4.98c.01.667.25 1.58 1.472 1.58h.067c.424-.012.994-.136 1.29-.278l.77 2.283c-.288.424-1.594.916-2.77.936h-.12z" fill-rule="nonzero"></path></symbol>
  <symbol id="twitch" viewbox="0 0 16 16"><g fill-rule="nonzero"><path d="M1.393 0L.35 2.783v11.13h3.824V16h2.088l2.085-2.088h3.13L15.65 9.74V0H1.394zm1.39 1.39H14.26v7.653l-2.435 2.435H8l-2.085 2.085v-2.085H2.783V1.39z"></path><path d="M6.61 8.348H8V4.175H6.61v4.173zm3.824 0h1.39V4.175h-1.39v4.173z"></path></g></symbol>
  <symbol id="twitter" viewbox="0 0 16 16"><path d="M16 3.038c-.59.26-1.22.437-1.885.517.677-.407 1.198-1.05 1.443-1.816-.634.375-1.337.648-2.085.795-.598-.638-1.45-1.036-2.396-1.036-1.812 0-3.282 1.468-3.282 3.28 0 .258.03.51.085.75C5.152 5.39 2.733 4.084 1.114 2.1.83 2.583.67 3.147.67 3.75c0 1.14.58 2.143 1.46 2.732-.538-.017-1.045-.165-1.487-.41v.04c0 1.59 1.13 2.918 2.633 3.22-.276.074-.566.114-.865.114-.21 0-.416-.02-.617-.058.418 1.304 1.63 2.253 3.067 2.28-1.124.88-2.54 1.404-4.077 1.404-.265 0-.526-.015-.783-.045 1.453.93 3.178 1.474 5.032 1.474 6.038 0 9.34-5 9.34-9.338 0-.143-.004-.284-.01-.425.64-.463 1.198-1.04 1.638-1.7z" fill-rule="nonzero"></path></symbol>
  <symbol id="vimeo" viewbox="0 0 16 16"><path d="M15.992 4.275c-.07 1.56-1.16 3.697-3.263 6.41-2.176 2.832-4.017 4.248-5.522 4.248-.933 0-1.722-.862-2.367-2.588L3.55 7.6c-.48-1.724-.993-2.587-1.542-2.587-.12 0-.538.252-1.255.755L0 4.796C.79 4.1 1.568 3.406 2.335 2.71c1.053-.912 1.844-1.39 2.37-1.44 1.246-.12 2.012.733 2.3 2.56.31 1.97.526 3.194.647 3.673.36 1.634.754 2.45 1.185 2.45.335 0 .838-.53 1.51-1.59.67-1.06 1.028-1.866 1.076-2.42.096-.915-.263-1.374-1.077-1.374-.383 0-.778.087-1.185.262.788-2.58 2.29-3.834 4.508-3.762 1.644.048 2.42 1.116 2.324 3.205z" fill-rule="nonzero"></path></symbol>
  <symbol id="youtube" viewbox="0 0 16 16"><path d="M0 7.345c0-1.294.16-2.59.16-2.59s.156-1.1.636-1.587c.608-.637 1.408-.617 1.764-.684C3.84 2.36 8 2.324 8 2.324s3.362.004 5.6.166c.314.038.996.04 1.604.678.48.486.636 1.588.636 1.588S16 6.05 16 7.346v1.258c0 1.296-.16 2.59-.16 2.59s-.156 1.102-.636 1.588c-.608.638-1.29.64-1.604.678-2.238.162-5.6.166-5.6.166s-4.16-.037-5.44-.16c-.356-.067-1.156-.047-1.764-.684-.48-.487-.636-1.587-.636-1.587S0 9.9 0 8.605v-1.26zm6.348 2.73V5.58l4.323 2.255-4.32 2.24h-.002z"></path></symbol>
  <symbol id="link" viewbox="0 0 16 16"><path d="M5.86 12.7l-.81.8c-.7.7-1.84.7-2.54 0a1.75 1.75 0 0 1 0-2.5l2.98-2.96c.61-.61 1.77-1.52 2.62-.68a1 1 0 1 0 1.4-1.4c-1.44-1.43-3.57-1.17-5.42.67L1.1 9.6a3.72 3.72 0 0 0 0 5.32 3.78 3.78 0 0 0 5.34 0l.8-.8a1 1 0 1 0-1.39-1.42zm9.03-11.5c-1.55-1.53-3.7-1.6-5.14-.19l-1 1a1 1 0 1 0 1.39 1.41l1-1c.75-.74 1.72-.43 2.35.2a1.75 1.75 0 0 1 0 2.5l-3.17 3.15c-1.46 1.45-2.14.77-2.43.48a1 1 0 0 0-1.4 1.4c.67.67 1.43 1 2.23 1 .98 0 2.01-.5 3-1.47l3.17-3.15a3.72 3.72 0 0 0 0-5.32z"></path></symbol>
  <symbol id="email" viewbox="0 0 16 11"><path fill-rule="evenodd" d="M1.33 0h13.34L8 5 1.33 0zM16 0v11H0V0l8 6 8-6z"></path></symbol>
  <symbol id="nav" viewbox="0 0 16 11"><path d="M0 12h16v-2H0v2zm0-5h16V5H0v2zm0-7v2h16V0H0z"></path></symbol>
</svg>


    <header class="header">
  <div class="container">
    <a class="logo" href="/">
  <img src="/assets/logos/logo-cdong.gif" alt="">
</a>


    
<nav class="nav  nav--header">
  <ul class="list  list--nav">
    

      

      <li class="item  item--nav">
        <a href="/">Home</a>
      </li>
    

      

      <li class="item  item--nav">
        <a href="/about/">About</a>
      </li>
    

      

      <li class="item  item--nav">
        <a href="/blog/">Blog</a>
      </li>
    

      

      <li class="item  item--nav">
        <a href="/search/">Search</a>
      </li>
    
  </ul>
  <button class="button  button--nav" aria-label="Menu toggle">
    <svg width="16" height="16" class="icon  icon--nav" role="img" alt="Menu"><title>Menu</title>
<use xlink:href="#nav" fill="CurrentColor"></use></svg>

  </button>
</nav>


<script type="text/javascript">
  // Get list and button
  const navList = document.querySelector('.header .list--nav')
  const button  = document.querySelector('.header .button--nav')

  // Hide nav and apply toggle
  const collapseNav = () => {
    if (document.body.clientWidth < 640) {
      navList.style.setProperty('--listHeight', `-${navList.offsetHeight}px`)
    } else {
      navList.removeAttribute('style')
    }

    button.onclick = () => {
      navList.style.setProperty('transition', `margin .1s`)
      if (navList.style.getPropertyValue('--listHeight')) {
        navList.style.removeProperty('--listHeight')
      } else {
        navList.style.setProperty('--listHeight', `-${navList.offsetHeight}px`)
      }
    }
  }

  collapseNav()

  // Check on resize if to collapse nav
  window.addEventListener('resize', () => {
    collapseNav()
  })
</script>

  </div>

  





  <meta name="google-site-verification" content="fhiMUAXjII16BlWNx0x4tY2MXKJwEcdDVjILoXGUXYA">
</header>


<main class="main  container">

  <article class="article  article--post  content  typeset">

    

<small class="small  post-meta">
  
  
    
      <span class="label  label--category"><a href="/categories/#reverse%20engineering">Reverse Engineering</a></span>
    
   · <time datetime="2021-09-05T00:00:00-04:00" class="time">05 Sep 2021</time>
</small>

    
    <h1 id="blackmatter-ransomware-v20">BlackMatter Ransomware v2.0</h1>

<h2 id="contents">Contents</h2>

<ul>
  <li>
<a href="#blackmatter-ransomware-v20">BlackMatter Ransomware v2.0</a>
    <ul>
      <li><a href="#contents">Contents</a></li>
      <li><a href="#overview">Overview</a></li>
      <li><a href="#iocs">IOCS</a></li>
      <li><a href="#ransom-note">Ransom Note</a></li>
    </ul>
  </li>
  <li>
<a href="#static-code-analysis">Static Code Analysis</a>
    <ul>
      <li><a href="#anti-analysis-dynamic-api-resolving">Anti-Analysis: Dynamic API Resolving</a></li>
      <li><a href="#anti-analysis-string-encryption">Anti-Analysis: String Encryption</a></li>
      <li><a href="#anti-analysis-string-comparison">Anti-Analysis: String Comparison</a></li>
      <li><a href="#configuration">Configuration</a></li>
      <li><a href="#command-line-arguments">Command-line Arguments</a></li>
      <li>
<a href="#pre-encryption-setup">Pre-Encryption Setup</a>
        <ul>
          <li><a href="#uac-bypass">UAC Bypass</a></li>
          <li><a href="#generate-encrypted-extension">Generate Encrypted Extension</a></li>
          <li><a href="#retrieving-token-to-impersonate-with-process-injection">Retrieving Token To Impersonate With Process Injection</a></li>
          <li><a href="#parsing-login-credentials">Parsing Login Credentials</a></li>
          <li><a href="#cryptographic-keys-setup">Cryptographic Keys Setup</a></li>
        </ul>
      </li>
      <li>
<a href="#safe-mode-reboot">Safe Mode Reboot</a>
        <ul>
          <li><a href="#checking-computer-name">Checking Computer Name</a></li>
          <li><a href="#auto-logon-credential">Auto Logon Credential</a></li>
          <li><a href="#runonce-registry-persistence">RunOnce Registry Persistence</a></li>
          <li><a href="#safe-boot-command-execution">Safe Boot Command Execution</a></li>
        </ul>
      </li>
      <li>
<a href="#setting-ransom-wallpaper">Setting Ransom Wallpaper</a>
        <ul>
          <li><a href="#ransom-note-printing">Ransom Note Printing</a></li>
        </ul>
      </li>
      <li><a href="#run-once-mutex">Run-Once Mutex</a></li>
      <li><a href="#wiping-recycle-bins">Wiping Recycle Bins</a></li>
      <li><a href="#shadow-copies-deletion-through-wmi">Shadow Copies Deletion Through WMI</a></li>
      <li><a href="#terminating-services-through-service-control-manager">Terminating Services through Service Control Manager</a></li>
      <li><a href="#terminating-processes">Terminating Processes</a></li>
      <li>
<a href="#file-encryption">File Encryption</a>
        <ul>
          <li><a href="#multithreading-parent-thread">Multithreading: Parent Thread</a></li>
          <li>
<a href="#multithreading-parent-thread-communication">Multithreading: Parent Thread Communication</a>
            <ul>
              <li><a href="#file-owner-termination">File Owner Termination</a></li>
              <li><a href="#check-if-file-is-already-encrypted">Check If File Is Already Encrypted</a></li>
              <li><a href="#checking-large-file">Checking Large File</a></li>
              <li><a href="#thread-shared-structure">Thread Shared Structure</a></li>
            </ul>
          </li>
          <li>
<a href="#multithreading-child-threads-encryption">Multithreading: Child Threads Encryption</a>
            <ul>
              <li><a href="#i-state-0-reading-file">I. State 0: Reading File</a></li>
              <li>
<a href="#ii-state-1-encrypt-and-write-file">II. State 1. Encrypt and Write File</a>
                <ul>
                  <li><a href="#blackmatter-custom-chacha20">BlackMatter Custom ChaCha20</a></li>
                </ul>
              </li>
              <li><a href="#iii-state-2-write-file-footer">III. State 2. Write File Footer</a></li>
              <li><a href="#iv-state-3-clean-up">IV. State 3. Clean Up</a></li>
              <li><a href="#child-thread-communication">Child Thread Communication</a></li>
            </ul>
          </li>
          <li><a href="#exchange-mailbox-traversal">Exchange Mailbox Traversal</a></li>
          <li><a href="#logical-drives-traversal">Logical Drives Traversal</a></li>
          <li><a href="#network-shares-traversal">Network Shares Traversal</a></li>
        </ul>
      </li>
      <li><a href="#network-communication">Network Communication</a></li>
      <li><a href="#weird-threading-stuff">Weird Threading Stuff</a></li>
      <li><a href="#references">References</a></li>
    </ul>
  </li>
</ul>

<h2 id="overview">Overview</h2>

<p>This is my analysis for the <strong>BlackMatter Ransomware</strong> version 2.0.</p>

<p>In this analysis, I only cover <strong>BlackMatter’s</strong> ransomware functionalities and leave out details about the anti-analysis and obfuscation stuff. The main reason for this is because I’m just really lazy.</p>

<p><strong>BlackMatter</strong> uses a hybrid-cryptography scheme of <strong>RSA-1024</strong> and <strong>modified ChaCha20</strong> similar to encrypt files and protect its <strong>ChaCha20</strong> matrix.</p>

<p>Like <strong>Darkside</strong>, its configuration is encrypted and <strong>aPLib-compressed</strong> in memory.</p>

<p>When servers’ URLs are provided in the configuration, the malware encrypts informations about the victim’s machine and encryption stats using a hard-coded <strong>AES</strong> key and sends them to the remote servers.</p>

<p>Similar to <strong>REvil</strong>, <strong>BlackMatter’s</strong> child threads use a shared structure to divide the work into multiple states while encrypting a file.</p>

<p>By basing its multithreading architecture on <strong>REvil’s</strong>, <strong>BlackMatter’s</strong> encryption is relatively fast.</p>

<p><img src="/uploads/blackmatter2.PNG" alt="alt text"></p>

<p><em>Figure 1: BlackMatter leak site.</em></p>

<h2 id="iocs">IOCS</h2>

<p>This sample is a 32-bit Windows executable.</p>

<p><strong>MD5</strong>: 50c4970003a84cab1bf2634631fe39d7</p>

<p><strong>SHA256</strong>: 520bd9ed608c668810971dbd51184c6a29819674280b018dc4027bc38fc42e57</p>

<p><strong>Sample</strong>: https://bazaar.abuse.ch/sample/520bd9ed608c668810971dbd51184c6a29819674280b018dc4027bc38fc42e57/</p>

<p><img src="/uploads/blackmatter1.PNG" alt="alt text"></p>

<p><em>Figure 2: BlackMatter victim portal.</em></p>

<h2 id="ransom-note">Ransom Note</h2>

<p>The content of the ransom note is encrypted in <strong>BlackMatter’s</strong> configuration, and it’s dynamically decrypted and written to the ransom note file in every directory.</p>

<p>The ransom note filename is in the form of **<encrypted_file_extension>.README.txt**.</encrypted_file_extension></p>

<p><img src="/uploads/blackmatter3.PNG" alt="alt text"></p>

<p><em>Figure 3: BlackMatter ransom note.</em></p>

<h1 id="static-code-analysis">Static Code Analysis</h1>

<h2 id="anti-analysis-dynamic-api-resolving">Anti-Analysis: Dynamic API Resolving</h2>

<p>Since BlackMatter is a combination between LockBit, Darkside, and REvil, it’s not suprising that the ransomware obfuscates its API calls from static analysis.</p>

<p>The obfuscation is pretty cool, but I won’t analyze it here. I highly suggest fellow analysts to check out how it works if they have time!</p>

<p><img src="/uploads/blackmatter4.PNG" alt="alt text"></p>

<p><em>Figure 3: Dynamic API resolve.</em></p>

<p>Check out my IDAPython scripts <a href="https://github.com/cdong1012/IDAPython-Malware-Scripts/blob/master/Blackmatter/dll_exports.py">dll_exports.py</a> and <a href="https://github.com/cdong1012/IDAPython-Malware-Scripts/blob/master/Blackmatter/API_resolve.py">revil_api_resolve.py</a> if you want to automate resolving these APIs in <strong>IDA Pro</strong> and speed up your analysis.</p>

<p>These scripts are inspired by the <strong>REVil</strong> scripts from this <a href="https://www.youtube.com/watch?v=R4xJou6JsIE">OALabs’s Youtube video</a>.</p>

<p><a href="https://twitter.com/jan6ru">Jan G.</a> has a really good blog post explaining the <strong>BlackMatter’s</strong> API hashing and obfuscation through trampoline pointers. If you’re interested in the technical analysis of this, feel free to check <a href="https://blog.digital-investigations.info/2021-08-05-understanding-blackmatters-api-hashing.html">their work</a> out.</p>

<h2 id="anti-analysis-string-encryption">Anti-Analysis: String Encryption</h2>

<p>Like with other major ransomware out there, most strings in <strong>BlackMatter</strong> are encrypted and resolved during run-time.</p>

<p>The strings that are not encrypted are stored on the stack as stack strings. For each encrypted ones, the encrypted bytes/DWORDs are pushed on the stack and decrypted by XOR-ing with a constant.</p>

<p>This implementation is really similar to that of <strong>Conti</strong> ransomware, and there is probably a good way to automate resolving these with an IDAPython script.</p>

<p>Since I’m lazy during my analysis, I just use <strong>x32dbg</strong> to execute and resolve these stack strings dynamically.</p>

<p><img src="/uploads/blackmatter5.PNG" alt="alt text"></p>

<p><em>Figure 5: Stack string decryption.</em></p>

<h2 id="anti-analysis-string-comparison">Anti-Analysis: String Comparison</h2>

<p>In ransomware specifically, string comparison is crucial for tasks such as checking the name of processes and services to terminate, files and folders to avoid encrypting, searching for names of DLLs and Windows APIs, etc.</p>

<p>As a result, it helps tremendously if analysts can look at the strings being compared to quickly identify certain functionalities of the ransomware.</p>

<p><strong>BlackMatter</strong> obfuscates this with a one-way hash function and only compares the strings’ hashes instead of the strings themselves. The hash of a string is just the summation of each byte rotated right by 13 with an initial seed.</p>

<p><img src="/uploads/blackmatter7.PNG" alt="alt text"></p>

<p><em>Figure 6: String hashing algorithm.</em></p>

<p>The summation makes it impossible to work backward from the hash to produce a string, so resolving these hashes requires heuristic analysis, cracking dictionary, and bruteforcing.</p>

<p>I use and contribute this <a href="https://github.com/sisoma2/malware_analysis/tree/master/blackmatter">tool</a> by <a href="https://twitter.com/sisoma2">@sisoma2</a> to look up the hashes that BlackMatter uses! His tool has a great dictionary to crack the hashes, so make sure to use it to aid your analysis!</p>

<p>Below is the list of hashes used by BlackMatter v2 and their strings.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">0xd3801b00</span> <span class="k">-&gt;</span> <span class="n">hlp</span>
<span class="mi">0x5366e694</span> <span class="k">-&gt;</span> <span class="n">perflogs</span>
<span class="mi">0xe7681bc0</span> <span class="k">-&gt;</span> <span class="n">rom</span>
<span class="mi">0xdd481cc0</span> <span class="k">-&gt;</span> <span class="n">msi</span>
<span class="mi">0xd9c81940</span> <span class="k">-&gt;</span> <span class="n">key</span>
<span class="mi">0xef3a37b3</span> <span class="k">-&gt;</span> <span class="n">default</span>
<span class="mi">0xd57818c0</span> <span class="k">-&gt;</span> <span class="n">ico</span>
<span class="mi">0x67b00e00</span> <span class="k">-&gt;</span> <span class="mi">386</span>
<span class="mi">0xcd2e9b7a</span> <span class="k">-&gt;</span> <span class="n">theme</span>
<span class="mi">0x6b66f975</span> <span class="k">-&gt;</span> <span class="n">intel</span>
<span class="mi">0xdd081c00</span> <span class="k">-&gt;</span> <span class="n">mpa</span>
<span class="mi">0xdd101900</span> <span class="k">-&gt;</span> <span class="n">mdb</span>
<span class="mi">0xe9981a00</span> <span class="k">-&gt;</span> <span class="n">shs</span>
<span class="mi">0x267078f5</span> <span class="k">-&gt;</span> <span class="err">$</span><span class="n">windows</span><span class="err">.</span><span class="o">~</span><span class="n">bt</span>
<span class="mi">0xcd101900</span> <span class="k">-&gt;</span> <span class="n">edb</span>
<span class="mi">0xc6ce6958</span> <span class="k">-&gt;</span> <span class="n">appdata</span>
<span class="mi">0xeb869d00</span> <span class="k">-&gt;</span> <span class="n">http</span>
<span class="mi">0x85aa57e4</span> <span class="k">-&gt;</span> <span class="n">ntuser</span><span class="py">.dat.log</span>
<span class="mi">0x4a6bb7db</span> <span class="k">-&gt;</span> <span class="n">msstyles</span>
<span class="mi">0x4cca7837</span> <span class="k">-&gt;</span> <span class="n">nomedia</span>
<span class="mi">0x49164931</span> <span class="k">-&gt;</span> <span class="n">accdb</span>
<span class="mi">0xc9101840</span> <span class="k">-&gt;</span> <span class="n">cab</span>
<span class="mi">0xe1c018c0</span> <span class="k">-&gt;</span> <span class="n">ocx</span>
<span class="mi">0xdb301900</span> <span class="k">-&gt;</span> <span class="n">ldf</span>
<span class="mi">0x12018c0</span> <span class="k">-&gt;</span> <span class="n">c</span><span class="err">$</span>
<span class="mi">0xfcc8ab56</span> <span class="k">-&gt;</span> <span class="n">bootsect</span><span class="py">.bak</span>
<span class="mi">0xdf981b00</span> <span class="k">-&gt;</span> <span class="n">nls</span>
<span class="mi">0xe99018c0</span> <span class="k">-&gt;</span> <span class="n">scr</span>
<span class="mi">0xa6f2d1a7</span> <span class="k">-&gt;</span> <span class="n">application</span> <span class="n">data</span>
<span class="mi">0x4c4b25d4</span> <span class="k">-&gt;</span> <span class="n">tor</span> <span class="n">browser</span>
<span class="mi">0xe7801d00</span> <span class="k">-&gt;</span> <span class="n">rtp</span>
<span class="mi">0xdd201bc0</span> <span class="k">-&gt;</span> <span class="k">mod</span>
<span class="mi">0xf00cae96</span> <span class="k">-&gt;</span> <span class="n">bootfont</span><span class="py">.bin</span>
<span class="mi">0x846bec00</span> <span class="k">-&gt;</span> <span class="n">iconcache</span><span class="py">.db</span>
<span class="mi">0xd4aaebb2</span> <span class="k">-&gt;</span> <span class="n">admin</span><span class="err">$</span>
<span class="mi">0xc7a01840</span> <span class="k">-&gt;</span> <span class="n">bat</span>
<span class="mi">0xc8cef7d1</span> <span class="k">-&gt;</span> <span class="n">thumbs</span><span class="py">.db</span>
<span class="mi">0xdd301900</span> <span class="k">-&gt;</span> <span class="n">mdf</span>
<span class="mi">0xf1c01c00</span> <span class="k">-&gt;</span> <span class="n">wpx</span>
<span class="mi">0xe1a63bc0</span> <span class="k">-&gt;</span> <span class="n">boot</span>
<span class="mi">0xcbb01c80</span> <span class="k">-&gt;</span> <span class="n">drv</span>
<span class="mi">0xc5481b80</span> <span class="k">-&gt;</span> <span class="n">ani</span>
<span class="mi">0xcbe2aa35</span> <span class="k">-&gt;</span> <span class="n">ntuser</span><span class="py">.ini</span>
<span class="mi">0x2e75e394</span> <span class="k">-&gt;</span> <span class="n">programdata</span>
<span class="mi">0x4ae29631</span> <span class="k">-&gt;</span> <span class="n">diagcfg</span>
<span class="mi">0xba22623b</span> <span class="k">-&gt;</span> <span class="n">all</span> <span class="n">users</span>
<span class="mi">0x4aba94f1</span> <span class="k">-&gt;</span> <span class="n">diagcab</span>
<span class="mi">0xd5c01900</span> <span class="k">-&gt;</span> <span class="n">idx</span>
<span class="mi">0xdd801cc0</span> <span class="k">-&gt;</span> <span class="n">msp</span>
<span class="mi">0xdd181cc0</span> <span class="k">-&gt;</span> <span class="n">msc</span>
<span class="mi">0xeb9f5c34</span> <span class="k">-&gt;</span> <span class="n">https</span>
<span class="mi">0x3907099b</span> <span class="k">-&gt;</span> <span class="n">boot</span><span class="py">.ini</span>
<span class="mi">0x64e29771</span> <span class="k">-&gt;</span> <span class="n">diagpkg</span>
<span class="mi">0x86ccaa15</span> <span class="k">-&gt;</span> <span class="n">autorun</span><span class="py">.inf</span>
<span class="mi">0xb7e02438</span> <span class="k">-&gt;</span> <span class="n">svchost</span><span class="py">.exe</span>
<span class="mi">0xe3301c80</span> <span class="k">-&gt;</span> <span class="n">prf</span>
<span class="mi">0xe9601c00</span> <span class="k">-&gt;</span> <span class="n">spl</span>
<span class="mi">0xc5b01900</span> <span class="k">-&gt;</span> <span class="n">adv</span>
<span class="mi">0x452f4997</span> <span class="k">-&gt;</span> <span class="o">-</span><span class="n">safe</span>
<span class="mi">0xe1881cc0</span> <span class="k">-&gt;</span> <span class="n">ps1</span>
<span class="mi">0xaf16c593</span> <span class="k">-&gt;</span> <span class="n">themepack</span>
<span class="mi">0xe3101900</span> <span class="k">-&gt;</span> <span class="n">pdb</span>
<span class="mi">0xd59818c0</span> <span class="k">-&gt;</span> <span class="n">ics</span>
<span class="mi">0xdb975937</span> <span class="k">-&gt;</span> <span class="n">ntldr</span>
<span class="mi">0xc23aa6f5</span> <span class="k">-&gt;</span> <span class="n">ntuser</span><span class="py">.dat</span>
<span class="mi">0x3eb272e6</span> <span class="k">-&gt;</span> <span class="n">explorer</span><span class="py">.exe</span>
<span class="mi">0xb7ea3892</span> <span class="k">-&gt;</span> <span class="n">msocache</span>
<span class="mi">0xe15ed8c0</span> <span class="k">-&gt;</span> <span class="n">lock</span>
<span class="mi">0xcb601b00</span> <span class="k">-&gt;</span> <span class="n">dll</span>
<span class="mi">0xe3426cd7</span> <span class="k">-&gt;</span> <span class="n">windows</span>
<span class="mi">0xc7701a40</span> <span class="k">-&gt;</span> <span class="n">bin</span>
<span class="mi">0xc9601c00</span> <span class="k">-&gt;</span> <span class="n">cpl</span>
<span class="mi">0x5cde3a7b</span> <span class="k">-&gt;</span> <span class="n">public</span>
<span class="mi">0xc99eab80</span> <span class="k">-&gt;</span> <span class="n">icns</span>
<span class="mi">0xdf301900</span> <span class="k">-&gt;</span> <span class="n">ndf</span>
<span class="mi">0xd3081d00</span> <span class="k">-&gt;</span> <span class="n">hta</span>
<span class="mi">0x7f07935</span> <span class="k">-&gt;</span> <span class="n">windows</span><span class="py">.old</span>
<span class="mi">0x45678b17</span> <span class="k">-&gt;</span> <span class="o">-</span><span class="n">wall</span>
<span class="mi">0xdda81cc0</span> <span class="k">-&gt;</span> <span class="n">msu</span>
<span class="mi">0xe9981e40</span> <span class="k">-&gt;</span> <span class="n">sys</span>
<span class="mi">0x30a212d</span> <span class="k">-&gt;</span> <span class="err">$</span><span class="n">recycle</span><span class="py">.bin</span>
<span class="mi">0x45471d17</span> <span class="k">-&gt;</span> <span class="o">-</span><span class="n">path</span>
<span class="mi">0x52cb0b38</span> <span class="k">-&gt;</span> <span class="n">google</span>
<span class="mi">0xdccab8dd</span> <span class="k">-&gt;</span> <span class="n">mozilla</span>
<span class="mi">0xc9201b40</span> <span class="k">-&gt;</span> <span class="n">cmd</span>
<span class="mi">0xa1fccbfe</span> <span class="k">-&gt;</span> <span class="n">deskthemepack</span>
<span class="mi">0x26687e35</span> <span class="k">-&gt;</span> <span class="err">$</span><span class="n">windows</span><span class="err">.</span><span class="o">~</span><span class="n">ws</span>
<span class="mi">0xc9901d40</span> <span class="k">-&gt;</span> <span class="n">cur</span>
<span class="mi">0xae018eae</span> <span class="k">-&gt;</span> <span class="n">system</span> <span class="n">volume</span> <span class="n">information</span>
<span class="mi">0xdb581b80</span> <span class="k">-&gt;</span> <span class="n">lnk</span>
<span class="mi">0xcd281e00</span> <span class="k">-&gt;</span> <span class="n">exe</span>
<span class="mi">0x82d2a252</span> <span class="k">-&gt;</span> <span class="n">desktop</span><span class="py">.ini</span>
<span class="mi">0x8cf281cd</span> <span class="k">-&gt;</span> <span class="n">config</span><span class="py">.msi</span>
<span class="mi">0xfe9e7c10</span> <span class="k">-&gt;</span> <span class="n">runonce</span><span class="py">.exe</span>
<span class="mi">0x36004e4e</span> <span class="k">-&gt;</span> <span class="n">program</span> <span class="n">files</span>
<span class="mi">0xd56018c0</span> <span class="k">-&gt;</span> <span class="n">icl</span>
<span class="mi">0xab086595</span> <span class="k">-&gt;</span> <span class="n">program</span> <span class="nf">files</span> <span class="p">(</span><span class="n">x86</span><span class="p">)</span>
<span class="mi">0xc9681bc0</span> <span class="k">-&gt;</span> <span class="n">com</span>
</code></pre></div></div>

<h2 id="configuration">Configuration</h2>

<p>The configuration of <strong>BlackMatter</strong> samples is encrypted and compressed in memory similar to that of <strong>Darkside</strong>.</p>

<p>During my analysis, I dynamically execute to decrypt it using <strong>x32dbg</strong> and decompress the configuration using <strong>aPLib</strong> in <strong>Python</strong>.</p>

<p><img src="/uploads/blackmatter6.PNG" alt="alt text"></p>

<p><em>Figure 7: BlackMatter config extraction.</em></p>

<p>Below is the list of configuration fields that <strong>BlackMatter</strong> supports and their description.</p>

<ul>
  <li>
    <p><strong>RSA_PUBLIC_KEY</strong> (128 bytes): RSA key to encrypt <strong>ChaCha20</strong> Key.</p>
  </li>
  <li>
    <p><strong>COMPANY_VICTIM_ID</strong> (16 bytes): Company ID used in data being sent back to remote server to identify victim.</p>
  </li>
  <li>
    <p><strong>AES_KEY</strong> (16 bytes): AES key to encrypt data being sent to remote servers.</p>
  </li>
  <li>
    <p><strong>ENCRYPT_LARGE_FILE_FLAG</strong> (1 byte): Enable chunking to encrypt large files.</p>
  </li>
  <li>
    <p><strong>ATTEMPT_LOGON_FLAG</strong> (1 byte): Enable attempting to log in using user credentials given in the configuration.</p>
  </li>
  <li>
    <p><strong>MOUNT_VOL_AND_ENCRYPT_FLAG</strong> (1 byte): Enable encrypting Exchange mailbox, mounting all volumes, and encrypting them.</p>
  </li>
  <li>
    <p><strong>NETWORK_ENCRYPT_FLAG</strong> (1 byte): Enable retrieving DNS host names and encrypting their network shares</p>
  </li>
  <li>
    <p><strong>TERMINATE_PROCESSES_FLAG</strong> (1 byte): Enable terminating processes specified by the <strong>PROCESSES_TO_KILL</strong> config field.</p>
  </li>
  <li>
    <p><strong>STOP_SERVICES_AND_DELETE_FLAG</strong> (1 byte): Enable stopping and deleting services specified by the <strong>SERVICES_TO_KILL</strong> config field.</p>
  </li>
  <li>
    <p><strong>CREATE_MUTEX_FLAG</strong> (1 byte): Enable creating and checking RunOnce mutex.</p>
  </li>
  <li>
    <p><strong>PRINTER_PRINT_RANSOM_NOTE_FLAG</strong> (1 byte): Enable printing ransom note using the local user’s default printer</p>
  </li>
  <li>
    <p><strong>SEND_DATA_TO_SERVER_FLAG</strong> (1 byte): Enable sending victim’s info and encrypting stats to remote servers specified by the <strong>REMOTE_SERVER_URLS</strong> config field.</p>
  </li>
  <li>
    <p><strong>FOLDER_HASHES_TO_AVOID</strong>: <strong>Base64</strong>-encoded list of 4-byte hashes of folder names to avoid encrypting.</p>
  </li>
  <li>
    <p><strong>FILE_HASHES_TO_AVOID</strong>: <strong>Base64</strong>-encoded list of 4-byte hashes of filenames to avoid encrypting.</p>
  </li>
  <li>
    <p><strong>EXTENSION_HASHES_TO_AVOID</strong>: <strong>Base64</strong>-encoded list of 4-byte hashes of extensions to avoid encrypting.</p>
  </li>
  <li>
    <p><strong>COMPUTERNAMES_TO_AVOID</strong>: <strong>Base64</strong>-encoded list of computer names to avoid encrypting (not used in this sample).</p>
  </li>
  <li>
    <p><strong>PROCESSES_TO_KILL</strong>: <strong>Base64</strong>-encoded list of processe to kill.</p>
  </li>
  <li>
    <p><strong>SERVICES_TO_KILL</strong>: <strong>Base64</strong>-encoded list of services to kill.</p>
  </li>
  <li>
    <p><strong>REMOTE_SERVER_URLS</strong>: <strong>Base64</strong>-encoded list of remote servers to contact.</p>
  </li>
  <li>
    <p><strong>LOGIN_CREDENTIALS</strong>: List of credentials to try logging into the machine (not used in this sample).</p>
  </li>
  <li>
    <p><strong>RANSOM_NOTE_CONTENT</strong>: <strong>Base64</strong>-encoded and encrypted content of the ransom note.</p>
  </li>
  <li>
    <p><strong>RANSOM_NOTE_CONTENT_HASH</strong>: Checksum of ransom note content.</p>
  </li>
</ul>

<p>Here is the configuration of this v2 sample in JSON form. I generate this using this <a href="https://github.com/advanced-threat-research/DarkSide-Config-Extract">auto config extracting tool</a> and fix up the configuration field names according to my analysis. Huge shoutout to the guys at <strong>McAfee Advanced Threat Research</strong> for this!</p>

<pre><code class="language-JSON">{
  "RSA_PUBLIC_KEY":  "4FDB27F0D5F8A0741EBE1A8C08E5B98ABECE2C281166A7FFDCF239A8A77FD2A4FC6B8828A5F3F9F5FA4B245CC90386953D6469368DAD281CA1D688F2556725D9422D08E1191230999B2E54E4103B1C19199C96E350C216B39B3D2ADDB315A4284A9A3C8C5058924AED366DD030FD4E211178BCDC4C79406B75C87EDC1851676A",
  "COMPANY_VICTIM_ID":  "24483508BCCFE72E63B26A1233058170",
  "AES_KEY":  "196387BAD88422E3F08474FA8F7E796E",
  "ENCRYPT_LARGE_FILE_FLAG":  "false",
  "ATTEMPT_LOGON_FLAG":  "false",
  "MOUNT_VOL_AND_ENCRYPT_FLAG":  "true",
  "NETWORK_ENCRYPT_FLAG": "true",
  "TERMINATE_PROCESSES_FLAG":  "true",
  "STOP_SERVICES_AND_DELETE_FLAG": "true",
  "CREATE_MUTEX_FLAG": "true",
  "SEND_DATA_TO_SERVER_FLAG": "true",
  "PRINTER_PRINT_RANSOM_NOTE_FLAG":  "true",
  "PROCESSES_TO_KILL":  [{
      "": "encsvc"
    }, {
      "": "thebat"
    }, {
      "": "mydesktopqos"
    }, {
      "": "xfssvccon"
    }, {
      "": "firefox"
    }, {
      "": "infopath"
    }, {
      "": "winword"
    }, {
      "": "steam"
    }, {
      "": "synctime"
    }, {
      "": "notepad"
    }, {
      "": "ocomm"
    }, {
      "": "onenote"
    }, {
      "": "mspub"
    }, {
      "": "thunderbird"
    }, {
      "": "agntsvc"
    }, {
      "": "sql"
    }, {
      "": "excel"
    }, {
      "": "powerpnt"
    }, {
      "": "outlook"
    }, {
      "": "wordpad"
    }, {
      "": "dbeng50"
    }, {
      "": "isqlplussvc"
    }, {
      "": "sqbcoreservice"
    }, {
      "": "oracle"
    }, {
      "": "ocautoupds"
    }, {
      "": "dbsnmp"
    }, {
      "": "msaccess"
    }, {
      "": "tbirdconfig"
    }, {
      "": "ocssd"
    }, {
      "": "mydesktopservice"
    }, {
      "": "visio"
    }],
  "SERVICES_TO_KILL": [{
      "": "mepocs"
    }, {
      "": "memtas"
    }, {
      "": "veeam"
    }, {
      "": "svc$"
    }, {
      "": "backup"
    }, {
      "": "sql"
    }, {
      "": "vss"
    }, {
      "": "msexchange"
    }],
  "REMOTE_SERVER_URLS":  [{
      "": "hxxps://mojobiden[.]com"
    }, {
      "": "hxxp://mojobiden[.]com"
    }],
  "RANSOM_NOTE_CONTENT":  [{
      "": "      ~+                                       
                     *       +
               '     BLACK        |
           ()    .-.,='``'=.    - o -         
                 '=/_       \\     |           
              *   |  '=._    |                
                   \\     `=./`,        '    
                .   '=.__.=' `='      *
       +             Matter        +
            O      *        '       .
      
      &gt;&gt;&gt; What happens?
         Your network is encrypted, and currently not operational. 
         We need only money, after payment we will give you a decryptor for the entire network and you will restore all the data.
      
      &gt;&gt;&gt; What guarantees? 
         We are not a politically motivated group and we do not need anything other than your money. 
         If you pay, we will provide you the programs for decryption and we will delete your data. 
         If we do not give you decrypters or we do not delete your data, no one will pay us in the future, this does not comply with our goals. 
         We always keep our promises.
      
      &gt;&gt;&gt; How to contact with us? 
         1. Download and install TOR Browser (hxxps://www[.]torproject[.]org/).
         2. Open hxxp://supp24yy6a66hwszu2piygicgwzdtbwftb76htfj7vnip3getgqnzxid[.]onion/&lt;REDACTED&gt;
        
      &gt;&gt;&gt; Warning! Recovery recommendations.  
         We strongly recommend you to do not MODIFY or REPAIR your files, that will damage them."
    }],
    "RANSOM_NOTE_CONTENT_HASH": "38E73655"
}
</code></pre>

<h2 id="command-line-arguments">Command-line Arguments</h2>

<p><strong>BlackMatter</strong> can run with or without command-line arguments.</p>

<p>Below is the list of arguments that can be supplied by the operator.</p>

<table>
  <thead>
    <tr>
      <th>Argument</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>-path &lt;target&gt;</strong></td>
      <td>Path to a directory to be encrypted specifically</td>
    </tr>
    <tr>
      <td><strong>&lt;target&gt;</strong></td>
      <td>Path to a directory to be encrypted specifically</td>
    </tr>
    <tr>
      <td><strong>-safe</strong></td>
      <td>Enable safe mode reboot</td>
    </tr>
    <tr>
      <td><strong>-wall</strong></td>
      <td>Sets up wallpaper and print ransom note</td>
    </tr>
  </tbody>
</table>

<h2 id="pre-encryption-setup">Pre-Encryption Setup</h2>

<h3 id="uac-bypass">UAC Bypass</h3>

<p>During setup, <strong>BlackMatter</strong> checks if it currently runs with Admin credentials.</p>

<p>First, it calls <strong>SHTestTokenMembership</strong> to check if its process’s token is a member of the administrators’ group in the built-in domain.</p>

<p><img src="/uploads/blackmatter8.PNG" alt="alt text"></p>

<p><em>Figure 8: Checking token membership.</em></p>

<p>Next, after querying the system’s OS version from the <strong>PEB</strong>, the ransomware checks if the current OS is <strong>Windows 7</strong> and above.</p>

<p><img src="/uploads/blackmatter9.PNG" alt="alt text"></p>

<p><em>Figure 9: Checking OS version.</em></p>

<p>Finally, it checks the current process’s token belongs to the built-in system domain groups used for administration.</p>

<p><img src="/uploads/blackmatter10.PNG" alt="alt text"></p>

<p><em>Figure 10: Checking token authority.</em></p>

<p>If the checks pass and the process has admin privilege, the malware does not attempt UAC bypass.</p>

<p>For UAC bypass, using <strong>LdrEnumerateLoadedModules</strong>, it registers <strong>“dllhost.exe”</strong> in System32 as the <strong>ImagePathName</strong> and <strong>CommandLine</strong> field in the <strong>ProcessParameters</strong> field of the process’s <strong>PEB</strong>. This initial setup allows it to host and execute COM Objects as <strong>“dllhost.exe”</strong>.</p>

<p><img src="/uploads/blackmatter11.PNG" alt="alt text"></p>

<p><em>Figure 11: Setup execution as dllhost.exe.</em></p>

<p><strong>BlackMatter</strong> then calls <strong>CoGetObject</strong> with the object name below to retrieve the COM interface <strong>ICMLuaUtil</strong>, which is commonly used for UAC bypass.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">  </span><span class="n">Elevation</span><span class="o">:</span><span class="n">Administrator</span><span class="o">!</span><span class="n">new</span><span class="o">:</span><span class="p">{</span><span class="m">3E5</span><span class="n">FC7F9</span><span class="m">-9</span><span class="n">A51</span><span class="m">-4367-9063</span><span class="o">-</span><span class="n">A120244FBEC7</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>The malware then executes the <strong>ShellExec</strong> function from the <strong>ICMLuaUtil</strong> interface to relaunch itself with its original command-line arguments, which elevates the new process to a higher privilege.</p>

<p><img src="/uploads/blackmatter12.PNG" alt="alt text"></p>

<p><em>Figure 12: UAC bypass and relaunch.</em></p>

<p>Finally, it terminates itself by calling <strong>NtTerminateProcess</strong>.</p>

<h3 id="generate-encrypted-extension">Generate Encrypted Extension</h3>

<p>The encrypted extension is dynamically generated using the victim’s machine GUID, which makes it unique on every system.</p>

<p>First, <strong>BlackMatter</strong> queries the value of the registry key below to get the machine GUID.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">  </span><span class="n">HKLM</span><span class="err">\</span><span class="n">SOFTWARE</span><span class="err">\</span><span class="n">Microsoft</span><span class="err">\</span><span class="n">Cryptography</span><span class="err">\</span><span class="n">MachineGuid</span><span class="w">
</span></code></pre></div></div>

<p>Next, the malware puts the machine GUID through 3 rounds of hashing, byte swaps, and <strong>Base64</strong>-encode the final hash to generate the encrypted extension.</p>

<p>Because the ASCII characters <strong>’+’, ‘/’, and ‘=’</strong> in a <strong>Base64</strong> string does not work really well in a file extension, <strong>BlackMatter</strong> replaces <strong>’+’</strong> with <strong>‘x’</strong>, <strong>’/’</strong> with <strong>‘i’</strong>, and  <strong>’=’</strong> with <strong>‘z’</strong>.</p>

<p><img src="/uploads/blackmatter13.PNG" alt="alt text"></p>

<p><em>Figure 13: Generating encrypted file extension.</em></p>

<p>The malware reuses this file extension as the ransom note name by appending it in front of <strong>“.README.txt”</strong>.</p>

<p><img src="/uploads/blackmatter14.PNG" alt="alt text"></p>

<p><em>Figure 14: Generating ransom note filename.</em></p>

<h3 id="retrieving-token-to-impersonate-with-process-injection">Retrieving Token To Impersonate With Process Injection</h3>

<p><strong>BlackMatter</strong> attempts to retrieve and duplicate the token of an elevated process running on the system. The malware later launches threads and has them impersonate the target process using this token.</p>

<p>First, it checks if the current process’s user is <strong>LocalSystem</strong>, a special account used by the operating system. Then, it calls <strong>NtQueryInformationToken</strong> to query the token user information and checks if the first sub authority of the process’s SID is <strong>SECURITY_LOCAL_SYSTEM_RID</strong>.</p>

<p><img src="/uploads/blackmatter15.PNG" alt="alt text"></p>

<p><em>Figure 15: Checking for LocalSystem.</em></p>

<p>If the process is running as <strong>LocalSystem</strong>, <strong>BlackMatter</strong> uses the current user’s token as its elevated token.</p>

<p>If not, the malware calls <strong>NtQuerySystemInformation</strong> to query information about processes on the system. For each process entry, it checks if the process’s name is <strong>explorer.exe</strong> and retrieves its unique process ID.</p>

<p><img src="/uploads/blackmatter16.PNG" alt="alt text"></p>

<p><em>Figure 16: Retrieving Explorer’s process ID.</em></p>

<p>Next, it calls <strong>NtOpenProcess</strong> with the process ID to get the process’s handle and retrieves the process’s token with <strong>NtOpenProcessToken</strong>.</p>

<p>Finally, <strong>BlackMatter</strong> calls <strong>NtDuplicateToken</strong> to duplicate the <strong>Explorer’s</strong> token.</p>

<p>If this fails but the current process’s token is a member of the administrators’ group in the built-in domain, <strong>BlackMatter</strong> pulls some process injection shenaningans to retrieve a token of a <strong>svchost.exe</strong> process.</p>

<p>First, it uses the same trick in <strong>Figure 16</strong> to retrieve the process ID and handle of a <strong>svchost.exe</strong> process.</p>

<p><img src="/uploads/blackmatter17.PNG" alt="alt text"></p>

<p><em>Figure 17: Retrieving svchost.exe process ID and handle.</em></p>

<p>Next, it checks if the <strong>svchost.exe</strong> process is running as a 64-bit process.</p>

<p>If it is 64-bit, the malware decrypts two different shellcodes in memory. The raw shellcodes can be found <a href="https://github.com/cdong1012/IDAPython-Malware-Scripts/blob/master/Blackmatter/blackmattershellcode.7z">here</a>.</p>

<p>After allocating memory in the <strong>svchost.exe</strong> process using <strong>NtAllocateVirtualMemory</strong>, <strong>BlackMatter</strong> writes the first shellcode into the memory region of the second shellcode before setting up and executing the second shellcode.</p>

<p><img src="/uploads/blackmatter18.PNG" alt="alt text"></p>

<p><em>Figure 18: Injecting 64-bit shellcodes into Svchost.</em></p>

<p>After being injected, the second shellcode allocates virtual memory in the <strong>svchost</strong> process using <strong>NtAllocateVirtualMemory</strong>, writes the first shellcode in using <strong>NtWriteVirtualMemory</strong>, and create a new thread to execute the first shellcode using <strong>NtCreateThreadEx</strong>.</p>

<p><img src="/uploads/blackmatter19.PNG" alt="alt text"></p>

<p><em>Figure 19: Second shellcode launching first shellcode As Svchost.</em></p>

<p>The first shellcode calls <strong>WTSQueryUserToken</strong> to obtain the primary access token of the logged-on user and calls <strong>NtDuplicateObject</strong> to duplicate that token. This token is passed back into the main ransomware thread.</p>

<p><img src="/uploads/blackmatter20.PNG" alt="alt text"></p>

<p><em>Figure 20: First shellcode retrieving the primary access token of the logged-on user.</em></p>

<p>If the <strong>svchost</strong> process is running as a 32-bit process instead, the malware decrypts the third shellcode and manually creates a remote thread using <strong>CreateRemoteThread</strong> to launch it. This shellcode is basically just the 32-bit version of the first shellcode.</p>

<p><img src="/uploads/blackmatter21.PNG" alt="alt text"></p>

<p><em>Figure 20: Launching the third shellcode.</em></p>

<h3 id="parsing-login-credentials">Parsing Login Credentials</h3>

<p>If the <strong>ATTEMPT_LOGON_FLAG</strong> is true and <strong>LOGIN_CREDENTIALS</strong> are provided in the configuration, the malware parses those credential data before attempting authentication.</p>

<p>The <strong>LOGIN_CREDENTIALS</strong> field is a <strong>Base64</strong>-encoded and encrypted buffer of strings, and each credential string is in the form below.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="n">username</span><span class="o">&gt;@&lt;</span><span class="n">domain</span><span class="o">&gt;</span><span class="p">:</span><span class="n">password</span>
</code></pre></div></div>

<p>Since this v2 sample doesn’t have this field in its configuration, I just base the analysis on its code and others’ reports for <strong>BlackMatter v1</strong>.</p>

<p>After decoding and decrypting the credentials, the malware iterates through each credential’s username and password and calls <strong>LogonUserW</strong> to log in the local machine.</p>

<p>If the logging in is successful, <strong>BlackMatter</strong> allocates heap buffers and stores the valid credential’s username, password, and domain name in there for later usage.</p>

<p><img src="/uploads/blackmatter22.PNG" alt="alt text"></p>

<p><em>Figure 22: Parsing credentials.</em></p>

<p>Next, it calls <strong>NtQueryInformationToken</strong> to query the authentication token’s group information and checks if the token belongs to the <strong>DOMAIN_ADMINS</strong> group.</p>

<p><img src="/uploads/blackmatter23.PNG" alt="alt text"></p>

<p><em>Figure 23: Check if account is in domain admins.</em></p>

<p>If the token belongs to the <strong>DOMAIN_ADMINS</strong> group, the malware calls <strong>SHTestTokenMembership</strong> to check if the token has <strong>DOMAIN_ALIAS_RID_ADMINS</strong> privilege.</p>

<p>If it does not have enough privilege, <strong>BlackMatter</strong> frees all the heap buffers storing the credential and does not user it later.</p>

<p><img src="/uploads/blackmatter24.PNG" alt="alt text"></p>

<p><em>Figure 24: Skip if credential doesn’t have proper privilege.</em></p>

<h3 id="cryptographic-keys-setup">Cryptographic Keys Setup</h3>

<p><strong>BlackMatter</strong> has multiple key buffers to use depending on the size of the file being encrypted.</p>

<p>Below is the layout of these buffers.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">struct</span> <span class="n">KeyBuffer</span> <span class="p">{</span>
  <span class="n">DWORD</span> <span class="n">RSA_encrypted_ChaCha20_matrix_Checksum</span><span class="p">;</span>
  <span class="n">BYTE</span> <span class="n">RSA_encrypted_ChaCha20_matrix</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
  <span class="n">BYTE</span> <span class="n">ChaCha20_Matrix</span><span class="p">[</span><span class="mi">124</span><span class="p">];</span>
<span class="p">}</span>
</code></pre></div></div>

<p>To populate each of these, <strong>BlackMatter</strong> first randomly generates the <strong>ChaCha20</strong> matrix.</p>

<p><img src="/uploads/blackmatter25.PNG" alt="alt text"></p>

<p><em>Figure 25: ChaCha20 matrix generation.</em></p>

<p>For <strong>BlackMatter v2</strong>, the matrix is 124-byte or 31-DWORD in length. The first 29 DWORDs in the buffer is randomly generated using assembly instructions <strong>cpuid, rdrand, rdseed, and __rdtsc</strong>. The 30th DWORD is the first 4 bytes in the <strong>RSA</strong> Public Key from the configuration, and the last DWORD contains 3 randomly generated bytes.</p>

<p>The raw matrix is copied to the last 124 bytes of the <strong>RSA_encrypted_ChaCha20_matrix</strong> buffer, and BlackMatter puts the encryption skipped size in the first DWORD of this buffer (0 if chunking is not enabled).</p>

<p>This buffer is then encrypted by the <strong>RSA</strong> public key from the configuration, and the malware generates and writes the encrypted result to the <strong>RSA_encrypted_ChaCha20_matrix</strong> field. It also generates the checksum of this encrypted buffer and writes it in the <strong>RSA_encrypted_ChaCha20_matrix_Checksum</strong> field.</p>

<p><img src="/uploads/blackmatter26.PNG" alt="alt text"></p>

<p><em>Figure 26: Key buffer generation.</em></p>

<p><strong>BlackMatter</strong> randomly generates 11 different key buffers that are used depending on the size of the file to be encrypted.</p>

<p>Below is the list of skipped sizes <strong>BlackMatter</strong> uses.</p>

<ul>
  <li>0x0</li>
  <li>0x200000</li>
  <li>0x400000</li>
  <li>0x800000</li>
  <li>0x1000000</li>
  <li>0x2000000</li>
  <li>0x4000000</li>
  <li>0x8000000</li>
  <li>0x10000000</li>
  <li>0x20000000</li>
  <li>0x40000000</li>
</ul>

<p><img src="/uploads/blackmatter61.PNG" alt="alt text"></p>

<p><em>Figure 27: Key buffer generation 2.</em></p>

<h2 id="safe-mode-reboot">Safe Mode Reboot</h2>

<p>If the command-line argument <strong>-safe</strong> is provided and the process’s token belongs to <strong>DOMAIN_ALIAS_RID_ADMINS</strong>, <strong>BlackMatter</strong> attempts to force the system to reboot into safe mode in order to gain more privilege to execute itself.</p>

<h3 id="checking-computer-name">Checking Computer Name</h3>

<p>The malware gets the computer name with <strong>GetComputerNameW</strong> and compares its hash with the list of hashes from the <strong>COMPUTERNAMES_TO_AVOID</strong> field in the configuration. If the hash is in the list, <strong>BlackMatter</strong> skips this operation.</p>

<p><img src="/uploads/blackmatter27.PNG" alt="alt text"></p>

<p><em>Figure 28: Checking computer name.</em></p>

<h3 id="auto-logon-credential">Auto Logon Credential</h3>

<p>Prior to activating safe mode, <strong>BlackMatter</strong> retrieves proper user credentials to modify the <strong>Winlogon</strong> registry key.</p>

<p>First, if <strong>ATTEMPT_LOGON_FLAG</strong> is true and the username, password, and domain name are properly parsed from the configuration, then the malware just uses those credentials.</p>

<p>If not, it calls <strong>NetUserEnum</strong> with a filter for normal accounts. <strong>BlackMatter</strong> iterates through user information entries until it finds one with the user ID of 500, which is the ID for normal users. If the account corresponding to this entry is disabled, the malware enables it manually by setting the flags in the user information entry.</p>

<p><img src="/uploads/blackmatter28.PNG" alt="alt text"></p>

<p><em>Figure 29: Enumerating for normal user account.</em></p>

<p>Next, <strong>BlackMatter</strong> generates a new password for this account. The format of the password string is 3 random uppercase letters, 1 random character of <strong>’#’</strong> or <strong>‘&amp;’</strong>, 3 random numbers, 1 random character of <strong>’#’</strong> or <strong>‘&amp;’</strong>, and 4 random lowercase letters.</p>

<p>The malware updates the user account entry with this new password and calls <strong>NetUserSetInfo</strong> to udate the user account with the updated entry.</p>

<p><img src="/uploads/blackmatter29.PNG" alt="alt text"></p>

<p><em>Figure 30: Generating new password and updating account.</em></p>

<p>Next, <strong>BlackMatter</strong> sets the following registry keys to these values.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">SOFTWARE</span><span class="err">\</span><span class="n">Microsoft</span><span class="err">\</span><span class="n">Windows</span> <span class="n">NT</span><span class="err">\</span><span class="n">CurrentVersion</span><span class="err">\</span><span class="n">Winlogon</span><span class="err">\</span><span class="n">AutoAdminLogon</span><span class="p">:</span> <span class="s">"1"</span>
<span class="o">-</span> <span class="n">SOFTWARE</span><span class="err">\</span><span class="n">Microsoft</span><span class="err">\</span><span class="n">Windows</span> <span class="n">NT</span><span class="err">\</span><span class="n">CurrentVersion</span><span class="err">\</span><span class="n">Winlogon</span><span class="err">\</span><span class="n">DefaultUserName</span><span class="p">:</span> <span class="n">Account</span> <span class="n">username</span>
<span class="o">-</span> <span class="n">SOFTWARE</span><span class="err">\</span><span class="n">Microsoft</span><span class="err">\</span><span class="n">Windows</span> <span class="n">NT</span><span class="err">\</span><span class="n">CurrentVersion</span><span class="err">\</span><span class="n">Winlogon</span><span class="err">\</span><span class="n">DefaultDomainName</span><span class="p">:</span> <span class="n">Account</span> <span class="n">domain</span> <span class="n">name</span>
<span class="o">-</span> <span class="n">SOFTWARE</span><span class="err">\</span><span class="n">Microsoft</span><span class="err">\</span><span class="n">Windows</span> <span class="n">NT</span><span class="err">\</span><span class="n">CurrentVersion</span><span class="err">\</span><span class="n">Winlogon</span><span class="err">\</span><span class="n">DefaultPassword</span><span class="p">:</span> <span class="n">Account</span> <span class="n">password</span>
</code></pre></div></div>

<p>This sets the default credentials to the account that <strong>BlackMatter</strong> has control over (with the password from configuration or the newly generated password) and enables automatic admin logon upon reboot.</p>

<p>It also calls <strong>LsaStorePrivateData</strong> to store and protect the account’s password locally.</p>

<p><img src="/uploads/blackmatter30.PNG" alt="alt text"></p>

<p><em>Figure 31: Setting logon credentials and enabling auto admin logon.</em></p>

<h3 id="runonce-registry-persistence">RunOnce Registry Persistence</h3>

<p><strong>BlackMatter</strong> sets the value of the registry key <strong>SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce</strong> to its own executable path to automatically launch itself upon reboot in safe mode.</p>

<p>The registry key name is randomly generated in the format of 3 random uppercase letters, 3 random numbers, and 3 random lowercase letters.</p>

<p><img src="/uploads/blackmatter31.PNG" alt="alt text"></p>

<p><em>Figure 32: Persistence through registry.</em></p>

<h3 id="safe-boot-command-execution">Safe Boot Command Execution</h3>

<p>Prior to executing commands to enable safe boot, <strong>BlackMatter</strong> sets up wallpaper operations that are documented <a href="#setting-ransom-wallpaper">here</a> without calling <strong>SystemParametersInfoW</strong> to change the wallpaper.</p>

<p>If the enable flag being passed as a parameter is true, <strong>BlackMatter</strong> executes one of these commands with <strong>WinExec</strong> based on the OS version to enable safe mode reboot.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">Below</span> <span class="n">Windows</span> <span class="n">Vista</span><span class="p">:</span> <span class="n">bootcfg</span> <span class="o">/</span><span class="n">raw</span> <span class="o">/</span><span class="n">a</span> <span class="o">/</span><span class="n">safeboot</span><span class="p">:</span><span class="n">network</span> <span class="o">/</span><span class="n">id</span> <span class="mi">1</span>
<span class="o">-</span> <span class="n">Windows</span> <span class="n">Vista</span> <span class="n">and</span> <span class="n">above</span><span class="p">:</span> <span class="n">bcdedit</span> <span class="o">/</span><span class="n">set</span> <span class="p">{</span><span class="n">current</span><span class="p">}</span> <span class="n">safeboot</span> <span class="n">network</span>
</code></pre></div></div>

<p>If the enable flag being passed as a parameter is false, <strong>BlackMatter</strong> executes one of these commands with <strong>WinExec</strong> based on the OS version to disable safe mode reboot.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">Below</span> <span class="n">Windows</span> <span class="n">Vista</span><span class="p">:</span> <span class="n">bootcfg</span> <span class="o">/</span><span class="n">raw</span> <span class="o">/</span><span class="n">fastdetect</span> <span class="o">/</span><span class="n">id</span> <span class="mi">1</span>
<span class="o">-</span> <span class="n">Windows</span> <span class="n">Vista</span> <span class="n">and</span> <span class="n">above</span><span class="p">:</span> <span class="n">bcdedit</span> <span class="o">/</span><span class="n">deletevalue</span> <span class="p">{</span><span class="n">current</span><span class="p">}</span> <span class="n">safeboot</span>
</code></pre></div></div>

<p>Finally, it calls <strong>NtShutdownSystem</strong> to reboot the system.</p>

<p><img src="/uploads/blackmatter32.PNG" alt="alt text"></p>

<p><em>Figure 33: Configuring system to boot into Safe Mode.</em></p>

<h2 id="setting-ransom-wallpaper">Setting Ransom Wallpaper</h2>

<p>If the command-line argument <strong>-wall</strong> is provided, <strong>BlackMatter</strong> generates a Bitmap file and sets it as the wallpaper on the victim’s computer.</p>

<p>First, using <strong>NtQuerySystemInformation</strong>, it queries all processes’ information on the system and terminates all <strong>Run Once Wrapper Utility</strong> processes with the image name <strong>runonce.exe</strong> using <strong>NtTerminateProcess</strong>.</p>

<p><img src="/uploads/blackmatter33.PNG" alt="alt text"></p>

<p><em>Figure 34: Terminating runonce.exe.</em></p>

<p>Next, the malware calls <strong>GetShellWindow</strong>(if the OS is Windows Vista or above) or <strong>GetDesktopWindow</strong> to retrieve a handle to the desktop window. It continues to do this until it gets a valid handle and the window is currently visible.</p>

<p><img src="/uploads/blackmatter34.PNG" alt="alt text"></p>

<p><em>Figure 35: Retrieving desktop window.</em></p>

<p>Finally, <strong>BlackMatter</strong> sets up the wallpaper to display the ransom instruction.</p>

<p>The malware sets the following registry keys.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">HKLM</span><span class="err">\</span><span class="n">SOFTWARE</span><span class="err">\</span><span class="o">&lt;</span><span class="n">ENCRYPTED_EXTENSION</span><span class="o">&gt;</span><span class="err">\</span><span class="n">hScreen</span><span class="p">:</span> <span class="n">Window</span> <span class="n">screen</span> <span class="n">height</span>
<span class="o">-</span> <span class="n">HKLM</span><span class="err">\</span><span class="n">SOFTWARE</span><span class="err">\</span><span class="o">&lt;</span><span class="n">ENCRYPTED_EXTENSION</span><span class="o">&gt;</span><span class="err">\</span><span class="n">wScreen</span><span class="p">:</span> <span class="n">Window</span> <span class="n">screen</span> <span class="n">width</span>
</code></pre></div></div>

<p><img src="/uploads/blackmatter35.PNG" alt="alt text"></p>

<p><em>Figure 36: Setting window screen registry Keys.</em></p>

<p>Next, it creates a handle to the <strong>Times New Roman</strong> font and writes the ransom instruction using the font into a Bitmap.</p>

<p>The content of the ransom instruction is documented below.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">BlackMatter</span> <span class="n">Ransomware</span> <span class="n">encrypted</span> <span class="n">all</span> <span class="n">your</span> <span class="n">files</span><span class="o">!</span>
<span class="n">To</span> <span class="n">get</span> <span class="n">your</span> <span class="n">data</span> <span class="n">back</span> <span class="n">and</span> <span class="n">keep</span> <span class="n">your</span> <span class="n">privacy</span> <span class="n">safe</span><span class="p">,</span>
<span class="n">you</span> <span class="n">must</span> <span class="n">find</span> <span class="o">&lt;</span><span class="n">Ransom</span> <span class="n">note</span> <span class="n">filenam</span><span class="o">&gt;</span> <span class="n">file</span>
<span class="n">and</span> <span class="n">follow</span> <span class="n">the</span> <span class="n">instructions</span><span class="o">!</span>
</code></pre></div></div>

<p><img src="/uploads/blackmatter36.PNG" alt="alt text"></p>

<p><em>Figure 37: Generating ransom wallpaper.</em></p>

<p>After creating the Bitmap in memory, the malware writes it to disk at the path below.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="n">special</span> <span class="n">folder</span> <span class="n">path</span><span class="o">&gt;/&lt;</span><span class="n">encrypted</span> <span class="n">extension</span><span class="o">&gt;</span><span class="py">.bmp</span>
</code></pre></div></div>

<p><img src="/uploads/blackmatter37.PNG" alt="alt text"></p>

<p><em>Figure 38: Writing bitmap content to disk.</em></p>

<p>Using the elevated token it has, <strong>BlackMatter</strong> retrieves the token’s process’s SID and create the following registry key.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">HKU</span><span class="err">\</span><span class="o">&lt;</span><span class="n">Process</span> <span class="n">SID</span><span class="o">&gt;</span><span class="err">\</span><span class="n">Control</span> <span class="n">Panel</span><span class="err">\</span><span class="n">Desktop</span>
</code></pre></div></div>

<p>It sets the following registry key.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">HKU</span><span class="err">\</span><span class="o">&lt;</span><span class="n">Process</span> <span class="n">SID</span><span class="o">&gt;</span><span class="err">\</span><span class="n">Control</span> <span class="n">Panel</span><span class="err">\</span><span class="n">Desktop</span><span class="err">\</span><span class="n">WallPaper</span><span class="p">:</span> <span class="n">Bitmap</span> <span class="n">file</span> <span class="n">path</span>
<span class="o">-</span> <span class="n">HKU</span><span class="err">\</span><span class="o">&lt;</span><span class="n">Process</span> <span class="n">SID</span><span class="o">&gt;</span><span class="err">\</span><span class="n">Control</span> <span class="n">Panel</span><span class="err">\</span><span class="n">Desktop</span><span class="err">\</span><span class="n">WallpaperStyle</span><span class="p">:</span> <span class="s">"10"</span>
</code></pre></div></div>

<p>To set the victim’s machine’s wallpaper to the generated Bitmap, <strong>BlackMatter</strong> calls <strong>SystemParametersInfoW</strong> to set <strong>SPI_SETDESKWALLPAPER</strong> to the Bitmap disk path if the enable flag from the function’s parameter is true.</p>

<p><img src="/uploads/blackmatter38.PNG" alt="alt text"></p>

<p><em>Figure 39: Setting ransom wallpaper.</em></p>

<h3 id="ransom-note-printing">Ransom Note Printing</h3>

<p>When the command-line argument <strong>-wall</strong> is provided, <strong>BlackMatter</strong> also prints the ransom note using the system’s default printer.</p>

<p>If the <strong>PRINTER_PRINT_RANSOMNOTE_FLAG</strong> in the configuration is 1, the malware retrieves the current directory of the ransomware executable with <strong>GetCurrentDirectoryW</strong> and drops a ransom note file in there.</p>

<p><img src="/uploads/blackmatter39.PNG" alt="alt text"></p>

<p><em>Figure 40: Function to drop ransom note file.</em></p>

<p>Then, it calls <strong>GetDefaultPrinterW</strong> to retrieve the system’s default printer and calls <strong>ShellExecuteW</strong> to execute the <strong>print</strong> command to print the ransom note.</p>

<p><img src="/uploads/blackmatter92.PNG" alt="alt text"></p>

<p><em>Figure 41: Function to print ransom note file.</em></p>

<h2 id="run-once-mutex">Run-Once Mutex</h2>

<p>If the <strong>CREATE_MUTEX_FLAG</strong> in the configuration is 1, the malware checks if there is another instance of itself running by checking if the mutex below already exists using <strong>CreateMutex</strong>.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">Global</span><span class="err">\</span><span class="o">&lt;</span><span class="n">MD4</span> <span class="n">hash</span> <span class="n">of</span> <span class="n">machine</span> <span class="n">GUID</span><span class="o">&gt;</span>
</code></pre></div></div>

<p><img src="/uploads/blackmatter40.PNG" alt="alt text"></p>

<p><em>Figure 42: Generating mutex name.</em></p>

<p>If there is another instance, the malware returns immediately and does not encrypt anything.</p>

<p><img src="/uploads/blackmatter41.PNG" alt="alt text"></p>

<p><em>Figure 43: Existing when mutex can’t be opened.</em></p>

<p>If there is no other instance running, <strong>BlackMatter</strong> keeps the mutex opened until it finishes encrypting to prevent any other instance of itself from running.</p>

<h2 id="wiping-recycle-bins">Wiping Recycle Bins</h2>

<p>Prior to file encryption, <strong>BlackMatter</strong> wipes the recycle bin folder of every drive on the system.</p>

<p>For each drive, the malware manually iterates through folders in the first layer of the drive and stops when it finds the first folder with <strong>“recycle”</strong> in the name.</p>

<p><img src="/uploads/blackmatter42.PNG" alt="alt text"></p>

<p><em>Figure 44: Finding Recycle Bin in drives.</em></p>

<p>Afterward, it uses <strong>FindFirstFileEx</strong> and <strong>FindNextFileW</strong> to iterate through the Recycle Bin folder and looks for all folders that begins with <strong>“S-“</strong>. Once found, the folders and their contents are recursively deleted using <strong>DeleteFileW</strong>.</p>

<p><img src="/uploads/blackmatter43.PNG" alt="alt text"></p>

<p><em>Figure 45: Wiping Recycle Bin.</em></p>

<p>This function to wipe Recycle Bin is called on every fixed and removable logical drives on the system.</p>

<p><img src="/uploads/blackmatter44.PNG" alt="alt text"></p>

<p><em>Figure 46: Wiping all Recycle Bins.</em></p>

<h2 id="shadow-copies-deletion-through-wmi">Shadow Copies Deletion Through WMI</h2>

<p>The malware calls <strong>CoCreateInstance</strong> to create an <strong>IWbemLocator</strong> object using the IID <em>{DC12A687-737F-11CF-884D-00AA004B2E24}</em> and CLSID <em>{CB8555CC-9128-11D1-AD9B-00C04FD8FDFF}</em>.</p>

<p>It then calls <strong>CoCreateInstance</strong> to create an <strong>IWbemContext</strong> object using the CLSID <em>{674B6698-EE92-11D0-AD71-00C04FD8FDFF}</em>.</p>

<p>If the system architecture is <strong>x64</strong>, it calls the <strong>IWbemContext::SetValue</strong> function to set the value of <strong>“__ProviderArchitecture”</strong> to <strong>64</strong>.</p>

<p><strong>BlackMatter</strong> calls the <strong>IWbemLocator::ConnectServer</strong> method to connect with the local <strong>ROOT\CIMV2</strong> namespace and obtain the pointer to an <strong>IWbemServices</strong> object.</p>

<p><img src="/uploads/blackmatter45.PNG" alt="alt text"></p>

<p><em>Figure 47: Connecting to ROOT\CIMV2 for IWbemServices Object.</em></p>

<p>Next, it calls <strong>IWbemServices::ExecQuery</strong> to execute the WQL query below to get the <strong>IEnumWbemClassObject</strong> object for querying shadow copies.</p>

<pre><code class="language-SQL">SELECT * FROM Win32_ShadowCopy
</code></pre>

<p>The malware calls <strong>IEnumWbemClassObject::Next</strong> to enumerate through all shadow copies on the system, <strong>IEnumWbemClassObject::Get</strong> to get the ID of each shadow copies, and <strong>IWbemServices::DeleteInstance</strong> to delete them.</p>

<p><img src="/uploads/blackmatter46.PNG" alt="alt text"></p>

<p><em>Figure 48: Deleting shadow copies through WMI.</em></p>

<h2 id="terminating-services-through-service-control-manager">Terminating Services through Service Control Manager</h2>

<p>If the <strong>STOP_SERVICES_AND_DELETE_FLAG</strong> field is set to true in the configuration, <strong>BlackMatter</strong> terminates and deletes all services whose name’s hash is in the <strong>SERVICES_TO_KILL</strong> list in the configuration.</p>

<p>First, the malware calls <strong>OpenSCManagerW</strong> to get a service control manager handle for active services.</p>

<p>It then calls <strong>EnumServicesStatusExW</strong> to enumerate the name of all <strong>Win32</strong> services. If the hash of the service name is in the list, the malware terminates it by calling <strong>ControlService</strong> to send the <strong>SERVICE_CONTROL_STOP</strong> control code to the service handle.</p>

<p>Then, it calls <strong>DeleteService</strong> to completely delete the service.</p>

<p><img src="/uploads/blackmatter47.PNG" alt="alt text"></p>

<p><em>Figure 49: Enumerating and deleting services.</em></p>

<h2 id="terminating-processes">Terminating Processes</h2>

<p>If the <strong>TERMINATE_PROCESSES_FLAG</strong> field is set to true in the configuration, <strong>BlackMatter</strong> terminates all processes whose name’s hash is in the <strong>PROCESSES_TO_KILL</strong> list in the configuration.</p>

<p>The malware calls <strong>NtQuerySystemInformation</strong> to query and enumerate through all system’s processes.</p>

<p>If the hash of the process’s name is in the list, <strong>BlackMatter</strong> terminates it by calling <strong>NtOpenProcess</strong> using the process’s ID to retrieve the process handle and <strong>NtTerminateProcess</strong> to terminate it.</p>

<p><img src="/uploads/blackmatter48.PNG" alt="alt text"></p>

<p><em>Figure 50: Terminating target processes.</em></p>

<h2 id="file-encryption">File Encryption</h2>

<p>Like <strong>REvil</strong> and <strong>Darkside</strong>, <strong>BlackMatter</strong> uses multithreading with I/O completion port to communicate between a parent thread- (check and send files) and the child threads (encrypt files) to speed up encryption.</p>

<h3 id="multithreading-parent-thread">Multithreading: Parent Thread</h3>

<p>In <strong>BlackMatter</strong> multithreading setup, the parent thread is spawned after the child threads.</p>

<p>This parent thread function receives a parameter of a file/directory path. It first checks if this path is a directory or not.</p>

<p>If the path is a directory, the malware escalates the parent thread’s base priority level to <strong>THREAD_PRIORITY_HIGHEST</strong>.</p>

<p>Next, it allocates memory for an array to store sub-directories inside of the target directory to encrypt.</p>

<p><img src="/uploads/blackmatter49.PNG" alt="alt text"></p>

<p><em>Figure 51: Parent thread: Processing directory.</em></p>

<p>The parent thread proceeds to drop a ransom note in the target directory and begins enumerating through the directory using <strong>FindFirstFileExW</strong> and <strong>FindNextFileW</strong>.</p>

<p>It avoids all files and sub-directories with names <strong>”.”</strong> and <strong>”.”</strong> and with the attributes <strong>FILE_ATTRIBUTE_REPARSE_POINT</strong> and <strong>FILE_ATTRIBUTE_SYSTEM</strong>.</p>

<p><img src="/uploads/blackmatter50.PNG" alt="alt text"></p>

<p><em>Figure 52: Parent thread: Processing sub-files and sub-directories.</em></p>

<p>If <strong>BlackMatter</strong> finds a sub-directory, it checks if the hash of the name of the directory is in the <strong>FOLDER_HASHES_TO_AVOID</strong> list or if the name is <strong>“windows</strong>.</p>

<p><img src="/uploads/blackmatter52.PNG" alt="alt text"></p>

<p><em>Figure 53: Parent thread: Checking directory names.</em></p>

<p>Below is the list of folder names whose hash is in <strong>FOLDER_HASHES_TO_AVOID</strong>.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>system volume information
intel
$windows.~ws
application data
$recycle.bin
mozilla
program files (x86)
program files
$windows.~bt
public
msocache
windows
default
all users
tor browser
programdata
boot
config.msi
google
perflogs
appdata
windows.old
</code></pre></div></div>

<p>If the sub-directory is valid to encrypt, <strong>BlackMatter</strong> adds it to the back of the directory array.</p>

<p>After finish enumerating the target directory, <strong>BlackMatter</strong> walks through the directory array and enumerates the directories listed in there. This allows multilayered traversal through directories without using recursion, which significantly improves performance by eliminating the stack overhead from recursive calls.</p>

<p><img src="/uploads/blackmatter53.PNG" alt="alt text"></p>

<p><em>Figure 54: Parent Thread: Multilayered directory traversal.</em></p>

<p>If it finds a file, the filename is checked against the <strong>FILE_HASHES_TO_AVOID</strong> list and the file extension is checked against the <strong>EXTENSION_HASHES_TO_AVOID</strong> list.</p>

<p><img src="/uploads/blackmatter51.PNG" alt="alt text"></p>

<p><em>Figure 55: Parent Thread: Checking filenames and extensions.</em></p>

<p>Below is the list of filenames whose hash is in the <strong>FILE_HASHES_TO_AVOID</strong> list.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>desktop.ini
autorun.inf
ntldr
bootsect.bak
thumbs.db
boot.ini
ntuser.dat
iconcache.db
bootfont.bin
ntuser.ini
ntuser.dat.log
</code></pre></div></div>

<p>Below is the list of extensions whose hash is in the <strong>EXTENSION_HASHES_TO_AVOID</strong> list.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>themepack
nls
diagpkg
msi
lnk
exe
cab
scr
bat
drv
rtp
msp
prf
msc
ico
key
ocx
diagcab
diagcfg
pdb
wpx
hlp
icns
rom
dll
msstyles
mod
ps1
ics
hta
bin
cmd
ani
386
lock
cur
idx
sys
com
deskthemepack
shs
ldf
theme
mpa
nomedia
spl
cpl
adv
icl
msu
</code></pre></div></div>

<p>If the file passes these checks, the parent thread will send it to the child threads to be encrypted.</p>

<p>If the file is a link with <strong>.lnk</strong> extension, <strong>BlackMatter</strong> manually resolves the link to get the full path to the file before encrypting it.</p>

<p>First, using the LinkCLSID of <strong>{00021401-0000-0000-C000-000000000046}</strong> and the <strong>IShellLinkW</strong> RIID of <strong>{000214F9-0000-0000-C000-000000000046}</strong>, the malware retrieves an <strong>IShellLinkW</strong> interface.</p>

<p>Using the <strong>QueryInterface</strong> function of the <strong>IShellLinkW</strong> interface with the <strong>IPersistFile</strong> RIID {0000010b-0000-0000-C000-000000000046}, the malware retrieves the <strong>IPersistFile</strong> interface.</p>

<p>It calls the <strong>IPersistFile-&gt;Load</strong> function to load the link file to read.</p>

<p>After loading, <strong>BlackMatter</strong> calls <strong>IShellLinkW-&gt;GetPath</strong> to retrieves the full file path from the link.</p>

<p><img src="/uploads/blackmatter90.PNG" alt="alt text"></p>

<p><em>Figure 56: Resolving full path from link.</em></p>

<h3 id="multithreading-parent-thread-communication">Multithreading: Parent Thread Communication</h3>

<h4 id="file-owner-termination">File Owner Termination</h4>

<p>Before sending a file to child threads to be encrypted, the parent thread terminates all processes/services that are currently accessing the file using the Windows Restart Manager.</p>

<p><strong>BlackMatter</strong> first calls <strong>RmStartSession</strong> to start a new Restart Manager session, <strong>RmRegisterResources</strong> to register the target file with the Restart Manager as a resource, and <strong>RmGetList</strong> to get a list of all applications and services that are currently using it.</p>

<p><img src="/uploads/blackmatter54.PNG" alt="alt text"></p>

<p><em>Figure 57: Parent thread: Registering file with Restart Manager.</em></p>

<p>It iterates through the list of processes and services and terminates all whose application type is not <strong>RmCritical</strong> and <strong>RmExplorer</strong></p>

<p><img src="/uploads/blackmatter55.PNG" alt="alt text"></p>

<p><em>Figure 58: Parent thread: Iterating and terminating file owners.</em></p>

<p>To terminate a service, <strong>BlackMatter</strong> calls <strong>OpenSCManagerW</strong> to establishes a connection to the service control manager, <strong>OpenServiceW</strong> to obtain a handle to the target service, <strong>ControlService</strong> to send the control stop code to the service to stop it, and <strong>DeleteService</strong> to delete it.</p>

<p><img src="/uploads/blackmatter56.PNG" alt="alt text"></p>

<p><em>Figure 59: Service deletion.</em></p>

<p>To terminate a process, <strong>BlackMatter</strong> calls <strong>NtOpenProcess</strong> to obtain a handle to the target process and <strong>NtTerminateProcess</strong> to terminate it.</p>

<p><img src="/uploads/blackmatter57.PNG" alt="alt text"></p>

<p><em>Figure 60: Process termination.</em></p>

<h4 id="check-if-file-is-already-encrypted">Check If File Is Already Encrypted</h4>

<p>At the end of the encryption, the <strong>RSA_encrypted_ChaCha20_matrix_Checksum</strong> and <strong>RSA_encrypted_ChaCha20_matrix</strong> fields in the <strong>KeyBuffer</strong> structure from <a href="#cryptographic-keys-setup">Cryptographic Keys Setup</a> are appended to the file footer.</p>

<p>When <strong>BlackMatter</strong> needs to check if a file is encrypted, it extracts the memory buffer where the <strong>RSA_encrypted_ChaCha20_matrix</strong> field is supposed to be, generates its checksum, and compares it to the value at where the <strong>RSA_encrypted_ChaCha20_matrix_Checksum</strong> field is supposed to be.</p>

<p><img src="/uploads/blackmatter58.PNG" alt="alt text"></p>

<p><em>Figure 61: Check if file is already encrypted.</em></p>

<h4 id="checking-large-file">Checking Large File</h4>

<p>A feature to process large files is added to <strong>BlackMatter v2.0</strong>.</p>

<p>When the <strong>ENCRYPT_LARGE_FILE_FLAG</strong> is true in the configuration, the malware checks if the file is a large file through its extension.</p>

<p>If the file’s extension is in the list below, then the file is classified as large.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mdf
ndf
edb
mdb
accdb
</code></pre></div></div>

<p>The lengths of these are quite short and predictable, so I just bruteforce them with a Python script.</p>

<p><img src="/uploads/blackmatter59.PNG" alt="alt text"></p>

<p><em>Figure 62: Check if file is large.</em></p>

<h4 id="thread-shared-structure">Thread Shared Structure</h4>

<p>Prior to populating the shared structure between parent and child threads, the malware appends the encrypted extension to the file path and calls <strong>MoveFileExW</strong> to move the original file’s content to this new filename.</p>

<p>In the case where the new filename already exists, the malware manually adds <strong>-[number]</strong> to the filename before the extension where <strong>number</strong> is incremented from 0 until the filename does not exist in the folder.</p>

<p><img src="/uploads/blackmatter60.PNG" alt="alt text"></p>

<p><em>Figure 63: Create file with encrypted extension.</em></p>

<p>The shared structure is used by threads to communicate with each other.</p>

<p>Below is my rough recreation of this structure based on the offset of the fields.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">struct</span> <span class="n">BlackmatterFileStruct</span>
<span class="p">{</span>
  <span class="n">LONGLONG</span> <span class="n">errorCode</span><span class="p">;</span>
  <span class="n">DWORD</span> <span class="n">originalfilePointerLow</span><span class="p">;</span>
  <span class="n">DWORD</span> <span class="n">originalfilePointerHigh</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">padding</span><span class="p">;</span>
  <span class="n">DWORD</span> <span class="n">filePointerLow</span><span class="p">;</span>
  <span class="n">DWORD</span> <span class="n">filePointerHigh</span><span class="p">;</span>
  <span class="n">DWORD</span> <span class="n">skippedBytesLow</span><span class="p">;</span>
  <span class="n">DWORD</span> <span class="n">skippedBytesHigh</span><span class="p">;</span>
  <span class="n">HANDLE</span> <span class="n">fileHandle</span><span class="p">;</span>
  <span class="n">DWORD</span> <span class="n">threadCurrentState</span><span class="p">;</span>
  <span class="n">BYTE</span> <span class="n">rawChaCha20Matrix</span><span class="p">[</span><span class="mi">124</span><span class="p">];</span>
  <span class="n">DWORD</span> <span class="n">fileSize</span><span class="p">;</span>
  <span class="n">BYTE</span> <span class="n">padding2</span><span class="p">[</span><span class="mi">368</span><span class="p">];</span>
  <span class="n">BYTE</span> <span class="n">fileFooter</span><span class="p">[</span><span class="mi">132</span><span class="p">];</span>
  <span class="n">DWORD</span> <span class="o">*</span><span class="n">bytesToRead</span><span class="p">;</span>
  <span class="n">BYTE</span> <span class="o">*</span><span class="n">bufferToReadData</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<p>First, the parent thread checks the file size to populate the <strong>bytesToRead</strong> field. If the file size is 0x100000 bytes or more, the <strong>bytesToRead</strong> value is maxed out at <strong>0x100000</strong>. This means file data is read and encrypted in 0x100000-byte chunks.</p>

<p><img src="/uploads/blackmatter62.PNG" alt="alt text"></p>

<p><em>Figure 64: Setting encrypting size.</em></p>

<p><strong>BlackMatter</strong> then populates the <strong>rawChaCha20Matrix</strong> and <strong>fileFooter</strong> field with the buffers generated in <a href="#cryptographic-keys-setup">Cryptographic Keys Setup</a>.</p>

<p>Each of these buffers is dedicated to a specific skipped size between chunks.</p>

<p>Below is the conversion between the file size the skipped size between chunks.</p>

<table>
  <thead>
    <tr>
      <th>File Type</th>
      <th>File Size</th>
      <th>Skipped Size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Small</td>
      <td>Any size</td>
      <td>0 byte</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Less than 0x8000000 bytes</td>
      <td>0x200000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Between 0x8000000 and 0x20000000 - 1 bytes</td>
      <td>0x400000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Between 0x20000000 and 0x80000000 - 1 bytes</td>
      <td>0x800000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Between 0x80000000 and 0x200000000 - 1 bytes</td>
      <td>0x1000000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Between 0x200000000 and 0x800000000 - 1 bytes</td>
      <td>0x2000000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Between 0x800000000 and 0x2000000000 - 1 bytes</td>
      <td>0x4000000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Between 0x2000000000 and 0x8000000000 - 1 bytes</td>
      <td>0x8000000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Between 0x8000000000 and 0x20000000000 - 1 bytes</td>
      <td>0x10000000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Between 0x20000000000 and 0x80000000000 - 1 bytes</td>
      <td>0x20000000 bytes</td>
    </tr>
    <tr>
      <td>Large</td>
      <td>Equal or greater than 0x80000000000</td>
      <td>0x40000000 bytes</td>
    </tr>
  </tbody>
</table>

<p>From looking up the size of the file on the table above, <strong>BlackMatter</strong> chooses the appropriate <strong>ChaCha20</strong> matrix used to encrypt files.</p>

<p><img src="/uploads/blackmatter63.PNG" alt="alt text"></p>

<p><em>Figure 65: Populating Encryption Fields In Shared Structure.</em></p>

<p>Finally, the parent thread registers the target file handle with the global I/O completion port using <strong>CreateIoCompletionPort</strong>, sets the <strong>fileHandle</strong> field in the structure to the file handle and the <strong>threadCurrentState</strong> field to the initial state, and sends the shared structure to child threads using <strong>PostQueuedCompletionStatus</strong> to begin encryption.</p>

<p><img src="/uploads/blackmatter64.PNG" alt="alt text"></p>

<p><em>Figure 66: Sending shared structure to child threads.</em></p>

<h3 id="multithreading-child-threads-encryption">Multithreading: Child Threads Encryption</h3>

<p>Child threads communicate with each other and the main thread using <strong>GetQueuedCompletionStatus</strong> and <strong>PostQueuedCompletionStatus</strong>.</p>

<p>Each thread constantly polls for an I/O completion packet from the global I/O completion port. The packet received from <strong>GetQueuedCompletionStatus</strong> contains an file’s <strong>BlackmatterFileStruct</strong> structure to be processed.</p>

<p><img src="/uploads/blackmatter65.PNG" alt="alt text"></p>

<p><em>Figure 67: Sending shared structure to child threads.</em></p>

<p>The encryption process is divided into four states. The file’s current state is recorded in the <strong>threadCurrentState</strong> of the shared structure.</p>

<h4 id="i-state-0-reading-file">I. State 0: Reading File</h4>

<p>The first state reads a number of bytes specified by the <strong>bytesToRead</strong> field into the buffer at the <strong>bufferToReadData</strong> field using <strong>ReadFile</strong>.</p>

<p>If <strong>ReadFile</strong> throws the error <strong>ERROR_IO_PENDING</strong>, the malware enters an infinite loop of sleeping for 100ms and calling <strong>ReadFile</strong> until it succeeds.</p>

<p>If <strong>ReadFile</strong> throws the error <strong>ERROR_HANDLE_EOF</strong>, the malware sets the encryption state to 2, else the encryption state is set to 1.</p>

<p><img src="/uploads/blackmatter66.PNG" alt="alt text"></p>

<p><em>Figure 68: State 0: Reading file.</em></p>

<h4 id="ii-state-1-encrypt-and-write-file">II. State 1. Encrypt and Write File</h4>

<p>The second state encrypts the buffer at the <strong>bufferToReadData</strong> field using its modified <strong>ChaCha20</strong> implementation.</p>

<p>After the encryption, the malware calls <strong>WriteFile</strong> to write the encrypted data back into the file.</p>

<p>If <strong>ReadFile</strong> throws the error <strong>ERROR_IO_PENDING</strong>, the malware enters an infinite loop of sleeping for 100ms and calling <strong>WriteFile</strong> until it succeeds.</p>

<p>If the skipped size is not zero, <strong>BlackMatter</strong> moves the file pointer ahead to the next chunk by adding that skipped size to the current pointer.</p>

<p><img src="/uploads/blackmatter67.PNG" alt="alt text"></p>

<p><em>Figure 69: State 1: Encrypting and writing file.</em></p>

<p>If the skipped size is zero, the malware stops encrypting after the first 0x100000 bytes and moves to state 2.</p>

<h5 id="blackmatter-custom-chacha20">BlackMatter Custom ChaCha20</h5>

<p>I want to discuss a bit about the customized ChaCha20 implementation of <strong>BlackMatter</strong>, instead of just glancing over it and calling it “customized”.</p>

<p>Full credit of this section goes to <a href="https://twitter.com/demonslay335">Michael Gillespie</a> for figuring out this crypto implementation and helping me understand it!</p>

<p>It seems like the implementation of <strong>BlackMatter v2</strong> is the modified version of <strong>CryptoPP’s ChaCha20</strong> implementation that can be found <a href="https://github.com/weidai11/cryptopp/blob/bc7d1bafa1e8ac732396374f0bca94ab9f396f1c/chacha_simd.cpp#L569">here</a>.</p>

<p>Unlike a lot of <strong>ChaCha</strong> implementation, this one utilizes the <strong>__m128i</strong> type to store the states in <strong>xmm</strong> regiters.</p>

<p>Despite allocating 124 bytes for the “matrix”, <strong>BlackMater</strong> only uses the first 64 bytes and turns it into a 128-byte state by mirroring the first 64 bytes with the last 64 bytes.</p>

<p>After performing 20 rounds of flipping and rotating using that state, the malware generates a 128-byte stream to encrypt the data coming in.</p>

<p><img src="/uploads/blackmatter91.PNG" alt="alt text"></p>

<p><em>Figure 69: Custom ChaCha20 implementation.</em></p>

<h4 id="iii-state-2-write-file-footer">III. State 2. Write File Footer</h4>

<p>This state is executed only when the file encryption is complete.</p>

<p><img src="/uploads/blackmatter68.PNG" alt="alt text"></p>

<p><em>Figure 70: State 2: Write file footer.</em></p>

<p>The malware calls <strong>WriteFile</strong> to write the 132-byte buffer from the <strong>fileFooter</strong> field in the shared structure to the end of the file.</p>

<p>This buffer contains the <strong>RSA_encrypted_ChaCha20_matrix_Checksum</strong> and the <strong>RSA_encrypted_ChaCha20_matrix</strong> fields in the structure from <a href="#cryptographic-keys-setup">Cryptographic Keys Setup</a>, which are used to check if a file is encrypted and to decrypt it.</p>

<p>After this state, the malware moves to state 3.</p>

<h4 id="iv-state-3-clean-up">IV. State 3. Clean Up</h4>

<p>This is the last state in the file encryption process.</p>

<p>In this state, <strong>BlackMatter</strong> calls <strong>NtClose</strong> to close the file handle, calls <strong>RtlFreeHeap</strong> to free the shared structure buffer from memory, and increments the global <strong>TOTAL_NUM_FILE_ENCRYPTED</strong> value.</p>

<p><img src="/uploads/blackmatter69.PNG" alt="alt text"></p>

<p><em>Figure 71: State 3: Clean up.</em></p>

<h4 id="child-thread-communication">Child Thread Communication</h4>

<p>In <strong>BlackMatter’s</strong> multithreading setup, each child thread only handles one state in the encryption process.</p>

<p>After each state (beside the final state), the malware calls <strong>PostQueuedCompletionStatus</strong> to post the shared structure to the global I/O completion port with the updated encryption state. The next thread who receives it then processes that state before moving it forward.</p>

<p><img src="/uploads/blackmatter70.PNG" alt="alt text"></p>

<p><em>Figure 72: Child thread communication.</em></p>

<h3 id="exchange-mailbox-traversal">Exchange Mailbox Traversal</h3>

<p>If the <strong>MOUNT_VOL_AND_ENCRYPT_FLAG</strong> in the configuration is set to true, <strong>BlackMatter</strong> encrypts the Exchange mailbox of the local user.</p>

<p>First, it calls <strong>GetEnvironmentVariableW</strong> to retrieve the Exchange installation path.</p>

<p><img src="/uploads/blackmatter71.PNG" alt="alt text"></p>

<p><em>Figure 73: Retrieving Exchange installation path.</em></p>

<p>After retrieving the path, the malware checks to make sure it is in the <strong>Program Files</strong> directory (64-bit Exchange installation) and append <strong>/Mailbox</strong> to the path.</p>

<p><img src="/uploads/blackmatter72.PNG" alt="alt text"></p>

<p><em>Figure 74: Building full Exchange mailbox path.</em></p>

<p>Finally, <strong>BlackMatter</strong> spawns threads to encrypt this path using the encryption scheme described above.</p>

<p><img src="/uploads/blackmatter73.PNG" alt="alt text"></p>

<p><em>Figure 75: Traversing and encrypting Exchange mailbox path.</em></p>

<h3 id="logical-drives-traversal">Logical Drives Traversal</h3>

<p>If the <strong>MOUNT_VOL_AND_ENCRYPT_FLAG</strong> in the configuration is set to true, <strong>BlackMatter</strong> mounts and encrypts all logical drives.</p>

<p>First, the malware enumerates through all volumes on the computer using <strong>FindFirstVolumeW</strong> and <strong>FindNextVolumeW</strong>. It calls <strong>GetVolumePathNamesForVolumeNameW</strong> to retrieve the path of the volume and processes the drive at that path.</p>

<p><img src="/uploads/blackmatter74.PNG" alt="alt text"></p>

<p><em>Figure 76: Volume enumeration.</em></p>

<p>It only processes and encrypts drives with type <strong>DRIVE_FIXED</strong> or <strong>DRIVE_REMOVABLE</strong>.</p>

<p>If the current OS is Windows 7 or above, the malware calls <strong>DeviceIoControl</strong> to get the partition information of the target drive.</p>

<p>If the partition type of the drive is <strong>PARTITION_STYLE_GPT</strong>, <strong>BlackMatter</strong> sets some check with the partition type data and calls <strong>SetVolumeMountPointW</strong> to mount it.</p>

<p>If the partition type of the drive is <strong>PARTITION_STYLE_MBR</strong>, <strong>BlackMatter</strong> calls <strong>SetVolumeMountPointW</strong> to mount it.</p>

<p><img src="/uploads/blackmatter75.PNG" alt="alt text"></p>

<p><em>Figure 77: Mounting drives.</em></p>

<p>If the current OS is earlier than Windows 7, the malware appends <strong>/bootmgr</strong> to the end of the drive path and calls <strong>SetVolumeMountPointW</strong> to mount it.</p>

<p><img src="/uploads/blackmatter76.PNG" alt="alt text"></p>

<p><em>Figure 78: Mounting bootmgr.</em></p>

<p>Next, <strong>BlackMatter</strong> calls <strong>GetLogicalDriveStringsW</strong> to get the list of all logical drives on the system.</p>

<p>For each of these drives that are <strong>DRIVE_REMOTE</strong>, <strong>DRIVE_FIXED</strong>, or <strong>DRIVE_REMOVABLE</strong>, the malware spawns threads to encrypt this path using the encryption scheme described above.</p>

<p>If the drive type is <strong>DRIVE_REMOTE</strong>, <strong>BlackMatter</strong> impersonates the parent thread with the obtained token.</p>

<p><img src="/uploads/blackmatter77.PNG" alt="alt text"></p>

<p><em>Figure 79: Traversing and encrypting logical drives.</em></p>

<h3 id="network-shares-traversal">Network Shares Traversal</h3>

<p>If the <strong>NETWORK_ENCRYPT_FLAG</strong> in the configuration is set to true, <strong>BlackMatter</strong> encrypts all network shares.</p>

<p>First, it retrieves the list of all DNS hostnames on the network through domain controllers.</p>

<p><strong>BlackMatter</strong> calls <strong>DsGetDcNameW</strong> to obtain the domain controller information and <strong>DsGetDcOpenW</strong> to open a new domain controller enumeration operation.</p>

<p><img src="/uploads/blackmatter78.PNG" alt="alt text"></p>

<p><em>Figure 80: Open domain controller enumeration operation.</em></p>

<p>By calling <strong>DsGetDcNextW</strong>, the malware enumerates through all domain controller on the network and adds it to an array.</p>

<p><img src="/uploads/blackmatter79.PNG" alt="alt text"></p>

<p><em>Figure 81: Enumerating domain controllers.</em></p>

<p>Next, for each domain controller, <strong>BlackMatter</strong> calls <strong>ADsOpenObject(“LDAP://rootDSE”, 0, 0, 1u, “{FD8256D0-FD15-11CE-ABC4-02608C9E7553}”, &amp;IADs_object)</strong> to retrieve the <strong>IADs</strong> COM interface.</p>

<p>Using the <strong>Get</strong> function of the <strong>IADs</strong> interface, it gets the default naming context of the domain.</p>

<p><img src="/uploads/blackmatter80.PNG" alt="alt text"></p>

<p><em>Figure 82: Get domain default naming context.</em></p>

<p>With the default naming context, <strong>BlackMatter</strong> builds the string <strong>“LDAP://CN=Computers,[default naming context]”</strong> and calls <strong>ADsOpenObject</strong> to retrieve an <strong>IADsContainer</strong> interface.</p>

<p>Using that interface, it calls <strong>ADsBuildEnumerator</strong> to create an enumerator object for the specified ADSI container object. Finally, using the enumerator, the malware calls <strong>ADsEnumerateNext</strong> to enumerate through all DNS hostnames from the domain controller.</p>

<p><img src="/uploads/blackmatter81.PNG" alt="alt text"></p>

<p><em>Figure 83: Enumerating DNS hostnames.</em></p>

<p>With a list of DNS hostnames on the network, the malware calls <strong>NetShareEnum</strong> to start enumerating through each of them.</p>

<p>If the network share type is not special share reserved for interprocess communication (IPC$) or remote administration of the server (ADMIN$), the malware skips it and does not add it to the share list to encrypt.</p>

<p><img src="/uploads/blackmatter82.PNG" alt="alt text"></p>

<p><em>Figure 84: Checking network share type.</em></p>

<p>If the network share type is special, the malware performs an additional check and skips the share if the network name is <strong>“admin$“</strong> or <strong>”$c”</strong>.</p>

<p><img src="/uploads/blackmatter83.PNG" alt="alt text"></p>

<p><em>Figure 85: Checking network name.</em></p>

<p>Finally, <strong>BlackMatter</strong> fixes up the network paths and spawns threads to encrypt these paths using the encryption scheme described above.</p>

<p><img src="/uploads/blackmatter84.PNG" alt="alt text"></p>

<p><em>Figure 86: Traversing and encrypting network share.</em></p>

<h2 id="network-communication">Network Communication</h2>

<p>If the <strong>SEND_DATA_TO_SERVER_FLAG</strong> in the configuration is set to true, <strong>BlackMatter</strong> sends data twice to remote servers, once prior to the encryption and once after the encryption.</p>

<p>Prior to the encryption, the malware sends information about the victim’s machine to the servers.</p>

<p>It extracts information about the host and different disks on the system and builds the string using the format below.</p>

<pre><code class="language-JSON">{
   "bot_version":"%s",
   "bot_id":"%s",
   "bot_company":"%.8x%.8x%.8x%.8x%",
   "host_hostname":"%s",
   "host_user":"%s",
   "host_os":"%s",
   "host_domain":"%s",
   "host_arch":"%s",
   "host_lang":"%s",
   "disks_info":[
      {
         "disk_name":"%s", // for each disk
         "disk_size":"%u",
         "free_size":"%u"
      }
   ]
}
</code></pre>

<p>Below is an example of the payload generated on my VM.</p>

<pre><code class="language-JSON">{
   "bot_version":"2.0",
   "bot_id":"e6175d544e3816664c0c6297cf8bcb18",
   "bot_company":"00000000000000000000000000000000",
   "host_hostname":"MSEDGEWIN10",
   "host_user":"IEUser",
   "host_os":"Windows 10 Enterprise Evaluation",
   "host_domain":"WORKGROUP",
   "host_arch":"x64",
   "host_lang":"en-US",
   "disks_info":[
      {
         "disk_name":"C",
         "disk_size":"40957",
         "free_size":"17290"
      },
      {
         "disk_name":"Z",
         "disk_size":"487290",
         "free_size":"304117"
      }
   ]
}
</code></pre>

<p><img src="/uploads/blackmatter85.PNG" alt="alt text"></p>

<p><em>Figure 87: Host format string.</em></p>

<p>This buffer is encrypted and sent to remote servers specified in the <strong>REMOTE_SERVER_URLS</strong> field in the configuration.</p>

<p>After the file encryption, the malware sends encryption stats to the servers.</p>

<p>The information about encryption stats is built into a string using the format below.</p>

<pre><code class="language-JSON">{
   "bot_version":"%s",
   "bot_id":"%s",
   "bot_company":"%.8x%.8x%.8x%.8x%",
   "stat_all_files":"%u",
   "stat_not_encrypted":"%u",
   "stat_size":"%s",
   "execution_time":"%u",
   "start_time":"%u",
   "stop_time":"%u"
}
</code></pre>

<p><img src="/uploads/blackmatter86.PNG" alt="alt text"></p>

<p><em>Figure 88: Encryption stats format string.</em></p>

<p>When sending these data to remote servers, <strong>BlackMatter</strong> first encrypts it using the <strong>AES</strong> key from the configuration and <strong>Base64-encodes</strong> it.</p>

<p><img src="/uploads/blackmatter87.PNG" alt="alt text"></p>

<p><em>Figure 89: Data encryption and encoding.</em></p>

<p>Next, it randomly generates HTTP object names and POST request data.</p>

<p><strong>BlackMatter</strong> uses the following user agent.</p>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">AppleWebKit/587.38 (KHTML, like Gecko)
</span></code></pre></div></div>

<p>It also decrypts and uses this POST request header.</p>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">Accept: */*
Connection: keep-alive
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
</span></code></pre></div></div>

<p>Finally, the malware uses the typical HTTP WinAPI calls such as <strong>InternetOpenW</strong> to obtain an internet handle, <strong>InternetConnectW</strong> to obtain a connection handle with a target URL, <strong>HttpOpenRequestW</strong> to open a POST request, and <strong>HttpSendRequestW</strong> to send the encrypted data.</p>

<p><img src="/uploads/blackmatter88.PNG" alt="alt text"></p>

<p><em>Figure 90: Sending data to remote servers.</em></p>

<h2 id="weird-threading-stuff">Weird Threading Stuff</h2>

<p>I want to dedicate a section to talk about this because it annoys the hell out of me.</p>

<p>It seems like <strong>BlackMatter</strong> loves to use this one trick to spawn a single thread to execute a single WinAPI call.</p>

<p><img src="/uploads/blackmatter89.PNG" alt="alt text"></p>

<p><em>Figure 91: Single threading with extra steps.</em></p>

<p>I must admit that this does work, and I can definitely see the reason behind this. The malware wants to make API calls while impersonating as a different process using the token it gets from <a href="#retrieving-token-to-impersonate-with-process-injection">here</a> to be stealthier.</p>

<p>So why am I annoyed? It’s just really extra.</p>

<p>This whole part of code can be reduced to a single <strong>GetUserNameW</strong> call, which is why it is so inefficient. Moreover, they have a ransomware running that encrypts a system in less than a minute. Trying to be stealthy to call things like <strong>GetUserNameW</strong> and <strong>GetDriveTypeW</strong> might just be an overkill.</p>

<p>Or maybe this method is fine and I’m just grumpy cause this ransomware is so damn long to fully analyze lmao.</p>

<h2 id="references">References</h2>

<p>https://github.com/weidai11/cryptopp/blob/bc7d1bafa1e8ac732396374f0bca94ab9f396f1c/chacha_simd.cpp#L569</p>

<p>https://github.com/sisoma2/malware_analysis/tree/master/blackmatter</p>

<p>https://github.com/advanced-threat-research/DarkSide-Config-Extract</p>

<p>https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/wp-ransomware-protection-and-containment-strategies.pdf</p>

<p>https://www.installsetupconfig.com/win32programming/networkmanagementapis16_41.html</p>

<p>https://www.youtube.com/watch?v=R4xJou6JsIE</p>

<p>https://blog.digital-investigations.info/2021-08-05-understanding-blackmatters-api-hashing.html</p>


    <div class="share">
  
    
      
      
      
      

      

      <a class="button" href="https://twitter.com/intent/tweet/?url=https://cdong1012.github.io//reverse%20engineering/2021/09/05/BlackMatterRansomware/&amp;text=BlackMatter%20Ransomware%20v2.0&amp;via=cPeterr" style="background: #0d94e7">Twitter  <svg width="16" height="16" class="icon  icon--twitter" role="img" alt="twitter"><title>twitter</title>
<use xlink:href="#twitter" fill="CurrentColor"></use></svg>
</a>

    
  
    
      
      
      
      

      

      <a class="button" href="https://facebook.com/sharer/sharer.php?u=https://cdong1012.github.io//reverse%20engineering/2021/09/05/BlackMatterRansomware/" style="background: #3B5998">Facebook  <svg width="16" height="16" class="icon  icon--facebook" role="img" alt="facebook"><title>facebook</title>
<use xlink:href="#facebook" fill="CurrentColor"></use></svg>
</a>

    
  
    
      
      
      
      

      

      <a class="button" href="mailto:?subject=BlackMatter%20Ransomware%20v2.0&amp;body=Hey,%20check%20out%20this:%20https://cdong1012.github.io//reverse%20engineering/2021/09/05/BlackMatterRansomware/" style="background: true">Email  <svg width="16" height="16" class="icon  icon--email" role="img" alt="email"><title>email</title>
<use xlink:href="#email" fill="CurrentColor"></use></svg>
</a>

    
  
</div>


    


  </article>

  

</main>

<footer class="footer">
  <div class="container">
    <div class="copyright  typeset">
      <small class="small">© Chuong Dong 2024</small>
    </div>

    
<nav class="nav  nav--footer">
  <ul class="list list--nav">
    

      

      <li class="item  item--nav">
        <a href="https://cdong1012.github.io">Chuong's Security Blog</a>
      </li>
    
  </ul>
</nav>


  </div>
</footer>


    <script type="text/javascript">
(() => {
  const registerServiceWorker = () => {
    if (!navigator.serviceWorker) {
      return;
    }

    navigator.serviceWorker
      .register("/sw.js")
      .then(registration => {
        console.log("Service Worker: registered");
      })
      .catch(err => {
        console.log("Service Worker: registration failed ", err);
      });
  };

  registerServiceWorker();
})();
</script>


    <!-- Overwrite this file with code you want before the closing body tag -->

  </body>

</html>
