<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><title>Revisiting BLISTER: New development of the BLISTER loader — Elastic Security Labs</title><meta name="description" content="Elastic Security Labs dives deep into the recent evolution of the BLISTER loader malware family."/><meta property="og:title" content="Revisiting BLISTER: New development of the BLISTER loader — Elastic Security Labs"/><meta property="og:description" content="Elastic Security Labs dives deep into the recent evolution of the BLISTER loader malware family."/><meta property="og:image" content="https://www.elastic.co/security-labs/assets/images/revisiting-blister-new-developments-of-the-blister-loader/cracked-lava.jpg?c53834eaa73e6260196d110910f764da"/><meta property="og:image:alt" content="Elastic Security Labs dives deep into the recent evolution of the BLISTER loader malware family."/><meta property="og:site_name"/><meta property="og:url" content="https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader"/><meta property="og:type" content="website"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="Revisiting BLISTER: New development of the BLISTER loader — Elastic Security Labs"/><meta name="twitter:description" content="Elastic Security Labs dives deep into the recent evolution of the BLISTER loader malware family."/><meta name="twitter:image" content="https://www.elastic.co/security-labs/assets/images/revisiting-blister-new-developments-of-the-blister-loader/cracked-lava.jpg?c53834eaa73e6260196d110910f764da"/><meta name="twitter:image:alt" content="Elastic Security Labs dives deep into the recent evolution of the BLISTER loader malware family."/><link rel="canonical" href="https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader"/><link rel="preload" href="/security-labs/logo.svg" as="image" fetchpriority="high"/><link rel="preload" as="image" imageSrcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=3840&amp;q=75 3840w" imageSizes="100vw" fetchpriority="high"/><meta name="next-head-count" content="19"/><script src="https://play.vidyard.com/embed/v4.js" type="text/javascript" async=""></script><link rel="icon" href="/security-labs/favicon.svg"/><link rel="mask-icon" href="/security-labs/favicon.svg" color="#1C1E23"/><link rel="apple-touch-icon" href="/security-labs/favicon.svg"/><meta name="theme-color" content="#1C1E23"/><link rel="preload" href="/security-labs/_next/static/media/6d93bde91c0c2823-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/a34f9d1faa5f3315-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/369c6e283c5acc6e-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/92f44bb82993d879-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/ee71530a747ff30b-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/9fac010bc1f02be0-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/cbf5fbad4d73afac-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><script id="google-tag-manager" data-nscript="beforeInteractive">
          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-KNJMG2M');
          </script><link rel="preload" href="/security-labs/_next/static/css/265ed7605fd03477.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/265ed7605fd03477.css" data-n-g=""/><link rel="preload" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/security-labs/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js"></script><script src="/security-labs/_next/static/chunks/webpack-7987c6fda769d510.js" defer=""></script><script src="/security-labs/_next/static/chunks/framework-7a7e500878b44665.js" defer=""></script><script src="/security-labs/_next/static/chunks/main-ebd33a9f1cae5951.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/_app-cb8664d1d3df2511.js" defer=""></script><script src="/security-labs/_next/static/chunks/fec483df-43ee602fabdfe3a4.js" defer=""></script><script src="/security-labs/_next/static/chunks/877-34f408271ef44c22.js" defer=""></script><script src="/security-labs/_next/static/chunks/511-d08fe0fdd6f8a984.js" defer=""></script><script src="/security-labs/_next/static/chunks/683-a5053c37fe5bd0c9.js" defer=""></script><script src="/security-labs/_next/static/chunks/402-791da5e634930df4.js" defer=""></script><script src="/security-labs/_next/static/chunks/616-0b017b9cfa597392.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/%5Bslug%5D-3d74e9a05863bcfd.js" defer=""></script><script src="/security-labs/_next/static/dGrrQfBbQkqaleQ_11aBK/_buildManifest.js" defer=""></script><script src="/security-labs/_next/static/dGrrQfBbQkqaleQ_11aBK/_ssgManifest.js" defer=""></script></head><body><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KNJMG2M" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="__next"><main class="__variable_0351a5 __variable_1f211e __variable_a5b5f5 flex flex-col min-h-screen"><div class="scroll-percentage-container"><div class="scroll-percentage-bar" style="width:0%"></div></div><nav class="fixed w-full z-40" data-headlessui-state=""><div class="bg-gradient-to-b from-zinc-900 from-20% h-[200%] to-transparent absolute inset-0 z-0 pointer-events-none"></div><div class="container relative z-10"><div class="flex h-16 items-center justify-between"><div class="flex items-center justify-start w-full"><div><a class="hover:opacity-50 transition" href="/security-labs"><img alt="elastic security labs logo" fetchpriority="high" width="200" height="30" decoding="async" data-nimg="1" style="color:transparent" src="/security-labs/logo.svg"/></a></div><div class="hidden lg:ml-6 lg:block"><div class="flex space-x-4"><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/about"><span>About</span></a><div class="relative" data-headlessui-state=""><div><button class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" id="headlessui-menu-button-:R2kpm:" type="button" aria-haspopup="menu" aria-expanded="false" data-headlessui-state="">Topics<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="ml-1 -mr-1 h-4 w-4 text-zinc-400 relative top-[1px]"><path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd"></path></svg></button></div></div><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/vulnerability-updates"><span>Vulnerability updates</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/reports"><span>Reports</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/tools"><span>Tools</span></a></div></div><div class="hidden lg:ml-auto lg:block"><div class="flex items-center space-x-4"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="https://www.elastic.co/security-labs/rss/feed.xml"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-4 w-4 mr-1"><path d="M3.75 3a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75H4c6.075 0 11 4.925 11 11v.25c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V16C17 8.82 11.18 3 4 3h-.25z"></path><path d="M3 8.75A.75.75 0 013.75 8H4a8 8 0 018 8v.25a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75V16a6 6 0 00-6-6h-.25A.75.75 0 013 9.25v-.5zM7 15a2 2 0 11-4 0 2 2 0 014 0z"></path></svg><span class="hidden xl:block">Subscribe</span></a><a class="font-display inline-flex items-center justify-center rounded font-semibold disabled:!select-none disabled:!bg-gray-400 bg-blue-600 text-white hover:bg-blue-500 enabled:hover:text-white/80 transition-colors px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://cloud.elastic.co/registration?cta=cloud-registration&amp;tech=trial&amp;plcmt=navigation&amp;pg=security-labs">Start free trial</a><a class="font-display inline-flex items-center justify-center rounded font-semibold text-white disabled:!select-none disabled:!bg-gray-400 button px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://www.elastic.co/contact">Contact sales</a></div></div></div><div class="-mr-2 flex lg:hidden"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><button class="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" id="headlessui-disclosure-button-:R59m:" type="button" aria-expanded="false" data-headlessui-state=""><span class="sr-only">Open navigation menu</span><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="block h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path></svg></button></div></div></div></nav><main class="mb-20 flex-1 flex flex-col"><div class="h-48 md:h-64"><div class="after:absolute after:block after:bg-blue-400 after:blur-3xl after:content-[&#x27; &#x27;] after:h-96 after:opacity-5 after:right-0 after:rounded-full after:top-20 after:w-1/2 after:z-0 before:absolute before:block before:blur-3xl before:bg-orange-400 before:content-[&#x27; &#x27;] before:h-96 before:left-0 before:opacity-5 before:rounded-full before:w-1/2 before:z-0 w-full h-full relative"><div class="relative z-10 w-full h-[125%] -top-[25%] bg-no-repeat bg-cover bg-bottom flex items-center justify-center" style="background-image:url(/security-labs/grid.svg)"></div></div></div><article class="px-4"><div class="max-w-7xl mx-auto relative z-10 flex flex-col space-y-4"><div class="eyebrow break-words"><time class="block mb-2 md:mb-0 md:inline-block article-published-date" dateTime="2023-08-24T00:00:00.000Z">24 August 2023</time><span class="hidden md:inline-block md:mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/salim-bitam">Salim Bitam</a><span class="mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/daniel-stepanic">Daniel Stepanic</a></div><h1 class="font-bold leading-tighter text-3xl md:text-5xl"><span>Revisiting BLISTER: New development of the BLISTER&nbsp;loader</span></h1><p class="text-zinc-200 text-base md:text-xl">Elastic Security Labs dives deep into the recent evolution of the BLISTER loader malware family.</p><div class="flex items-center mt-4 text-zinc-200 text-sm space-x-4 border-t border-white/25 pt-4"><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><span>9 min read</span></span><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z"></path></svg><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/malware-analysis">Malware analysis</a></span></span></div></div><div class="max-w-7xl mx-auto"><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 sm:p-8 md:p-10 rounded-3xl mt-5 md:mt-10"><div class="relative w-full rounded-lg overflow-hidden aspect-video"><img alt="Revisiting BLISTER: New development of the BLISTER loader" fetchpriority="high" decoding="async" data-nimg="fill" class="object-cover absolute h-full w-full" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;color:transparent" sizes="100vw" srcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=3840&amp;q=75 3840w" src="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Frevisiting-blister-new-developments-of-the-blister-loader%2Fcracked-lava.jpg&amp;w=3840&amp;q=75"/><div class="absolute border border-white/50 inset-0 mix-blend-overlay rounded-lg z-10"></div></div></div></div><div class="lg:max-w-7xl mx-auto relative mt-12 lg:grid lg:grid-cols-4 lg:gap-8 items-start"><div class="flex justify-center lg:col-span-3"><div class="prose lg:prose-lg prose-invert w-full article-content"><div><h2 class="font-bold text-2xl md:text-4xl relative"><span id="preamble" class="absolute -top-32"></span>Preamble</h2>
<p>In a fast-paced and ever-changing world of cybercrime threats, the tenacity and adaptability of malicious actors is a significant concern. BLISTER, a malware loader initially <a href="https://www.elastic.co/security-labs/elastic-security-uncovers-blister-malware-campaign">discovered</a> by Elastic Security Labs in 2021 and associated with financially-motivated intrusions, is a testament to this trend as it continues to develop additional capabilities. Two years after its initial discovery, BLISTER continues to receive updates while flying under the radar, gaining momentum as an emerging threat. Recent findings from Palo Alto’s <a href="https://twitter.com/Unit42_Intel/status/1684583246032506880">Unit 42</a> describe an updated <a href="https://redcanary.com/threat-detection-report/threats/socgholish/">SOCGHOLISH</a> infection chain used to distribute BLISTER and deploy a payload from <a href="https://github.com/its-a-feature/Mythic">MYTHIC</a>, an open-source Command and Control (C2) framework.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="key-takeaways" class="absolute -top-32"></span>Key takeaways</h2>
<ul>
<li>Elastic Security Labs has been monitoring malware loader BLISTER ramping up with new changes, and ongoing development with signs of imminent threat activity</li>
<li>New BLISTER update includes keying feature that allows for precise targeting of victim networks and lowers exposure within VM/sandbox environments</li>
<li>BLISTER now integrates techniques to remove any process instrumentation hook and has modified its configuration with multiple revisions, now encompassing additional fields and flags.</li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="overview" class="absolute -top-32"></span>Overview</h2>
<p>Our research uncovered new functionality that was previously absent within the BLISTER family, indicating ongoing development. However, the malware authors continue to use a distinctive technique of embedding malicious code in otherwise legitimate applications. This approach superficially appears successful, given the low rates of detection for many vendors as seen in VirusTotal. The significant amount of benign code and use of encryption to protect the malicious code are likely two factors impacting detection.</p>
<p></p>
<p>Recently, Elastic Security Labs has observed many new BLISTER loaders in the wild. After analyzing various samples, it’s clear that the malware authors have made some changes and have been watching the antivirus industry closely. In one <a href="https://www.virustotal.com/gui/file/b4f37f13a7e9c56ea95fa3792e11404eb3bdb878734f1ca394ceed344d22858f">sample</a> from early June, we can infer that the authors were testing with a non-production loader that displays a Message Box displaying the strings “Test”.</p>
<p></p>
<p>Readers can see a disassembled view of this functionality below.</p>
<p></p>
<p>By the end of July, we observed campaigns involving a new BLISTER loader that targeted victim organizations to deploy the MYTHIC implant.</p>
<p></p>
<p>At the time of this writing, Elastic Security Labs is seeing a stream of BLISTER samples which deploy MYTHIC and have very low rates of detection.</p>
<p></p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="comparative-analyses" class="absolute -top-32"></span>Comparative analyses</h2>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="smuggling-malicious-code" class="absolute -top-32"></span>Smuggling malicious code</h3>
<p>The authors behind BLISTER employ a consistent strategy of embedding BLISTER&#x27;s malicious code within a legitimate library. The most recent variants of this loader have targeted the <a href="https://www.videolan.org/vlc/">VLC</a> Media Player library to smuggle their malware into victim environments. This blend of benign and malicious code seems effective at defeating some kinds of machine-learning models.</p>
<p></p>
<p>The following is a comparison between a legitimate VLC DLL and one that is infected with BLISTER’s code. In the infected sample, the entry point that references malicious code has been indicated in red. This methodology is similar to prior BLISTER variants.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="different-hashing-algorithm" class="absolute -top-32"></span>Different hashing algorithm</h3>
<p>One of the changes implemented since our last <a href="https://www.elastic.co/security-labs/blister-loader">write-up</a> is the adoption of a different hashing algorithm used in the core and in the loader part of BLISTER. While the previous version used simple logic to shift bytes, this new version includes a hard-coded seed with XOR and multiplication operations. Researchers speculate that changing the hashing approach helps to evade antimalware products that rely on YARA signatures.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="configuration-retrieval" class="absolute -top-32"></span>Configuration retrieval</h3>
<p>Following the decryption of malicious code by the BLISTER’d loader, it employs an identical memory scanning method to identify the configuration data blob. This is accomplished by searching for a predetermined, hardcoded memory pattern. A notable contrast from the earlier iteration of BLISTER lies in the fact that the configuration is now decrypted in conjunction with the core code, rather than being treated as a separate entity.</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="environmental-keying" class="absolute -top-32"></span>Environmental keying</h3>
<p>A recent addition to BLISTER is the capability to exclusively execute on designated machines. This behavior is activated by configuring the appropriate flag within the malware’s configuration. Subsequently, the malware proceeds to extract the machine&#x27;s domain name using the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">GetComputerNameExW</code> Windows API. Following this, the domain name is hashed using the previously mentioned algorithm, and the resulting hash is then compared to a hash present in the configuration. This functionality is presumably deployed for the purpose of targeted attacks or for testing scenarios, ensuring that the malware refrains from infecting unintended systems such as those employed by malware researchers.</p>
<p></p>
<p>One of the few malware analysis tools capable of quickly exposing this behavior is the awesome <a href="https://github.com/hasherezade/tiny_tracer">Tiny Tracer</a> utility by <a href="https://twitter.com/hasherezade">hasherezade</a>. We’ve included an excerpt from Tiny_Tracer below which captures the BLISTER process immediately terminating after the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">GetComputerNameExW</code> validation is performed in a sandboxed analysis VM.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="time-based-anti-debugging-feature" class="absolute -top-32"></span>Time-based anti-debugging feature</h3>
<p>Similar to its predecessors, the malware incorporates a time-based anti-debugging functionality. However, unlike the previous versions in which the timer was hardcoded, the updated version introduces a new field in the configuration. This field enables the customization of the sleep timer, with a default value of 10 minutes. This default interval remains unchanged from prior iterations of BLISTER.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="unhook-process-instrumentation-to-detect-syscalls" class="absolute -top-32"></span>Unhook process instrumentation to detect syscalls</h3>
<p>In this latest version, BLISTER introduces noteworthy functionality: it unhooks any ongoing process instrumentation, a <a href="https://github.com/ionescu007/HookingNirvana/blob/master/Esoteric%20Hooks.pdf">tactic</a> designed to circumvent userland syscall detection mechanisms upon which certain EDR solutions are based.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="blisters-configuration" class="absolute -top-32"></span>BLISTER&#x27;s configuration</h3>
<p>The BLISTER configuration structure has also been changed with the latest variants. Two new fields have been added and the flag field at offset 0 has been changed from a WORD to a DWORD value. The new fields pertain to the hash of the domain for environmental keying and the configurable sleep time; these field values are at offset 4 and 12 respectively. The following is the updated structure of the configuration:</p>
<p></p>
<p>Changes have also been made to the configuration flags, allowing the operator to activate different functions within the malware. Researchers have provided an updated list of functions built upon our prior research into BLISTER.</p>
<p></p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="payload-extractor-update" class="absolute -top-32"></span>Payload extractor update</h2>
<p>In our previous research publication, we introduced an efficient payload extractor tailored to dissect and extract the configuration and payload of the loader. To dissect the most recent BLISTER variants and capture these new details, we enhanced our extractor which is available <a href="https://github.com/elastic/labs-releases/tree/main/tools/blister">here</a>.</p>
<p></p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="conclusion" class="absolute -top-32"></span>Conclusion</h2>
<p><a href="https://www.trendmicro.com/en_us/research/22/d/Thwarting-Loaders-From-SocGholish-to-BLISTERs-LockBit-Payload.html">BLISTER</a> is one small part of the global cybercriminal ecosystem, providing financially-motivated threats to gain access to victim environments and avoid detection by security sensors. The community should consider these new developments and assess the efficacy of BLISTER detections, Elastic Security Labs will continue to monitor this threat and share actionable guidance.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="detection-logic" class="absolute -top-32"></span>Detection logic</h2>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="prevention" class="absolute -top-32"></span>Prevention</h3>
<ul>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/yara/rules/Windows_Trojan_Blister.yar">Windows.Trojan.Blister</a></li>
</ul>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="detection" class="absolute -top-32"></span>Detection</h3>
<ul>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_windows_error_manager_reporting_masquerading.toml">Windows Error Manager/Reporting Masquerading</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_potential_operation_via_direct_syscall.toml">Potential Operation via Direct Syscall</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_potential_masquerading_as_windows_error_manager.toml">Potential Masquerading as Windows Error Manager</a></li>
<li><a href="https://github.com/elastic/detection-rules/blob/main/rules/windows/persistence_evasion_registry_startup_shell_folder_modified.toml">Unusual Startup Shell Folder Modification</a></li>
<li><a href="https://github.com/elastic/detection-rules/blob/ef432d0907548abf7699fa5d86150dc6b4133125/rules_building_block/defense_evasion_masquerading_vlc_dll.toml">Potential Masquerading as VLC DLL</a></li>
</ul>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="yara" class="absolute -top-32"></span>YARA</h3>
<p>Elastic Security has created <a href="https://github.com/elastic/protections-artifacts/blob/main/yara/rules/Windows_Trojan_Blister.yar">YARA rules</a> to identify this activity. Below is the latest rule that captures the new update to BLISTER.</p>
<pre><code>rule Windows_Trojan_Blister {
    meta:
        author = &quot;Elastic Security&quot;
        creation_date = &quot;2023-08-02&quot;
        last_modified = &quot;2023-08-08&quot;
        os = &quot;Windows&quot;
        arch = &quot;x86&quot;
        category_type = &quot;Trojan&quot;
        family = &quot;Blister&quot;
        threat_name = &quot;Windows.Trojan.Blister&quot;
        license = &quot;Elastic License v2&quot;
    strings:
        $b_loader_xor = { 48 8B C3 49 03 DC 83 E0 03 8A 44 05 48 [2-3] ?? 03 ?? 4D 2B ?? 75 }
        $b_loader_virtual_protect = { 48 8D 45 50 41 ?? ?? ?? ?? 00 4C 8D ?? 04 4C 89 ?? ?? 41 B9 04 00 00 00 4C 89 ?? F0 4C 8D 45 58 48 89 44 24 20 48 8D 55 F0 }
    condition:
        all of them
}</code></pre>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="observed-adversary-tactics-and-techniques" class="absolute -top-32"></span>Observed adversary tactics and techniques</h2>
<p>Elastic uses the MITRE ATT&amp;CK framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="tactics" class="absolute -top-32"></span>Tactics</h3>
<p>Tactics represent the why of a technique or sub-technique. It is the adversary’s tactical goal: the reason for performing an action.</p>
<ul>
<li><a href="https://attack.mitre.org/tactics/TA0002/">Execution</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0005/">Defense Evasion</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0003/">Persistence</a></li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="techniques--sub-techniques" class="absolute -top-32"></span>Techniques / Sub techniques</h2>
<p>Techniques and Sub techniques represent how an adversary achieves a tactical goal by performing an action.</p>
<ul>
<li><a href="https://attack.mitre.org/techniques/T1218/011/">System Binary Proxy Execution: Rundll32</a></li>
<li><a href="https://attack.mitre.org/techniques/T1480/001/">Execution Guardrails: Environmental Keying</a></li>
<li><a href="https://attack.mitre.org/techniques/T1547/001/">Registry Run Keys / Startup Folder</a></li>
<li><a href="https://attack.mitre.org/techniques/T1036/">Masquerading</a></li>
<li><a href="https://attack.mitre.org/techniques/T1055/012/">Process Injection: Process Hollowing</a></li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="references" class="absolute -top-32"></span>References</h2>
<p>The following were referenced throughout the above research:</p>
<ul>
<li><a href="https://twitter.com/Unit42_Intel/status/1684583246032506880?s=20">Palo Alto Unit42</a></li>
<li><a href="https://www.trendmicro.com/en_us/research/22/d/Thwarting-Loaders-From-SocGholish-to-BLISTERs-LockBit-Payload.html">Trendmicro</a></li>
<li><a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.blister">Malpedia</a></li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="observables" class="absolute -top-32"></span>Observables</h2>
<p>All observables are also available for <a href="https://github.com/elastic/labs-releases/tree/main/indicators/blister">download</a> in both ECS and STIX format in a combined zip bundle.</p>
<p>The following observables were discussed in this research.</p>
<div class="table-container"><table style="width:100%;table-layout:fixed;word-wrap:break-word"><thead><tr><th>Indicator</th><th>Type</th><th>Reference</th></tr></thead><tbody><tr><td>5fc79a4499bafa3a881778ef51ce29ef015ee58a587e3614702e69da304395db</td><td>sha256</td><td>BLISTER loader DLL</td></tr></tbody></table></div></div></div></div><div class="hidden lg:flex lg:col-span-1 text-sm lg:flex-col lg:space-y-6"><div class="toc"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Jump to section</h4><ul class="flex flex-col space-y-2"><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#preamble"><span>Preamble</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#key-takeaways"><span>Key&nbsp;takeaways</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#overview"><span>Overview</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#comparative-analyses"><span>Comparative&nbsp;analyses</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#smuggling-malicious-code"><span>Smuggling malicious&nbsp;code</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#different-hashing-algorithm"><span>Different hashing&nbsp;algorithm</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#configuration-retrieval"><span>Configuration&nbsp;retrieval</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#environmental-keying"><span>Environmental&nbsp;keying</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#time-based-anti-debugging-feature"><span>Time-&nbsp;based anti-&nbsp;debugging&nbsp;feature</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/revisiting-blister-new-developments-of-the-blister-loader#unhook-process-instrumentation-to-detect-syscalls"><span>Unhook process instrumentation to detect&nbsp;syscalls</span></a></li></ul><button class="border-t border-white/20 w-full mt-3 py-2 flex items-center space-x-1 text-xs font-medium uppercase tracking-wide hover:text-white"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="w-3 h-3"><path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path></svg><span>Show more</span></button></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Elastic Security Labs Newsletter</h4><div><a target="_blank" class="button inline-flex" href="https://www.elastic.co/security-labs/newsletter?utm_source=security-labs">Sign Up</a></div></div></div></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl my-5 md:my-10 max-w-3xl mx-auto flex flex-col items-center shadow-2xl"><h4 class="font-bold leading-tight text-lg md:text-2xl">Share this article</h4><div class="flex flex-wrap items-center justify-center mt-4 space-x-4"><a class="flex items-center space-x-2 button" href="https://twitter.com/intent/tweet?text=Revisiting BLISTER: New development of the BLISTER loader&amp;url=https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Twitter" title="Share this article on Twitter"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>Twitter</span></a><a class="flex items-center space-x-2 button" href="https://www.facebook.com/sharer/sharer.php?u=https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Facebook" title="Share this article on Facebook"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M22.5 12c0-5.799-4.701-10.5-10.5-10.5S1.5 6.201 1.5 12c0 5.301 3.901 9.699 9 10.401V14.4h-2.7v-2.7h2.7v-2.1c0-2.7 1.8-4.2 4.2-4.2 1.2 0 2.1.1 2.4.2v2.4h-1.5c-1.2 0-1.5.6-1.5 1.5v1.8h3l-.3 2.7h-2.7V22C18.599 21.3 22.5 17.301 22.5 12z"></path></svg><span>Facebook</span></a><a class="flex items-center space-x-2 button" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader&amp;title=Revisiting BLISTER: New development of the BLISTER loader" target="_blank" rel="noopener noreferrer" aria-label="Share this article on LinkedIn" title="Share this article on LinkedIn"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"></path></svg><span>LinkedIn</span></a><a class="flex items-center space-x-2 button" href="https://reddit.com/submit?url=https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader&amp;title=Revisiting BLISTER: New development of the BLISTER loader" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Reddit" title="Share this article on Reddit"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill-rule="evenodd" clip-rule="evenodd" d="M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM19.6879 11.0584C19.8819 11.3352 19.9916 11.6622 20.004 12C20.0091 12.3306 19.9205 12.656 19.7485 12.9384C19.5765 13.2208 19.3281 13.4488 19.032 13.596C19.0455 13.7717 19.0455 13.9483 19.032 14.124C19.032 16.812 15.9 18.996 12.036 18.996C8.172 18.996 5.04 16.812 5.04 14.124C5.02649 13.9483 5.02649 13.7717 5.04 13.596C4.80919 13.49 4.6042 13.335 4.43923 13.1419C4.27427 12.9487 4.15327 12.722 4.08462 12.4775C4.01598 12.2329 4.00133 11.9764 4.04169 11.7256C4.08205 11.4748 4.17646 11.2358 4.31837 11.0251C4.46028 10.8145 4.6463 10.6372 4.86354 10.5056C5.08078 10.3739 5.32404 10.2911 5.57646 10.2629C5.82889 10.2346 6.08444 10.2616 6.32541 10.3419C6.56638 10.4222 6.78701 10.5539 6.972 10.728C8.35473 9.79023 9.98146 9.27718 11.652 9.252L12.54 5.088C12.55 5.03979 12.5694 4.99405 12.5972 4.95341C12.625 4.91277 12.6605 4.87805 12.7018 4.85127C12.7431 4.82448 12.7894 4.80615 12.8378 4.79735C12.8862 4.78855 12.9359 4.78945 12.984 4.8L15.924 5.388C16.0676 5.14132 16.2944 4.9539 16.5637 4.85937C16.833 4.76484 17.1272 4.7694 17.3934 4.87222C17.6597 4.97505 17.8806 5.1694 18.0164 5.42041C18.1523 5.67141 18.1942 5.96262 18.1348 6.24177C18.0753 6.52092 17.9182 6.76972 17.6918 6.94352C17.4654 7.11732 17.1845 7.20473 16.8995 7.19006C16.6144 7.1754 16.3439 7.05962 16.1366 6.8635C15.9292 6.66738 15.7985 6.40378 15.768 6.12L13.2 5.58L12.42 9.324C14.0702 9.3594 15.6749 9.87206 17.04 10.8C17.2839 10.566 17.5902 10.4074 17.9221 10.3436C18.254 10.2797 18.5973 10.3132 18.9106 10.4401C19.2239 10.5669 19.4939 10.7817 19.6879 11.0584ZM8.20624 12.5333C8.07438 12.7307 8.004 12.9627 8.004 13.2C8.004 13.5183 8.13043 13.8235 8.35547 14.0485C8.58051 14.2736 8.88574 14.4 9.204 14.4C9.44134 14.4 9.67335 14.3296 9.87068 14.1978C10.068 14.0659 10.2218 13.8785 10.3127 13.6592C10.4035 13.4399 10.4272 13.1987 10.3809 12.9659C10.3346 12.7331 10.2204 12.5193 10.0525 12.3515C9.8847 12.1836 9.67089 12.0694 9.43811 12.0231C9.20533 11.9768 8.96405 12.0005 8.74478 12.0913C8.52551 12.1822 8.33809 12.336 8.20624 12.5333ZM12.012 17.424C13.0771 17.4681 14.1246 17.1416 14.976 16.5V16.548C15.0075 16.5173 15.0327 16.4806 15.05 16.4402C15.0674 16.3997 15.0766 16.3563 15.0772 16.3122C15.0777 16.2682 15.0696 16.2245 15.0533 16.1837C15.0369 16.1428 15.0127 16.1055 14.982 16.074C14.9513 16.0425 14.9146 16.0173 14.8742 16C14.8337 15.9826 14.7903 15.9734 14.7462 15.9728C14.7022 15.9723 14.6585 15.9804 14.6177 15.9967C14.5768 16.0131 14.5395 16.0373 14.508 16.068C13.7797 16.5904 12.895 16.8487 12 16.8C11.1061 16.8399 10.2255 16.5732 9.504 16.044C9.44182 15.993 9.36289 15.9669 9.28256 15.9708C9.20222 15.9748 9.12622 16.0085 9.06935 16.0653C9.01247 16.1222 8.97879 16.1982 8.97484 16.2786C8.97089 16.3589 8.99697 16.4378 9.048 16.5C9.89937 17.1416 10.9469 17.4681 12.012 17.424ZM14.0933 14.2458C14.2907 14.3776 14.5227 14.448 14.76 14.448L14.748 14.496C14.9107 14.4978 15.0721 14.4664 15.2223 14.4038C15.3725 14.3413 15.5084 14.2488 15.6218 14.1321C15.7352 14.0154 15.8236 13.8768 15.8818 13.7248C15.9399 13.5728 15.9665 13.4106 15.96 13.248C15.96 13.0107 15.8896 12.7787 15.7578 12.5813C15.6259 12.384 15.4385 12.2302 15.2192 12.1393C14.9999 12.0485 14.7587 12.0248 14.5259 12.0711C14.2931 12.1174 14.0793 12.2316 13.9115 12.3995C13.7436 12.5673 13.6294 12.7811 13.5831 13.0139C13.5368 13.2467 13.5605 13.4879 13.6513 13.7072C13.7422 13.9265 13.896 14.1139 14.0933 14.2458Z" fill="currentColor"></path></svg><span>Reddit</span></a></div></div></article></main><footer class="mt-auto text-xs md:text-sm"><div class="container py-6 flex flex-col md:flex-row gap-2 md:gap-0 justify-between items-center"><div class="text-zinc-300"><nav><ul class="flex space-x-4"><li><a class="hover:text-white font-medium" href="/security-labs/sitemap.xml">Sitemap</a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://elastic.co?utm_source=elastic-search-labs&amp;utm_medium=referral&amp;utm_campaign=search-labs&amp;utm_content=footer"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="inline-block w-3 h-3"><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"></path></svg><span>Elastic.co</span></a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://twitter.com/elasticseclabs"><svg class="w-4 h-4 inline-block w-3 h-3" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>@elasticseclabs</span></a></li></ul></nav></div><div class="flex flex-col space-y-1 text-zinc-300"><p>© <!-- -->2024<!-- -->. Elasticsearch B.V. All Rights Reserved.</p></div></div></footer></main></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"article":{"title":"Revisiting BLISTER: New development of the BLISTER loader","slug":"revisiting-blister-new-developments-of-the-blister-loader","date":"2023-08-24","description":"Elastic Security Labs dives deep into the recent evolution of the BLISTER loader malware family.","image":"cracked-lava.jpg","tags":["blister","malware","ref7890"],"body":{"raw":"\n## Preamble\n\nIn a fast-paced and ever-changing world of cybercrime threats, the tenacity and adaptability of malicious actors is a significant concern. BLISTER, a malware loader initially [discovered](https://www.elastic.co/security-labs/elastic-security-uncovers-blister-malware-campaign) by Elastic Security Labs in 2021 and associated with financially-motivated intrusions, is a testament to this trend as it continues to develop additional capabilities. Two years after its initial discovery, BLISTER continues to receive updates while flying under the radar, gaining momentum as an emerging threat. Recent findings from Palo Alto’s [Unit 42](https://twitter.com/Unit42_Intel/status/1684583246032506880) describe an updated [SOCGHOLISH](https://redcanary.com/threat-detection-report/threats/socgholish/) infection chain used to distribute BLISTER and deploy a payload from [MYTHIC](https://github.com/its-a-feature/Mythic), an open-source Command and Control (C2) framework.\n\n## Key takeaways\n\n - Elastic Security Labs has been monitoring malware loader BLISTER ramping up with new changes, and ongoing development with signs of imminent threat activity\n - New BLISTER update includes keying feature that allows for precise targeting of victim networks and lowers exposure within VM/sandbox environments\n - BLISTER now integrates techniques to remove any process instrumentation hook and has modified its configuration with multiple revisions, now encompassing additional fields and flags.\n\n## Overview\n\nOur research uncovered new functionality that was previously absent within the BLISTER family, indicating ongoing development. However, the malware authors continue to use a distinctive technique of embedding malicious code in otherwise legitimate applications. This approach superficially appears successful, given the low rates of detection for many vendors as seen in VirusTotal. The significant amount of benign code and use of encryption to protect the malicious code are likely two factors impacting detection.\n\n![Example of BLISTER detection rates on initial upload\n](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image11.png)\n\nRecently, Elastic Security Labs has observed many new BLISTER loaders in the wild. After analyzing various samples, it’s clear that the malware authors have made some changes and have been watching the antivirus industry closely. In one [sample](https://www.virustotal.com/gui/file/b4f37f13a7e9c56ea95fa3792e11404eb3bdb878734f1ca394ceed344d22858f) from early June, we can infer that the authors were testing with a non-production loader that displays a Message Box displaying the strings “Test”.\n\n![BLISTER payload with Message Box test](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image2.png)\n\nReaders can see a disassembled view of this functionality below.\n\n![BLISTER testing payloads with Message Box\n](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image4.jpg)\n\nBy the end of July, we observed campaigns involving a new BLISTER loader that targeted victim organizations to deploy the MYTHIC implant.\n\n![MYTHIC running inside injected WerFault process\n](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image6.jpg)\n\nAt the time of this writing, Elastic Security Labs is seeing a stream of BLISTER samples which deploy MYTHIC and have very low rates of detection. \n\n![Wave of BLISTER samples in August 2023](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image1.png)\n\n## Comparative analyses\n\n### Smuggling malicious code\n\nThe authors behind BLISTER employ a consistent strategy of embedding BLISTER's malicious code within a legitimate library. The most recent variants of this loader have targeted the [VLC](https://www.videolan.org/vlc/) Media Player library to smuggle their malware into victim environments. This blend of benign and malicious code seems effective at defeating some kinds of machine-learning models.\n\n![Meta data of BLISTER sample](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image10.png)\n\nThe following is a comparison between a legitimate VLC DLL and one that is infected with BLISTER’s code. In the infected sample, the entry point that references malicious code has been indicated in red. This methodology is similar to prior BLISTER variants.\n\n![Comparison between original and patched VLC library](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image8.png)\n\n### Different hashing algorithm\n\nOne of the changes implemented since our last [write-up](https://www.elastic.co/security-labs/blister-loader) is the adoption of a different hashing algorithm used in the core and in the loader part of BLISTER. While the previous version used simple logic to shift bytes, this new version includes a hard-coded seed with XOR and multiplication operations. Researchers speculate that changing the hashing approach helps to evade antimalware products that rely on YARA signatures.\n\n![Disassembled hashing algorithm](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image13.png)\n\n### Configuration retrieval\n\nFollowing the decryption of malicious code by the BLISTER’d loader, it employs an identical memory scanning method to identify the configuration data blob. This is accomplished by searching for a predetermined, hardcoded memory pattern. A notable contrast from the earlier iteration of BLISTER lies in the fact that the configuration is now decrypted in conjunction with the core code, rather than being treated as a separate entity.\n\n### Environmental keying\n\nA recent addition to BLISTER is the capability to exclusively execute on designated machines. This behavior is activated by configuring the appropriate flag within the malware’s configuration. Subsequently, the malware proceeds to extract the machine's domain name using the `GetComputerNameExW` Windows API. Following this, the domain name is hashed using the previously mentioned algorithm, and the resulting hash is then compared to a hash present in the configuration. This functionality is presumably deployed for the purpose of targeted attacks or for testing scenarios, ensuring that the malware refrains from infecting unintended systems such as those employed by malware researchers.\n\n![Environmental keying feature](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image12.png)\n\nOne of the few malware analysis tools capable of quickly exposing this behavior is the awesome [Tiny Tracer](https://github.com/hasherezade/tiny_tracer) utility by [hasherezade](https://twitter.com/hasherezade). We’ve included an excerpt from Tiny_Tracer below which captures the BLISTER process immediately terminating after the `GetComputerNameExW` validation is performed in a sandboxed analysis VM.\n\n![TinyTracer logs](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image15.png)\n\n### Time-based anti-debugging feature\n\nSimilar to its predecessors, the malware incorporates a time-based anti-debugging functionality. However, unlike the previous versions in which the timer was hardcoded, the updated version introduces a new field in the configuration. This field enables the customization of the sleep timer, with a default value of 10 minutes. This default interval remains unchanged from prior iterations of BLISTER.\n\n![Time-Based Anti-Debug Feature](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image9.png)\n\n### Unhook process instrumentation to detect syscalls\n\nIn this latest version, BLISTER introduces noteworthy functionality: it unhooks any ongoing process instrumentation, a [tactic](https://github.com/ionescu007/HookingNirvana/blob/master/Esoteric%20Hooks.pdf) designed to circumvent userland syscall detection mechanisms upon which certain EDR solutions are based.\n\n![Unhooking process instrumentation](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image3.png)\n\n### BLISTER's configuration\n\nThe BLISTER configuration structure has also been changed with the latest variants. Two new fields have been added and the flag field at offset 0 has been changed from a WORD to a DWORD value. The new fields pertain to the hash of the domain for environmental keying and the configurable sleep time; these field values are at offset 4 and 12 respectively. The following is the updated structure of the configuration:\n\n![Configuration structure](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image14.png)\n\nChanges have also been made to the configuration flags, allowing the operator to activate different functions within the malware. Researchers have provided an updated list of functions built upon our prior research into BLISTER.\n\n![Configuration flags enumeration](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image7.png)\n\n## Payload extractor update\n\nIn our previous research publication, we introduced an efficient payload extractor tailored to dissect and extract the configuration and payload of the loader. To dissect the most recent BLISTER variants and capture these new details, we enhanced our extractor which is available [here](https://github.com/elastic/labs-releases/tree/main/tools/blister).\n\n![Configuration extractor](/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image5.png)\n\n## Conclusion\n\n[BLISTER](https://www.trendmicro.com/en_us/research/22/d/Thwarting-Loaders-From-SocGholish-to-BLISTERs-LockBit-Payload.html) is one small part of the global cybercriminal ecosystem, providing financially-motivated threats to gain access to victim environments and avoid detection by security sensors. The community should consider these new developments and assess the efficacy of BLISTER detections, Elastic Security Labs will continue to monitor this threat and share actionable guidance.\n\n## Detection logic\n\n### Prevention\n\n - [Windows.Trojan.Blister](https://github.com/elastic/protections-artifacts/blob/main/yara/rules/Windows_Trojan_Blister.yar)\n \n ### Detection\n \n - [Windows Error Manager/Reporting Masquerading](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_windows_error_manager_reporting_masquerading.toml)\n - [Potential Operation via Direct Syscall](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_potential_operation_via_direct_syscall.toml)\n - [Potential Masquerading as Windows Error Manager](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_potential_masquerading_as_windows_error_manager.toml)\n - [Unusual Startup Shell Folder Modification](https://github.com/elastic/detection-rules/blob/main/rules/windows/persistence_evasion_registry_startup_shell_folder_modified.toml)\n - [Potential Masquerading as VLC DLL](https://github.com/elastic/detection-rules/blob/ef432d0907548abf7699fa5d86150dc6b4133125/rules_building_block/defense_evasion_masquerading_vlc_dll.toml)\n\n### YARA\n\nElastic Security has created [YARA rules](https://github.com/elastic/protections-artifacts/blob/main/yara/rules/Windows_Trojan_Blister.yar) to identify this activity. Below is the latest rule that captures the new update to BLISTER.\n\n```yara\nrule Windows_Trojan_Blister {\n    meta:\n        author = \"Elastic Security\"\n        creation_date = \"2023-08-02\"\n        last_modified = \"2023-08-08\"\n        os = \"Windows\"\n        arch = \"x86\"\n        category_type = \"Trojan\"\n        family = \"Blister\"\n        threat_name = \"Windows.Trojan.Blister\"\n        license = \"Elastic License v2\"\n    strings:\n        $b_loader_xor = { 48 8B C3 49 03 DC 83 E0 03 8A 44 05 48 [2-3] ?? 03 ?? 4D 2B ?? 75 }\n        $b_loader_virtual_protect = { 48 8D 45 50 41 ?? ?? ?? ?? 00 4C 8D ?? 04 4C 89 ?? ?? 41 B9 04 00 00 00 4C 89 ?? F0 4C 8D 45 58 48 89 44 24 20 48 8D 55 F0 }\n    condition:\n        all of them\n}\n```\n\n## Observed adversary tactics and techniques\n\nElastic uses the MITRE ATT\u0026CK framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.\n\n### Tactics\n\nTactics represent the why of a technique or sub-technique. It is the adversary’s tactical goal: the reason for performing an action.\n\n - [Execution](https://attack.mitre.org/tactics/TA0002/)\n - [Defense Evasion](https://attack.mitre.org/tactics/TA0005/)\n - [Persistence](https://attack.mitre.org/tactics/TA0003/)\n\n## Techniques / Sub techniques\n\nTechniques and Sub techniques represent how an adversary achieves a tactical goal by performing an action.\n\n - [System Binary Proxy Execution: Rundll32](https://attack.mitre.org/techniques/T1218/011/)\n - [Execution Guardrails: Environmental Keying](https://attack.mitre.org/techniques/T1480/001/)\n - [Registry Run Keys / Startup Folder](https://attack.mitre.org/techniques/T1547/001/)\n - [Masquerading](https://attack.mitre.org/techniques/T1036/)\n - [Process Injection: Process Hollowing](https://attack.mitre.org/techniques/T1055/012/)\n\n## References\n\nThe following were referenced throughout the above research:\n - [Palo Alto Unit42](https://twitter.com/Unit42_Intel/status/1684583246032506880?s=20)\n - [Trendmicro](https://www.trendmicro.com/en_us/research/22/d/Thwarting-Loaders-From-SocGholish-to-BLISTERs-LockBit-Payload.html)\n - [Malpedia](https://malpedia.caad.fkie.fraunhofer.de/details/win.blister)\n\n## Observables\n\nAll observables are also available for [download](https://github.com/elastic/labs-releases/tree/main/indicators/blister) in both ECS and STIX format in a combined zip bundle.\n\nThe following observables were discussed in this research.\n\n| Indicator | Type | Reference |\n|-----------|------|-----------|\n| 5fc79a4499bafa3a881778ef51ce29ef015ee58a587e3614702e69da304395db | sha256 | BLISTER loader DLL |\n","code":"var Component=(()=\u003e{var d=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var p=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=\u003e{for(var n in e)r(t,n,{get:e[n],enumerable:!0})},s=(t,e,n,o)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let a of g(e))!f.call(t,a)\u0026\u0026a!==n\u0026\u0026r(t,a,{get:()=\u003ee[a],enumerable:!(o=m(e,a))||o.enumerable});return t};var b=(t,e,n)=\u003e(n=t!=null?d(u(t)):{},s(e||!t||!t.__esModule?r(n,\"default\",{value:t,enumerable:!0}):n,t)),v=t=\u003es(r({},\"__esModule\",{value:!0}),t);var h=p((R,l)=\u003e{l.exports=_jsx_runtime});var S={};w(S,{default:()=\u003eE,frontmatter:()=\u003ey});var i=b(h()),y={title:\"Revisiting BLISTER: New development of the BLISTER loader\",slug:\"revisiting-blister-new-developments-of-the-blister-loader\",date:\"2023-08-24\",description:\"Elastic Security Labs dives deep into the recent evolution of the BLISTER loader malware family.\",author:[{slug:\"salim-bitam\"},{slug:\"daniel-stepanic\"}],image:\"cracked-lava.jpg\",category:[{slug:\"malware-analysis\"}],tags:[\"blister\",\"malware\",\"ref7890\"]};function c(t){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",ul:\"ul\",li:\"li\",img:\"img\",h3:\"h3\",code:\"code\",pre:\"pre\",div:\"div\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\"},t.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:\"preamble\",children:\"Preamble\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"In a fast-paced and ever-changing world of cybercrime threats, the tenacity and adaptability of malicious actors is a significant concern. BLISTER, a malware loader initially \",(0,i.jsx)(e.a,{href:\"https://www.elastic.co/security-labs/elastic-security-uncovers-blister-malware-campaign\",rel:\"nofollow\",children:\"discovered\"}),\" by Elastic Security Labs in 2021 and associated with financially-motivated intrusions, is a testament to this trend as it continues to develop additional capabilities. Two years after its initial discovery, BLISTER continues to receive updates while flying under the radar, gaining momentum as an emerging threat. Recent findings from Palo Alto\\u2019s \",(0,i.jsx)(e.a,{href:\"https://twitter.com/Unit42_Intel/status/1684583246032506880\",rel:\"nofollow\",children:\"Unit 42\"}),\" describe an updated \",(0,i.jsx)(e.a,{href:\"https://redcanary.com/threat-detection-report/threats/socgholish/\",rel:\"nofollow\",children:\"SOCGHOLISH\"}),\" infection chain used to distribute BLISTER and deploy a payload from \",(0,i.jsx)(e.a,{href:\"https://github.com/its-a-feature/Mythic\",rel:\"nofollow\",children:\"MYTHIC\"}),\", an open-source Command and Control (C2) framework.\"]}),`\n`,(0,i.jsx)(e.h2,{id:\"key-takeaways\",children:\"Key takeaways\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Elastic Security Labs has been monitoring malware loader BLISTER ramping up with new changes, and ongoing development with signs of imminent threat activity\"}),`\n`,(0,i.jsx)(e.li,{children:\"New BLISTER update includes keying feature that allows for precise targeting of victim networks and lowers exposure within VM/sandbox environments\"}),`\n`,(0,i.jsx)(e.li,{children:\"BLISTER now integrates techniques to remove any process instrumentation hook and has modified its configuration with multiple revisions, now encompassing additional fields and flags.\"}),`\n`]}),`\n`,(0,i.jsx)(e.h2,{id:\"overview\",children:\"Overview\"}),`\n`,(0,i.jsx)(e.p,{children:\"Our research uncovered new functionality that was previously absent within the BLISTER family, indicating ongoing development. However, the malware authors continue to use a distinctive technique of embedding malicious code in otherwise legitimate applications. This approach superficially appears successful, given the low rates of detection for many vendors as seen in VirusTotal. The significant amount of benign code and use of encryption to protect the malicious code are likely two factors impacting detection.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image11.png\",alt:`Example of BLISTER detection rates on initial upload\n`,width:\"1440\",height:\"253\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"Recently, Elastic Security Labs has observed many new BLISTER loaders in the wild. After analyzing various samples, it\\u2019s clear that the malware authors have made some changes and have been watching the antivirus industry closely. In one \",(0,i.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/b4f37f13a7e9c56ea95fa3792e11404eb3bdb878734f1ca394ceed344d22858f\",rel:\"nofollow\",children:\"sample\"}),\" from early June, we can infer that the authors were testing with a non-production loader that displays a Message Box displaying the strings \\u201CTest\\u201D.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image2.png\",alt:\"BLISTER payload with Message Box test\",width:\"775\",height:\"404\"})}),`\n`,(0,i.jsx)(e.p,{children:\"Readers can see a disassembled view of this functionality below.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image4.jpg\",alt:`BLISTER testing payloads with Message Box\n`,width:\"852\",height:\"387\"})}),`\n`,(0,i.jsx)(e.p,{children:\"By the end of July, we observed campaigns involving a new BLISTER loader that targeted victim organizations to deploy the MYTHIC implant.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image6.jpg\",alt:`MYTHIC running inside injected WerFault process\n`,width:\"793\",height:\"521\"})}),`\n`,(0,i.jsx)(e.p,{children:\"At the time of this writing, Elastic Security Labs is seeing a stream of BLISTER samples which deploy MYTHIC and have very low rates of detection.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image1.png\",alt:\"Wave of BLISTER samples in August 2023\",width:\"1440\",height:\"590\"})}),`\n`,(0,i.jsx)(e.h2,{id:\"comparative-analyses\",children:\"Comparative analyses\"}),`\n`,(0,i.jsx)(e.h3,{id:\"smuggling-malicious-code\",children:\"Smuggling malicious code\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"The authors behind BLISTER employ a consistent strategy of embedding BLISTER's malicious code within a legitimate library. The most recent variants of this loader have targeted the \",(0,i.jsx)(e.a,{href:\"https://www.videolan.org/vlc/\",rel:\"nofollow\",children:\"VLC\"}),\" Media Player library to smuggle their malware into victim environments. This blend of benign and malicious code seems effective at defeating some kinds of machine-learning models.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image10.png\",alt:\"Meta data of BLISTER sample\",width:\"793\",height:\"341\"})}),`\n`,(0,i.jsx)(e.p,{children:\"The following is a comparison between a legitimate VLC DLL and one that is infected with BLISTER\\u2019s code. In the infected sample, the entry point that references malicious code has been indicated in red. This methodology is similar to prior BLISTER variants.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image8.png\",alt:\"Comparison between original and patched VLC library\",width:\"1440\",height:\"424\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"different-hashing-algorithm\",children:\"Different hashing algorithm\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"One of the changes implemented since our last \",(0,i.jsx)(e.a,{href:\"https://www.elastic.co/security-labs/blister-loader\",rel:\"nofollow\",children:\"write-up\"}),\" is the adoption of a different hashing algorithm used in the core and in the loader part of BLISTER. While the previous version used simple logic to shift bytes, this new version includes a hard-coded seed with XOR and multiplication operations. Researchers speculate that changing the hashing approach helps to evade antimalware products that rely on YARA signatures.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image13.png\",alt:\"Disassembled hashing algorithm\",width:\"651\",height:\"266\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"configuration-retrieval\",children:\"Configuration retrieval\"}),`\n`,(0,i.jsx)(e.p,{children:\"Following the decryption of malicious code by the BLISTER\\u2019d loader, it employs an identical memory scanning method to identify the configuration data blob. This is accomplished by searching for a predetermined, hardcoded memory pattern. A notable contrast from the earlier iteration of BLISTER lies in the fact that the configuration is now decrypted in conjunction with the core code, rather than being treated as a separate entity.\"}),`\n`,(0,i.jsx)(e.h3,{id:\"environmental-keying\",children:\"Environmental keying\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"A recent addition to BLISTER is the capability to exclusively execute on designated machines. This behavior is activated by configuring the appropriate flag within the malware\\u2019s configuration. Subsequently, the malware proceeds to extract the machine's domain name using the \",(0,i.jsx)(e.code,{children:\"GetComputerNameExW\"}),\" Windows API. Following this, the domain name is hashed using the previously mentioned algorithm, and the resulting hash is then compared to a hash present in the configuration. This functionality is presumably deployed for the purpose of targeted attacks or for testing scenarios, ensuring that the malware refrains from infecting unintended systems such as those employed by malware researchers.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image12.png\",alt:\"Environmental keying feature\",width:\"1089\",height:\"317\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"One of the few malware analysis tools capable of quickly exposing this behavior is the awesome \",(0,i.jsx)(e.a,{href:\"https://github.com/hasherezade/tiny_tracer\",rel:\"nofollow\",children:\"Tiny Tracer\"}),\" utility by \",(0,i.jsx)(e.a,{href:\"https://twitter.com/hasherezade\",rel:\"nofollow\",children:\"hasherezade\"}),\". We\\u2019ve included an excerpt from Tiny_Tracer below which captures the BLISTER process immediately terminating after the \",(0,i.jsx)(e.code,{children:\"GetComputerNameExW\"}),\" validation is performed in a sandboxed analysis VM.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image15.png\",alt:\"TinyTracer logs\",width:\"752\",height:\"394\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"time-based-anti-debugging-feature\",children:\"Time-based anti-debugging feature\"}),`\n`,(0,i.jsx)(e.p,{children:\"Similar to its predecessors, the malware incorporates a time-based anti-debugging functionality. However, unlike the previous versions in which the timer was hardcoded, the updated version introduces a new field in the configuration. This field enables the customization of the sleep timer, with a default value of 10 minutes. This default interval remains unchanged from prior iterations of BLISTER.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image9.png\",alt:\"Time-Based Anti-Debug Feature\",width:\"1440\",height:\"100\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"unhook-process-instrumentation-to-detect-syscalls\",children:\"Unhook process instrumentation to detect syscalls\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"In this latest version, BLISTER introduces noteworthy functionality: it unhooks any ongoing process instrumentation, a \",(0,i.jsx)(e.a,{href:\"https://github.com/ionescu007/HookingNirvana/blob/master/Esoteric%20Hooks.pdf\",rel:\"nofollow\",children:\"tactic\"}),\" designed to circumvent userland syscall detection mechanisms upon which certain EDR solutions are based.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image3.png\",alt:\"Unhooking process instrumentation\",width:\"1440\",height:\"529\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"blisters-configuration\",children:\"BLISTER's configuration\"}),`\n`,(0,i.jsx)(e.p,{children:\"The BLISTER configuration structure has also been changed with the latest variants. Two new fields have been added and the flag field at offset 0 has been changed from a WORD to a DWORD value. The new fields pertain to the hash of the domain for environmental keying and the configurable sleep time; these field values are at offset 4 and 12 respectively. The following is the updated structure of the configuration:\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image14.png\",alt:\"Configuration structure\",width:\"715\",height:\"454\"})}),`\n`,(0,i.jsx)(e.p,{children:\"Changes have also been made to the configuration flags, allowing the operator to activate different functions within the malware. Researchers have provided an updated list of functions built upon our prior research into BLISTER.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image7.png\",alt:\"Configuration flags enumeration\",width:\"781\",height:\"553\"})}),`\n`,(0,i.jsx)(e.h2,{id:\"payload-extractor-update\",children:\"Payload extractor update\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"In our previous research publication, we introduced an efficient payload extractor tailored to dissect and extract the configuration and payload of the loader. To dissect the most recent BLISTER variants and capture these new details, we enhanced our extractor which is available \",(0,i.jsx)(e.a,{href:\"https://github.com/elastic/labs-releases/tree/main/tools/blister\",rel:\"nofollow\",children:\"here\"}),\".\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/image5.png\",alt:\"Configuration extractor\",width:\"1263\",height:\"597\"})}),`\n`,(0,i.jsx)(e.h2,{id:\"conclusion\",children:\"Conclusion\"}),`\n`,(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:\"https://www.trendmicro.com/en_us/research/22/d/Thwarting-Loaders-From-SocGholish-to-BLISTERs-LockBit-Payload.html\",rel:\"nofollow\",children:\"BLISTER\"}),\" is one small part of the global cybercriminal ecosystem, providing financially-motivated threats to gain access to victim environments and avoid detection by security sensors. The community should consider these new developments and assess the efficacy of BLISTER detections, Elastic Security Labs will continue to monitor this threat and share actionable guidance.\"]}),`\n`,(0,i.jsx)(e.h2,{id:\"detection-logic\",children:\"Detection logic\"}),`\n`,(0,i.jsx)(e.h3,{id:\"prevention\",children:\"Prevention\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/yara/rules/Windows_Trojan_Blister.yar\",rel:\"nofollow\",children:\"Windows.Trojan.Blister\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h3,{id:\"detection\",children:\"Detection\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_windows_error_manager_reporting_masquerading.toml\",rel:\"nofollow\",children:\"Windows Error Manager/Reporting Masquerading\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_potential_operation_via_direct_syscall.toml\",rel:\"nofollow\",children:\"Potential Operation via Direct Syscall\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/defense_evasion_potential_masquerading_as_windows_error_manager.toml\",rel:\"nofollow\",children:\"Potential Masquerading as Windows Error Manager\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/elastic/detection-rules/blob/main/rules/windows/persistence_evasion_registry_startup_shell_folder_modified.toml\",rel:\"nofollow\",children:\"Unusual Startup Shell Folder Modification\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/elastic/detection-rules/blob/ef432d0907548abf7699fa5d86150dc6b4133125/rules_building_block/defense_evasion_masquerading_vlc_dll.toml\",rel:\"nofollow\",children:\"Potential Masquerading as VLC DLL\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h3,{id:\"yara\",children:\"YARA\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"Elastic Security has created \",(0,i.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/yara/rules/Windows_Trojan_Blister.yar\",rel:\"nofollow\",children:\"YARA rules\"}),\" to identify this activity. Below is the latest rule that captures the new update to BLISTER.\"]}),`\n`,(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:\"language-yara\",children:`rule Windows_Trojan_Blister {\n    meta:\n        author = \"Elastic Security\"\n        creation_date = \"2023-08-02\"\n        last_modified = \"2023-08-08\"\n        os = \"Windows\"\n        arch = \"x86\"\n        category_type = \"Trojan\"\n        family = \"Blister\"\n        threat_name = \"Windows.Trojan.Blister\"\n        license = \"Elastic License v2\"\n    strings:\n        $b_loader_xor = { 48 8B C3 49 03 DC 83 E0 03 8A 44 05 48 [2-3] ?? 03 ?? 4D 2B ?? 75 }\n        $b_loader_virtual_protect = { 48 8D 45 50 41 ?? ?? ?? ?? 00 4C 8D ?? 04 4C 89 ?? ?? 41 B9 04 00 00 00 4C 89 ?? F0 4C 8D 45 58 48 89 44 24 20 48 8D 55 F0 }\n    condition:\n        all of them\n}\n`})}),`\n`,(0,i.jsx)(e.h2,{id:\"observed-adversary-tactics-and-techniques\",children:\"Observed adversary tactics and techniques\"}),`\n`,(0,i.jsx)(e.p,{children:\"Elastic uses the MITRE ATT\u0026CK framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.\"}),`\n`,(0,i.jsx)(e.h3,{id:\"tactics\",children:\"Tactics\"}),`\n`,(0,i.jsx)(e.p,{children:\"Tactics represent the why of a technique or sub-technique. It is the adversary\\u2019s tactical goal: the reason for performing an action.\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0002/\",rel:\"nofollow\",children:\"Execution\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0005/\",rel:\"nofollow\",children:\"Defense Evasion\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0003/\",rel:\"nofollow\",children:\"Persistence\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h2,{id:\"techniques--sub-techniques\",children:\"Techniques / Sub techniques\"}),`\n`,(0,i.jsx)(e.p,{children:\"Techniques and Sub techniques represent how an adversary achieves a tactical goal by performing an action.\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1218/011/\",rel:\"nofollow\",children:\"System Binary Proxy Execution: Rundll32\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1480/001/\",rel:\"nofollow\",children:\"Execution Guardrails: Environmental Keying\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1547/001/\",rel:\"nofollow\",children:\"Registry Run Keys / Startup Folder\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1036/\",rel:\"nofollow\",children:\"Masquerading\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1055/012/\",rel:\"nofollow\",children:\"Process Injection: Process Hollowing\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h2,{id:\"references\",children:\"References\"}),`\n`,(0,i.jsx)(e.p,{children:\"The following were referenced throughout the above research:\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://twitter.com/Unit42_Intel/status/1684583246032506880?s=20\",rel:\"nofollow\",children:\"Palo Alto Unit42\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.trendmicro.com/en_us/research/22/d/Thwarting-Loaders-From-SocGholish-to-BLISTERs-LockBit-Payload.html\",rel:\"nofollow\",children:\"Trendmicro\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://malpedia.caad.fkie.fraunhofer.de/details/win.blister\",rel:\"nofollow\",children:\"Malpedia\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h2,{id:\"observables\",children:\"Observables\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"All observables are also available for \",(0,i.jsx)(e.a,{href:\"https://github.com/elastic/labs-releases/tree/main/indicators/blister\",rel:\"nofollow\",children:\"download\"}),\" in both ECS and STIX format in a combined zip bundle.\"]}),`\n`,(0,i.jsx)(e.p,{children:\"The following observables were discussed in this research.\"}),`\n`,(0,i.jsx)(e.div,{className:\"table-container\",children:(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:\"Indicator\"}),(0,i.jsx)(e.th,{children:\"Type\"}),(0,i.jsx)(e.th,{children:\"Reference\"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:\"5fc79a4499bafa3a881778ef51ce29ef015ee58a587e3614702e69da304395db\"}),(0,i.jsx)(e.td,{children:\"sha256\"}),(0,i.jsx)(e.td,{children:\"BLISTER loader DLL\"})]})})]})})]})}function T(t={}){let{wrapper:e}=t.components||{};return e?(0,i.jsx)(e,Object.assign({},t,{children:(0,i.jsx)(c,t)})):c(t)}var E=T;return v(S);})();\n;return Component;"},"_id":"articles/revisiting-blister-new-developments-of-the-blister-loader.mdx","_raw":{"sourceFilePath":"articles/revisiting-blister-new-developments-of-the-blister-loader.mdx","sourceFileName":"revisiting-blister-new-developments-of-the-blister-loader.mdx","sourceFileDir":"articles","contentType":"mdx","flattenedPath":"articles/revisiting-blister-new-developments-of-the-blister-loader"},"type":"Article","imageUrl":"/assets/images/revisiting-blister-new-developments-of-the-blister-loader/cracked-lava.jpg","readingTime":"9 min read","series":"","url":"/revisiting-blister-new-developments-of-the-blister-loader","headings":[{"level":2,"title":"Preamble","href":"#preamble"},{"level":2,"title":"Key takeaways","href":"#key-takeaways"},{"level":2,"title":"Overview","href":"#overview"},{"level":2,"title":"Comparative analyses","href":"#comparative-analyses"},{"level":3,"title":"Smuggling malicious code","href":"#smuggling-malicious-code"},{"level":3,"title":"Different hashing algorithm","href":"#different-hashing-algorithm"},{"level":3,"title":"Configuration retrieval","href":"#configuration-retrieval"},{"level":3,"title":"Environmental keying","href":"#environmental-keying"},{"level":3,"title":"Time-based anti-debugging feature","href":"#time-based-anti-debugging-feature"},{"level":3,"title":"Unhook process instrumentation to detect syscalls","href":"#unhook-process-instrumentation-to-detect-syscalls"},{"level":3,"title":"BLISTER's configuration","href":"#blisters-configuration"},{"level":2,"title":"Payload extractor update","href":"#payload-extractor-update"},{"level":2,"title":"Conclusion","href":"#conclusion"},{"level":2,"title":"Detection logic","href":"#detection-logic"},{"level":3,"title":"Prevention","href":"#prevention"},{"level":3,"title":"YARA","href":"#yara"},{"level":2,"title":"Observed adversary tactics and techniques","href":"#observed-adversary-tactics-and-techniques"},{"level":3,"title":"Tactics","href":"#tactics"},{"level":2,"title":"Techniques / Sub techniques","href":"#techniques--sub-techniques"},{"level":2,"title":"References","href":"#references"},{"level":2,"title":"Observables","href":"#observables"}],"author":[{"title":"Salim Bitam","slug":"salim-bitam","description":"Elastic","body":{"raw":"","code":"var Component=(()=\u003e{var l=Object.create;var i=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty;var g=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),j=(t,n)=\u003e{for(var e in n)i(t,e,{get:n[e],enumerable:!0})},s=(t,n,e,o)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let a of f(n))!d.call(t,a)\u0026\u0026a!==e\u0026\u0026i(t,a,{get:()=\u003en[a],enumerable:!(o=x(n,a))||o.enumerable});return t};var p=(t,n,e)=\u003e(e=t!=null?l(_(t)):{},s(n||!t||!t.__esModule?i(e,\"default\",{value:t,enumerable:!0}):e,t)),M=t=\u003es(i({},\"__esModule\",{value:!0}),t);var c=g((h,m)=\u003e{m.exports=_jsx_runtime});var F={};j(F,{default:()=\u003eD,frontmatter:()=\u003eb});var r=p(c()),b={title:\"Salim Bitam\",description:\"Elastic\",slug:\"salim-bitam\"};function u(t){return(0,r.jsx)(r.Fragment,{})}function C(t={}){let{wrapper:n}=t.components||{};return n?(0,r.jsx)(n,Object.assign({},t,{children:(0,r.jsx)(u,t)})):u(t)}var D=C;return M(F);})();\n;return Component;"},"_id":"authors/salim-bitam.mdx","_raw":{"sourceFilePath":"authors/salim-bitam.mdx","sourceFileName":"salim-bitam.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/salim-bitam"},"type":"Author","imageUrl":"","url":"/authors/salim-bitam"},{"title":"Daniel Stepanic","slug":"daniel-stepanic","description":"Elastic","body":{"raw":"","code":"var Component=(()=\u003e{var m=Object.create;var i=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var _=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),g=(t,n)=\u003e{for(var e in n)i(t,e,{get:n[e],enumerable:!0})},s=(t,n,e,o)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let a of p(n))!f.call(t,a)\u0026\u0026a!==e\u0026\u0026i(t,a,{get:()=\u003en[a],enumerable:!(o=x(n,a))||o.enumerable});return t};var j=(t,n,e)=\u003e(e=t!=null?m(d(t)):{},s(n||!t||!t.__esModule?i(e,\"default\",{value:t,enumerable:!0}):e,t)),D=t=\u003es(i({},\"__esModule\",{value:!0}),t);var u=_((h,c)=\u003e{c.exports=_jsx_runtime});var X={};g(X,{default:()=\u003eF,frontmatter:()=\u003eM});var r=j(u()),M={title:\"Daniel Stepanic\",description:\"Elastic\",slug:\"daniel-stepanic\"};function l(t){return(0,r.jsx)(r.Fragment,{})}function C(t={}){let{wrapper:n}=t.components||{};return n?(0,r.jsx)(n,Object.assign({},t,{children:(0,r.jsx)(l,t)})):l(t)}var F=C;return D(X);})();\n;return Component;"},"_id":"authors/daniel-stepanic.mdx","_raw":{"sourceFilePath":"authors/daniel-stepanic.mdx","sourceFileName":"daniel-stepanic.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/daniel-stepanic"},"type":"Author","imageUrl":"","url":"/authors/daniel-stepanic"}],"category":[{"title":"Malware analysis","slug":"malware-analysis","body":{"raw":"","code":"var Component=(()=\u003e{var u=Object.create;var s=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),M=(t,n)=\u003e{for(var e in n)s(t,e,{get:n[e],enumerable:!0})},i=(t,n,e,o)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let r of f(n))!g.call(t,r)\u0026\u0026r!==e\u0026\u0026s(t,r,{get:()=\u003en[r],enumerable:!(o=x(n,r))||o.enumerable});return t};var d=(t,n,e)=\u003e(e=t!=null?u(_(t)):{},i(n||!t||!t.__esModule?s(e,\"default\",{value:t,enumerable:!0}):e,t)),p=t=\u003ei(s({},\"__esModule\",{value:!0}),t);var l=j((X,c)=\u003e{c.exports=_jsx_runtime});var D={};M(D,{default:()=\u003eC,frontmatter:()=\u003ew});var a=d(l()),w={title:\"Malware analysis\",slug:\"malware-analysis\"};function m(t){return(0,a.jsx)(a.Fragment,{})}function y(t={}){let{wrapper:n}=t.components||{};return n?(0,a.jsx)(n,Object.assign({},t,{children:(0,a.jsx)(m,t)})):m(t)}var C=y;return p(D);})();\n;return Component;"},"_id":"categories/malware-analysis.mdx","_raw":{"sourceFilePath":"categories/malware-analysis.mdx","sourceFileName":"malware-analysis.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/malware-analysis"},"type":"Category","url":"/categories/malware-analysis"}]},"seriesArticles":null},"__N_SSG":true},"page":"/[slug]","query":{"slug":"revisiting-blister-new-developments-of-the-blister-loader"},"buildId":"dGrrQfBbQkqaleQ_11aBK","assetPrefix":"/security-labs","isFallback":false,"gsp":true,"scriptLoader":[]}</script></body></html>