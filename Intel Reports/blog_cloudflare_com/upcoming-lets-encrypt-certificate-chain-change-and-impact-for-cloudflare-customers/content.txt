<!DOCTYPE html> <html lang="en-us" dir="ltr"> <head><meta name="HandheldFriendly" content="True"><meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="baidu-site-verification" content="KeThzeyMOr"><meta name="baidu-site-verification" content="code-NIlrS7gNhx"><meta charset="UTF-8"><meta name="description" content="Get the latest news on how products at Cloudflare are built, technologies used, and join the teams helping to build a better Internet."><title>Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers</title><meta name="title" content="Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers"><meta name="msvalidate.01" content="CF295E1604697F9CAD18B5A232E871F6"><meta class="swiftype" name="language" data-type="string" content="en"><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-NDGPDFZ');</script><script src="/static/z/i.js" type="text/javascript" referrerpolicy="origin"></script><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="apple-touch-icon" sizes="180x180" href="/images/favicon-32x32.png"><link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-32x32.png"><link rel="mask-icon" href="/images/favicon-32x32.png" color="#f78100"><link rel="stylesheet" href="/themes/ashes.min.css"><link rel="sitemap" href="/sitemap.xml"><meta name="msapplication-TileColor" content="#da532c"><meta name="theme-color" content="#ffffff"><link rel="canonical" href="https://blog.cloudflare.com/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers"><link rel="alternate" hreflang="en-us" href="https://blog.cloudflare.com/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers"><!-- General Meta Tags --> <meta property="article:published_time" content="2024-03-14T14:00:23.000+00:00"> <meta property="article:modified_time" content="2024-10-10T00:22:14.718Z">  <meta property="article:tag" content="Security"><meta property="article:tag" content="Developers"><meta property="article:tag" content="Developer Platform"><meta property="article:tag" content="SSL"><meta property="article:tag" content="TLS"><meta property="article:tag" content="Application Security"> <meta property="article:publisher" content="https://www.facebook.com/cloudflare"> <!-- Facebook Meta Tags --> <meta property="og:site_name" content="The Cloudflare Blog"> <meta property="og:type" content="article"> <meta property="og:title" content="Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers"> <meta property="og:description" content="Letâs Encryptâs cross-signed chain will be expiring in September. To prepare for the change, after May 15th, 2024, Cloudflare will start issuing certs from Letâs Encryptâs ISRG X1 chain. This change will impact legacy devices with outdated trust stores (Android versions 7.1.1 or older)"> <meta property="og:url" content="https://blog.cloudflare.com/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers"> <meta property="og:image:width" content="1200"> <meta property="og:image:height" content="628"> <!-- Twitter/X Meta Tags --> <meta name="twitter:title" content="Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers"> <meta name="twitter:description" content="Letâs Encryptâs cross-signed chain will be expiring in September. To prepare for the change, after May 15th, 2024, Cloudflare will start issuing certs from Letâs Encryptâs ISRG X1 chain. This change will impact legacy devices with outdated trust stores (Android versions 7.1.1 or older)"> <meta name="twitter:url" content="https://blog.cloudflare.com/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers"> <meta name="twitter:card" content="summary_large_image">  <meta name="twitter:label1" content="Written by"> <meta name="twitter:data1" content="Dina Kozlov"> <meta name="twitter:creator" content="@dinasaur_404"><meta name="twitter:label2" content="Filed under"><meta name="twitter:data2" content="Security,Developers,Developer Platform,SSL,TLS,Application Security"> <meta name="twitter:site" content="@cloudflare">  <meta property="og:image" content="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6C6Fo0ShHaENE5h2igEiqo/9dd17dbc0d41eb30d64eba65721cae61/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers-7mAYMv.png"> <meta name="twitter:image" content="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6C6Fo0ShHaENE5h2igEiqo/9dd17dbc0d41eb30d64eba65721cae61/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers-7mAYMv.png"> <link rel="stylesheet" href="/_astro/index.5BtHvQ-S.css" /><script type="module" src="/_astro/hoisted.Byv_OtGt.js"></script></head><style>astro-island,astro-slot,astro-static-slot{display:contents}</style><script>(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).only=e;window.dispatchEvent(new Event("astro:only"));})();;(()=>{var b=Object.defineProperty;var f=(c,o,i)=>o in c?b(c,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):c[o]=i;var l=(c,o,i)=>(f(c,typeof o!="symbol"?o+"":o,i),i);var p;{let c={0:t=>m(t),1:t=>i(t),2:t=>new RegExp(t),3:t=>new Date(t),4:t=>new Map(i(t)),5:t=>new Set(i(t)),6:t=>BigInt(t),7:t=>new URL(t),8:t=>new Uint8Array(t),9:t=>new Uint16Array(t),10:t=>new Uint32Array(t)},o=t=>{let[e,r]=t;return e in c?c[e](r):void 0},i=t=>t.map(o),m=t=>typeof t!="object"||t===null?t:Object.fromEntries(Object.entries(t).map(([e,r])=>[e,o(r)]));customElements.get("astro-island")||customElements.define("astro-island",(p=class extends HTMLElement{constructor(){super(...arguments);l(this,"Component");l(this,"hydrator");l(this,"hydrate",async()=>{var d;if(!this.hydrator||!this.isConnected)return;let e=(d=this.parentElement)==null?void 0:d.closest("astro-island[ssr]");if(e){e.addEventListener("astro:hydrate",this.hydrate,{once:!0});return}let r=this.querySelectorAll("astro-slot"),a={},h=this.querySelectorAll("template[data-astro-template]");for(let n of h){let s=n.closest(this.tagName);s!=null&&s.isSameNode(this)&&(a[n.getAttribute("data-astro-template")||"default"]=n.innerHTML,n.remove())}for(let n of r){let s=n.closest(this.tagName);s!=null&&s.isSameNode(this)&&(a[n.getAttribute("name")||"default"]=n.innerHTML)}let u;try{u=this.hasAttribute("props")?m(JSON.parse(this.getAttribute("props"))):{}}catch(n){let s=this.getAttribute("component-url")||"<unknown>",y=this.getAttribute("component-export");throw y&&(s+=` (export ${y})`),console.error(`[hydrate] Error parsing props for component ${s}`,this.getAttribute("props"),n),n}await this.hydrator(this)(this.Component,u,a,{client:this.getAttribute("client")}),this.removeAttribute("ssr"),this.dispatchEvent(new CustomEvent("astro:hydrate"))});l(this,"unmount",()=>{this.isConnected||this.dispatchEvent(new CustomEvent("astro:unmount"))})}disconnectedCallback(){document.removeEventListener("astro:after-swap",this.unmount),document.addEventListener("astro:after-swap",this.unmount,{once:!0})}connectedCallback(){if(!this.hasAttribute("await-children")||document.readyState==="interactive"||document.readyState==="complete")this.childrenConnectedCallback();else{let e=()=>{document.removeEventListener("DOMContentLoaded",e),r.disconnect(),this.childrenConnectedCallback()},r=new MutationObserver(()=>{var a;((a=this.lastChild)==null?void 0:a.nodeType)===Node.COMMENT_NODE&&this.lastChild.nodeValue==="astro:end"&&(this.lastChild.remove(),e())});r.observe(this,{childList:!0}),document.addEventListener("DOMContentLoaded",e)}}async childrenConnectedCallback(){let e=this.getAttribute("before-hydration-url");e&&await import(e),this.start()}start(){let e=JSON.parse(this.getAttribute("opts")),r=this.getAttribute("client");if(Astro[r]===void 0){window.addEventListener(`astro:${r}`,()=>this.start(),{once:!0});return}Astro[r](async()=>{let a=this.getAttribute("renderer-url"),[h,{default:u}]=await Promise.all([import(this.getAttribute("component-url")),a?import(a):()=>()=>{}]),d=this.getAttribute("component-export")||"default";if(!d.includes("."))this.Component=h[d];else{this.Component=h;for(let n of d.split("."))this.Component=this.Component[n]}return this.hydrator=u,this.hydrate},e,this)}attributeChangedCallback(){this.hydrate()}},l(p,"observedAttributes",["props"]),p))}})();</script><astro-island uid="149tNG" component-url="/_astro/GoogleAnalytics.ZZb4yAx2.js" component-export="GoogleAnalytics" renderer-url="/_astro/client.BQCS8AJJ.js" props="{&quot;title&quot;:[0,&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers&quot;],&quot;canonical&quot;:[0,&quot;https://blog.cloudflare.com/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers&quot;],&quot;info&quot;:[0,{&quot;id&quot;:[0,&quot;m2vQRUxG0AW4dcsV1vanp&quot;],&quot;title&quot;:[0,&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers&quot;],&quot;slug&quot;:[0,&quot;upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers&quot;],&quot;excerpt&quot;:[0,&quot;Letâs Encryptâs cross-signed chain will be expiring in September. To prepare for the change, after May 15th, 2024, Cloudflare will start issuing certs from Letâs Encryptâs ISRG X1 chain. This change will impact legacy devices with outdated trust stores (Android versions 7.1.1 or older)&quot;],&quot;featured&quot;:[0,false],&quot;html&quot;:[0,&quot;\n            &lt;figure class=\&quot;kg-card kg-image-card \&quot;&gt;\n            \n            &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4nIzJL4s3S6cuVYueIA32E/a7e5d198da5e722e6a8c7b7e04c8cf13/Security-Week---Backup-Certs--1-.png\&quot; alt=\&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers\&quot; class=\&quot;kg-image\&quot; width=\&quot;1201\&quot; height=\&quot;675\&quot; loading=\&quot;lazy\&quot;/&gt;\n            \n            &lt;/figure&gt;&lt;p&gt;Letâs Encrypt, a publicly trusted certificate authority (CA) that Cloudflare uses to issue TLS certificates, has been relying on two distinct certificate chains. One is cross-signed with IdenTrust, a globally trusted CA that has been around since 2000, and the other is Letâs Encryptâs own root CA, ISRG Root X1. Since Letâs Encrypt launched, ISRG Root X1 has been steadily gaining its own device compatibility.&lt;/p&gt;&lt;p&gt;On September 30, 2024, Letâs Encryptâs certificate chain cross-signed with IdenTrust will &lt;a href=\&quot;https://letsencrypt.org/2023/07/10/cross-sign-expiration.html\&quot;&gt;expire&lt;/a&gt;. To proactively prepare for this change, on May 15, 2024, Cloudflare will stop issuing certificates from the cross-signed chain and will instead use Letâs Encryptâs ISRG Root X1 chain for all future Letâs Encrypt certificates.&lt;/p&gt;&lt;p&gt;The change in the certificate chain will impact legacy devices and systems, such as Android devices version 7.1.1 or older, as those exclusively rely on the cross-signed chain and lack the ISRG X1 root in their trust store. These clients may encounter TLS errors or warnings when accessing domains secured by a Letâs Encrypt certificate.&lt;/p&gt;&lt;p&gt;According to Letâs Encrypt, more than 93.9% of Android devices already trust the ISRG Root X1 and this number is expected to increase in 2024, especially as Android releases version 14, which makes the Android trust store easily and automatically upgradable.&lt;/p&gt;&lt;p&gt;We took a look at the data ourselves and found that, from all Android requests, 2.96% of them come from devices that will be affected by the change. In addition, only 1.13% of all requests from Firefox come from affected versions, which means that most (98.87%) of the requests coming from Android versions that are using Firefox will not be impacted.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;preparing-for-the-change\&quot;&gt;Preparing for the change&lt;/h3&gt;\n            &lt;a href=\&quot;#preparing-for-the-change\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;If youâre worried about the change impacting your clients, there are a few things that you can do to reduce the impact of the change. If you control the clients that are connecting to your application, we recommend updating the trust store to include the &lt;a href=\&quot;https://letsencrypt.org/certificates/#root-certificates\&quot;&gt;ISRG Root X1&lt;/a&gt;. If you use certificate pinning, remove or update your pin. In general, we discourage all customers from pinning their certificates, as this usually leads to issues during certificate renewals or CA changes.&lt;/p&gt;&lt;p&gt;If you experience issues with the Letâs Encrypt chain change, and youâre using &lt;a href=\&quot;https://developers.cloudflare.com/ssl/edge-certificates/advanced-certificate-manager/\&quot;&gt;Advanced Certificate Manager&lt;/a&gt; or &lt;a href=\&quot;https://developers.cloudflare.com/cloudflare-for-platforms/cloudflare-for-saas/security/certificate-management/\&quot;&gt;SSL for SaaS&lt;/a&gt; on the Enterprise plan, you can choose to switch your certificate to use Google Trust Services as the certificate authority instead.&lt;/p&gt;&lt;p&gt;For more information, please refer to our &lt;a href=\&quot;https://developers.cloudflare.com/ssl/reference/migration-guides/lets-encrypt-chain/\&quot;&gt;developer documentation&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;While this change will impact a very small portion of clients, we support the shift that Letâs Encrypt is making as it supports a more secure and agile Internet.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;embracing-change-to-move-towards-a-better-internet\&quot;&gt;Embracing change to move towards a better Internet&lt;/h3&gt;\n            &lt;a href=\&quot;#embracing-change-to-move-towards-a-better-internet\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;Looking back, there were a number of challenges that slowed down the adoption of new technologies and standards that helped make the Internet faster, more secure, and more reliable.&lt;/p&gt;&lt;p&gt;For starters, before Cloudflare &lt;a href=\&quot;/introducing-universal-ssl\&quot;&gt;launched Universal SSL&lt;/a&gt;, free certificates were not attainable. Instead, domain owners had to pay around $100 to get a TLS certificate. For a small business, this is a big cost and without browsers enforcing &lt;a href=\&quot;https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/\&quot;&gt;TLS&lt;/a&gt;, this significantly hindered TLS adoption for years. Insecure algorithms have taken decades to deprecate due to lack of support of new algorithms in browsers or devices. We learned this lesson while &lt;a href=\&quot;/sha-1-deprecation-no-browser-left-behind/\&quot;&gt;deprecating SHA-1&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Supporting new security standards and protocols is vital for us to continue improving the Internet. Over the years, big and sometimes risky changes were made in order for us to move forward. The launch of Letâs Encrypt in 2015 was monumental. Letâs Encrypt allowed every domain to get a TLS certificate for free, which paved the way to a more secure Internet, with now &lt;a href=\&quot;https://radar.cloudflare.com/adoption-and-usage#http-vs-https\&quot;&gt;around 98%&lt;/a&gt; of traffic using &lt;a href=\&quot;https://www.cloudflare.com/learning/ssl/what-is-https/\&quot;&gt;HTTPS&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;In 2014, Cloudflare launched elliptic curve digital signature algorithm (&lt;a href=\&quot;/ecdsa-the-digital-signature-algorithm-of-a-better-internet\&quot;&gt;ECDSA&lt;/a&gt;) support for Cloudflare-issued certificates and made the decision to issue ECDSA-only certificates to free customers. This boosted ECDSA adoption by pressing clients and web operators to make changes to support the &lt;a href=\&quot;https://www.cloudflare.com/dns/dnssec/ecdsa-and-dnssec/\&quot;&gt;new algorithm&lt;/a&gt;, which provided the same (if not better) security as RSA while also improving performance. In addition to that, modern browsers and operating systems are now being built in a way that allows them to constantly support new standards, so that they can deprecate old ones.&lt;/p&gt;&lt;p&gt;For us to move forward in supporting new standards and protocols, we need to make the Public Key Infrastructure (PKI) ecosystem more agile. By retiring the cross-signed chain, Letâs Encrypt is pushing devices, browsers, and clients to support adaptable trust stores. This allows clients to support new standards without causing a breaking change. It also lays the groundwork for new certificate authorities to emerge.&lt;/p&gt;&lt;p&gt;Today, one of the main reasons why thereâs a limited number of CAs available is that it takes years for them to become widely trusted, that is, without cross-signing with another CA. In 2017, Google launched a new publicly trusted CA, &lt;a href=\&quot;https://pki.goog/\&quot;&gt;Google Trust Services&lt;/a&gt;, that issued free TLS certificates. Even though they launched a few years after Letâs Encrypt, they faced the same challenges with device compatibility and adoption, which caused them to cross-sign with GlobalSignâs CA. We hope that, by the time GlobalSignâs CA comes up for expiration, almost all traffic is coming from a modern client and browser, meaning the change impact should be minimal.&lt;/p&gt;&quot;],&quot;published_at&quot;:[0,&quot;2024-03-14T14:00:23.000+00:00&quot;],&quot;updated_at&quot;:[0,&quot;2024-10-10T00:22:14.718Z&quot;],&quot;feature_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3umxj7gwKbeYTbABVLOLYT/e2504da118b56c5ce0f6ecbc20d73492/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers.png&quot;],&quot;tags&quot;:[1,[[0,{&quot;id&quot;:[0,&quot;6Mp7ouACN2rT3YjL1xaXJx&quot;],&quot;name&quot;:[0,&quot;Security&quot;],&quot;slug&quot;:[0,&quot;security&quot;]}],[0,{&quot;id&quot;:[0,&quot;4HIPcb68qM0e26fIxyfzwQ&quot;],&quot;name&quot;:[0,&quot;Developers&quot;],&quot;slug&quot;:[0,&quot;developers&quot;]}],[0,{&quot;id&quot;:[0,&quot;3JAY3z7p7An94s6ScuSQPf&quot;],&quot;name&quot;:[0,&quot;Developer Platform&quot;],&quot;slug&quot;:[0,&quot;developer-platform&quot;]}],[0,{&quot;id&quot;:[0,&quot;1HblPaFreDjetoJDJPjTAi&quot;],&quot;name&quot;:[0,&quot;SSL&quot;],&quot;slug&quot;:[0,&quot;ssl&quot;]}],[0,{&quot;id&quot;:[0,&quot;56vA0Z6hqev6QaJBQmO2J8&quot;],&quot;name&quot;:[0,&quot;TLS&quot;],&quot;slug&quot;:[0,&quot;tls&quot;]}],[0,{&quot;id&quot;:[0,&quot;urEf9QllkDeGxTu3ysdlo&quot;],&quot;name&quot;:[0,&quot;Application Security&quot;],&quot;slug&quot;:[0,&quot;application-security&quot;]}]]],&quot;relatedTags&quot;:[0],&quot;authors&quot;:[1,[[0,{&quot;name&quot;:[0,&quot;Dina Kozlov&quot;],&quot;slug&quot;:[0,&quot;dina&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/bY78cK0burCjZbD6jOgAH/a8479b5ea6dd8fb3acb41227c1a4ad0e/dina.jpg&quot;],&quot;location&quot;:[0,null],&quot;website&quot;:[0,null],&quot;twitter&quot;:[0,&quot;@dinasaur_404&quot;],&quot;facebook&quot;:[0,null]}]]],&quot;meta_description&quot;:[0,null],&quot;primary_author&quot;:[0,{}],&quot;localeList&quot;:[0,{&quot;name&quot;:[0,&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers Config&quot;],&quot;enUS&quot;:[0,&quot;English for Locale&quot;],&quot;zhCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhHansCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhTW&quot;:[0,&quot;No Page for Locale&quot;],&quot;frFR&quot;:[0,&quot;No Page for Locale&quot;],&quot;deDE&quot;:[0,&quot;No Page for Locale&quot;],&quot;itIT&quot;:[0,&quot;No Page for Locale&quot;],&quot;jaJP&quot;:[0,&quot;No Page for Locale&quot;],&quot;koKR&quot;:[0,&quot;No Page for Locale&quot;],&quot;ptBR&quot;:[0,&quot;No Page for Locale&quot;],&quot;esLA&quot;:[0,&quot;No Page for Locale&quot;],&quot;esES&quot;:[0,&quot;No Page for Locale&quot;],&quot;enAU&quot;:[0,&quot;No Page for Locale&quot;],&quot;enCA&quot;:[0,&quot;No Page for Locale&quot;],&quot;enIN&quot;:[0,&quot;No Page for Locale&quot;],&quot;enGB&quot;:[0,&quot;No Page for Locale&quot;],&quot;idID&quot;:[0,&quot;No Page for Locale&quot;],&quot;ruRU&quot;:[0,&quot;No Page for Locale&quot;],&quot;svSE&quot;:[0,&quot;No Page for Locale&quot;],&quot;viVN&quot;:[0,&quot;No Page for Locale&quot;],&quot;plPL&quot;:[0,&quot;No Page for Locale&quot;],&quot;arAR&quot;:[0,&quot;No Page for Locale&quot;],&quot;nlNL&quot;:[0,&quot;No Page for Locale&quot;],&quot;thTH&quot;:[0,&quot;No Page for Locale&quot;],&quot;trTR&quot;:[0,&quot;No Page for Locale&quot;],&quot;heIL&quot;:[0,&quot;No Page for Locale&quot;],&quot;lvLV&quot;:[0,&quot;No Page for Locale&quot;],&quot;etEE&quot;:[0,&quot;No Page for Locale&quot;],&quot;ltLT&quot;:[0,&quot;No Page for Locale&quot;]}],&quot;url&quot;:[0,&quot;https://blog.cloudflare.com/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers&quot;],&quot;metadata&quot;:[0,{&quot;title&quot;:[0,&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers&quot;],&quot;description&quot;:[0,null],&quot;imgPreview&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6C6Fo0ShHaENE5h2igEiqo/9dd17dbc0d41eb30d64eba65721cae61/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers-7mAYMv.png&quot;]}]}],&quot;tagInfo&quot;:[0],&quot;authorInfo&quot;:[0],&quot;translatedPosts&quot;:[1,[]]}" ssr="" client="only" opts="{&quot;name&quot;:&quot;GoogleAnalytics&quot;,&quot;value&quot;:&quot;react&quot;}"></astro-island><script>(()=>{var i=t=>{let e=async()=>{await(await t())()};"requestIdleCallback"in window?window.requestIdleCallback(e):setTimeout(e,200)};(self.Astro||(self.Astro={})).idle=i;window.dispatchEvent(new Event("astro:idle"));})();</script><astro-island uid="1pcTCA" prefix="r3" component-url="/_astro/Navigation.ElaEfQ9R.js" component-export="Navigation" renderer-url="/_astro/client.BQCS8AJJ.js" props="{&quot;title&quot;:[0,&quot;The Cloudflare Blog&quot;],&quot;logo&quot;:[0,&quot;//images.ctfassets.net/zkvhlag99gkb/69RwBidpiEHCDZ9rFVVk7T/092507edbed698420b89658e5a6d5105/CF_logo_stacked_blktype.png&quot;],&quot;pagesStore&quot;:[0,{&quot;page&quot;:[0,&quot;Post&quot;],&quot;slug&quot;:[0,&quot;upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers&quot;],&quot;translationsAvailable&quot;:[1,[]],&quot;navData&quot;:[1,[[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;6QktrXeEFcl4e2dZUTZVGl&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T19:43:20.198Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:31:56.525Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,5],&quot;revision&quot;:[0,3],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;Product News&quot;],&quot;name&quot;:[0,&quot;Product News&quot;],&quot;slug&quot;:[0,&quot;product-news&quot;],&quot;featured&quot;:[0,true]}]}],[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;48r7QV00gLMWOIcM1CSDRy&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T19:54:22.790Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:30:18.450Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,9],&quot;revision&quot;:[0,5],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;Speed &amp; Reliability&quot;],&quot;name&quot;:[0,&quot;Speed &amp; Reliability&quot;],&quot;slug&quot;:[0,&quot;speed-and-reliability&quot;],&quot;featured&quot;:[0,true]}]}],[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;6Mp7ouACN2rT3YjL1xaXJx&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T19:42:46.231Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:27:43.433Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,7],&quot;revision&quot;:[0,4],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;Security&quot;],&quot;name&quot;:[0,&quot;Security&quot;],&quot;slug&quot;:[0,&quot;security&quot;],&quot;featured&quot;:[0,true]}]}],[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;J61Eszqn98amrYHq4IhTx&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T19:43:46.068Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:24:27.531Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,11],&quot;revision&quot;:[0,6],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;Zero Trust&quot;],&quot;name&quot;:[0,&quot;Zero Trust&quot;],&quot;slug&quot;:[0,&quot;zero-trust&quot;],&quot;featured&quot;:[0,true]}]}],[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;4HIPcb68qM0e26fIxyfzwQ&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T19:43:21.536Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:19:10.215Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,9],&quot;revision&quot;:[0,5],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;Developers&quot;],&quot;name&quot;:[0,&quot;Developers&quot;],&quot;slug&quot;:[0,&quot;developers&quot;],&quot;featured&quot;:[0,true]}]}],[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;6Foe3R8of95cWVnQwe5Toi&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T22:44:28.803Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:14:33.876Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,13],&quot;revision&quot;:[0,7],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;AI&quot;],&quot;name&quot;:[0,&quot;AI&quot;],&quot;slug&quot;:[0,&quot;ai&quot;],&quot;featured&quot;:[0,true]}]}],[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;7ibnRrkJ2kfMuo3JOo0Y69&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T19:47:23.765Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:12:33.734Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,5],&quot;revision&quot;:[0,3],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;Policy&quot;],&quot;name&quot;:[0,&quot;Policy&quot;],&quot;slug&quot;:[0,&quot;policy&quot;],&quot;featured&quot;:[0,true]}]}],[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;V86khSc459Yi1AhTlvtY7&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T19:46:53.657Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:08:03.099Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,10],&quot;revision&quot;:[0,5],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;Partners&quot;],&quot;name&quot;:[0,&quot;Partners&quot;],&quot;slug&quot;:[0,&quot;partners&quot;],&quot;featured&quot;:[0,true]}]}],[0,{&quot;metadata&quot;:[0,{&quot;tags&quot;:[1,[]],&quot;concepts&quot;:[1,[]]}],&quot;sys&quot;:[0,{&quot;space&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Space&quot;],&quot;id&quot;:[0,&quot;zkvhlag99gkb&quot;]}]}],&quot;id&quot;:[0,&quot;4g8tPriKOAUwdUT4jNPebe&quot;],&quot;type&quot;:[0,&quot;Entry&quot;],&quot;createdAt&quot;:[0,&quot;2024-10-09T19:46:40.927Z&quot;],&quot;updatedAt&quot;:[0,&quot;2024-10-10T07:05:21.343Z&quot;],&quot;environment&quot;:[0,{&quot;sys&quot;:[0,{&quot;id&quot;:[0,&quot;master&quot;],&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;Environment&quot;]}]}],&quot;publishedVersion&quot;:[0,9],&quot;revision&quot;:[0,5],&quot;contentType&quot;:[0,{&quot;sys&quot;:[0,{&quot;type&quot;:[0,&quot;Link&quot;],&quot;linkType&quot;:[0,&quot;ContentType&quot;],&quot;id&quot;:[0,&quot;blogTag&quot;]}]}],&quot;locale&quot;:[0,&quot;en-US&quot;]}],&quot;fields&quot;:[0,{&quot;entryTitle&quot;:[0,&quot;Life at Cloudflare&quot;],&quot;name&quot;:[0,&quot;Life at Cloudflare&quot;],&quot;slug&quot;:[0,&quot;life-at-cloudflare&quot;],&quot;featured&quot;:[0,true]}]}]]]}],&quot;locale&quot;:[0,&quot;en-us&quot;],&quot;translations&quot;:[0,{&quot;posts.by&quot;:[0,&quot;By&quot;],&quot;footer.gdpr&quot;:[0,&quot;GDPR&quot;],&quot;lang_blurb1&quot;:[0,&quot;This post is also available in {lang1}.&quot;],&quot;lang_blurb2&quot;:[0,&quot;This post is also available in {lang1} and {lang2}.&quot;],&quot;lang_blurb3&quot;:[0,&quot;This post is also available in {lang1}, {lang2} and {lang3}.&quot;],&quot;footer.press&quot;:[0,&quot;Press&quot;],&quot;header.title&quot;:[0,&quot;The Cloudflare Blog&quot;],&quot;search.clear&quot;:[0,&quot;Clear&quot;],&quot;search.filter&quot;:[0,&quot;Filter&quot;],&quot;search.source&quot;:[0,&quot;Source&quot;],&quot;footer.careers&quot;:[0,&quot;Careers&quot;],&quot;footer.company&quot;:[0,&quot;Company&quot;],&quot;footer.support&quot;:[0,&quot;Support&quot;],&quot;footer.the_net&quot;:[0,&quot;theNet&quot;],&quot;search.filters&quot;:[0,&quot;Filters&quot;],&quot;footer.our_team&quot;:[0,&quot;Our team&quot;],&quot;footer.webinars&quot;:[0,&quot;Webinars&quot;],&quot;page.more_posts&quot;:[0,&quot;More posts&quot;],&quot;posts.time_read&quot;:[0,&quot;{time} min read&quot;],&quot;search.language&quot;:[0,&quot;Language&quot;],&quot;footer.community&quot;:[0,&quot;Community&quot;],&quot;footer.resources&quot;:[0,&quot;Resources&quot;],&quot;footer.solutions&quot;:[0,&quot;Solutions&quot;],&quot;footer.trademark&quot;:[0,&quot;Trademark&quot;],&quot;header.subscribe&quot;:[0,&quot;Subscribe&quot;],&quot;footer.compliance&quot;:[0,&quot;Compliance&quot;],&quot;footer.free_plans&quot;:[0,&quot;Free plans&quot;],&quot;footer.impact_ESG&quot;:[0,&quot;Impact/ESG&quot;],&quot;posts.follow_on_X&quot;:[0,&quot;Follow on X&quot;],&quot;footer.help_center&quot;:[0,&quot;Help center&quot;],&quot;footer.network_map&quot;:[0,&quot;Network Map&quot;],&quot;header.please_wait&quot;:[0,&quot;Please Wait&quot;],&quot;page.related_posts&quot;:[0,&quot;Related posts&quot;],&quot;search.result_stat&quot;:[0,&quot;Results &lt;strong&gt;{search_range}&lt;/strong&gt; of &lt;strong&gt;{search_total}&lt;/strong&gt; for &lt;strong&gt;{search_keyword}&lt;/strong&gt;&quot;],&quot;footer.case_studies&quot;:[0,&quot;Case Studies&quot;],&quot;footer.connect_2024&quot;:[0,&quot;Connect 2024&quot;],&quot;footer.terms_of_use&quot;:[0,&quot;Terms of Use&quot;],&quot;footer.white_papers&quot;:[0,&quot;White Papers&quot;],&quot;footer.cloudflare_tv&quot;:[0,&quot;Cloudflare TV&quot;],&quot;footer.community_hub&quot;:[0,&quot;Community Hub&quot;],&quot;footer.compare_plans&quot;:[0,&quot;Compare plans&quot;],&quot;footer.contact_sales&quot;:[0,&quot;Contact Sales&quot;],&quot;header.contact_sales&quot;:[0,&quot;Contact Sales&quot;],&quot;header.email_address&quot;:[0,&quot;Email Address&quot;],&quot;page.error.not_found&quot;:[0,&quot;Page not found&quot;],&quot;footer.developer_docs&quot;:[0,&quot;Developer docs&quot;],&quot;footer.privacy_policy&quot;:[0,&quot;Privacy Policy&quot;],&quot;footer.request_a_demo&quot;:[0,&quot;Request a demo&quot;],&quot;page.continue_reading&quot;:[0,&quot;Continue reading&quot;],&quot;footer.analysts_report&quot;:[0,&quot;Analyst reports&quot;],&quot;footer.for_enterprises&quot;:[0,&quot;For enterprises&quot;],&quot;footer.getting_started&quot;:[0,&quot;Getting Started&quot;],&quot;footer.learning_center&quot;:[0,&quot;Learning Center&quot;],&quot;footer.project_galileo&quot;:[0,&quot;Project Galileo&quot;],&quot;pagination.newer_posts&quot;:[0,&quot;Newer Posts&quot;],&quot;pagination.older_posts&quot;:[0,&quot;Older Posts&quot;],&quot;posts.social_buttons.x&quot;:[0,&quot;Discuss on X&quot;],&quot;search.source_location&quot;:[0,&quot;Source/Location&quot;],&quot;footer.about_cloudflare&quot;:[0,&quot;About Cloudflare&quot;],&quot;footer.athenian_project&quot;:[0,&quot;Athenian Project&quot;],&quot;footer.become_a_partner&quot;:[0,&quot;Become a partner&quot;],&quot;footer.cloudflare_radar&quot;:[0,&quot;Cloudflare Radar&quot;],&quot;footer.network_services&quot;:[0,&quot;Network services&quot;],&quot;footer.trust_and_safety&quot;:[0,&quot;Trust &amp; Safety&quot;],&quot;header.get_started_free&quot;:[0,&quot;Get Started Free&quot;],&quot;page.search.placeholder&quot;:[0,&quot;Search Cloudflare&quot;],&quot;footer.cloudflare_status&quot;:[0,&quot;Cloudflare Status&quot;],&quot;footer.cookie_preference&quot;:[0,&quot;Cookie Preferences&quot;],&quot;header.valid_email_error&quot;:[0,&quot;Must be valid email.&quot;],&quot;footer.connectivity_cloud&quot;:[0,&quot;Connectivity cloud&quot;],&quot;footer.developer_services&quot;:[0,&quot;Developer services&quot;],&quot;footer.investor_relations&quot;:[0,&quot;Investor relations&quot;],&quot;page.not_found.error_code&quot;:[0,&quot;Error Code: 404&quot;],&quot;footer.logos_and_press_kit&quot;:[0,&quot;Logos &amp; press kit&quot;],&quot;footer.application_services&quot;:[0,&quot;Application services&quot;],&quot;footer.get_a_recommendation&quot;:[0,&quot;Get a recommendation&quot;],&quot;posts.social_buttons.reddit&quot;:[0,&quot;Discuss on Reddit&quot;],&quot;footer.sse_and_sase_services&quot;:[0,&quot;SSE and SASE services&quot;],&quot;page.not_found.outdated_link&quot;:[0,&quot;You may have used an outdated link, or you may have typed the address incorrectly.&quot;],&quot;footer.report_security_issues&quot;:[0,&quot;Report Security Issues&quot;],&quot;page.error.error_message_page&quot;:[0,&quot;Sorry, we can&#39;t find the page you are looking for.&quot;],&quot;header.subscribe_notifications&quot;:[0,&quot;Subscribe to receive notifications of new posts:&quot;],&quot;footer.cloudflare_for_campaigns&quot;:[0,&quot;Cloudflare for Campaigns&quot;],&quot;header.subscription_confimation&quot;:[0,&quot;Subscription confirmed. Thank you for subscribing!&quot;],&quot;posts.social_buttons.hackernews&quot;:[0,&quot;Discuss on Hacker News&quot;],&quot;footer.diversity_equity_inclusion&quot;:[0,&quot;Diversity, equity &amp; inclusion&quot;],&quot;footer.critical_infrastructure_defense_project&quot;:[0,&quot;Critical Infrastructure Defense Project&quot;]}]}" ssr="" client="idle" opts="{&quot;name&quot;:&quot;NavigationComponent&quot;,&quot;value&quot;:true}" await-children=""><header class="flex flex-row flex-wrap justify-between items-flex-end mw8 center mv3 pl3 pr1"><div class="w-100 flex items-flex-end justify-between justify-start-l"><div class="w-100 tr flex justify-end"><div class="flex justify-between items-center"><span class="dn di-l pr1"><a href="https://dash.cloudflare.com/sign-up" class="f1 blue1 dn di-l b no-underline underline-hover" target="_blank" rel="noreferrer">Get Started Free</a></span><span class="f1 gray4 dn di-l pr1">|</span><span class="dn di-l"><a target="_blank" href="https://www.cloudflare.com/plans/enterprise/contact/" class="f1 gray4 no-underline underline-hover pr1" rel="noreferrer">Contact Sales</a></span></div></div></div><div class="w-100 w-50-l flex items-end nb5 nb1-l"><a href="/" class="header-logo mr4 dn db-l"><img class="header-logo" src="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/69RwBidpiEHCDZ9rFVVk7T/092507edbed698420b89658e5a6d5105/CF_logo_stacked_blktype.png" alt="The Cloudflare Blog" width="170" height="57"/></a><h2 class="mt0 mb1 dn di-l"><a href="/" class="fw5 f5 gray3 no-underline"><span class="dn di-l">The Cloudflare Blog</span></a></h2></div><div class="w-100 w-50-l dn db-l"><div class="w-100 tr mkto-sub-message"><p class="f2">Subscribe to receive notifications of new posts:</p></div><div class="w-100 tr"><div class="marketo-form-container"><form id="mktoForm_1653"><div class="top-subscribe-form-container"><div class="top-subscribe-form-field"><input placeholder="Email Address" class="top-subscribe-form-input" name="email" type="email" title="Must be valid email."/></div><button class="top-subscribe-form-button" type="button">Subscribe</button></div></form></div></div></div></header><nav dir="ltr" class="bb b--black-10 db dn-l w-100 ph3 "><div class=" flex justify-between items-center" style="height:44px"><a href="/search"><img class="h-6 w-6" src="/images/magnifier.svg" alt="magnifier icon"/></a><button type="button" style="background:transparent;border:none"><img src="/images/hamburger.svg" alt="hamburger menu"/></button></div><div class="js-mobile-nav-container dn"><div class="flex flex-column flex-wrap bg-gray9 o-95 absolute w-90 ph3 z-1"><div class="pv3 ph2 tl"><a href="/tag/product-news" class="no-underline gray1 f4 fw7">Product News</a></div><div class="pv3 ph2 tl"><a href="/tag/speed-and-reliability" class="no-underline gray1 f4 fw7">Speed &amp; Reliability</a></div><div class="pv3 ph2 tl"><a href="/tag/security" class="no-underline gray1 f4 fw7">Security</a></div><div class="pv3 ph2 tl"><a href="/tag/zero-trust" class="no-underline gray1 f4 fw7">Zero Trust</a></div><div class="pv3 ph2 tl"><a href="/tag/developers" class="no-underline gray1 f4 fw7">Developers</a></div><div class="pv3 ph2 tl"><a href="/tag/ai" class="no-underline gray1 f4 fw7">AI</a></div><div class="pv3 ph2 tl"><a href="/tag/policy" class="no-underline gray1 f4 fw7">Policy</a></div><div class="pv3 ph2 tl"><a href="/tag/partners" class="no-underline gray1 f4 fw7">Partners</a></div><div class="pv3 ph2 tl"><a href="/tag/life-at-cloudflare" class="no-underline gray1 f4 fw7">Life at Cloudflare</a></div></div></div></nav><nav id="nav" class="w-100 bb-0 bb-l b--black-10 z-1"><div id="desktop-nav-items-container" class="flex flex-wrap justify-between items-center mw8 center mv3 mv0-l"><div data-tag="product-news" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/product-news" class="no-underline gray1 f2 fw5 pv3">Product News</a></div><div data-tag="speed-and-reliability" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/speed-and-reliability" class="no-underline gray1 f2 fw5 pv3">Speed &amp; Reliability</a></div><div data-tag="security" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/security" class="no-underline gray1 f2 fw5 pv3">Security</a></div><div data-tag="zero-trust" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/zero-trust" class="no-underline gray1 f2 fw5 pv3">Zero Trust</a></div><div data-tag="developers" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/developers" class="no-underline gray1 f2 fw5 pv3">Developers</a></div><div data-tag="ai" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/ai" class="no-underline gray1 f2 fw5 pv3">AI</a></div><div data-tag="policy" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/policy" class="no-underline gray1 f2 fw5 pv3">Policy</a></div><div data-tag="partners" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/partners" class="no-underline gray1 f2 fw5 pv3">Partners</a></div><div data-tag="life-at-cloudflare" class="nav-item nav-item-desktop ml3 mr2 dn db-l pv3"><a href="/tag/life-at-cloudflare" class="no-underline gray1 f2 fw5 pv3">Life at Cloudflare</a></div><div class="nav-item ml2 mr3 dn db-l pv3" data-tag="search icon"><a href="/search/"><img id="search-icon" class="h-6 w-6" src="/images/magnifier.svg" alt="magnifier icon"/></a></div></div></nav><!--astro:end--></astro-island><progress class="reading-progress" value="0" max="100" aria-label="Reading progress"></progress><script>(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).load=e;window.dispatchEvent(new Event("astro:load"));})();</script><astro-island uid="rtTVC" prefix="r1" component-url="/_astro/Post.CntyhspV.js" component-export="Post" renderer-url="/_astro/client.BQCS8AJJ.js" props="{&quot;post&quot;:[0,{&quot;id&quot;:[0,&quot;m2vQRUxG0AW4dcsV1vanp&quot;],&quot;title&quot;:[0,&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers&quot;],&quot;slug&quot;:[0,&quot;upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers&quot;],&quot;excerpt&quot;:[0,&quot;Letâs Encryptâs cross-signed chain will be expiring in September. To prepare for the change, after May 15th, 2024, Cloudflare will start issuing certs from Letâs Encryptâs ISRG X1 chain. This change will impact legacy devices with outdated trust stores (Android versions 7.1.1 or older)&quot;],&quot;featured&quot;:[0,false],&quot;html&quot;:[0,&quot;\n            &lt;figure class=\&quot;kg-card kg-image-card \&quot;&gt;\n            \n            &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4nIzJL4s3S6cuVYueIA32E/a7e5d198da5e722e6a8c7b7e04c8cf13/Security-Week---Backup-Certs--1-.png\&quot; alt=\&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers\&quot; class=\&quot;kg-image\&quot; width=\&quot;1201\&quot; height=\&quot;675\&quot; loading=\&quot;lazy\&quot;/&gt;\n            \n            &lt;/figure&gt;&lt;p&gt;Letâs Encrypt, a publicly trusted certificate authority (CA) that Cloudflare uses to issue TLS certificates, has been relying on two distinct certificate chains. One is cross-signed with IdenTrust, a globally trusted CA that has been around since 2000, and the other is Letâs Encryptâs own root CA, ISRG Root X1. Since Letâs Encrypt launched, ISRG Root X1 has been steadily gaining its own device compatibility.&lt;/p&gt;&lt;p&gt;On September 30, 2024, Letâs Encryptâs certificate chain cross-signed with IdenTrust will &lt;a href=\&quot;https://letsencrypt.org/2023/07/10/cross-sign-expiration.html\&quot;&gt;expire&lt;/a&gt;. To proactively prepare for this change, on May 15, 2024, Cloudflare will stop issuing certificates from the cross-signed chain and will instead use Letâs Encryptâs ISRG Root X1 chain for all future Letâs Encrypt certificates.&lt;/p&gt;&lt;p&gt;The change in the certificate chain will impact legacy devices and systems, such as Android devices version 7.1.1 or older, as those exclusively rely on the cross-signed chain and lack the ISRG X1 root in their trust store. These clients may encounter TLS errors or warnings when accessing domains secured by a Letâs Encrypt certificate.&lt;/p&gt;&lt;p&gt;According to Letâs Encrypt, more than 93.9% of Android devices already trust the ISRG Root X1 and this number is expected to increase in 2024, especially as Android releases version 14, which makes the Android trust store easily and automatically upgradable.&lt;/p&gt;&lt;p&gt;We took a look at the data ourselves and found that, from all Android requests, 2.96% of them come from devices that will be affected by the change. In addition, only 1.13% of all requests from Firefox come from affected versions, which means that most (98.87%) of the requests coming from Android versions that are using Firefox will not be impacted.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;preparing-for-the-change\&quot;&gt;Preparing for the change&lt;/h3&gt;\n            &lt;a href=\&quot;#preparing-for-the-change\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;If youâre worried about the change impacting your clients, there are a few things that you can do to reduce the impact of the change. If you control the clients that are connecting to your application, we recommend updating the trust store to include the &lt;a href=\&quot;https://letsencrypt.org/certificates/#root-certificates\&quot;&gt;ISRG Root X1&lt;/a&gt;. If you use certificate pinning, remove or update your pin. In general, we discourage all customers from pinning their certificates, as this usually leads to issues during certificate renewals or CA changes.&lt;/p&gt;&lt;p&gt;If you experience issues with the Letâs Encrypt chain change, and youâre using &lt;a href=\&quot;https://developers.cloudflare.com/ssl/edge-certificates/advanced-certificate-manager/\&quot;&gt;Advanced Certificate Manager&lt;/a&gt; or &lt;a href=\&quot;https://developers.cloudflare.com/cloudflare-for-platforms/cloudflare-for-saas/security/certificate-management/\&quot;&gt;SSL for SaaS&lt;/a&gt; on the Enterprise plan, you can choose to switch your certificate to use Google Trust Services as the certificate authority instead.&lt;/p&gt;&lt;p&gt;For more information, please refer to our &lt;a href=\&quot;https://developers.cloudflare.com/ssl/reference/migration-guides/lets-encrypt-chain/\&quot;&gt;developer documentation&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;While this change will impact a very small portion of clients, we support the shift that Letâs Encrypt is making as it supports a more secure and agile Internet.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;embracing-change-to-move-towards-a-better-internet\&quot;&gt;Embracing change to move towards a better Internet&lt;/h3&gt;\n            &lt;a href=\&quot;#embracing-change-to-move-towards-a-better-internet\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;Looking back, there were a number of challenges that slowed down the adoption of new technologies and standards that helped make the Internet faster, more secure, and more reliable.&lt;/p&gt;&lt;p&gt;For starters, before Cloudflare &lt;a href=\&quot;/introducing-universal-ssl\&quot;&gt;launched Universal SSL&lt;/a&gt;, free certificates were not attainable. Instead, domain owners had to pay around $100 to get a TLS certificate. For a small business, this is a big cost and without browsers enforcing &lt;a href=\&quot;https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/\&quot;&gt;TLS&lt;/a&gt;, this significantly hindered TLS adoption for years. Insecure algorithms have taken decades to deprecate due to lack of support of new algorithms in browsers or devices. We learned this lesson while &lt;a href=\&quot;/sha-1-deprecation-no-browser-left-behind/\&quot;&gt;deprecating SHA-1&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Supporting new security standards and protocols is vital for us to continue improving the Internet. Over the years, big and sometimes risky changes were made in order for us to move forward. The launch of Letâs Encrypt in 2015 was monumental. Letâs Encrypt allowed every domain to get a TLS certificate for free, which paved the way to a more secure Internet, with now &lt;a href=\&quot;https://radar.cloudflare.com/adoption-and-usage#http-vs-https\&quot;&gt;around 98%&lt;/a&gt; of traffic using &lt;a href=\&quot;https://www.cloudflare.com/learning/ssl/what-is-https/\&quot;&gt;HTTPS&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;In 2014, Cloudflare launched elliptic curve digital signature algorithm (&lt;a href=\&quot;/ecdsa-the-digital-signature-algorithm-of-a-better-internet\&quot;&gt;ECDSA&lt;/a&gt;) support for Cloudflare-issued certificates and made the decision to issue ECDSA-only certificates to free customers. This boosted ECDSA adoption by pressing clients and web operators to make changes to support the &lt;a href=\&quot;https://www.cloudflare.com/dns/dnssec/ecdsa-and-dnssec/\&quot;&gt;new algorithm&lt;/a&gt;, which provided the same (if not better) security as RSA while also improving performance. In addition to that, modern browsers and operating systems are now being built in a way that allows them to constantly support new standards, so that they can deprecate old ones.&lt;/p&gt;&lt;p&gt;For us to move forward in supporting new standards and protocols, we need to make the Public Key Infrastructure (PKI) ecosystem more agile. By retiring the cross-signed chain, Letâs Encrypt is pushing devices, browsers, and clients to support adaptable trust stores. This allows clients to support new standards without causing a breaking change. It also lays the groundwork for new certificate authorities to emerge.&lt;/p&gt;&lt;p&gt;Today, one of the main reasons why thereâs a limited number of CAs available is that it takes years for them to become widely trusted, that is, without cross-signing with another CA. In 2017, Google launched a new publicly trusted CA, &lt;a href=\&quot;https://pki.goog/\&quot;&gt;Google Trust Services&lt;/a&gt;, that issued free TLS certificates. Even though they launched a few years after Letâs Encrypt, they faced the same challenges with device compatibility and adoption, which caused them to cross-sign with GlobalSignâs CA. We hope that, by the time GlobalSignâs CA comes up for expiration, almost all traffic is coming from a modern client and browser, meaning the change impact should be minimal.&lt;/p&gt;&quot;],&quot;published_at&quot;:[0,&quot;2024-03-14T14:00:23.000+00:00&quot;],&quot;updated_at&quot;:[0,&quot;2024-10-10T00:22:14.718Z&quot;],&quot;feature_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3umxj7gwKbeYTbABVLOLYT/e2504da118b56c5ce0f6ecbc20d73492/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers.png&quot;],&quot;tags&quot;:[1,[[0,{&quot;id&quot;:[0,&quot;6Mp7ouACN2rT3YjL1xaXJx&quot;],&quot;name&quot;:[0,&quot;Security&quot;],&quot;slug&quot;:[0,&quot;security&quot;]}],[0,{&quot;id&quot;:[0,&quot;4HIPcb68qM0e26fIxyfzwQ&quot;],&quot;name&quot;:[0,&quot;Developers&quot;],&quot;slug&quot;:[0,&quot;developers&quot;]}],[0,{&quot;id&quot;:[0,&quot;3JAY3z7p7An94s6ScuSQPf&quot;],&quot;name&quot;:[0,&quot;Developer Platform&quot;],&quot;slug&quot;:[0,&quot;developer-platform&quot;]}],[0,{&quot;id&quot;:[0,&quot;1HblPaFreDjetoJDJPjTAi&quot;],&quot;name&quot;:[0,&quot;SSL&quot;],&quot;slug&quot;:[0,&quot;ssl&quot;]}],[0,{&quot;id&quot;:[0,&quot;56vA0Z6hqev6QaJBQmO2J8&quot;],&quot;name&quot;:[0,&quot;TLS&quot;],&quot;slug&quot;:[0,&quot;tls&quot;]}],[0,{&quot;id&quot;:[0,&quot;urEf9QllkDeGxTu3ysdlo&quot;],&quot;name&quot;:[0,&quot;Application Security&quot;],&quot;slug&quot;:[0,&quot;application-security&quot;]}]]],&quot;relatedTags&quot;:[0],&quot;authors&quot;:[1,[[0,{&quot;name&quot;:[0,&quot;Dina Kozlov&quot;],&quot;slug&quot;:[0,&quot;dina&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/bY78cK0burCjZbD6jOgAH/a8479b5ea6dd8fb3acb41227c1a4ad0e/dina.jpg&quot;],&quot;location&quot;:[0,null],&quot;website&quot;:[0,null],&quot;twitter&quot;:[0,&quot;@dinasaur_404&quot;],&quot;facebook&quot;:[0,null]}]]],&quot;meta_description&quot;:[0,null],&quot;primary_author&quot;:[0,{}],&quot;localeList&quot;:[0,{&quot;name&quot;:[0,&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers Config&quot;],&quot;enUS&quot;:[0,&quot;English for Locale&quot;],&quot;zhCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhHansCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhTW&quot;:[0,&quot;No Page for Locale&quot;],&quot;frFR&quot;:[0,&quot;No Page for Locale&quot;],&quot;deDE&quot;:[0,&quot;No Page for Locale&quot;],&quot;itIT&quot;:[0,&quot;No Page for Locale&quot;],&quot;jaJP&quot;:[0,&quot;No Page for Locale&quot;],&quot;koKR&quot;:[0,&quot;No Page for Locale&quot;],&quot;ptBR&quot;:[0,&quot;No Page for Locale&quot;],&quot;esLA&quot;:[0,&quot;No Page for Locale&quot;],&quot;esES&quot;:[0,&quot;No Page for Locale&quot;],&quot;enAU&quot;:[0,&quot;No Page for Locale&quot;],&quot;enCA&quot;:[0,&quot;No Page for Locale&quot;],&quot;enIN&quot;:[0,&quot;No Page for Locale&quot;],&quot;enGB&quot;:[0,&quot;No Page for Locale&quot;],&quot;idID&quot;:[0,&quot;No Page for Locale&quot;],&quot;ruRU&quot;:[0,&quot;No Page for Locale&quot;],&quot;svSE&quot;:[0,&quot;No Page for Locale&quot;],&quot;viVN&quot;:[0,&quot;No Page for Locale&quot;],&quot;plPL&quot;:[0,&quot;No Page for Locale&quot;],&quot;arAR&quot;:[0,&quot;No Page for Locale&quot;],&quot;nlNL&quot;:[0,&quot;No Page for Locale&quot;],&quot;thTH&quot;:[0,&quot;No Page for Locale&quot;],&quot;trTR&quot;:[0,&quot;No Page for Locale&quot;],&quot;heIL&quot;:[0,&quot;No Page for Locale&quot;],&quot;lvLV&quot;:[0,&quot;No Page for Locale&quot;],&quot;etEE&quot;:[0,&quot;No Page for Locale&quot;],&quot;ltLT&quot;:[0,&quot;No Page for Locale&quot;]}],&quot;url&quot;:[0,&quot;https://blog.cloudflare.com/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers&quot;],&quot;metadata&quot;:[0,{&quot;title&quot;:[0,&quot;Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers&quot;],&quot;description&quot;:[0,null],&quot;imgPreview&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6C6Fo0ShHaENE5h2igEiqo/9dd17dbc0d41eb30d64eba65721cae61/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers-7mAYMv.png&quot;]}]}],&quot;initialReadingTime&quot;:[0,&quot;3&quot;],&quot;relatedPosts&quot;:[1,[[0,{&quot;id&quot;:[0,&quot;3mOPXbiTgeQHBChx4vUuMs&quot;],&quot;title&quot;:[0,&quot;A look at the latest post-quantum signature standardization candidates&quot;],&quot;slug&quot;:[0,&quot;another-look-at-pq-signatures&quot;],&quot;excerpt&quot;:[0,&quot;NIST has standardized four post-quantum signature schemes so far, and theyâre not done yet: there are fourteen new candidates in the running for standardization. In this blog post we take measure of them and discover why we ended up with so many PQ signatures.&quot;],&quot;featured&quot;:[0,false],&quot;html&quot;:[0,&quot;&lt;p&gt;On October 24, 2024, the National Institute of Standards and Technology (NIST) &lt;a href=\&quot;https://groups.google.com/a/list.nist.gov/g/pqc-forum/c/khAfIZPktRE/m/bBZWmET-AAAJ\&quot;&gt;&lt;u&gt;announced&lt;/u&gt;&lt;/a&gt; that theyâre advancing fourteen post-quantum signature schemes to the second round of the â&lt;a href=\&quot;https://csrc.nist.gov/projects/pqc-dig-sig\&quot;&gt;&lt;u&gt;signatures on ramp&lt;/u&gt;&lt;/a&gt;â competition. âPost-quantumâ means that these algorithms are designed to resist &lt;a href=\&quot;https://blog.cloudflare.com/the-quantum-menace/\&quot;&gt;&lt;u&gt;the attack of quantum computers&lt;/u&gt;&lt;/a&gt;. NIST already standardized four post-quantum signature schemes (&lt;a href=\&quot;https://blog.cloudflare.com/nists-first-post-quantum-standards/\&quot;&gt;&lt;u&gt;ML-DSA, SLH-DSA&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://csrc.nist.gov/News/2020/stateful-hash-based-signature-schemes-sp-800-208\&quot;&gt;&lt;u&gt;XMSS, and LHS&lt;/u&gt;&lt;/a&gt;) and they are drafting a standard for a fifth (&lt;a href=\&quot;https://falcon-sign.info/\&quot;&gt;&lt;u&gt;Falcon&lt;/u&gt;&lt;/a&gt;). Why do we need even more, you might ask? Weâll get to that.&lt;/p&gt;&lt;p&gt;A regular reader of the blog will know that this is not the first time weâve taken measure of post-quantum signatures. In &lt;a href=\&quot;https://blog.cloudflare.com/sizing-up-post-quantum-signatures/\&quot;&gt;&lt;u&gt;2021&lt;/u&gt;&lt;/a&gt; we took a first hard look, and reported on the performance impact we expect from large-scale measurements.Â  Since then, dozens of new post-quantum algorithms have been proposed. Many of them have been submitted to this new NIST competition. We discussed some of the more promising ones in our &lt;a href=\&quot;https://blog.cloudflare.com/pq-2024/\&quot;&gt;&lt;u&gt;early 2024 blog post&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;In this blog post, we will go over the fourteen schemes advanced to the second round of the on ramp and discuss their feasibility for use in TLS â the protocol that secures browsing the Internet. The defining feature of practically all of them, is that they require much more bytes on the wire. Back in 2021 we shared &lt;a href=\&quot;https://blog.cloudflare.com/sizing-up-post-quantum-signatures/\&quot;&gt;&lt;u&gt;experimental results&lt;/u&gt;&lt;/a&gt; on the impact of these extra bytes. Today, we will share some surprising statistics on how TLS is used in practice. One is that today already almost half the data sent over more than half the QUIC connections are just for the certificates.&lt;/p&gt;&lt;p&gt;For a broader context and introduction to the post-quantum migration, check out our &lt;a href=\&quot;https://blog.cloudflare.com/pq-2024\&quot;&gt;&lt;u&gt;early 2024 blog post&lt;/u&gt;&lt;/a&gt;. One take-away to mention here: there will be two migrations for TLS. First, we urgently need to migrate key agreement to post-quantum cryptography to protect against &lt;a href=\&quot;https://en.wikipedia.org/wiki/Harvest_now,_decrypt_later\&quot;&gt;&lt;u&gt;attackers that store encrypted communication today&lt;/u&gt;&lt;/a&gt; in order to decrypt it in the future when a quantum computer is available. The industry is making good progress here: &lt;a href=\&quot;https://radar.cloudflare.com/adoption-and-usage#post-quantum-encryption-adoption\&quot;&gt;&lt;u&gt;18% of human requests&lt;/u&gt;&lt;/a&gt; to websites using Cloudflare are &lt;a href=\&quot;https://blog.cloudflare.com/post-quantum-for-all/\&quot;&gt;&lt;u&gt;secured&lt;/u&gt;&lt;/a&gt; using post-quantum key agreement. The second migration, to post-quantum signatures (certificates), is not as urgent: we will need to have this sorted by the time the quantum computer arrives. However, it will be a bigger challenge.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;the-signatures-in-tls\&quot;&gt;The signatures in TLS&lt;/h2&gt;\n            &lt;a href=\&quot;#the-signatures-in-tls\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Before we have a look at the long list of post-quantum signature algorithms and their performance characteristics, letâs go through the signatures involved when browsing the Internet and their particular constraints.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/415VcZzABkhZjT60GRkQZM/f30ae24bd14e86534efd3e74d15eb5b5/image3.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1164\&quot; height=\&quot;1268\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;When you visit a website, the browser establishes a TLS connection with the server for that website. The connection starts with a cryptographic handshake. During this handshake, to authenticate the connection, the server signs the transcript so far, and presents the browser with a TLS &lt;i&gt;leaf&lt;/i&gt; certificate to prove that itâs allowed to serve the website. This &lt;i&gt;leaf &lt;/i&gt;certificate is signed by a certification authority (CA). Typically, itâs not signed by the CAâs &lt;i&gt;root&lt;/i&gt; certificate, but by an &lt;i&gt;intermediate&lt;/i&gt; CA certificate, which in turn is signed by the root CA, or another intermediate. Thatâs not all: a leaf certificate has to include at least two &lt;i&gt;signed certificate timestamps&lt;/i&gt; (SCTs). These SCTs are signatures created by &lt;a href=\&quot;https://blog.cloudflare.com/introducing-certificate-transparency-and-nimbus/\&quot;&gt;&lt;u&gt;certificate transparency (CT) logs&lt;/u&gt;&lt;/a&gt; to attest theyâve been publicly logged. &lt;a href=\&quot;https://certificate.transparency.dev/howctworks/\&quot;&gt;&lt;u&gt;Certificate Transparency&lt;/u&gt;&lt;/a&gt; is what enables you to look up a certificate on websites such &lt;a href=\&quot;http://crt.sh\&quot;&gt;&lt;u&gt;crt.sh&lt;/u&gt;&lt;/a&gt; and &lt;a href=\&quot;https://www.merklemap.com/\&quot;&gt;&lt;u&gt;merklemap&lt;/u&gt;&lt;/a&gt;. In the future three or more SCTs might be required. Finally, servers may also send an &lt;a href=\&quot;https://blog.cloudflare.com/high-reliability-ocsp-stapling/\&quot;&gt;&lt;u&gt;OCSP staple&lt;/u&gt;&lt;/a&gt; to demonstrate a certificate hasnât been revoked.&lt;/p&gt;&lt;p&gt;Thus, weâre looking at a minimum of five signatures (not counting the OCSP staple) and two public keys transmitted across the network to establish a new TLS connection.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;tailoring\&quot;&gt;Tailoring&lt;/h3&gt;\n            &lt;a href=\&quot;#tailoring\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;Only the handshake transcript signature is created &lt;i&gt;online&lt;/i&gt;; the other signatures are âofflineâ. That is, they are created ahead of time. For these offline signatures, fast verification is much more important than fast signing. On the other hand, for the handshake signature, we want to minimize the sum of signing and verification time.&lt;/p&gt;&lt;p&gt;Only the public keys of the leaf and intermediate certificates are transmitted on the wire during the handshake, and for those we want to minimize the combined size of the signature and the public key. For the other signatures, the public key is not transmitted during the handshake, and thus a scheme with larger public keys would be tolerable, and preferable if it trades larger public keys for smaller signatures.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;the-algorithms\&quot;&gt;The algorithms&lt;/h2&gt;\n            &lt;a href=\&quot;#the-algorithms\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Now that weâre up to speed, letâs have a look at the candidates that progressed (marked by ð¤ below), compared to the classical algorithms vulnerable to quantum attack (marked by â), and the post-quantum algorithms that are already standardized (â) or soon will be (ð). Each submission proposes several variants. We list the most relevant variants to TLS from each submission. To explore all variants, check out &lt;a href=\&quot;https://research.cloudflare.com/outreach/academic-programs/interns/thom-wiggers/\&quot;&gt;&lt;u&gt;Thom Wigger&lt;/u&gt;&lt;/a&gt;âs &lt;a href=\&quot;https://pqshield.github.io/nist-sigs-zoo/\&quot;&gt;&lt;u&gt;signatures zoo&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&lt;style type=\&quot;text/css\&quot;&gt;\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-d0am{background-color:#C0FF00;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-mrls{background-color:#FFE400;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-jxgv{background-color:#FFF;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-ezr1{background-color:#0F0;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-5ece{border-color:inherit;font-size:small;text-align:left;vertical-align:top}\n.tg .tg-hqhz{background-color:#FF0;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-boa2{background-color:#F90;border-color:inherit;color:#FFF;text-align:left;vertical-align:top}\n.tg .tg-4zxv{background-color:#F00;border-color:inherit;color:#FFF;text-align:left;vertical-align:top}\n@media screen and (max-width: 767px) {.tg {width: auto !important;}.tg col {width: auto !important;}.tg-wrap {overflow-x: auto;-webkit-overflow-scrolling: touch;margin: auto 0px;}}&lt;/style&gt;\n&lt;div class=\&quot;tg-wrap\&quot;&gt;&lt;table class=\&quot;tg\&quot;&gt;&lt;thead&gt;\n  &lt;tr&gt;\n    &lt;th class=\&quot;tg-0pky\&quot;&gt;&lt;/th&gt;\n    &lt;th class=\&quot;tg-0pky\&quot;&gt;&lt;/th&gt;\n    &lt;th class=\&quot;tg-0pky\&quot;&gt;&lt;/th&gt;\n    &lt;th class=\&quot;tg-0pky\&quot; colspan=\&quot;2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Sizes (bytes)&lt;/span&gt;&lt;/th&gt;\n    &lt;th class=\&quot;tg-0pky\&quot; colspan=\&quot;2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;CPU time (lower is better)&lt;/span&gt;&lt;/th&gt;\n  &lt;/tr&gt;&lt;/thead&gt;\n&lt;tbody&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Family&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Name variant&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Public key&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Signature&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Signing&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Verification&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Elliptic curves&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Ed25519&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;â&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;32&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;64&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.15&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1.3&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Factoring&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-5ece\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;RSA&lt;small&gt; 2048&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;â&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;272&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;256&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;80&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.4&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Lattices&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ML-DSA &lt;small&gt;44&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;â&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-mrls\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1,312&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-boa2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;2,420&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1 (baseline)&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1 (baseline)&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot; rowspan=\&quot;3\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Symmetric&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;SLH-DSA &lt;small&gt;128s&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;â&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;32&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;7,856&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;14,000&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;40&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;SLH-DSA &lt;small&gt;128f&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;â&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;32&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;17,088&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-boa2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;720&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-boa2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;110&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;LMS &lt;small&gt;M4_H20_W8&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;â&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;48&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-mrls\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1,112&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-d0am\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;2.9&lt;/span&gt; â ï¸&lt;/td&gt;\n    &lt;td class=\&quot;tg-d0am\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;8.4&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Lattices&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Falcon &lt;small&gt;512&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;897&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;666&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-d0am\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;3 â ï¸&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.7&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot; rowspan=\&quot;2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Codebased&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;CROSS &lt;small&gt;R-SDP(G)1 small&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;38&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;7,956&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;20&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;35&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;LESS &lt;small&gt;1s&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;97,484&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;5,120&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-boa2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;620&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;1800&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot; rowspan=\&quot;5\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;MPC in the head&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Mirath &lt;small&gt;Mirith Ia fast&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;129&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;7,877&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;25&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;60&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;MQOM &lt;small&gt;L1-gf251-fast&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;59&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;7,850&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;35&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-boa2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;85&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;PERK &lt;small&gt;I-fast5&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;240&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;8,030&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;20&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;40&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;RYDE &lt;small&gt;128F&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;86&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;7,446&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;15&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;40&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;SDitH &lt;small&gt;gf251-L1-hyp&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;132&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;8,496&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;30&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-boa2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;80&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;VOLE in the head&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;FAEST &lt;small&gt;EM-128f&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;32&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;5,696&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-d0am\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;6&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-d0am\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;18&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Lattices&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;HAWK &lt;small&gt;512&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1,024&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;555&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.25&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1.2&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Isogeny&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;SQISign &lt;small&gt;I&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;64&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;177&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;17,000&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;900&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-jxgv\&quot; rowspan=\&quot;8\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;Multivariate&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;MAYO &lt;small&gt;one&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1,168&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;321&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1.4&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1.4&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;MAYO &lt;small&gt;two&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;5,488&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;180&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1.7&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.8&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;QR-UOV &lt;small&gt;I-(31,165,60,3)&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;23,657&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;157&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;75&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-boa2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;125&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;SNOVA &lt;small&gt;(24,5,4)&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-hqhz\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1,016&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;248&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.9&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1.4&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;SNOVA &lt;small&gt;(25,8,3)&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-boa2\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;2,320&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;165&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.9&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1.8&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;SNOVA &lt;small&gt;(37,17,2)&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;9,842&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;106&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;1.2&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;UOV &lt;small&gt;Is-pkc&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;66,576&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;96&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.3&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;2.3&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;UOV &lt;small&gt;Ip-pkc&lt;/small&gt;&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-0pky\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;ð¤&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-4zxv\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#FFF;background-color:transparent\&quot;&gt;43,576&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;128&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.3&lt;/span&gt;&lt;/td&gt;\n    &lt;td class=\&quot;tg-ezr1\&quot;&gt;&lt;span style=\&quot;font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\&quot;&gt;0.8&lt;/span&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;Some notes about the table. It compares selected variants of the submissions progressed to the second round of the NIST PQC signature on ramp with earlier existing traditional and post-quantum schemes at the security level of AES-128. CPU times are taken from the &lt;a href=\&quot;https://pqshield.github.io/nist-sigs-zoo/\&quot;&gt;&lt;u&gt;signatures zoo&lt;/u&gt;&lt;/a&gt;, which collected them from the submission documents and some later advances. CPU performance varies significantly by platform and implementation, and should only be taken as a rough indication. We are early in the competition, and the on-ramp schemes will evolve: some will improve drastically (both in compute and size), whereas others will regress to counter new attacks. Check out &lt;a href=\&quot;https://pqshield.github.io/nist-sigs-zoo/\&quot;&gt;&lt;u&gt;the zoo&lt;/u&gt;&lt;/a&gt; for the latest numbers. We marked Falcon signing with aÂ &lt;i&gt;â ï¸&lt;/i&gt;, as Falcon signing is hard to implement in a fast and timing side-channel secure manner. LMS signing has a â ï¸, as secure LMS signing requires keeping a state and the listed signing time assumes a 32MB cache. This will be discussed later on.&lt;/p&gt;&lt;p&gt;These are a lot of algorithms, and we didnât even list all variants. One thing is clear: none of them perform as well as classical elliptic curve signatures across the board. Letâs start with NISTâs 2022 picks.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;ml-dsa-slh-dsa-and-falcon\&quot;&gt;ML-DSA, SLH-DSA, and Falcon&lt;/h3&gt;\n            &lt;a href=\&quot;#ml-dsa-slh-dsa-and-falcon\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;The most viable general purpose post-quantum signature scheme standardized today is the lattice-based &lt;b&gt;ML-DSA&lt;/b&gt; (&lt;a href=\&quot;https://nvlpubs.nist.gov/nistpubs/fips/nist.fips.204.pdf\&quot;&gt;&lt;u&gt;FIPS 204&lt;/u&gt;&lt;/a&gt;), which started its life as &lt;a href=\&quot;https://pq-crystals.org/dilithium/index.shtml\&quot;&gt;&lt;u&gt;Dilithium&lt;/u&gt;&lt;/a&gt;. Itâs light on the CPU and reasonably straightforward to implement. The big downside is that its signatures and public keys are large: 2.4kB and 1.3kB respectively. Here and for the balance of the blog post, we will only consider the variants at the AES-128 security level unless stated otherwise. Adding ML-DSA, adds 14.7kB to the TLS handshake (two 1312-byte public keys plus five 2420-byte signatures).&lt;/p&gt;&lt;p&gt;&lt;b&gt;SLH-DSA&lt;/b&gt; (&lt;a href=\&quot;https://nvlpubs.nist.gov/nistpubs/fips/nist.fips.205.pdf\&quot;&gt;&lt;u&gt;FIPS 205&lt;/u&gt;&lt;/a&gt;, nÃ©e &lt;a href=\&quot;https://sphincs.org/\&quot;&gt;&lt;u&gt;SPHINCS&lt;/u&gt;&lt;u&gt;&lt;sup&gt;+&lt;/sup&gt;&lt;/u&gt;&lt;/a&gt;) looks strictly worse, adding 39kB and significant computational overhead for both signing and verification. The advantage of SLH-DSA, being solely based on hashes, is that its security is much better understood than ML-DSA. The lowest security level of SLH-DSA is generally more trusted than the highest security levels of many other schemes.&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;https://falcon-sign.info/\&quot;&gt;&lt;b&gt;&lt;u&gt;Falcon&lt;/u&gt;&lt;/b&gt;&lt;/a&gt; (to be renamed &lt;a href=\&quot;https://www.nist.gov/news-events/news/2024/08/nist-releases-first-3-finalized-post-quantum-encryption-standards\&quot;&gt;&lt;u&gt;FN-DSA&lt;/u&gt;&lt;/a&gt;) seems much better than SLH-DSA and ML-DSA if you look only at the numbers in the table. There is a catch though. For fast signing, Falcon requires fast floating-point arithmetic, which turns out to be &lt;a href=\&quot;https://blog.cloudflare.com/nist-post-quantum-surprise/#digital-signatures\&quot;&gt;&lt;u&gt;difficult to implement securely&lt;/u&gt;&lt;/a&gt;. Signing can be performed securely with emulated floating-point arithmetic, but that makes it roughly twenty times slower. This makes Falcon ill-suited for online signatures. Furthermore, the signing procedure of Falcon is complicated to implement. On the other hand, Falcon verification is simple and doesnât require floating-point arithmetic.&lt;/p&gt;&lt;p&gt;Leaning into Falconâs strength, by using ML-DSA for the handshake signature, and Falcon for the rest, weâre only adding 7.3kB (at security level of AES-128).&lt;/p&gt;&lt;p&gt;There is one more difficulty with Falcon worth mentioning: itâs missing a middle security level. That means that if Falcon-512 (which we considered so far) turns out to be weaker than expected, then the next one up is Falcon-1024, which has double signature and public key size. That amounts to adding about 11kB.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;stateful-hash-based-signatures\&quot;&gt;Stateful hash-based signatures&lt;/h3&gt;\n            &lt;a href=\&quot;#stateful-hash-based-signatures\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;The very first post-quantum signature algorithms standardized are the stateful hash-based &lt;a href=\&quot;https://datatracker.ietf.org/doc/html/rfc8391\&quot;&gt;&lt;u&gt;XMSS&lt;/u&gt;&lt;u&gt;&lt;sup&gt;(MT)&lt;/sup&gt;&lt;/u&gt;&lt;/a&gt; and &lt;a href=\&quot;https://datatracker.ietf.org/doc/html/rfc8554#page-45\&quot;&gt;&lt;u&gt;LMS/HSS&lt;/u&gt;&lt;/a&gt;. These are hash-based signatures, similar to SLH-DSA, and so we have a lot of trust in their security. They come with a big drawback: when creating a keypair you prepare a finite number of &lt;i&gt;signature slots&lt;/i&gt;. For the variant listed in the table, there are about one million slots. Each slot can only be used once. If by accident a slot is used twice, then anyone can (&lt;a href=\&quot;https://eprint.iacr.org/2016/1042\&quot;&gt;&lt;u&gt;probably&lt;/u&gt;&lt;/a&gt;) use those two signatures to forge any new signature from that slot and break into the connection the certificate is supposed to protect. Remembering which slots have been used, is the &lt;i&gt;state&lt;/i&gt; in &lt;i&gt;stateful&lt;/i&gt; hash-based signature. Certificate authorities might be able to keep the state, but for general use, Adam Langley calls keeping the state a &lt;a href=\&quot;https://www.imperialviolet.org/2013/07/18/hashsig.html\&quot;&gt;&lt;u&gt;huge foot-cannon&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;There are more quirks to keep in mind for stateful hash-based signatures. To start, during key generation, each slot needs to be prepared. Preparing each slot takes approximately the same amount of time as verifying a signature. Preparing all million takes a couple of hours on a single core. For intermediate certificates of a popular certificate authority, a million slots are not enough. Indeed, Letâs Encrypt issues more than &lt;a href=\&quot;https://letsencrypt.org/stats/\&quot;&gt;&lt;u&gt;four million certificates per day&lt;/u&gt;&lt;/a&gt;. Instead of increasing the number of slots directly, we can use an extra intermediate. This is what XMSS&lt;sup&gt;MT&lt;/sup&gt; and HSS do internally. A final quirk of stateful hash-based signatures is that their security is bottlenecked on non-repudiation: the listed LMS instance has 192 bits of security against forgery, but only 96 bits against the signer themselves creating a single signature that verifies two different messages.&lt;/p&gt;&lt;p&gt;Even when stateful hash-based signatures or Falcon can be used, we are still adding a lot of bytes on the wire. From &lt;a href=\&quot;https://blog.cloudflare.com/sizing-up-post-quantum-signatures/\&quot;&gt;&lt;u&gt;earlier experiments&lt;/u&gt;&lt;/a&gt; we know that that will impact performance significantly. We summarize those findings later in this blog post, and share some new data. The short of it: it would be nice to have a post-quantum signature scheme that outperforms Falcon, or at least outperforms ML-DSA and is easier to deploy. This is one of the reasons NIST is running the second competition.&lt;/p&gt;&lt;p&gt;With that in mind, letâs have a look at the candidates.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;structured-lattice-alternatives\&quot;&gt;Structured lattice alternatives&lt;/h3&gt;\n            &lt;a href=\&quot;#structured-lattice-alternatives\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;With only performance in mind, it is surprising that half of the candidates do worse than ML-DSA. There is a good reason for it: NIST is worried that weâre putting all our eggs in the structured lattices basket. SLH-DSA is an alternative to lattices today, but it doesnât perform well enough for many applications. As such, NIST &lt;a href=\&quot;https://csrc.nist.gov/csrc/media/Projects/pqc-dig-sig/documents/call-for-proposals-dig-sig-sept-2022.pdf\&quot;&gt;&lt;u&gt;would primarily like to standardize&lt;/u&gt;&lt;/a&gt; another general purpose signature algorithm that is not based on structured lattices, and that outperforms SLH-DSA. We will briefly touch upon these schemes here.&lt;/p&gt;&lt;h4&gt;Code-based&lt;/h4&gt;&lt;p&gt;&lt;a href=\&quot;https://www.cross-crypto.com/\&quot;&gt;&lt;u&gt;CROSS&lt;/u&gt;&lt;/a&gt; and &lt;a href=\&quot;https://www.less-project.com/#:~:text=LESS%20(Linear%20Equivalence%20Signature%20Scheme,the%20Linear%20Code%20Equivalence%20problem.\&quot;&gt;&lt;u&gt;LESS&lt;/u&gt;&lt;/a&gt; are two&lt;b&gt; code-based signature&lt;/b&gt; schemes. &lt;b&gt;CROSS&lt;/b&gt; is based on a variant of the traditional syndrome decoding problem. Its signatures are about as large as SLH-DSA, but its edge over SLH-DSA is the much better signing times. &lt;b&gt;LESS&lt;/b&gt; is based on the novel &lt;a href=\&quot;https://eprint.iacr.org/2023/847\&quot;&gt;&lt;u&gt;linear equivalence problem&lt;/u&gt;&lt;/a&gt;. It only outperforms SLH-DSA on signature size, requiring larger public keys in return. For use in TLS, the high verification times of LESS are especially problematic. Given that LESS is based on a new approach, it will be interesting to see how much it can improve going forward.&lt;/p&gt;&lt;h4&gt;Multi-party computation in the head&lt;/h4&gt;&lt;p&gt;Five of the submissions (&lt;a href=\&quot;https://pqc-mira.org/\&quot;&gt;&lt;u&gt;Mira&lt;/u&gt;&lt;/a&gt;&lt;a href=\&quot;https://pqc-mirith.org/\&quot;&gt;&lt;u&gt;th&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://mqom.org/\&quot;&gt;&lt;u&gt;MQOM&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://pqc-perk.org/\&quot;&gt;&lt;u&gt;PERK&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://pqc-ryde.org/\&quot;&gt;&lt;u&gt;RYDE&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://sdith.org/\&quot;&gt;&lt;u&gt;SDitH&lt;/u&gt;&lt;/a&gt;) use the &lt;b&gt;Multi-Party Computation in the Head&lt;/b&gt; (MPCitH) paradigm.&lt;/p&gt;&lt;p&gt;It has been exciting to see the developments in this field. To explain a bit about it, letâs go back to &lt;a href=\&quot;https://microsoft.github.io/Picnic/\&quot;&gt;&lt;u&gt;Picnic&lt;/u&gt;&lt;/a&gt;. Picnic was an MPCitH submission to the previous NIST PQC competition. In essence, its private key is a random key &lt;i&gt;x&lt;/i&gt;, and its public key is the hash &lt;i&gt;H(x)&lt;/i&gt;. A signature is a zero-knowledge proof demonstrating that the signer knows &lt;i&gt;x&lt;/i&gt;. So far, itâs pretty similar in shape to other signature schemes that use zero knowledge proofs. The difference is in how that proof is created. We have to talk about multi-party computation (MPC) first. MPC starts with splitting the key &lt;i&gt;x&lt;/i&gt; into shares, using &lt;a href=\&quot;https://en.wikipedia.org/wiki/Shamir%27s_secret_sharing\&quot;&gt;&lt;u&gt;Shamir secret sharing&lt;/u&gt;&lt;/a&gt; for instance, and giving each party one share. No single party knows the value of &lt;i&gt;x&lt;/i&gt; itself, but they can recover it by recombining. The insight of MPC is that these parties (with some communication) can perform arbitrary computation on the data they shared. In particular, they can compute a secret share of &lt;i&gt;H(x)&lt;/i&gt;. Now, we can use that to make a zero-knowledge proof as follows. The signer simulates all parties in the multi-party protocol to compute and recombine &lt;i&gt;H(x)&lt;/i&gt;. The signer then reveals part of the intermediate values of the computation using &lt;a href=\&quot;https://en.wikipedia.org/wiki/Fiat%E2%80%93Shamir_heuristic\&quot;&gt;&lt;u&gt;FiatâShamir&lt;/u&gt;&lt;/a&gt;: enough so that none of the parties could have cheated on any of the steps, but not enough that it allows the verifier to figure out &lt;i&gt;x&lt;/i&gt; themselves.&lt;/p&gt;&lt;p&gt;For &lt;i&gt;H&lt;/i&gt;, Picnic uses &lt;a href=\&quot;https://lowmc.github.io/\&quot;&gt;&lt;u&gt;LowMC&lt;/u&gt;&lt;/a&gt;, a block cipher for which itâs easy to do the multi-party computation. The initial submission of Picnic performed poorly compared to SLH-DSA with 32kB signatures. For the second round, Picnic was improved considerably, boasting 12kB signatures. SLH-DSA won out with smaller signatures, and more conservative security assumptions: Picnic relies on LowMC which didnât receive as much study as the hashes on which SLH-DSA is based.&lt;/p&gt;&lt;p&gt;Back to the MPCitH candidates that progressed. All of them have variants (listed in the table) with similar or better signature sizes as SLH-DSA, while outperforming SLH-DSA considerably in signing time. There are variants with even smaller signatures, but their verification performance is significantly higher. The difference between the MPCitH candidates is the underlying &lt;a href=\&quot;https://en.wikipedia.org/wiki/Trapdoor_function\&quot;&gt;&lt;u&gt;trapdoor&lt;/u&gt;&lt;/a&gt; they use. In Picnic the trapdoor was LowMC. For both RYDE and SDiTH, the trapdoors used are based on variants of &lt;a href=\&quot;https://en.wikipedia.org/wiki/Decoding_methods#Syndrome_decoding\&quot;&gt;&lt;u&gt;syndrome decoding&lt;/u&gt;&lt;/a&gt;, and could be classified as code-based cryptography.&lt;/p&gt;&lt;p&gt;Over the years, MPCitH schemes have seen remarkable improvements in performance, and we donât seem to have reached the end of it yet. There is still some way to go before these schemes would be competitive in TLS: signature size needs to be reduced without sacrificing the currently borderline acceptable verification performance. On top of that, not all underlying trapdoors of the various schemes have seen enough scrutiny.&lt;/p&gt;&lt;h4&gt;FAEST&lt;/h4&gt;&lt;p&gt;&lt;a href=\&quot;https://faest.info/\&quot;&gt;&lt;u&gt;FAEST&lt;/u&gt;&lt;/a&gt; is a peek into the future. Itâs similar to the MPCitH candidates in that its security reduces to an underlying trapdoor. It is quite different from those in that FAESTâs underlying trapdoor is AES. That means that, given the security analysis of FAEST is correct, itâs on the same footing as SLH-DSA. Despite the conservative trapdoor, FAEST beats the MPCitH candidates in performance. It also beats SLH-DSA on all metrics.&lt;/p&gt;&lt;p&gt;At the AES-128 security level, FAESTâs signatures are larger than ML-DSA. For those that want to hedge against improvements in lattice attacks, and would only consider higher security levels of ML-DSA, FAEST becomes an attractive alternative. ML-DSA-65 has a combined public key and signature size of 5.2kB, which is similar to FAEST EM-128f. ML-DSA-65 still has a slight edge in performance.&lt;/p&gt;&lt;p&gt;FAEST is based on the 2023 &lt;a href=\&quot;https://eprint.iacr.org/2023/996.pdf\&quot;&gt;&lt;u&gt;VOLE in the Head&lt;/u&gt;&lt;/a&gt; paradigm. These are new ideas, and it seems likely their full potential has not been realized yet. It is likely that FAEST will see improvements.&lt;/p&gt;&lt;p&gt;The VOLE in the Head techniques can and probably will be adopted by some of the MPCitH submissions. It will be interesting to see how far VOLEitH can be pushed when applied to less conservative trapdoors. Surpassing ML-DSA seems in reach, but Falcon? We will see.&lt;/p&gt;&lt;p&gt;Now, letâs move on to the submissions that surpass ML-DSA today.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;hawk\&quot;&gt;HAWK&lt;/h3&gt;\n            &lt;a href=\&quot;#hawk\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;&lt;a href=\&quot;https://hawk-sign.info/\&quot;&gt;&lt;u&gt;HAWK&lt;/u&gt;&lt;/a&gt; is similar to Falcon, but improves upon it in a few key ways. Most importantly, it doesnât rely on floating point arithmetic. Furthermore, its signing procedure is simpler and much faster. This makes HAWK suitable for online signatures. Using HAWK adds 4.8kB. Apart from size and speed, itâs beneficial to rely on only a single scheme: using multiple schemes increases the attack surface for algorithmic weaknesses and implementation mistakes.&lt;/p&gt;&lt;p&gt;Similar to Falcon, HAWK is missing a middle security level. Using HAWK-1024 doubles sizes (9.6kB).&lt;/p&gt;&lt;p&gt;There is one downside to HAWK over Falcon: HAWK relies on a new security assumption, the &lt;a href=\&quot;https://eprint.iacr.org/2021/1332.pdf\&quot;&gt;&lt;u&gt;lattice isomorphism problem&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;sqisign\&quot;&gt;SQISign&lt;/h3&gt;\n            &lt;a href=\&quot;#sqisign\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;&lt;a href=\&quot;https://sqisign.org/\&quot;&gt;&lt;u&gt;SQISign&lt;/u&gt;&lt;/a&gt; is based on &lt;a href=\&quot;https://blog.cloudflare.com/sidh-go/\&quot;&gt;&lt;u&gt;isogenies&lt;/u&gt;&lt;/a&gt;. Famously, SIKE, another isogeny-based scheme in the previous competition, got &lt;a href=\&quot;https://eprint.iacr.org/2022/975.pdf\&quot;&gt;&lt;u&gt;broken badly&lt;/u&gt;&lt;/a&gt; late into the competition. SQISign is based on a different problem, though. SQISign is remarkable for having very small signatures and public keys: it even beats RSA-2048. The glaring downside is that it is computationally very expensive to compute and verify a signature. Isogeny-based signature schemes is a very active area of research with many advances over the years.&lt;/p&gt;&lt;p&gt;It seems unlikely that any future SQISign variant will sign fast enough for the TLS handshake signature. Furthermore, SQISign signing seems to be hard to implement in a timing side-channel secure manner. What about the other signatures of TLS? The bottleneck is verification time. It would be acceptable for SQISign to have larger signatures, if that allows it to have faster verification time.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;uov\&quot;&gt;UOV&lt;/h3&gt;\n            &lt;a href=\&quot;#uov\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;&lt;a href=\&quot;https://www.uovsig.org/\&quot;&gt;&lt;u&gt;UOV&lt;/u&gt;&lt;/a&gt; (unbalanced oil and vinegar) is an old multivariate scheme with large public keys (67kB), but small signatures (96 bytes). Furthermore, it has excellent signing and verification performance. These interesting size tradeoffs make it quite suited for use cases where the public key is known in advance.&lt;/p&gt;&lt;p&gt;If we use UOV in TLS for the SCTs and root CA, whose public keys are not transmitted when setting up the connection, together with ML-DSA for the others, weâre looking at 7.2kB. Thatâs a clear improvement over using ML-DSA everywhere, and a tad better than combining ML-DSA with Falcon.&lt;/p&gt;&lt;p&gt;When combining UOV with HAWK instead of ML-DSA, weâre looking at adding only 3.4kB. Thatâs better again, but only a marginal improvement over using HAWK everywhere (4.8kB). The relative advantage of UOV improves if the certificate transparency ecosystem moves towards requiring more SCTs.&lt;/p&gt;&lt;p&gt;For SCTs, the size of UOV public keys seems acceptable, as there are not that many certificate transparency logs at the moment. Shipping a UOV public key for hundreds of root CAs is more painful, but within reason. Even with &lt;a href=\&quot;https://blog.cloudflare.com/pq-2024/#leaving-out-intermediate-certificates\&quot;&gt;&lt;u&gt;intermediate suppression&lt;/u&gt;&lt;/a&gt;, using UOV in each of the thousands of intermediate certificates does not make sense.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;structured-multivariate\&quot;&gt;Structured multivariate&lt;/h3&gt;\n            &lt;a href=\&quot;#structured-multivariate\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;Since the original UOV, over the decades, many attempts have been made to add additional structure UOV, to get a better balance between the size of the signature and public key. Unfortunately many of these &lt;i&gt;structured multivariate&lt;/i&gt; schemes, which include GeMMS and Rainbow, have been broken.&lt;/p&gt;&lt;p&gt;Letâs have a look at the multivariate candidates. The most interesting variant of &lt;b&gt;QR-UOV&lt;/b&gt; for TLS has 24kB public keys and 157 byte signatures. The current verification times are unacceptably high, but there seems to be plenty of room for an improved implementation. There is also a variant with a 12kB public key, but its verification time needs to come down even further. In any case, the combined size QR-UOVâs public key and signatures remain large enough that itâs not a competitor of ML-DSA or Falcon. Instead, QR-UOV competes with UOV, where UOVâs public keys are unwieldy. Although QR-UOV hasnât seen a direct attack yet, a similar scheme has recently been &lt;a href=\&quot;https://link.springer.com/chapter/10.1007/978-3-031-62746-0_9\&quot;&gt;&lt;u&gt;weakened&lt;/u&gt;&lt;/a&gt; and another &lt;a href=\&quot;https://link.springer.com/chapter/10.1007/978-3-030-44223-1_18\&quot;&gt;&lt;u&gt;broken&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Finally, we get to&lt;b&gt; &lt;/b&gt;&lt;a href=\&quot;https://snova.pqclab.org/\&quot;&gt;&lt;b&gt;&lt;u&gt;SNOVA&lt;/u&gt;&lt;/b&gt;&lt;/a&gt; and &lt;a href=\&quot;https://pqmayo.org/\&quot;&gt;&lt;b&gt;&lt;u&gt;MAYO&lt;/u&gt;&lt;/b&gt;&lt;/a&gt;. Although theyâre based on a different technique, they have a lot of properties in common. To start, they have the useful property that they allow for a granular tradeoff between public key and signature size. This allows us to use a different variant optimized for whether weâre transmitting the public in the connection or not. Using MAYO&lt;sub&gt;one&lt;/sub&gt; for the leaf and intermediate, and MAYO&lt;sub&gt;two&lt;/sub&gt; for the others, adds 3.5kB. Similarly with SNOVA, we add 2.8kB. On top of that, both schemes have excellent signing and verification performance.&lt;/p&gt;&lt;p&gt;The elephant in the room is the security. During the end of the first round, a new &lt;a href=\&quot;https://www.jstage.jst.go.jp/article/jsiaml/15/0/15_53/_article\&quot;&gt;&lt;u&gt;generic attack&lt;/u&gt;&lt;/a&gt; on underdefined multivariate systems prompted the MAYO team to &lt;a href=\&quot;https://groups.google.com/a/list.nist.gov/g/pqc-forum/c/jEKfDYUgdec/m/0UP_GNKSAwAJ\&quot;&gt;&lt;u&gt;tweak their parameters&lt;/u&gt;&lt;/a&gt; slightly. SNOVA has been hit a bit harder by three attacks (&lt;a href=\&quot;https://dl.acm.org/doi/10.1145/3659467.3659900\&quot;&gt;&lt;u&gt;1&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://eprint.iacr.org/2024/1297\&quot;&gt;&lt;u&gt;2&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://eprint.iacr.org/2024/1770.pdf\&quot;&gt;&lt;u&gt;3&lt;/u&gt;&lt;/a&gt;), but so far it seems that SNOVAâs parameters can be adjusted to compensate.&lt;/p&gt;&lt;p&gt;Ok, we had a look at all the candidates. What did we learn? There are some very promising algorithms that will reduce the number of bytes required on the wire compared to ML-DSA and Falcon. None of the practical ones will prevent us from adding any extra bytes to TLS. So, given that we must add some bytes: how many extra bytes are too many?&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;how-many-added-bytes-are-too-many-for-tls\&quot;&gt;How many added bytes are too many for TLS?&lt;/h2&gt;\n            &lt;a href=\&quot;#how-many-added-bytes-are-too-many-for-tls\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;On average, around 15 million TLS connections are established with Cloudflare per second. Upgrading each to ML-DSA, would take 1.8Tbps, which is 0.6% of our current total network capacity. No problem so far. The question is how these extra bytes affect performance.&lt;/p&gt;&lt;p&gt;Back in 2021, we &lt;a href=\&quot;https://blog.cloudflare.com/sizing-up-post-quantum-signatures/\&quot;&gt;&lt;u&gt;ran a large-scale experiment&lt;/u&gt;&lt;/a&gt; to measure the impact of big post-quantum certificate chains on connections to Cloudflareâs network over the open Internet. There were two important results. First, we saw a steep increase in the rate of client and middlebox failures when we added more than 10kB to existing certificate chains. Secondly, when adding less than 9kB, the slowdown in TLS handshake time would be approximately 15%. We felt the latter is workable, but far from ideal: such a slowdown is noticeable and people might hold off deploying post-quantum certificates before itâs too late.&lt;/p&gt;&lt;p&gt;Chrome is more cautious and set 10% as their target for maximum TLS handshake time regression. They &lt;a href=\&quot;https://dadrian.io/blog/posts/pqc-signatures-2024/#fnref:3\&quot;&gt;&lt;u&gt;report&lt;/u&gt;&lt;/a&gt; that deploying post-quantum key agreement has already incurred a 4% slowdown in TLS handshake time, for the extra 1.1kB from server-to-client and 1.2kB from client-to-server. That slowdown is proportionally larger than the 15% we found for 9kB, but that could be explained by slower upload speeds than download speeds.&lt;/p&gt;&lt;p&gt;There has been pushback against the focus on TLS handshake times. One argument is that session resumption alleviates the need for sending the certificates again. A second argument is that the data required to visit a typical website dwarfs the additional bytes for post-quantum certificates. One example is this &lt;a href=\&quot;https://www.amazon.science/publications/the-impact-of-data-heavy-post-quantum-tls-1-3-on-the-time-to-last-byte-of-real-world-connections\&quot;&gt;&lt;u&gt;2024 publication&lt;/u&gt;&lt;/a&gt;, where Amazon researchers have simulated the impact of large post-quantum certificates on data-heavy TLS connections. They argue that typical connections transfer multiple requests and hundreds of kilobytes, and for those the TLS handshake slowdown disappears in the margin.&lt;/p&gt;&lt;p&gt;Are session resumption and hundreds of kilobytes over a connection typical though? Weâd like to share what we see. We focus on QUIC connections, which are likely initiated by browsers or browser-like clients. Of all QUIC connections with Cloudflare that carry at least one HTTP request, 37% are &lt;a href=\&quot;https://blog.cloudflare.com/even-faster-connection-establishment-with-quic-0-rtt-resumption/\&quot;&gt;&lt;u&gt;resumptions&lt;/u&gt;&lt;/a&gt;, meaning that key material from a previous TLS connection is reused, avoiding the need to transmit certificates. The median number of bytes transferred from server-to-client over a resumed QUIC connection is 4.4kB, while the average is 395kB. For non-resumptions the median is 7.8kB and average is 551kB. This vast difference between median and average indicates that a small fraction of data-heavy connections skew the average. In fact, only 15.8% of all QUIC connections transfer more than 100kB.&lt;/p&gt;&lt;p&gt;The median certificate chain today (with compression) is &lt;a href=\&quot;https://datatracker.ietf.org/doc/html/draft-ietf-tls-cert-abridge-02#section-4\&quot;&gt;&lt;u&gt;3.2kB&lt;/u&gt;&lt;/a&gt;. That means that almost 40% of all data transferred from server to client on more than half of the non-resumed QUIC connections are just for the certificates, and this only gets worse with post-quantum algorithms. For the majority of QUIC connections, using ML-DSA as a drop-in replacement for classical signatures would more than double the number of transmitted bytes over the lifetime of the connection.&lt;/p&gt;&lt;p&gt;It sounds quite bad if the vast majority of data transferred for a typical connection is just for the post-quantum certificates. Itâs still only a proxy for what is actually important: the effect on metrics relevant to the end-user, such as the browsing experience (e.g. &lt;a href=\&quot;https://web.dev/articles/optimize-lcp\&quot;&gt;&lt;u&gt;largest contentful paint&lt;/u&gt;&lt;/a&gt;) and the amount of data those certificates take from a userâs monthly data cap. We will continue to investigate and get a better understanding of the impact.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;zooming-out\&quot;&gt;Zooming out&lt;/h2&gt;\n            &lt;a href=\&quot;#zooming-out\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;That was a lot â letâs step back.&lt;/p&gt;&lt;p&gt;Itâs great to see how much better the post-quantum signature algorithms are today in almost every family than they were in &lt;a href=\&quot;https://blog.cloudflare.com/sizing-up-post-quantum-signatures/\&quot;&gt;&lt;u&gt;2021&lt;/u&gt;&lt;/a&gt;. The improvements havenât slowed down either. Many of the algorithms that do not improve over ML-DSA for TLS today could still do so in the third round. Looking back, we are also cautioned: several algorithms considered in 2021 have since been broken.&lt;/p&gt;&lt;p&gt;From an implementation and performance perspective for TLS today, HAWK, SNOVA, and MAYO are all clear improvements over ML-DSA and Falcon. They are also very new, and presently we cannot depend on them without a &lt;a href=\&quot;https://blog.cloudflare.com/pq-2024/#way-forward\&quot;&gt;&lt;u&gt;plan B&lt;/u&gt;&lt;/a&gt;. UOV has been around a lot longer. Due to its large public key, it will not work on its own, but be a very useful complement to another general purpose signature scheme.&lt;/p&gt;&lt;p&gt;Even with the best performers out of the competition, the way we see TLS connections used today, suggest that drop-in post-quantum certificates will have a big impact on at least half of them.&lt;/p&gt;&lt;p&gt;In the meantime, we can also make plan B our plan A: there are several ways in which we can reduce the number of signatures used in TLS. We can leave out intermediate certificates (&lt;a href=\&quot;https://datatracker.ietf.org/doc/html/draft-kampanakis-tls-scas-latest\&quot;&gt;&lt;u&gt;1&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://datatracker.ietf.org/doc/draft-ietf-tls-cert-abridge/\&quot;&gt;&lt;u&gt;2&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://datatracker.ietf.org/doc/html/draft-davidben-tls-trust-expr-04#name-intermediate-elision\&quot;&gt;&lt;u&gt;3&lt;/u&gt;&lt;/a&gt;). Another is to use a KEM &lt;a href=\&quot;https://kemtls.org/\&quot;&gt;&lt;u&gt;instead of a signature&lt;/u&gt;&lt;/a&gt; for handshake authentication. We can even get rid of all the offline signatures with a more &lt;a href=\&quot;https://datatracker.ietf.org/doc/html/draft-davidben-tls-merkle-tree-certs-03\&quot;&gt;&lt;u&gt;ambitious redesign&lt;/u&gt;&lt;/a&gt; for the &lt;a href=\&quot;https://www.youtube.com/watch?v=f8unMB2Qjho\&quot;&gt;&lt;u&gt;vast majority&lt;/u&gt;&lt;/a&gt; of visits: a post-quantum Internet with fewer bytes on the wire! Weâve discussed these ideas at more length in a &lt;a href=\&quot;https://blog.cloudflare.com/pq-2024/#way-forward\&quot;&gt;&lt;u&gt;previous blog post&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;So what does this mean for the coming years? We will continue to work with browsers to understand the end user impact of large drop-in post-quantum certificates. When certificate authorities support them (our guess: 2026), we will add support for ML-DSA certificates &lt;a href=\&quot;https://blog.cloudflare.com/post-quantum-crypto-should-be-free/\&quot;&gt;&lt;u&gt;for free&lt;/u&gt;&lt;/a&gt;. This will be opt-in until cryptographically relevant quantum computers are imminent, to prevent undue performance regression. In the meantime, we will continue to pursue larger changes to the WebPKI, so that we can bring full post-quantum security to the Internet without performance compromise.&lt;/p&gt;&lt;p&gt;Weâve talked a lot about certificates, but what we need to care about today is encryption. Along with many across industry, including the major browsers, we have deployed the post-quantum key agreement X25519MLKEM768 across the board, and you can make sure your connections with Cloudflare are already secured against harvest-now/decrypt-later. Visit &lt;a href=\&quot;http://pq.cloudflareresearch.com\&quot;&gt;&lt;u&gt;pq.cloudflareresearch.com&lt;/u&gt;&lt;/a&gt; to learn how.&lt;/p&gt;&quot;],&quot;published_at&quot;:[0,&quot;2024-11-07T14:00+00:00&quot;],&quot;updated_at&quot;:[0,&quot;2024-11-07T14:00:02.722Z&quot;],&quot;feature_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/14aKzVYYFvVhoxquNWWg1I/5da91d29f43ab0f6b5e08cf812c55aae/unnamed.png&quot;],&quot;tags&quot;:[1,[[0,{&quot;id&quot;:[0,&quot;6bIo7ayy56Fzdrtf9z2EWy&quot;],&quot;name&quot;:[0,&quot;Post-Quantum&quot;],&quot;slug&quot;:[0,&quot;post-quantum&quot;]}],[0,{&quot;id&quot;:[0,&quot;1x7tpPmKIUCt19EDgM1Tsl&quot;],&quot;name&quot;:[0,&quot;Research&quot;],&quot;slug&quot;:[0,&quot;research&quot;]}],[0,{&quot;id&quot;:[0,&quot;1QsJUMpv0QBSLiVZLLQJ3V&quot;],&quot;name&quot;:[0,&quot;Cryptography&quot;],&quot;slug&quot;:[0,&quot;cryptography&quot;]}],[0,{&quot;id&quot;:[0,&quot;56vA0Z6hqev6QaJBQmO2J8&quot;],&quot;name&quot;:[0,&quot;TLS&quot;],&quot;slug&quot;:[0,&quot;tls&quot;]}]]],&quot;relatedTags&quot;:[0],&quot;authors&quot;:[1,[[0,{&quot;name&quot;:[0,&quot;Bas Westerbaan&quot;],&quot;slug&quot;:[0,&quot;bas&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4KeBG8XO1ADZHuEV9v5Hwz/6c90a96cfb1373b208bffc35f3fd71f4/bas.png&quot;],&quot;location&quot;:[0,&quot;The Netherlands&quot;],&quot;website&quot;:[0,&quot;https://bas.westerbaan.name&quot;],&quot;twitter&quot;:[0,&quot;@bwesterb&quot;],&quot;facebook&quot;:[0,null]}],[0,{&quot;name&quot;:[0,&quot;Luke Valenta&quot;],&quot;slug&quot;:[0,&quot;luke&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2FfvsynZPyK2w2lJSIXdqr/f8758aa6638121491d233932a076770e/luke.jpg&quot;],&quot;location&quot;:[0,&quot;Austin, TX&quot;],&quot;website&quot;:[0,&quot;https://lukevalenta.com/&quot;],&quot;twitter&quot;:[0,&quot;@lukevalenta&quot;],&quot;facebook&quot;:[0,null]}]]],&quot;meta_description&quot;:[0,&quot;NIST has standardized four post-quantum signature schemes so far, and theyâre not done yet: there are fourteen new candidates in the running for standardization. In this blog post we take measure of them and discover why we ended up with so many PQ signatures.&quot;],&quot;primary_author&quot;:[0,{}],&quot;localeList&quot;:[0,{&quot;name&quot;:[0,&quot;blog-english-only&quot;],&quot;enUS&quot;:[0,&quot;English for Locale&quot;],&quot;zhCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhHansCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhTW&quot;:[0,&quot;No Page for Locale&quot;],&quot;frFR&quot;:[0,&quot;No Page for Locale&quot;],&quot;deDE&quot;:[0,&quot;No Page for Locale&quot;],&quot;itIT&quot;:[0,&quot;No Page for Locale&quot;],&quot;jaJP&quot;:[0,&quot;No Page for Locale&quot;],&quot;koKR&quot;:[0,&quot;No Page for Locale&quot;],&quot;ptBR&quot;:[0,&quot;No Page for Locale&quot;],&quot;esLA&quot;:[0,&quot;No Page for Locale&quot;],&quot;esES&quot;:[0,&quot;No Page for Locale&quot;],&quot;enAU&quot;:[0,&quot;No Page for Locale&quot;],&quot;enCA&quot;:[0,&quot;No Page for Locale&quot;],&quot;enIN&quot;:[0,&quot;No Page for Locale&quot;],&quot;enGB&quot;:[0,&quot;No Page for Locale&quot;],&quot;idID&quot;:[0,&quot;No Page for Locale&quot;],&quot;ruRU&quot;:[0,&quot;No Page for Locale&quot;],&quot;svSE&quot;:[0,&quot;No Page for Locale&quot;],&quot;viVN&quot;:[0,&quot;No Page for Locale&quot;],&quot;plPL&quot;:[0,&quot;No Page for Locale&quot;],&quot;arAR&quot;:[0,&quot;No Page for Locale&quot;],&quot;nlNL&quot;:[0,&quot;No Page for Locale&quot;],&quot;thTH&quot;:[0,&quot;No Page for Locale&quot;],&quot;trTR&quot;:[0,&quot;No Page for Locale&quot;],&quot;heIL&quot;:[0,&quot;No Page for Locale&quot;],&quot;lvLV&quot;:[0,&quot;No Page for Locale&quot;],&quot;etEE&quot;:[0,&quot;No Page for Locale&quot;],&quot;ltLT&quot;:[0,&quot;No Page for Locale&quot;]}],&quot;url&quot;:[0,&quot;https://blog.cloudflare.com/another-look-at-pq-signatures&quot;],&quot;metadata&quot;:[0,{&quot;title&quot;:[0,&quot;A look at the latest post-quantum signature standardization candidates&quot;],&quot;description&quot;:[0,&quot;NIST has standardized four post-quantum signature schemes so far, and theyâre not done yet: there are fourteen new candidates in the running for standardization. In this blog post we take measure of them and discover why we ended up with so many PQ signatures.&quot;],&quot;imgPreview&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/GJ6NG49gvA8D9v05bCZIC/79a0d682bf29db033ca86c4d7bfc5485/A_look_at_the_latest_post-quantum_signature_standardization_candidates_-OG.png&quot;]}]}],[0,{&quot;id&quot;:[0,&quot;6uKjGQLUKCb33wGIcOQE1Y&quot;],&quot;title&quot;:[0,&quot;Workers Builds: integrated CI/CD built on the Workers platform&quot;],&quot;slug&quot;:[0,&quot;workers-builds-integrated-ci-cd-built-on-the-workers-platform&quot;],&quot;excerpt&quot;:[0,&quot;Workers Builds, an integrated CI/CD pipeline for the Workers platform, recently launched in open beta. We walk through how we built this product on Cloudflareâs Developer Platform.&quot;],&quot;featured&quot;:[0,false],&quot;html&quot;:[0,&quot;&lt;p&gt;During 2024âs Birthday Week, we &lt;a href=\&quot;https://blog.cloudflare.com/builder-day-2024-announcements/#continuous-integration-and-delivery\&quot;&gt;&lt;u&gt;launched Workers Builds&lt;/u&gt;&lt;/a&gt; in open beta â an integrated Continuous Integration and Delivery (CI/CD) workflow you can use to build and deploy everything from full-stack applications built with the most popular frameworks to simple static websites onto the Workers platform. With Workers Builds, you can connect a GitHub or GitLab repository to a Worker, and Cloudflare will automatically build and deploy your changes each time you push a commit.&lt;/p&gt;&lt;p&gt;Workers Builds is intended to bridge the gap between the developer experiences for Workers and Pages, the latter of which &lt;a href=\&quot;https://blog.cloudflare.com/cloudflare-pages/\&quot;&gt;&lt;u&gt;launched with an integrated CI/CD system in 2020&lt;/u&gt;&lt;/a&gt;. As we continue to &lt;a href=\&quot;https://blog.cloudflare.com/pages-and-workers-are-converging-into-one-experience/\&quot;&gt;&lt;u&gt;merge the experiences of Pages and Workers&lt;/u&gt;&lt;/a&gt;, we wanted to bring one of the best features of Pages to Workers: the ability to tie deployments to existing development workflows in GitHub and GitLab with minimal developer overhead.Â &lt;/p&gt;&lt;p&gt;In this post, weâre going to share how we built the Workers Builds system on Cloudflareâs Developer Platform, using &lt;a href=\&quot;https://developers.cloudflare.com/workers/\&quot;&gt;&lt;u&gt;Workers&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://developers.cloudflare.com/durable-objects\&quot;&gt;&lt;u&gt;Durable Objects&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://developers.cloudflare.com/hyperdrive\&quot;&gt;&lt;u&gt;Hyperdrive&lt;/u&gt;&lt;/a&gt;, &lt;a href=\&quot;https://developers.cloudflare.com/logs/log-explorer/\&quot;&gt;&lt;u&gt;Workers Logs&lt;/u&gt;&lt;/a&gt;, and &lt;a href=\&quot;https://developers.cloudflare.com/workers/configuration/smart-placement\&quot;&gt;&lt;u&gt;Smart Placement&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;the-design-problem\&quot;&gt;The design problem&lt;/h2&gt;\n            &lt;a href=\&quot;#the-design-problem\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;The core problem for Workers Builds is how to pick up a commit from GitHub or GitLab and start a containerized job that can clone the repo, build the project, and deploy a Worker.Â &lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6n6UCIKAM4uAtWzsRBiS16/1c0b655b415afe375b6b153ada570357/BLOG-2594_2.png\&quot; alt=\&quot;BLOG-2594 2\&quot; class=\&quot;kg-image\&quot; width=\&quot;1956\&quot; height=\&quot;360\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;Pages solves a similar problem, and we were initially inclined to expand our existing architecture and tech stack, which includes a centralized configuration plane built on Go in Kubernetes. We also considered the ways in which the Workers ecosystem has evolved in the four years since Pages launched â we have since launched so many more tools built for use cases just like this!Â &lt;/p&gt;&lt;p&gt;The distributed nature of Workers offers some advantages over a centralized stack â we can spend less time configuring Kubernetes because Workers automatically handles failover and scaling. Ultimately, we decided to keep using what required no additional work to re-use from Pages (namely, the system for connecting GitHub/GitLab accounts to Cloudflare, and ingesting push events from them), and for the rest build out a new architecture on the Workers platform, with reliability and minimal latency in mind.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;the-workers-builds-system\&quot;&gt;The Workers Builds system&lt;/h2&gt;\n            &lt;a href=\&quot;#the-workers-builds-system\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;We didnât need to make any changes to the system that handles connections from GitHub/GitLab to Cloudflare and ingesting push events from them. That left us with two systems to build: the configuration plane for users to connect a Worker to a repo, and a build management system to run and monitor builds.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;client-worker\&quot;&gt;Client WorkerÂ &lt;/h3&gt;\n            &lt;a href=\&quot;#client-worker\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;We can begin with our configuration plane, which consists of a simple Client Worker that implements a RESTful API (using &lt;a href=\&quot;https://hono.dev/docs/getting-started/cloudflare-workers\&quot;&gt;&lt;u&gt;Hono&lt;/u&gt;&lt;/a&gt;) and connects to a PostgreSQL database. Itâs in this database that we store build configurations for our users, and through this Worker that users can view and manage their builds.Â &lt;/p&gt;&lt;p&gt;We use a &lt;a href=\&quot;https://developers.cloudflare.com/hyperdrive/\&quot;&gt;&lt;u&gt;Hyperdrive binding&lt;/u&gt;&lt;/a&gt; to connect to our database &lt;a href=\&quot;https://developers.cloudflare.com/hyperdrive/configuration/connect-to-private-database\&quot;&gt;&lt;u&gt;securely over Cloudflare Access&lt;/u&gt;&lt;/a&gt; (which also manages connection pooling and query caching).&lt;/p&gt;&lt;p&gt;We considered a more distributed data model (like &lt;a href=\&quot;https://developers.cloudflare.com/d1/\&quot;&gt;&lt;u&gt;D1&lt;/u&gt;&lt;/a&gt;, sharded by account), but ultimately decided that keeping our database in a datacenter more easily fit our use-case. The Workers Builds data model is relational â Workers belong to Cloudflare Accounts, and Builds belong to Workers â and build metadata must be consistent in order to properly manage build queues. We chose to keep our failover-ready database in a centralized datacenter and take advantage of two other Workers products, Smart Placement and Hyperdrive, in order to keep the benefits of a distributed control plane.Â &lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/33eYqRr5LXKbAvfP8RR7X7/b82858c39b9755c6e056577c9449b00f/BLOG-2594_3.png\&quot; alt=\&quot;BLOG-2594 3\&quot; class=\&quot;kg-image\&quot; width=\&quot;1706\&quot; height=\&quot;560\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;Everything that you see in the Cloudflare Dashboard related to Workers Builds is served by this Worker.Â &lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;build-management-worker\&quot;&gt;Build Management Worker&lt;/h3&gt;\n            &lt;a href=\&quot;#build-management-worker\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;The more challenging problem we faced was how to run and manage user builds effectively. We wanted to support the same experience that we had achieved with Pages, which led to these key requirements:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Builds should be initiated with minimal latency.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The status of a build should be tracked and displayed through its entire lifecycle, starting when a user pushes a commit.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Customer build logs should be stored in a secure, private, and long-lived way.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To solve these problems, we leaned heavily into the technology of &lt;a href=\&quot;https://developers.cloudflare.com/durable-objects/\&quot;&gt;&lt;u&gt;Durable Objects&lt;/u&gt;&lt;/a&gt; (DO).Â &lt;/p&gt;&lt;p&gt;We created a Build Management Worker with two DO classes: A Scheduler class to manage the scheduling of builds, and a class called BuildBuddy to manage individual builds. We chose to design our system this way for an efficient and scalable system. Since each build is assigned its own build manager DO, its operation wonât ever block other builds or the scheduler, meaning we can start up builds with minimal latency. Below, we dive into each of these Durable Objects classes.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6RUDJI7IYIlzcX4qjF9EYY/7e959b7a4489a41d275d74d634389f31/BLOG-2594_4.png\&quot; alt=\&quot;BLOG-2594 4\&quot; class=\&quot;kg-image\&quot; width=\&quot;1999\&quot; height=\&quot;1109\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;h4&gt;Scheduler DO&lt;/h4&gt;&lt;p&gt;The Scheduler DO class is relatively simple. Using &lt;a href=\&quot;https://developers.cloudflare.com/durable-objects/api/alarms/\&quot;&gt;&lt;u&gt;Durable Objects Alarms&lt;/u&gt;&lt;/a&gt;, it is triggered every second to pull up a list of user build configurations that are ready to be started. For each of those builds, the Scheduler creates an instance of our other DO Class, the Build Buddy.Â &lt;/p&gt;\n            &lt;pre class=\&quot;language-javascript\&quot;&gt;&lt;code class=\&quot;language-javascript\&quot;&gt;import { DurableObject } from &amp;#039;cloudflare:workers&amp;#039;\n\n\nexport class BuildScheduler extends DurableObject {\n   state: DurableObjectState\n   env: Bindings\n\n\n   constructor(ctx: DurableObjectState, env: Bindings) {\n       super(ctx, env)\n   }\n   \n   // The DO alarm handler will be called every second to fetch builds\n   async alarm(): Promise&amp;lt;void&amp;gt; {\n// set alarm to run again in 1 second\n       await this.updateAlarm()\n\n\n       const builds = await this.getBuildsToSchedule()\n       await this.scheduleBuilds(builds)\n   }\n\n\n   async scheduleBuilds(builds: Builds[]): Promise&amp;lt;void&amp;gt; {\n       // Don&amp;#039;t schedule builds, if no builds to schedule\n       if (builds.length === 0) return\n\n\n       const queue = new PQueue({ concurrency: 6 })\n       // Begin running builds\n       builds.forEach((build) =&amp;gt;\n           queue.add(async () =&amp;gt; {\n       \t  // The BuildBuddy is another DO described more in the next section! \n               const bb = getBuildBuddy(this.env, build.build_id)\n               await bb.startBuild(build)\n           })\n       )\n\n\n       await queue.onIdle()\n   }\n\n\n   async getBuildsToSchedule(): Promise&amp;lt;Builds[]&amp;gt; {\n       // returns list of builds to schedule\n   }\n\n\n   async updateAlarm(): Promise&amp;lt;void&amp;gt; {\n// We want to ensure we aren&amp;#039;t running multiple alarms at once, so we only set the next alarm if there isnât already one set. \n       const existingAlarm = await this.ctx.storage.getAlarm()\n       if (existingAlarm === null) {\n           this.ctx.storage.setAlarm(Date.now() + 1000)\n       }\n   }\n}\n&lt;/pre&gt;&lt;/code&gt;\n            &lt;h4&gt;Build Buddy DO&lt;/h4&gt;&lt;p&gt;The Build Buddy DO class is what we use to manage each individual build from the time it begins initializing to when it is stopped. Every build has a buddy for life!&lt;/p&gt;&lt;p&gt;Upon creation of a Build Buddy DO instance, the Scheduler immediately calls &lt;code&gt;startBuild()&lt;/code&gt; on the instance. The &lt;code&gt;startBuild()&lt;/code&gt; method is responsible for fetching all metadata and secrets needed to run a build, and then kicking off a build on Cloudflareâs container platform (&lt;a href=\&quot;https://blog.cloudflare.com/container-platform-preview/\&quot;&gt;&lt;u&gt;not public yet, but coming soon&lt;/u&gt;&lt;/a&gt;!).Â &lt;/p&gt;&lt;p&gt;As the containerized build runs, it reports back to the Build Buddy, sending status updates and logs for the Build Buddy to deal with.Â &lt;/p&gt;&lt;h5&gt;Build status&lt;/h5&gt;&lt;p&gt;As a build progresses, it reports its own status back to Build Buddy, sending updates when it has finished initializing, has completed successfully, or been terminated by the user. The Build Buddy is responsible for handling this incoming information from the containerized build, writing status updates to the database (via a Hyperdrive binding) so that users can see the status of their build in the Cloudflare dashboard.&lt;/p&gt;&lt;h5&gt;Build logs&lt;/h5&gt;&lt;p&gt;A running build generates output logs that are important to store and surface to the user. The containerized build flushes these logs to the Build Buddy every second, which, in turn, stores those logs in &lt;a href=\&quot;https://developers.cloudflare.com/durable-objects/api/storage-api/\&quot;&gt;&lt;u&gt;DO storage&lt;/u&gt;&lt;/a&gt;.Â &lt;/p&gt;&lt;p&gt;The decision to use Durable Object storage here makes it easy to multicast logs to multiple clients efficiently, and allows us to use the same API for both streaming logs and viewing historical logs.Â &lt;/p&gt;&lt;p&gt;// build-management-app.ts&lt;/p&gt;\n            &lt;pre class=\&quot;language-javascript\&quot;&gt;&lt;code class=\&quot;language-javascript\&quot;&gt;// We created a Hono app to for use by our Client Worker API\nconst app = new Hono&amp;lt;HonoContext&amp;gt;()\n   .post(\n       &amp;#039;/api/builds/:build_uuid/status&amp;#039;,\n       async (c) =&amp;gt; {\n           const buildStatus = await c.req.json()\n\n\n           // fetch build metadata\n           const build = ...\n\n\n           const bb = getBuildBuddy(c.env, build.build_id)\n           return await bb.handleStatusUpdate(build, statusUpdate)\n       }\n   )\n   .post(\n       &amp;#039;/api/builds/:build_uuid/logs&amp;#039;,\n       async (c) =&amp;gt; {\n           const logs = await c.req.json()\n     // fetch build metadata\n           const build = ...\n\n\n           const bb = getBuildBuddy(c.env, build.build_id)\n           return await bb.addLogLines(logs.lines)\n       }\n   )\n\n\nexport default {\n   fetch: app.fetch\n}\n&lt;/pre&gt;&lt;/code&gt;\n            &lt;p&gt;// build-buddy.ts&lt;/p&gt;\n            &lt;pre class=\&quot;language-javascript\&quot;&gt;&lt;code class=\&quot;language-javascript\&quot;&gt;import { DurableObject } from &amp;#039;cloudflare:workers&amp;#039;\n\n\nexport class BuildBuddy extends DurableObject {\n   compute: WorkersBuildsCompute\n\n\n   constructor(ctx: DurableObjectState, env: Bindings) {\n       super(ctx, env)\n       this.compute = new ComputeClient({\n           // ...\n       })\n   }\n\n\n   // The Scheduler DO calls startBuild upon creating a BuildBuddy instance\n   startBuild(build: Build): void {\n       this.startBuildAsync(build)         \n   }\n\n\n   async startBuildAsync(build: Build): Promise&amp;lt;void&amp;gt; {\n       // fetch all necessary metadata build, including\n\t// environment variables, secrets, build tokens, repo credentials, \n// build image URI, etc\n\t// ...\n\n\n\t// start a containerized build\n       const computeBuild = await this.compute.createBuild({\n           // ...\n       })\n   }\n\n\n   // The Build Management worker calls handleStatusUpdate when it receives an update\n   // from the containerized build\n   async handleStatusUpdate(\n       build: Build,\n       buildStatusUpdatePayload: Payload\n   ): Promise&amp;lt;void&amp;gt; {\n// Write status updates to the database\n   }\n\n\n   // The Build Management worker calls addLogLines when it receives flushed logs\n   // from the containerized build\n   async addLogLines(logs: LogLines): Promise&amp;lt;void&amp;gt; {\n       // Generate nextLogsKey to store logs under      \n       this.ctx.storage.put(nextLogsKey, logs)\n   }\n\n\n   // The Client Worker can call methods on a Build Buddy via RPC, using a service binding to the Build Management Worker.\n   // The getLogs method retrieves logs for the user, and the cancelBuild method forwards a request from the user to terminate a build. \n   async getLogs(cursor: string){\n       const decodedCursor = cursor !== undefined ? decodeLogsCursor(cursor) : undefined\n       return await this.getLogs(decodedCursor)\n   }\n\n\n   async cancelBuild(compute_id: string, build_id: string): void{\n      await this.terminateBuild(build_id, compute_id)\n   }\n\n\n   async terminateBuild(build_id: number, compute_id: string): Promise&amp;lt;void&amp;gt; {\n       await this.compute.stopBuild(compute_id)\n   }\n}\n\n\n   export function getBuildBuddy(\n   env: Pick&amp;lt;Bindings, &amp;#039;BUILD_BUDDY&amp;#039;&amp;gt;,\n   build_id: number\n): DurableObjectStub&amp;lt;BuildBuddy&amp;gt; {\n   const id = env.BUILD_BUDDY.idFromName(build_id.toString())\n   return env.BUILD_BUDDY.get(id)\n}\n&lt;/pre&gt;&lt;/code&gt;\n            &lt;h5&gt;Alarms&lt;/h5&gt;&lt;p&gt;We utilize &lt;a href=\&quot;https://developers.cloudflare.com/durable-objects/api/alarms/\&quot;&gt;&lt;u&gt;alarms&lt;/u&gt;&lt;/a&gt; in the Build Buddy to check that a build has a healthy startup and to terminate any builds that run longer than 20 minutes.Â &lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;how-else-have-we-leveraged-the-developer-platform\&quot;&gt;How else have we leveraged the Developer Platform?&lt;/h2&gt;\n            &lt;a href=\&quot;#how-else-have-we-leveraged-the-developer-platform\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Now that we&amp;#39;ve gone over the core behavior of the Workers Builds control plane, we&amp;#39;d like to detail a few other features of the Workers platform that we use to improve performance, monitor system health, and troubleshoot customer issues.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;smart-placement-and-location-hints\&quot;&gt;Smart Placement and location hints&lt;/h3&gt;\n            &lt;a href=\&quot;#smart-placement-and-location-hints\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;While our control plane is distributed in the sense that it can be run across multiple datacenters, to reduce latency costs, we want most requests to be served from locations close to our primary database in the western US.&lt;/p&gt;&lt;p&gt;While a build is running, Build Buddy, a Durable Object, is continuously writing status updates to our database. For the Client and the Build Management API Workers, we enabled &lt;a href=\&quot;https://developers.cloudflare.com/workers/configuration/smart-placement/\&quot;&gt;&lt;u&gt;Smart Placement&lt;/u&gt;&lt;/a&gt; with &lt;a href=\&quot;https://developers.cloudflare.com/durable-objects/reference/data-location/#provide-a-location-hint\&quot;&gt;&lt;u&gt;location hints&lt;/u&gt;&lt;/a&gt; to ensure requests run close to the database.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4hhFLpYizLZ6cyu4h80YL8/40af67320a6bf44f375d6055b2997a99/BLOG-2594_5.png\&quot; alt=\&quot;BLOG-2594 5\&quot; class=\&quot;kg-image\&quot; width=\&quot;987\&quot; height=\&quot;542\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;This graph shows the reduction in round trip time (RTT) observed for our Worker with Smart Placement turned on.Â &lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;workers-logs\&quot;&gt;Workers Logs&lt;/h3&gt;\n            &lt;a href=\&quot;#workers-logs\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;We needed a logging tool that allows us to aggregate and search across persistent operational logs from our Workers to assist with identifying and troubleshooting issues. We worked with the Workers Observability team to become early adopters of &lt;a href=\&quot;https://developers.cloudflare.com/workers/observability/logs/workers-logs\&quot;&gt;&lt;u&gt;Workers Logs&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Workers Logs worked out of the box, giving us fast and easy to use logs directly within the Cloudflare dashboard. To improve our ability to search logs, we created a &lt;a href=\&quot;https://www.npmjs.com/package/workers-tagged-logger\&quot;&gt;&lt;u&gt;tagging library&lt;/u&gt;&lt;/a&gt; that allows us to easily add metadata like the git tag of the deployed worker that the log comes from, allowing us to filter logs by release.&lt;/p&gt;&lt;p&gt;See a shortened example below for how we handle and log errors on the Client Worker.Â &lt;/p&gt;&lt;p&gt;// client-worker-app.ts&lt;/p&gt;\n            &lt;pre class=\&quot;language-javascript\&quot;&gt;&lt;code class=\&quot;language-javascript\&quot;&gt;// The Client Worker is a RESTful API built with Hono\nconst app = new Hono&amp;lt;HonoContext&amp;gt;()\n   // This is from the workers-tagged-logger library - first we register the logger\n   .use(useWorkersLogger(&amp;#039;client-worker-app&amp;#039;))\n   // If any error happens during execution, this middleware will ensure we log the error\n   .onError(useOnError)\n   // routes\n   .get(\n       &amp;#039;/apiv4/builds&amp;#039;,\n       async (c) =&amp;gt; {\n           const { ids } = c.req.query()\n           return await getBuildsByIds(c, ids)\n       }\n   )\n\n\nfunction useOnError(e: Error, c: Context&amp;lt;HonoContext&amp;gt;): Response {\n   // Set the project identifier n the error\n   logger.setTags({ release: c.env.GIT_TAG })\n \n   // Write a log at level &amp;#039;error&amp;#039;. Can also log &amp;#039;info&amp;#039;, &amp;#039;log&amp;#039;, &amp;#039;warn&amp;#039;, and &amp;#039;debug&amp;#039;\n   logger.error(e)\n   return c.json(internal_error.toJSON(), internal_error.statusCode)\n}\n&lt;/pre&gt;&lt;/code&gt;\n            &lt;p&gt;This setup can lead to the following sample log message from our Workers Log dashboard. You can see the release tag is set on the log.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6gfd725NCFNrhlDt3gK515/90138c159285e91535a986266918be13/BLOG-2594_6.png\&quot; alt=\&quot;BLOG-2594 6\&quot; class=\&quot;kg-image\&quot; width=\&quot;600\&quot; height=\&quot;490\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;We can get a better sense of the impact of the error by adding filters to the Workers Logs view, as shown below. We are able to filter on any of the fields since weâre &lt;a href=\&quot;https://developers.cloudflare.com/workers/observability/logs/workers-logs#logging-structured-json-objects\&quot;&gt;&lt;u&gt;logging with structured JSON&lt;/u&gt;&lt;/a&gt;.Â Â &lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6XqXINluVzzyHd4O17JsnZ/0ac714792a4d21623b4a875291ae0ad0/BLOG-2594_7.png\&quot; alt=\&quot;BLOG-2594 7\&quot; class=\&quot;kg-image\&quot; width=\&quot;472\&quot; height=\&quot;238\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;r2\&quot;&gt;R2&lt;/h3&gt;\n            &lt;a href=\&quot;#r2\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;Coming soon to Workers Builds is build caching, used to store artifacts of a build for subsequent builds to reuse, such as package dependencies and build outputs. Build caching can speed up customer builds by avoiding the need to redownload dependencies from NPM or to rebuild projects from scratch. The cache itself will be backed by &lt;a href=\&quot;https://developers.cloudflare.com/r2/\&quot;&gt;&lt;u&gt;R2&lt;/u&gt;&lt;/a&gt; storage.Â &lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;testing\&quot;&gt;Testing&lt;/h3&gt;\n            &lt;a href=\&quot;#testing\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;We were able to build up a great testing story using &lt;a href=\&quot;https://blog.cloudflare.com/workers-vitest-integration/\&quot;&gt;&lt;u&gt;Vitest and workerd&lt;/u&gt;&lt;/a&gt; â unit tests, cross-worker integration tests, the works. In the example below, we make use of the &lt;code&gt;runInDurableObject&lt;/code&gt; stub from &lt;code&gt;cloudflare:test&lt;/code&gt; to test instance methods on the Scheduler DO directly.&lt;/p&gt;&lt;p&gt;// scheduler.spec.ts&lt;/p&gt;\n            &lt;pre class=\&quot;language-javascript\&quot;&gt;&lt;code class=\&quot;language-javascript\&quot;&gt;import { env, runInDurableObject } from &amp;#039;cloudflare:test&amp;#039;\nimport { expect, test } from &amp;#039;vitest&amp;#039;\nimport { BuildScheduler } from &amp;#039;./scheduler&amp;#039;\n\n\ntest(&amp;#039;getBuildsToSchedule() runs a queued build&amp;#039;, async () =&amp;gt; {\n   // Our test harness creates a single build for our scheduler to pick up\n   const { build } = await harness.createBuild()\n\n\n   // We create a scheduler DO instance\n   const id = env.BUILD_SCHEDULER.idFromName(crypto.randomUUID())\n   const stub = env.BUILD_SCHEDULER.get(id)\n   await runInDurableObject(stub, async (instance: BuildScheduler) =&amp;gt; {\n       expect(instance).toBeInstanceOf(BuildScheduler)\n\n\n// We check that the scheduler picks up 1 build\n       const builds = await instance.getBuildsToSchedule()\n       expect(builds.length).toBe(1)\n\t\n// We start the build, which should mark it as running\n       await instance.scheduleBuilds(builds)\n   })\n\n\n   // Check that there are no more builds to schedule\n   const queuedBuilds = ...\n   expect(queuedBuilds.length).toBe(0)\n})\n&lt;/pre&gt;&lt;/code&gt;\n            &lt;p&gt;We use &lt;code&gt;SELF.fetch()&lt;/code&gt; from &lt;code&gt;cloudflare:test&lt;/code&gt; to run integration tests on our Client Worker, as shown below. This integration test covers our Hono endpoint and database queries made by the Client Worker in retrieving the metadata of a build.&lt;/p&gt;&lt;p&gt;// builds_api.test.ts&lt;/p&gt;\n            &lt;pre class=\&quot;language-javascript\&quot;&gt;&lt;code class=\&quot;language-javascript\&quot;&gt;import { env, SELF } from &amp;#039;cloudflare:test&amp;#039;\n   \nit(&amp;#039;correctly selects a single build&amp;#039;, async () =&amp;gt; {\n   // Our test harness creates a randomized build to test with\n   const { build } = await harness.createBuild()\n\n\n   // We send a request to the Client Worker itself to fetch the build metadata\n   const getBuild = await SELF.fetch(\n       `https://example.com/builds/${build1.build_uuid}`,\n       {\n           method: &amp;#039;GET&amp;#039;,\n           headers: new Headers({\n               Authorization: `Bearer JWT`,\n               &amp;#039;content-type&amp;#039;: &amp;#039;application/json&amp;#039;,\n           }),\n       }\n   )\n\n\n   // We expect to receive a 200 response from our request and for the \n   // build metadata returned to match that of the random build that we created\n   expect(getBuild.status).toBe(200)\n   const getBuildV4Resp = await getBuild.json()\n   const buildResp = getBuildV4Resp.result\n   expect(buildResp).toBeTruthy()\n   expect(buildResp).toEqual(build)\n})\n&lt;/pre&gt;&lt;/code&gt;\n            &lt;p&gt;These tests run on the same runtime that Workers run on in production, meaning we have greater confidence that any code changes will behave as expected when they go live.Â &lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;analytics\&quot;&gt;Analytics&lt;/h3&gt;\n            &lt;a href=\&quot;#analytics\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;We use the technology underlying the &lt;a href=\&quot;https://developers.cloudflare.com/analytics/analytics-engine/\&quot;&gt;&lt;u&gt;Workers Analytics Engine&lt;/u&gt;&lt;/a&gt; to collect all of the metrics for our system. We set up &lt;a href=\&quot;https://developers.cloudflare.com/analytics/analytics-engine/grafana/\&quot;&gt;&lt;u&gt;Grafana&lt;/u&gt;&lt;/a&gt; dashboards to display these metrics.Â &lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;javascript-native-rpc\&quot;&gt;JavaScript-native RPC&lt;/h3&gt;\n            &lt;a href=\&quot;#javascript-native-rpc\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;&lt;a href=\&quot;https://blog.cloudflare.com/javascript-native-rpc/\&quot;&gt;&lt;u&gt;JavaScript-native RPC&lt;/u&gt;&lt;/a&gt; was added to Workers in April of 2024, and itâs pretty magical. In the scheduler code example above, we call &lt;code&gt;startBuild()&lt;/code&gt; on the BuildBuddy DO from the Scheduler DO. Without RPC, we would need to stand up routes on the BuildBuddy &lt;code&gt;fetch()&lt;/code&gt; handler for the Scheduler to trigger with a fetch request. With RPC, there is almost no boilerplate â all we need to do is call a method on a class.Â &lt;/p&gt;\n            &lt;pre class=\&quot;language-javascript\&quot;&gt;&lt;code class=\&quot;language-javascript\&quot;&gt;const bb = getBuildBuddy(this.env, build.build_id)\n\n\n// Starting a build without RPC ð¢\nawait bb.fetch(&amp;#039;http://do/api/start_build&amp;#039;, {\n    method: &amp;#039;POST&amp;#039;,\n    body: JSON.stringify(build),\n})\n\n\n// Starting a build with RPC ð¸\nawait bb.startBuild(build)\n&lt;/pre&gt;&lt;/code&gt;\n            \n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;conclusion\&quot;&gt;Conclusion&lt;/h2&gt;\n            &lt;a href=\&quot;#conclusion\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;By using Workers and Durable Objects, we were able to build a complex and distributed system that is easy to understand and is easily scalable.Â &lt;/p&gt;&lt;p&gt;Itâs been a blast for our team to build on top of the very platform that we work on, something that would have been much harder to achieve on Workers just a few years ago. We believe in being Customer Zero for our own products â to identify pain points firsthand and to continuously improve the developer experience by applying them to our own use cases. It was fulfilling to have our needs as developers met by other teams and then see those tools quickly become available to the rest of the world â we were collaborators and internal testers for Workers Logs and private network support for Hyperdrive (both released on Birthday Week), and the soon to be released container platform.&lt;/p&gt;&lt;p&gt;Opportunities to build complex applications on the Developer Platform have increased in recent years as the platform has matured and expanded product offerings for more use cases. We hope that Workers Builds will be yet another tool in the Workers toolbox that enables developers to spend less time thinking about configuration and more time writing code.Â &lt;/p&gt;&lt;p&gt;Want to try it out? Check out the &lt;a href=\&quot;https://developers.cloudflare.com/workers/ci-cd/builds/\&quot;&gt;&lt;u&gt;docs&lt;/u&gt;&lt;/a&gt; to learn more about how to deploy your first project with Workers Builds.&lt;/p&gt;&quot;],&quot;published_at&quot;:[0,&quot;2024-10-31T13:00+00:00&quot;],&quot;updated_at&quot;:[0,&quot;2024-10-31T13:00:02.371Z&quot;],&quot;feature_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/le4lYyHpoBKwuVJbiH4eW/793952ca6fa5a152d029526991db31f4/BLOG-2594_1.png&quot;],&quot;tags&quot;:[1,[[0,{&quot;id&quot;:[0,&quot;3JAY3z7p7An94s6ScuSQPf&quot;],&quot;name&quot;:[0,&quot;Developer Platform&quot;],&quot;slug&quot;:[0,&quot;developer-platform&quot;]}],[0,{&quot;id&quot;:[0,&quot;4HIPcb68qM0e26fIxyfzwQ&quot;],&quot;name&quot;:[0,&quot;Developers&quot;],&quot;slug&quot;:[0,&quot;developers&quot;]}],[0,{&quot;id&quot;:[0,&quot;1Efeqd1oZ7vy3xls0fdjHF&quot;],&quot;name&quot;:[0,&quot;Agile Developer Services&quot;],&quot;slug&quot;:[0,&quot;agile-developer-services&quot;]}],[0,{&quot;id&quot;:[0,&quot;6hbkItfupogJP3aRDAq6v8&quot;],&quot;name&quot;:[0,&quot;Cloudflare Workers&quot;],&quot;slug&quot;:[0,&quot;workers&quot;]}]]],&quot;relatedTags&quot;:[0],&quot;authors&quot;:[1,[[0,{&quot;name&quot;:[0,&quot;Serena Shah-Simpson&quot;],&quot;slug&quot;:[0,&quot;serena&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2cLxQm0wbdpyGirexVcdpr/2f6ae5b415dc4515cfffc2a4090bb9d3/serena.PNG&quot;],&quot;location&quot;:[0,null],&quot;website&quot;:[0,null],&quot;twitter&quot;:[0,null],&quot;facebook&quot;:[0,null]}],[0,{&quot;name&quot;:[0,&quot;Jacob Hands&quot;],&quot;slug&quot;:[0,&quot;jacob-hands&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1u48WVfES8uNb77aB2z9bk/9bfef685adbdef1298e57959119d5931/jacob-hands.jpeg&quot;],&quot;location&quot;:[0,null],&quot;website&quot;:[0,null],&quot;twitter&quot;:[0,&quot;@jachands&quot;],&quot;facebook&quot;:[0,null]}],[0,{&quot;name&quot;:[0,&quot;Natalie Rogers&quot;],&quot;slug&quot;:[0,&quot;natalie&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7yLLjP9Y2l0cJdBrPMfrre/73f6d2b7a9c41cdf2f3dc9a5016d3a8d/natalie.png&quot;],&quot;location&quot;:[0,null],&quot;website&quot;:[0,null],&quot;twitter&quot;:[0,null],&quot;facebook&quot;:[0,null]}]]],&quot;meta_description&quot;:[0,&quot;Workers Builds, an integrated CI/CD pipeline for the Workers platform, recently launched in open beta. We walk through how we built this product on Cloudflareâs Developer Platform.&quot;],&quot;primary_author&quot;:[0,{}],&quot;localeList&quot;:[0,{&quot;name&quot;:[0,&quot;blog-english-only&quot;],&quot;enUS&quot;:[0,&quot;English for Locale&quot;],&quot;zhCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhHansCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhTW&quot;:[0,&quot;No Page for Locale&quot;],&quot;frFR&quot;:[0,&quot;No Page for Locale&quot;],&quot;deDE&quot;:[0,&quot;No Page for Locale&quot;],&quot;itIT&quot;:[0,&quot;No Page for Locale&quot;],&quot;jaJP&quot;:[0,&quot;No Page for Locale&quot;],&quot;koKR&quot;:[0,&quot;No Page for Locale&quot;],&quot;ptBR&quot;:[0,&quot;No Page for Locale&quot;],&quot;esLA&quot;:[0,&quot;No Page for Locale&quot;],&quot;esES&quot;:[0,&quot;No Page for Locale&quot;],&quot;enAU&quot;:[0,&quot;No Page for Locale&quot;],&quot;enCA&quot;:[0,&quot;No Page for Locale&quot;],&quot;enIN&quot;:[0,&quot;No Page for Locale&quot;],&quot;enGB&quot;:[0,&quot;No Page for Locale&quot;],&quot;idID&quot;:[0,&quot;No Page for Locale&quot;],&quot;ruRU&quot;:[0,&quot;No Page for Locale&quot;],&quot;svSE&quot;:[0,&quot;No Page for Locale&quot;],&quot;viVN&quot;:[0,&quot;No Page for Locale&quot;],&quot;plPL&quot;:[0,&quot;No Page for Locale&quot;],&quot;arAR&quot;:[0,&quot;No Page for Locale&quot;],&quot;nlNL&quot;:[0,&quot;No Page for Locale&quot;],&quot;thTH&quot;:[0,&quot;No Page for Locale&quot;],&quot;trTR&quot;:[0,&quot;No Page for Locale&quot;],&quot;heIL&quot;:[0,&quot;No Page for Locale&quot;],&quot;lvLV&quot;:[0,&quot;No Page for Locale&quot;],&quot;etEE&quot;:[0,&quot;No Page for Locale&quot;],&quot;ltLT&quot;:[0,&quot;No Page for Locale&quot;]}],&quot;url&quot;:[0,&quot;https://blog.cloudflare.com/workers-builds-integrated-ci-cd-built-on-the-workers-platform&quot;],&quot;metadata&quot;:[0,{&quot;title&quot;:[0,&quot;Workers Builds: integrated CI/CD built on the Workers platform&quot;],&quot;description&quot;:[0,&quot;Workers Builds, an integrated CI/CD pipeline for the Workers platform, recently launched in open beta. We walk through how we built this product on Cloudflareâs Developer Platform.&quot;],&quot;imgPreview&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2chCtOBT6VDwfihl8rpHmt/1539f97126503921530ff0fd61d343aa/Workers_Builds-_integrated_CI_CD_built_on_the_Workers_platform-OG.png&quot;]}]}],[0,{&quot;id&quot;:[0,&quot;6heSTMT0I5jl0vpeR9TucD&quot;],&quot;title&quot;:[0,&quot;Moving Baselime from AWS to Cloudflare: simpler architecture, improved performance, over 80% lower cloud costs&quot;],&quot;slug&quot;:[0,&quot;80-percent-lower-cloud-cost-how-baselime-moved-from-aws-to-cloudflare&quot;],&quot;excerpt&quot;:[0,&quot;Post-acquisition, we migrated Baselime from AWS to the Cloudflare Developer Platform and in the process, we improved query times, simplified data ingestion, and now handle far more events, all while cutting costs. Hereâs how we built a modern, high-performing observability platform on Cloudflareâs network. &quot;],&quot;featured&quot;:[0,false],&quot;html&quot;:[0,&quot;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;introduction\&quot;&gt;Introduction&lt;/h2&gt;\n            &lt;a href=\&quot;#introduction\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;When &lt;a href=\&quot;https://blog.cloudflare.com/cloudflare-acquires-baselime-expands-observability-capabilities/\&quot;&gt;&lt;u&gt;Baselime joined Cloudflare&lt;/u&gt;&lt;/a&gt; in April 2024, our architecture had evolved to hundreds of AWS Lambda functions, dozens of databases, and just as many queues. We were drowning in complexity and our cloud costs were growing fast. We are now building &lt;a href=\&quot;https://baselime.io/\&quot;&gt;&lt;u&gt;Baselime&lt;/u&gt;&lt;/a&gt; and &lt;a href=\&quot;https://developers.cloudflare.com/workers/observability/logs/workers-logs/\&quot;&gt;&lt;u&gt;Workers Observability&lt;/u&gt;&lt;/a&gt; on Cloudflare and will save over 80% on our cloud compute bill. The estimated potential Cloudflare costs are for Baselime, which remains a stand-alone offering, and the estimate is based on the &lt;a href=\&quot;https://developers.cloudflare.com/workers/platform/pricing/\&quot;&gt;&lt;u&gt;Workers Paid plan&lt;/u&gt;&lt;/a&gt;. Not only did we achieve huge cost savings, we also simplified our architecture and improved overall latency, scalability, and reliability.&lt;/p&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;b&gt;Cost (daily)&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;b&gt;Before (AWS)&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;b&gt;After (Cloudflare)&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Compute&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;$650 - AWS Lambda&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;$25 - Cloudflare Workers&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;CDN&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;$140 - Cloudfront&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;$0 - Free&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Data Stream + Analytics database&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;$1,150 - Kinesis Data Stream + EC2&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;$300 - Workers Analytics Engine&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Total (daily)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;$1,940&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;$325&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;b&gt;Total (annual)&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;b&gt;$708,100&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;b&gt;$118,625&lt;/b&gt; (83% cost reduction)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;sub&gt;&lt;i&gt;Table 1: AWS vs. Workers Costs Comparison ($USD)&lt;/i&gt;&lt;/sub&gt;&lt;/p&gt;&lt;p&gt;When we joined Cloudflare, we immediately saw a surge in usage, and within the first week following the announcement, we were processing over a billion events daily and our weekly active users tripled.&lt;/p&gt;&lt;p&gt;As the platform grew, so did the challenges of managing real-time observability with new scalability, reliability, and cost considerations. This drove us to rebuild Baselime on the Cloudflare Developer Platform, where we could innovate quickly while reducing operational overhead.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;initial-architecture-all-on-aws\&quot;&gt;Initial architecture â all on AWS&lt;/h2&gt;\n            &lt;a href=\&quot;#initial-architecture-all-on-aws\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Our initial architecture was all on Amazon Web Services (AWS). Weâll focus here on the data pipeline, which covers ingestion, processing, and storage of tens of billions of events daily.&lt;/p&gt;&lt;p&gt;This pipeline was built on top of AWS Lambda, Cloudfront, Kinesis, EC2, DynamoDB, ECS, and ElastiCache.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1ruQuVe7kcd31FOS91nstS/9d422e751e0d2d3a90d603e6adcd5c48/image1.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1999\&quot; height=\&quot;1167\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;&lt;sup&gt;&lt;i&gt;Figure1: Initial data pipeline architecture&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;The key elements are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;Data receptors&lt;/b&gt;: Responsible for receiving telemetry data from multiple sources, including OpenTelemetry, Cloudflare Logpush, CloudWatch, Vercel, etc. They cover validation, authentication, and transforming data from each source into a common internal format. The data receptors were deployed either on AWS Lambda (using function URLs and Cloudfront) or ECS Fargate depending on the data source.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;Kinesis Data Stream&lt;/b&gt;: Responsible for transporting the data from the receptors to the next step: data processing.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;Processor&lt;/b&gt;: A single AWS Lambda function responsible for enriching and transforming the data for storage. It also performed real-time error tracking and detecting patterns in logs.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;ClickHouse cluster&lt;/b&gt;: All the telemetry data was ultimately indexed and stored in a self-hosted ClickHouse cluster on EC2.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In addition to these key elements, the existing stack also included orchestration with Firehose, S3 buckets, SQS, DynamoDB and RDS for error handling, retries, and storing metadata.&lt;/p&gt;&lt;p&gt;While this architecture served us well in the early days, it started to show major cracks as we scaled our solution to more and larger customers.&lt;/p&gt;&lt;p&gt;Handling retries at the interface between the data receptors and the Kinesis Data Stream was complex, requiring introducing and orchestrating Firehose, S3 buckets, SQS, and another Lambda function.&lt;/p&gt;&lt;p&gt;Self-hosting ClickHouse also introduced major challenges at scale, as we continuously had to plan our capacity and update our setup to keep pace with our growing user base whilst attempting to maintain control over costs.&lt;/p&gt;&lt;p&gt;Costs began scaling unpredictably with our growing workloads, especially in AWS Lambda, Kinesis, and EC2, but also in less obvious ways, such as in Cloudfront (required for a custom domain in front of Lambda function URLs) and DynamoDB. Specifically, the time spent on I/O operations in AWS Lambda was a particularly costly piece. At every step, from the data receptors to the ClickHouse cluster, moving data to the next stage required waiting for a network request to complete, accounting for over 70% of wall time in the Lambda function.&lt;/p&gt;&lt;p&gt;In a nutshell, we were continuously paged by our alerts, innovating at a slower pace, and our costs were out of control.&lt;/p&gt;&lt;p&gt;Additionally, the entire solution was deployed in a single AWS region: eu-west-1. As a result, all developers located outside continental Europe were experiencing high latency when emitting logs and traces to Baselime.Â &lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;modern-architecture-transitioning-to-cloudflare\&quot;&gt;Modern architecture â transitioning to Cloudflare&lt;/h2&gt;\n            &lt;a href=\&quot;#modern-architecture-transitioning-to-cloudflare\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;The shift to the &lt;a href=\&quot;https://www.cloudflare.com/en-gb/developer-platform/products/\&quot;&gt;&lt;u&gt;Cloudflare Developer Platform&lt;/u&gt;&lt;/a&gt; enabled us to rethink our architecture to be exceptionally fast, globally distributed, and highly scalable, without compromising on cost, complexity, or agility. This new architecture is built on top of Cloudflare primitives.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/16ndcTUS2vAg6TM4djTGUH/0e187d50ae466c275839c6aac91e5249/image5.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1999\&quot; height=\&quot;1266\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;&lt;sup&gt;&lt;i&gt;Figure 2: Modern data pipeline architecture&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;cloudflare-workers-the-core-of-baselime\&quot;&gt;Cloudflare Workers: the core of Baselime&lt;/h3&gt;\n            &lt;a href=\&quot;#cloudflare-workers-the-core-of-baselime\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;&lt;a href=\&quot;https://www.cloudflare.com/developer-platform/workers/\&quot;&gt;&lt;u&gt;Cloudflare Workers&lt;/u&gt;&lt;/a&gt; are now at the core of everything we do. All the data receptors and the processor run in Workers. Workers minimize cold-start times and are deployed globally by default. As such, developers always experience lower latency when emitting events to Baselime.&lt;/p&gt;&lt;p&gt;Additionally, we heavily use &lt;a href=\&quot;https://blog.cloudflare.com/javascript-native-rpc/\&quot;&gt;&lt;u&gt;JavaScript-native RPC&lt;/u&gt;&lt;/a&gt; for data transfer between steps of the pipeline. Itâs low-latency, lightweight, and simplifies communication between components. This further simplifies our architecture, as separate components behave more as functions within the same process, rather than completely separate applications.&lt;/p&gt;\n            &lt;pre class=\&quot;language-JavaScript\&quot;&gt;&lt;code class=\&quot;language-JavaScript\&quot;&gt;export default {\n  async fetch(request: Request, env: Bindings, ctx: ExecutionContext): Promise&amp;lt;Response&amp;gt; {\n      try {\n        const { err, apiKey } = auth(request);\n        if (err) return err;\n\n        const data = {\n          workspaceId: apiKey.workspaceId,\n          environmentId: apiKey.environmentId,\n          events: request.body\n        };\n        await env.PROCESSOR.ingest(data);\n\n        return success({ message: &amp;quot;Request Accepted&amp;quot; }, 202);\n      } catch (error) {\n        return failure({ message: &amp;quot;Internal Error&amp;quot; });\n      }\n  },\n};&lt;/pre&gt;&lt;/code&gt;\n            &lt;p&gt;&lt;sup&gt;&lt;i&gt;Code Block 1: Simplified data receptor using JavaScript-native RPC to execute the processor.&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;Workers also expose a &lt;a href=\&quot;https://developers.cloudflare.com/workers/runtime-apis/bindings/rate-limit/\&quot;&gt;&lt;u&gt;Rate Limiting binding&lt;/u&gt;&lt;/a&gt; that enables us to automatically add rate limiting to our services, which we previously had to build ourselves using a combination of DynamoDB and ElastiCache.&lt;/p&gt;&lt;p&gt;Moreover, we heavily use &lt;code&gt;ctx.waitUntil&lt;/code&gt; within our Worker invocations, to offload data transformation outside the request / response path. This further reduces the latency of calls developers make to our data receptors.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;durable-objects-stateful-data-processing\&quot;&gt;Durable Objects: stateful data processing&lt;/h3&gt;\n            &lt;a href=\&quot;#durable-objects-stateful-data-processing\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;&lt;a href=\&quot;https://www.cloudflare.com/en-gb/developer-platform/durable-objects/\&quot;&gt;&lt;u&gt;Durable Objects&lt;/u&gt;&lt;/a&gt; is a unique service within the Cloudflare Developer Platform, as it enables building stateful applications in a serverless environment. We use Durable Objects in the data pipelines for both real-time error tracking and detecting log patterns.&lt;/p&gt;&lt;p&gt;For instance, to track errors in real-time, we create a durable object for each new type of error, and this durable object is responsible for keeping track of the frequency of the error, when to notify customers, and the notification channels for the error. &lt;b&gt;This implementation with a single building block removes the need for ElastiCache, Kinesis, and multiple Lambda functions to coordinate protecting the RDS database from being overwhelmed by a high frequency error.&lt;/b&gt;&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/14SC0ackxCGiRxAr8DY1Vs/c5729735296552013765c298af802b38/image4.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1784\&quot; height=\&quot;952\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;&lt;sup&gt;&lt;i&gt;Figure 3: Real-time error detection architecture comparison&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;Durable Objects gives us precise control over consistency and concurrency of managing state in the data pipeline.&lt;/p&gt;&lt;p&gt;In addition to the data pipeline, we use Durable Objects for alerting. Our previous architecture required orchestrating EventBridge Scheduler, SQS, DynamoDB and multiple AWS Lambda functions, whereas with Durable Objects, everything is handled within the &lt;code&gt;alarm&lt;/code&gt; handler.Â &lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;workers-analytics-engine-high-cardinality-analytics-at-scale\&quot;&gt;Workers Analytics Engine: high-cardinality analytics at scale&lt;/h3&gt;\n            &lt;a href=\&quot;#workers-analytics-engine-high-cardinality-analytics-at-scale\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;Though managing our own ClickHouse cluster was technically interesting and challenging, it took us away from building the best observability developer experience. With this migration, more of our time is spent enhancing our product and none is spent managing server instances.&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;https://developers.cloudflare.com/analytics/analytics-engine/\&quot;&gt;&lt;u&gt;Workers Analytics Engine&lt;/u&gt;&lt;/a&gt; lets us synchronously write events to a scalable high-cardinality analytics database. We built on top of the same technology that powers Workers Analytics Engine. We also made internal changes to Workers Analytics Engine to natively enable high dimensionality in addition to high cardinality.&lt;/p&gt;&lt;p&gt;Moreover, Workers Analytics Engine and our solution leverages &lt;a href=\&quot;https://blog.cloudflare.com/explaining-cloudflares-abr-analytics/\&quot;&gt;&lt;u&gt;Cloudflareâs ABR analytics&lt;/u&gt;&lt;/a&gt;. ABR stands for Adaptive Bit Rate, and enables us to store telemetry data in multiple tables with varying resolutions, from 100% to 0.0001% of the data. Querying the table with 0.0001% of the data will be several orders of magnitudes faster than the table with all the data, with a corresponding trade-off in accuracy. As such, when a query is sent to our systems, Workers Analytics Engine dynamically selects the most appropriate table to run the query, optimizing both query time and accuracy. Users always get the most accurate result with optimal query time, regardless of the size of their dataset or the timeframe of the query. Compared to our previous system, which was always running queries on the full dataset, the new system now delivers faster queries across our entire user base and use cases&lt;i&gt;.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;In addition to these core services (Workers, Durable Objects, Workers Analytics Engine), the new architecture leverages other building blocks from the Cloudflare Developer Platform. &lt;a href=\&quot;https://www.cloudflare.com/en-gb/developer-platform/products/cloudflare-queues/\&quot;&gt;&lt;u&gt;Queues&lt;/u&gt;&lt;/a&gt; for asynchronous messaging, decoupling services and enabling an event-driven architecture; &lt;a href=\&quot;https://www.cloudflare.com/en-gb/developer-platform/d1/\&quot;&gt;&lt;u&gt;D1&lt;/u&gt;&lt;/a&gt; as our main database for transactional data (queries, alerts, dashboards, configurations, etc.); &lt;a href=\&quot;https://www.cloudflare.com/en-gb/developer-platform/workers-kv/\&quot;&gt;&lt;u&gt;Workers KV&lt;/u&gt;&lt;/a&gt; for fast distributed storage; &lt;a href=\&quot;https://hono.dev/\&quot;&gt;&lt;u&gt;Hono&lt;/u&gt;&lt;/a&gt; for all our APIs, etc.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;how-did-we-migrate\&quot;&gt;How did we migrate?&lt;/h2&gt;\n            &lt;a href=\&quot;#how-did-we-migrate\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Baselime is built on an event-driven architecture, where every user action triggers an event. It operates on the principle that every user action is recorded as an event and emitted to the rest of the system â whether itâs creating a user, editing a dashboard, or performing any other action. Migrating to Cloudflare involved transitioning our event-driven architecture without compromising uptime and data consistency. Previously, this was powered by AWS EventBridge and SQS, and we moved entirely to Cloudflare Queues.&lt;/p&gt;&lt;p&gt;We followed the &lt;a href=\&quot;https://martinfowler.com/bliki/StranglerFigApplication.html\&quot;&gt;&lt;u&gt;strangler fig pattern&lt;/u&gt;&lt;/a&gt; to incrementally migrate the solution from AWS to Cloudflare. It consists of gradually replacing specific parts of the system with newer services, with minimal disruption to the system. Early in the process, we created a central Cloudflare Queue which acted as the backbone for all transactional event processing during the migration. Every event, whether a new user signup or a dashboard edit, was funneled into this Queue. From there, events were dynamically routed, each event to the relevant part of the application. User actions were synced into D1 and KV, ensuring that all user actions were mirrored across both AWS and Cloudflare during the transition.&lt;/p&gt;&lt;p&gt;This syncing mechanism enabled us to maintain consistency and ensure that no data was lost as users continued to interact with Baselime.&lt;/p&gt;&lt;p&gt;Here&amp;#39;s an example of how events are processed:&lt;/p&gt;\n            &lt;pre class=\&quot;language-JavaScript\&quot;&gt;&lt;code class=\&quot;language-JavaScript\&quot;&gt;export default {\n  async queue(batch, env) {\n    for (const message of batch.messages) {\n      try {\n        const event = message.body;\n        switch (event.type) {\n          case &amp;quot;WORKSPACE_CREATED&amp;quot;:\n            await workspaceHandler.create(env, event.data);\n            break;\n          case &amp;quot;QUERY_CREATED&amp;quot;:\n            await queryHandler.create(env, event.data);\n            break;\n          case &amp;quot;QUERY_DELETED&amp;quot;:\n            await queryHandler.remove(env, event.data);\n            break;\n          case &amp;quot;DASHBOARD_CREATED&amp;quot;:\n            await dashboardHandler.create(env, event.data);\n            break;\n          //\n          // Many more events...\n          //\n          default:\n            logger.info(&amp;quot;Matched no events&amp;quot;, { type: event.type });\n        }\n        message.ack();\n      } catch (e) {\n        if (message.attempts &amp;lt; 3) {\n          message.retry({ delaySeconds: Math.ceil(30 ** message.attempts / 10), });\n        } else {\n          logger.error(&amp;quot;Failed handling event - No more retrys&amp;quot;, { event: message.body, attempts: message.attempts }, e);\n        }\n      }\n    }\n  },\n} satisfies ExportedHandler&amp;lt;Env, InternalEvent&amp;gt;;&lt;/pre&gt;&lt;/code&gt;\n            &lt;p&gt;&lt;sup&gt;&lt;i&gt;Code Block 2: Simplified internal events processing during migration.&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;We migrated the data pipeline from AWS to Cloudflare with an outside-in method: we started with the data receptors and incrementally moved the data processor and the ClickHouse cluster to the new architecture. We began writing telemetry data (logs, metrics, traces, wide-events, etc.) to both ClickHouse (in AWS) and to Workers Analytics Engine simultaneously for the duration of the retention period (30 days).&lt;/p&gt;&lt;p&gt;The final step was rewriting all of our endpoints, previously hosted on AWS Lambda and ECS containers, into Cloudflare Workers. Once those Workers were ready, we simply switched the DNS records to point to the Workers instead of the existing Lambda functions.&lt;/p&gt;&lt;p&gt;Despite the complexity, the entire migration process, from the data pipeline to all re-writing API endpoints, took our then team of 3 engineers less than three months.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;we-ended-up-saving-over-80-on-our-cloud-bill\&quot;&gt;We ended up saving over 80% on our cloud bill&lt;/h2&gt;\n            &lt;a href=\&quot;#we-ended-up-saving-over-80-on-our-cloud-bill\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          \n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;savings-on-the-data-receptors\&quot;&gt;Savings on the data receptors&lt;/h3&gt;\n            &lt;a href=\&quot;#savings-on-the-data-receptors\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;After switching the data receptors from AWS to Cloudflare in early June 2024, our AWS Lambda cost was reduced by over 85%. These costs were primarily driven by I/O time the receptors spent sending data to a Kinesis Data Stream in the same region.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6P34XkcxEhqR6cjWAGnZaL/54025f08f4642649b7ae53fbaa3775b4/image3.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1954\&quot; height=\&quot;1208\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;&lt;sup&gt;&lt;i&gt;Figure 4: Baselime daily AWS Lambda cost [note: the gap in data is the result of AWS Cost Explorer losing data when the parent organization of the cloud accounts was changed.]&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;Moreover, we used Cloudfront to enable custom domains pointing to the data receptors. When we migrated the data receptors to Cloudflare, there was no need for Cloudfront anymore. As such, our Cloudfront cost was reduced to $0.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1vj3JUrE580W749VX8JMBj/c82477d00fe33fba1ffd8658ef0a1229/image2.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1880\&quot; height=\&quot;1164\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;&lt;sup&gt;&lt;i&gt;Figure 5: Baselime daily Cloudfront cost [note: the gap in data is the result of AWS Cost Explorer losing data when the parent organization of the cloud accounts was changed.]&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;If we were a regular Cloudflare customer, we estimate that our Cloudflare Workers bill would be around \\$25/day after the switch, against \\$790/day on AWS: over 95% cost reduction. These savings are primarily driven by the Workers pricing model, since Workers charge for CPU time, and the receptors are primarily just moving data, and as such, are mostly I/O bound.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h3 id=\&quot;savings-on-the-clickhouse-cluster\&quot;&gt;Savings on the ClickHouse cluster&lt;/h3&gt;\n            &lt;a href=\&quot;#savings-on-the-clickhouse-cluster\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n        &lt;p&gt;To evaluate the cost impact of switching from self-hosting ClickHouse to using Workers Analytics Engine, we need to take into account not only the EC2 instances, but also the disk space, networking, and the Kinesis Data Stream cost.&lt;/p&gt;&lt;p&gt;We completed this switch in late August, achieving over 95% cost reduction in both the Kinesis Data Stream and all EC2 related costs.&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3hpbfmwC5vEjDXeSIC2XIr/d103e813848926f224efe6e22e0717ce/image9.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1764\&quot; height=\&quot;1092\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;&lt;sup&gt;&lt;i&gt;Figure 6: Baselime daily Kinesis Data Stream cost [note: the gap in data is the result of AWS Cost Explorer losing data when the parent organization of the cloud accounts was changed.]&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7aBU0TVUoRTC5GAo3HkS0N/eebb0559ad8d32b56e20f1e5c6121c6f/image6.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1810\&quot; height=\&quot;1118\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;&lt;p&gt;&lt;sup&gt;&lt;i&gt;Figure 7: Baselime daily EC2 cost [note: the gap in data is the result of AWS Cost Explorer losing data when the parent organization of the cloud accounts was changed.]&lt;/i&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;If we were a regular Cloudflare customer, we estimate that our Workers Analytics Engine cost would be around \\$300/day after the switch, compared to \\$1150/day on AWS, a cost reduction of over 70%.&lt;/p&gt;&lt;p&gt;Not only did we significantly reduce costs by migrating to Cloudflare, but we also improved performance across the board. Responses to users are now faster, with real-time event ingestion happening across Cloudflareâs network, closer to our users. Responses to users querying their data are also much faster, thanks to Cloudflareâs deep expertise in operating ClickHouse at scale.&lt;/p&gt;&lt;p&gt;Most importantly, weâre no longer bound by limitations in throughput or scale. We launched &lt;a href=\&quot;https://developers.cloudflare.com/workers/observability/logs/workers-logs\&quot;&gt;&lt;u&gt;Workers Logs&lt;/u&gt;&lt;/a&gt; on September 26, 2024, and our system now handles a much higher volume of events than before, with no sacrifices in speed or reliability.&lt;/p&gt;&lt;p&gt;These cost savings are outstanding as is, and do not include the total cost of ownership of those systems. We significantly simplified our systems and our codebase, as the platform is taking care of more for us. Weâre paged less, we spend less time monitoring infrastructure, and we can focus on delivering product improvements.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;conclusion\&quot;&gt;Conclusion&lt;/h2&gt;\n            &lt;a href=\&quot;#conclusion\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Migrating Baselime to Cloudflare has transformed how we build and scale our platform. With Workers, Durable Objects, Workers Analytics Engine, and other services, we now run a fully serverless, globally distributed system thatâs more cost-efficient and agile. This shift has significantly reduced our operational overhead and enabled us to iterate faster, delivering better observability tooling to our users.&lt;/p&gt;&lt;p&gt;You can start observing your Cloudflare Workers today with &lt;a href=\&quot;https://developers.cloudflare.com/workers/observability/logs/workers-logs/\&quot;&gt;&lt;u&gt;Workers Logs&lt;/u&gt;&lt;/a&gt;. Looking ahead, weâre excited about the features we will deliver directly in the Cloudflare Dashboard, including real-time error tracking, alerting, and a query builder for high-cardinality and dimensionality events. All coming by early 2025.&lt;/p&gt;&quot;],&quot;published_at&quot;:[0,&quot;2024-10-31T13:00+00:00&quot;],&quot;updated_at&quot;:[0,&quot;2024-11-06T22:04:04.990Z&quot;],&quot;feature_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/zbKwujxs7AurcoYvCxViK/d607265ac330f801474fd0032096554a/image8.png&quot;],&quot;tags&quot;:[1,[[0,{&quot;id&quot;:[0,&quot;4wT3L4bOFuElnUMa5pXS2G&quot;],&quot;name&quot;:[0,&quot;Observability&quot;],&quot;slug&quot;:[0,&quot;observability&quot;]}],[0,{&quot;id&quot;:[0,&quot;6hbkItfupogJP3aRDAq6v8&quot;],&quot;name&quot;:[0,&quot;Cloudflare Workers&quot;],&quot;slug&quot;:[0,&quot;workers&quot;]}],[0,{&quot;id&quot;:[0,&quot;3JAY3z7p7An94s6ScuSQPf&quot;],&quot;name&quot;:[0,&quot;Developer Platform&quot;],&quot;slug&quot;:[0,&quot;developer-platform&quot;]}],[0,{&quot;id&quot;:[0,&quot;4gN0ARax0fHxjtZL07THOe&quot;],&quot;name&quot;:[0,&quot;Performance&quot;],&quot;slug&quot;:[0,&quot;performance&quot;]}]]],&quot;relatedTags&quot;:[0],&quot;authors&quot;:[1,[[0,{&quot;name&quot;:[0,&quot;Boris Tane&quot;],&quot;slug&quot;:[0,&quot;boris-tane&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/570GjDLUB2KlB5t5sAfNK4/a46fe8d504b141af05c2aebe45cb96cf/boris-tane.jpg&quot;],&quot;location&quot;:[0,null],&quot;website&quot;:[0,null],&quot;twitter&quot;:[0,&quot;@BorisTane&quot;],&quot;facebook&quot;:[0,null]}]]],&quot;meta_description&quot;:[0,&quot;Post-acquisition, we migrated Baselime from AWS to the Cloudflare Developer Platform and in the process, we improved query times, simplified data ingestion, and now handle far more events, all while cutting costs. Hereâs how we built a modern, high-performing observability platform on Cloudflareâs network.&quot;],&quot;primary_author&quot;:[0,{}],&quot;localeList&quot;:[0,{&quot;name&quot;:[0,&quot;blog-english-only&quot;],&quot;enUS&quot;:[0,&quot;English for Locale&quot;],&quot;zhCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhHansCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhTW&quot;:[0,&quot;No Page for Locale&quot;],&quot;frFR&quot;:[0,&quot;No Page for Locale&quot;],&quot;deDE&quot;:[0,&quot;No Page for Locale&quot;],&quot;itIT&quot;:[0,&quot;No Page for Locale&quot;],&quot;jaJP&quot;:[0,&quot;No Page for Locale&quot;],&quot;koKR&quot;:[0,&quot;No Page for Locale&quot;],&quot;ptBR&quot;:[0,&quot;No Page for Locale&quot;],&quot;esLA&quot;:[0,&quot;No Page for Locale&quot;],&quot;esES&quot;:[0,&quot;No Page for Locale&quot;],&quot;enAU&quot;:[0,&quot;No Page for Locale&quot;],&quot;enCA&quot;:[0,&quot;No Page for Locale&quot;],&quot;enIN&quot;:[0,&quot;No Page for Locale&quot;],&quot;enGB&quot;:[0,&quot;No Page for Locale&quot;],&quot;idID&quot;:[0,&quot;No Page for Locale&quot;],&quot;ruRU&quot;:[0,&quot;No Page for Locale&quot;],&quot;svSE&quot;:[0,&quot;No Page for Locale&quot;],&quot;viVN&quot;:[0,&quot;No Page for Locale&quot;],&quot;plPL&quot;:[0,&quot;No Page for Locale&quot;],&quot;arAR&quot;:[0,&quot;No Page for Locale&quot;],&quot;nlNL&quot;:[0,&quot;No Page for Locale&quot;],&quot;thTH&quot;:[0,&quot;No Page for Locale&quot;],&quot;trTR&quot;:[0,&quot;No Page for Locale&quot;],&quot;heIL&quot;:[0,&quot;No Page for Locale&quot;],&quot;lvLV&quot;:[0,&quot;No Page for Locale&quot;],&quot;etEE&quot;:[0,&quot;No Page for Locale&quot;],&quot;ltLT&quot;:[0,&quot;No Page for Locale&quot;]}],&quot;url&quot;:[0,&quot;https://blog.cloudflare.com/80-percent-lower-cloud-cost-how-baselime-moved-from-aws-to-cloudflare&quot;],&quot;metadata&quot;:[0,{&quot;title&quot;:[0,&quot;Moving Baselime from AWS to Cloudflare: simpler architecture, improved performance, over 80% lower cloud costs&quot;],&quot;description&quot;:[0,&quot;Post-acquisition, we migrated Baselime from AWS to the Cloudflare Developer Platform and in the process, we improved query times, simplified data ingestion, and now handle far more events, all while cutting costs. Hereâs how we built a modern, high-performing observability platform on Cloudflareâs network.&quot;],&quot;imgPreview&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5SC4qc27QTNsSCvxIpioqc/a2fd9a897d26ab4d58f9b4c1a7bbfb2b/Moving_Baselime_from_AWS_to_Cloudflare-_simpler_architecture__improved_performance__over_80-_lower_cloud_costs-OG.png&quot;]}]}],[0,{&quot;id&quot;:[0,&quot;5GK429XQHhFzVyKSXGZ2R6&quot;],&quot;title&quot;:[0,&quot;Elephants in tunnels: how Hyperdrive connects to databases inside your VPC networks&quot;],&quot;slug&quot;:[0,&quot;elephants-in-tunnels-how-hyperdrive-connects-to-databases-inside-your-vpc-networks&quot;],&quot;excerpt&quot;:[0,&quot;Hyperdrive (Cloudflareâs globally distributed SQL connection pooler and cache) recently added support for directing database traffic from Workers across Cloudflare Tunnels. We dive deep on what it took to add this feature.&quot;],&quot;featured&quot;:[0,false],&quot;html&quot;:[0,&quot;&lt;p&gt;&lt;/p&gt;&lt;p&gt;With Septemberâs &lt;a href=\&quot;https://blog.cloudflare.com/builder-day-2024-announcements/#connect-to-private-databases-from-workers\&quot;&gt;&lt;u&gt;announcement&lt;/u&gt;&lt;/a&gt; of Hyperdriveâs ability to send database traffic from &lt;a href=\&quot;https://workers.cloudflare.com/\&quot;&gt;&lt;u&gt;Workers&lt;/u&gt;&lt;/a&gt; over &lt;a href=\&quot;https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\&quot;&gt;&lt;u&gt;Cloudflare Tunnels&lt;/u&gt;&lt;/a&gt;, we wanted to dive into the details of what it took to make this happen.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;hyper-who\&quot;&gt;Hyper-who?&lt;/h2&gt;\n            &lt;a href=\&quot;#hyper-who\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Accessing your data from anywhere in Region Earth can be hard. Traditional databases are powerful, familiar, and feature-rich, but your users can be thousands of miles away from your database. This can cause slower connection startup times, slower queries, and connection exhaustion as everything takes longer to accomplish.&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;https://developers.cloudflare.com/workers/\&quot;&gt;&lt;u&gt;Cloudflare Workers&lt;/u&gt;&lt;/a&gt; is an incredibly lightweight runtime, which enables our customers to deploy their applications globally by default and renders the &lt;a href=\&quot;https://en.wikipedia.org/wiki/Cold_start_(computing)\&quot;&gt;&lt;u&gt;cold start&lt;/u&gt;&lt;/a&gt; problem almost irrelevant. The trade-off for these light, ephemeral execution contexts is the lack of persistence for things like database connections. Database connections are also notoriously expensive to spin up, with many round trips required between client and server before any query or result bytes can be exchanged.&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;https://blog.cloudflare.com/hyperdrive-making-regional-databases-feel-distributed\&quot;&gt;&lt;u&gt;Hyperdrive&lt;/u&gt;&lt;/a&gt; is designed to make the centralized databases you already have feel like theyâre global while keeping connections to those databases hot. We use our &lt;a href=\&quot;https://www.cloudflare.com/network/\&quot;&gt;&lt;u&gt;global network&lt;/u&gt;&lt;/a&gt; to get faster routes to your database, keep connection pools primed, and cache your most frequently run queries as close to users as possible.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;why-a-tunnel\&quot;&gt;Why a Tunnel?&lt;/h2&gt;\n            &lt;a href=\&quot;#why-a-tunnel\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;For something as sensitive as your database, exposing access to the public Internet can be uncomfortable. It is common to instead host your database on a private network, and allowlist known-safe IP addresses or configure &lt;a href=\&quot;https://www.cloudflare.com/learning/network-layer/what-is-gre-tunneling/\&quot;&gt;&lt;u&gt;GRE tunnels&lt;/u&gt;&lt;/a&gt; to permit traffic to it. This is complex, toilsome, and error-prone.Â &lt;/p&gt;&lt;p&gt;On Cloudflareâs &lt;a href=\&quot;https://www.cloudflare.com/en-gb/developer-platform/\&quot;&gt;&lt;u&gt;Developer Platform&lt;/u&gt;&lt;/a&gt;, we strive for simplicity and ease-of-use. We cannot expect all of our customers to be experts in configuring networking solutions, and so we went in search of a simpler solution. &lt;a href=\&quot;https://www.cloudflare.com/the-net/top-of-mind-security/customer-zero/\&quot;&gt;&lt;u&gt;Being your own customer&lt;/u&gt;&lt;/a&gt; is rarely a bad choice, and it so happens that Cloudflare offers an excellent option for this scenario: Tunnels.&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;https://www.cloudflare.com/products/tunnel/\&quot;&gt;&lt;u&gt;Cloudflare Tunnel&lt;/u&gt;&lt;/a&gt; is a Zero Trust product that creates a secure connection between your private network and Cloudflare. Exposing services within your private network can be as simple as &lt;a href=\&quot;https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/downloads/\&quot;&gt;&lt;u&gt;running a &lt;/u&gt;&lt;code&gt;&lt;u&gt;cloudflared&lt;/u&gt;&lt;/code&gt;&lt;u&gt; binary&lt;/u&gt;&lt;/a&gt;, or deploying a Docker container running the &lt;a href=\&quot;https://hub.docker.com/r/cloudflare/cloudflared\&quot;&gt;&lt;code&gt;&lt;u&gt;cloudflared&lt;/u&gt;&lt;/code&gt;&lt;u&gt; image we distribute&lt;/u&gt;&lt;/a&gt;. &lt;/p&gt;\n          &lt;figure class=\&quot;kg-card kg-image-card\&quot;&gt;\n          &lt;Image src=\&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3182f43rbwdH9krF1xhdlC/d22430cdb1efa134031f94fea691c36e/image1.png\&quot; alt=\&quot;\&quot; class=\&quot;kg-image\&quot; width=\&quot;1000\&quot; height=\&quot;180\&quot; loading=\&quot;lazy\&quot;/&gt;\n          &lt;/figure&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;a-custom-handler-and-generic-streams\&quot;&gt;A custom handler and generic streams&lt;/h2&gt;\n            &lt;a href=\&quot;#a-custom-handler-and-generic-streams\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Integrating with Tunnels to support sending Postgres directly through them was a bit of a new challenge for us. Most of the time, when we use Tunnels internally (more on that later!), we rely on the excellent job &lt;code&gt;cloudflared&lt;/code&gt; does of handling all of the mechanics, and we just treat them as pipes. That wouldnât work for Hyperdrive, though, so we had to dig into how Tunnels actually ingress traffic to build a solution.&lt;/p&gt;&lt;p&gt;Hyperdrive handles Postgres traffic using an entirely custom implementation of the &lt;a href=\&quot;https://www.postgresql.org/docs/current/protocol.html\&quot;&gt;&lt;u&gt;Postgres message protocol&lt;/u&gt;&lt;/a&gt;. This is necessary, because we sometimes have to &lt;a href=\&quot;https://blog.cloudflare.com/postgres-named-prepared-statements-supported-hyperdrive\&quot;&gt;&lt;u&gt;alter the specific type or content&lt;/u&gt;&lt;/a&gt; of messages sent from client to server, or vice versa. Handling individual bytes gives us the flexibility to implement whatever logic any new feature might need.&lt;/p&gt;&lt;p&gt;An additional, perhaps less obvious, benefit of handling Postgres message traffic as just bytes is that we are not bound to the transport layer choices of some &lt;a href=\&quot;https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping\&quot;&gt;&lt;u&gt;ORM&lt;/u&gt;&lt;/a&gt; or library. One of the nuances of running services in Cloudflare is that we may want to egress traffic over different services or protocols, for a variety of different reasons. In this case, being able to egress traffic via a Tunnel would be pretty challenging if we were stuck with whatever raw TCP socket a library had established for us.&lt;/p&gt;&lt;p&gt;The way we accomplish this relies on a mainstay of Rust: &lt;a href=\&quot;https://doc.rust-lang.org/book/ch10-02-traits.html\&quot;&gt;&lt;u&gt;traits&lt;/u&gt;&lt;/a&gt; (which are how Rust lets developers apply logic across generic functions and types). In the Rust ecosystem, there are two traits that define the behavior Hyperdrive wants out of its transport layers: &lt;a href=\&quot;https://docs.rs/tokio/latest/tokio/io/trait.AsyncRead.html\&quot;&gt;&lt;code&gt;&lt;u&gt;AsyncRead&lt;/u&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=\&quot;https://docs.rs/tokio/latest/tokio/io/trait.AsyncWrite.html\&quot;&gt;&lt;code&gt;&lt;u&gt;AsyncWrite&lt;/u&gt;&lt;/code&gt;&lt;/a&gt;. There are a couple of others we also need, but weâre going to focus on just these two. These traits enable us to code our entire custom handler against a generic stream of data, without the handler needing to know anything about the underlying protocol used to implement the stream. So, we can pass around a WebSocket connection as a generic I/O stream, wherever it might be needed.&lt;/p&gt;&lt;p&gt;As an example, the code to create a generic TCP stream and send a Postgres startup message across it might look like this:&lt;/p&gt;\n            &lt;pre class=\&quot;language-RUST\&quot;&gt;&lt;code class=\&quot;language-RUST\&quot;&gt;/// Send a startup message to a Postgres server, in the role of a PG client.\n/// https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-STARTUPMESSAGE\npub async fn send_startup&amp;lt;S&amp;gt;(stream: &amp;amp;mut S, user_name: &amp;amp;str, db_name: &amp;amp;str, app_name: &amp;amp;str) -&amp;gt; Result&amp;lt;(), ConnectionError&amp;gt;\nwhere\n    S: AsyncWrite + Unpin,\n{\n    let protocol_number = 196608 as i32;\n    let user_str = &amp;amp;b&amp;quot;user\\0&amp;quot;[..];\n    let user_bytes = user_name.as_bytes();\n    let db_str = &amp;amp;b&amp;quot;database\\0&amp;quot;[..];\n    let db_bytes = db_name.as_bytes();\n    let app_str = &amp;amp;b&amp;quot;application_name\\0&amp;quot;[..];\n    let app_bytes = app_name.as_bytes();\n    let len = 4 + 4\n        + user_str.len() + user_bytes.len() + 1\n        + db_str.len() + db_bytes.len() + 1\n        + app_str.len() + app_bytes.len() + 1 + 1;\n\n    // Construct a BytesMut of our startup message, then send it\n    let mut startup_message = BytesMut::with_capacity(len as usize);\n    startup_message.put_i32(len as i32);\n    startup_message.put_i32(protocol_number);\n    startup_message.put(user_str);\n    startup_message.put_slice(user_bytes);\n    startup_message.put_u8(0);\n    startup_message.put(db_str);\n    startup_message.put_slice(db_bytes);\n    startup_message.put_u8(0);\n    startup_message.put(app_str);\n    startup_message.put_slice(app_bytes);\n    startup_message.put_u8(0);\n    startup_message.put_u8(0);\n\n    match stream.write_all(&amp;amp;startup_message).await {\n        Ok(_) =&amp;gt; Ok(()),\n        Err(err) =&amp;gt; {\n            error!(&amp;quot;Error writing startup to server: {}&amp;quot;, err.to_string());\n            ConnectionError::InternalError\n        }\n    }\n}\n\n/// Connect to a TCP socket\nlet stream = match TcpStream::connect((&amp;quot;localhost&amp;quot;, 5432)).await {\n    Ok(s) =&amp;gt; s,\n    Err(err) =&amp;gt; {\n        error!(&amp;quot;Error connecting to address: {}&amp;quot;, err.to_string());\n        return ConnectionError::InternalError;\n    }\n};\nlet _ = send_startup(&amp;amp;mut stream, &amp;quot;db_user&amp;quot;, &amp;quot;my_db&amp;quot;).await;&lt;/pre&gt;&lt;/code&gt;\n            &lt;p&gt;With this approach, if we wanted to encrypt the stream using &lt;a href=\&quot;https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/#:~:text=Transport%20Layer%20Security%2C%20or%20TLS,web%20browsers%20loading%20a%20website.\&quot;&gt;&lt;u&gt;TLS&lt;/u&gt;&lt;/a&gt; before we write to it (upgrading our existing &lt;code&gt;TcpStream&lt;/code&gt; connection in-place, to an &lt;code&gt;SslStream&lt;/code&gt;), we would only have to change the code we use to create the stream, while generating and sending the traffic would remain unchanged. This is because &lt;code&gt;SslStream&lt;/code&gt; also implements &lt;code&gt;AsyncWrite&lt;/code&gt;!&lt;/p&gt;\n            &lt;pre class=\&quot;language-RUST\&quot;&gt;&lt;code class=\&quot;language-RUST\&quot;&gt;/// We&amp;#039;re handwaving the SSL setup here. You&amp;#039;re welcome.\nlet conn_config = new_tls_client_config()?;\n\n/// Encrypt the TcpStream, returning an SslStream\nlet ssl_stream = match tokio_boring::connect(conn_config, domain, stream).await {\n    Ok(s) =&amp;gt; s,\n    Err(err) =&amp;gt; {\n        error!(&amp;quot;Error during websocket TLS handshake: {}&amp;quot;, err.to_string());\n        return ConnectionError::InternalError;\n    }\n};\nlet _ = send_startup(&amp;amp;mut ssl_stream, &amp;quot;db_user&amp;quot;, &amp;quot;my_db&amp;quot;).await;&lt;/pre&gt;&lt;/code&gt;\n            \n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;whence-websocket\&quot;&gt;Whence WebSocket&lt;/h2&gt;\n            &lt;a href=\&quot;#whence-websocket\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;&lt;a href=\&quot;https://datatracker.ietf.org/doc/html/rfc6455\&quot;&gt;&lt;u&gt;WebSocket&lt;/u&gt;&lt;/a&gt; is an application layer protocol that enables bidirectional communication between a client and server. Typically, to establish a WebSocket connection, a client initiates an HTTP request and indicates they wish to upgrade the connection to WebSocket via the âUpgradeâ header. Then, once the client and server complete the handshake, both parties can send messages over the connection until one of them terminates it.&lt;/p&gt;&lt;p&gt;Now, it turns out that the way Cloudflare Tunnels work under the hood is that both ends of the tunnel want to speak WebSocket, and rely on a translation layer to convert all traffic to or from WebSocket. The &lt;code&gt;cloudflared&lt;/code&gt; daemon you spin up within your private network handles this for us! For Hyperdrive, however, we did not have a suitable translation layer to send Postgres messages across WebSocket, and had to write one.&lt;/p&gt;&lt;p&gt;One of the (many) fantastic things about Rust traits is that the contract they present is very clear. To be &lt;code&gt;AsyncRead&lt;/code&gt;, you just need to implement &lt;code&gt;poll_read&lt;/code&gt;. To be &lt;code&gt;AsyncWrite&lt;/code&gt;, you need to implement only three functions (&lt;code&gt;poll_write&lt;/code&gt;, &lt;code&gt;poll_flush&lt;/code&gt;, and &lt;code&gt;poll_shutdown&lt;/code&gt;). Further, there is excellent support for WebSocket in Rust built on top of the &lt;a href=\&quot;https://github.com/snapview/tungstenite-rs\&quot;&gt;&lt;u&gt;tungstenite-rs library&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Thus, building our custom WebSocket stream such that it can share the same machinery as all our other generic streams just means translating the existing WebSocket support into these poll functions. There are some existing OSS projects that do this, but for multiple reasons we could not use the existing options. The primary reason is that Hyperdrive operates across multiple threads (thanks to the &lt;a href=\&quot;https://docs.rs/tokio/latest/tokio/runtime/index.html\&quot;&gt;&lt;u&gt;tokio runtime&lt;/u&gt;&lt;/a&gt;), and so we rely on our connections to also handle &lt;a href=\&quot;https://doc.rust-lang.org/std/marker/trait.Send.html\&quot;&gt;&lt;code&gt;&lt;u&gt;Send&lt;/u&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=\&quot;https://doc.rust-lang.org/std/marker/trait.Sync.html\&quot;&gt;&lt;code&gt;&lt;u&gt;Sync&lt;/u&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=\&quot;https://doc.rust-lang.org/std/marker/trait.Unpin.html\&quot;&gt;&lt;code&gt;&lt;u&gt;Unpin&lt;/u&gt;&lt;/code&gt;&lt;/a&gt;. None of the available solutions had all five traits handled. It turns out that most of them went with the paradigm of &lt;a href=\&quot;https://docs.rs/futures/latest/futures/sink/trait.Sink.html\&quot;&gt;&lt;code&gt;&lt;u&gt;Sink&lt;/u&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=\&quot;https://docs.rs/futures/latest/futures/stream/trait.Stream.html\&quot;&gt;&lt;code&gt;&lt;u&gt;Stream&lt;/u&gt;&lt;/code&gt;&lt;/a&gt;, which provide a solid base from which to translate to &lt;code&gt;AsyncRead&lt;/code&gt; and &lt;code&gt;AsyncWrite&lt;/code&gt;. In fact some of the functions overlap, and can be passed through almost unchanged. For example, &lt;code&gt;poll_flush&lt;/code&gt; and &lt;code&gt;poll_shutdown&lt;/code&gt; have 1-to-1 analogs, and require almost no engineering effort to convert from &lt;code&gt;Sink&lt;/code&gt; to &lt;code&gt;AsyncWrite&lt;/code&gt;.&lt;/p&gt;\n            &lt;pre class=\&quot;language-RUST\&quot;&gt;&lt;code class=\&quot;language-RUST\&quot;&gt;/// We use this struct to implement the traits we need on top of a WebSocketStream\npub struct HyperSocket&amp;lt;S&amp;gt;\nwhere\n    S: AsyncRead + AsyncWrite + Send + Sync + Unpin,\n{\n    inner: WebSocketStream&amp;lt;S&amp;gt;,\n    read_state: Option&amp;lt;ReadState&amp;gt;,\n    write_err: Option&amp;lt;Error&amp;gt;,\n}\n\nimpl&amp;lt;S&amp;gt; AsyncWrite for HyperSocket&amp;lt;S&amp;gt;\nwhere\n    S: AsyncRead + AsyncWrite + Send + Sync + Unpin,\n{\n    fn poll_flush(mut self: Pin&amp;lt;&amp;amp;mut Self&amp;gt;, cx: &amp;amp;mut Context&amp;lt;&amp;#039;_&amp;gt;) -&amp;gt; Poll&amp;lt;io::Result&amp;lt;()&amp;gt;&amp;gt; {\n        match ready!(Pin::new(&amp;amp;mut self.inner).poll_flush(cx)) {\n            Ok(_) =&amp;gt; Poll::Ready(Ok(())),\n            Err(err) =&amp;gt; Poll::Ready(Err(Error::new(ErrorKind::Other, err))),\n        }\n    }\n\n    fn poll_shutdown(mut self: Pin&amp;lt;&amp;amp;mut Self&amp;gt;, cx: &amp;amp;mut Context&amp;lt;&amp;#039;_&amp;gt;) -&amp;gt; Poll&amp;lt;io::Result&amp;lt;()&amp;gt;&amp;gt; {\n        match ready!(Pin::new(&amp;amp;mut self.inner).poll_close(cx)) {\n            Ok(_) =&amp;gt; Poll::Ready(Ok(())),\n            Err(err) =&amp;gt; Poll::Ready(Err(Error::new(ErrorKind::Other, err))),\n        }\n    }\n}\n&lt;/pre&gt;&lt;/code&gt;\n            &lt;p&gt;With that translation done, we can use an existing WebSocket library to upgrade our &lt;code&gt;SslStream&lt;/code&gt; connection to a Cloudflare Tunnel, and wrap the result in our &lt;code&gt;AsyncRead/AsyncWrite&lt;/code&gt; implementation. The result can then be used anywhere that our other transport streams would work, without any changes needed to the rest of our codebase!Â &lt;/p&gt;&lt;p&gt;That would look something like this:&lt;/p&gt;\n            &lt;pre class=\&quot;language-RUST\&quot;&gt;&lt;code class=\&quot;language-RUST\&quot;&gt;let websocket = match tokio_tungstenite::client_async(request, ssl_stream).await {\n    Ok(ws) =&amp;gt; Ok(ws),\n    Err(err) =&amp;gt; {\n        error!(&amp;quot;Error during websocket conn setup: {}&amp;quot;, err.to_string());\n        return ConnectionError::InternalError;\n    }\n};\nlet websocket_stream = HyperSocket::new(websocket));\nlet _ = send_startup(&amp;amp;mut websocket_stream, &amp;quot;db_user&amp;quot;, &amp;quot;my_db&amp;quot;).await;&lt;/pre&gt;&lt;/code&gt;\n            \n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;access-granted\&quot;&gt;Access granted&lt;/h2&gt;\n            &lt;a href=\&quot;#access-granted\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;An observant reader might have noticed that in the code example above we snuck in a variable named request that we passed in when upgrading from an &lt;code&gt;SslStream to a WebSocketStream&lt;/code&gt;. This is for multiple reasons. The first reason is that Tunnels are assigned a hostname and use this hostname for routing. The second and more interesting reason is that (as mentioned above) when negotiating an upgrade from HTTP to WebSocket, a request must be sent to the server hosting the ingress side of the Tunnel to &lt;a href=\&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\&quot;&gt;&lt;u&gt;perform the upgrade&lt;/u&gt;&lt;/a&gt;. This is pretty universal, but we also add in an extra piece here.&lt;/p&gt;&lt;p&gt;At Cloudflare, we believe that &lt;a href=\&quot;https://blog.cloudflare.com/secure-by-default-understanding-new-cisa-guide/\&quot;&gt;&lt;u&gt;secure defaults&lt;/u&gt;&lt;/a&gt; and &lt;a href=\&quot;https://www.cloudflare.com/learning/security/glossary/what-is-defense-in-depth/\&quot;&gt;&lt;u&gt;defense in depth&lt;/u&gt;&lt;/a&gt; are the correct ways to build a better Internet. This is why traffic across Tunnels is encrypted, for example. However, that does not necessarily prevent unwanted traffic from being sent into your Tunnel, and therefore egressing out to your database. While Postgres offers a robust set of &lt;a href=\&quot;https://www.postgresql.org/docs/current/user-manag.html\&quot;&gt;&lt;u&gt;access control&lt;/u&gt;&lt;/a&gt; options for protecting your database, wouldnât it be best if unwanted traffic never got into your private network in the first place?Â &lt;/p&gt;&lt;p&gt;To that end, all &lt;a href=\&quot;https://developers.cloudflare.com/hyperdrive/configuration/connect-to-private-database/\&quot;&gt;&lt;u&gt;Tunnels set up for use with Hyperdrive&lt;/u&gt;&lt;/a&gt; should have a &lt;a href=\&quot;https://developers.cloudflare.com/cloudflare-one/applications/\&quot;&gt;&lt;u&gt;Zero Trust Access Application&lt;/u&gt;&lt;/a&gt; configured to protect them. These applications should use a &lt;a href=\&quot;https://developers.cloudflare.com/cloudflare-one/identity/service-tokens/\&quot;&gt;&lt;u&gt;Service Token&lt;/u&gt;&lt;/a&gt; to authorize connections. When setting up a new Hyperdrive, you have the option to provide the tokenâs ID and Secret, which will be encrypted and stored alongside the rest of your configuration. These will be presented as part of the WebSocket upgrade request to authorize the connection, allowing your database traffic through while preventing unwanted access.&lt;/p&gt;&lt;p&gt;This can be done within the requestâs headers, and might look something like this:&lt;/p&gt;\n            &lt;pre class=\&quot;language-RUST\&quot;&gt;&lt;code class=\&quot;language-RUST\&quot;&gt;let ws_url = format!(&amp;quot;wss://{}&amp;quot;, host);\nlet mut request = match ws_url.into_client_request() {\n    Ok(req) =&amp;gt; req,\n    Err(err) =&amp;gt; {\n        error!(\n            &amp;quot;Hostname {} could not be parsed into a valid request URL: {}&amp;quot;, \n            host,\n            err.to_string()\n        );\n        return ConnectionError::InternalError;\n    }\n};\nrequest.headers_mut().insert(\n    &amp;quot;CF-Access-Client-Id&amp;quot;,\n    http::header::HeaderValue::from_str(&amp;amp;client_id).unwrap(),\n);\nrequest.headers_mut().insert(\n    &amp;quot;CF-Access-Client-Secret&amp;quot;,\n    http::header::HeaderValue::from_str(&amp;amp;client_secret).unwrap(),\n);\n&lt;/pre&gt;&lt;/code&gt;\n            \n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;building-for-customer-zero\&quot;&gt;Building for customer zero&lt;/h2&gt;\n            &lt;a href=\&quot;#building-for-customer-zero\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;If youâve been reading the blog for a long time, some of this might sound a bit familiar.Â  This isnât the first time that weâve &lt;a href=\&quot;https://blog.cloudflare.com/cloudflare-tunnel-for-postgres/\&quot;&gt;&lt;u&gt;sent Postgres traffic across a tunnel&lt;/u&gt;&lt;/a&gt;, itâs something most of us do from our laptops regularly.Â  This works very well for interactive use cases with low traffic volume and a high tolerance for latency, but historically most of our products have not been able to employ the same approach.&lt;/p&gt;&lt;p&gt;Cloudflare operates &lt;a href=\&quot;https://www.cloudflare.com/network/\&quot;&gt;&lt;u&gt;many data centers&lt;/u&gt;&lt;/a&gt; around the world, and most services run in every one of those data centers. There are some tasks, however, that make the most sense to run in a more centralized fashion. These include tasks such as managing control plane operations, or storing configuration state.Â  Nearly every Cloudflare product houses its control plane information in &lt;a href=\&quot;https://blog.cloudflare.com/performance-isolation-in-a-multi-tenant-database-environment/\&quot;&gt;&lt;u&gt;Postgres clusters&lt;/u&gt;&lt;/a&gt; run centrally in a handful of our data centers, and we use a variety of approaches for accessing that centralized data from elsewhere in our network. For example, many services currently use a push-based model to publish updates to &lt;a href=\&quot;https://blog.cloudflare.com/moving-quicksilver-into-production/\&quot;&gt;&lt;u&gt;Quicksilver&lt;/u&gt;&lt;/a&gt;, and work through the complexities implied by such a model. This has been a recurring challenge for any team looking to build a new product.&lt;/p&gt;&lt;p&gt;Hyperdriveâs entire reason for being is to make it easy to access such central databases from our global network. When we began exploring Tunnel integrations as a feature, many internal teams spoke up immediately and strongly suggested theyâd be interested in using it themselves. This was an excellent opportunity for Cloudflare to scratch its own itch, while also getting a lot of traffic on a new feature before releasing it directly to the public. As always, being âcustomer zeroâ means that we get fast feedback, more reliability over time, stronger connections between teams, and an overall better suite of products. We jumped at the chance.&lt;/p&gt;&lt;p&gt;As we rolled out early versions of Tunnel integration, we worked closely with internal teams to get them access to it, and fixed any rough spots they encountered. Weâre pleased to share that this first batch of teams have found great success building new or refactored products on Hyperdrive over Tunnels. For example: if youâve already tried out &lt;a href=\&quot;https://blog.cloudflare.com/builder-day-2024-announcements/#continuous-integration-and-delivery\&quot;&gt;&lt;u&gt;Workers Builds&lt;/u&gt;&lt;/a&gt;, or recently &lt;a href=\&quot;https://www.cloudflare.com/trust-hub/reporting-abuse/\&quot;&gt;&lt;u&gt;submitted an abuse report&lt;/u&gt;&lt;/a&gt;, youâre among our first users!Â  At the time of this writing, we have several more internal teams working to onboard, and we on the Hyperdrive team are very excited to see all the different ways in which fast and simple connections from Workers to a centralized database can help Cloudflare just as much as theyâve been helping our external customers.&lt;/p&gt;\n          &lt;div class=\&quot;flex anchor relative\&quot;&gt;\n            &lt;h2 id=\&quot;outro\&quot;&gt;Outro&lt;/h2&gt;\n            &lt;a href=\&quot;#outro\&quot; aria-hidden=\&quot;true\&quot; class=\&quot;relative sm:absolute sm:-left-5\&quot;&gt;\n              &lt;svg width=\&quot;16\&quot; height=\&quot;16\&quot; viewBox=\&quot;0 0 24 24\&quot;&gt;&lt;path fill=\&quot;currentcolor\&quot; d=\&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n            &lt;/a&gt;\n          &lt;/div&gt;\n          &lt;p&gt;Cloudflare is on a mission to make the Internet faster, safer, and more reliable. Hyperdrive was built to make connecting to centralized databases from the Workers runtime as quick and consistent as possible, and this latest development is designed to help all those who want to use Hyperdrive without directly exposing resources within their virtual private clouds (VPCs) on the public web.&lt;/p&gt;&lt;p&gt;To this end, we chose to build a solution around our suite of industry-leading &lt;a href=\&quot;https://developers.cloudflare.com/cloudflare-one/\&quot;&gt;&lt;u&gt;Zero Trust&lt;/u&gt;&lt;/a&gt; tools, and were delighted to find how simple it was to implement in our runtime given the power and extensibility of the Rust &lt;code&gt;trait&lt;/code&gt; system.Â &lt;/p&gt;&lt;p&gt;Without waiting for the ink to dry, multiple teams within Cloudflare have adopted this new feature to quickly and easily solve what have historically been complex challenges, and are happily operating it in production today.&lt;/p&gt;&lt;p&gt;And now, if you haven&amp;#39;t already, try &lt;a href=\&quot;https://developers.cloudflare.com/hyperdrive/configuration/connect-to-private-database/\&quot;&gt;&lt;u&gt;setting up Hyperdrive across a Tunnel&lt;/u&gt;&lt;/a&gt;, and let us know what you think in the &lt;a href=\&quot;https://discord.com/channels/595317990191398933/1150557986239021106\&quot;&gt;&lt;u&gt;Hyperdrive Discord channel&lt;/u&gt;&lt;/a&gt;!&lt;/p&gt;&quot;],&quot;published_at&quot;:[0,&quot;2024-10-25T14:00+01:00&quot;],&quot;updated_at&quot;:[0,&quot;2024-10-29T13:01:27.233Z&quot;],&quot;feature_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/24ic7s5StC7EDyqYne4WN6/02f061b0aef358ecc2d5da4150e5b0fc/image2.png&quot;],&quot;tags&quot;:[1,[[0,{&quot;id&quot;:[0,&quot;3JAY3z7p7An94s6ScuSQPf&quot;],&quot;name&quot;:[0,&quot;Developer Platform&quot;],&quot;slug&quot;:[0,&quot;developer-platform&quot;]}],[0,{&quot;id&quot;:[0,&quot;2UVIYusJwlvsmPYl2AvSuR&quot;],&quot;name&quot;:[0,&quot;Deep Dive&quot;],&quot;slug&quot;:[0,&quot;deep-dive&quot;]}],[0,{&quot;id&quot;:[0,&quot;6hbkItfupogJP3aRDAq6v8&quot;],&quot;name&quot;:[0,&quot;Cloudflare Workers&quot;],&quot;slug&quot;:[0,&quot;workers&quot;]}],[0,{&quot;id&quot;:[0,&quot;5EP9xxxSTGvFx3RIxjqIgP&quot;],&quot;name&quot;:[0,&quot;Hyperdrive&quot;],&quot;slug&quot;:[0,&quot;hyperdrive&quot;]}],[0,{&quot;id&quot;:[0,&quot;5f5l99WZnbCCF9O6Emw56A&quot;],&quot;name&quot;:[0,&quot;Postgres&quot;],&quot;slug&quot;:[0,&quot;postgres&quot;]}],[0,{&quot;id&quot;:[0,&quot;1pPf2NNj9SXrC0A0ERKp9v&quot;],&quot;name&quot;:[0,&quot;SQL&quot;],&quot;slug&quot;:[0,&quot;sql&quot;]}],[0,{&quot;id&quot;:[0,&quot;w4e8pkoz9c8xNDVhy9eNe&quot;],&quot;name&quot;:[0,&quot;Rust&quot;],&quot;slug&quot;:[0,&quot;rust&quot;]}],[0,{&quot;id&quot;:[0,&quot;1aoMsyWESTqiSKzdHZXOKW&quot;],&quot;name&quot;:[0,&quot;WebSockets&quot;],&quot;slug&quot;:[0,&quot;websockets&quot;]}]]],&quot;relatedTags&quot;:[0],&quot;authors&quot;:[1,[[0,{&quot;name&quot;:[0,&quot;Andrew Repp&quot;],&quot;slug&quot;:[0,&quot;andrew-repp&quot;],&quot;bio&quot;:[0,null],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1moTBd0N5e74Bn9NWn2ksO/9642b164dcf16e501a79e56520548aa2/andrew-repp.jpg&quot;],&quot;location&quot;:[0,&quot;Chicago, IL, USA&quot;],&quot;website&quot;:[0,&quot;http://andrewrepp.com&quot;],&quot;twitter&quot;:[0,null],&quot;facebook&quot;:[0,null]}],[0,{&quot;name&quot;:[0,&quot;Emilio AssunÃ§Ã£o&quot;],&quot;slug&quot;:[0,&quot;emilio-assuncao&quot;],&quot;bio&quot;:[0],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3tOkImW4PKNYEyP4o7Pkhe/ee40249c46e72656a8e2352485ec7d5e/_tmp_mini_magick20221018-42-16be3qy.jpg&quot;],&quot;location&quot;:[0],&quot;website&quot;:[0],&quot;twitter&quot;:[0],&quot;facebook&quot;:[0]}],[0,{&quot;name&quot;:[0,&quot;Abhishek Chanda&quot;],&quot;slug&quot;:[0,&quot;abhishek-chanda&quot;],&quot;bio&quot;:[0],&quot;profile_image&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3P0qYqbNeI32RV8dDNiWyr/851507446803b9f182229b98e512eb5f/_tmp_mini_magick20221012-43-o7wrnr.jpg&quot;],&quot;location&quot;:[0],&quot;website&quot;:[0],&quot;twitter&quot;:[0,&quot;@rony358&quot;],&quot;facebook&quot;:[0]}]]],&quot;meta_description&quot;:[0,&quot;Hyperdrive (Cloudflareâs globally distributed SQL connection pooler and cache) recently added support for directing database traffic from Workers across Cloudflare Tunnels. We dive deep on what it took to add this feature.&quot;],&quot;primary_author&quot;:[0,{}],&quot;localeList&quot;:[0,{&quot;name&quot;:[0,&quot;blog-english-only&quot;],&quot;enUS&quot;:[0,&quot;English for Locale&quot;],&quot;zhCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhHansCN&quot;:[0,&quot;No Page for Locale&quot;],&quot;zhTW&quot;:[0,&quot;No Page for Locale&quot;],&quot;frFR&quot;:[0,&quot;No Page for Locale&quot;],&quot;deDE&quot;:[0,&quot;No Page for Locale&quot;],&quot;itIT&quot;:[0,&quot;No Page for Locale&quot;],&quot;jaJP&quot;:[0,&quot;No Page for Locale&quot;],&quot;koKR&quot;:[0,&quot;No Page for Locale&quot;],&quot;ptBR&quot;:[0,&quot;No Page for Locale&quot;],&quot;esLA&quot;:[0,&quot;No Page for Locale&quot;],&quot;esES&quot;:[0,&quot;No Page for Locale&quot;],&quot;enAU&quot;:[0,&quot;No Page for Locale&quot;],&quot;enCA&quot;:[0,&quot;No Page for Locale&quot;],&quot;enIN&quot;:[0,&quot;No Page for Locale&quot;],&quot;enGB&quot;:[0,&quot;No Page for Locale&quot;],&quot;idID&quot;:[0,&quot;No Page for Locale&quot;],&quot;ruRU&quot;:[0,&quot;No Page for Locale&quot;],&quot;svSE&quot;:[0,&quot;No Page for Locale&quot;],&quot;viVN&quot;:[0,&quot;No Page for Locale&quot;],&quot;plPL&quot;:[0,&quot;No Page for Locale&quot;],&quot;arAR&quot;:[0,&quot;No Page for Locale&quot;],&quot;nlNL&quot;:[0,&quot;No Page for Locale&quot;],&quot;thTH&quot;:[0,&quot;No Page for Locale&quot;],&quot;trTR&quot;:[0,&quot;No Page for Locale&quot;],&quot;heIL&quot;:[0,&quot;No Page for Locale&quot;],&quot;lvLV&quot;:[0,&quot;No Page for Locale&quot;],&quot;etEE&quot;:[0,&quot;No Page for Locale&quot;],&quot;ltLT&quot;:[0,&quot;No Page for Locale&quot;]}],&quot;url&quot;:[0,&quot;https://blog.cloudflare.com/elephants-in-tunnels-how-hyperdrive-connects-to-databases-inside-your-vpc-networks&quot;],&quot;metadata&quot;:[0,{&quot;title&quot;:[0,&quot;Elephants in tunnels: how Hyperdrive connects to databases inside your VPC networks&quot;],&quot;description&quot;:[0,&quot;Hyperdrive (Cloudflareâs globally distributed SQL connection pooler and cache) recently added support for directing database traffic from Workers across Cloudflare Tunnels. We dive deep on what it took to add this feature.&quot;],&quot;imgPreview&quot;:[0,&quot;https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3ut6WBHomsRN0iP92D1hpp/ecdc9573ebc09c140c865494d029f54e/image2.png&quot;]}]}]]],&quot;locale&quot;:[0,&quot;en-us&quot;],&quot;translations&quot;:[0,{&quot;posts.by&quot;:[0,&quot;By&quot;],&quot;footer.gdpr&quot;:[0,&quot;GDPR&quot;],&quot;lang_blurb1&quot;:[0,&quot;This post is also available in {lang1}.&quot;],&quot;lang_blurb2&quot;:[0,&quot;This post is also available in {lang1} and {lang2}.&quot;],&quot;lang_blurb3&quot;:[0,&quot;This post is also available in {lang1}, {lang2} and {lang3}.&quot;],&quot;footer.press&quot;:[0,&quot;Press&quot;],&quot;header.title&quot;:[0,&quot;The Cloudflare Blog&quot;],&quot;search.clear&quot;:[0,&quot;Clear&quot;],&quot;search.filter&quot;:[0,&quot;Filter&quot;],&quot;search.source&quot;:[0,&quot;Source&quot;],&quot;footer.careers&quot;:[0,&quot;Careers&quot;],&quot;footer.company&quot;:[0,&quot;Company&quot;],&quot;footer.support&quot;:[0,&quot;Support&quot;],&quot;footer.the_net&quot;:[0,&quot;theNet&quot;],&quot;search.filters&quot;:[0,&quot;Filters&quot;],&quot;footer.our_team&quot;:[0,&quot;Our team&quot;],&quot;footer.webinars&quot;:[0,&quot;Webinars&quot;],&quot;page.more_posts&quot;:[0,&quot;More posts&quot;],&quot;posts.time_read&quot;:[0,&quot;{time} min read&quot;],&quot;search.language&quot;:[0,&quot;Language&quot;],&quot;footer.community&quot;:[0,&quot;Community&quot;],&quot;footer.resources&quot;:[0,&quot;Resources&quot;],&quot;footer.solutions&quot;:[0,&quot;Solutions&quot;],&quot;footer.trademark&quot;:[0,&quot;Trademark&quot;],&quot;header.subscribe&quot;:[0,&quot;Subscribe&quot;],&quot;footer.compliance&quot;:[0,&quot;Compliance&quot;],&quot;footer.free_plans&quot;:[0,&quot;Free plans&quot;],&quot;footer.impact_ESG&quot;:[0,&quot;Impact/ESG&quot;],&quot;posts.follow_on_X&quot;:[0,&quot;Follow on X&quot;],&quot;footer.help_center&quot;:[0,&quot;Help center&quot;],&quot;footer.network_map&quot;:[0,&quot;Network Map&quot;],&quot;header.please_wait&quot;:[0,&quot;Please Wait&quot;],&quot;page.related_posts&quot;:[0,&quot;Related posts&quot;],&quot;search.result_stat&quot;:[0,&quot;Results &lt;strong&gt;{search_range}&lt;/strong&gt; of &lt;strong&gt;{search_total}&lt;/strong&gt; for &lt;strong&gt;{search_keyword}&lt;/strong&gt;&quot;],&quot;footer.case_studies&quot;:[0,&quot;Case Studies&quot;],&quot;footer.connect_2024&quot;:[0,&quot;Connect 2024&quot;],&quot;footer.terms_of_use&quot;:[0,&quot;Terms of Use&quot;],&quot;footer.white_papers&quot;:[0,&quot;White Papers&quot;],&quot;footer.cloudflare_tv&quot;:[0,&quot;Cloudflare TV&quot;],&quot;footer.community_hub&quot;:[0,&quot;Community Hub&quot;],&quot;footer.compare_plans&quot;:[0,&quot;Compare plans&quot;],&quot;footer.contact_sales&quot;:[0,&quot;Contact Sales&quot;],&quot;header.contact_sales&quot;:[0,&quot;Contact Sales&quot;],&quot;header.email_address&quot;:[0,&quot;Email Address&quot;],&quot;page.error.not_found&quot;:[0,&quot;Page not found&quot;],&quot;footer.developer_docs&quot;:[0,&quot;Developer docs&quot;],&quot;footer.privacy_policy&quot;:[0,&quot;Privacy Policy&quot;],&quot;footer.request_a_demo&quot;:[0,&quot;Request a demo&quot;],&quot;page.continue_reading&quot;:[0,&quot;Continue reading&quot;],&quot;footer.analysts_report&quot;:[0,&quot;Analyst reports&quot;],&quot;footer.for_enterprises&quot;:[0,&quot;For enterprises&quot;],&quot;footer.getting_started&quot;:[0,&quot;Getting Started&quot;],&quot;footer.learning_center&quot;:[0,&quot;Learning Center&quot;],&quot;footer.project_galileo&quot;:[0,&quot;Project Galileo&quot;],&quot;pagination.newer_posts&quot;:[0,&quot;Newer Posts&quot;],&quot;pagination.older_posts&quot;:[0,&quot;Older Posts&quot;],&quot;posts.social_buttons.x&quot;:[0,&quot;Discuss on X&quot;],&quot;search.source_location&quot;:[0,&quot;Source/Location&quot;],&quot;footer.about_cloudflare&quot;:[0,&quot;About Cloudflare&quot;],&quot;footer.athenian_project&quot;:[0,&quot;Athenian Project&quot;],&quot;footer.become_a_partner&quot;:[0,&quot;Become a partner&quot;],&quot;footer.cloudflare_radar&quot;:[0,&quot;Cloudflare Radar&quot;],&quot;footer.network_services&quot;:[0,&quot;Network services&quot;],&quot;footer.trust_and_safety&quot;:[0,&quot;Trust &amp; Safety&quot;],&quot;header.get_started_free&quot;:[0,&quot;Get Started Free&quot;],&quot;page.search.placeholder&quot;:[0,&quot;Search Cloudflare&quot;],&quot;footer.cloudflare_status&quot;:[0,&quot;Cloudflare Status&quot;],&quot;footer.cookie_preference&quot;:[0,&quot;Cookie Preferences&quot;],&quot;header.valid_email_error&quot;:[0,&quot;Must be valid email.&quot;],&quot;footer.connectivity_cloud&quot;:[0,&quot;Connectivity cloud&quot;],&quot;footer.developer_services&quot;:[0,&quot;Developer services&quot;],&quot;footer.investor_relations&quot;:[0,&quot;Investor relations&quot;],&quot;page.not_found.error_code&quot;:[0,&quot;Error Code: 404&quot;],&quot;footer.logos_and_press_kit&quot;:[0,&quot;Logos &amp; press kit&quot;],&quot;footer.application_services&quot;:[0,&quot;Application services&quot;],&quot;footer.get_a_recommendation&quot;:[0,&quot;Get a recommendation&quot;],&quot;posts.social_buttons.reddit&quot;:[0,&quot;Discuss on Reddit&quot;],&quot;footer.sse_and_sase_services&quot;:[0,&quot;SSE and SASE services&quot;],&quot;page.not_found.outdated_link&quot;:[0,&quot;You may have used an outdated link, or you may have typed the address incorrectly.&quot;],&quot;footer.report_security_issues&quot;:[0,&quot;Report Security Issues&quot;],&quot;page.error.error_message_page&quot;:[0,&quot;Sorry, we can&#39;t find the page you are looking for.&quot;],&quot;header.subscribe_notifications&quot;:[0,&quot;Subscribe to receive notifications of new posts:&quot;],&quot;footer.cloudflare_for_campaigns&quot;:[0,&quot;Cloudflare for Campaigns&quot;],&quot;header.subscription_confimation&quot;:[0,&quot;Subscription confirmed. Thank you for subscribing!&quot;],&quot;posts.social_buttons.hackernews&quot;:[0,&quot;Discuss on Hacker News&quot;],&quot;footer.diversity_equity_inclusion&quot;:[0,&quot;Diversity, equity &amp; inclusion&quot;],&quot;footer.critical_infrastructure_defense_project&quot;:[0,&quot;Critical Infrastructure Defense Project&quot;]}],&quot;localesAvailable&quot;:[1,[]],&quot;footerBlurb&quot;:[0,&quot;Cloudflare&#39;s connectivity cloud protects &lt;a target=&#39;_blank&#39; href=&#39;https://www.cloudflare.com/network-services/&#39; rel=&#39;noreferrer&#39;&gt;entire corporate networks&lt;/a&gt;, helps customers build &lt;a target=&#39;_blank&#39; href=&#39;https://workers.cloudflare.com/&#39; rel=&#39;noreferrer&#39;&gt;Internet-scale applications efficiently&lt;/a&gt;, accelerates any &lt;a target=&#39;_blank&#39; href=&#39;https://www.cloudflare.com/performance/accelerate-internet-applications/&#39; rel=&#39;noreferrer&#39;&gt;website or Internet application&lt;/a&gt;, &lt;a target=&#39;_blank&#39; href=&#39;https://www.cloudflare.com/ddos/&#39; rel=&#39;noreferrer&#39;&gt;wards off DDoS attacks&lt;/a&gt;, keeps &lt;a target=&#39;_blank&#39; href=&#39;https://www.cloudflare.com/application-security/&#39; rel=&#39;noreferrer&#39;&gt;hackers at bay&lt;/a&gt;, and can help you on &lt;a target=&#39;_blank&#39; href=&#39;https://www.cloudflare.com/products/zero-trust/&#39; rel=&#39;noreferrer&#39;&gt;your journey to Zero Trust&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;Visit &lt;a target=&#39;_blank&#39; href=&#39;https://one.one.one.one/&#39; rel=&#39;noreferrer&#39;&gt;1.1.1.1&lt;/a&gt; from any device to get started with our free app that makes your Internet faster and safer.&lt;br/&gt;&lt;br/&gt;To learn more about our mission to help build a better Internet, &lt;a target=&#39;_blank&#39; href=&#39;https://www.cloudflare.com/learning/what-is-cloudflare/&#39; rel=&#39;noreferrer&#39;&gt;start here&lt;/a&gt;. If you&amp;apos;re looking for a new career direction, check out &lt;a target=&#39;_blank&#39; href=&#39;http://www.cloudflare.com/careers&#39; rel=&#39;noreferrer&#39;&gt;our open positions&lt;/a&gt;.&quot;]}" ssr="" client="load" opts="{&quot;name&quot;:&quot;Post&quot;,&quot;value&quot;:true}" await-children=""><main id="post" class="flex flex-row flex-wrap items-center justify-center pt2 pt4-l"><article class="post-full mw-100 ph3 ph0-l fs-20px"><h1 class="f6 f7-l fw4 gray1 pt1 pt3-l mb1">Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers</h1><p class="f3 fw5 gray5 db di-l mt2">2024-03-14</p><ul class="author-lists flex pl0 mt4"><li class="list flex items-center pr2 mb1-ns"><a href="/author/dina" class="static-avatar pr1"><img class="author-profile-image br-100 mr2" src="https://blog.cloudflare.com/cdn-cgi/image/format=auto,dpr=3,width=64,height=64,gravity=face,fit=crop,zoom=0.5/https://cf-assets.www.cloudflare.com/zkvhlag99gkb/bY78cK0burCjZbD6jOgAH/a8479b5ea6dd8fb3acb41227c1a4ad0e/dina.jpg" alt="Dina Kozlov" width="62" height="62"/></a><div class="author-name-tooltip"><a href="/author/dina" class="fw4 f3 no-underline black mr3">Dina Kozlov</a></div></li></ul><section class="post-full-content"><div class="mb2 gray5">3 min read</div><div class="post-content lh-copy gray1">
            <figure class="kg-card kg-image-card ">
            
            <Image src="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4nIzJL4s3S6cuVYueIA32E/a7e5d198da5e722e6a8c7b7e04c8cf13/Security-Week---Backup-Certs--1-.png" alt="Upcoming Letâs Encrypt certificate chain change and impact for Cloudflare customers" class="kg-image" width="1201" height="675" loading="lazy"/>
            
            </figure><p>Letâs Encrypt, a publicly trusted certificate authority (CA) that Cloudflare uses to issue TLS certificates, has been relying on two distinct certificate chains. One is cross-signed with IdenTrust, a globally trusted CA that has been around since 2000, and the other is Letâs Encryptâs own root CA, ISRG Root X1. Since Letâs Encrypt launched, ISRG Root X1 has been steadily gaining its own device compatibility.</p><p>On September 30, 2024, Letâs Encryptâs certificate chain cross-signed with IdenTrust will <a href="https://letsencrypt.org/2023/07/10/cross-sign-expiration.html">expire</a>. To proactively prepare for this change, on May 15, 2024, Cloudflare will stop issuing certificates from the cross-signed chain and will instead use Letâs Encryptâs ISRG Root X1 chain for all future Letâs Encrypt certificates.</p><p>The change in the certificate chain will impact legacy devices and systems, such as Android devices version 7.1.1 or older, as those exclusively rely on the cross-signed chain and lack the ISRG X1 root in their trust store. These clients may encounter TLS errors or warnings when accessing domains secured by a Letâs Encrypt certificate.</p><p>According to Letâs Encrypt, more than 93.9% of Android devices already trust the ISRG Root X1 and this number is expected to increase in 2024, especially as Android releases version 14, which makes the Android trust store easily and automatically upgradable.</p><p>We took a look at the data ourselves and found that, from all Android requests, 2.96% of them come from devices that will be affected by the change. In addition, only 1.13% of all requests from Firefox come from affected versions, which means that most (98.87%) of the requests coming from Android versions that are using Firefox will not be impacted.</p>
          <div class="flex anchor relative">
            <h3 id="preparing-for-the-change">Preparing for the change</h3>
            <a href="#preparing-for-the-change" aria-hidden="true" class="relative sm:absolute sm:-left-5">
              <svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg>
            </a>
          </div>
        <p>If youâre worried about the change impacting your clients, there are a few things that you can do to reduce the impact of the change. If you control the clients that are connecting to your application, we recommend updating the trust store to include the <a href="https://letsencrypt.org/certificates/#root-certificates">ISRG Root X1</a>. If you use certificate pinning, remove or update your pin. In general, we discourage all customers from pinning their certificates, as this usually leads to issues during certificate renewals or CA changes.</p><p>If you experience issues with the Letâs Encrypt chain change, and youâre using <a href="https://developers.cloudflare.com/ssl/edge-certificates/advanced-certificate-manager/">Advanced Certificate Manager</a> or <a href="https://developers.cloudflare.com/cloudflare-for-platforms/cloudflare-for-saas/security/certificate-management/">SSL for SaaS</a> on the Enterprise plan, you can choose to switch your certificate to use Google Trust Services as the certificate authority instead.</p><p>For more information, please refer to our <a href="https://developers.cloudflare.com/ssl/reference/migration-guides/lets-encrypt-chain/">developer documentation</a>.</p><p>While this change will impact a very small portion of clients, we support the shift that Letâs Encrypt is making as it supports a more secure and agile Internet.</p>
          <div class="flex anchor relative">
            <h3 id="embracing-change-to-move-towards-a-better-internet">Embracing change to move towards a better Internet</h3>
            <a href="#embracing-change-to-move-towards-a-better-internet" aria-hidden="true" class="relative sm:absolute sm:-left-5">
              <svg width="16" height="16" viewBox="0 0 24 24"><path fill="currentcolor" d="m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z"></path></svg>
            </a>
          </div>
        <p>Looking back, there were a number of challenges that slowed down the adoption of new technologies and standards that helped make the Internet faster, more secure, and more reliable.</p><p>For starters, before Cloudflare <a href="/introducing-universal-ssl">launched Universal SSL</a>, free certificates were not attainable. Instead, domain owners had to pay around $100 to get a TLS certificate. For a small business, this is a big cost and without browsers enforcing <a href="https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/">TLS</a>, this significantly hindered TLS adoption for years. Insecure algorithms have taken decades to deprecate due to lack of support of new algorithms in browsers or devices. We learned this lesson while <a href="/sha-1-deprecation-no-browser-left-behind/">deprecating SHA-1</a>.</p><p>Supporting new security standards and protocols is vital for us to continue improving the Internet. Over the years, big and sometimes risky changes were made in order for us to move forward. The launch of Letâs Encrypt in 2015 was monumental. Letâs Encrypt allowed every domain to get a TLS certificate for free, which paved the way to a more secure Internet, with now <a href="https://radar.cloudflare.com/adoption-and-usage#http-vs-https">around 98%</a> of traffic using <a href="https://www.cloudflare.com/learning/ssl/what-is-https/">HTTPS</a>.</p><p>In 2014, Cloudflare launched elliptic curve digital signature algorithm (<a href="/ecdsa-the-digital-signature-algorithm-of-a-better-internet">ECDSA</a>) support for Cloudflare-issued certificates and made the decision to issue ECDSA-only certificates to free customers. This boosted ECDSA adoption by pressing clients and web operators to make changes to support the <a href="https://www.cloudflare.com/dns/dnssec/ecdsa-and-dnssec/">new algorithm</a>, which provided the same (if not better) security as RSA while also improving performance. In addition to that, modern browsers and operating systems are now being built in a way that allows them to constantly support new standards, so that they can deprecate old ones.</p><p>For us to move forward in supporting new standards and protocols, we need to make the Public Key Infrastructure (PKI) ecosystem more agile. By retiring the cross-signed chain, Letâs Encrypt is pushing devices, browsers, and clients to support adaptable trust stores. This allows clients to support new standards without causing a breaking change. It also lays the groundwork for new certificate authorities to emerge.</p><p>Today, one of the main reasons why thereâs a limited number of CAs available is that it takes years for them to become widely trusted, that is, without cross-signing with another CA. In 2017, Google launched a new publicly trusted CA, <a href="https://pki.goog/">Google Trust Services</a>, that issued free TLS certificates. Even though they launched a few years after Letâs Encrypt, they faced the same challenges with device compatibility and adoption, which caused them to cross-sign with GlobalSignâs CA. We hope that, by the time GlobalSignâs CA comes up for expiration, almost all traffic is coming from a modern client and browser, meaning the change impact should be minimal.</p></div></section><section class="post-full-content flex flex-row flex-wrap mw7 center mb4"><div class="post-content lh-copy w-100 gray1 bt b--gray8 pt4">Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href="https://www.cloudflare.com/careers" rel='noreferrer'>our open positions</a>.</div></section><div class="pv2 ph0-l mw7 center" id="social-buttons"><div class="mt5-l mt2 mb4 f2 flex flex-row-ns flex-column flex-wrap"><a id="social-button-hn" title="Discuss on Hacker News" href="https://news.ycombinator.com/submitlink?u=https://blog.cloudflare.com/upcoming-lets-encrypt-certificate-chain-change-and-impact-for-cloudflare-customers" target="_blank" rel="noreferrer" class="mr2-ns mb0-l white link b pv3 ph3 mb3 " style="background-color:#0055DC"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 512 512" class="mr2"><g><path d="M31,31v450h450V31H31z M270.1,287.6v94.9h-28.1v-94.9L165,143.5h31.9L256,254.3l59.1-110.8H347
C347,143.5,270.1,287.6,270.1,287.6z"></path></g></svg><span class="v-mid">Discuss on Hacker News</span></a></div></div><iframe sandbox="allow-scripts allow-popups" title="cloudflare-tv-live-link" id="cloudflare-tv-embed" src="https://cloudflare.tv/embed/live.html" loading="lazy"></iframe><a href="/tag/security" class="dib pl2 pr2 pt1 pb1 mb2 bg-gray8 no-underline blue3 f2 mr1">Security</a><a href="/tag/developers" class="dib pl2 pr2 pt1 pb1 mb2 bg-gray8 no-underline blue3 f2 mr1">Developers</a><a href="/tag/developer-platform" class="dib pl2 pr2 pt1 pb1 mb2 bg-gray8 no-underline blue3 f2 mr1">Developer Platform</a><a href="/tag/ssl" class="dib pl2 pr2 pt1 pb1 mb2 bg-gray8 no-underline blue3 f2 mr1">SSL</a><a href="/tag/tls" class="dib pl2 pr2 pt1 pb1 mb2 bg-gray8 no-underline blue3 f2 mr1">TLS</a><a href="/tag/application-security" class="dib pl2 pr2 pt1 pb1 mb2 bg-gray8 no-underline blue3 f2 mr1">Application Security</a></article></main><div class="ph3 pv3"><div class=" flex flex-row flex-wrap mw7 center"><div class="w-100 bt b--gray8"><p class="black fw5 f4 mt4">Follow on X</p></div><div class="w-100 pb2"><span>Dina Kozlov</span><span class="ph1">|</span><a href="https://x.com/@dinasaur_404" class="no-underline">@dinasaur_404</a></div><div class="w-100 pb2"><span>Cloudflare</span><span class="ph2">|</span><a href="https://x.com/@cloudflare" class="no-underline">@cloudflare</a></div></div></div><div data-testid="related-posts-section" class="pv4 ph3 ph0-l flex flex-row flex-wrap mw7 center"><div class="w-100 bt b--gray8"><p class="orange fw5 f4 mt4 ttu">Related posts</p></div><article data-testid="related-posts-article" class="w-100 w-100-m w-50-l ph3 mb4"><p data-testid="related-posts-article-date" class="f3 fw5 gray5" data-iso-date="2024-11-07T14:00+00:00">November 07, 2024  2:00 PM</p><a data-testid="related-posts-article-title" href="/another-look-at-pq-signatures" class="no-underline gray1 f4 fw5"><h2 class="gray1 f4 fw5 mt2">A look at the latest post-quantum signature standardization candidates</h2></a><p data-testid="related-posts-article-excerpt" class="gray1 lh-copy">NIST has standardized four post-quantum signature schemes so far, and theyâre not done yet: there are fourteen new candidates in the running for standardization. In this blog post we take measure of them and discover why we ended up with so many PQ signatures.<!-- -->...</p><ul class="flex pl0 fw6 f2 mb3 flex flex-wrap"><span>By<!-- -->Â </span><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/bas" class="fw5 f2 black no-underline">Bas Westerbaan</a><span class="fw5 f2 black no-underline">,Â </span></div></li><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/luke" class="fw5 f2 black no-underline">Luke Valenta</a></div></li></ul><div data-testid="related-posts-article-tags" class="flex flex-row flex-wrap"><span><a href="/tag/post-quantum" class="no-underline f1 fw2 blue3 underline-hover">Post-Quantum<!-- -->,</a>Â </span><span><a href="/tag/research" class="no-underline f1 fw2 blue3 underline-hover">Research<!-- -->,</a>Â </span><span><a href="/tag/cryptography" class="no-underline f1 fw2 blue3 underline-hover">Cryptography<!-- -->,</a>Â </span><span><a href="/tag/tls" class="no-underline f1 fw2 blue3 underline-hover">TLS</a>Â </span></div></article><article data-testid="related-posts-article" class="w-100 w-100-m w-50-l ph3 mb4"><p data-testid="related-posts-article-date" class="f3 fw5 gray5" data-iso-date="2024-10-31T13:00+00:00">October 31, 2024  1:00 PM</p><a data-testid="related-posts-article-title" href="/workers-builds-integrated-ci-cd-built-on-the-workers-platform" class="no-underline gray1 f4 fw5"><h2 class="gray1 f4 fw5 mt2">Workers Builds: integrated CI/CD built on the Workers platform</h2></a><p data-testid="related-posts-article-excerpt" class="gray1 lh-copy">Workers Builds, an integrated CI/CD pipeline for the Workers platform, recently launched in open beta. We walk through how we built this product on Cloudflareâs Developer Platform.<!-- -->...</p><ul class="flex pl0 fw6 f2 mb3 flex flex-wrap"><span>By<!-- -->Â </span><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/serena" class="fw5 f2 black no-underline">Serena Shah-Simpson</a><span class="fw5 f2 black no-underline">,Â </span></div></li><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/jacob-hands" class="fw5 f2 black no-underline">Jacob Hands</a><span class="fw5 f2 black no-underline">,Â </span></div></li><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/natalie" class="fw5 f2 black no-underline">Natalie Rogers</a></div></li></ul><div data-testid="related-posts-article-tags" class="flex flex-row flex-wrap"><span><a href="/tag/developer-platform" class="no-underline f1 fw2 blue3 underline-hover">Developer Platform<!-- -->,</a>Â </span><span><a href="/tag/developers" class="no-underline f1 fw2 blue3 underline-hover">Developers<!-- -->,</a>Â </span><span><a href="/tag/agile-developer-services" class="no-underline f1 fw2 blue3 underline-hover">Agile Developer Services<!-- -->,</a>Â </span><span><a href="/tag/workers" class="no-underline f1 fw2 blue3 underline-hover">Cloudflare Workers</a>Â </span></div></article><article data-testid="related-posts-article" class="w-100 w-100-m w-50-l ph3 mb4"><p data-testid="related-posts-article-date" class="f3 fw5 gray5" data-iso-date="2024-10-31T13:00+00:00">October 31, 2024  1:00 PM</p><a data-testid="related-posts-article-title" href="/80-percent-lower-cloud-cost-how-baselime-moved-from-aws-to-cloudflare" class="no-underline gray1 f4 fw5"><h2 class="gray1 f4 fw5 mt2">Moving Baselime from AWS to Cloudflare: simpler architecture, improved performance, over 80% lower cloud costs</h2></a><p data-testid="related-posts-article-excerpt" class="gray1 lh-copy">Post-acquisition, we migrated Baselime from AWS to the Cloudflare Developer Platform and in the process, we improved query times, simplified data ingestion, and now handle far more events, all while cutting costs. Hereâs how we built a modern, high-performing observability platform on Cloudflareâs network. <!-- -->...</p><ul class="flex pl0 fw6 f2 mb3 flex flex-wrap"><span>By<!-- -->Â </span><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/boris-tane" class="fw5 f2 black no-underline">Boris Tane</a></div></li></ul><div data-testid="related-posts-article-tags" class="flex flex-row flex-wrap"><span><a href="/tag/observability" class="no-underline f1 fw2 blue3 underline-hover">Observability<!-- -->,</a>Â </span><span><a href="/tag/workers" class="no-underline f1 fw2 blue3 underline-hover">Cloudflare Workers<!-- -->,</a>Â </span><span><a href="/tag/developer-platform" class="no-underline f1 fw2 blue3 underline-hover">Developer Platform<!-- -->,</a>Â </span><span><a href="/tag/performance" class="no-underline f1 fw2 blue3 underline-hover">Performance</a>Â </span></div></article><article data-testid="related-posts-article" class="w-100 w-100-m w-50-l ph3 mb4"><p data-testid="related-posts-article-date" class="f3 fw5 gray5" data-iso-date="2024-10-25T14:00+01:00">October 25, 2024  1:00 PM</p><a data-testid="related-posts-article-title" href="/elephants-in-tunnels-how-hyperdrive-connects-to-databases-inside-your-vpc-networks" class="no-underline gray1 f4 fw5"><h2 class="gray1 f4 fw5 mt2">Elephants in tunnels: how Hyperdrive connects to databases inside your VPC networks</h2></a><p data-testid="related-posts-article-excerpt" class="gray1 lh-copy">Hyperdrive (Cloudflareâs globally distributed SQL connection pooler and cache) recently added support for directing database traffic from Workers across Cloudflare Tunnels. We dive deep on what it took to add this feature.<!-- -->...</p><ul class="flex pl0 fw6 f2 mb3 flex flex-wrap"><span>By<!-- -->Â </span><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/andrew-repp" class="fw5 f2 black no-underline">Andrew Repp</a><span class="fw5 f2 black no-underline">,Â </span></div></li><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/emilio-assuncao" class="fw5 f2 black no-underline">Emilio AssunÃ§Ã£o</a><span class="fw5 f2 black no-underline">,Â </span></div></li><li class="list flex items-center" style="white-space:nowrap"><div class="author-name-tooltip"><a href="/author/abhishek-chanda" class="fw5 f2 black no-underline">Abhishek Chanda</a></div></li></ul><div data-testid="related-posts-article-tags" class="flex flex-row flex-wrap"><span><a href="/tag/developer-platform" class="no-underline f1 fw2 blue3 underline-hover">Developer Platform<!-- -->,</a>Â </span><span><a href="/tag/deep-dive" class="no-underline f1 fw2 blue3 underline-hover">Deep Dive<!-- -->,</a>Â </span><span><a href="/tag/workers" class="no-underline f1 fw2 blue3 underline-hover">Cloudflare Workers<!-- -->,</a>Â </span><span><a href="/tag/hyperdrive" class="no-underline f1 fw2 blue3 underline-hover">Hyperdrive<!-- -->,</a>Â </span><span><a href="/tag/postgres" class="no-underline f1 fw2 blue3 underline-hover">Postgres<!-- -->,</a>Â </span><span><a href="/tag/sql" class="no-underline f1 fw2 blue3 underline-hover">SQL<!-- -->,</a>Â </span><span><a href="/tag/rust" class="no-underline f1 fw2 blue3 underline-hover">Rust<!-- -->,</a>Â </span><span><a href="/tag/websockets" class="no-underline f1 fw2 blue3 underline-hover">WebSockets</a>Â </span></div></article></div><!--astro:end--></astro-island><footer class="pt4 pb4 pl1 pr1 main-footer"><div class="mw8 center dn db-l ph3"><div class="flex flex-row justify-between"><div class="main-footer__menu-group"><ul id="getting-started-menu" class="list pl0"><li class="pt1 pb1 f1 main-footer__menu-group__header js-toggle-footer-group" data-submenu="getting-started-menu">Getting Started<i class="icon-caret-down"></i></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/plans/free/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="free-plans" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Free plans</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/enterprise/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="enterprise" class="f1 blue3 no-underline underline-hover" rel="noreferrer">For enterprises</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/plans/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="compare-plans" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Compare plans</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/about-your-website/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="get-a-recommendation" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Get a recommendation</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/plans/enterprise/demo/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="request-a-demo" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Request a demo</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/plans/enterprise/contact/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="contact-sales" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Contact Sales</a></li></ul></div><div class="main-footer__menu-group"><ul id="company-menu" class="list pl0"><li class="pt1 pb1 f1" data-submenu="company-menu">Resources<i class="icon-caret-down"></i></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/learning/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="learning-center" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Learning Center</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/analysts/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="analysts-report" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Analyst reports</a></li><li class="pt1 pb1"><a href="https://radar.cloudflare.com/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="overview" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Cloudflare Radar</a></li><li class="pt1 pb1"><a href="https://cloudflare.tv/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="tv" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Cloudflare TV</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/case-studies/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="case-studies" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Case Studies</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/resource-hub/?resourcetype=Webinar" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="webinars" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Webinars</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/resource-hub/?resourcetype=Whitepaper" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="white-papers" class="f1 blue3 no-underline underline-hover" rel="noreferrer">White Papers</a></li><li class="pt1 pb1"><a href="https://developers.cloudflare.com" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="developer-docs" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Developer docs</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/the-net/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="theNet" class="f1 blue3 no-underline underline-hover" rel="noreferrer">theNet</a></li></ul></div><div class="main-footer__menu-group"><ul id="sales-menu" class="list pl0"><li class="pt1 pb1 f1 main-footer__menu-group__header js-toggle-footer-group" data-submenu="sales-menu">Solutions<i class="icon-caret-down"></i></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/connectivity-cloud/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="connectivity-cloud" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Connectivity cloud</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/zero-trust/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="zero-trust" class="f1 blue3 no-underline underline-hover" rel="noreferrer">SSE and SASE services</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/application-services/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="application-services" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Application services</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/network-services/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="network-services" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Network services</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/developer-platform/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="developer-services" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Developer services</a></li></ul></div><div class="main-footer__menu-group"><ul id="community-menu" class="list pl0"><li class="pt1 pb1 f1 main-footer__menu-group__header js-toggle-footer-group" data-submenu="community-menu">Community<i class="icon-caret-down"></i></li><li class="pt1 pb1"><a href="https://community.cloudflare.com" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="community_hub" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Community Hub</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/galileo/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="galileo" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Project Galileo</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/athenian/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="athenian" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Athenian Project</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/campaigns/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="cloudflare-for-campaigns" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Cloudflare for Campaigns</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/partners/technology-partners/cidp/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="critical-infrastructure-defense-project" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Critical Infrastructure Defense Project</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/connect2024/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="connect-2024" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Connect 2024</a></li></ul></div><div class="main-footer__menu-group"><ul id="support-menu" class="list pl0"><li class="pt1 pb1 f1 main-footer__menu-group__header js-toggle-footer-group" data-submenu="support-menu">Support<i class="icon-caret-down"></i></li><li class="pt1 pb1"><a href="https://support.cloudflare.com" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="help-center" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Help center</a></li><li class="pt1 pb1"><a href="https://www.cloudflarestatus.com" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="status" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Cloudflare Status</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/compliance/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="compliance" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Compliance</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/gdpr/introduction/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="gdpr" class="f1 blue3 no-underline underline-hover" rel="noreferrer">GDPR</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/trust-hub/abuse-approach/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="trust-and-safety" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Trust &amp; Safety</a></li></ul></div><div class="main-footer__menu-group"><ul id="company-menu" class="list pl0"><li class="pt1 pb1 f1 main-footer__menu-group__header js-toggle-footer-group" data-submenu="company-menu">Company<i class="icon-caret-down"></i></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/about-overview/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="overview" class="f1 blue3 no-underline underline-hover" rel="noreferrer">About Cloudflare</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/people/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="our_team" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Our team</a></li><li class="pt1 pb1"><a href="https://cloudflare.net/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="investor-relations" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Investor relations</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/press/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="press" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Press</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/careers/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="careers" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Careers</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/diversity-equity-and-inclusion/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="diversity-equity-inclusion" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Diversity, equity &amp; inclusion</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/impact/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="impact-ESG" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Impact/ESG</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/network/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="network_map" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Network Map</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/press-kit/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="press-kit" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Logos &amp; press kit</a></li><li class="pt1 pb1"><a href="https://www.cloudflare.com/partners/" target="_blank" data-tracking-category="footer" data-tracking-action="click" data-tracking-label="partners" class="f1 blue3 no-underline underline-hover" rel="noreferrer">Become a partner</a></li></ul></div></div></div><div class="mw8 center ph3"><div class="flex flex-row flex-wrap justify-center md:justify-between items-center pt4"><div class="flex flex-row space-x-4 items-start w-25-l pb4 pb0-l"><a target="_blank" rel="noreferrer" href="https://www.facebook.com/Cloudflare/" class="w-8"><img class="w-8" src="https://www.cloudflare.com/img/footer/facebook.svg" alt="facebook"/></a><a target=" _blank" rel="noreferrer" href="https://x.com/Cloudflare" class="w-8"><img class="w-8" src="https://www.cloudflare.com/img/footer/twitter.svg" alt="X"/></a><a target="_blank" rel="noreferrer" href="https://www.linkedin.com/company/cloudflare" class="w-8"><img class="w-8" src="https://www.cloudflare.com/img/footer/linkedin.svg" alt="linkedin"/></a><a target="_blank" rel="noreferrer" href="https://www.youtube.com/cloudflare" class="w-8"><img class="w-8" src="https://www.cloudflare.com/img/footer/youtube.svg" alt="youtube"/></a><a target="_blank" rel="noreferrer" href="https://www.instagram.com/cloudflare" class="w-8"><img class="w-8" src="https://www.cloudflare.com/img/footer/instagram.svg" alt="instagram"/></a></div><div class="w-70-l tr-l tl-ns"><div><span class="main-footer__copyright f1">Â© <!-- -->2024<!-- --> Cloudflare, Inc.<!-- --> </span><span class="main-footer__copyright f1">|</span><a href="https://www.cloudflare.com/privacypolicy/" target="_blank" class="main-footer__copyright f1 no-underline underline-hover" rel="noreferrer"> <!-- -->Privacy Policy<!-- --> </a><span class="main-footer__copyright f1">|</span><a href="https://www.cloudflare.com/website-terms/" target="_blank" class="main-footer__copyright f1 no-underline underline-hover" rel="noreferrer"> <!-- -->Terms of Use<!-- --> </a><span class="main-footer__copyright f1">|</span><a href="https://www.cloudflare.com/disclosure/" target="_blank" class="main-footer__copyright f1 no-underline underline-hover" rel="noreferrer"> <!-- -->Report Security Issues<!-- --> </a><span class="main-footer__copyright f1">|</span><img class="mw2 ph1" src="/images/privacy-options.svg" alt="Privacy Options"/><a href="#cookie-settings" id="ot-sdk-btn" class="ot-sdk-show-settings main-footer__copyright f1 no-underline underline-hover"><span class="brandGray5">Cookie Preferences</span> </a><span class="main-footer__copyright f1">|</span><a href="https://www.cloudflare.com/trademark/" target="_blank" class="main-footer__copyright f1 no-underline underline-hover" rel="noreferrer"> <!-- -->Trademark<!-- --> </a></div></div></div></div></footer></html><script defer src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon='{"rayId":"8e0f99b19914cae8","version":"2024.10.5","serverTiming":{"name":{"cfExtPri":true,"cfL4":true,"cfSpeedBrain":true,"cfCacheStatus":true}},"token":"2bc156e5f250476cb274d269511ffb57","b":1}' crossorigin="anonymous"></script>
