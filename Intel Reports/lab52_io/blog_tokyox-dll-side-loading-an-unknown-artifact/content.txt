<!DOCTYPE html>
<html lang="en-GB">
<head >
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />

<!-- Author Meta Tags by Molongui Authorship, visit: https://wordpress.org/plugins/molongui-authorship/ -->
<meta name="author" content="ml10">
<meta property="article:author" content="https://www.facebook.com/" />
<!-- /Molongui Authorship -->

<title>TokyoX: DLL side-loading an unknown artifact</title>
<meta name='robots' content='max-image-preview:large' />
<link rel="alternate" type="application/rss+xml" title="lab52 &raquo; Feed" href="https://lab52.io/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="lab52 &raquo; Comments Feed" href="https://lab52.io/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="lab52 &raquo; TokyoX: DLL side-loading an unknown artifact Comments Feed" href="https://lab52.io/blog/tokyox-dll-side-loading-an-unknown-artifact/feed/" />
<link rel="canonical" href="https://lab52.io/blog/tokyox-dll-side-loading-an-unknown-artifact/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/lab52.io\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.6.2"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<link rel='stylesheet' id='atomic-blocks-fontawesome-css' href='https://lab52.io/blog/wp-content/plugins/atomic-blocks/dist/assets/fontawesome/css/all.min.css?ver=1598525594' type='text/css' media='all' />
<link rel='stylesheet' id='genesis-sample-css' href='https://lab52.io/blog/wp-content/themes/genesis-sample-develop/style.css?ver=2.9.2-dev' type='text/css' media='all' />
<style id='genesis-sample-inline-css' type='text/css'>

		.wp-custom-logo .title-area {
			padding-top: 7px;
		}
		
</style>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://lab52.io/blog/wp-includes/css/dist/block-library/style.min.css?ver=6.6.2' type='text/css' media='all' />
<link rel='stylesheet' id='atomic-blocks-style-css-css' href='https://lab52.io/blog/wp-content/plugins/atomic-blocks/dist/blocks.style.build.css?ver=1598525594' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--theme-primary: #0073e5;--wp--preset--color--theme-secondary: #0073e5;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 12px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 20px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-size--normal: 18px;--wp--preset--font-size--larger: 24px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='dashicons-css' href='https://lab52.io/blog/wp-includes/css/dashicons.min.css?ver=6.6.2' type='text/css' media='all' />
<link rel='stylesheet' id='genesis-sample-gutenberg-css' href='https://lab52.io/blog/wp-content/themes/genesis-sample-develop/lib/gutenberg/front-end.css?ver=2.9.2-dev' type='text/css' media='all' />
<style id='genesis-sample-gutenberg-inline-css' type='text/css'>
.ab-block-post-grid .ab-post-grid-items h2 a:hover {
	color: #0073e5;
}

.site-container .wp-block-button .wp-block-button__link {
	background-color: #0073e5;
}

.wp-block-button .wp-block-button__link:not(.has-background),
.wp-block-button .wp-block-button__link:not(.has-background):focus,
.wp-block-button .wp-block-button__link:not(.has-background):hover {
	color: #ffffff;
}

.site-container .wp-block-button.is-style-outline .wp-block-button__link {
	color: #0073e5;
}

.site-container .wp-block-button.is-style-outline .wp-block-button__link:focus,
.site-container .wp-block-button.is-style-outline .wp-block-button__link:hover {
	color: #2396ff;
}		.site-container .has-small-font-size {
			font-size: 12px;
		}		.site-container .has-normal-font-size {
			font-size: 18px;
		}		.site-container .has-large-font-size {
			font-size: 20px;
		}		.site-container .has-larger-font-size {
			font-size: 24px;
		}		.site-container .has-theme-primary-color,
		.site-container .wp-block-button .wp-block-button__link.has-theme-primary-color,
		.site-container .wp-block-button.is-style-outline .wp-block-button__link.has-theme-primary-color {
			color: #0073e5;
		}

		.site-container .has-theme-primary-background-color,
		.site-container .wp-block-button .wp-block-button__link.has-theme-primary-background-color,
		.site-container .wp-block-pullquote.is-style-solid-color.has-theme-primary-background-color {
			background-color: #0073e5;
		}		.site-container .has-theme-secondary-color,
		.site-container .wp-block-button .wp-block-button__link.has-theme-secondary-color,
		.site-container .wp-block-button.is-style-outline .wp-block-button__link.has-theme-secondary-color {
			color: #0073e5;
		}

		.site-container .has-theme-secondary-background-color,
		.site-container .wp-block-button .wp-block-button__link.has-theme-secondary-background-color,
		.site-container .wp-block-pullquote.is-style-solid-color.has-theme-secondary-background-color {
			background-color: #0073e5;
		}
</style>
<link rel='stylesheet' id='simple-social-icons-font-css' href='https://lab52.io/blog/wp-content/plugins/simple-social-icons/css/style.css?ver=3.0.2' type='text/css' media='all' />
<link rel='stylesheet' id='wpgdprc.css-css' href='https://lab52.io/blog/wp-content/plugins/wp-gdpr-compliance/assets/css/front.min.css?ver=1592813009' type='text/css' media='all' />
<style id='wpgdprc.css-inline-css' type='text/css'>

            div.wpgdprc .wpgdprc-switch .wpgdprc-switch-inner:before { content: 'Yes'; }
            div.wpgdprc .wpgdprc-switch .wpgdprc-switch-inner:after { content: 'No'; }
        
</style>
<script type="text/javascript" src="https://lab52.io/blog/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://lab52.io/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="https://api.w.org/" href="https://lab52.io/blog/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://lab52.io/blog/wp-json/wp/v2/posts/1168" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://lab52.io/blog/xmlrpc.php?rsd" />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://lab52.io/blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Flab52.io%2Fblog%2Ftokyox-dll-side-loading-an-unknown-artifact%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://lab52.io/blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Flab52.io%2Fblog%2Ftokyox-dll-side-loading-an-unknown-artifact%2F&#038;format=xml" />
        <style>
            .molongui-disabled-link
            {
                border-bottom: none !important;
                text-decoration: none !important;
                color: inherit !important;
                cursor: inherit !important;
            }
            .molongui-disabled-link:hover,
            .molongui-disabled-link:hover span
            {
                border-bottom: none !important;
                text-decoration: none !important;
                color: inherit !important;
                cursor: inherit !important;
            }
        </style>
        <link rel="pingback" href="https://lab52.io/blog/xmlrpc.php" />
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-95M8JQNZBF"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-95M8JQNZBF');
</script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-138573737-1');
</script>
<link rel="stylesheet" id="custom" href="/blog/wp-content/themes/genesis-sample-develop/custom.css" type="text/css" media="all">


<link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.css" />
<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>

<script>
window.addEventListener("load", function(){
window.cookieconsent.initialise({
  "palette": {
    "popup": {
      "background": "#edeff5",
      "text": "#838391"
    },
    "button": {
      "background": "#4b81e8"
    }
  },
  "theme": "classic",
  "content": {
    "message": "We use our own and third-party cookies to improve and analyze your use of our site. You can change the settings, reject them or get more information about our cookie policy",
    "href": "/cookie_policy"
  }
})});
</script><link rel="icon" href="https://lab52.io/blog/wp-content/uploads/2019/03/cropped-logo-Lab52-32x32.png" sizes="32x32" />
<link rel="icon" href="https://lab52.io/blog/wp-content/uploads/2019/03/cropped-logo-Lab52-192x192.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://lab52.io/blog/wp-content/uploads/2019/03/cropped-logo-Lab52-180x180.png" />
<meta name="msapplication-TileImage" content="https://lab52.io/blog/wp-content/uploads/2019/03/cropped-logo-Lab52-270x270.png" />
</head>
<body class="post-template-default single single-post postid-1168 single-format-standard wp-custom-logo wp-embed-responsive header-full-width full-width-content genesis-breadcrumbs-hidden genesis-footer-widgets-visible first-block-core-paragraph" itemscope itemtype="https://schema.org/WebPage"><div class="site-container"><ul class="genesis-skip-link"><li><a href="#genesis-nav-primary" class="screen-reader-shortcut"> Skip to primary navigation</a></li><li><a href="#genesis-content" class="screen-reader-shortcut"> Skip to main content</a></li><li><a href="#genesis-footer-widgets" class="screen-reader-shortcut"> Skip to footer</a></li></ul><header class="site-header" itemscope itemtype="https://schema.org/WPHeader"><div class="wrap"><div class="title-area"><a href="https://lab52.io/blog/" class="custom-logo-link" rel="home"><img width="150" height="56" src="https://lab52.io/blog/wp-content/uploads/2019/03/lab52.png" class="custom-logo" alt="lab52" decoding="async" /></a><p class="site-title" itemprop="headline"><a href="https://lab52.io/blog/">lab52</a></p><p class="site-description" itemprop="description">The threat intelligence division of S2 Grupo</p></div><nav class="nav-primary" aria-label="Main" itemscope itemtype="https://schema.org/SiteNavigationElement" id="genesis-nav-primary"><div class="wrap"><ul id="menu-header-menu" class="menu genesis-nav-menu menu-primary js-superfish"><li id="menu-item-35" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-35"><a href="/" itemprop="url"><span itemprop="name">Home</span></a></li>
<li id="menu-item-36" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-36"><a href="/faq" itemprop="url"><span itemprop="name">Faq</span></a></li>
<li id="menu-item-167" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-167"><a href="/blog" itemprop="url"><span itemprop="name">Blog</span></a></li>
<li id="menu-item-38" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-38"><a href="/about" itemprop="url"><span itemprop="name">About</span></a></li>
<li id="menu-item-39" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-39"><a href="/contact" itemprop="url"><span itemprop="name">Contact</span></a></li>
</ul></div></nav></div></header><div class="site-inner"><div class="content-sidebar-wrap"><main class="content" id="genesis-content"><article class="post-1168 post type-post status-publish format-standard has-post-thumbnail category-uncategorised entry" aria-label="TokyoX: DLL side-loading an unknown artifact" itemscope itemtype="https://schema.org/CreativeWork"><header class="entry-header"><h1 class="entry-title" itemprop="headline">TokyoX: DLL side-loading an unknown artifact</h1>
<p class="entry-meta"><time class="entry-time" itemprop="datePublished" datetime="2022-01-10T18:07:26+01:00">January 10, 2022</time></p></header><div class="entry-content" itemprop="text">
<p>During Christmas holidays, Lab52 has been analyzing a sample which loads an artifact that we have decided to refer to as “TokyoX” since no similarities have been found as to any known malware, which we usually detect in open sources. However, we cannot confirm so far that it is indeed a new family of malware.</p>



<p>The first thing we identified was a DLL <br>(382b3d3bb1be4f14dbc1e82a34946a52795288867ed86c6c43e4f981729be4fc) which had the following timestamps in VirusTotal at the time of the current analysis, and was uploaded from Russia via web site:</p>



<p class="has-text-align-center">Creation Time 2021-12-09 02:46:43<br>First Submission 2021-12-09 08:48:20<br>Last Submission 2021-12-09 08:48:20<br>Last Analysis 2021-12-23 23:38:08</p>



<p>Some antivirus engines tagged the sample as PlugX, but it seems that the attribution might be due to the final payload’s loading mechanism: DLL sideloading with an encrypted payload in the same directory. After analyzing the final payload we could not find any similarities with other known samples from PlugX other than the loading TTPs.</p>



<p>This DLL had a related .zip file with the name планирование.zip (translated to as planning.zip). When unzipping, the following files are observed:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img decoding="async" width="228" height="81" src="https://lab52.io/blog/wp-content/uploads/2022/01/00.png" alt="" class="wp-image-1169"/></figure></div>



<p>The legitimate file Creative.exe, an encrypted Data file and the version.dll DLL, which implements the loader function for the Data file, and therefore responsible of mapping the “TokyoX”.</p>



<p>If we execute it from a path which is not final or the expected by the malware, it replicates to another path and executes from there, which is something it does have in common with some PlugX dll loaders:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img decoding="async" width="953" height="232" src="https://lab52.io/blog/wp-content/uploads/2022/01/01.png" alt="" class="wp-image-1170" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/01.png 953w, https://lab52.io/blog/wp-content/uploads/2022/01/01-300x73.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/01-768x187.png 768w" sizes="(max-width: 953px) 100vw, 953px" /></figure></div>



<p>Once executed, we observe how the netsh.exe process tries to establish connections with port 443 of the IP address 31.192.107[.]187.</p>



<p>In this analysis we will focus on different aspects about the process; from double-clicking the binary 123.exe process (which is a copy of Creative.exe but in another path) to the execution of “TokyoX” already decrypted in memory.</p>



<p>The first thing we observe within the process is how the version.dll library prepares the decryption and the final payload’s loading in the remote process:</p>



<p>In fact, we can see how the content of the Data file is read in the code section of version.dll:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="387" src="https://lab52.io/blog/wp-content/uploads/2022/01/02-1024x387.png" alt="" class="wp-image-1171" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/02-1024x387.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/02-300x113.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/02-768x290.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/02.png 1299w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<p>If we edit the Data file with a hexadecimal editor we will see their values, which will help us to identify it in memory later (beginning with E3 84):</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="649" height="311" src="https://lab52.io/blog/wp-content/uploads/2022/01/03.png" alt="" class="wp-image-1172" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/03.png 649w, https://lab52.io/blog/wp-content/uploads/2022/01/03-300x144.png 300w" sizes="(max-width: 649px) 100vw, 649px" /></figure></div>



<p>After reading the file from disk, a child process netsh.exe is created. This just-created child process is where several new memory segments will be located (a total of 5, including the final decrypted payload) to decrypt the final “TokyoX” payload. The APIs which were observed for the creation and writing of the remote process are the native APIs NtAllocateVirtualmemory and NtwriteVirtualmemory.</p>



<p>First, it creates two segments: 100Kb where the encrypted payload is located and which comes from the disc, and another one of 4Kb. In the 4Kb segment we observe how the following string is set (which will be the string used for the decrypting process):</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="292" src="https://lab52.io/blog/wp-content/uploads/2022/01/04-1024x292.png" alt="" class="wp-image-1173" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/04-1024x292.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/04-300x85.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/04-768x219.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/04.png 1151w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<p>The other memory segment of 100Kb contains the following (encrypted content, as we see how it matches the content from Data file on Disk):</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="784" src="https://lab52.io/blog/wp-content/uploads/2022/01/05-1024x784.png" alt="" class="wp-image-1174" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/05-1024x784.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/05-300x230.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/05-768x588.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/05.png 1139w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<p>After the creation of these two segments, a third segment is allocated, where it is loaded the absolute memory addresses from several win32 APIs (VirtualAlloc, LoadLibrary, GetProcAddress, the home address of the coded payload, etc.) for its later use by the loader:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="592" height="354" src="https://lab52.io/blog/wp-content/uploads/2022/01/06.png" alt="" class="wp-image-1175" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/06.png 592w, https://lab52.io/blog/wp-content/uploads/2022/01/06-300x179.png 300w" sizes="(max-width: 592px) 100vw, 592px" /></figure></div>



<p>We can notice how the segment will have the memory addresses (starting from 123.exe they are located in netsh.exe segment through the version.dll code):</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="131" src="https://lab52.io/blog/wp-content/uploads/2022/01/07-1024x131.png" alt="" class="wp-image-1176" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/07-1024x131.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/07-300x38.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/07-768x98.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/07-1536x196.png 1536w, https://lab52.io/blog/wp-content/uploads/2022/01/07.png 1690w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<p>Then, another segment of 4Kb is created where it loads the code that will decrypt and load the final payload.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1014" height="832" src="https://lab52.io/blog/wp-content/uploads/2022/01/08.png" alt="" class="wp-image-1177" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/08.png 1014w, https://lab52.io/blog/wp-content/uploads/2022/01/08-300x246.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/08-768x630.png 768w" sizes="(max-width: 1014px) 100vw, 1014px" /></figure></div>



<p>Finally, the “TokyoX” loader runs from the DLL (version.dll) in netsh.exe through the API NtcreateThreadEx and we see the start of the last page created in the stack:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="476" src="https://lab52.io/blog/wp-content/uploads/2022/01/09-1024x476.png" alt="" class="wp-image-1178" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/09-1024x476.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/09-300x140.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/09-768x357.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/09.png 1301w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<p>After the execution of NtCreateThreadEx, as indicated, the loader is initiated in netsh.exe in the segment:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="600" height="316" src="https://lab52.io/blog/wp-content/uploads/2022/01/10.png" alt="" class="wp-image-1179" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/10.png 600w, https://lab52.io/blog/wp-content/uploads/2022/01/10-300x158.png 300w" sizes="(max-width: 600px) 100vw, 600px" /></figure></div>



<p>Once the execution is moved to the netsh.exe process, it takes the string located in the initial 4Kb segment, copies it into the stack and replicates it (0x100, 256 bytes) to match the specific block size of 256bytes. In the following screenshots we can observe how the block ends with the string “!Up?” when it reaches the value 0x100 in hexadecimal.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="384" height="212" src="https://lab52.io/blog/wp-content/uploads/2022/01/11.png" alt="" class="wp-image-1180" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/11.png 384w, https://lab52.io/blog/wp-content/uploads/2022/01/11-300x166.png 300w" sizes="(max-width: 384px) 100vw, 384px" /></figure></div>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="576" height="277" src="https://lab52.io/blog/wp-content/uploads/2022/01/12.png" alt="" class="wp-image-1181" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/12.png 576w, https://lab52.io/blog/wp-content/uploads/2022/01/12-300x144.png 300w" sizes="(max-width: 576px) 100vw, 576px" /></figure></div>



<p>After the block is created with the replicated string, the values from 00 to FF are found and used for the decrypting process.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="650" height="675" src="https://lab52.io/blog/wp-content/uploads/2022/01/13.png" alt="" class="wp-image-1182" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/13.png 650w, https://lab52.io/blog/wp-content/uploads/2022/01/13-289x300.png 289w" sizes="(max-width: 650px) 100vw, 650px" /></figure></div>



<p>At this point, the loader transforms the 00-FF block with a series of additions combining the replicated string’s block with the 00-FF block, as we can see:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="648" height="384" src="https://lab52.io/blog/wp-content/uploads/2022/01/14.png" alt="" class="wp-image-1183" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/14.png 648w, https://lab52.io/blog/wp-content/uploads/2022/01/14-300x178.png 300w" sizes="(max-width: 648px) 100vw, 648px" /></figure></div>



<p>The combination of the blue block (in following image) and the 00-FF block (pointed in red in previous image) results in the following block in memory, marked in red in the image:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="857" height="753" src="https://lab52.io/blog/wp-content/uploads/2022/01/15.png" alt="" class="wp-image-1184" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/15.png 857w, https://lab52.io/blog/wp-content/uploads/2022/01/15-300x264.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/15-768x675.png 768w" sizes="(max-width: 857px) 100vw, 857px" /></figure></div>



<p>On the next step, the loader reads the initial argument, arg0, whose value is 0x900000 and points at the 4Kb block, which stores the absolute addresses to different API from Win32:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="512" height="130" src="https://lab52.io/blog/wp-content/uploads/2022/01/16.png" alt="" class="wp-image-1185" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/16.png 512w, https://lab52.io/blog/wp-content/uploads/2022/01/16-300x76.png 300w" sizes="(max-width: 512px) 100vw, 512px" /></figure></div>



<p>After this, the decrypting process for the final payload begins. The decrypting process gets two values from the second block, exchanges and adds them, and the result serves as a final index to recover the element from the second block with which the xor will be achieved through the coded block.</p>



<p>This description of the decryption algorythm has been identified as the <strong>RC4 algorythm</strong>.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="777" height="773" src="https://lab52.io/blog/wp-content/uploads/2022/01/17.png" alt="" class="wp-image-1186" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/17.png 777w, https://lab52.io/blog/wp-content/uploads/2022/01/17-300x298.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/17-768x764.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/17-75x75.png 75w" sizes="(max-width: 777px) 100vw, 777px" /></figure></div>



<p>After the decryption process, we find a PE binary, as seen in the following image. In this case, the payload does not start with the traditional MZ header but the string “tokyo”:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="622" height="782" src="https://lab52.io/blog/wp-content/uploads/2022/01/18.png" alt="" class="wp-image-1188" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/18.png 622w, https://lab52.io/blog/wp-content/uploads/2022/01/18-239x300.png 239w" sizes="(max-width: 622px) 100vw, 622px" /></figure></div>



<p>Then, we see how it loads the VirtualAlloc absolute address (0x77211856) from the segment previously created:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="307" src="https://lab52.io/blog/wp-content/uploads/2022/01/Screenshot-from-2022-01-10-16-37-59-1024x307.png" alt="" class="wp-image-1192" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/Screenshot-from-2022-01-10-16-37-59-1024x307.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/Screenshot-from-2022-01-10-16-37-59-300x90.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/Screenshot-from-2022-01-10-16-37-59-768x230.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/Screenshot-from-2022-01-10-16-37-59.png 1319w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<p>This creates another memory segment in the process netsh.exe with RWX licenses (that of 116Kb) which will be used to load the PE:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="89" src="https://lab52.io/blog/wp-content/uploads/2022/01/20-1024x89.png" alt="" class="wp-image-1193" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/20-1024x89.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/20-300x26.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/20-768x66.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/20.png 1052w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<p>In this new segment, it maps the binary using the virtual addresses as the regular Windows PE loader would do.</p>



<p>Then, it calls the API LoadLibraryA (it has the address since the DLL saved it in the memory segment) of the strings located in the mapped block:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="363" src="https://lab52.io/blog/wp-content/uploads/2022/01/21-3-1024x363.png" alt="" class="wp-image-1198" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/21-3-1024x363.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/21-3-300x106.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/21-3-768x272.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/21-3.png 1108w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<p>Then it calls GetProcAddress() to get the addresses of certain functions:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="441" src="https://lab52.io/blog/wp-content/uploads/2022/01/22-1024x441.png" alt="" class="wp-image-1197" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/22-1024x441.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/22-300x129.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/22-768x331.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/22.png 1149w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="456" height="231" src="https://lab52.io/blog/wp-content/uploads/2022/01/23.png" alt="" class="wp-image-1199" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/23.png 456w, https://lab52.io/blog/wp-content/uploads/2022/01/23-300x152.png 300w" sizes="(max-width: 456px) 100vw, 456px" /></figure></div>



<p>Next, the libraries and functions block may be appreciated:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="544" height="874" src="https://lab52.io/blog/wp-content/uploads/2022/01/24.png" alt="" class="wp-image-1200" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/24.png 544w, https://lab52.io/blog/wp-content/uploads/2022/01/24-187x300.png 187w" sizes="(max-width: 544px) 100vw, 544px" /></figure></div>



<p>After the correct mapping and having loaded the necessary libraries for its proper functioning, it calls EAX to run the decrypted and mapped payload:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="1024" height="452" src="https://lab52.io/blog/wp-content/uploads/2022/01/25-1024x452.png" alt="" class="wp-image-1201" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/25-1024x452.png 1024w, https://lab52.io/blog/wp-content/uploads/2022/01/25-300x133.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/25-768x339.png 768w, https://lab52.io/blog/wp-content/uploads/2022/01/25.png 1256w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="688" height="210" src="https://lab52.io/blog/wp-content/uploads/2022/01/26.png" alt="" class="wp-image-1202" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/26.png 688w, https://lab52.io/blog/wp-content/uploads/2022/01/26-300x92.png 300w" sizes="(max-width: 688px) 100vw, 688px" /></figure></div>



<p>To summarize, this article goes through the process followed in memory after executing the Creative Cloud application until deploying TokyoX in memory. This DLL sideloading style is often linked to APT groups whose attribution is also linked to China, however being a known technique as it is, we are not able to consider any feasible attribution at the moment.</p>



<p>As reviewed at the beginning of the article, what we have named as “TokyoX” has not been identified as a known malware so far (at least, with the sources that we have).</p>



<p>Additionally, at some point of the analysis we identified a tool used by this group for the creation of version.dll, which pretends to be a Windows DLL located in SysWOW/System32. The string “AheadLib” found among the code of the malicious version.dll drew our attention, and we quickly found two chinese (casually or not) GitHub repositories with the source code of some tool called AheadLib.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="709" height="290" src="https://lab52.io/blog/wp-content/uploads/2022/01/27.png" alt="" class="wp-image-1203" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/27.png 709w, https://lab52.io/blog/wp-content/uploads/2022/01/27-300x123.png 300w" sizes="(max-width: 709px) 100vw, 709px" /></figure></div>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="592" height="222" src="https://lab52.io/blog/wp-content/uploads/2022/01/28.png" alt="" class="wp-image-1204" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/28.png 592w, https://lab52.io/blog/wp-content/uploads/2022/01/28-300x113.png 300w" sizes="(max-width: 592px) 100vw, 592px" /></figure></div>



<p>Basically, this tool will allow you to create a C++ source code file, implementing a DLL with the same exported functions as a given DLL. For the purpose of the current analysis we generated a source code file using this tool and giving the legitimate version.dll as input.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" decoding="async" width="939" height="441" src="https://lab52.io/blog/wp-content/uploads/2022/01/29.png" alt="" class="wp-image-1205" srcset="https://lab52.io/blog/wp-content/uploads/2022/01/29.png 939w, https://lab52.io/blog/wp-content/uploads/2022/01/29-300x141.png 300w, https://lab52.io/blog/wp-content/uploads/2022/01/29-768x361.png 768w" sizes="(max-width: 939px) 100vw, 939px" /></figure></div>



<p>In the shown screenshot we can see on the left side the pseudocode generated by IDA Pro while analyzing the malicious version.dll sample. On the right side, we can observe the source code automatically generated by AheadLib using the legitimate version.dll as input. Even though the exported functions are not shown in the previous image, we can appreciate how there is a perfect match between both snippets.</p>



<p>Read the second part of the analysis of the final “TokyoX” RAT and its capacities <a href="https://lab52.io/blog/tokyox-dll-side-loading-an-unknown-artifact-part-2/" data-type="URL" data-id="https://lab52.io/blog/tokyox-dll-side-loading-an-unknown-artifact-part-2/">here</a>.</p>



<h2 class="wp-block-heading"><strong>IOCs</strong></h2>



<ul class="wp-block-list"><li>382b3d3bb1be4f14dbc1e82a34946a52795288867ed86c6c43e4f981729be4fc</li><li>31.192.107[.]187:443</li></ul>



<p>Customers with Lab52&#8217;s APT intelligence private feed service already have more tools and means of detection for this campaign.<br>In case of having threat hunting service or being client of S2Grupo CERT, this intelligence has already been applied.</p>



<p>If you need more information about Lab52&#8217;s private APT intelligence feed service, you can contact us through the<a href="https://lab52.io/contact"> following link</a></p>

<!-- MOLONGUI AUTHORSHIP PLUGIN 4.9.7 -->
<!-- https://www.molongui.com/wordpress-plugin-post-authors -->

<div class="molongui-clearfix"></div><div id="mab-3079883120" class="m-a-box " data-box-layout="slim" data-box-position="below" data-multiauthor="false" data-author-id="14" data-author-type="user" data-author-archived=""><div class="m-a-box-container"><div class="m-a-box-tab m-a-box-content m-a-box-profile" data-profile-layout="layout-1" data-author-ref="user-14" itemscope itemid="https://lab52.io/blog/author/ml10/" itemtype="https://schema.org/Person"><div class="m-a-box-content-top"></div><div class="m-a-box-content-middle"><div class="m-a-box-item m-a-box-avatar" data-source="local"><a class="m-a-box-avatar-url" href=""><img loading="lazy" decoding="async" src="https://lab52.io/blog/wp-content/uploads/2019/03/flask-150x150.png" width="150" height="150" alt="Avatar" class="avatar avatar-150 wp-user-avatar wp-user-avatar-150 photo avatar-default"/></a></div><div class="m-a-box-item m-a-box-data"><div class="m-a-box-name m-a-box-title"><h5><a class="m-a-box-name-url " href="https://lab52.io/blog/author/ml10/"> ml10</a></h5></div><div class="m-a-box-item m-a-box-meta"><a href="javascript:ToggleAuthorshipData(3079883120, 'user-14')" class="m-a-box-data-toggle"><span class="m-a-box-string-more-posts">+ posts</span></a><script type="text/javascript">if(typeof window.ToggleAuthorshipData==='undefined'){function ToggleAuthorshipData(id,author){let box_selector='#mab-'+id;let box=document.querySelector(box_selector);if(box.getAttribute('data-multiauthor'))box_selector='#mab-'+id+' [data-author-ref="'+author+'"]';let label=document.querySelector(box_selector+' '+'.m-a-box-data-toggle');label.innerHTML=(label.text.trim()==="+ posts"?" <span class=\"m-a-box-string-bio\">Bio</span>":" <span class=\"m-a-box-string-more-posts\">+ posts</span>");let bio=document.querySelector(box_selector+' '+'.m-a-box-bio');let related=document.querySelector(box_selector+' '+'.m-a-box-related-entries');if(related.style.display==="none"){related.style.display="block";bio.style.display="none"}else{related.style.display="none";bio.style.display="block"}}}</script></div><div class="m-a-box-bio"></div><div class="m-a-box-related" data-related-layout="layout-1"><div class="m-a-box-item m-a-box-related-entries" style="display:none;"><ul><span class="m-a-box-string-no-related-posts">This author does not have any more posts.</span></ul></div></div></div></div><div class="m-a-box-content-bottom"></div></div></div></div><!--<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
			xmlns:dc="http://purl.org/dc/elements/1.1/"
			xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
		<rdf:Description rdf:about="https://lab52.io/blog/tokyox-dll-side-loading-an-unknown-artifact/"
    dc:identifier="https://lab52.io/blog/tokyox-dll-side-loading-an-unknown-artifact/"
    dc:title="TokyoX: DLL side-loading an unknown artifact"
    trackback:ping="https://lab52.io/blog/tokyox-dll-side-loading-an-unknown-artifact/trackback/" />
</rdf:RDF>-->
</div><footer class="entry-footer"><p class="entry-meta"> <span class="entry-author" itemprop="author" itemscope itemtype="https://schema.org/Person"><a href="https://lab52.io/blog/author/ml10/" class="entry-author-link" rel="author" itemprop="url"><span class="entry-author-name" itemprop="name">ml10</span></a></span></p></footer></article><h2 class="screen-reader-text">Reader Interactions</h2>	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/tokyox-dll-side-loading-an-unknown-artifact/#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://lab52.io/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate><p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> <span class="required-field-message">Required fields are marked <span class="required">*</span></span></p><p class="comment-form-comment"><label for="comment">Comment <span class="required">*</span></label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" required></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" autocomplete="name" required /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" autocomplete="email" required /></p>
<div class="anr_captcha_field"><div id="anr_captcha_field_1" class="anr_captcha_field_div"></div></div><p class="wpgdprc-checkbox"><input type="checkbox" name="wpgdprc" id="wpgdprc" value="1" /><label for="wpgdprc">I hereby declare to have read and accepted the <a href="/legal_note">legal notice</a> and the <a href="/privacy_policy">privacy policy</a>. <abbr class="wpgdprc-required" title="You need to accept this checkbox.">*</abbr></label></p><p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='1168' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p></form>	</div><!-- #respond -->
	<div class="related"><h3 class="related-title">Related</h3><div class="related-posts"><div class="related-post"><a href="https://lab52.io/blog/gru-military-unit-29155/" rel="bookmark" title="Permanent Link to GRU military unit 29155"><img width="400" height="222" src="https://lab52.io/blog/wp-content/uploads/2024/10/image-400x222.png" class="related-post-image" alt="" decoding="async" loading="lazy" /></a><div class="related-post-info"><a class="related-post-title" href="https://lab52.io/blog/gru-military-unit-29155/" rel="bookmark" title="Permanent Link to GRU military unit 29155">GRU military unit 29155</a><div class="related-post-date"><time class="entry-time" itemprop="datePublished" datetime="2024-10-11T09:13:26+02:00">October 11, 2024</time></div><div class="related-post-tags"><span class="entry-tags">Tags: <a href="https://lab52.io/blog/tag/cyberwar/" rel="tag">cyberwar</a>, <a href="https://lab52.io/blog/tag/gru/" rel="tag">GRU</a></span></div><div class="related-post-categories"></div></div></div><div class="related-post"><a href="https://lab52.io/blog/pelmeni-wrapper-new-wrapper-of-kazuar-turla-backdoor/" rel="bookmark" title="Permanent Link to Pelmeni Wrapper: New Wrapper of Kazuar (Turla Backdoor)"><img width="400" height="222" src="https://lab52.io/blog/wp-content/uploads/2024/02/turlita-400x222.png" class="related-post-image" alt="" decoding="async" loading="lazy" /></a><div class="related-post-info"><a class="related-post-title" href="https://lab52.io/blog/pelmeni-wrapper-new-wrapper-of-kazuar-turla-backdoor/" rel="bookmark" title="Permanent Link to Pelmeni Wrapper: New Wrapper of Kazuar (Turla Backdoor)">Pelmeni Wrapper: New Wrapper of Kazuar (Turla Backdoor)</a><div class="related-post-date"><time class="entry-time" itemprop="datePublished" datetime="2024-02-19T08:47:33+01:00">February 19, 2024</time></div><div class="related-post-tags"><span class="entry-tags">Tags: <a href="https://lab52.io/blog/tag/backdoor/" rel="tag">Backdoor</a>, <a href="https://lab52.io/blog/tag/kazuar/" rel="tag">Kazuar</a>, <a href="https://lab52.io/blog/tag/pelmeni-wrapper/" rel="tag">Pelmeni Wrapper</a>, <a href="https://lab52.io/blog/tag/trula/" rel="tag">Trula</a>, <a href="https://lab52.io/blog/tag/wrapper/" rel="tag">Wrapper</a></span></div><div class="related-post-categories"></div></div></div><div class="related-post"><a href="https://lab52.io/blog/2344-2/" rel="bookmark" title="Permanent Link to New invitation from APT29 to use CCleaner"><img width="400" height="222" src="https://lab52.io/blog/wp-content/uploads/2023/07/Image20230712114555-400x222.jpg" class="related-post-image" alt="" decoding="async" loading="lazy" /></a><div class="related-post-info"><a class="related-post-title" href="https://lab52.io/blog/2344-2/" rel="bookmark" title="Permanent Link to New invitation from APT29 to use CCleaner">New invitation from APT29 to use CCleaner</a><div class="related-post-date"><time class="entry-time" itemprop="datePublished" datetime="2023-07-12T16:35:00+02:00">July 12, 2023</time></div><div class="related-post-tags"><span class="entry-tags">Tags: <a href="https://lab52.io/blog/tag/apt29/" rel="tag">APT29</a>, <a href="https://lab52.io/blog/tag/ccleaner/" rel="tag">CCleaner</a>, <a href="https://lab52.io/blog/tag/dllside-load/" rel="tag">DLLSide-Load</a>, <a href="https://lab52.io/blog/tag/phishing/" rel="tag">phishing</a>, <a href="https://lab52.io/blog/tag/russia/" rel="tag">Russia</a>, <a href="https://lab52.io/blog/tag/svg/" rel="tag">SVG</a></span></div><div class="related-post-categories"></div></div></div></div></div></main></div></div><div class="footer-widgets" id="genesis-footer-widgets"><h2 class="genesis-sidebar-title screen-reader-text">Footer</h2><div class="wrap"><div class="widget-area footer-widgets-1 footer-widget-area"><section id="search-4" class="widget widget_search"><div class="widget-wrap"><form class="search-form" method="get" action="https://lab52.io/blog/" role="search" itemprop="potentialAction" itemscope itemtype="https://schema.org/SearchAction"><label class="search-form-label screen-reader-text" for="searchform-1">Search this website</label><input class="search-form-input" type="search" name="s" id="searchform-1" placeholder="Search this website" itemprop="query-input"><input class="search-form-submit" type="submit" value="Search"><meta content="https://lab52.io/blog/?s={s}" itemprop="target"></form></div></section>
</div></div></div><footer class="site-footer" itemscope itemtype="https://schema.org/WPFooter"><div class="wrap"><p> <footer id="footer" class="full-width">                 <span class="small-text-footer italic">Copyright &amp;copy Lab52 2019 by <a href="https://s2grupo.es/en/home/" target="_blank">S2 Grupo</a> | <a href="/legal_note" target="_blank">Legal notice</a> | <a href="/cookie_policy" target="_blank">Cookie policy</a> | <a href="/privacy_policy" target="_blank">Privacy policy</a></span>             </footer></p></div></footer></div>			<script type="text/javascript">
				var anr_onloadCallback = function() {
					for ( var i = 0; i < document.forms.length; i++ ) {
						var form = document.forms[i];
						var captcha_div = form.querySelector( '.anr_captcha_field_div' );

						if ( null === captcha_div )
							continue;
						captcha_div.innerHTML = '';
						( function( form ) {
							var anr_captcha = grecaptcha.render( captcha_div,{
								'sitekey' : '6Lf4ZJwUAAAAAN67aD_PPXidoEzI-aIrP47hK41b',
								'size'  : 'normal',
								'theme' : 'light'
							});
							if ( typeof jQuery !== 'undefined' ) {
								jQuery( document.body ).on( 'checkout_error', function(){
									grecaptcha.reset(anr_captcha);
								});
							}
							if ( typeof wpcf7 !== 'undefined' ) {
								document.addEventListener( 'wpcf7submit', function() {
									grecaptcha.reset(anr_captcha);
								}, false );
							}
						})(form);
					}
				};
			</script>
						<script src="https://www.google.com/recaptcha/api.js?onload=anr_onloadCallback&#038;render=explicit"
				async defer>
			</script>
				<script type="text/javascript">
		function atomicBlocksShare( url, title, w, h ){
			var left = ( window.innerWidth / 2 )-( w / 2 );
			var top  = ( window.innerHeight / 2 )-( h / 2 );
			return window.open(url, title, 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=600, height=600, top='+top+', left='+left);
		}
	</script>
	<script type="text/javascript" src="/blog/wp-content/themes/genesis-sample-develop/custom.js"></script> 
<style type="text/css" media="screen"></style><link rel='stylesheet' id='molongui-authorship-box-css' href='https://lab52.io/blog/wp-content/plugins/molongui-authorship/assets/css/author-box.ebfd.min.css?ver=4.9.7' type='text/css' media='all' />
<style id='molongui-authorship-box-inline-css' type='text/css'>
:root{ --m-a-box-bp: 600px; --m-a-box-bp-l: 599px; }.m-a-box {width:100%;margin-top:20px !important;margin-right:0 !important;margin-bottom:20px !important;margin-left:0 !important;} .m-a-box-header {margin-bottom:20px;} .m-a-box-header > :first-child,  .m-a-box-header a.m-a-box-header-url {font-size:px;line-height:px;} .m-a-box-container {padding-top:0;padding-right:0;padding-bottom:0;padding-left:0;border-style:solid;border-top-width:1px;border-right-width:0;border-bottom-width:1px;border-left-width:0;border-color:#e8e8e8;background-color:#f7f8f9;box-shadow:10px 10px 10px 0 #ababab ;} .m-a-box-avatar img,  .m-a-box-avatar div[data-avatar-type="acronym"] {border-style:solid;border-width:2px;border-color:#bfbfbf;border-radius:%;} .m-a-box-name *  {font-size:22px;line-height:px;} .m-a-box-content.m-a-box-profile .m-a-box-data .m-a-box-meta * {font-size:12px;line-height:px;} .m-a-box-meta-divider {padding:0 0.2em;} .m-a-box-bio > * {font-size:14px;line-height:px;} .m-icon-container {background-color: inherit; border-color: inherit; color: #999999 !important;font-size:20px;} .m-a-box-related-entry-title,  .m-a-box-related-entry-title a {font-size:14px;}
</style>
<script type="text/javascript" src="https://lab52.io/blog/wp-content/plugins/atomic-blocks/dist/assets/js/dismiss.js?ver=1598525594" id="atomic-blocks-dismiss-js-js"></script>
<script type="text/javascript" id="molongui-authorship-byline-js-extra">
/* <![CDATA[ */
var molongui_authorship_byline_params = {"byline_prefix":"","byline_suffix":"","byline_separator":", ","byline_last_separator":" and ","byline_link_title":"View all posts by","byline_link_class":"","byline_dom_tree":"","byline_dom_prepend":"","byline_dom_append":"","byline_decoder":"v3"};
/* ]]> */
</script>
<script type="text/javascript" src="https://lab52.io/blog/wp-content/plugins/molongui-authorship/assets/js/byline.334a.min.js?ver=4.9.7" id="molongui-authorship-byline-js"></script>
<script type="text/javascript" src="https://lab52.io/blog/wp-includes/js/comment-reply.min.js?ver=6.6.2" id="comment-reply-js" async="async" data-wp-strategy="async"></script>
<script type="text/javascript" src="https://lab52.io/blog/wp-includes/js/hoverIntent.min.js?ver=1.10.2" id="hoverIntent-js"></script>
<script type="text/javascript" src="https://lab52.io/blog/wp-content/themes/genesis/lib/js/menu/superfish.min.js?ver=1.7.10" id="superfish-js"></script>
<script type="text/javascript" src="https://lab52.io/blog/wp-content/themes/genesis/lib/js/menu/superfish.args.min.js?ver=3.3.3" id="superfish-args-js"></script>
<script type="text/javascript" src="https://lab52.io/blog/wp-content/themes/genesis/lib/js/skip-links.min.js?ver=3.3.3" id="skip-links-js"></script>
<script type="text/javascript" id="genesis-sample-responsive-menu-js-extra">
/* <![CDATA[ */
var genesis_responsive_menu = {"mainMenu":"Menu","menuIconClass":"dashicons-before dashicons-menu","subMenu":"Submenu","subMenuIconClass":"dashicons-before dashicons-arrow-down-alt2","menuClasses":{"combine":[".nav-primary"],"others":[]}};
/* ]]> */
</script>
<script type="text/javascript" src="https://lab52.io/blog/wp-content/themes/genesis-sample-develop/js/responsive-menus.min.js?ver=2.9.2-dev" id="genesis-sample-responsive-menu-js"></script>
<script type="text/javascript" src="https://lab52.io/blog/wp-content/themes/genesis-sample-develop/js/genesis-sample.js?ver=2.9.2-dev" id="genesis-sample-js"></script>
<script type="text/javascript" id="wpgdprc.js-js-extra">
/* <![CDATA[ */
var wpgdprcData = {"ajaxURL":"https:\/\/lab52.io\/blog\/wp-admin\/admin-ajax.php","ajaxSecurity":"2b9d226d78","isMultisite":"","path":"\/","blogId":""};
/* ]]> */
</script>
<script type="text/javascript" src="https://lab52.io/blog/wp-content/plugins/wp-gdpr-compliance/assets/js/front.min.js?ver=1592813009" id="wpgdprc.js-js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ResizeSensor.min.js?ver=1.2.2" id="molongui-resizesensor-js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ElementQueries.min.js?ver=1.2.2" id="molongui-elementqueries-js"></script>
</body></html>

<!-- Dynamic page generated in 0.413 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2024-12-18 10:40:45 -->

<!-- super cache -->