<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><title>PaaS, or how hackers evade antivirus software</title><meta name="description" content="
	 Malware is one of the main tools of any hacking group. Depending on the level of qualification and the specifics of operation, hackers can use both publicly available tools (such as the Cobalt Strike framework) and their own developments.


	 Creating a unique set of tools for each attack requires huge resources; therefore, hackers tend to reuse malware in different operations and also share it with other groups. The mass use of the same tool inevitably leads to its getting on the radar of antivirus companies, which, as a result, reduces its efficiency.


	 To prevent it from happening, hackers use code packing, encryption, and mutation techniques. Such techniques can often be handled by separate tools called crypters or sometimes simply packers. In this article, we will use the example of the RTM
	banking trojan to discuss which packers attackers can use, how they complicate detection of the malware, and what other malware they can pack.
"/><meta name="viewport" content="width=device-width, initial-scale=1"/><link rel="icon" href="/images/favicons/favicon.ico" sizes="any"/><link rel="icon" href="/images/favicons/icon.svg" type="image/svg+xml"/><link rel="apple-touch-icon" href="/images/favicons/apple-touch-icon.png"/><meta name="next-head-count" content="7"/><script type="text/javascript">
                   
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();
    for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
    k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");
  
                   ym(93900442, "init", {
                       clickmap: true,
                       trackLinks: true,
                       accurateTrackBounce: true,
                       webvisor: true
                   });
             </script><noscript><div><img src="https://mc.yandex.ru/watch/93900442" style="position:absolute;left:-9999px" alt=""/></div></noscript><script id="mindbox-init">
    mindbox = window.mindbox || function() { mindbox.queue.push(arguments); };
    mindbox.queue = mindbox.queue || [];

    mindbox('create', {
        endpointId: 'ptsec.global',
    });
</script><script async="" src="https://api.mindbox.ru/scripts/v1/tracker.js"></script><script async="" src="https://cdn.cookielaw.org/scripttemplates/otSDKStub.js" type="text/javascript" data-domain-script="0191d674-840f-7931-a533-9567b38dbd10" data-document-language="true"></script><script type="text/javascript">function OptanonWrapper() { }</script><link rel="preload" href="/_next/static/css/80c4a58119cf7c0b.css" as="style"/><link rel="stylesheet" href="/_next/static/css/80c4a58119cf7c0b.css" data-n-g=""/><link rel="preload" href="/_next/static/css/941fc73e0d448350.css" as="style"/><link rel="stylesheet" href="/_next/static/css/941fc73e0d448350.css" data-n-p=""/><link rel="preload" href="/_next/static/css/4c941d641ec34117.css" as="style"/><link rel="stylesheet" href="/_next/static/css/4c941d641ec34117.css" data-n-p=""/><link rel="preload" href="/_next/static/css/37c177beab301399.css" as="style"/><link rel="stylesheet" href="/_next/static/css/37c177beab301399.css" data-n-p=""/><link rel="preload" href="/_next/static/css/bb426d7648eb51ac.css" as="style"/><link rel="stylesheet" href="/_next/static/css/bb426d7648eb51ac.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js"></script><script src="/_next/static/chunks/webpack-d6441674d4b92143.js" defer=""></script><script src="/_next/static/chunks/framework-ce84985cd166733a.js" defer=""></script><script src="/_next/static/chunks/main-2aa161cc193cdf0e.js" defer=""></script><script src="/_next/static/chunks/pages/_app-ac28bc770913443a.js" defer=""></script><script src="/_next/static/chunks/4b358913-e177b648ea0062d1.js" defer=""></script><script src="/_next/static/chunks/f10e284a-c46ff7024e963ef1.js" defer=""></script><script src="/_next/static/chunks/dff27125-edb64a536e668286.js" defer=""></script><script src="/_next/static/chunks/4322cd96-db9c9cbc97931387.js" defer=""></script><script src="/_next/static/chunks/5300-5d5240edfe5088d0.js" defer=""></script><script src="/_next/static/chunks/4028-70e0d285b32e5897.js" defer=""></script><script src="/_next/static/chunks/2580-447bcccef7567d77.js" defer=""></script><script src="/_next/static/chunks/8675-7126786e5e2e65c5.js" defer=""></script><script src="/_next/static/chunks/585-0d6245c6d60804bf.js" defer=""></script><script src="/_next/static/chunks/8973-5b086d43f68f9a0f.js" defer=""></script><script src="/_next/static/chunks/9381-bee1ef77a768e456.js" defer=""></script><script src="/_next/static/chunks/254-dde07e0bcb3d5f5a.js" defer=""></script><script src="/_next/static/chunks/3330-13425461e8bb6bd9.js" defer=""></script><script src="/_next/static/chunks/4883-8ebc1c16b194b12c.js" defer=""></script><script src="/_next/static/chunks/9852-d3e7d7c2bf949d3a.js" defer=""></script><script src="/_next/static/chunks/9943-143dbfda987f993f.js" defer=""></script><script src="/_next/static/chunks/5363-fea1d2f79e1d9971.js" defer=""></script><script src="/_next/static/chunks/pages/analytics/pt-esc-threat-intelligence/%5Bslug%5D-debebc1698dc2505.js" defer=""></script><script src="/_next/static/XLqnOgRSgZ1uY25ZCin31/_buildManifest.js" defer=""></script><script src="/_next/static/XLqnOgRSgZ1uY25ZCin31/_ssgManifest.js" defer=""></script></head><body><div id="__next"><div class=""><header class="Header_header__Hd6K0" id="nav-bar"></header><main id="main" class="PageLayout_main__LUbC0"><div class="ArticleHeader_banner__enm6f"><section class="PageSection_section__GxaaG ArticleHeader_section__sve5w ArticleHeader_withBottomBar__d_wKA"><div class="ArticleHeader_header___PnMn"><div class="ArticleHeader_headerInner__2bYRI"><h2 class="Heading_base__MUnbH Heading_level_2__qXMBH"><span>PaaS, or how hackers evade antivirus software</span></h2></div></div><div class="ArticleHeader_bottomBar__EgyS1"><div class="ArticleHeader_leftSide__gAaId"><div class="ArticleBageLink_container__n25zS"><div class="ArticleBageLink_icon__Z9k9v"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.312 12.1358L8 14.7438L3.688 12.1358C3.1848 11.8491 2.76468 11.4366 2.46878 10.9388C2.17288 10.441 2.01135 9.8748 2 9.29577L2 2.50377C2 2.50377 2.04 2.39977 2.16 2.35177L7.808 1.21577C7.93487 1.19175 8.06513 1.19175 8.192 1.21577L13.84 2.35177C13.96 2.35177 14 2.46377 14 2.50377L14 9.29577C13.9887 9.8748 13.8271 10.441 13.5312 10.9388C13.2353 11.4366 12.8152 11.8491 12.312 12.1358Z" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"></path><path d="M6.40039 7.1999L8.00039 8.7999L10.4004 6.3999" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"></path></svg></div><a href="/analytics/pt-esc-threat-intelligence"><div class="Text_base__riB2c Text_type_pS__4RXUf Text_theme_dark__type_pS__jWlgX"><span>PT EXPERT SECURITY CENTER</span></div></a></div><div class="ArticleDate_dark__bQPEn Text_base__riB2c Text_type_pS__4RXUf Text_theme_dark__type_pS__jWlgX"><span>11 APRIL 2021</span></div></div><div class="ArticleHeader_rightSide__zUGU_"><button type="button" class="ButtonShareLink_extraButton__6pf3i ArticleHeader_extraButton__zTZOf Button_button__F7Ulc Button_button_size_s___Bpb6 Button_button_theme_dark__iuu3A"><span>Share<img alt="share" loading="lazy" width="16" height="16" decoding="async" data-nimg="1" style="color:transparent" src="/_next/static/media/sharing.472b5ae7.svg"/></span></button></div></div></section></div><section class="PageSection_section__GxaaG Card_section__QzdVO"><div class="Card_contentWrapper__45uLa Card_mode_light__02f7V Card_zIndex_1__NP_2j"><div class="ArticleLayout_grid__ARjhp"><div class="ArticleLayout_leftColumn___AQb_"><div class="SidebarWidgets_root__EIInZ"><div class="SidebarWidget_root__IWq9u" data-theme="light"><span class="SidebarWidget_badge__gm6Re" aria-hidden="true"></span><a href="/analytics"><h4 class="SidebarWidget_link__7lVne Heading_base__MUnbH Heading_level_4__vTL_m Heading_theme_light__level_4__u4aOM"><span>Analytics articles</span></h4></a><ul class="SidebarWidget_articles__wrBxg"><li class="ArticlesWidget_article__5hn4y"><div class="ArticlesWidget_article_date__LAjT6 ArticleDate_light__n8s4o Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>26 December 2024</span></div><a target="_blank" href="/analytics/trending-vulnerability-digest-november-2024"><div class="ArticlesWidget_article_text__Bx4ya Text_base__riB2c Text_type_pM__mE14b Text_clamp_3__8DSUm Text_theme_light__type_pM__2zLmc"><span>Trending vulnerability digest November 2024</span></div></a></li><li class="ArticlesWidget_article__5hn4y"><div class="ArticlesWidget_article_date__LAjT6 ArticleDate_light__n8s4o Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>10 December 2024</span></div><a target="_blank" href="/analytics/artificial-intelligence-in-cyberattacks"><div class="ArticlesWidget_article_text__Bx4ya Text_base__riB2c Text_type_pM__mE14b Text_clamp_3__8DSUm Text_theme_light__type_pM__2zLmc"><span>Artificial intelligence in cyberattacks</span></div></a></li><li class="ArticlesWidget_article__5hn4y"><div class="ArticlesWidget_article_date__LAjT6 ArticleDate_light__n8s4o Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>9 December 2024</span></div><a target="_blank" href="/analytics/a-look-at-india-through-the-dark-web-what-hackers-are-after"><div class="ArticlesWidget_article_text__Bx4ya Text_base__riB2c Text_type_pM__mE14b Text_clamp_3__8DSUm Text_theme_light__type_pM__2zLmc"><span>A look at India through the dark web: what hackers are after</span></div></a></li></ul></div><div class="AdBanner_banner__Phuq9"><img alt="" loading="lazy" decoding="async" data-nimg="fill" class="AdBanner_image__8dCJL" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;object-fit:cover;color:transparent" src="https://pt-global.storage.yandexcloud.net/PT_Network_Attack_Discovery_2x_0d8a5793c7.png"/><div class="AdBanner_detail__tt_BJ"><h4 class="Heading_base__MUnbH Heading_level_4__vTL_m Heading_theme_dark__level_4__5RqHy"><span>What are the security threats on your network?</span></h4><div class="Text_base__riB2c Text_type_pM__mE14b Text_theme_dark__type_pM__3GUPK"><span>Check your traffic-for free</span></div><a class="AdBanner_button__9I57f Button_button__F7Ulc Button_button_size_m__cmMD_ Button_button_theme_dark__iuu3A" href="/analytics/pt-esc-threat-intelligence/paas-or-how-hackers-evade-antivirus-software#contacts"><span><span>Request pilot</span></span><img alt="" loading="lazy" width="20" height="20" decoding="async" data-nimg="1" class="Button_arrow__ZXQXI" style="color:transparent" src="/_next/static/media/arrows-right.1fc87099.svg"/></a></div></div></div></div><div class="ArticleLayout_rightColumns___55GM"><div class="ArticleLayout_rightColumn__c8u4z"><div class="HtmlContent_content__ajDaE esiArticle_bitrixContent__PCSBe"><article>
<p>
	Malware is one of the main tools of any hacking group. Depending on the level of qualification and the specifics of operation, hackers can use both publicly available tools (such as the Cobalt Strike framework) and their own developments.
</p>
<p>
	Creating a unique set of tools for each attack requires huge resources; therefore, hackers tend to reuse malware in different operations and also share it with other groups. The mass use of the same tool inevitably leads to its getting on the radar of antivirus companies, which, as a result, reduces its efficiency.
</p>
<p>
	To prevent it from happening, hackers use code packing, encryption, and mutation techniques. Such techniques can often be handled by separate tools called crypters or sometimes simply packers. In this article, we will use the example of the <a href="https://www.ptsecurity.com/ru-ru/research/hacker-groups/rtm/" target="_blank">RTM</a> banking trojan to discuss which packers attackers can use, how they complicate detection of the malware, and what other malware they can pack.
</p>
<h2>Packer-as-a-service</h2>
<p>
	A hacker group responsible for RTM distribution regularly sent mass phishing emails with malicious attachments until the end of 2020. Apparently, the attacks were automated.
</p>
 <figure> <img alt="RTM phishing email, December 2020" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image1.png"/> <figcaption>Figure 1. RTM phishing email, December 2020</figcaption> </figure>
<p>
	Each attachment contained files that significantly differed from each other, but the final payload remained almost the same.
</p>
 <figure> <img alt="Example of RTM archive" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image2.png"/> <figcaption>Figure 2. Example of RTM archive</figcaption> </figure>
<p>
	Such feature is a natural consequence of using crypters. Initially, the group behind RTM used its own unique crypter. In 2020, however, the group changed it twice.
</p>
<p>
	When analyzing samples packed in a new way, we detected numerous other malware protected by similar method. Taking into account the fact that packing process is automated, such overlapping with other malware allows us to assume that attackers use the packer-as-a-service model. In this model, packing of malicious files is delegated to a special service managed by a third party.
</p>
 <figure> <img alt="Website of a crypt service" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image3.png"/> <figcaption>Figure 3. Website of a crypt service</figcaption> </figure>
<p>
	Access to such services can often be found on sale on hacker forums.
</p>
 <figure> <img alt="Advertisement of file packing as a service" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image4.png"/> <figcaption>Figure 4. Advertisement of file packing as a service</figcaption> </figure>
<p>
	Later in this article, we will discuss specific examples of crypters used by the RTM group.
</p>
<h2>Rex3Packer</h2>
<p>
	The first use of this packer by the RTM group that we detected dates back to November 2019. The group started actively using the packer in April–May 2020. Rare uses of the packer for distributing old versions of the RTM trojan were also observed in late January 2021.
</p>
 <figure> <img alt="Phishing email by RTM, January 2021" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image5.png"/> <figcaption>Figure 5. Phishing email by RTM, January 2021</figcaption> </figure>
<p>
	We couldn&#x27;t associate this packer with any of the publicly described ones, so we named it according to three specifics of its working: <b>re</b>cursion, bit <b>re</b>verse, and reflective loading of PE files (<b>re</b>flection), hence the name <b>Re</b>x<b>3</b>Packer.
</p>
<h3>Unpacking algorithm</h3>
<p>
	The overall algorithm for extracting the payload is as follows:
</p>
<ol>
	<li>A predetermined amount of memory is allocated with read, write, and execute rights using VirtualAlloc.</li>
	<li>The content of the current process image in the memory is copied to the allocated buffer (in particular, section .text).</li>
	<li>Control passes to the function inside the buffer.</li>
	<li>The difference is calculated between the location of data in the buffer and in the PE file image (difference between the addresses in the buffer and virtual addresses in the image). This difference is written to the ebx register. All references to virtual addresses in code are indexed by the content of this register. As a result, wherever necessary, a correction is added to the PE image addresses that allows obtaining the corresponding address in the buffer. <figure> <img alt="Calls to functions and variables taking into account the correction in the ebx register" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image6.png"/> <figcaption>Figure 6. Calls to functions and variables taking into account the correction in the ebx register</figcaption> </figure> </li>
	<li>Another buffer is allocated for packed data.</li>
	<li>By calling VirtualProtect, RWX rights are assigned to the entire memory region with the PE file image.</li>
	<li>The packed data is copied to the buffer.</li>
	<li>The packed data is decoded.</li>
	<li>The memory region with the PE image is filled with null bytes.</li>
	<li>The decoded data represents an executable file—the PE payload. This payload is reflectively loaded to where the initial PE image was, and control passes to its entry point.</li>
</ol>
<p>
	A specific algorithm for decoding packed data is of special interest to us. In this case, it would be incorrect to compare packing with compression, as the algorithm is such that the size of packed data is always bigger than that of the initial data.
</p>
<p>
	The packed data is preceded by a 16-byte header that contains four 4-byte fields:
</p>
<ul>
	<li>Size of the header</li>
	<li>Size of initial data (PE payload)</li>
	<li>Position in initial data (*) at which they are divided (more details below)</li>
	<li>Encoding mode (1, 2, or 4)</li>
</ul>
<p>
	The decoding looks as follows:
</p>
<ol>
	<li>Inside each byte, bit order is reversed (for example, 10011000 becomes 00011001).</li>
	<li>Depending on encoding mode (1, 2, 4), data is divided into blocks with N size of 9, 5, or 3 bytes, respectively. The result of the block decoding is N-1 byte (8, 4, or 2).</li>
	<li>In the first N-1 bytes of the block, some bits are missing: their values always equal zero. To restore the original bytes, the missing bits are extracted from the last byte of the block by using 00000001, 00010001, or 01010101 masks. The mask is shifted for each subsequent byte. As a result, the last byte of the block is composed of the bits extracted from previous bytes and united by the logical operation OR.
	<p>
		For example, in mode 4, the last byte is composed of even bits of the block&#x27;s first byte and odd bits of the block&#x27;s second byte. As a result of &quot;returning&quot; these bits to the first and second bytes, an original sequence of two bytes is composed.
	</p>
 <figure> <img alt="Scheme of obtaining initial bytes in mode 4" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image7.png"/> <figcaption>Figure 7. Scheme of obtaining initial bytes in mode 4</figcaption> </figure></li>
	<li>When bits are restored in all blocks, the obtained data represents the initial PE file divided by two parts at position (*). These parts, in turn, were swapped. The second rearrangement (taking into account the (*) value) allows obtaining the original file.</li>
</ol>
<h3>Obfuscation</h3>
<p>
	To complicate code analysis, various obfuscation techniques are used in the packer:
</p>
<ul>
	<li>
	<p>
		In between the execution of significant code, various WinAPI functions are called. Their results are saved but not used, and the functions are selected so that not to affect the program operation.
	</p>
	<figure> <img alt="Calling WinAPI functions" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image8.png"/> <figcaption>Figure 8. Calling WinAPI functions</figcaption> </figure></li>
</ul>
<ul>
	<li>
	<p>
		A typical feature of this packer is the presence of cycles (not performing useful operations) implemented via a recursive function.
	</p>
	<figure> <img alt="Recursive function (sample without junk code)" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image9.png"/> <figcaption>Figure 9. Recursive function (sample without junk code)</figcaption> </figure></li>
</ul>
<ul>
	<li>
	<p>
		For further obfuscation, several dozens of randomly generated functions are added to executable file. They may call each other, but none of them obtains control ever.
	</p>
	<figure> <img alt="Example of generated function" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image10.png"/> <figcaption>Figure 10. Example of generated function</figcaption> </figure></li>
</ul>
<h3>Usage</h3>
<p>
	In addition to RTM samples, we detected the use of Rex3Packer for packing various malware, mainly originating from the CIS countries. Below is the list with examples of such malware:
</p>
<div class="table-container">
	<table class="table-article">
	<thead>
	<tr>
		<th>
			Malware family
		</th>
		<th>
			SHA256
		</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.phobos" target="_blank">Phobos Ransomware</a>
		</td>
		<td>
			6e9c9b72d1bdb993184c7aa05d961e706a57b3becf151ca4f883a80a07fdd955
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.zeppelin_ransomware" target="_blank">Zeppelin Ransomware</a>
		</td>
		<td>
			8d44fdbedd0ec9ae59fad78bdb12d15d6903470eb1046b45c227193b233adda6
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.raccoon" target="_blank">Raccoon Stealer</a>
		</td>
		<td>
			3be91458baa365febafb6b33283b9e1d7e53291de9fec9d3050cd32d98b7a039
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.kpot_stealer" target="_blank">KPOT Stealer</a>
		</td>
		<td>
			9b6af2502547bbf9a64ccfb8889ee25566322da38e9e0ccb86b0e6131a67df1e
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.predator" target="_blank">Predator The Thief</a>
		</td>
		<td>
			d1060835793f01d1e137ad92e4e38ef2596f20b26da3d12abcc8372158764a8f
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot" target="_blank">QakBot</a>
		</td>
		<td>
			18cc92453936d1267e790c489c419802403bb9544275b4a18f3472d2fe6f5dea
		</td>
	</tr>
	</tbody>
	</table>
</div>
<p>
	We also detected the use of this packer for packing malware samples of the <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.nemty" target="_blank">Nemty</a>, <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.pony" target="_blank">Pony</a>, and <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.amadey" target="_blank">Amadey</a> families. This is, of course, not an exhaustive list of all cases of using Rex3Packer.
</p>
<h2>HellowinPacker</h2>
<p>
	In May 2020, RTM started using a new packer and went on using it until the beginning of 2021. We called it HellowinPacker because of the file name &quot;hellowin.wav&quot; we spotted in strings of some samples.
</p>
<p>
	The packer&#x27;s key feature is two levels of code mutation. The first one significantly changes the unpacking code structure, making samples look different from each other.
</p>
 <figure> <img alt="Comparison of code in two samples of different structure" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image11.png"/> <figcaption>Figure 11. Comparison of code in two samples of different structure</figcaption> </figure>
<p>
	The example above shows the comparison of samples 5b5f30f7cbd6343efd409f727e656a7039bff007be73a04827cce2277d873aa0 (on the left) and 1f9a8b3c060c2940a81442c9d9c9e36c31ad37aaa7cd61e1d7aec2d86fe1c585 (on the right).
</p>
<p>
	The second level only changes some details, and the code structure remains in general the same. The changes mainly affect assembler instructions and constants that do not impact the program operation. As a result, the code looks almost identical when decompiled.
</p>
 <figure> <img alt="Comparison of code in two samples of the same structure" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image12.png"/> <figcaption>Figure 12. Comparison of code in two samples of the same structure</figcaption> </figure>
<p>
	Just like Rex3Packer, HellowinPacker is actively used by attackers to pack various malware. Note that malware from the same family has the same structure when packed. This lasts for at least some time, after which the structure can change.
</p>
<p>
	All these features coincide with the description of a packing service the access to which is sold on hacker forums:
</p>
<div class="code">[Uniqueness] A customer is given a unique crypter that does not depend on other customers. If your files were spotted, your uploads are to blame. We&#x27;re not looking for 10,000+ customers, we provide correct Premium support and have a very limited number of clients. We make only unique stubs for a customer.</div>
<br/>
<p>
	Apparently, each unique crypter has its own structure of generated code. The crypter itself can also mutate code but at a lower level, without changing the program structure. In any case, the significant executable code remains the same.
</p>
<h3>Unpacking algorithm</h3>
<p>
	One of the first actions in all packed files is an attempt to open the registry key HKEY_CLASSES_ROOT\Interface\{b196b287-bab4-101a-b69c-00aa00341d07} (character case may differ in each particular case) and request a default value. Correct program operation in some modifications of generated code depends on whether these operations are successful.
</p>
<p>
	Interface GUIDs may also differ. Here are some of the possible options:
</p>
<ul>
	<li>{3050f1dd-98b5-11cf-bb82-00aa00bdce0b}</li>
	<li>{aa5b6a80-b834-11d0-932f-00a0c90dcaa9}</li>
	<li>{683130a6-2e50-11d2-98a5-00c04f8ee1c4}</li>
	<li>{c7c3f5a1-88a3-11d0-abcb-00a0c90fffc0}</li>
	<li>{b8da6310-e19b-11d0-933c-00a0c90dcaa9}</li>
</ul>
<p>
	The subsequent code obtains the address at which a block of encrypted data is located.
</p>
<p>
	This block starts with a 4-byte number, which stores the size of <b>initial</b> data (those that will be obtained after decoding). By calling VirtualAlloc, a memory block of required size with RWX rights is allocated for decrypted data. Encrypted data is copied to the allocated memory by blocks of X bytes each. In the original file, &quot;spaces&quot; of Y byte length are located between these blocks.
</p>
 <figure> <img alt="Scheme of data copying in HellowinPacker" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image13.png"/> <figcaption>Figure 13. Scheme of data copying in HellowinPacker</figcaption> </figure>
<p>
	Data is then decrypted by 4-byte blocks:
</p>
<ul>
	<li>Each next block is interpreted as an integer (DWORD).</li>
	<li>Index of the first byte in the block is added to the integer.</li>
	<li>An xor operation is executed between the obtained value and the sum of the index and a fixed key (Z number).</li>
</ul>
<p>
	Example of algorithm implementation in Python:
</p>
 <pre><div class="code">def decrypt(data, Z):
    index = 0
    while index &lt; len(data):
        dword = struct.unpack(&quot;&lt;I&quot;, data[index:index + 4])[0]
        dword = (dword + index) &amp; (2 ** 32 - 1)
        dword = dword ^ (index + Z)
        data[index:index + 4] = struct.pack(&quot;&lt;I&quot;, dword)
        index += 4</div></pre>
<br/>
<p>
	Values X, Y, and Z vary depending on a particular packed sample.
</p>
<p>
	The next stage of extracting payload—the shellcode—is located inside the decrypted data. The shellcode takes control when the decryption ends.
</p>
<p>
	The shellcode dynamically loads functions required for its operation. These functions are listed in the &quot;import table&quot; located at the beginning of decrypted data.
</p>
 <figure> <img alt="" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image14.png"/> <figcaption>Figure 14. &quot;Import table&quot; in decrypted data</figcaption> </figure>
<p>
	For greater variability, the strings in the &quot;import table&quot; may be partially filled with random symbols. In the example above, the first function name &quot;GetProcAddress&quot; is fully replaced by the string &quot;aaa45678901234&quot;, and the names &quot;VirtualAlloc&quot; and &quot;VirtualProtect&quot; are damaged. Right before processing the table, the shellcode restores correct values of all the symbols.
</p>
 <figure> <img alt="Code for restoring damaged names of functions" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image15.png"/> <figcaption>Figure 15. Code for restoring damaged names of functions</figcaption> </figure>
<p>
	Payload (this time, it is the PE file) is extracted by the shellcode from the rest of the decrypted data. It is encrypted again by the same algorithm as described above. For Z key, figure 1001 is always used.
</p>
<p>
	When the decryption is finished, the shellcode performs reflective loading of the PE file using the functions imported at the first stage.
</p>
<h3>Obfuscation</h3>
<p>
	Just like Rex3Packer, HellowinPacker samples call WinAPI functions not related to the main program logic. However, in this case, they are mostly used to complicate behavior analysis and detection in sandboxes. This is also confirmed by the fact that in most cases various functions are called in a row at the very beginning of the program.
</p>
 <figure> <img alt="Entry point in one of the packed libraries" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image16.png"/> <figcaption>Figure 16. Entry point in one of the packed libraries</figcaption> </figure>
<p>
	An additional effect of the WinAPI use is the impossibility of detection by a list of imported functions and by imphash.
</p>
<p>
	When working with various numeric values, a certain &quot;arithmetic&quot; obfuscation is often observed: necessary constants are represented as sums or differences of other constants (which in some cases equal zero). To obtain constants, WinAPI functions can also be called, yielding predictable results (for example, 0 in case of failure).
</p>
<p>
	An example of such obfuscation is given on the Figure below: the only goal of this function is to assign the value of the argument <em>source</em> to a variable pointed by <em>target</em>. In this case, the output of calling GetStockObject(789644) will always equal zero, as the function was given an intentionally incorrect argument.
</p>
 <figure> <img alt="&quot;Arithmetic&quot; obfuscation in the HellowinPacker code" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image17.png"/> <figcaption>Figure 17. &quot;Arithmetic&quot; obfuscation in the HellowinPacker code</figcaption> </figure>
<p>
	Various mutations are encountered at the assembler level as well: inserting junk code, using opaque predicates, calling functions with unused arguments and repeated calls of the functions, and replacing instructions with their equivalents.
</p>
 <figure> <img alt="Example of obfuscation at the assembler code level" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/article_319382/image18.png"/> <figcaption>Figure 18. Example of obfuscation at the assembler code level</figcaption> </figure>
<h3>Usage</h3>
<p>
	HellowinPacker exists at least since 2014 and has been so far used in various mass malware. Here are only a few examples:
</p>
<div class="table-container">
	<table class="table-article">
	<thead>
	<tr>
		<th>
			Malware family
		</th>
		<th>
			SHA256
		</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.cerber" target="_blank">Cerber Ransomware</a>
		</td>
		<td>
			1e8b814a4bd850fc21690a66159a742bfcec212ccab3c3153a2c54c88c83ed9d
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.zloader" target="_blank">ZLoader</a>
		</td>
		<td>
			44ede6e1b9be1c013f13d82645f7a9cff7d92b267778f19b46aa5c1f7fa3c10b
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.dridex" target="_blank">Dridex</a>
		</td>
		<td>
			f5dfbb67b582a58e86db314cc99924502d52ccc306a646da25f5f2529b7bff16
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.bunitu" target="_blank">Bunitu</a>
		</td>
		<td>
			54ff90a4b9d4f6bb2808476983c1a902d7d20fc0348a61c79ee2a9e123054cce
		</td>
	</tr>
	<tr>
		<td>
			<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot" target="_blank">QakBot</a>
		</td>
		<td>
			c2482679c665dbec35164aba7554000817139035dc12efc9e936790ca49e7854
		</td>
	</tr>
	</tbody>
	</table>
</div>
<p>
	The packer has been frequently mentioned in reports by other researchers. The earliest mention we found dates back to 2015. In an <a href="https://blog.malwarebytes.com/threat-analysis/2015/12/malware-crypters-the-deceptive-first-layer/" target="_blank">article about crypters</a>, Malwarebytes experts analyze malware samples that use HellowinPacker. Later, other researchers referred to it as the Emotet packer (<a href="https://www.bromium.com/wp-content/uploads/2019/07/Bromium-Emotet-Technical-Analysis-Report.pdf" target="_blank">1</a>, <a href="https://github.com/seth1002/analysis_report/blob/master/Emotet/2019_0918/packer_analyze.md" target="_blank">2</a>). In 2020, our colleagues from NCC Group called it CryptOne and <a href="https://research.nccgroup.com/2020/06/23/wastedlocker-a-new-ransomware-variant-developed-by-the-evil-corp-group/" target="_blank">described</a> how it can be used to pack the WastedLocker ransomware. According to NCC Group, the crypter was also used by the <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.mailto" target="_blank">Netwalker</a>, <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.isfb" target="_blank">Gozi ISFB v3</a>, <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.zloader" target="_blank">ZLoader</a>, and <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.smokeloader" target="_blank">Smokeloader</a> malware families.
</p>
<h2>Conclusion</h2>
<p>
	Our example of using the crypters shows us how hackers can delegate responsibilities among each other, especially when it comes to mass malware. Developing malicious payload, protecting it from antivirus tools («crypt»), and delivering it to end users—all this can be performed by completely unrelated hackers, and each element of this chain can be offered as a service. This approach lowers the cybercrime entry threshold for technically unskilled criminals: to conduct a mass attack, all they have to do is to provide a necessary amount of money to pay for all the services.
</p>
<p>
	The packers we described are certainly not the only ones that exist on the market. However, they demonstrate the common features of such tools: as a result of their work, an executable file is obtained with obfuscated polymorphic code of the unpacker and a payload encrypted in some way or another. Mutations in code and reuse of the same crypters make static detection of payload almost impossible. However, since the payload is somehow decrypted to the memory and then starts its malicious activity, behavioral analysis using sandboxes (such as <a href="https://www.ptsecurity.com/ww-en/products/sandbox/" target="_blank">PT Sandbox</a>) allows detecting malware and providing accurate verdicts even for packed files. In addition, it should be noted that packers do not affect the interaction of malware with C&amp;C servers in any way. This makes it possible to determine the presence of malware in the network using traffic analysis tools such as <a href="https://www.ptsecurity.com/ww-en/products/network-attack-discovery/" target="_blank">PT Network Attack Discovery</a>.
</p>
<h2>Verdicts of our products</h2>
<h3><a href="https://www.ptsecurity.com/ww-en/products/sandbox/" target="_blank">PT Sandbox</a></h3>
<ul>
	<li>
	<p>
		Trojan.Win32.RTM.a
	</p>
	</li>
	<li>
	<p>
		Trojan.Win32.RTM.b
	</p>
	</li>
	<li>
	<p>
		Trojan-Banker.Win32.RTM.a
	</p>
	</li>
	<li>
	<p>
		Trojan-Banker.Win32.RTM.b
	</p>
	</li>
	<li>
	<p>
		Trojan-Banker.Win32.RTM.c
	</p>
	</li>
	<li>
	<p>
		Trojan-Banker.Win32.RTM.d
	</p>
	</li>
	<li>
	<p>
		Trojan-Banker.Win32.RTM.e
	</p>
	</li>
	<li>
	<p>
		Trojan-Banker.Win32.RTM.f
	</p>
	</li>
</ul>
<h3><a href="https://www.ptsecurity.com/ww-en/products/network-attack-discovery/" target="_blank">PT Network Attack Discovery</a></h3>
<ul>
	<li>
	<p>
		REMOTE [PTsecurity] TeamBot/RTM<br/>
		 sid: 10004412;
	</p>
	</li>
	<li>
	<p>
		BACKDOOR [PTsecurity] TeamBot/RTM<br/>
		 sid: 10004415;
	</p>
	</li>
	<li>
	<p>
		MALWARE [PTsecurity] RTM Banker CnC POST<br/>
		 sid: 10000765;
	</p>
	</li>
	<li>
	<p>
		MALWARE [PTsecurity] RTM.N (Redaman)<br/>
		 sid: 10005556; 10005557;
	</p>
	</li>
	<li>
	<p>
		MALWARE [PTsecurity] Spy.RTM.AF<br/>
		 sid: 10005468;
	</p>
	</li>
	<li>
	<p>
		MALWARE [PTsecurity] Trojan[Banker]/RTM<br/>
		 sid: 10004855; 10004875;
	</p>
	</li>
	<li>
	<p>
		MALWARE [PTsecurity] Win32/Spy.RTM.N (Redaman)<br/>
		 sid: 10003414; 10004754; 10005555;
	</p>
	</li>
	<li>
	<p>
		PAYLOAD [PTsecurity] RTM.Payload.xor<br/>
		 sid: 10005585;
	</p>
	</li>
</ul>
<h2>IOCs (RTM)</h2>
<div class="table-container">
	<table class="table-article">
	<thead>
	<tr>
		<th>
			Detection date
		</th>
		<th>
			Crypter
		</th>
		<th>
			SHA256
		</th>
		<th>
			SHA1
		</th>
		<th>
			MD5
		</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td>
			19.04.2020
		</td>
		<td>
			RTM
		</td>
		<td>
			a4229a54f76815ac30a2a878eadf275e199c82da657dbc5f3fc05fe95603c320
		</td>
		<td>
			ad22ceb309dd30dc769f63174292657fe07f0ced
		</td>
		<td>
			80b116708f75de212b49ff994ad8b43e
		</td>
	</tr>
	<tr>
		<td>
			22.04.2020
		</td>
		<td>
			Rex3Packer
		</td>
		<td>
			9b88e8143e4452229dac7fdcc3d9281d21390f286c086f09aec410f120dc4325
		</td>
		<td>
			f881729f6a5ca6fe80f385a2b0f8583b19214466
		</td>
		<td>
			3965b819eb945a9c0defc746bbc8ed7a
		</td>
	</tr>
	<tr>
		<td>
			13.05.2020
		</td>
		<td>
			HellowinPacker
		</td>
		<td>
			43e8ebacfa319ff7d871eef3cc35266cfa7c6f44dd787f27a48311e39727e10f
		</td>
		<td>
			8a28b75285409c55d5bbeca62e3819c83c8e663f
		</td>
		<td>
			afd18be08d135f7bf07007c1c9041126
		</td>
	</tr>
	<tr>
		<td>
			28.01.2021
		</td>
		<td>
			Rex3Packer (2 layers)
		</td>
		<td>
			fbf5974daee93bf5a2ed1816a4edbb108ceccb264d3e3f72d0aed268dd45e315
		</td>
		<td>
			2e3352c6341ce57a03aaf2c4fbf484f3a0a4bfe3
		</td>
		<td>
			6e0c8510443586cdc8f84330e447aae5
		</td>
	</tr>
	</tbody>
	</table>
</div>
</article></div></div><div class="ArticleLayout_rightColumn__c8u4z"><div class="ShareBlock_container__5nb7z"><div class="Text_base__riB2c Text_type_pM__mE14b Text_theme_light__type_pM__2zLmc"><span>Share this article</span><span>:</span></div><div class="ShareBlock_icons__vIJLT"><button type="button" class="Social_icon__pVcgR"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none"><path stroke="currentColor" d="M8.39 10.805a4.024 4.024 0 0 0 4.628 1.36 4.023 4.023 0 0 0 1.44-.925l2.413-2.416A4.029 4.029 0 0 0 14.012 2a4.02 4.02 0 0 0-2.83 1.13L9.8 4.507m1.81 4.688a4.024 4.024 0 0 0-4.627-1.36 4.022 4.022 0 0 0-1.44.925L3.13 11.176A4.029 4.029 0 0 0 5.988 18a4.02 4.02 0 0 0 2.83-1.13l1.375-1.377"></path></svg></button></div></div></div></div></div><div class="ArticleLayout_grid__ARjhp"><div class="ArticleLayout_rightColumns___55GM"><div class="ArticleLayout_rightColumn__c8u4z"></div></div></div></div></section><section class="PageSection_section__GxaaG Card_section__QzdVO" id="contacts"><div class="Card_contentWrapper__45uLa Card_mode_light__02f7V Card_zIndex_1__NP_2j AnyQuestions_container__KVhzR"><div class="AnyQuestions_heading__pSibU"><h1 class="AnyQuestions_title__ScrF1 Heading_base__MUnbH Heading_level_1__oOibP Heading_theme_light__level_1__7KeY7"><span>Get in touch</span></h1><div class="Text_base__riB2c Text_type_pL__A_h0d Text_theme_light__type_pL___Cab8"><span>Fill in the form and our specialists<br> will contact you shortly</span></div></div><div class="AnyQuestions_content__rdK_e"><div class="CardsSlider_root__4cbz_ AnyQuestions_radioGroupWrapper__WrSuy"><div class="CardsSlider_scrollArea__LArfW AnyQuestions_radioGroup__DBJB4"><label style="--cards-count:3" data-testid="form-tab-feedback" class="CardRadio_mode_light__Fnmg8 CardRadio_container__9oMVF CardRadio_checked__7uYOJ AnyQuestions_cardLayout__p5bqj"><input name="type" type="radio" checked="" value="feedback"/><div class="CardRadio_title__SlAzv Text_base__riB2c Text_type_postscript__I0CC_ Text_theme_light__type_postscript__JvgMb"><span>General<br> questions</span></div><div class="CardRadio_description__rzM_f Text_base__riB2c Text_type_pM__mE14b Text_theme_light__type_pM__2zLmc"><span>We're happy to answer any questions you may have.</span></div></label><label style="--cards-count:3" data-testid="form-tab-partnership" class="CardRadio_mode_light__Fnmg8 CardRadio_container__9oMVF AnyQuestions_cardLayout__p5bqj"><input name="type" type="radio" value="partnership"/><div class="CardRadio_title__SlAzv Text_base__riB2c Text_type_postscript__I0CC_ Text_theme_light__type_postscript__JvgMb"><span>Partnership</span></div><div class="CardRadio_description__rzM_f Text_base__riB2c Text_type_pM__mE14b Text_theme_light__type_pM__2zLmc"><span>Join us in making the world a safer place.</span></div></label><label style="--cards-count:3" data-testid="form-tab-pilotApplication" class="CardRadio_mode_light__Fnmg8 CardRadio_container__9oMVF AnyQuestions_cardLayout__p5bqj"><input name="type" type="radio" value="pilotApplication"/><div class="CardRadio_title__SlAzv Text_base__riB2c Text_type_postscript__I0CC_ Text_theme_light__type_postscript__JvgMb"><span>Pilot<br> application</span></div><div class="CardRadio_description__rzM_f Text_base__riB2c Text_type_pM__mE14b Text_theme_light__type_pM__2zLmc"><span>Test drive our solutions with a customized pilot program.</span></div></label></div></div><form><div class="FeedbackForm_fields__NxBGh"><div class="FeedbackForm_field__GSf0c FeedbackForm_fullWidth__SPrCb"><label class="Input_container__CtV41 Input_mode_light__DDarT"><input class="Input_input__dAKAo" placeholder="Name" type="text" autoComplete="name" maxLength="250" name="fullName" value=""/></label></div><div class="FeedbackForm_field__GSf0c"><label class="Input_container__CtV41 Input_mode_light__DDarT"><input class="Input_input__dAKAo" placeholder="Phone number" type="text" autoComplete="tel" maxLength="20" name="phone" value=""/></label></div><div class="FeedbackForm_field__GSf0c"><label class="Input_container__CtV41 Input_mode_light__DDarT"><input class="Input_input__dAKAo" placeholder="Email" type="text" autoComplete="email" maxLength="250" name="email" value=""/></label></div><div class="FeedbackForm_field__GSf0c FeedbackForm_fullWidth__SPrCb"><div class="Autocomplete_root__of0uL Select_root__qV3jk Select_mode_light__6i67a"><div class="Select_select__Wgg4m"><div class="SearchField_container__r8UBy"><input placeholder="Country" class="Input_input__dAKAo SearchField_input__OhP5T" id="headlessui-combobox-input-:R1d8qkf6:" role="combobox" type="text" aria-expanded="false" aria-autocomplete="list" data-headlessui-state=""/><button class="SearchField_icon__n277G SearchField_icon_second__tgr0q SearchField_icon_action__K_KOk" id="headlessui-combobox-button-:R2d8qkf6:" type="button" tabindex="-1" aria-haspopup="listbox" aria-expanded="false" data-headlessui-state=""></button><button class="SearchField_icon__n277G SearchField_icon_grey__v_ngf" id="headlessui-combobox-button-:R3d8qkf6:" type="button" tabindex="-1" aria-haspopup="listbox" aria-expanded="false" data-headlessui-state=""><svg width="17" height="16" viewBox="0 0 17 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10.7645 11.4123C12.0858 10.3117 12.9268 8.65406 12.9268 6.79999C12.9268 3.48628 10.2405 0.799988 6.92676 0.799988C3.61305 0.799988 0.926758 3.48628 0.926758 6.79999C0.926758 10.1137 3.61305 12.8 6.92676 12.8C8.3864 12.8 9.7243 12.2788 10.7645 11.4123ZM10.7645 11.4123L14.5522 15.2" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path></svg></button></div></div></div></div><div class="FeedbackForm_field__GSf0c FeedbackForm_fullWidth__SPrCb"><label class="Textarea_container__HPtza Textarea_mode_light__E0Y92"><textarea id="comment" class="Textarea_textarea__MapxB" placeholder="How can we help?" maxLength="1000" name="comment"></textarea></label></div></div><div class="FeedbackForm_agrees__062n_"><label class="InputCheckbox_mode_light__1Ed_W"><input class="InputCheckbox_input__x9X51" type="checkbox" name="consentsTerms" value="false"/><div class="InputCheckbox_checkboxLabel__hXRgu Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>I give <a data-sanitize-target="_blank" href="https://global.ptsecurity.com/policies/consent" target="_blank">my&nbsp;consent to&nbsp;the processing of&nbsp;my&nbsp;personal data</a> in&nbsp;accordance with the terms of&nbsp;the <a data-sanitize-target="_blank" href="https://global.ptsecurity.com/policies/privacy-policy" target="_blank">Privacy Notice</a></span></div></label><label class="InputCheckbox_mode_light__1Ed_W"><input class="InputCheckbox_input__x9X51" type="checkbox" name="subscription" value="false"/><div class="InputCheckbox_checkboxLabel__hXRgu Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>I&nbsp;give <a data-sanitize-target="_blank" href="https://global.ptsecurity.com/policies/consent-email" target="_blank">my&nbsp;consent to&nbsp;receive marketing and&nbsp;informational messages</a></span></div></label></div><div><div class="smart-captcha"></div><button type="submit" class="Button_button__F7Ulc Button_button_size_m__cmMD_ Button_button_theme_light__W9pGX"><span><span>SEND</span></span><img alt="" loading="lazy" width="20" height="20" decoding="async" data-nimg="1" class="Button_arrow__ZXQXI" style="color:transparent" src="/_next/static/media/arrows-right.1fc87099.svg"/></button></div></form></div></div></section><footer class="Footer_wrapper__igPy4"><div class="Footer_info__BLmy7"><div class="Footer_head__3m28S"><div class="Footer_copyright__JcWnj Text_base__riB2c Text_type_pM__mE14b"><span>Copyright <mark>©</mark> 2002–2024 Positive Technologies. All rights reserved.</span></div><h2 class="Footer_heading__mQ6QG Heading_base__MUnbH Heading_level_2__qXMBH"><span>Cybersecurity market leader</span></h2><div class="Footer_additionalLinks__KyguX"><a class="Footer_additionalLink__5ONRT" target="_blank" href="https://global.ptsecurity.com/policies/terms-of-use">Legal documents</a><a class="Footer_additionalLink__5ONRT" href="https://www.ptsecurity.com/choose-region/?return_url=/analytics/pt-esc-threat-intelligence/paas-or-how-hackers-evade-antivirus-software">Change region</a></div></div><nav class="Footer_nav__LBYFW"><div class="Footer_nav_col__lYnPU"><div class="NavBlock_title__7sNY5 Text_base__riB2c Text_type_pL__A_h0d"><span>Products</span></div><a class="NavBlock_list_item__wGeXz" href="/products/network-attack-discovery"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT NAD</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/threat-intelligence-feeds"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Threat Intelligence Feeds</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/sandbox"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Sandbox</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/maxpatrol-vm"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>MaxPatrol VM</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/siem"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>MaxPatrol SIEM</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/ai"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Application Inspector</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/blackbox"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT BlackBox</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/isim"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT ISIM</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/mp-o2"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>MaxPatrol O2</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/edr"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>MaxPatrol EDR</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/pt-af"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Application Firewall</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/cs"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Container Security</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/ics"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Industrial Cybersecurity Suite</span></div></a></div><div class="Footer_nav_col__lYnPU"><div class="NavBlock_title__7sNY5 Text_base__riB2c Text_type_pL__A_h0d"><span>ANALYTICS</span></div><a class="NavBlock_list_item__wGeXz" href="/analytics"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Analytics articles</span></div></a><a class="NavBlock_list_item__wGeXz" href="/analytics/knowledge-base"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Knowledge base</span></div></a><a class="NavBlock_list_item__wGeXz" href="/analytics/pt-esc-threat-intelligence"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT ESC threat intelligence</span></div></a><a class="NavBlock_list_item__wGeXz" href="/analytics/threatscape"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Threatscape</span></div></a><a class="NavBlock_list_item__wGeXz" href="/analytics/hacker-groups"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Hacker groups</span></div></a></div><div class="Footer_nav_col__lYnPU"><div class="NavBlock_title__7sNY5 Text_base__riB2c Text_type_pL__A_h0d"><span>COMPANY</span></div><a class="NavBlock_list_item__wGeXz" href="/about"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>About us</span></div></a><a class="NavBlock_list_item__wGeXz" href="/about/clients"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Clients</span></div></a><a class="NavBlock_list_item__wGeXz" href="/about/contacts"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Contacts</span></div></a><a class="NavBlock_list_item__wGeXz" href="/about/pt-in-the-media"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT in the Media</span></div></a><a href="https://edu.ptsecurity.com/learning-space" target="_blank" class="NavBlock_list_item__wGeXz"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Education</span></div></a><a href="https://www.youtube.com/channel/UC9hnMfdwfLd8V5qEc-6MXXQ" target="_blank" class="NavBlock_list_item__wGeXz"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>YouTube</span></div></a><a href="https://vacancy.global.ptsecurity.com/" target="_blank" class="NavBlock_list_item__wGeXz"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Vacancy</span></div></a></div></nav></div><div><img alt="" loading="lazy" width="1200" height="100" decoding="async" data-nimg="1" class="Footer_logo__cDBuS" style="color:transparent" src="https://pt-global.storage.yandexcloud.net/logo_1d137588e3.svg"/></div></footer></main></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"seo":{"title":"PaaS, or how hackers evade antivirus software","description":"\r\n\t Malware is one of the main tools of any hacking group. Depending on the level of qualification and the specifics of operation, hackers can use both publicly available tools (such as the Cobalt Strike framework) and their own developments.\r\n\r\n\r\n\t Creating a unique set of tools for each attack requires huge resources; therefore, hackers tend to reuse malware in different operations and also share it with other groups. The mass use of the same tool inevitably leads to its getting on the radar of antivirus companies, which, as a result, reduces its efficiency.\r\n\r\n\r\n\t To prevent it from happening, hackers use code packing, encryption, and mutation techniques. Such techniques can often be handled by separate tools called crypters or sometimes simply packers. In this article, we will use the example of the RTM\r\n\tbanking trojan to discuss which packers attackers can use, how they complicate detection of the malware, and what other malware they can pack.\r\n"},"headerData":{"logoImage":{"src":"https://pt-global.storage.yandexcloud.net/logo_header_1bd424ccc4.svg","width":249,"height":22,"alt":""},"nav":[{"type":"product-menu","data":{"title":"Products","button":{"link":"/products","text":"Jump to section","targetBlank":false},"items":[{"description":"NDR system for detecting hidden threats on the perimeter and inside the network","link":"/products/network-attack-discovery","title":"PT NAD"},{"description":"Advanced sandbox with customizable virtual environments","link":"/products/sandbox","title":"PT Sandbox"},{"description":"Next-generation vulnerability management system","link":"/products/maxpatrol-vm","title":"MaxPatrol VM"},{"description":"Pinpoint threat detection solution for your infrastructure","link":"/products/siem","title":"MaxPatrol SIEM"},{"description":"Source-code analysis tool","link":"/products/ai","title":"PT Application Inspector"},{"description":"Dynamic application security testing tool","link":"/products/blackbox","title":"PT BlackBox"},{"description":"Cyberthreat detection and incident response in ICS","link":"/products/isim","title":"PT ISIM"},{"description":"Autopilot for result-driven cybersecurity","link":"/products/mp-o2/","title":"MaxPatrol O2"},{"description":"Protects your endpoints","link":"/products/edr","title":"MaxPatrol EDR"},{"description":"A web application firewall","link":"/products/pt-af","title":"PT Application Firewall"},{"description":"Innovative solution for the comprehensive protection","link":"/products/cs","title":"PT Container Security"},{"description":"The first comprehensive platform for cyberthreat detection and response in industrial systems","link":"/products/ics","title":"PT Industrial Cybersecurity Suite"},{"description":"Data feeds collected by Positive Technologies experts for threat detection","link":"/products/threat-intelligence-feeds","title":"PT Threat Intelligence Feeds"}]}},{"type":"product-menu","data":{"title":"Services","button":{"link":"/services","text":"Jump to section","targetBlank":false},"items":[{"description":"","link":"/services/esc","title":"ESC"}]}},{"type":"product-menu","data":{"title":"Education","button":null,"items":[{"description":"","link":"https://edu.ptsecurity.com/learning-space","title":"Positive Education Learning Space"},{"description":"","link":"https://edu.ptsecurity.com/pros-programs","title":"Cybersecurity programs for Professionals"},{"description":"","link":"https://edu.ptsecurity.com/c-level-programs","title":"Cybersecurity programs for Executives"},{"description":"","link":"https://edu.ptsecurity.com/product-courses","title":"Product courses"}]}},{"type":"link","data":{"link":"/about/news/","title":"News \u0026 events"}},{"type":"product-menu","data":{"title":"Analytics","button":{"link":"/analytics","text":"Jump to section","targetBlank":false},"items":[{"description":"","link":"/analytics/knowledge-base","title":"Knowledge base"},{"description":"","link":"/analytics/pt-esc-threat-intelligence","title":"PT ESC threat intelligence"},{"description":"","link":"/analytics/threatscape","title":"Threatscape"},{"description":"","link":"/analytics/hacker-groups","title":"Hacker groups"}]}},{"type":"product-menu","data":{"title":"About us","button":{"link":"/about","text":"Jump to section","targetBlank":false},"items":[{"description":"","link":"/about/clients","title":"Clients"},{"description":"","link":"/about/contacts","title":"Contacts"},{"description":"","link":"/about/pt-in-the-media","title":"PT in the Media"},{"description":"","link":"https://vacancy.global.ptsecurity.com/","title":"Vacancy"}]}}],"searchInputPlaceholder":"Search on ptsecurity.com"},"articleData":{"content":[],"deprecatedDetailText":"\u003carticle\u003e\r\n\u003cp\u003e\r\n\tMalware is one of the main tools of any hacking group. Depending on the level of qualification and the specifics of operation, hackers can use both publicly available tools (such as the Cobalt Strike framework) and their own developments.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tCreating a unique set of tools for each attack requires huge resources; therefore, hackers tend to reuse malware in different operations and also share it with other groups. The mass use of the same tool inevitably leads to its getting on the radar of antivirus companies, which, as a result, reduces its efficiency.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tTo prevent it from happening, hackers use code packing, encryption, and mutation techniques. Such techniques can often be handled by separate tools called crypters or sometimes simply packers. In this article, we will use the example of the \u003ca href=\"https://www.ptsecurity.com/ru-ru/research/hacker-groups/rtm/\" target=\"_blank\"\u003eRTM\u003c/a\u003e banking trojan to discuss which packers attackers can use, how they complicate detection of the malware, and what other malware they can pack.\r\n\u003c/p\u003e\r\n\u003ch2\u003ePacker-as-a-service\u003c/h2\u003e\r\n\u003cp\u003e\r\n\tA hacker group responsible for RTM distribution regularly sent mass phishing emails with malicious attachments until the end of 2020. Apparently, the attacks were automated.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"RTM phishing email, December 2020\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image1.png\"\u003e \u003cfigcaption\u003eFigure 1. RTM phishing email, December 2020\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tEach attachment contained files that significantly differed from each other, but the final payload remained almost the same.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Example of RTM archive\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image2.png\"\u003e \u003cfigcaption\u003eFigure 2. Example of RTM archive\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tSuch feature is a natural consequence of using crypters. Initially, the group behind RTM used its own unique crypter. In 2020, however, the group changed it twice.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tWhen analyzing samples packed in a new way, we detected numerous other malware protected by similar method. Taking into account the fact that packing process is automated, such overlapping with other malware allows us to assume that attackers use the packer-as-a-service model. In this model, packing of malicious files is delegated to a special service managed by a third party.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Website of a crypt service\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image3.png\"\u003e \u003cfigcaption\u003eFigure 3. Website of a crypt service\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tAccess to such services can often be found on sale on hacker forums.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Advertisement of file packing as a service\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image4.png\"\u003e \u003cfigcaption\u003eFigure 4. Advertisement of file packing as a service\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tLater in this article, we will discuss specific examples of crypters used by the RTM group.\r\n\u003c/p\u003e\r\n\u003ch2\u003eRex3Packer\u003c/h2\u003e\r\n\u003cp\u003e\r\n\tThe first use of this packer by the RTM group that we detected dates back to November 2019. The group started actively using the packer in April–May 2020. Rare uses of the packer for distributing old versions of the RTM trojan were also observed in late January 2021.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Phishing email by RTM, January 2021\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image5.png\"\u003e \u003cfigcaption\u003eFigure 5. Phishing email by RTM, January 2021\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tWe couldn't associate this packer with any of the publicly described ones, so we named it according to three specifics of its working: \u003cb\u003ere\u003c/b\u003ecursion, bit \u003cb\u003ere\u003c/b\u003everse, and reflective loading of PE files (\u003cb\u003ere\u003c/b\u003eflection), hence the name \u003cb\u003eRe\u003c/b\u003ex\u003cb\u003e3\u003c/b\u003ePacker.\r\n\u003c/p\u003e\r\n\u003ch3\u003eUnpacking algorithm\u003c/h3\u003e\r\n\u003cp\u003e\r\n\tThe overall algorithm for extracting the payload is as follows:\r\n\u003c/p\u003e\r\n\u003col\u003e\r\n\t\u003cli\u003eA predetermined amount of memory is allocated with read, write, and execute rights using VirtualAlloc.\u003c/li\u003e\r\n\t\u003cli\u003eThe content of the current process image in the memory is copied to the allocated buffer (in particular, section .text).\u003c/li\u003e\r\n\t\u003cli\u003eControl passes to the function inside the buffer.\u003c/li\u003e\r\n\t\u003cli\u003eThe difference is calculated between the location of data in the buffer and in the PE file image (difference between the addresses in the buffer and virtual addresses in the image). This difference is written to the ebx register. All references to virtual addresses in code are indexed by the content of this register. As a result, wherever necessary, a correction is added to the PE image addresses that allows obtaining the corresponding address in the buffer. \u003cfigure\u003e \u003cimg alt=\"Calls to functions and variables taking into account the correction in the ebx register\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image6.png\"\u003e \u003cfigcaption\u003eFigure 6. Calls to functions and variables taking into account the correction in the ebx register\u003c/figcaption\u003e \u003c/figure\u003e \u003c/li\u003e\r\n\t\u003cli\u003eAnother buffer is allocated for packed data.\u003c/li\u003e\r\n\t\u003cli\u003eBy calling VirtualProtect, RWX rights are assigned to the entire memory region with the PE file image.\u003c/li\u003e\r\n\t\u003cli\u003eThe packed data is copied to the buffer.\u003c/li\u003e\r\n\t\u003cli\u003eThe packed data is decoded.\u003c/li\u003e\r\n\t\u003cli\u003eThe memory region with the PE image is filled with null bytes.\u003c/li\u003e\r\n\t\u003cli\u003eThe decoded data represents an executable file—the PE payload. This payload is reflectively loaded to where the initial PE image was, and control passes to its entry point.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003cp\u003e\r\n\tA specific algorithm for decoding packed data is of special interest to us. In this case, it would be incorrect to compare packing with compression, as the algorithm is such that the size of packed data is always bigger than that of the initial data.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tThe packed data is preceded by a 16-byte header that contains four 4-byte fields:\r\n\u003c/p\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003eSize of the header\u003c/li\u003e\r\n\t\u003cli\u003eSize of initial data (PE payload)\u003c/li\u003e\r\n\t\u003cli\u003ePosition in initial data (*) at which they are divided (more details below)\u003c/li\u003e\r\n\t\u003cli\u003eEncoding mode (1, 2, or 4)\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\r\n\tThe decoding looks as follows:\r\n\u003c/p\u003e\r\n\u003col\u003e\r\n\t\u003cli\u003eInside each byte, bit order is reversed (for example, 10011000 becomes 00011001).\u003c/li\u003e\r\n\t\u003cli\u003eDepending on encoding mode (1, 2, 4), data is divided into blocks with N size of 9, 5, or 3 bytes, respectively. The result of the block decoding is N-1 byte (8, 4, or 2).\u003c/li\u003e\r\n\t\u003cli\u003eIn the first N-1 bytes of the block, some bits are missing: their values always equal zero. To restore the original bytes, the missing bits are extracted from the last byte of the block by using 00000001, 00010001, or 01010101 masks. The mask is shifted for each subsequent byte. As a result, the last byte of the block is composed of the bits extracted from previous bytes and united by the logical operation OR.\r\n\t\u003cp\u003e\r\n\t\tFor example, in mode 4, the last byte is composed of even bits of the block's first byte and odd bits of the block's second byte. As a result of \"returning\" these bits to the first and second bytes, an original sequence of two bytes is composed.\r\n\t\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Scheme of obtaining initial bytes in mode 4\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image7.png\"\u003e \u003cfigcaption\u003eFigure 7. Scheme of obtaining initial bytes in mode 4\u003c/figcaption\u003e \u003c/figure\u003e\u003c/li\u003e\r\n\t\u003cli\u003eWhen bits are restored in all blocks, the obtained data represents the initial PE file divided by two parts at position (*). These parts, in turn, were swapped. The second rearrangement (taking into account the (*) value) allows obtaining the original file.\u003c/li\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003eObfuscation\u003c/h3\u003e\r\n\u003cp\u003e\r\n\tTo complicate code analysis, various obfuscation techniques are used in the packer:\r\n\u003c/p\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tIn between the execution of significant code, various WinAPI functions are called. Their results are saved but not used, and the functions are selected so that not to affect the program operation.\r\n\t\u003c/p\u003e\r\n\t\u003cfigure\u003e \u003cimg alt=\"Calling WinAPI functions\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image8.png\"\u003e \u003cfigcaption\u003eFigure 8. Calling WinAPI functions\u003c/figcaption\u003e \u003c/figure\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tA typical feature of this packer is the presence of cycles (not performing useful operations) implemented via a recursive function.\r\n\t\u003c/p\u003e\r\n\t\u003cfigure\u003e \u003cimg alt=\"Recursive function (sample without junk code)\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image9.png\"\u003e \u003cfigcaption\u003eFigure 9. Recursive function (sample without junk code)\u003c/figcaption\u003e \u003c/figure\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tFor further obfuscation, several dozens of randomly generated functions are added to executable file. They may call each other, but none of them obtains control ever.\r\n\t\u003c/p\u003e\r\n\t\u003cfigure\u003e \u003cimg alt=\"Example of generated function\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image10.png\"\u003e \u003cfigcaption\u003eFigure 10. Example of generated function\u003c/figcaption\u003e \u003c/figure\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003eUsage\u003c/h3\u003e\r\n\u003cp\u003e\r\n\tIn addition to RTM samples, we detected the use of Rex3Packer for packing various malware, mainly originating from the CIS countries. Below is the list with examples of such malware:\r\n\u003c/p\u003e\r\n\u003cdiv class=\"table-container\"\u003e\r\n\t\u003ctable class=\"table-article\"\u003e\r\n\t\u003cthead\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tMalware family\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tSHA256\r\n\t\t\u003c/th\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/thead\u003e\r\n\t\u003ctbody\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.phobos\" target=\"_blank\"\u003ePhobos Ransomware\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t6e9c9b72d1bdb993184c7aa05d961e706a57b3becf151ca4f883a80a07fdd955\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.zeppelin_ransomware\" target=\"_blank\"\u003eZeppelin Ransomware\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t8d44fdbedd0ec9ae59fad78bdb12d15d6903470eb1046b45c227193b233adda6\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.raccoon\" target=\"_blank\"\u003eRaccoon Stealer\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t3be91458baa365febafb6b33283b9e1d7e53291de9fec9d3050cd32d98b7a039\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.kpot_stealer\" target=\"_blank\"\u003eKPOT Stealer\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t9b6af2502547bbf9a64ccfb8889ee25566322da38e9e0ccb86b0e6131a67df1e\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.predator\" target=\"_blank\"\u003ePredator The Thief\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\td1060835793f01d1e137ad92e4e38ef2596f20b26da3d12abcc8372158764a8f\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot\" target=\"_blank\"\u003eQakBot\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t18cc92453936d1267e790c489c419802403bb9544275b4a18f3472d2fe6f5dea\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/tbody\u003e\r\n\t\u003c/table\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\r\n\tWe also detected the use of this packer for packing malware samples of the \u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.nemty\" target=\"_blank\"\u003eNemty\u003c/a\u003e, \u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.pony\" target=\"_blank\"\u003ePony\u003c/a\u003e, and \u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.amadey\" target=\"_blank\"\u003eAmadey\u003c/a\u003e families. This is, of course, not an exhaustive list of all cases of using Rex3Packer.\r\n\u003c/p\u003e\r\n\u003ch2\u003eHellowinPacker\u003c/h2\u003e\r\n\u003cp\u003e\r\n\tIn May 2020, RTM started using a new packer and went on using it until the beginning of 2021. We called it HellowinPacker because of the file name \"hellowin.wav\" we spotted in strings of some samples.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tThe packer's key feature is two levels of code mutation. The first one significantly changes the unpacking code structure, making samples look different from each other.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Comparison of code in two samples of different structure\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image11.png\"\u003e \u003cfigcaption\u003eFigure 11. Comparison of code in two samples of different structure\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tThe example above shows the comparison of samples 5b5f30f7cbd6343efd409f727e656a7039bff007be73a04827cce2277d873aa0 (on the left) and 1f9a8b3c060c2940a81442c9d9c9e36c31ad37aaa7cd61e1d7aec2d86fe1c585 (on the right).\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tThe second level only changes some details, and the code structure remains in general the same. The changes mainly affect assembler instructions and constants that do not impact the program operation. As a result, the code looks almost identical when decompiled.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Comparison of code in two samples of the same structure\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image12.png\"\u003e \u003cfigcaption\u003eFigure 12. Comparison of code in two samples of the same structure\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tJust like Rex3Packer, HellowinPacker is actively used by attackers to pack various malware. Note that malware from the same family has the same structure when packed. This lasts for at least some time, after which the structure can change.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tAll these features coincide with the description of a packing service the access to which is sold on hacker forums:\r\n\u003c/p\u003e\r\n\u003cdiv class=\"code\"\u003e[Uniqueness] A customer is given a unique crypter that does not depend on other customers. If your files were spotted, your uploads are to blame. We're not looking for 10,000+ customers, we provide correct Premium support and have a very limited number of clients. We make only unique stubs for a customer.\u003c/div\u003e\r\n\u003cbr\u003e\r\n\u003cp\u003e\r\n\tApparently, each unique crypter has its own structure of generated code. The crypter itself can also mutate code but at a lower level, without changing the program structure. In any case, the significant executable code remains the same.\r\n\u003c/p\u003e\r\n\u003ch3\u003eUnpacking algorithm\u003c/h3\u003e\r\n\u003cp\u003e\r\n\tOne of the first actions in all packed files is an attempt to open the registry key HKEY_CLASSES_ROOT\\Interface\\{b196b287-bab4-101a-b69c-00aa00341d07} (character case may differ in each particular case) and request a default value. Correct program operation in some modifications of generated code depends on whether these operations are successful.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tInterface GUIDs may also differ. Here are some of the possible options:\r\n\u003c/p\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003e{3050f1dd-98b5-11cf-bb82-00aa00bdce0b}\u003c/li\u003e\r\n\t\u003cli\u003e{aa5b6a80-b834-11d0-932f-00a0c90dcaa9}\u003c/li\u003e\r\n\t\u003cli\u003e{683130a6-2e50-11d2-98a5-00c04f8ee1c4}\u003c/li\u003e\r\n\t\u003cli\u003e{c7c3f5a1-88a3-11d0-abcb-00a0c90fffc0}\u003c/li\u003e\r\n\t\u003cli\u003e{b8da6310-e19b-11d0-933c-00a0c90dcaa9}\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\r\n\tThe subsequent code obtains the address at which a block of encrypted data is located.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tThis block starts with a 4-byte number, which stores the size of \u003cb\u003einitial\u003c/b\u003e data (those that will be obtained after decoding). By calling VirtualAlloc, a memory block of required size with RWX rights is allocated for decrypted data. Encrypted data is copied to the allocated memory by blocks of X bytes each. In the original file, \"spaces\" of Y byte length are located between these blocks.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Scheme of data copying in HellowinPacker\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image13.png\"\u003e \u003cfigcaption\u003eFigure 13. Scheme of data copying in HellowinPacker\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tData is then decrypted by 4-byte blocks:\r\n\u003c/p\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003eEach next block is interpreted as an integer (DWORD).\u003c/li\u003e\r\n\t\u003cli\u003eIndex of the first byte in the block is added to the integer.\u003c/li\u003e\r\n\t\u003cli\u003eAn xor operation is executed between the obtained value and the sum of the index and a fixed key (Z number).\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\r\n\tExample of algorithm implementation in Python:\r\n\u003c/p\u003e\r\n \u003cpre\u003e\u003cdiv class=\"code\"\u003edef decrypt(data, Z):\r\n    index = 0\r\n    while index \u0026lt; len(data):\r\n        dword = struct.unpack(\"\u0026lt;I\", data[index:index + 4])[0]\r\n        dword = (dword + index) \u0026amp; (2 ** 32 - 1)\r\n        dword = dword ^ (index + Z)\r\n        data[index:index + 4] = struct.pack(\"\u0026lt;I\", dword)\r\n        index += 4\u003c/div\u003e\u003c/pre\u003e\r\n\u003cbr\u003e\r\n\u003cp\u003e\r\n\tValues X, Y, and Z vary depending on a particular packed sample.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tThe next stage of extracting payload—the shellcode—is located inside the decrypted data. The shellcode takes control when the decryption ends.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tThe shellcode dynamically loads functions required for its operation. These functions are listed in the \"import table\" located at the beginning of decrypted data.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg src=\"/upload/corporate/ww-en/images/esc/article_319382/image14.png\" alt=\"\" decrypted=\"\" import=\"\" in=\"\"\u003e \u003cfigcaption\u003eFigure 14. \"Import table\" in decrypted data\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tFor greater variability, the strings in the \"import table\" may be partially filled with random symbols. In the example above, the first function name \"GetProcAddress\" is fully replaced by the string \"aaa45678901234\", and the names \"VirtualAlloc\" and \"VirtualProtect\" are damaged. Right before processing the table, the shellcode restores correct values of all the symbols.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Code for restoring damaged names of functions\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image15.png\"\u003e \u003cfigcaption\u003eFigure 15. Code for restoring damaged names of functions\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tPayload (this time, it is the PE file) is extracted by the shellcode from the rest of the decrypted data. It is encrypted again by the same algorithm as described above. For Z key, figure 1001 is always used.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tWhen the decryption is finished, the shellcode performs reflective loading of the PE file using the functions imported at the first stage.\r\n\u003c/p\u003e\r\n\u003ch3\u003eObfuscation\u003c/h3\u003e\r\n\u003cp\u003e\r\n\tJust like Rex3Packer, HellowinPacker samples call WinAPI functions not related to the main program logic. However, in this case, they are mostly used to complicate behavior analysis and detection in sandboxes. This is also confirmed by the fact that in most cases various functions are called in a row at the very beginning of the program.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Entry point in one of the packed libraries\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image16.png\"\u003e \u003cfigcaption\u003eFigure 16. Entry point in one of the packed libraries\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tAn additional effect of the WinAPI use is the impossibility of detection by a list of imported functions and by imphash.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tWhen working with various numeric values, a certain \"arithmetic\" obfuscation is often observed: necessary constants are represented as sums or differences of other constants (which in some cases equal zero). To obtain constants, WinAPI functions can also be called, yielding predictable results (for example, 0 in case of failure).\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tAn example of such obfuscation is given on the Figure below: the only goal of this function is to assign the value of the argument \u003cem\u003esource\u003c/em\u003e to a variable pointed by \u003cem\u003etarget\u003c/em\u003e. In this case, the output of calling GetStockObject(789644) will always equal zero, as the function was given an intentionally incorrect argument.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"\u0026quot;Arithmetic\u0026quot; obfuscation in the HellowinPacker code\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image17.png\"\u003e \u003cfigcaption\u003eFigure 17. \"Arithmetic\" obfuscation in the HellowinPacker code\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tVarious mutations are encountered at the assembler level as well: inserting junk code, using opaque predicates, calling functions with unused arguments and repeated calls of the functions, and replacing instructions with their equivalents.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Example of obfuscation at the assembler code level\" src=\"/upload/corporate/ww-en/images/esc/article_319382/image18.png\"\u003e \u003cfigcaption\u003eFigure 18. Example of obfuscation at the assembler code level\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003ch3\u003eUsage\u003c/h3\u003e\r\n\u003cp\u003e\r\n\tHellowinPacker exists at least since 2014 and has been so far used in various mass malware. Here are only a few examples:\r\n\u003c/p\u003e\r\n\u003cdiv class=\"table-container\"\u003e\r\n\t\u003ctable class=\"table-article\"\u003e\r\n\t\u003cthead\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tMalware family\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tSHA256\r\n\t\t\u003c/th\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/thead\u003e\r\n\t\u003ctbody\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.cerber\" target=\"_blank\"\u003eCerber Ransomware\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t1e8b814a4bd850fc21690a66159a742bfcec212ccab3c3153a2c54c88c83ed9d\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.zloader\" target=\"_blank\"\u003eZLoader\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t44ede6e1b9be1c013f13d82645f7a9cff7d92b267778f19b46aa5c1f7fa3c10b\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.dridex\" target=\"_blank\"\u003eDridex\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tf5dfbb67b582a58e86db314cc99924502d52ccc306a646da25f5f2529b7bff16\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.bunitu\" target=\"_blank\"\u003eBunitu\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t54ff90a4b9d4f6bb2808476983c1a902d7d20fc0348a61c79ee2a9e123054cce\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t\u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot\" target=\"_blank\"\u003eQakBot\u003c/a\u003e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tc2482679c665dbec35164aba7554000817139035dc12efc9e936790ca49e7854\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/tbody\u003e\r\n\t\u003c/table\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e\r\n\tThe packer has been frequently mentioned in reports by other researchers. The earliest mention we found dates back to 2015. In an \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/12/malware-crypters-the-deceptive-first-layer/\" target=\"_blank\"\u003earticle about crypters\u003c/a\u003e, Malwarebytes experts analyze malware samples that use HellowinPacker. Later, other researchers referred to it as the Emotet packer (\u003ca href=\"https://www.bromium.com/wp-content/uploads/2019/07/Bromium-Emotet-Technical-Analysis-Report.pdf\" target=\"_blank\"\u003e1\u003c/a\u003e, \u003ca href=\"https://github.com/seth1002/analysis_report/blob/master/Emotet/2019_0918/packer_analyze.md\" target=\"_blank\"\u003e2\u003c/a\u003e). In 2020, our colleagues from NCC Group called it CryptOne and \u003ca href=\"https://research.nccgroup.com/2020/06/23/wastedlocker-a-new-ransomware-variant-developed-by-the-evil-corp-group/\" target=\"_blank\"\u003edescribed\u003c/a\u003e how it can be used to pack the WastedLocker ransomware. According to NCC Group, the crypter was also used by the \u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.mailto\" target=\"_blank\"\u003eNetwalker\u003c/a\u003e, \u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.isfb\" target=\"_blank\"\u003eGozi ISFB v3\u003c/a\u003e, \u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.zloader\" target=\"_blank\"\u003eZLoader\u003c/a\u003e, and \u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.smokeloader\" target=\"_blank\"\u003eSmokeloader\u003c/a\u003e malware families.\r\n\u003c/p\u003e\r\n\u003ch2\u003eConclusion\u003c/h2\u003e\r\n\u003cp\u003e\r\n\tOur example of using the crypters shows us how hackers can delegate responsibilities among each other, especially when it comes to mass malware. Developing malicious payload, protecting it from antivirus tools («crypt»), and delivering it to end users—all this can be performed by completely unrelated hackers, and each element of this chain can be offered as a service. This approach lowers the cybercrime entry threshold for technically unskilled criminals: to conduct a mass attack, all they have to do is to provide a necessary amount of money to pay for all the services.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\tThe packers we described are certainly not the only ones that exist on the market. However, they demonstrate the common features of such tools: as a result of their work, an executable file is obtained with obfuscated polymorphic code of the unpacker and a payload encrypted in some way or another. Mutations in code and reuse of the same crypters make static detection of payload almost impossible. However, since the payload is somehow decrypted to the memory and then starts its malicious activity, behavioral analysis using sandboxes (such as \u003ca href=\"https://www.ptsecurity.com/ww-en/products/sandbox/\" target=\"_blank\"\u003ePT Sandbox\u003c/a\u003e) allows detecting malware and providing accurate verdicts even for packed files. In addition, it should be noted that packers do not affect the interaction of malware with C\u0026amp;C servers in any way. This makes it possible to determine the presence of malware in the network using traffic analysis tools such as \u003ca href=\"https://www.ptsecurity.com/ww-en/products/network-attack-discovery/\" target=\"_blank\"\u003ePT Network Attack Discovery\u003c/a\u003e.\r\n\u003c/p\u003e\r\n\u003ch2\u003eVerdicts of our products\u003c/h2\u003e\r\n\u003ch3\u003e\u003ca href=\"https://www.ptsecurity.com/ww-en/products/sandbox/\" target=\"_blank\"\u003ePT Sandbox\u003c/a\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tTrojan.Win32.RTM.a\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tTrojan.Win32.RTM.b\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tTrojan-Banker.Win32.RTM.a\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tTrojan-Banker.Win32.RTM.b\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tTrojan-Banker.Win32.RTM.c\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tTrojan-Banker.Win32.RTM.d\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tTrojan-Banker.Win32.RTM.e\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tTrojan-Banker.Win32.RTM.f\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch3\u003e\u003ca href=\"https://www.ptsecurity.com/ww-en/products/network-attack-discovery/\" target=\"_blank\"\u003ePT Network Attack Discovery\u003c/a\u003e\u003c/h3\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tREMOTE [PTsecurity] TeamBot/RTM\u003cbr\u003e\r\n\t\t sid: 10004412;\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tBACKDOOR [PTsecurity] TeamBot/RTM\u003cbr\u003e\r\n\t\t sid: 10004415;\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tMALWARE [PTsecurity] RTM Banker CnC POST\u003cbr\u003e\r\n\t\t sid: 10000765;\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tMALWARE [PTsecurity] RTM.N (Redaman)\u003cbr\u003e\r\n\t\t sid: 10005556; 10005557;\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tMALWARE [PTsecurity] Spy.RTM.AF\u003cbr\u003e\r\n\t\t sid: 10005468;\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tMALWARE [PTsecurity] Trojan[Banker]/RTM\u003cbr\u003e\r\n\t\t sid: 10004855; 10004875;\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tMALWARE [PTsecurity] Win32/Spy.RTM.N (Redaman)\u003cbr\u003e\r\n\t\t sid: 10003414; 10004754; 10005555;\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\t\u003cli\u003e\r\n\t\u003cp\u003e\r\n\t\tPAYLOAD [PTsecurity] RTM.Payload.xor\u003cbr\u003e\r\n\t\t sid: 10005585;\r\n\t\u003c/p\u003e\r\n\t\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eIOCs (RTM)\u003c/h2\u003e\r\n\u003cdiv class=\"table-container\"\u003e\r\n\t\u003ctable class=\"table-article\"\u003e\r\n\t\u003cthead\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tDetection date\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tCrypter\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tSHA256\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tSHA1\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\tMD5\r\n\t\t\u003c/th\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/thead\u003e\r\n\t\u003ctbody\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t19.04.2020\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tRTM\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\ta4229a54f76815ac30a2a878eadf275e199c82da657dbc5f3fc05fe95603c320\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tad22ceb309dd30dc769f63174292657fe07f0ced\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t80b116708f75de212b49ff994ad8b43e\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t22.04.2020\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tRex3Packer\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t9b88e8143e4452229dac7fdcc3d9281d21390f286c086f09aec410f120dc4325\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tf881729f6a5ca6fe80f385a2b0f8583b19214466\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t3965b819eb945a9c0defc746bbc8ed7a\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t13.05.2020\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tHellowinPacker\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t43e8ebacfa319ff7d871eef3cc35266cfa7c6f44dd787f27a48311e39727e10f\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t8a28b75285409c55d5bbeca62e3819c83c8e663f\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tafd18be08d135f7bf07007c1c9041126\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t28.01.2021\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tRex3Packer (2 layers)\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\tfbf5974daee93bf5a2ed1816a4edbb108ceccb264d3e3f72d0aed268dd45e315\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t2e3352c6341ce57a03aaf2c4fbf484f3a0a4bfe3\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t6e0c8510443586cdc8f84330e447aae5\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/tbody\u003e\r\n\t\u003c/table\u003e\r\n\u003c/div\u003e\r\n\u003c/article\u003e","title":"PaaS, or how hackers evade antivirus software","date":"2021-04-11T21:00:00.000Z","slug":"paas-or-how-hackers-evade-antivirus-software","file":"","titleOfHelpfulFiles":"","helpfulFiles":[]},"footerData":{"title":"Cybersecurity market leader","copyright":"Copyright \u003cmark\u003e©\u003c/mark\u003e 2002–2024 Positive Technologies. All rights reserved.","products":{"title":"Products","navItems":[{"name":"PT NAD","link":"/products/network-attack-discovery"},{"name":"PT Threat Intelligence Feeds","link":"/products/threat-intelligence-feeds"},{"name":"PT Sandbox","link":"/products/sandbox"},{"name":"MaxPatrol VM","link":"/products/maxpatrol-vm"},{"name":"MaxPatrol SIEM","link":"/products/siem"},{"name":"PT Application Inspector","link":"/products/ai"},{"name":"PT BlackBox","link":"/products/blackbox"},{"name":"PT ISIM","link":"/products/isim"},{"name":"MaxPatrol O2","link":"/products/mp-o2"},{"name":"MaxPatrol EDR","link":"/products/edr"},{"name":"PT Application Firewall","link":"/products/pt-af"},{"name":"PT Container Security","link":"/products/cs"},{"name":"PT Industrial Cybersecurity Suite","link":"/products/ics"}]},"company":{"title":"ANALYTICS","navItems":[{"name":"Analytics articles","link":"/analytics"},{"name":"Knowledge base","link":"/analytics/knowledge-base"},{"name":"PT ESC threat intelligence","link":"/analytics/pt-esc-threat-intelligence"},{"name":"Threatscape","link":"/analytics/threatscape"},{"name":"Hacker groups","link":"/analytics/hacker-groups"}]},"social":{"title":"COMPANY","navItems":[{"name":"About us","link":"/about"},{"name":"Clients","link":"/about/clients"},{"name":"Contacts","link":"/about/contacts"},{"name":"PT in the Media","link":"/about/pt-in-the-media"},{"name":"Education","link":"https://edu.ptsecurity.com/learning-space"},{"name":"YouTube","link":"https://www.youtube.com/channel/UC9hnMfdwfLd8V5qEc-6MXXQ"},{"name":"Vacancy","link":"https://vacancy.global.ptsecurity.com/"}]},"logoImage":{"src":"https://pt-global.storage.yandexcloud.net/logo_1d137588e3.svg","width":1200,"height":100,"alt":""},"legalDocsLink":{"id":61,"text":"Legal documents","link":"https://global.ptsecurity.com/policies/terms-of-use","targetBlank":true}},"anyQuestionsData":{"selectProductOptions":[{"value":"network-attack-discovery","label":"PT NAD","crmId":"3212ea27-d047-42f9-9da3-9ef5233634bb"},{"value":"threat-intelligence-feeds","label":"PT Threat Intelligence Feeds","crmId":""},{"value":"sandbox","label":"PT Sandbox","crmId":"5addae27-2762-4a89-8b58-e247ab1e71dc"},{"value":"maxpatrol-vm","label":"MaxPatrol VM","crmId":"e5ffe330-69bf-4344-b0b0-c228de0f6f83"},{"value":"siem","label":"MaxPatrol SIEM","crmId":"0c54a201-09a7-4dc9-b3ca-1ce61715388b"},{"value":"ai","label":"PT Application Inspector","crmId":"4c2c50e6-2b8c-4c1e-a2da-f6423ece496b"},{"value":"blackbox","label":"PT BlackBox","crmId":"081eb4e2-54c2-4ce5-b171-d7dcaecc1c1f"},{"value":"isim","label":"PT ISIM","crmId":"67a72950-2d9c-47a1-8bb8-49540356da8f"},{"value":"mp-o2","label":"MaxPatrol O2","crmId":"29563721-4ec7-4e5b-8a48-f3674ab70749"},{"value":"edr","label":"MaxPatrol EDR","crmId":"c667eb61-0b7a-457c-991c-43b83504a7ed"},{"value":"pt-af","label":"PT Application Firewall","crmId":"b6b16deb-0ceb-4318-b947-fd238d7a9935"},{"value":"cs","label":"PT Container Security","crmId":"2df38b89-5d1f-4a0d-8be4-76ea9f8d2e30"},{"value":"ics","label":"PT Industrial Cybersecurity Suite","crmId":""}],"title":"Get in touch","description":"Fill in the form and our specialists\u003cbr/\u003e will contact you shortly","feedback":{"title":"General\u003cbr/\u003e questions","description":"We're happy to answer any questions you may have.","fieldName":"Name","fieldPhone":"Phone number","fieldEmail":"Email","fieldComment":"How can we help?","fieldCountry":"Country","checkboxConsentsTerms":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent\" target=\"_blank\"\u003emy consent to the processing of my personal data\u003c/a\u003e in accordance with the terms of the \u003ca href=\"https://global.ptsecurity.com/policies/privacy-policy\" target=\"_blank\"\u003ePrivacy Notice\u003c/a\u003e","checkboxSubscription":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent-email\" target=\"_blank\"\u003emy consent to receive marketing and informational messages\u003c/a\u003e","buttonSubmit":"SEND","successTitle":"Thank you, your application has been sent","successDescription":"Our specialists will contact you soon."},"partnership":{"title":"Partnership","description":"Join us in making the world a safer place.","fieldName":"Name","fieldCompanyName":"Company name","fieldPhone":"Phone number","fieldEmail":"Email","fieldComment":"How can we help?","fieldAddress":"Address","fieldCountry":"Country","checkboxConsentsTerms":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent\" target=\"_blank\"\u003emy consent to the processing of my personal data\u003c/a\u003e in accordance with the terms of the \u003ca href=\"https://global.ptsecurity.com/policies/privacy-policy\" target=\"_blank\"\u003ePrivacy Notice\u003c/a\u003e","checkboxSubscription":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent-email\" target=\"_blank\"\u003emy consent to receive marketing and informational messages\u003c/a\u003e","buttonSubmit":"SEND","successTitle":"Thank you, your application has been sent","successDescription":"Our specialists will contact you shortly."},"pilotApplication":{"title":"Pilot\u003cbr/\u003e application","description":"Test drive our solutions with a customized pilot program.","fieldProduct":"Select a product","fieldName":"Name","fieldCompanyName":"Company name","fieldPhone":"Phone number","fieldEmail":"Email","fieldComment":"How can we help?","fieldCountry":"Country","checkboxConsentsTerms":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent\" target=\"_blank\"\u003emy consent to the processing of my personal data\u003c/a\u003e in accordance with the terms of the \u003ca href=\"https://global.ptsecurity.com/policies/privacy-policy\" target=\"_blank\"\u003ePrivacy Notice\u003c/a\u003e","checkboxSubscription":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent-email\" target=\"_blank\"\u003emy consent to receive marketing and informational messages\u003c/a\u003e","buttonSubmit":"SEND","successTitle":"Thank you, your application has been sent","successDescription":"Our specialists will contact you shortly."}},"sidebarData":{"widgets":[{"kind":"analytics-articles","data":{"title":"Analytics articles","link":"/analytics","withFlag":true,"items":[{"text":"Trending vulnerability digest November 2024","link":"/analytics/trending-vulnerability-digest-november-2024","targetBlank":true,"publishedDate":"2024-12-26T00:00:00.000Z"},{"text":"Artificial intelligence in cyberattacks","link":"/analytics/artificial-intelligence-in-cyberattacks","targetBlank":true,"publishedDate":"2024-12-10T00:00:00.000Z"},{"text":"A look at India through the dark web: what hackers are after","link":"/analytics/a-look-at-india-through-the-dark-web-what-hackers-are-after","targetBlank":true,"publishedDate":"2024-12-09T00:00:00.000Z"}]}},{"kind":"ad-banner","data":{"title":"What are the security threats on your network?","subtitle":"Check your traffic-for free","backgroundColor":null,"image":{"src":"https://pt-global.storage.yandexcloud.net/PT_Network_Attack_Discovery_2x_0d8a5793c7.png","width":542,"height":822,"alt":""},"actionProps":{"label":"Request pilot","href":"#contacts","isExternal":false}}}]},"_sentryTraceData":"d223190a75ed481d861994199163555e-a8288ef87dd99c06-1","_sentryBaggage":"sentry-environment=production,sentry-release=XLqnOgRSgZ1uY25ZCin31,sentry-public_key=98e9d1bba200933ad4e97a71f2de0390,sentry-trace_id=d223190a75ed481d861994199163555e,sentry-sample_rate=1,sentry-transaction=%2Fanalytics%2Fpt-esc-threat-intelligence%2F%5Bslug%5D,sentry-sampled=true"},"__N_SSP":true},"page":"/analytics/pt-esc-threat-intelligence/[slug]","query":{"slug":"paas-or-how-hackers-evade-antivirus-software"},"buildId":"XLqnOgRSgZ1uY25ZCin31","isFallback":false,"gssp":true,"locale":"en","locales":["en","es","pt"],"defaultLocale":"en","scriptLoader":[]}</script></body></html>