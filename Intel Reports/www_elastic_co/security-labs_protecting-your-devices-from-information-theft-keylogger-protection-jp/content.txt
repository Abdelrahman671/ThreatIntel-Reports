<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><title>情報窃取から端末を守る — Elastic Security Labs</title><meta name="description" content="本記事ではElastic Securityにおいて、エンドポイント保護を担っているElastic Defendに今年(バージョン8.12より)新たに追加された、キーロガーおよびキーロギング検出機能について紹介します。"/><meta property="og:title" content="情報窃取から端末を守る — Elastic Security Labs"/><meta property="og:description" content="本記事ではElastic Securityにおいて、エンドポイント保護を担っているElastic Defendに今年(バージョン8.12より)新たに追加された、キーロガーおよびキーロギング検出機能について紹介します。"/><meta property="og:image" content="https://www.elastic.co/security-labs/assets/images/protecting-your-devices-from-information-theft-keylogger-protection-jp/Security Labs Images 10.jpg?a0fcfa40f9907c1bf5032aee18db8919"/><meta property="og:image:alt" content="本記事ではElastic Securityにおいて、エンドポイント保護を担っているElastic Defendに今年(バージョン8.12より)新たに追加された、キーロガーおよびキーロギング検出機能について紹介します。"/><meta property="og:site_name"/><meta property="og:url" content="https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp"/><meta property="og:type" content="website"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="情報窃取から端末を守る — Elastic Security Labs"/><meta name="twitter:description" content="本記事ではElastic Securityにおいて、エンドポイント保護を担っているElastic Defendに今年(バージョン8.12より)新たに追加された、キーロガーおよびキーロギング検出機能について紹介します。"/><meta name="twitter:image" content="https://www.elastic.co/security-labs/assets/images/protecting-your-devices-from-information-theft-keylogger-protection-jp/Security Labs Images 10.jpg?a0fcfa40f9907c1bf5032aee18db8919"/><meta name="twitter:image:alt" content="本記事ではElastic Securityにおいて、エンドポイント保護を担っているElastic Defendに今年(バージョン8.12より)新たに追加された、キーロガーおよびキーロギング検出機能について紹介します。"/><link rel="canonical" href="https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp"/><link rel="preload" href="/security-labs/logo.svg" as="image" fetchpriority="high"/><link rel="preload" as="image" imageSrcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=3840&amp;q=75 3840w" imageSizes="100vw" fetchpriority="high"/><meta name="next-head-count" content="19"/><script src="https://play.vidyard.com/embed/v4.js" type="text/javascript" async=""></script><link rel="icon" href="/security-labs/favicon.svg"/><link rel="mask-icon" href="/security-labs/favicon.svg" color="#1C1E23"/><link rel="apple-touch-icon" href="/security-labs/favicon.svg"/><meta name="theme-color" content="#1C1E23"/><link rel="preload" href="/security-labs/_next/static/media/6d93bde91c0c2823-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/a34f9d1faa5f3315-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/369c6e283c5acc6e-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/92f44bb82993d879-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/ee71530a747ff30b-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/9fac010bc1f02be0-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/cbf5fbad4d73afac-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><script id="google-tag-manager" data-nscript="beforeInteractive">
          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-KNJMG2M');
          </script><link rel="preload" href="/security-labs/_next/static/css/265ed7605fd03477.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/265ed7605fd03477.css" data-n-g=""/><link rel="preload" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/security-labs/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js"></script><script src="/security-labs/_next/static/chunks/webpack-7987c6fda769d510.js" defer=""></script><script src="/security-labs/_next/static/chunks/framework-7a7e500878b44665.js" defer=""></script><script src="/security-labs/_next/static/chunks/main-ebd33a9f1cae5951.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/_app-cb8664d1d3df2511.js" defer=""></script><script src="/security-labs/_next/static/chunks/fec483df-43ee602fabdfe3a4.js" defer=""></script><script src="/security-labs/_next/static/chunks/877-34f408271ef44c22.js" defer=""></script><script src="/security-labs/_next/static/chunks/511-d08fe0fdd6f8a984.js" defer=""></script><script src="/security-labs/_next/static/chunks/683-a5053c37fe5bd0c9.js" defer=""></script><script src="/security-labs/_next/static/chunks/402-791da5e634930df4.js" defer=""></script><script src="/security-labs/_next/static/chunks/616-0b017b9cfa597392.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/%5Bslug%5D-3d74e9a05863bcfd.js" defer=""></script><script src="/security-labs/_next/static/dGrrQfBbQkqaleQ_11aBK/_buildManifest.js" defer=""></script><script src="/security-labs/_next/static/dGrrQfBbQkqaleQ_11aBK/_ssgManifest.js" defer=""></script></head><body><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KNJMG2M" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="__next"><main class="__variable_0351a5 __variable_1f211e __variable_a5b5f5 flex flex-col min-h-screen"><div class="scroll-percentage-container"><div class="scroll-percentage-bar" style="width:0%"></div></div><nav class="fixed w-full z-40" data-headlessui-state=""><div class="bg-gradient-to-b from-zinc-900 from-20% h-[200%] to-transparent absolute inset-0 z-0 pointer-events-none"></div><div class="container relative z-10"><div class="flex h-16 items-center justify-between"><div class="flex items-center justify-start w-full"><div><a class="hover:opacity-50 transition" href="/security-labs"><img alt="elastic security labs logo" fetchpriority="high" width="200" height="30" decoding="async" data-nimg="1" style="color:transparent" src="/security-labs/logo.svg"/></a></div><div class="hidden lg:ml-6 lg:block"><div class="flex space-x-4"><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/about"><span>About</span></a><div class="relative" data-headlessui-state=""><div><button class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" id="headlessui-menu-button-:R2kpm:" type="button" aria-haspopup="menu" aria-expanded="false" data-headlessui-state="">Topics<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="ml-1 -mr-1 h-4 w-4 text-zinc-400 relative top-[1px]"><path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd"></path></svg></button></div></div><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/vulnerability-updates"><span>Vulnerability updates</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/reports"><span>Reports</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/tools"><span>Tools</span></a></div></div><div class="hidden lg:ml-auto lg:block"><div class="flex items-center space-x-4"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="https://www.elastic.co/security-labs/rss/feed.xml"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-4 w-4 mr-1"><path d="M3.75 3a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75H4c6.075 0 11 4.925 11 11v.25c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V16C17 8.82 11.18 3 4 3h-.25z"></path><path d="M3 8.75A.75.75 0 013.75 8H4a8 8 0 018 8v.25a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75V16a6 6 0 00-6-6h-.25A.75.75 0 013 9.25v-.5zM7 15a2 2 0 11-4 0 2 2 0 014 0z"></path></svg><span class="hidden xl:block">Subscribe</span></a><a class="font-display inline-flex items-center justify-center rounded font-semibold disabled:!select-none disabled:!bg-gray-400 bg-blue-600 text-white hover:bg-blue-500 enabled:hover:text-white/80 transition-colors px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://cloud.elastic.co/registration?cta=cloud-registration&amp;tech=trial&amp;plcmt=navigation&amp;pg=security-labs">Start free trial</a><a class="font-display inline-flex items-center justify-center rounded font-semibold text-white disabled:!select-none disabled:!bg-gray-400 button px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://www.elastic.co/contact">Contact sales</a></div></div></div><div class="-mr-2 flex lg:hidden"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><button class="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" id="headlessui-disclosure-button-:R59m:" type="button" aria-expanded="false" data-headlessui-state=""><span class="sr-only">Open navigation menu</span><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="block h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path></svg></button></div></div></div></nav><main class="mb-20 flex-1 flex flex-col"><div class="h-48 md:h-64"><div class="after:absolute after:block after:bg-blue-400 after:blur-3xl after:content-[&#x27; &#x27;] after:h-96 after:opacity-5 after:right-0 after:rounded-full after:top-20 after:w-1/2 after:z-0 before:absolute before:block before:blur-3xl before:bg-orange-400 before:content-[&#x27; &#x27;] before:h-96 before:left-0 before:opacity-5 before:rounded-full before:w-1/2 before:z-0 w-full h-full relative"><div class="relative z-10 w-full h-[125%] -top-[25%] bg-no-repeat bg-cover bg-bottom flex items-center justify-center" style="background-image:url(/security-labs/grid.svg)"></div></div></div><article class="px-4"><div class="max-w-7xl mx-auto relative z-10 flex flex-col space-y-4"><div class="eyebrow break-words"><time class="block mb-2 md:mb-0 md:inline-block article-published-date" dateTime="2024-05-30T00:00:00.000Z">30 May 2024</time><span class="hidden md:inline-block md:mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/asuka-nakajima">Asuka Najakima</a></div><h1 class="font-bold leading-tighter text-3xl md:text-5xl"><span>情報窃取から端末を守る</span></h1><p class="text-zinc-200 text-base md:text-xl">Windows APIの挙動を用いたキーロガー検知</p><div class="flex items-center mt-4 text-zinc-200 text-sm space-x-4 border-t border-white/25 pt-4"><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><span>6 min read</span></span><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z"></path></svg><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/security-operations">Security operations</a>, </span><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/security-research">Security research</a>, </span><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/detection-science">Detection science</a></span></span></div></div><div class="max-w-7xl mx-auto"><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 sm:p-8 md:p-10 rounded-3xl mt-5 md:mt-10"><div class="relative w-full rounded-lg overflow-hidden aspect-video"><img alt="情報窃取から端末を守る" fetchpriority="high" decoding="async" data-nimg="fill" class="object-cover absolute h-full w-full" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;color:transparent" sizes="100vw" srcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=3840&amp;q=75 3840w" src="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fprotecting-your-devices-from-information-theft-keylogger-protection-jp%2FSecurity%20Labs%20Images%2010.jpg&amp;w=3840&amp;q=75"/><div class="absolute border border-white/50 inset-0 mix-blend-overlay rounded-lg z-10"></div></div></div></div><div class="lg:max-w-7xl mx-auto relative mt-12 lg:grid lg:grid-cols-4 lg:gap-8 items-start"><div class="flex justify-center lg:col-span-3"><div class="prose lg:prose-lg prose-invert w-full article-content"><div><p>本記事ではElastic Securityにおいて、エンドポイント保護を担っているElastic Defendに今年(バージョン<a href="https://www.elastic.co/guide/en/security/8.12/release-notes-header-8.12.0.html#enhancements-8.12.0">8.12</a>より)新たに追加された、キーロガーおよびキーロギング検出機能について紹介します。</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="はじめに" class="absolute -top-32"></span>はじめに</h2>
<p>Elastic Defend 8.12より、Windows上で動作するキーロガーおよび、キーロギング機能を備えたマルウェア(情報窃取型マルウェアや、リモートアクセス型トロイの木馬、通称RAT)の検知の強化を目的に、キーロガーが使用する代表的なWindows API群の呼び出しを監視・記録する機能が追加されました。本記事ではこの新機能に焦点を当て、その技術的な詳細を解説します。加えて、本機能に付随して新たに作成された振る舞い検知ルール(Prebuilt rule)についても紹介します。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="キーロガーとはなにかどのような危険性があるのか" class="absolute -top-32"></span>キーロガーとはなにか？どのような危険性があるのか？</h3>
<p>キーロガーとは、コンピュータ上で入力されたキーの内容を監視および記録(キーロギング)するソフトウェアの一種です(※1)。キーロガーは、ユーザのモニタリングなどの正当な理由で利用されることもありますが、攻撃者によって頻繁に悪用されるソフトウェアです。具体的には、ユーザがキーボード経由で入力した認証情報やクレジットカード情報、各種機密情報などのセンシティブな情報の窃取などに際に使われます。(※1: パソコンにUSB等で直接取り付けるようなハードウェア型のキーロガーもありますが、本記事ではソフトウェア型のキーロガーに焦点を当てます。)</p>
<p>キーロガーを通じて入手したセンシティブな情報は、金銭の窃取やさらなるサイバー攻撃の足がかりに悪用されます。それゆえに、キーロギング行為自体は直接的にコンピュータに被害をおよばさないものの、続くサイバー攻撃の被害を食い止めるためにも、早期の検知が非常に重要だと言えます。</p>
<p>キーロギング機能を持つマルウェアは多々あり、特にRAT、情報窃取型マルウェア、バンキングマルウェアといった種類のマルウェアにキーロギング機能が搭載されている場合があることが確認されています。有名なマルウェアでキーロギング機能を有するものとしては<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.agent_tesla">Agent Tesla</a>や<a href="https://malpedia.caad.fkie.fraunhofer.de/details/apk.lokibot">Lokibit</a>、そして<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.404keylogger">SnakeKeylogger</a>などが挙げられます。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="いかにして入力した文字を盗み取っているのか" class="absolute -top-32"></span>いかにして入力した文字を盗み取っているのか？</h3>
<p>では次に、キーロガーはいかにしてユーザがキーボードから入力した文字を、ユーザに気づかれること無く盗み取っているのかを、技術的な観点から説明していきます。キーロガー自体は、あらゆるOS環境(Windows/Linux/macOSやモバイルデバイス)で存在しうるものではありますが、本記事ではWindowsのキーロガーに焦点を絞って解説します。特にWindows APIや機能を使用してキー入力を取得する4つの異なるタイプのキーロガーについて解説します。</p>
<p>一点補足としては、ここでキーロギングの手法について説明しているのは、あくまで本記事後半で紹介している、新しい検知機能についての理解を深めていただくためです。そのため、例として掲載しているコードはあくまで単なる例であり、実際にそのまま動くコードが掲載されている訳ではありません(※3)。</p>
<p>(※2:  Windows上で動作するキーロガーは、カーネル空間(OS)側に設置されるものと、通常のアプリケーションと同じ領域(ユーザ空間)に設置されるものに大別されます。本記事では、後者のタイプを取り上げます。 )
(※3: 以下に掲載されている例のコードを元にキーロガーを作成し悪用した場合、弊社では対応、および、責任について負いかねます 。)</p>
<ol>
<li>ポーリング型キーロガー</li>
</ol>
<p>このタイプのキーロガーは、キーボードの各キーの状態(キーが押された否か)を短い間隔(1秒よりはるかに短い間隔)で定期的に確認します。そして前回の確認以降に、新たに押されたキーがあることが判明した場合、その押されたキーの文字の情報を記録・保存します。この一連の流れを繰り返すことで、キーロガーは、ユーザが入力した文字列の情報を取得しているのです。</p>
<p>ポーリング型のキーロガーは、キーの入力状態をチェックするWindowsのAPIを利用して実装されており、代表的には <a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getasynckeystate"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">GetAsyncKeyState</code></a> APIが利用されます。このAPIは、特定のキーが現在押されているか否かに加えて、その特定のキーが前回のAPI呼び出し以降押されたか否かの情報を取得することが出来ます。以下が<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">GetAsyncKeyState</code> APIを使ったポーリング型キーロガーの簡単な例です。</p>
<pre><code>while(true)
{
    for (int key = 1; key &lt;= 255; key++)
    {
        if (GetAsyncKeyState(key) &amp; 0x01)
        {
            SaveTheKey(key, &quot;log.txt&quot;);
        }
    }
    Sleep(50);
}</code></pre>
<p>ポーリング(<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">GetAsyncKeyState</code>)を用いてキー押下状態を取得する手法は、古くから存在する典型的なキーロギングの手法として知られているだけでなく、今でもマルウェアによって使われていることが確認されています。</p>
<ol start="2">
<li>フッキング型キーロガー</li>
</ol>
<p>フッキング型キーロガーは、ポーリング型キーロガーと同じく、古くから存在する典型的な種類のキーロガーです。ここではまず「そもそもフックとは何か？」について説明します。</p>
<p>フックとは大雑把に言うと「アプリケーションの特定の処理に、独自の処理を割り込ませる仕組み」のことを指す言葉です。そして、フックを使って独自の処理を割り込ませることを「フックする」とも言います。Windowsでは、アプリケーションに対するキー入力などのメッセージ(イベント)をフックすることが出来る仕組みが用意されており、この仕組みは<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-setwindowshookexa">SetWindowsHookEx</a> APIを通じて利用することが出来ます。以下が<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">SetWindowsHookEx</code> APIを使ったポーリング型キーロガーの簡単な例です。</p>
<pre><code>HMODULE hHookLibrary = LoadLibraryW(L&quot;hook.dll&quot;);
FARPROC hookFunc = GetProcAddress(hHookLibrary, &quot;SaveTheKey&quot;);

HHOOK keyboardHook = NULL;
    
keyboardHook = SetWindowsHookEx(WH_KEYBOARD_LL,
                (HOOKPROC)hookFunc,
                hHookLibrary,
                0);</code></pre>
<ol start="3">
<li>Raw Input Modelを用いたキーロガー</li>
</ol>
<p>このタイプのキーロガーは、キーボードなどの入力デバイスから得られた、生の入力データ(Raw Input)を取得し、それを保存・記録します。このキーロガーの詳細について説明する前に、まずWindowsにおける入力方式である「Original Input Model」と「Raw Input Model」について理解する必要があります。以下がそれぞれの入力方式についての説明です。</p>
<ul>
<li><strong>Original Input Model</strong>:  キーボードなどの入力デバイスから入力されたデータを、一度OSを介して必要な処理をした後、アプリケーション側に届ける方式</li>
<li><strong>Raw Input Model</strong>:  キーボードなどの入力デバイスから入力されたデータを、そのままアプリケーション側が直接受け取る方式</li>
</ul>
<p>Windowsでは当初、Original Input Modelのみが使われていました。しかしWindows XP以降に、おそらくは入力デバイスの多様化などの要因から、Raw Input Modelが導入されました。Raw Input Modelでは、<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-registerrawinputdevices"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterRawInputDevices</code></a> APIを使い、入力データを直接受け取りたい入力デバイスを登録します。そしてその後、<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getrawinputdata"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">GetRawInputData</code></a>) APIを用いて生データを取得します。
以下がこれらのAPIを使った、Raw Input Modelを用いたキーロガーの簡単な例です。</p>
<pre><code>LRESULT CALLBACK WndProc(HWND hWnd, UINT uMessage, WPARAM wParam, LPARAM lParam)
{

    UINT dwSize = 0;
    RAWINPUT* buffer = NULL;

    switch (uMessage)
    {
    case WM_CREATE:
        RAWINPUTDEVICE rid;
        rid.usUsagePage = 0x01;  // HID_USAGE_PAGE_GENERIC
        rid.usUsage = 0x06;      // HID_USAGE_GENERIC_KEYBOARD
        rid.dwFlags = RIDEV_NOLEGACY | RIDEV_INPUTSINK;
        rid.hwndTarget = hWnd;
        RegisterRawInputDevices(&amp;rid, 1, sizeof(rid));
        break;
    case WM_INPUT:
        GetRawInputData((HRAWINPUT)lParam, RID_INPUT, NULL,
&amp;dwSize, sizeof(RAWINPUTHEADER));

        buffer = (RAWINPUT*)HeapAlloc(GetProcessHeap(), 0, dwSize);

        if (GetRawInputData((HRAWINPUT)lParam, RID_INPUT, buffer, 
&amp;dwSize, sizeof(RAWINPUTHEADER)))
        {
            if (buffer-&gt;header.dwType == RIM_TYPEKEYBOARD)
            {
                SaveTheKey(buffer, &quot;log.txt&quot;);
            }
        }
        HeapFree(GetProcessHeap(), 0, buffer);
        break;
    default:
        return DefWindowProc(hWnd, uMessage, wParam, lParam);
    }
    return 0;
}</code></pre>
<p>この例では、最初に生入力を受け取りたい入力デバイスを<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterRawInputDevices</code>を用いて、登録します。ここでは、キーボードの生入力データを受け取るように設定・登録しています。</p>
<ol start="4">
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">DirectInput</code>を用いたキーロガー</li>
</ol>
<p>最後に、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">DirectInput</code>を用いたキーロガーについて説明します。このキーロガーは簡単に言えばMicrosoft DirectXの機能を悪用したキーロガーです。DirectXとは、ゲームや動画などのマルチメディア関連の処理を扱うためのAPI群の総称(ライブラリ)です。</p>
<p>ゲームにおいて、ユーザから各種入力が取得できることは必須機能と言って良いことから、DirectXにおいてもユーザの入力を処理するAPI群が提供されています。そして、DirectXのバージョン8以前に提供されていたそれらAPI群のことを「DirectInput」と呼びます。以下が<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">DirectInput</code>に関連するAPIを使ったキーロガーの簡単な例です。補足ですが、<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">DirectInput</code>を用いてキーを取得する際、裏では<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterRawInputDevices</code> APIが呼ばれています。</p>
<pre><code>LPDIRECTINPUT8		lpDI = NULL;
LPDIRECTINPUTDEVICE8	lpKeyboard = NULL;

BYTE key[256];
ZeroMemory(key, sizeof(key));

DirectInput8Create(hInstance, DIRECTINPUT_VERSION, IID_IDirectInput8, (LPVOID*)&amp;lpDI, NULL);
lpDI-&gt;CreateDevice(GUID_SysKeyboard, &amp;lpKeyboard, NULL);
lpKeyboard-&gt;SetDataFormat(&amp;c_dfDIKeyboard);
lpKeyboard-&gt;SetCooperativeLevel(hwndMain, DISCL_FOREGROUND | DISCL_NONEXCLUSIVE | DISCL_NOWINKEY);

while(true)
{
    HRESULT ret = lpKeyboard-&gt;GetDeviceState(sizeof(key), key);
    if (FAILED(ret)) {
        lpKeyboard-&gt;Acquire();
        lpKeyboard-&gt;GetDeviceState(sizeof(key), key);
    }
  SaveTheKey(key, &quot;log.txt&quot;);	
    Sleep(50);
}</code></pre>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="windows-api呼び出しを監視してキーロガーを検出する" class="absolute -top-32"></span>Windows API呼び出しを監視してキーロガーを検出する</h2>
<p>Elastic Defendでは、Event Tracing for Windows (ETW ※4)を用いて、前述の種類のキーロガーを検知しています。具体的には、関連するWindows API群の呼び出しを監視し、その挙動のログを取得することで実現しています。監視するWindows API群と、付随して新規に作成したキーロガーの検知ルールは以下です。(※4 一言でいうとWindowsが提供する、アプリケーションやデバイスドライバなどのシステム側のコンポーネントを、トレースおよびロギングする仕組み。)</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="監視するwindows-api群" class="absolute -top-32"></span>監視するWindows API群:</h3>
<ul>
<li><a href="https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getasynckeystate">GetAsyncKeyState</a></li>
<li><a href="https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowshookexw">SetWindowsHookEx</a></li>
<li><a href="https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerrawinputdevices">RegisterRawInputDevice</a></li>
</ul>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="追加したキーロガー検知ルール一覧" class="absolute -top-32"></span>追加したキーロガー検知ルール一覧:</h3>
<ul>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_getasynckeystate_api_call_from_suspicious_process.toml">GetAsyncKeyState API Call from Suspicious Process</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_getasynckeystate_api_call_from_unusual_process.toml">GetAsyncKeyState API Call from Unusual Process</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_directinput.toml">Keystroke Input Capture via DirectInput</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_registerrawinputdevices.toml">Keystroke Input Capture via RegisterRawInputDevices</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_messages_hooking_via_setwindowshookex.toml">Keystroke Messages Hooking via SetWindowsHookEx</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_a_managed_application.toml">Keystrokes Input Capture from a Managed Application</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_a_suspicious_module.toml">Keystrokes Input Capture from a Suspicious Module</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_suspicious_callstack.toml">Keystrokes Input Capture from Suspicious CallStack</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_unsigned_dll.toml">Keystrokes Input Capture from Unsigned DLL</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_via_setwindowshookex.toml">Keystrokes Input Capture via SetWindowsHookEx</a></li>
</ul>
<p>新規に追加した機能および検知ルールにより、Elastic Defendにてキーロガー・キーロギングの包括的な監視と検出が可能となり、これらの脅威に対するWindowsエンドポイントのセキュリティと保護の強化を実現しました。</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="windowsのキーロガーを検知する" class="absolute -top-32"></span>Windowsのキーロガーを検知する</h3>
<p>次に実際の検知の様子をお見せします。例として、Raw Input Modelを用いたキーロガーをElastic Defendで検出してみます。ここでは<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterRawInputDevices</code> APIを用いた簡易的なキーロガー「Keylogger.exe」を用意し、テスト環境で実行してみました※5。(※5 実行環境はWindows 10の執筆時点の最新版であるWindows 10 Version 22H2 19045.4412です。)</p>
<p></p>
<p>キーロガーを実行した直後に、検知ルール(<a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_registerrawinputdevices.toml">Keystroke Input Capture via <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterRawInputDevices</code></a>)が発動し、エンドポイント側でアラートが上がりました。このアラートのさらなる詳細はKibana上から見ることが出来ます。</p>
<p></p>
<p>以下が検知ルールの詳細です。検知に使われているAPIの部分を中心に説明します。</p>
<pre><code>query = &#x27;&#x27;&#x27;
api where
 process.Ext.api.name == &quot;RegisterRawInputDevices&quot; and not process.code_signature.status : &quot;trusted&quot; and
 process.Ext.api.parameters.usage : (&quot;HID_USAGE_GENERIC_KEYBOARD&quot;, &quot;KEYBOARD&quot;) and
 process.Ext.api.parameters.flags : &quot;*INPUTSINK*&quot; and process.thread.Ext.call_stack_summary : &quot;?*&quot; and
 process.thread.Ext.call_stack_final_user_module.hash.sha256 != null and process.executable != null and
 not process.thread.Ext.call_stack_final_user_module.path :
                         (&quot;*\\program files*&quot;, &quot;*\\windows\\system32\\*&quot;, &quot;*\\windows\\syswow64\\*&quot;,
                          &quot;*\\windows\\systemapps\\*&quot;,
                          &quot;*\\users\\*\\appdata\\local\\*\\kumospace.exe&quot;,
                          &quot;*\\users\\*\\appdata\\local\\microsoft\\teams\\current\\teams.exe&quot;) and 
 not process.executable : (&quot;?:\\Program Files\\*.exe&quot;, &quot;?:\\Program Files (x86)\\*.exe&quot;)
&#x27;&#x27;&#x27;</code></pre>
<p>このアラートは簡単に言うと「署名されていないプロセス」または「署名されているが、その署名者が信頼できないプロセス」が、キー入力を取得する目的で<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterRawInputDevices</code>  APIを呼び出した時に発せられるアラートです。<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterRawInputDevices</code> APIが呼び出された際の引数の情報に着目しており、より具体的にはAPIの第一引数である、<a href="https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/ns-winuser-rawinputdevice">RAWINPUTDEVICE</a>構造体のメンバの情報を検知に用いています。</p>
<p>この引数の値が、キーボード入力の取得を試みていることを示している場合、キーロガーが実行されたと見なして、アラートを上げるようになっています。 <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">RegisterRawInputDevices</code> APIのログはKibana上でも確認できます。</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="各windows-apiの呼び出しの際に取得しているデータ" class="absolute -top-32"></span>各Windows APIの呼び出しの際に取得しているデータ</h3>
<p>分量の都合で、追加したすべての検知ルールとAPIの詳細については本記事では説明しません。ですが最後に、対象のWindows APIの呼び出しの際にElastic Defend側で取得しているデータについて、簡単にご紹介します。各項目についてさらに知りたい方は、<a href="https://github.com/elastic/endpoint-package/blob/main/custom_schemas/custom_api.yml">custom_api.yml</a>に記載されているElastic Common Schema（ECS）とのマッピングをご参照ください。</p>
<div class="table-container"><table style="width:100%;table-layout:fixed;word-wrap:break-word"><thead><tr><th>API名</th><th>フィールド</th><th>説明(原文を日本語訳したもの)</th><th>例</th></tr></thead><tbody><tr><td>GetAsyncKeyState</td><td>process.Ext.api.metadata.ms_since_last_keyevent</td><td>このパラメーターは、最後の GetAsyncKeyState イベントからの経過時間をミリ秒で示します。</td><td>94</td></tr><tr><td>GetAsyncKeyState</td><td>process.Ext.api.metadata.background_callcount</td><td>このパラメーターは、最後に成功した GetAsyncKeyState 呼び出しからの間に行われた、失敗した呼び出しも含めたすべての GetAsyncKeyState API 呼び出しの回数を示します。</td><td>6021</td></tr><tr><td>SetWindowsHookEx</td><td>process.Ext.api.parameters.hook_type</td><td>Tインストールするフックの種類</td><td>&quot;WH_KEYBOARD_LL&quot;</td></tr><tr><td>SetWindowsHookEx</td><td>process.Ext.api.parameters.hook_module</td><td>フック先の処理を保有するDLL</td><td>&quot;c:\windows\system32\taskbar.dll&quot;</td></tr><tr><td>SetWindowsHookEx</td><td>process.Ext.api.parameters.procedure</td><td>フック先となる処理や関数のメモリアドレス</td><td>2431737462784</td></tr><tr><td>SetWindowsHookEx</td><td>process.Ext.api.metadata.procedure_symbol</td><td>フック先の処理の要約</td><td>&quot;taskbar.dll&quot;</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.metadata.return_value</td><td>RegisterRawInputDevices API 呼び出しの戻り値</td><td>1</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.parameters.usage_page</td><td>このパラメーターはデバイスのトップレベルコレクション（Usage Page）を示す。RAWINPUTDEVICE 構造体の最初のメンバ</td><td>&quot;GENERIC&quot;</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.parameters.usage</td><td>このパラメーターは、Usage Page 内の特定のデバイス（Usage）を示します。RAWINPUTDEVICE 構造体の２番目のメンバ</td><td>&quot;KEYBOARD&quot;</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.parameters.flags</td><td>UsagePageとUsageによって提供される情報をどのように解釈するかを指定するモードフラグ。RAWINPUTDEVICE 構造体の３番目のメンバ</td><td>&quot;INPUTSINK&quot;</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.metadata.windows_count</td><td>呼び出し元スレッドが所有するウィンドウの数</td><td>2</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.metadata.visible_windows_count</td><td>呼び出し元スレッドが所有する表示されているウィンドウの数</td><td>0</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.metadata.thread_info_flags</td><td>スレッドの情報を表すフラグ</td><td>16</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.metadata.start_address_module</td><td>スレッドの開始アドレスに紐づくモジュールの名前</td><td>&quot;C:\Windows\System32\DellTPad\ApMsgFwd.exe&quot;</td></tr><tr><td>RegisterRawInputDevices</td><td>process.Ext.api.metadata.start_address_allocation_protection</td><td>スレッドの開始アドレスに紐づくメモリ保護属性</td><td>&quot;RCX&quot;</td></tr></tbody></table></div>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="まとめ" class="absolute -top-32"></span>まとめ</h2>
<p>本記事では、Elastic Defend 8.12にて導入された、Windows環境におけるキーロガーおよびキーロギング検知機能についてご紹介しました。具体的には、キーロギングに関連する代表的なWindows API群の呼び出しを監視することで、シグネチャに依存しない、振る舞い検知によるキーロガー検出を実現しました。精度を高め、誤検知率を減らすために、数ヶ月にわたる研究・調査をもとにこの機能と新しいルールを開発しました。</p>
<p>Elastic Defendではキーロガー関連のAPI以外にも、攻撃者に一般的に利用されるメモリ操作等の<a href="https://www.elastic.co/security-labs/doubling-down-etw-callstacks">API群なども監視すること</a>で、多層的な防御を実現しております。Elastic Security および Elastic Defendについて気になった方はぜひ<a href="https://www.elastic.co/jp/security">製品ページ</a>や<a href="https://www.elastic.co/jp/videos/intro-elastic-security">ドキュメント</a>を御覧頂ければ幸いです。</p></div></div></div><div class="hidden lg:flex lg:col-span-1 text-sm lg:flex-col lg:space-y-6"><div class="toc"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Jump to section</h4><ul class="flex flex-col space-y-2"><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB"><span>はじめに</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#%E3%82%AD%E3%83%BC%E3%83%AD%E3%82%AC%E3%83%BC%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B%E3%81%A9%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E5%8D%B1%E9%99%BA%E6%80%A7%E3%81%8C%E3%81%82%E3%82%8B%E3%81%AE%E3%81%8B"><span>キーロガーとはなにか？どのような危険性があるのか？</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#%E3%81%84%E3%81%8B%E3%81%AB%E3%81%97%E3%81%A6%E5%85%A5%E5%8A%9B%E3%81%97%E3%81%9F%E6%96%87%E5%AD%97%E3%82%92%E7%9B%97%E3%81%BF%E5%8F%96%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B"><span>いかにして入力した文字を盗み取っているのか？</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#windows-api%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E3%82%92%E7%9B%A3%E8%A6%96%E3%81%97%E3%81%A6%E3%82%AD%E3%83%BC%E3%83%AD%E3%82%AC%E3%83%BC%E3%82%92%E6%A4%9C%E5%87%BA%E3%81%99%E3%82%8B"><span>Windows&nbsp;API呼び出しを監視してキーロガーを検出する</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#%E7%9B%A3%E8%A6%96%E3%81%99%E3%82%8Bwindows-api%E7%BE%A4"><span>監視するWindows&nbsp;API群:</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#%E8%BF%BD%E5%8A%A0%E3%81%97%E3%81%9F%E3%82%AD%E3%83%BC%E3%83%AD%E3%82%AC%E3%83%BC%E6%A4%9C%E7%9F%A5%E3%83%AB%E3%83%BC%E3%83%AB%E4%B8%80%E8%A6%A7"><span>追加したキーロガー検知ルール一覧:</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#windows%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%AD%E3%82%AC%E3%83%BC%E3%82%92%E6%A4%9C%E7%9F%A5%E3%81%99%E3%82%8B"><span>Windowsのキーロガーを検知する</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#%E5%90%84windows-api%E3%81%AE%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E3%81%AE%E9%9A%9B%E3%81%AB%E5%8F%96%E5%BE%97%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF"><span>各Windows&nbsp;APIの呼び出しの際に取得しているデータ</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp#%E3%81%BE%E3%81%A8%E3%82%81"><span>まとめ</span></a></li></ul></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Elastic Security Labs Newsletter</h4><div><a target="_blank" class="button inline-flex" href="https://www.elastic.co/security-labs/newsletter?utm_source=security-labs">Sign Up</a></div></div></div></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl my-5 md:my-10 max-w-3xl mx-auto flex flex-col items-center shadow-2xl"><h4 class="font-bold leading-tight text-lg md:text-2xl">Share this article</h4><div class="flex flex-wrap items-center justify-center mt-4 space-x-4"><a class="flex items-center space-x-2 button" href="https://twitter.com/intent/tweet?text=情報窃取から端末を守る&amp;url=https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Twitter" title="Share this article on Twitter"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>Twitter</span></a><a class="flex items-center space-x-2 button" href="https://www.facebook.com/sharer/sharer.php?u=https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Facebook" title="Share this article on Facebook"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M22.5 12c0-5.799-4.701-10.5-10.5-10.5S1.5 6.201 1.5 12c0 5.301 3.901 9.699 9 10.401V14.4h-2.7v-2.7h2.7v-2.1c0-2.7 1.8-4.2 4.2-4.2 1.2 0 2.1.1 2.4.2v2.4h-1.5c-1.2 0-1.5.6-1.5 1.5v1.8h3l-.3 2.7h-2.7V22C18.599 21.3 22.5 17.301 22.5 12z"></path></svg><span>Facebook</span></a><a class="flex items-center space-x-2 button" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp&amp;title=情報窃取から端末を守る" target="_blank" rel="noopener noreferrer" aria-label="Share this article on LinkedIn" title="Share this article on LinkedIn"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"></path></svg><span>LinkedIn</span></a><a class="flex items-center space-x-2 button" href="https://reddit.com/submit?url=https://www.elastic.co/security-labs/protecting-your-devices-from-information-theft-keylogger-protection-jp&amp;title=情報窃取から端末を守る" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Reddit" title="Share this article on Reddit"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill-rule="evenodd" clip-rule="evenodd" d="M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM19.6879 11.0584C19.8819 11.3352 19.9916 11.6622 20.004 12C20.0091 12.3306 19.9205 12.656 19.7485 12.9384C19.5765 13.2208 19.3281 13.4488 19.032 13.596C19.0455 13.7717 19.0455 13.9483 19.032 14.124C19.032 16.812 15.9 18.996 12.036 18.996C8.172 18.996 5.04 16.812 5.04 14.124C5.02649 13.9483 5.02649 13.7717 5.04 13.596C4.80919 13.49 4.6042 13.335 4.43923 13.1419C4.27427 12.9487 4.15327 12.722 4.08462 12.4775C4.01598 12.2329 4.00133 11.9764 4.04169 11.7256C4.08205 11.4748 4.17646 11.2358 4.31837 11.0251C4.46028 10.8145 4.6463 10.6372 4.86354 10.5056C5.08078 10.3739 5.32404 10.2911 5.57646 10.2629C5.82889 10.2346 6.08444 10.2616 6.32541 10.3419C6.56638 10.4222 6.78701 10.5539 6.972 10.728C8.35473 9.79023 9.98146 9.27718 11.652 9.252L12.54 5.088C12.55 5.03979 12.5694 4.99405 12.5972 4.95341C12.625 4.91277 12.6605 4.87805 12.7018 4.85127C12.7431 4.82448 12.7894 4.80615 12.8378 4.79735C12.8862 4.78855 12.9359 4.78945 12.984 4.8L15.924 5.388C16.0676 5.14132 16.2944 4.9539 16.5637 4.85937C16.833 4.76484 17.1272 4.7694 17.3934 4.87222C17.6597 4.97505 17.8806 5.1694 18.0164 5.42041C18.1523 5.67141 18.1942 5.96262 18.1348 6.24177C18.0753 6.52092 17.9182 6.76972 17.6918 6.94352C17.4654 7.11732 17.1845 7.20473 16.8995 7.19006C16.6144 7.1754 16.3439 7.05962 16.1366 6.8635C15.9292 6.66738 15.7985 6.40378 15.768 6.12L13.2 5.58L12.42 9.324C14.0702 9.3594 15.6749 9.87206 17.04 10.8C17.2839 10.566 17.5902 10.4074 17.9221 10.3436C18.254 10.2797 18.5973 10.3132 18.9106 10.4401C19.2239 10.5669 19.4939 10.7817 19.6879 11.0584ZM8.20624 12.5333C8.07438 12.7307 8.004 12.9627 8.004 13.2C8.004 13.5183 8.13043 13.8235 8.35547 14.0485C8.58051 14.2736 8.88574 14.4 9.204 14.4C9.44134 14.4 9.67335 14.3296 9.87068 14.1978C10.068 14.0659 10.2218 13.8785 10.3127 13.6592C10.4035 13.4399 10.4272 13.1987 10.3809 12.9659C10.3346 12.7331 10.2204 12.5193 10.0525 12.3515C9.8847 12.1836 9.67089 12.0694 9.43811 12.0231C9.20533 11.9768 8.96405 12.0005 8.74478 12.0913C8.52551 12.1822 8.33809 12.336 8.20624 12.5333ZM12.012 17.424C13.0771 17.4681 14.1246 17.1416 14.976 16.5V16.548C15.0075 16.5173 15.0327 16.4806 15.05 16.4402C15.0674 16.3997 15.0766 16.3563 15.0772 16.3122C15.0777 16.2682 15.0696 16.2245 15.0533 16.1837C15.0369 16.1428 15.0127 16.1055 14.982 16.074C14.9513 16.0425 14.9146 16.0173 14.8742 16C14.8337 15.9826 14.7903 15.9734 14.7462 15.9728C14.7022 15.9723 14.6585 15.9804 14.6177 15.9967C14.5768 16.0131 14.5395 16.0373 14.508 16.068C13.7797 16.5904 12.895 16.8487 12 16.8C11.1061 16.8399 10.2255 16.5732 9.504 16.044C9.44182 15.993 9.36289 15.9669 9.28256 15.9708C9.20222 15.9748 9.12622 16.0085 9.06935 16.0653C9.01247 16.1222 8.97879 16.1982 8.97484 16.2786C8.97089 16.3589 8.99697 16.4378 9.048 16.5C9.89937 17.1416 10.9469 17.4681 12.012 17.424ZM14.0933 14.2458C14.2907 14.3776 14.5227 14.448 14.76 14.448L14.748 14.496C14.9107 14.4978 15.0721 14.4664 15.2223 14.4038C15.3725 14.3413 15.5084 14.2488 15.6218 14.1321C15.7352 14.0154 15.8236 13.8768 15.8818 13.7248C15.9399 13.5728 15.9665 13.4106 15.96 13.248C15.96 13.0107 15.8896 12.7787 15.7578 12.5813C15.6259 12.384 15.4385 12.2302 15.2192 12.1393C14.9999 12.0485 14.7587 12.0248 14.5259 12.0711C14.2931 12.1174 14.0793 12.2316 13.9115 12.3995C13.7436 12.5673 13.6294 12.7811 13.5831 13.0139C13.5368 13.2467 13.5605 13.4879 13.6513 13.7072C13.7422 13.9265 13.896 14.1139 14.0933 14.2458Z" fill="currentColor"></path></svg><span>Reddit</span></a></div></div></article></main><footer class="mt-auto text-xs md:text-sm"><div class="container py-6 flex flex-col md:flex-row gap-2 md:gap-0 justify-between items-center"><div class="text-zinc-300"><nav><ul class="flex space-x-4"><li><a class="hover:text-white font-medium" href="/security-labs/sitemap.xml">Sitemap</a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://elastic.co?utm_source=elastic-search-labs&amp;utm_medium=referral&amp;utm_campaign=search-labs&amp;utm_content=footer"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="inline-block w-3 h-3"><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"></path></svg><span>Elastic.co</span></a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://twitter.com/elasticseclabs"><svg class="w-4 h-4 inline-block w-3 h-3" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>@elasticseclabs</span></a></li></ul></nav></div><div class="flex flex-col space-y-1 text-zinc-300"><p>© <!-- -->2024<!-- -->. Elasticsearch B.V. All Rights Reserved.</p></div></div></footer></main></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"article":{"title":"情報窃取から端末を守る","slug":"protecting-your-devices-from-information-theft-keylogger-protection-jp","date":"2024-05-30","description":"本記事ではElastic Securityにおいて、エンドポイント保護を担っているElastic Defendに今年(バージョン8.12より)新たに追加された、キーロガーおよびキーロギング検出機能について紹介します。","image":"Security Labs Images 10.jpg","subtitle":"Windows APIの挙動を用いたキーロガー検知","tags":["detection engineering","threat hunting","threat detection"],"body":{"raw":"\n本記事ではElastic Securityにおいて、エンドポイント保護を担っているElastic Defendに今年(バージョン[8.12](https://www.elastic.co/guide/en/security/8.12/release-notes-header-8.12.0.html#enhancements-8.12.0)より)新たに追加された、キーロガーおよびキーロギング検出機能について紹介します。\n\n## はじめに\n\nElastic Defend 8.12より、Windows上で動作するキーロガーおよび、キーロギング機能を備えたマルウェア(情報窃取型マルウェアや、リモートアクセス型トロイの木馬、通称RAT)の検知の強化を目的に、キーロガーが使用する代表的なWindows API群の呼び出しを監視・記録する機能が追加されました。本記事ではこの新機能に焦点を当て、その技術的な詳細を解説します。加えて、本機能に付随して新たに作成された振る舞い検知ルール(Prebuilt rule)についても紹介します。\n\n### キーロガーとはなにか？どのような危険性があるのか？\n\nキーロガーとは、コンピュータ上で入力されたキーの内容を監視および記録(キーロギング)するソフトウェアの一種です(※1)。キーロガーは、ユーザのモニタリングなどの正当な理由で利用されることもありますが、攻撃者によって頻繁に悪用されるソフトウェアです。具体的には、ユーザがキーボード経由で入力した認証情報やクレジットカード情報、各種機密情報などのセンシティブな情報の窃取などに際に使われます。(※1: パソコンにUSB等で直接取り付けるようなハードウェア型のキーロガーもありますが、本記事ではソフトウェア型のキーロガーに焦点を当てます。)\n\nキーロガーを通じて入手したセンシティブな情報は、金銭の窃取やさらなるサイバー攻撃の足がかりに悪用されます。それゆえに、キーロギング行為自体は直接的にコンピュータに被害をおよばさないものの、続くサイバー攻撃の被害を食い止めるためにも、早期の検知が非常に重要だと言えます。\n\nキーロギング機能を持つマルウェアは多々あり、特にRAT、情報窃取型マルウェア、バンキングマルウェアといった種類のマルウェアにキーロギング機能が搭載されている場合があることが確認されています。有名なマルウェアでキーロギング機能を有するものとしては[Agent Tesla](https://malpedia.caad.fkie.fraunhofer.de/details/win.agent_tesla)や[Lokibit](https://malpedia.caad.fkie.fraunhofer.de/details/apk.lokibot)、そして[SnakeKeylogger](https://malpedia.caad.fkie.fraunhofer.de/details/win.404keylogger)などが挙げられます。\n\n### いかにして入力した文字を盗み取っているのか？\n\nでは次に、キーロガーはいかにしてユーザがキーボードから入力した文字を、ユーザに気づかれること無く盗み取っているのかを、技術的な観点から説明していきます。キーロガー自体は、あらゆるOS環境(Windows/Linux/macOSやモバイルデバイス)で存在しうるものではありますが、本記事ではWindowsのキーロガーに焦点を絞って解説します。特にWindows APIや機能を使用してキー入力を取得する4つの異なるタイプのキーロガーについて解説します。\n\n一点補足としては、ここでキーロギングの手法について説明しているのは、あくまで本記事後半で紹介している、新しい検知機能についての理解を深めていただくためです。そのため、例として掲載しているコードはあくまで単なる例であり、実際にそのまま動くコードが掲載されている訳ではありません(※3)。\n\n(※2:  Windows上で動作するキーロガーは、カーネル空間(OS)側に設置されるものと、通常のアプリケーションと同じ領域(ユーザ空間)に設置されるものに大別されます。本記事では、後者のタイプを取り上げます。 )\n(※3: 以下に掲載されている例のコードを元にキーロガーを作成し悪用した場合、弊社では対応、および、責任について負いかねます 。)\n\n 1. ポーリング型キーロガー\n \nこのタイプのキーロガーは、キーボードの各キーの状態(キーが押された否か)を短い間隔(1秒よりはるかに短い間隔)で定期的に確認します。そして前回の確認以降に、新たに押されたキーがあることが判明した場合、その押されたキーの文字の情報を記録・保存します。この一連の流れを繰り返すことで、キーロガーは、ユーザが入力した文字列の情報を取得しているのです。\n\nポーリング型のキーロガーは、キーの入力状態をチェックするWindowsのAPIを利用して実装されており、代表的には [```GetAsyncKeyState```](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getasynckeystate) APIが利用されます。このAPIは、特定のキーが現在押されているか否かに加えて、その特定のキーが前回のAPI呼び出し以降押されたか否かの情報を取得することが出来ます。以下が```GetAsyncKeyState``` APIを使ったポーリング型キーロガーの簡単な例です。\n\n``` C\nwhile(true)\n{\n    for (int key = 1; key \u003c= 255; key++)\n    {\n        if (GetAsyncKeyState(key) \u0026 0x01)\n        {\n            SaveTheKey(key, \"log.txt\");\n        }\n    }\n    Sleep(50);\n}\n```\n\nポーリング(```GetAsyncKeyState```)を用いてキー押下状態を取得する手法は、古くから存在する典型的なキーロギングの手法として知られているだけでなく、今でもマルウェアによって使われていることが確認されています。\n \n 2. フッキング型キーロガー\n \nフッキング型キーロガーは、ポーリング型キーロガーと同じく、古くから存在する典型的な種類のキーロガーです。ここではまず「そもそもフックとは何か？」について説明します。\n\nフックとは大雑把に言うと「アプリケーションの特定の処理に、独自の処理を割り込ませる仕組み」のことを指す言葉です。そして、フックを使って独自の処理を割り込ませることを「フックする」とも言います。Windowsでは、アプリケーションに対するキー入力などのメッセージ(イベント)をフックすることが出来る仕組みが用意されており、この仕組みは[SetWindowsHookEx](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-setwindowshookexa) APIを通じて利用することが出来ます。以下が```SetWindowsHookEx``` APIを使ったポーリング型キーロガーの簡単な例です。\n\n``` C\nHMODULE hHookLibrary = LoadLibraryW(L\"hook.dll\");\nFARPROC hookFunc = GetProcAddress(hHookLibrary, \"SaveTheKey\");\n\nHHOOK keyboardHook = NULL;\n    \nkeyboardHook = SetWindowsHookEx(WH_KEYBOARD_LL,\n                (HOOKPROC)hookFunc,\n                hHookLibrary,\n                0);\n```\n\n 3. Raw Input Modelを用いたキーロガー\n \nこのタイプのキーロガーは、キーボードなどの入力デバイスから得られた、生の入力データ(Raw Input)を取得し、それを保存・記録します。このキーロガーの詳細について説明する前に、まずWindowsにおける入力方式である「Original Input Model」と「Raw Input Model」について理解する必要があります。以下がそれぞれの入力方式についての説明です。\n\n - **Original Input Model**:  キーボードなどの入力デバイスから入力されたデータを、一度OSを介して必要な処理をした後、アプリケーション側に届ける方式\n - **Raw Input Model**:  キーボードなどの入力デバイスから入力されたデータを、そのままアプリケーション側が直接受け取る方式\n\nWindowsでは当初、Original Input Modelのみが使われていました。しかしWindows XP以降に、おそらくは入力デバイスの多様化などの要因から、Raw Input Modelが導入されました。Raw Input Modelでは、[```RegisterRawInputDevices```](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-registerrawinputdevices) APIを使い、入力データを直接受け取りたい入力デバイスを登録します。そしてその後、[```GetRawInputData```](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getrawinputdata)) APIを用いて生データを取得します。\n以下がこれらのAPIを使った、Raw Input Modelを用いたキーロガーの簡単な例です。\n\n``` C\nLRESULT CALLBACK WndProc(HWND hWnd, UINT uMessage, WPARAM wParam, LPARAM lParam)\n{\n\n    UINT dwSize = 0;\n    RAWINPUT* buffer = NULL;\n\n    switch (uMessage)\n    {\n    case WM_CREATE:\n        RAWINPUTDEVICE rid;\n        rid.usUsagePage = 0x01;  // HID_USAGE_PAGE_GENERIC\n        rid.usUsage = 0x06;      // HID_USAGE_GENERIC_KEYBOARD\n        rid.dwFlags = RIDEV_NOLEGACY | RIDEV_INPUTSINK;\n        rid.hwndTarget = hWnd;\n        RegisterRawInputDevices(\u0026rid, 1, sizeof(rid));\n        break;\n    case WM_INPUT:\n        GetRawInputData((HRAWINPUT)lParam, RID_INPUT, NULL,\n\u0026dwSize, sizeof(RAWINPUTHEADER));\n\n        buffer = (RAWINPUT*)HeapAlloc(GetProcessHeap(), 0, dwSize);\n\n        if (GetRawInputData((HRAWINPUT)lParam, RID_INPUT, buffer, \n\u0026dwSize, sizeof(RAWINPUTHEADER)))\n        {\n            if (buffer-\u003eheader.dwType == RIM_TYPEKEYBOARD)\n            {\n                SaveTheKey(buffer, \"log.txt\");\n            }\n        }\n        HeapFree(GetProcessHeap(), 0, buffer);\n        break;\n    default:\n        return DefWindowProc(hWnd, uMessage, wParam, lParam);\n    }\n    return 0;\n}\n```\n\nこの例では、最初に生入力を受け取りたい入力デバイスを```RegisterRawInputDevices```を用いて、登録します。ここでは、キーボードの生入力データを受け取るように設定・登録しています。\n\n 4. ```DirectInput```を用いたキーロガー\n \n最後に、```DirectInput```を用いたキーロガーについて説明します。このキーロガーは簡単に言えばMicrosoft DirectXの機能を悪用したキーロガーです。DirectXとは、ゲームや動画などのマルチメディア関連の処理を扱うためのAPI群の総称(ライブラリ)です。\n\nゲームにおいて、ユーザから各種入力が取得できることは必須機能と言って良いことから、DirectXにおいてもユーザの入力を処理するAPI群が提供されています。そして、DirectXのバージョン8以前に提供されていたそれらAPI群のことを「DirectInput」と呼びます。以下が```DirectInput```に関連するAPIを使ったキーロガーの簡単な例です。補足ですが、```DirectInput```を用いてキーを取得する際、裏では```RegisterRawInputDevices``` APIが呼ばれています。\n\n``` C\nLPDIRECTINPUT8\t\tlpDI = NULL;\nLPDIRECTINPUTDEVICE8\tlpKeyboard = NULL;\n\nBYTE key[256];\nZeroMemory(key, sizeof(key));\n\nDirectInput8Create(hInstance, DIRECTINPUT_VERSION, IID_IDirectInput8, (LPVOID*)\u0026lpDI, NULL);\nlpDI-\u003eCreateDevice(GUID_SysKeyboard, \u0026lpKeyboard, NULL);\nlpKeyboard-\u003eSetDataFormat(\u0026c_dfDIKeyboard);\nlpKeyboard-\u003eSetCooperativeLevel(hwndMain, DISCL_FOREGROUND | DISCL_NONEXCLUSIVE | DISCL_NOWINKEY);\n\nwhile(true)\n{\n    HRESULT ret = lpKeyboard-\u003eGetDeviceState(sizeof(key), key);\n    if (FAILED(ret)) {\n        lpKeyboard-\u003eAcquire();\n        lpKeyboard-\u003eGetDeviceState(sizeof(key), key);\n    }\n  SaveTheKey(key, \"log.txt\");\t\n    Sleep(50);\n}\n```\n\n## Windows API呼び出しを監視してキーロガーを検出する\n\nElastic Defendでは、Event Tracing for Windows (ETW ※4)を用いて、前述の種類のキーロガーを検知しています。具体的には、関連するWindows API群の呼び出しを監視し、その挙動のログを取得することで実現しています。監視するWindows API群と、付随して新規に作成したキーロガーの検知ルールは以下です。(※4 一言でいうとWindowsが提供する、アプリケーションやデバイスドライバなどのシステム側のコンポーネントを、トレースおよびロギングする仕組み。)\n\n### 監視するWindows API群:\n\n - [GetAsyncKeyState](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getasynckeystate)\n - [SetWindowsHookEx](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowshookexw)\n - [RegisterRawInputDevice](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerrawinputdevices)\n\n### 追加したキーロガー検知ルール一覧:\n\n - [GetAsyncKeyState API Call from Suspicious Process](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_getasynckeystate_api_call_from_suspicious_process.toml)\n - [GetAsyncKeyState API Call from Unusual Process](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_getasynckeystate_api_call_from_unusual_process.toml)\n - [Keystroke Input Capture via DirectInput](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_directinput.toml)\n - [Keystroke Input Capture via RegisterRawInputDevices](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_registerrawinputdevices.toml)\n - [Keystroke Messages Hooking via SetWindowsHookEx](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_messages_hooking_via_setwindowshookex.toml)\n - [Keystrokes Input Capture from a Managed Application](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_a_managed_application.toml)\n - [Keystrokes Input Capture from a Suspicious Module](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_a_suspicious_module.toml)\n - [Keystrokes Input Capture from Suspicious CallStack](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_suspicious_callstack.toml)\n - [Keystrokes Input Capture from Unsigned DLL](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_unsigned_dll.toml)\n - [Keystrokes Input Capture via SetWindowsHookEx](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_via_setwindowshookex.toml)\n\n新規に追加した機能および検知ルールにより、Elastic Defendにてキーロガー・キーロギングの包括的な監視と検出が可能となり、これらの脅威に対するWindowsエンドポイントのセキュリティと保護の強化を実現しました。\n\n### Windowsのキーロガーを検知する\n\n次に実際の検知の様子をお見せします。例として、Raw Input Modelを用いたキーロガーをElastic Defendで検出してみます。ここでは```RegisterRawInputDevices``` APIを用いた簡易的なキーロガー「Keylogger.exe」を用意し、テスト環境で実行してみました※5。(※5 実行環境はWindows 10の執筆時点の最新版であるWindows 10 Version 22H2 19045.4412です。)\n\n![Elastic Securityのアラート](/assets/images/protecting-your-devices-from-information-theft-keylogger-protection/image1.png)\n\nキーロガーを実行した直後に、検知ルール([Keystroke Input Capture via ```RegisterRawInputDevices```](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_registerrawinputdevices.toml))が発動し、エンドポイント側でアラートが上がりました。このアラートのさらなる詳細はKibana上から見ることが出来ます。\n\n![Elastic Securityのアラートダッシュボード](/assets/images/protecting-your-devices-from-information-theft-keylogger-protection/image3.png)\n\n以下が検知ルールの詳細です。検知に使われているAPIの部分を中心に説明します。\n\n``` sql\nquery = '''\napi where\n process.Ext.api.name == \"RegisterRawInputDevices\" and not process.code_signature.status : \"trusted\" and\n process.Ext.api.parameters.usage : (\"HID_USAGE_GENERIC_KEYBOARD\", \"KEYBOARD\") and\n process.Ext.api.parameters.flags : \"*INPUTSINK*\" and process.thread.Ext.call_stack_summary : \"?*\" and\n process.thread.Ext.call_stack_final_user_module.hash.sha256 != null and process.executable != null and\n not process.thread.Ext.call_stack_final_user_module.path :\n                         (\"*\\\\program files*\", \"*\\\\windows\\\\system32\\\\*\", \"*\\\\windows\\\\syswow64\\\\*\",\n                          \"*\\\\windows\\\\systemapps\\\\*\",\n                          \"*\\\\users\\\\*\\\\appdata\\\\local\\\\*\\\\kumospace.exe\",\n                          \"*\\\\users\\\\*\\\\appdata\\\\local\\\\microsoft\\\\teams\\\\current\\\\teams.exe\") and \n not process.executable : (\"?:\\\\Program Files\\\\*.exe\", \"?:\\\\Program Files (x86)\\\\*.exe\")\n'''\n```\n\nこのアラートは簡単に言うと「署名されていないプロセス」または「署名されているが、その署名者が信頼できないプロセス」が、キー入力を取得する目的で```RegisterRawInputDevices```  APIを呼び出した時に発せられるアラートです。```RegisterRawInputDevices``` APIが呼び出された際の引数の情報に着目しており、より具体的にはAPIの第一引数である、[RAWINPUTDEVICE](https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/ns-winuser-rawinputdevice)構造体のメンバの情報を検知に用いています。\n\nこの引数の値が、キーボード入力の取得を試みていることを示している場合、キーロガーが実行されたと見なして、アラートを上げるようになっています。 ```RegisterRawInputDevices``` APIのログはKibana上でも確認できます。\n\n![Kibana上で確認できるRegisterRawInputDevices APIログ](/assets/images/protecting-your-devices-from-information-theft-keylogger-protection/image2.png)\n\n### 各Windows APIの呼び出しの際に取得しているデータ\n\n分量の都合で、追加したすべての検知ルールとAPIの詳細については本記事では説明しません。ですが最後に、対象のWindows APIの呼び出しの際にElastic Defend側で取得しているデータについて、簡単にご紹介します。各項目についてさらに知りたい方は、[custom_api.yml](https://github.com/elastic/endpoint-package/blob/main/custom_schemas/custom_api.yml)に記載されているElastic Common Schema（ECS）とのマッピングをご参照ください。\n\n| API名 | フィールド | 説明(原文を日本語訳したもの) | 例 |\n| --- | --- | --- | --- |\n| GetAsyncKeyState | process.Ext.api.metadata.ms_since_last_keyevent | このパラメーターは、最後の GetAsyncKeyState イベントからの経過時間をミリ秒で示します。 | 94 |\n| GetAsyncKeyState | process.Ext.api.metadata.background_callcount | このパラメーターは、最後に成功した GetAsyncKeyState 呼び出しからの間に行われた、失敗した呼び出しも含めたすべての GetAsyncKeyState API 呼び出しの回数を示します。 | 6021 |\n| SetWindowsHookEx | process.Ext.api.parameters.hook_type | Tインストールするフックの種類 | \"WH_KEYBOARD_LL\"\n| SetWindowsHookEx | process.Ext.api.parameters.hook_module | フック先の処理を保有するDLL | \"c:\\\\windows\\\\system32\\\\taskbar.dll\"\n| SetWindowsHookEx | process.Ext.api.parameters.procedure | フック先となる処理や関数のメモリアドレス | 2431737462784 |\n| SetWindowsHookEx | process.Ext.api.metadata.procedure_symbol | フック先の処理の要約 | \"taskbar.dll\" |\n| RegisterRawInputDevices | process.Ext.api.metadata.return_value | RegisterRawInputDevices API 呼び出しの戻り値 | 1 |\n| RegisterRawInputDevices | process.Ext.api.parameters.usage_page | このパラメーターはデバイスのトップレベルコレクション（Usage Page）を示す。RAWINPUTDEVICE 構造体の最初のメンバ | \"GENERIC\" |\n| RegisterRawInputDevices | process.Ext.api.parameters.usage | このパラメーターは、Usage Page 内の特定のデバイス（Usage）を示します。RAWINPUTDEVICE 構造体の２番目のメンバ | \"KEYBOARD\" |\n| RegisterRawInputDevices | process.Ext.api.parameters.flags | UsagePageとUsageによって提供される情報をどのように解釈するかを指定するモードフラグ。RAWINPUTDEVICE 構造体の３番目のメンバ | \"INPUTSINK\" |\n| RegisterRawInputDevices | process.Ext.api.metadata.windows_count | 呼び出し元スレッドが所有するウィンドウの数 | 2 |\n| RegisterRawInputDevices | process.Ext.api.metadata.visible_windows_count | 呼び出し元スレッドが所有する表示されているウィンドウの数 | 0 |\n| RegisterRawInputDevices | process.Ext.api.metadata.thread_info_flags | スレッドの情報を表すフラグ | 16 |\n| RegisterRawInputDevices | process.Ext.api.metadata.start_address_module | スレッドの開始アドレスに紐づくモジュールの名前 | \"C:\\\\Windows\\\\System32\\\\DellTPad\\\\ApMsgFwd.exe\" |\n| RegisterRawInputDevices | process.Ext.api.metadata.start_address_allocation_protection | スレッドの開始アドレスに紐づくメモリ保護属性 | \"RCX\" |\n\n## まとめ\n\n本記事では、Elastic Defend 8.12にて導入された、Windows環境におけるキーロガーおよびキーロギング検知機能についてご紹介しました。具体的には、キーロギングに関連する代表的なWindows API群の呼び出しを監視することで、シグネチャに依存しない、振る舞い検知によるキーロガー検出を実現しました。精度を高め、誤検知率を減らすために、数ヶ月にわたる研究・調査をもとにこの機能と新しいルールを開発しました。\n\nElastic Defendではキーロガー関連のAPI以外にも、攻撃者に一般的に利用されるメモリ操作等の[API群なども監視すること](https://www.elastic.co/security-labs/doubling-down-etw-callstacks)で、多層的な防御を実現しております。Elastic Security および Elastic Defendについて気になった方はぜひ[製品ページ](https://www.elastic.co/jp/security)や[ドキュメント](https://www.elastic.co/jp/videos/intro-elastic-security)を御覧頂ければ幸いです。\n","code":"var Component=(()=\u003e{var h=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var m=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),g=(t,e)=\u003e{for(var i in e)l(t,i,{get:e[i],enumerable:!0})},o=(t,e,i,a)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!f.call(t,r)\u0026\u0026r!==i\u0026\u0026l(t,r,{get:()=\u003ee[r],enumerable:!(a=p(e,r))||a.enumerable});return t};var I=(t,e,i)=\u003e(i=t!=null?h(w(t)):{},o(e||!t||!t.__esModule?l(i,\"default\",{value:t,enumerable:!0}):i,t)),_=t=\u003eo(l({},\"__esModule\",{value:!0}),t);var s=m((b,c)=\u003e{c.exports=_jsx_runtime});var k={};g(k,{default:()=\u003eR,frontmatter:()=\u003ey});var n=I(s()),y={title:\"\\u60C5\\u5831\\u7A83\\u53D6\\u304B\\u3089\\u7AEF\\u672B\\u3092\\u5B88\\u308B\",slug:\"protecting-your-devices-from-information-theft-keylogger-protection-jp\",date:\"2024-05-30\",subtitle:\"Windows API\\u306E\\u6319\\u52D5\\u3092\\u7528\\u3044\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u691C\\u77E5\",description:\"\\u672C\\u8A18\\u4E8B\\u3067\\u306FElastic Security\\u306B\\u304A\\u3044\\u3066\\u3001\\u30A8\\u30F3\\u30C9\\u30DD\\u30A4\\u30F3\\u30C8\\u4FDD\\u8B77\\u3092\\u62C5\\u3063\\u3066\\u3044\\u308BElastic Defend\\u306B\\u4ECA\\u5E74(\\u30D0\\u30FC\\u30B8\\u30E7\\u30F38.12\\u3088\\u308A)\\u65B0\\u305F\\u306B\\u8FFD\\u52A0\\u3055\\u308C\\u305F\\u3001\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304A\\u3088\\u3073\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u691C\\u51FA\\u6A5F\\u80FD\\u306B\\u3064\\u3044\\u3066\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\",author:[{slug:\"asuka-nakajima\"}],image:\"Security Labs Images 10.jpg\",category:[{slug:\"security-operations\"},{slug:\"security-research\"},{slug:\"detection-science\"}],tags:[\"detection engineering\",\"threat hunting\",\"threat detection\"]};function d(t){let e=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",h3:\"h3\",ol:\"ol\",li:\"li\",code:\"code\",pre:\"pre\",ul:\"ul\",strong:\"strong\",img:\"img\",div:\"div\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u672C\\u8A18\\u4E8B\\u3067\\u306FElastic Security\\u306B\\u304A\\u3044\\u3066\\u3001\\u30A8\\u30F3\\u30C9\\u30DD\\u30A4\\u30F3\\u30C8\\u4FDD\\u8B77\\u3092\\u62C5\\u3063\\u3066\\u3044\\u308BElastic Defend\\u306B\\u4ECA\\u5E74(\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\",(0,n.jsx)(e.a,{href:\"https://www.elastic.co/guide/en/security/8.12/release-notes-header-8.12.0.html#enhancements-8.12.0\",rel:\"nofollow\",children:\"8.12\"}),\"\\u3088\\u308A)\\u65B0\\u305F\\u306B\\u8FFD\\u52A0\\u3055\\u308C\\u305F\\u3001\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304A\\u3088\\u3073\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u691C\\u51FA\\u6A5F\\u80FD\\u306B\\u3064\\u3044\\u3066\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"\\u306F\\u3058\\u3081\\u306B\",children:\"\\u306F\\u3058\\u3081\\u306B\"}),`\n`,(0,n.jsx)(e.p,{children:\"Elastic Defend 8.12\\u3088\\u308A\\u3001Windows\\u4E0A\\u3067\\u52D5\\u4F5C\\u3059\\u308B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304A\\u3088\\u3073\\u3001\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u6A5F\\u80FD\\u3092\\u5099\\u3048\\u305F\\u30DE\\u30EB\\u30A6\\u30A7\\u30A2(\\u60C5\\u5831\\u7A83\\u53D6\\u578B\\u30DE\\u30EB\\u30A6\\u30A7\\u30A2\\u3084\\u3001\\u30EA\\u30E2\\u30FC\\u30C8\\u30A2\\u30AF\\u30BB\\u30B9\\u578B\\u30C8\\u30ED\\u30A4\\u306E\\u6728\\u99AC\\u3001\\u901A\\u79F0RAT)\\u306E\\u691C\\u77E5\\u306E\\u5F37\\u5316\\u3092\\u76EE\\u7684\\u306B\\u3001\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304C\\u4F7F\\u7528\\u3059\\u308B\\u4EE3\\u8868\\u7684\\u306AWindows API\\u7FA4\\u306E\\u547C\\u3073\\u51FA\\u3057\\u3092\\u76E3\\u8996\\u30FB\\u8A18\\u9332\\u3059\\u308B\\u6A5F\\u80FD\\u304C\\u8FFD\\u52A0\\u3055\\u308C\\u307E\\u3057\\u305F\\u3002\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u3053\\u306E\\u65B0\\u6A5F\\u80FD\\u306B\\u7126\\u70B9\\u3092\\u5F53\\u3066\\u3001\\u305D\\u306E\\u6280\\u8853\\u7684\\u306A\\u8A73\\u7D30\\u3092\\u89E3\\u8AAC\\u3057\\u307E\\u3059\\u3002\\u52A0\\u3048\\u3066\\u3001\\u672C\\u6A5F\\u80FD\\u306B\\u4ED8\\u968F\\u3057\\u3066\\u65B0\\u305F\\u306B\\u4F5C\\u6210\\u3055\\u308C\\u305F\\u632F\\u308B\\u821E\\u3044\\u691C\\u77E5\\u30EB\\u30FC\\u30EB(Prebuilt rule)\\u306B\\u3064\\u3044\\u3066\\u3082\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3068\\u306F\\u306A\\u306B\\u304B\\u3069\\u306E\\u3088\\u3046\\u306A\\u5371\\u967A\\u6027\\u304C\\u3042\\u308B\\u306E\\u304B\",children:\"\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3068\\u306F\\u306A\\u306B\\u304B\\uFF1F\\u3069\\u306E\\u3088\\u3046\\u306A\\u5371\\u967A\\u6027\\u304C\\u3042\\u308B\\u306E\\u304B\\uFF1F\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3068\\u306F\\u3001\\u30B3\\u30F3\\u30D4\\u30E5\\u30FC\\u30BF\\u4E0A\\u3067\\u5165\\u529B\\u3055\\u308C\\u305F\\u30AD\\u30FC\\u306E\\u5185\\u5BB9\\u3092\\u76E3\\u8996\\u304A\\u3088\\u3073\\u8A18\\u9332(\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0)\\u3059\\u308B\\u30BD\\u30D5\\u30C8\\u30A6\\u30A7\\u30A2\\u306E\\u4E00\\u7A2E\\u3067\\u3059(\\u203B1)\\u3002\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3001\\u30E6\\u30FC\\u30B6\\u306E\\u30E2\\u30CB\\u30BF\\u30EA\\u30F3\\u30B0\\u306A\\u3069\\u306E\\u6B63\\u5F53\\u306A\\u7406\\u7531\\u3067\\u5229\\u7528\\u3055\\u308C\\u308B\\u3053\\u3068\\u3082\\u3042\\u308A\\u307E\\u3059\\u304C\\u3001\\u653B\\u6483\\u8005\\u306B\\u3088\\u3063\\u3066\\u983B\\u7E41\\u306B\\u60AA\\u7528\\u3055\\u308C\\u308B\\u30BD\\u30D5\\u30C8\\u30A6\\u30A7\\u30A2\\u3067\\u3059\\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\\u3001\\u30E6\\u30FC\\u30B6\\u304C\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u7D4C\\u7531\\u3067\\u5165\\u529B\\u3057\\u305F\\u8A8D\\u8A3C\\u60C5\\u5831\\u3084\\u30AF\\u30EC\\u30B8\\u30C3\\u30C8\\u30AB\\u30FC\\u30C9\\u60C5\\u5831\\u3001\\u5404\\u7A2E\\u6A5F\\u5BC6\\u60C5\\u5831\\u306A\\u3069\\u306E\\u30BB\\u30F3\\u30B7\\u30C6\\u30A3\\u30D6\\u306A\\u60C5\\u5831\\u306E\\u7A83\\u53D6\\u306A\\u3069\\u306B\\u969B\\u306B\\u4F7F\\u308F\\u308C\\u307E\\u3059\\u3002(\\u203B1: \\u30D1\\u30BD\\u30B3\\u30F3\\u306BUSB\\u7B49\\u3067\\u76F4\\u63A5\\u53D6\\u308A\\u4ED8\\u3051\\u308B\\u3088\\u3046\\u306A\\u30CF\\u30FC\\u30C9\\u30A6\\u30A7\\u30A2\\u578B\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3082\\u3042\\u308A\\u307E\\u3059\\u304C\\u3001\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u30BD\\u30D5\\u30C8\\u30A6\\u30A7\\u30A2\\u578B\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306B\\u7126\\u70B9\\u3092\\u5F53\\u3066\\u307E\\u3059\\u3002)\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092\\u901A\\u3058\\u3066\\u5165\\u624B\\u3057\\u305F\\u30BB\\u30F3\\u30B7\\u30C6\\u30A3\\u30D6\\u306A\\u60C5\\u5831\\u306F\\u3001\\u91D1\\u92AD\\u306E\\u7A83\\u53D6\\u3084\\u3055\\u3089\\u306A\\u308B\\u30B5\\u30A4\\u30D0\\u30FC\\u653B\\u6483\\u306E\\u8DB3\\u304C\\u304B\\u308A\\u306B\\u60AA\\u7528\\u3055\\u308C\\u307E\\u3059\\u3002\\u305D\\u308C\\u3086\\u3048\\u306B\\u3001\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u884C\\u70BA\\u81EA\\u4F53\\u306F\\u76F4\\u63A5\\u7684\\u306B\\u30B3\\u30F3\\u30D4\\u30E5\\u30FC\\u30BF\\u306B\\u88AB\\u5BB3\\u3092\\u304A\\u3088\\u3070\\u3055\\u306A\\u3044\\u3082\\u306E\\u306E\\u3001\\u7D9A\\u304F\\u30B5\\u30A4\\u30D0\\u30FC\\u653B\\u6483\\u306E\\u88AB\\u5BB3\\u3092\\u98DF\\u3044\\u6B62\\u3081\\u308B\\u305F\\u3081\\u306B\\u3082\\u3001\\u65E9\\u671F\\u306E\\u691C\\u77E5\\u304C\\u975E\\u5E38\\u306B\\u91CD\\u8981\\u3060\\u3068\\u8A00\\u3048\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u6A5F\\u80FD\\u3092\\u6301\\u3064\\u30DE\\u30EB\\u30A6\\u30A7\\u30A2\\u306F\\u591A\\u3005\\u3042\\u308A\\u3001\\u7279\\u306BRAT\\u3001\\u60C5\\u5831\\u7A83\\u53D6\\u578B\\u30DE\\u30EB\\u30A6\\u30A7\\u30A2\\u3001\\u30D0\\u30F3\\u30AD\\u30F3\\u30B0\\u30DE\\u30EB\\u30A6\\u30A7\\u30A2\\u3068\\u3044\\u3063\\u305F\\u7A2E\\u985E\\u306E\\u30DE\\u30EB\\u30A6\\u30A7\\u30A2\\u306B\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u6A5F\\u80FD\\u304C\\u642D\\u8F09\\u3055\\u308C\\u3066\\u3044\\u308B\\u5834\\u5408\\u304C\\u3042\\u308B\\u3053\\u3068\\u304C\\u78BA\\u8A8D\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\\u6709\\u540D\\u306A\\u30DE\\u30EB\\u30A6\\u30A7\\u30A2\\u3067\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u6A5F\\u80FD\\u3092\\u6709\\u3059\\u308B\\u3082\\u306E\\u3068\\u3057\\u3066\\u306F\",(0,n.jsx)(e.a,{href:\"https://malpedia.caad.fkie.fraunhofer.de/details/win.agent_tesla\",rel:\"nofollow\",children:\"Agent Tesla\"}),\"\\u3084\",(0,n.jsx)(e.a,{href:\"https://malpedia.caad.fkie.fraunhofer.de/details/apk.lokibot\",rel:\"nofollow\",children:\"Lokibit\"}),\"\\u3001\\u305D\\u3057\\u3066\",(0,n.jsx)(e.a,{href:\"https://malpedia.caad.fkie.fraunhofer.de/details/win.404keylogger\",rel:\"nofollow\",children:\"SnakeKeylogger\"}),\"\\u306A\\u3069\\u304C\\u6319\\u3052\\u3089\\u308C\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u3044\\u304B\\u306B\\u3057\\u3066\\u5165\\u529B\\u3057\\u305F\\u6587\\u5B57\\u3092\\u76D7\\u307F\\u53D6\\u3063\\u3066\\u3044\\u308B\\u306E\\u304B\",children:\"\\u3044\\u304B\\u306B\\u3057\\u3066\\u5165\\u529B\\u3057\\u305F\\u6587\\u5B57\\u3092\\u76D7\\u307F\\u53D6\\u3063\\u3066\\u3044\\u308B\\u306E\\u304B\\uFF1F\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u3067\\u306F\\u6B21\\u306B\\u3001\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3044\\u304B\\u306B\\u3057\\u3066\\u30E6\\u30FC\\u30B6\\u304C\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u304B\\u3089\\u5165\\u529B\\u3057\\u305F\\u6587\\u5B57\\u3092\\u3001\\u30E6\\u30FC\\u30B6\\u306B\\u6C17\\u3065\\u304B\\u308C\\u308B\\u3053\\u3068\\u7121\\u304F\\u76D7\\u307F\\u53D6\\u3063\\u3066\\u3044\\u308B\\u306E\\u304B\\u3092\\u3001\\u6280\\u8853\\u7684\\u306A\\u89B3\\u70B9\\u304B\\u3089\\u8AAC\\u660E\\u3057\\u3066\\u3044\\u304D\\u307E\\u3059\\u3002\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u81EA\\u4F53\\u306F\\u3001\\u3042\\u3089\\u3086\\u308BOS\\u74B0\\u5883(Windows/Linux/macOS\\u3084\\u30E2\\u30D0\\u30A4\\u30EB\\u30C7\\u30D0\\u30A4\\u30B9)\\u3067\\u5B58\\u5728\\u3057\\u3046\\u308B\\u3082\\u306E\\u3067\\u306F\\u3042\\u308A\\u307E\\u3059\\u304C\\u3001\\u672C\\u8A18\\u4E8B\\u3067\\u306FWindows\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306B\\u7126\\u70B9\\u3092\\u7D5E\\u3063\\u3066\\u89E3\\u8AAC\\u3057\\u307E\\u3059\\u3002\\u7279\\u306BWindows API\\u3084\\u6A5F\\u80FD\\u3092\\u4F7F\\u7528\\u3057\\u3066\\u30AD\\u30FC\\u5165\\u529B\\u3092\\u53D6\\u5F97\\u3059\\u308B4\\u3064\\u306E\\u7570\\u306A\\u308B\\u30BF\\u30A4\\u30D7\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306B\\u3064\\u3044\\u3066\\u89E3\\u8AAC\\u3057\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u4E00\\u70B9\\u88DC\\u8DB3\\u3068\\u3057\\u3066\\u306F\\u3001\\u3053\\u3053\\u3067\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u306E\\u624B\\u6CD5\\u306B\\u3064\\u3044\\u3066\\u8AAC\\u660E\\u3057\\u3066\\u3044\\u308B\\u306E\\u306F\\u3001\\u3042\\u304F\\u307E\\u3067\\u672C\\u8A18\\u4E8B\\u5F8C\\u534A\\u3067\\u7D39\\u4ECB\\u3057\\u3066\\u3044\\u308B\\u3001\\u65B0\\u3057\\u3044\\u691C\\u77E5\\u6A5F\\u80FD\\u306B\\u3064\\u3044\\u3066\\u306E\\u7406\\u89E3\\u3092\\u6DF1\\u3081\\u3066\\u3044\\u305F\\u3060\\u304F\\u305F\\u3081\\u3067\\u3059\\u3002\\u305D\\u306E\\u305F\\u3081\\u3001\\u4F8B\\u3068\\u3057\\u3066\\u63B2\\u8F09\\u3057\\u3066\\u3044\\u308B\\u30B3\\u30FC\\u30C9\\u306F\\u3042\\u304F\\u307E\\u3067\\u5358\\u306A\\u308B\\u4F8B\\u3067\\u3042\\u308A\\u3001\\u5B9F\\u969B\\u306B\\u305D\\u306E\\u307E\\u307E\\u52D5\\u304F\\u30B3\\u30FC\\u30C9\\u304C\\u63B2\\u8F09\\u3055\\u308C\\u3066\\u3044\\u308B\\u8A33\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093(\\u203B3)\\u3002\"}),`\n`,(0,n.jsx)(e.p,{children:`(\\u203B2:  Windows\\u4E0A\\u3067\\u52D5\\u4F5C\\u3059\\u308B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3001\\u30AB\\u30FC\\u30CD\\u30EB\\u7A7A\\u9593(OS)\\u5074\\u306B\\u8A2D\\u7F6E\\u3055\\u308C\\u308B\\u3082\\u306E\\u3068\\u3001\\u901A\\u5E38\\u306E\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u3068\\u540C\\u3058\\u9818\\u57DF(\\u30E6\\u30FC\\u30B6\\u7A7A\\u9593)\\u306B\\u8A2D\\u7F6E\\u3055\\u308C\\u308B\\u3082\\u306E\\u306B\\u5927\\u5225\\u3055\\u308C\\u307E\\u3059\\u3002\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u3001\\u5F8C\\u8005\\u306E\\u30BF\\u30A4\\u30D7\\u3092\\u53D6\\u308A\\u4E0A\\u3052\\u307E\\u3059\\u3002 )\n(\\u203B3: \\u4EE5\\u4E0B\\u306B\\u63B2\\u8F09\\u3055\\u308C\\u3066\\u3044\\u308B\\u4F8B\\u306E\\u30B3\\u30FC\\u30C9\\u3092\\u5143\\u306B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092\\u4F5C\\u6210\\u3057\\u60AA\\u7528\\u3057\\u305F\\u5834\\u5408\\u3001\\u5F0A\\u793E\\u3067\\u306F\\u5BFE\\u5FDC\\u3001\\u304A\\u3088\\u3073\\u3001\\u8CAC\\u4EFB\\u306B\\u3064\\u3044\\u3066\\u8CA0\\u3044\\u304B\\u306D\\u307E\\u3059 \\u3002)`}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u30DD\\u30FC\\u30EA\\u30F3\\u30B0\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u3053\\u306E\\u30BF\\u30A4\\u30D7\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3001\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u306E\\u5404\\u30AD\\u30FC\\u306E\\u72B6\\u614B(\\u30AD\\u30FC\\u304C\\u62BC\\u3055\\u308C\\u305F\\u5426\\u304B)\\u3092\\u77ED\\u3044\\u9593\\u9694(1\\u79D2\\u3088\\u308A\\u306F\\u308B\\u304B\\u306B\\u77ED\\u3044\\u9593\\u9694)\\u3067\\u5B9A\\u671F\\u7684\\u306B\\u78BA\\u8A8D\\u3057\\u307E\\u3059\\u3002\\u305D\\u3057\\u3066\\u524D\\u56DE\\u306E\\u78BA\\u8A8D\\u4EE5\\u964D\\u306B\\u3001\\u65B0\\u305F\\u306B\\u62BC\\u3055\\u308C\\u305F\\u30AD\\u30FC\\u304C\\u3042\\u308B\\u3053\\u3068\\u304C\\u5224\\u660E\\u3057\\u305F\\u5834\\u5408\\u3001\\u305D\\u306E\\u62BC\\u3055\\u308C\\u305F\\u30AD\\u30FC\\u306E\\u6587\\u5B57\\u306E\\u60C5\\u5831\\u3092\\u8A18\\u9332\\u30FB\\u4FDD\\u5B58\\u3057\\u307E\\u3059\\u3002\\u3053\\u306E\\u4E00\\u9023\\u306E\\u6D41\\u308C\\u3092\\u7E70\\u308A\\u8FD4\\u3059\\u3053\\u3068\\u3067\\u3001\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3001\\u30E6\\u30FC\\u30B6\\u304C\\u5165\\u529B\\u3057\\u305F\\u6587\\u5B57\\u5217\\u306E\\u60C5\\u5831\\u3092\\u53D6\\u5F97\\u3057\\u3066\\u3044\\u308B\\u306E\\u3067\\u3059\\u3002\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u30DD\\u30FC\\u30EA\\u30F3\\u30B0\\u578B\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3001\\u30AD\\u30FC\\u306E\\u5165\\u529B\\u72B6\\u614B\\u3092\\u30C1\\u30A7\\u30C3\\u30AF\\u3059\\u308BWindows\\u306EAPI\\u3092\\u5229\\u7528\\u3057\\u3066\\u5B9F\\u88C5\\u3055\\u308C\\u3066\\u304A\\u308A\\u3001\\u4EE3\\u8868\\u7684\\u306B\\u306F \",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getasynckeystate\",rel:\"nofollow\",children:(0,n.jsx)(e.code,{children:\"GetAsyncKeyState\"})}),\" API\\u304C\\u5229\\u7528\\u3055\\u308C\\u307E\\u3059\\u3002\\u3053\\u306EAPI\\u306F\\u3001\\u7279\\u5B9A\\u306E\\u30AD\\u30FC\\u304C\\u73FE\\u5728\\u62BC\\u3055\\u308C\\u3066\\u3044\\u308B\\u304B\\u5426\\u304B\\u306B\\u52A0\\u3048\\u3066\\u3001\\u305D\\u306E\\u7279\\u5B9A\\u306E\\u30AD\\u30FC\\u304C\\u524D\\u56DE\\u306EAPI\\u547C\\u3073\\u51FA\\u3057\\u4EE5\\u964D\\u62BC\\u3055\\u308C\\u305F\\u304B\\u5426\\u304B\\u306E\\u60C5\\u5831\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u3053\\u3068\\u304C\\u51FA\\u6765\\u307E\\u3059\\u3002\\u4EE5\\u4E0B\\u304C\",(0,n.jsx)(e.code,{children:\"GetAsyncKeyState\"}),\" API\\u3092\\u4F7F\\u3063\\u305F\\u30DD\\u30FC\\u30EA\\u30F3\\u30B0\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u7C21\\u5358\\u306A\\u4F8B\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-C\",children:`while(true)\n{\n    for (int key = 1; key \u003c= 255; key++)\n    {\n        if (GetAsyncKeyState(key) \u0026 0x01)\n        {\n            SaveTheKey(key, \"log.txt\");\n        }\n    }\n    Sleep(50);\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u30DD\\u30FC\\u30EA\\u30F3\\u30B0(\",(0,n.jsx)(e.code,{children:\"GetAsyncKeyState\"}),\")\\u3092\\u7528\\u3044\\u3066\\u30AD\\u30FC\\u62BC\\u4E0B\\u72B6\\u614B\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u624B\\u6CD5\\u306F\\u3001\\u53E4\\u304F\\u304B\\u3089\\u5B58\\u5728\\u3059\\u308B\\u5178\\u578B\\u7684\\u306A\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u306E\\u624B\\u6CD5\\u3068\\u3057\\u3066\\u77E5\\u3089\\u308C\\u3066\\u3044\\u308B\\u3060\\u3051\\u3067\\u306A\\u304F\\u3001\\u4ECA\\u3067\\u3082\\u30DE\\u30EB\\u30A6\\u30A7\\u30A2\\u306B\\u3088\\u3063\\u3066\\u4F7F\\u308F\\u308C\\u3066\\u3044\\u308B\\u3053\\u3068\\u304C\\u78BA\\u8A8D\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsxs)(e.ol,{start:\"2\",children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u30D5\\u30C3\\u30AD\\u30F3\\u30B0\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u30D5\\u30C3\\u30AD\\u30F3\\u30B0\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3001\\u30DD\\u30FC\\u30EA\\u30F3\\u30B0\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3068\\u540C\\u3058\\u304F\\u3001\\u53E4\\u304F\\u304B\\u3089\\u5B58\\u5728\\u3059\\u308B\\u5178\\u578B\\u7684\\u306A\\u7A2E\\u985E\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3067\\u3059\\u3002\\u3053\\u3053\\u3067\\u306F\\u307E\\u305A\\u300C\\u305D\\u3082\\u305D\\u3082\\u30D5\\u30C3\\u30AF\\u3068\\u306F\\u4F55\\u304B\\uFF1F\\u300D\\u306B\\u3064\\u3044\\u3066\\u8AAC\\u660E\\u3057\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u30D5\\u30C3\\u30AF\\u3068\\u306F\\u5927\\u96D1\\u628A\\u306B\\u8A00\\u3046\\u3068\\u300C\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306E\\u7279\\u5B9A\\u306E\\u51E6\\u7406\\u306B\\u3001\\u72EC\\u81EA\\u306E\\u51E6\\u7406\\u3092\\u5272\\u308A\\u8FBC\\u307E\\u305B\\u308B\\u4ED5\\u7D44\\u307F\\u300D\\u306E\\u3053\\u3068\\u3092\\u6307\\u3059\\u8A00\\u8449\\u3067\\u3059\\u3002\\u305D\\u3057\\u3066\\u3001\\u30D5\\u30C3\\u30AF\\u3092\\u4F7F\\u3063\\u3066\\u72EC\\u81EA\\u306E\\u51E6\\u7406\\u3092\\u5272\\u308A\\u8FBC\\u307E\\u305B\\u308B\\u3053\\u3068\\u3092\\u300C\\u30D5\\u30C3\\u30AF\\u3059\\u308B\\u300D\\u3068\\u3082\\u8A00\\u3044\\u307E\\u3059\\u3002Windows\\u3067\\u306F\\u3001\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306B\\u5BFE\\u3059\\u308B\\u30AD\\u30FC\\u5165\\u529B\\u306A\\u3069\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8(\\u30A4\\u30D9\\u30F3\\u30C8)\\u3092\\u30D5\\u30C3\\u30AF\\u3059\\u308B\\u3053\\u3068\\u304C\\u51FA\\u6765\\u308B\\u4ED5\\u7D44\\u307F\\u304C\\u7528\\u610F\\u3055\\u308C\\u3066\\u304A\\u308A\\u3001\\u3053\\u306E\\u4ED5\\u7D44\\u307F\\u306F\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-setwindowshookexa\",rel:\"nofollow\",children:\"SetWindowsHookEx\"}),\" API\\u3092\\u901A\\u3058\\u3066\\u5229\\u7528\\u3059\\u308B\\u3053\\u3068\\u304C\\u51FA\\u6765\\u307E\\u3059\\u3002\\u4EE5\\u4E0B\\u304C\",(0,n.jsx)(e.code,{children:\"SetWindowsHookEx\"}),\" API\\u3092\\u4F7F\\u3063\\u305F\\u30DD\\u30FC\\u30EA\\u30F3\\u30B0\\u578B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u7C21\\u5358\\u306A\\u4F8B\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-C\",children:`HMODULE hHookLibrary = LoadLibraryW(L\"hook.dll\");\nFARPROC hookFunc = GetProcAddress(hHookLibrary, \"SaveTheKey\");\n\nHHOOK keyboardHook = NULL;\n    \nkeyboardHook = SetWindowsHookEx(WH_KEYBOARD_LL,\n                (HOOKPROC)hookFunc,\n                hHookLibrary,\n                0);\n`})}),`\n`,(0,n.jsxs)(e.ol,{start:\"3\",children:[`\n`,(0,n.jsx)(e.li,{children:\"Raw Input Model\\u3092\\u7528\\u3044\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u3053\\u306E\\u30BF\\u30A4\\u30D7\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u3001\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u306A\\u3069\\u306E\\u5165\\u529B\\u30C7\\u30D0\\u30A4\\u30B9\\u304B\\u3089\\u5F97\\u3089\\u308C\\u305F\\u3001\\u751F\\u306E\\u5165\\u529B\\u30C7\\u30FC\\u30BF(Raw Input)\\u3092\\u53D6\\u5F97\\u3057\\u3001\\u305D\\u308C\\u3092\\u4FDD\\u5B58\\u30FB\\u8A18\\u9332\\u3057\\u307E\\u3059\\u3002\\u3053\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u8A73\\u7D30\\u306B\\u3064\\u3044\\u3066\\u8AAC\\u660E\\u3059\\u308B\\u524D\\u306B\\u3001\\u307E\\u305AWindows\\u306B\\u304A\\u3051\\u308B\\u5165\\u529B\\u65B9\\u5F0F\\u3067\\u3042\\u308B\\u300COriginal Input Model\\u300D\\u3068\\u300CRaw Input Model\\u300D\\u306B\\u3064\\u3044\\u3066\\u7406\\u89E3\\u3059\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\u4EE5\\u4E0B\\u304C\\u305D\\u308C\\u305E\\u308C\\u306E\\u5165\\u529B\\u65B9\\u5F0F\\u306B\\u3064\\u3044\\u3066\\u306E\\u8AAC\\u660E\\u3067\\u3059\\u3002\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Original Input Model\"}),\":  \\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u306A\\u3069\\u306E\\u5165\\u529B\\u30C7\\u30D0\\u30A4\\u30B9\\u304B\\u3089\\u5165\\u529B\\u3055\\u308C\\u305F\\u30C7\\u30FC\\u30BF\\u3092\\u3001\\u4E00\\u5EA6OS\\u3092\\u4ECB\\u3057\\u3066\\u5FC5\\u8981\\u306A\\u51E6\\u7406\\u3092\\u3057\\u305F\\u5F8C\\u3001\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u5074\\u306B\\u5C4A\\u3051\\u308B\\u65B9\\u5F0F\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Raw Input Model\"}),\":  \\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u306A\\u3069\\u306E\\u5165\\u529B\\u30C7\\u30D0\\u30A4\\u30B9\\u304B\\u3089\\u5165\\u529B\\u3055\\u308C\\u305F\\u30C7\\u30FC\\u30BF\\u3092\\u3001\\u305D\\u306E\\u307E\\u307E\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u5074\\u304C\\u76F4\\u63A5\\u53D7\\u3051\\u53D6\\u308B\\u65B9\\u5F0F\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Windows\\u3067\\u306F\\u5F53\\u521D\\u3001Original Input Model\\u306E\\u307F\\u304C\\u4F7F\\u308F\\u308C\\u3066\\u3044\\u307E\\u3057\\u305F\\u3002\\u3057\\u304B\\u3057Windows XP\\u4EE5\\u964D\\u306B\\u3001\\u304A\\u305D\\u3089\\u304F\\u306F\\u5165\\u529B\\u30C7\\u30D0\\u30A4\\u30B9\\u306E\\u591A\\u69D8\\u5316\\u306A\\u3069\\u306E\\u8981\\u56E0\\u304B\\u3089\\u3001Raw Input Model\\u304C\\u5C0E\\u5165\\u3055\\u308C\\u307E\\u3057\\u305F\\u3002Raw Input Model\\u3067\\u306F\\u3001\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-registerrawinputdevices\",rel:\"nofollow\",children:(0,n.jsx)(e.code,{children:\"RegisterRawInputDevices\"})}),\" API\\u3092\\u4F7F\\u3044\\u3001\\u5165\\u529B\\u30C7\\u30FC\\u30BF\\u3092\\u76F4\\u63A5\\u53D7\\u3051\\u53D6\\u308A\\u305F\\u3044\\u5165\\u529B\\u30C7\\u30D0\\u30A4\\u30B9\\u3092\\u767B\\u9332\\u3057\\u307E\\u3059\\u3002\\u305D\\u3057\\u3066\\u305D\\u306E\\u5F8C\\u3001\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/nf-winuser-getrawinputdata\",rel:\"nofollow\",children:(0,n.jsx)(e.code,{children:\"GetRawInputData\"})}),`) API\\u3092\\u7528\\u3044\\u3066\\u751F\\u30C7\\u30FC\\u30BF\\u3092\\u53D6\\u5F97\\u3057\\u307E\\u3059\\u3002\n\\u4EE5\\u4E0B\\u304C\\u3053\\u308C\\u3089\\u306EAPI\\u3092\\u4F7F\\u3063\\u305F\\u3001Raw Input Model\\u3092\\u7528\\u3044\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u7C21\\u5358\\u306A\\u4F8B\\u3067\\u3059\\u3002`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-C\",children:`LRESULT CALLBACK WndProc(HWND hWnd, UINT uMessage, WPARAM wParam, LPARAM lParam)\n{\n\n    UINT dwSize = 0;\n    RAWINPUT* buffer = NULL;\n\n    switch (uMessage)\n    {\n    case WM_CREATE:\n        RAWINPUTDEVICE rid;\n        rid.usUsagePage = 0x01;  // HID_USAGE_PAGE_GENERIC\n        rid.usUsage = 0x06;      // HID_USAGE_GENERIC_KEYBOARD\n        rid.dwFlags = RIDEV_NOLEGACY | RIDEV_INPUTSINK;\n        rid.hwndTarget = hWnd;\n        RegisterRawInputDevices(\u0026rid, 1, sizeof(rid));\n        break;\n    case WM_INPUT:\n        GetRawInputData((HRAWINPUT)lParam, RID_INPUT, NULL,\n\u0026dwSize, sizeof(RAWINPUTHEADER));\n\n        buffer = (RAWINPUT*)HeapAlloc(GetProcessHeap(), 0, dwSize);\n\n        if (GetRawInputData((HRAWINPUT)lParam, RID_INPUT, buffer, \n\u0026dwSize, sizeof(RAWINPUTHEADER)))\n        {\n            if (buffer-\u003eheader.dwType == RIM_TYPEKEYBOARD)\n            {\n                SaveTheKey(buffer, \"log.txt\");\n            }\n        }\n        HeapFree(GetProcessHeap(), 0, buffer);\n        break;\n    default:\n        return DefWindowProc(hWnd, uMessage, wParam, lParam);\n    }\n    return 0;\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3053\\u306E\\u4F8B\\u3067\\u306F\\u3001\\u6700\\u521D\\u306B\\u751F\\u5165\\u529B\\u3092\\u53D7\\u3051\\u53D6\\u308A\\u305F\\u3044\\u5165\\u529B\\u30C7\\u30D0\\u30A4\\u30B9\\u3092\",(0,n.jsx)(e.code,{children:\"RegisterRawInputDevices\"}),\"\\u3092\\u7528\\u3044\\u3066\\u3001\\u767B\\u9332\\u3057\\u307E\\u3059\\u3002\\u3053\\u3053\\u3067\\u306F\\u3001\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u306E\\u751F\\u5165\\u529B\\u30C7\\u30FC\\u30BF\\u3092\\u53D7\\u3051\\u53D6\\u308B\\u3088\\u3046\\u306B\\u8A2D\\u5B9A\\u30FB\\u767B\\u9332\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsxs)(e.ol,{start:\"4\",children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"DirectInput\"}),\"\\u3092\\u7528\\u3044\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u6700\\u5F8C\\u306B\\u3001\",(0,n.jsx)(e.code,{children:\"DirectInput\"}),\"\\u3092\\u7528\\u3044\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306B\\u3064\\u3044\\u3066\\u8AAC\\u660E\\u3057\\u307E\\u3059\\u3002\\u3053\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306F\\u7C21\\u5358\\u306B\\u8A00\\u3048\\u3070Microsoft DirectX\\u306E\\u6A5F\\u80FD\\u3092\\u60AA\\u7528\\u3057\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3067\\u3059\\u3002DirectX\\u3068\\u306F\\u3001\\u30B2\\u30FC\\u30E0\\u3084\\u52D5\\u753B\\u306A\\u3069\\u306E\\u30DE\\u30EB\\u30C1\\u30E1\\u30C7\\u30A3\\u30A2\\u95A2\\u9023\\u306E\\u51E6\\u7406\\u3092\\u6271\\u3046\\u305F\\u3081\\u306EAPI\\u7FA4\\u306E\\u7DCF\\u79F0(\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA)\\u3067\\u3059\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u30B2\\u30FC\\u30E0\\u306B\\u304A\\u3044\\u3066\\u3001\\u30E6\\u30FC\\u30B6\\u304B\\u3089\\u5404\\u7A2E\\u5165\\u529B\\u304C\\u53D6\\u5F97\\u3067\\u304D\\u308B\\u3053\\u3068\\u306F\\u5FC5\\u9808\\u6A5F\\u80FD\\u3068\\u8A00\\u3063\\u3066\\u826F\\u3044\\u3053\\u3068\\u304B\\u3089\\u3001DirectX\\u306B\\u304A\\u3044\\u3066\\u3082\\u30E6\\u30FC\\u30B6\\u306E\\u5165\\u529B\\u3092\\u51E6\\u7406\\u3059\\u308BAPI\\u7FA4\\u304C\\u63D0\\u4F9B\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\\u305D\\u3057\\u3066\\u3001DirectX\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F38\\u4EE5\\u524D\\u306B\\u63D0\\u4F9B\\u3055\\u308C\\u3066\\u3044\\u305F\\u305D\\u308C\\u3089API\\u7FA4\\u306E\\u3053\\u3068\\u3092\\u300CDirectInput\\u300D\\u3068\\u547C\\u3073\\u307E\\u3059\\u3002\\u4EE5\\u4E0B\\u304C\",(0,n.jsx)(e.code,{children:\"DirectInput\"}),\"\\u306B\\u95A2\\u9023\\u3059\\u308BAPI\\u3092\\u4F7F\\u3063\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u7C21\\u5358\\u306A\\u4F8B\\u3067\\u3059\\u3002\\u88DC\\u8DB3\\u3067\\u3059\\u304C\\u3001\",(0,n.jsx)(e.code,{children:\"DirectInput\"}),\"\\u3092\\u7528\\u3044\\u3066\\u30AD\\u30FC\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u969B\\u3001\\u88CF\\u3067\\u306F\",(0,n.jsx)(e.code,{children:\"RegisterRawInputDevices\"}),\" API\\u304C\\u547C\\u3070\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-C\",children:`LPDIRECTINPUT8\t\tlpDI = NULL;\nLPDIRECTINPUTDEVICE8\tlpKeyboard = NULL;\n\nBYTE key[256];\nZeroMemory(key, sizeof(key));\n\nDirectInput8Create(hInstance, DIRECTINPUT_VERSION, IID_IDirectInput8, (LPVOID*)\u0026lpDI, NULL);\nlpDI-\u003eCreateDevice(GUID_SysKeyboard, \u0026lpKeyboard, NULL);\nlpKeyboard-\u003eSetDataFormat(\u0026c_dfDIKeyboard);\nlpKeyboard-\u003eSetCooperativeLevel(hwndMain, DISCL_FOREGROUND | DISCL_NONEXCLUSIVE | DISCL_NOWINKEY);\n\nwhile(true)\n{\n    HRESULT ret = lpKeyboard-\u003eGetDeviceState(sizeof(key), key);\n    if (FAILED(ret)) {\n        lpKeyboard-\u003eAcquire();\n        lpKeyboard-\u003eGetDeviceState(sizeof(key), key);\n    }\n  SaveTheKey(key, \"log.txt\");\t\n    Sleep(50);\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{id:\"windows-api\\u547C\\u3073\\u51FA\\u3057\\u3092\\u76E3\\u8996\\u3057\\u3066\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092\\u691C\\u51FA\\u3059\\u308B\",children:\"Windows API\\u547C\\u3073\\u51FA\\u3057\\u3092\\u76E3\\u8996\\u3057\\u3066\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092\\u691C\\u51FA\\u3059\\u308B\"}),`\n`,(0,n.jsx)(e.p,{children:\"Elastic Defend\\u3067\\u306F\\u3001Event Tracing for Windows (ETW \\u203B4)\\u3092\\u7528\\u3044\\u3066\\u3001\\u524D\\u8FF0\\u306E\\u7A2E\\u985E\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092\\u691C\\u77E5\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\\u3001\\u95A2\\u9023\\u3059\\u308BWindows API\\u7FA4\\u306E\\u547C\\u3073\\u51FA\\u3057\\u3092\\u76E3\\u8996\\u3057\\u3001\\u305D\\u306E\\u6319\\u52D5\\u306E\\u30ED\\u30B0\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u3053\\u3068\\u3067\\u5B9F\\u73FE\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\\u76E3\\u8996\\u3059\\u308BWindows API\\u7FA4\\u3068\\u3001\\u4ED8\\u968F\\u3057\\u3066\\u65B0\\u898F\\u306B\\u4F5C\\u6210\\u3057\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u306E\\u691C\\u77E5\\u30EB\\u30FC\\u30EB\\u306F\\u4EE5\\u4E0B\\u3067\\u3059\\u3002(\\u203B4 \\u4E00\\u8A00\\u3067\\u3044\\u3046\\u3068Windows\\u304C\\u63D0\\u4F9B\\u3059\\u308B\\u3001\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u3084\\u30C7\\u30D0\\u30A4\\u30B9\\u30C9\\u30E9\\u30A4\\u30D0\\u306A\\u3069\\u306E\\u30B7\\u30B9\\u30C6\\u30E0\\u5074\\u306E\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u3092\\u3001\\u30C8\\u30EC\\u30FC\\u30B9\\u304A\\u3088\\u3073\\u30ED\\u30AE\\u30F3\\u30B0\\u3059\\u308B\\u4ED5\\u7D44\\u307F\\u3002)\"}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u76E3\\u8996\\u3059\\u308Bwindows-api\\u7FA4\",children:\"\\u76E3\\u8996\\u3059\\u308BWindows API\\u7FA4:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getasynckeystate\",rel:\"nofollow\",children:\"GetAsyncKeyState\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowshookexw\",rel:\"nofollow\",children:\"SetWindowsHookEx\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerrawinputdevices\",rel:\"nofollow\",children:\"RegisterRawInputDevice\"})}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u8FFD\\u52A0\\u3057\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u691C\\u77E5\\u30EB\\u30FC\\u30EB\\u4E00\\u89A7\",children:\"\\u8FFD\\u52A0\\u3057\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u691C\\u77E5\\u30EB\\u30FC\\u30EB\\u4E00\\u89A7:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_getasynckeystate_api_call_from_suspicious_process.toml\",rel:\"nofollow\",children:\"GetAsyncKeyState API Call from Suspicious Process\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_getasynckeystate_api_call_from_unusual_process.toml\",rel:\"nofollow\",children:\"GetAsyncKeyState API Call from Unusual Process\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_directinput.toml\",rel:\"nofollow\",children:\"Keystroke Input Capture via DirectInput\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_registerrawinputdevices.toml\",rel:\"nofollow\",children:\"Keystroke Input Capture via RegisterRawInputDevices\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_messages_hooking_via_setwindowshookex.toml\",rel:\"nofollow\",children:\"Keystroke Messages Hooking via SetWindowsHookEx\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_a_managed_application.toml\",rel:\"nofollow\",children:\"Keystrokes Input Capture from a Managed Application\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_a_suspicious_module.toml\",rel:\"nofollow\",children:\"Keystrokes Input Capture from a Suspicious Module\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_suspicious_callstack.toml\",rel:\"nofollow\",children:\"Keystrokes Input Capture from Suspicious CallStack\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_from_unsigned_dll.toml\",rel:\"nofollow\",children:\"Keystrokes Input Capture from Unsigned DLL\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystrokes_input_capture_via_setwindowshookex.toml\",rel:\"nofollow\",children:\"Keystrokes Input Capture via SetWindowsHookEx\"})}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u65B0\\u898F\\u306B\\u8FFD\\u52A0\\u3057\\u305F\\u6A5F\\u80FD\\u304A\\u3088\\u3073\\u691C\\u77E5\\u30EB\\u30FC\\u30EB\\u306B\\u3088\\u308A\\u3001Elastic Defend\\u306B\\u3066\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u30FB\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u306E\\u5305\\u62EC\\u7684\\u306A\\u76E3\\u8996\\u3068\\u691C\\u51FA\\u304C\\u53EF\\u80FD\\u3068\\u306A\\u308A\\u3001\\u3053\\u308C\\u3089\\u306E\\u8105\\u5A01\\u306B\\u5BFE\\u3059\\u308BWindows\\u30A8\\u30F3\\u30C9\\u30DD\\u30A4\\u30F3\\u30C8\\u306E\\u30BB\\u30AD\\u30E5\\u30EA\\u30C6\\u30A3\\u3068\\u4FDD\\u8B77\\u306E\\u5F37\\u5316\\u3092\\u5B9F\\u73FE\\u3057\\u307E\\u3057\\u305F\\u3002\"}),`\n`,(0,n.jsx)(e.h3,{id:\"windows\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092\\u691C\\u77E5\\u3059\\u308B\",children:\"Windows\\u306E\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092\\u691C\\u77E5\\u3059\\u308B\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u6B21\\u306B\\u5B9F\\u969B\\u306E\\u691C\\u77E5\\u306E\\u69D8\\u5B50\\u3092\\u304A\\u898B\\u305B\\u3057\\u307E\\u3059\\u3002\\u4F8B\\u3068\\u3057\\u3066\\u3001Raw Input Model\\u3092\\u7528\\u3044\\u305F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092Elastic Defend\\u3067\\u691C\\u51FA\\u3057\\u3066\\u307F\\u307E\\u3059\\u3002\\u3053\\u3053\\u3067\\u306F\",(0,n.jsx)(e.code,{children:\"RegisterRawInputDevices\"}),\" API\\u3092\\u7528\\u3044\\u305F\\u7C21\\u6613\\u7684\\u306A\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u300CKeylogger.exe\\u300D\\u3092\\u7528\\u610F\\u3057\\u3001\\u30C6\\u30B9\\u30C8\\u74B0\\u5883\\u3067\\u5B9F\\u884C\\u3057\\u3066\\u307F\\u307E\\u3057\\u305F\\u203B5\\u3002(\\u203B5 \\u5B9F\\u884C\\u74B0\\u5883\\u306FWindows 10\\u306E\\u57F7\\u7B46\\u6642\\u70B9\\u306E\\u6700\\u65B0\\u7248\\u3067\\u3042\\u308BWindows 10 Version 22H2 19045.4412\\u3067\\u3059\\u3002)\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/assets/images/protecting-your-devices-from-information-theft-keylogger-protection/image1.png\",alt:\"Elastic Security\\u306E\\u30A2\\u30E9\\u30FC\\u30C8\",width:\"460\",height:\"192\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u3092\\u5B9F\\u884C\\u3057\\u305F\\u76F4\\u5F8C\\u306B\\u3001\\u691C\\u77E5\\u30EB\\u30FC\\u30EB(\",(0,n.jsxs)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/collection_keystroke_input_capture_via_registerrawinputdevices.toml\",rel:\"nofollow\",children:[\"Keystroke Input Capture via \",(0,n.jsx)(e.code,{children:\"RegisterRawInputDevices\"})]}),\")\\u304C\\u767A\\u52D5\\u3057\\u3001\\u30A8\\u30F3\\u30C9\\u30DD\\u30A4\\u30F3\\u30C8\\u5074\\u3067\\u30A2\\u30E9\\u30FC\\u30C8\\u304C\\u4E0A\\u304C\\u308A\\u307E\\u3057\\u305F\\u3002\\u3053\\u306E\\u30A2\\u30E9\\u30FC\\u30C8\\u306E\\u3055\\u3089\\u306A\\u308B\\u8A73\\u7D30\\u306FKibana\\u4E0A\\u304B\\u3089\\u898B\\u308B\\u3053\\u3068\\u304C\\u51FA\\u6765\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/assets/images/protecting-your-devices-from-information-theft-keylogger-protection/image3.png\",alt:\"Elastic Security\\u306E\\u30A2\\u30E9\\u30FC\\u30C8\\u30C0\\u30C3\\u30B7\\u30E5\\u30DC\\u30FC\\u30C9\",width:\"1440\",height:\"675\"})}),`\n`,(0,n.jsx)(e.p,{children:\"\\u4EE5\\u4E0B\\u304C\\u691C\\u77E5\\u30EB\\u30FC\\u30EB\\u306E\\u8A73\\u7D30\\u3067\\u3059\\u3002\\u691C\\u77E5\\u306B\\u4F7F\\u308F\\u308C\\u3066\\u3044\\u308BAPI\\u306E\\u90E8\\u5206\\u3092\\u4E2D\\u5FC3\\u306B\\u8AAC\\u660E\\u3057\\u307E\\u3059\\u3002\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-sql\",children:`query = '''\napi where\n process.Ext.api.name == \"RegisterRawInputDevices\" and not process.code_signature.status : \"trusted\" and\n process.Ext.api.parameters.usage : (\"HID_USAGE_GENERIC_KEYBOARD\", \"KEYBOARD\") and\n process.Ext.api.parameters.flags : \"*INPUTSINK*\" and process.thread.Ext.call_stack_summary : \"?*\" and\n process.thread.Ext.call_stack_final_user_module.hash.sha256 != null and process.executable != null and\n not process.thread.Ext.call_stack_final_user_module.path :\n                         (\"*\\\\\\\\program files*\", \"*\\\\\\\\windows\\\\\\\\system32\\\\\\\\*\", \"*\\\\\\\\windows\\\\\\\\syswow64\\\\\\\\*\",\n                          \"*\\\\\\\\windows\\\\\\\\systemapps\\\\\\\\*\",\n                          \"*\\\\\\\\users\\\\\\\\*\\\\\\\\appdata\\\\\\\\local\\\\\\\\*\\\\\\\\kumospace.exe\",\n                          \"*\\\\\\\\users\\\\\\\\*\\\\\\\\appdata\\\\\\\\local\\\\\\\\microsoft\\\\\\\\teams\\\\\\\\current\\\\\\\\teams.exe\") and \n not process.executable : (\"?:\\\\\\\\Program Files\\\\\\\\*.exe\", \"?:\\\\\\\\Program Files (x86)\\\\\\\\*.exe\")\n'''\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3053\\u306E\\u30A2\\u30E9\\u30FC\\u30C8\\u306F\\u7C21\\u5358\\u306B\\u8A00\\u3046\\u3068\\u300C\\u7F72\\u540D\\u3055\\u308C\\u3066\\u3044\\u306A\\u3044\\u30D7\\u30ED\\u30BB\\u30B9\\u300D\\u307E\\u305F\\u306F\\u300C\\u7F72\\u540D\\u3055\\u308C\\u3066\\u3044\\u308B\\u304C\\u3001\\u305D\\u306E\\u7F72\\u540D\\u8005\\u304C\\u4FE1\\u983C\\u3067\\u304D\\u306A\\u3044\\u30D7\\u30ED\\u30BB\\u30B9\\u300D\\u304C\\u3001\\u30AD\\u30FC\\u5165\\u529B\\u3092\\u53D6\\u5F97\\u3059\\u308B\\u76EE\\u7684\\u3067\",(0,n.jsx)(e.code,{children:\"RegisterRawInputDevices\"}),\"  API\\u3092\\u547C\\u3073\\u51FA\\u3057\\u305F\\u6642\\u306B\\u767A\\u305B\\u3089\\u308C\\u308B\\u30A2\\u30E9\\u30FC\\u30C8\\u3067\\u3059\\u3002\",(0,n.jsx)(e.code,{children:\"RegisterRawInputDevices\"}),\" API\\u304C\\u547C\\u3073\\u51FA\\u3055\\u308C\\u305F\\u969B\\u306E\\u5F15\\u6570\\u306E\\u60C5\\u5831\\u306B\\u7740\\u76EE\\u3057\\u3066\\u304A\\u308A\\u3001\\u3088\\u308A\\u5177\\u4F53\\u7684\\u306B\\u306FAPI\\u306E\\u7B2C\\u4E00\\u5F15\\u6570\\u3067\\u3042\\u308B\\u3001\",(0,n.jsx)(e.a,{href:\"https://learn.microsoft.com/ja-jp/windows/win32/api/winuser/ns-winuser-rawinputdevice\",rel:\"nofollow\",children:\"RAWINPUTDEVICE\"}),\"\\u69CB\\u9020\\u4F53\\u306E\\u30E1\\u30F3\\u30D0\\u306E\\u60C5\\u5831\\u3092\\u691C\\u77E5\\u306B\\u7528\\u3044\\u3066\\u3044\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u3053\\u306E\\u5F15\\u6570\\u306E\\u5024\\u304C\\u3001\\u30AD\\u30FC\\u30DC\\u30FC\\u30C9\\u5165\\u529B\\u306E\\u53D6\\u5F97\\u3092\\u8A66\\u307F\\u3066\\u3044\\u308B\\u3053\\u3068\\u3092\\u793A\\u3057\\u3066\\u3044\\u308B\\u5834\\u5408\\u3001\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304C\\u5B9F\\u884C\\u3055\\u308C\\u305F\\u3068\\u898B\\u306A\\u3057\\u3066\\u3001\\u30A2\\u30E9\\u30FC\\u30C8\\u3092\\u4E0A\\u3052\\u308B\\u3088\\u3046\\u306B\\u306A\\u3063\\u3066\\u3044\\u307E\\u3059\\u3002 \",(0,n.jsx)(e.code,{children:\"RegisterRawInputDevices\"}),\" API\\u306E\\u30ED\\u30B0\\u306FKibana\\u4E0A\\u3067\\u3082\\u78BA\\u8A8D\\u3067\\u304D\\u307E\\u3059\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/assets/images/protecting-your-devices-from-information-theft-keylogger-protection/image2.png\",alt:\"Kibana\\u4E0A\\u3067\\u78BA\\u8A8D\\u3067\\u304D\\u308BRegisterRawInputDevices API\\u30ED\\u30B0\",width:\"1440\",height:\"717\"})}),`\n`,(0,n.jsx)(e.h3,{id:\"\\u5404windows-api\\u306E\\u547C\\u3073\\u51FA\\u3057\\u306E\\u969B\\u306B\\u53D6\\u5F97\\u3057\\u3066\\u3044\\u308B\\u30C7\\u30FC\\u30BF\",children:\"\\u5404Windows API\\u306E\\u547C\\u3073\\u51FA\\u3057\\u306E\\u969B\\u306B\\u53D6\\u5F97\\u3057\\u3066\\u3044\\u308B\\u30C7\\u30FC\\u30BF\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5206\\u91CF\\u306E\\u90FD\\u5408\\u3067\\u3001\\u8FFD\\u52A0\\u3057\\u305F\\u3059\\u3079\\u3066\\u306E\\u691C\\u77E5\\u30EB\\u30FC\\u30EB\\u3068API\\u306E\\u8A73\\u7D30\\u306B\\u3064\\u3044\\u3066\\u306F\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u8AAC\\u660E\\u3057\\u307E\\u305B\\u3093\\u3002\\u3067\\u3059\\u304C\\u6700\\u5F8C\\u306B\\u3001\\u5BFE\\u8C61\\u306EWindows API\\u306E\\u547C\\u3073\\u51FA\\u3057\\u306E\\u969B\\u306BElastic Defend\\u5074\\u3067\\u53D6\\u5F97\\u3057\\u3066\\u3044\\u308B\\u30C7\\u30FC\\u30BF\\u306B\\u3064\\u3044\\u3066\\u3001\\u7C21\\u5358\\u306B\\u3054\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\\u5404\\u9805\\u76EE\\u306B\\u3064\\u3044\\u3066\\u3055\\u3089\\u306B\\u77E5\\u308A\\u305F\\u3044\\u65B9\\u306F\\u3001\",(0,n.jsx)(e.a,{href:\"https://github.com/elastic/endpoint-package/blob/main/custom_schemas/custom_api.yml\",rel:\"nofollow\",children:\"custom_api.yml\"}),\"\\u306B\\u8A18\\u8F09\\u3055\\u308C\\u3066\\u3044\\u308BElastic Common Schema\\uFF08ECS\\uFF09\\u3068\\u306E\\u30DE\\u30C3\\u30D4\\u30F3\\u30B0\\u3092\\u3054\\u53C2\\u7167\\u304F\\u3060\\u3055\\u3044\\u3002\"]}),`\n`,(0,n.jsx)(e.div,{className:\"table-container\",children:(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:\"API\\u540D\"}),(0,n.jsx)(e.th,{children:\"\\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\"}),(0,n.jsx)(e.th,{children:\"\\u8AAC\\u660E(\\u539F\\u6587\\u3092\\u65E5\\u672C\\u8A9E\\u8A33\\u3057\\u305F\\u3082\\u306E)\"}),(0,n.jsx)(e.th,{children:\"\\u4F8B\"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"GetAsyncKeyState\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.ms_since_last_keyevent\"}),(0,n.jsx)(e.td,{children:\"\\u3053\\u306E\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u30FC\\u306F\\u3001\\u6700\\u5F8C\\u306E GetAsyncKeyState \\u30A4\\u30D9\\u30F3\\u30C8\\u304B\\u3089\\u306E\\u7D4C\\u904E\\u6642\\u9593\\u3092\\u30DF\\u30EA\\u79D2\\u3067\\u793A\\u3057\\u307E\\u3059\\u3002\"}),(0,n.jsx)(e.td,{children:\"94\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"GetAsyncKeyState\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.background_callcount\"}),(0,n.jsx)(e.td,{children:\"\\u3053\\u306E\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u30FC\\u306F\\u3001\\u6700\\u5F8C\\u306B\\u6210\\u529F\\u3057\\u305F GetAsyncKeyState \\u547C\\u3073\\u51FA\\u3057\\u304B\\u3089\\u306E\\u9593\\u306B\\u884C\\u308F\\u308C\\u305F\\u3001\\u5931\\u6557\\u3057\\u305F\\u547C\\u3073\\u51FA\\u3057\\u3082\\u542B\\u3081\\u305F\\u3059\\u3079\\u3066\\u306E GetAsyncKeyState API \\u547C\\u3073\\u51FA\\u3057\\u306E\\u56DE\\u6570\\u3092\\u793A\\u3057\\u307E\\u3059\\u3002\"}),(0,n.jsx)(e.td,{children:\"6021\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"SetWindowsHookEx\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.parameters.hook_type\"}),(0,n.jsx)(e.td,{children:\"T\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3059\\u308B\\u30D5\\u30C3\\u30AF\\u306E\\u7A2E\\u985E\"}),(0,n.jsx)(e.td,{children:'\"WH_KEYBOARD_LL\"'})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"SetWindowsHookEx\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.parameters.hook_module\"}),(0,n.jsx)(e.td,{children:\"\\u30D5\\u30C3\\u30AF\\u5148\\u306E\\u51E6\\u7406\\u3092\\u4FDD\\u6709\\u3059\\u308BDLL\"}),(0,n.jsx)(e.td,{children:'\"c:\\\\windows\\\\system32\\\\taskbar.dll\"'})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"SetWindowsHookEx\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.parameters.procedure\"}),(0,n.jsx)(e.td,{children:\"\\u30D5\\u30C3\\u30AF\\u5148\\u3068\\u306A\\u308B\\u51E6\\u7406\\u3084\\u95A2\\u6570\\u306E\\u30E1\\u30E2\\u30EA\\u30A2\\u30C9\\u30EC\\u30B9\"}),(0,n.jsx)(e.td,{children:\"2431737462784\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"SetWindowsHookEx\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.procedure_symbol\"}),(0,n.jsx)(e.td,{children:\"\\u30D5\\u30C3\\u30AF\\u5148\\u306E\\u51E6\\u7406\\u306E\\u8981\\u7D04\"}),(0,n.jsx)(e.td,{children:'\"taskbar.dll\"'})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.return_value\"}),(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices API \\u547C\\u3073\\u51FA\\u3057\\u306E\\u623B\\u308A\\u5024\"}),(0,n.jsx)(e.td,{children:\"1\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.parameters.usage_page\"}),(0,n.jsx)(e.td,{children:\"\\u3053\\u306E\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u30FC\\u306F\\u30C7\\u30D0\\u30A4\\u30B9\\u306E\\u30C8\\u30C3\\u30D7\\u30EC\\u30D9\\u30EB\\u30B3\\u30EC\\u30AF\\u30B7\\u30E7\\u30F3\\uFF08Usage Page\\uFF09\\u3092\\u793A\\u3059\\u3002RAWINPUTDEVICE \\u69CB\\u9020\\u4F53\\u306E\\u6700\\u521D\\u306E\\u30E1\\u30F3\\u30D0\"}),(0,n.jsx)(e.td,{children:'\"GENERIC\"'})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.parameters.usage\"}),(0,n.jsx)(e.td,{children:\"\\u3053\\u306E\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u30FC\\u306F\\u3001Usage Page \\u5185\\u306E\\u7279\\u5B9A\\u306E\\u30C7\\u30D0\\u30A4\\u30B9\\uFF08Usage\\uFF09\\u3092\\u793A\\u3057\\u307E\\u3059\\u3002RAWINPUTDEVICE \\u69CB\\u9020\\u4F53\\u306E\\uFF12\\u756A\\u76EE\\u306E\\u30E1\\u30F3\\u30D0\"}),(0,n.jsx)(e.td,{children:'\"KEYBOARD\"'})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.parameters.flags\"}),(0,n.jsx)(e.td,{children:\"UsagePage\\u3068Usage\\u306B\\u3088\\u3063\\u3066\\u63D0\\u4F9B\\u3055\\u308C\\u308B\\u60C5\\u5831\\u3092\\u3069\\u306E\\u3088\\u3046\\u306B\\u89E3\\u91C8\\u3059\\u308B\\u304B\\u3092\\u6307\\u5B9A\\u3059\\u308B\\u30E2\\u30FC\\u30C9\\u30D5\\u30E9\\u30B0\\u3002RAWINPUTDEVICE \\u69CB\\u9020\\u4F53\\u306E\\uFF13\\u756A\\u76EE\\u306E\\u30E1\\u30F3\\u30D0\"}),(0,n.jsx)(e.td,{children:'\"INPUTSINK\"'})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.windows_count\"}),(0,n.jsx)(e.td,{children:\"\\u547C\\u3073\\u51FA\\u3057\\u5143\\u30B9\\u30EC\\u30C3\\u30C9\\u304C\\u6240\\u6709\\u3059\\u308B\\u30A6\\u30A3\\u30F3\\u30C9\\u30A6\\u306E\\u6570\"}),(0,n.jsx)(e.td,{children:\"2\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.visible_windows_count\"}),(0,n.jsx)(e.td,{children:\"\\u547C\\u3073\\u51FA\\u3057\\u5143\\u30B9\\u30EC\\u30C3\\u30C9\\u304C\\u6240\\u6709\\u3059\\u308B\\u8868\\u793A\\u3055\\u308C\\u3066\\u3044\\u308B\\u30A6\\u30A3\\u30F3\\u30C9\\u30A6\\u306E\\u6570\"}),(0,n.jsx)(e.td,{children:\"0\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.thread_info_flags\"}),(0,n.jsx)(e.td,{children:\"\\u30B9\\u30EC\\u30C3\\u30C9\\u306E\\u60C5\\u5831\\u3092\\u8868\\u3059\\u30D5\\u30E9\\u30B0\"}),(0,n.jsx)(e.td,{children:\"16\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.start_address_module\"}),(0,n.jsx)(e.td,{children:\"\\u30B9\\u30EC\\u30C3\\u30C9\\u306E\\u958B\\u59CB\\u30A2\\u30C9\\u30EC\\u30B9\\u306B\\u7D10\\u3065\\u304F\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306E\\u540D\\u524D\"}),(0,n.jsx)(e.td,{children:'\"C:\\\\Windows\\\\System32\\\\DellTPad\\\\ApMsgFwd.exe\"'})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"RegisterRawInputDevices\"}),(0,n.jsx)(e.td,{children:\"process.Ext.api.metadata.start_address_allocation_protection\"}),(0,n.jsx)(e.td,{children:\"\\u30B9\\u30EC\\u30C3\\u30C9\\u306E\\u958B\\u59CB\\u30A2\\u30C9\\u30EC\\u30B9\\u306B\\u7D10\\u3065\\u304F\\u30E1\\u30E2\\u30EA\\u4FDD\\u8B77\\u5C5E\\u6027\"}),(0,n.jsx)(e.td,{children:'\"RCX\"'})]})]})]})}),`\n`,(0,n.jsx)(e.h2,{id:\"\\u307E\\u3068\\u3081\",children:\"\\u307E\\u3068\\u3081\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u672C\\u8A18\\u4E8B\\u3067\\u306F\\u3001Elastic Defend 8.12\\u306B\\u3066\\u5C0E\\u5165\\u3055\\u308C\\u305F\\u3001Windows\\u74B0\\u5883\\u306B\\u304A\\u3051\\u308B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u304A\\u3088\\u3073\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u691C\\u77E5\\u6A5F\\u80FD\\u306B\\u3064\\u3044\\u3066\\u3054\\u7D39\\u4ECB\\u3057\\u307E\\u3057\\u305F\\u3002\\u5177\\u4F53\\u7684\\u306B\\u306F\\u3001\\u30AD\\u30FC\\u30ED\\u30AE\\u30F3\\u30B0\\u306B\\u95A2\\u9023\\u3059\\u308B\\u4EE3\\u8868\\u7684\\u306AWindows API\\u7FA4\\u306E\\u547C\\u3073\\u51FA\\u3057\\u3092\\u76E3\\u8996\\u3059\\u308B\\u3053\\u3068\\u3067\\u3001\\u30B7\\u30B0\\u30CD\\u30C1\\u30E3\\u306B\\u4F9D\\u5B58\\u3057\\u306A\\u3044\\u3001\\u632F\\u308B\\u821E\\u3044\\u691C\\u77E5\\u306B\\u3088\\u308B\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u691C\\u51FA\\u3092\\u5B9F\\u73FE\\u3057\\u307E\\u3057\\u305F\\u3002\\u7CBE\\u5EA6\\u3092\\u9AD8\\u3081\\u3001\\u8AA4\\u691C\\u77E5\\u7387\\u3092\\u6E1B\\u3089\\u3059\\u305F\\u3081\\u306B\\u3001\\u6570\\u30F6\\u6708\\u306B\\u308F\\u305F\\u308B\\u7814\\u7A76\\u30FB\\u8ABF\\u67FB\\u3092\\u3082\\u3068\\u306B\\u3053\\u306E\\u6A5F\\u80FD\\u3068\\u65B0\\u3057\\u3044\\u30EB\\u30FC\\u30EB\\u3092\\u958B\\u767A\\u3057\\u307E\\u3057\\u305F\\u3002\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Elastic Defend\\u3067\\u306F\\u30AD\\u30FC\\u30ED\\u30AC\\u30FC\\u95A2\\u9023\\u306EAPI\\u4EE5\\u5916\\u306B\\u3082\\u3001\\u653B\\u6483\\u8005\\u306B\\u4E00\\u822C\\u7684\\u306B\\u5229\\u7528\\u3055\\u308C\\u308B\\u30E1\\u30E2\\u30EA\\u64CD\\u4F5C\\u7B49\\u306E\",(0,n.jsx)(e.a,{href:\"https://www.elastic.co/security-labs/doubling-down-etw-callstacks\",rel:\"nofollow\",children:\"API\\u7FA4\\u306A\\u3069\\u3082\\u76E3\\u8996\\u3059\\u308B\\u3053\\u3068\"}),\"\\u3067\\u3001\\u591A\\u5C64\\u7684\\u306A\\u9632\\u5FA1\\u3092\\u5B9F\\u73FE\\u3057\\u3066\\u304A\\u308A\\u307E\\u3059\\u3002Elastic Security \\u304A\\u3088\\u3073 Elastic Defend\\u306B\\u3064\\u3044\\u3066\\u6C17\\u306B\\u306A\\u3063\\u305F\\u65B9\\u306F\\u305C\\u3072\",(0,n.jsx)(e.a,{href:\"https://www.elastic.co/jp/security\",rel:\"nofollow\",children:\"\\u88FD\\u54C1\\u30DA\\u30FC\\u30B8\"}),\"\\u3084\",(0,n.jsx)(e.a,{href:\"https://www.elastic.co/jp/videos/intro-elastic-security\",rel:\"nofollow\",children:\"\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\"}),\"\\u3092\\u5FA1\\u89A7\\u9802\\u3051\\u308C\\u3070\\u5E78\\u3044\\u3067\\u3059\\u3002\"]})]})}function E(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(d,t)})):d(t)}var R=E;return _(k);})();\n;return Component;"},"_id":"articles/protecting-your-devices-from-information-theft-keylogger-protection-jp.mdx","_raw":{"sourceFilePath":"articles/protecting-your-devices-from-information-theft-keylogger-protection-jp.mdx","sourceFileName":"protecting-your-devices-from-information-theft-keylogger-protection-jp.mdx","sourceFileDir":"articles","contentType":"mdx","flattenedPath":"articles/protecting-your-devices-from-information-theft-keylogger-protection-jp"},"type":"Article","imageUrl":"/assets/images/protecting-your-devices-from-information-theft-keylogger-protection-jp/Security Labs Images 10.jpg","readingTime":"6 min read","series":"","url":"/protecting-your-devices-from-information-theft-keylogger-protection-jp","headings":[{"level":2,"title":"はじめに","href":"#はじめに"},{"level":3,"title":"キーロガーとはなにか？どのような危険性があるのか？","href":"#キーロガーとはなにかどのような危険性があるのか"},{"level":3,"title":"いかにして入力した文字を盗み取っているのか？","href":"#いかにして入力した文字を盗み取っているのか"},{"level":2,"title":"Windows API呼び出しを監視してキーロガーを検出する","href":"#windows-api呼び出しを監視してキーロガーを検出する"},{"level":3,"title":"監視するWindows API群:","href":"#監視するwindows-api群"},{"level":3,"title":"追加したキーロガー検知ルール一覧:","href":"#追加したキーロガー検知ルール一覧"},{"level":3,"title":"Windowsのキーロガーを検知する","href":"#windowsのキーロガーを検知する"},{"level":3,"title":"各Windows APIの呼び出しの際に取得しているデータ","href":"#各windows-apiの呼び出しの際に取得しているデータ"},{"level":2,"title":"まとめ","href":"#まとめ"}],"author":[{"title":"Asuka Najakima","slug":"asuka-nakajima","description":"Senior Software Engineer, Elastic","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var o=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var _=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),d=(t,n)=\u003e{for(var e in n)o(t,e,{get:n[e],enumerable:!0})},s=(t,n,e,i)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let r of j(n))!l.call(t,r)\u0026\u0026r!==e\u0026\u0026o(t,r,{get:()=\u003en[r],enumerable:!(i=f(n,r))||i.enumerable});return t};var k=(t,n,e)=\u003e(e=t!=null?x(g(t)):{},s(n||!t||!t.__esModule?o(e,\"default\",{value:t,enumerable:!0}):e,t)),p=t=\u003es(o({},\"__esModule\",{value:!0}),t);var u=_((F,c)=\u003e{c.exports=_jsx_runtime});var D={};d(D,{default:()=\u003eC,frontmatter:()=\u003eM});var a=k(u()),M={title:\"Asuka Najakima\",description:\"Senior Software Engineer, Elastic\",slug:\"asuka-nakajima\"};function m(t){return(0,a.jsx)(a.Fragment,{})}function w(t={}){let{wrapper:n}=t.components||{};return n?(0,a.jsx)(n,Object.assign({},t,{children:(0,a.jsx)(m,t)})):m(t)}var C=w;return p(D);})();\n;return Component;"},"_id":"authors/asuka-nakajima.mdx","_raw":{"sourceFilePath":"authors/asuka-nakajima.mdx","sourceFileName":"asuka-nakajima.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/asuka-nakajima"},"type":"Author","imageUrl":"","url":"/authors/asuka-nakajima"}],"category":[{"title":"Security operations","slug":"security-operations","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),l=(t,e)=\u003e{for(var n in e)s(t,n,{get:e[n],enumerable:!0})},i=(t,e,n,a)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let o of p(e))!g.call(t,o)\u0026\u0026o!==n\u0026\u0026s(t,o,{get:()=\u003ee[o],enumerable:!(a=f(e,o))||a.enumerable});return t};var d=(t,e,n)=\u003e(n=t!=null?x(_(t)):{},i(e||!t||!t.__esModule?s(n,\"default\",{value:t,enumerable:!0}):n,t)),y=t=\u003ei(s({},\"__esModule\",{value:!0}),t);var u=j((b,c)=\u003e{c.exports=_jsx_runtime});var F={};l(F,{default:()=\u003eD,frontmatter:()=\u003eM});var r=d(u()),M={title:\"Security operations\",slug:\"security-operations\"};function m(t){return(0,r.jsx)(r.Fragment,{})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var D=C;return y(F);})();\n;return Component;"},"_id":"categories/security-operations.mdx","_raw":{"sourceFilePath":"categories/security-operations.mdx","sourceFileName":"security-operations.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/security-operations"},"type":"Category","url":"/categories/security-operations"},{"title":"Security research","slug":"security-research","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var l=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),d=(t,e)=\u003e{for(var r in e)s(t,r,{get:e[r],enumerable:!0})},c=(t,e,r,a)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let o of _(e))!j.call(t,o)\u0026\u0026o!==r\u0026\u0026s(t,o,{get:()=\u003ee[o],enumerable:!(a=f(e,o))||a.enumerable});return t};var h=(t,e,r)=\u003e(r=t!=null?x(g(t)):{},c(e||!t||!t.__esModule?s(r,\"default\",{value:t,enumerable:!0}):r,t)),p=t=\u003ec(s({},\"__esModule\",{value:!0}),t);var i=l((X,u)=\u003e{u.exports=_jsx_runtime});var D={};d(D,{default:()=\u003eC,frontmatter:()=\u003ey});var n=h(i()),y={title:\"Security research\",slug:\"security-research\"};function m(t){return(0,n.jsx)(n.Fragment,{})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(m,t)})):m(t)}var C=M;return p(D);})();\n;return Component;"},"_id":"categories/security-research.mdx","_raw":{"sourceFilePath":"categories/security-research.mdx","sourceFileName":"security-research.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/security-research"},"type":"Category","url":"/categories/security-research"},{"title":"Detection science","slug":"detection-science","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var c=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),l=(t,e)=\u003e{for(var n in e)c(t,n,{get:e[n],enumerable:!0})},i=(t,e,n,s)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let o of _(e))!g.call(t,o)\u0026\u0026o!==n\u0026\u0026c(t,o,{get:()=\u003ee[o],enumerable:!(s=f(e,o))||s.enumerable});return t};var p=(t,e,n)=\u003e(n=t!=null?x(d(t)):{},i(e||!t||!t.__esModule?c(n,\"default\",{value:t,enumerable:!0}):n,t)),D=t=\u003ei(c({},\"__esModule\",{value:!0}),t);var u=j((h,a)=\u003e{a.exports=_jsx_runtime});var X={};l(X,{default:()=\u003eF,frontmatter:()=\u003eM});var r=p(u()),M={title:\"Detection science\",slug:\"detection-science\"};function m(t){return(0,r.jsx)(r.Fragment,{})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var F=C;return D(X);})();\n;return Component;"},"_id":"categories/detection-science.mdx","_raw":{"sourceFilePath":"categories/detection-science.mdx","sourceFileName":"detection-science.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/detection-science"},"type":"Category","url":"/categories/detection-science"}]},"seriesArticles":null},"__N_SSG":true},"page":"/[slug]","query":{"slug":"protecting-your-devices-from-information-theft-keylogger-protection-jp"},"buildId":"dGrrQfBbQkqaleQ_11aBK","assetPrefix":"/security-labs","isFallback":false,"gsp":true,"scriptLoader":[]}</script></body></html>