
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="End of June 2021, Qrator Labs started to see signs of a new assaulting force on the Internet – a botnet of a new kind. That is a joint research we conducted together with Yandex to elaborate on the specifics of the DDoS attacks enabler emerging in almost real-time.">
    <title>Blog — Mēris botnet, climbing to the record</title>
    <link rel="shortcut icon" href="/dist/img/favicon.ico"/>
    <link rel="stylesheet" href="/dist/styles.css"/>
    <script>window.LOCALE = "en";</script>
    <script src="/dist/mathjax/MathJax.js?config=TeX-MML-AM_CHTML" async></script>
    <link rel="canonical" href="https://blog.qrator.net/en/meris-botnet-climbing-to-the-record_142/"/>
    
    
        <!-- Google Tag Manager -->
        <script>
            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-PFR7669N');
        </script>
    
    
</head>
<body>
    
        <!-- Google Tag Manager (noscript) -->
        <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PFR7669N" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    
    






<header class="header">
	<div class="header-top-bar">
		
	</div>
    <div class="header-middle-bar">
        <div class="header-middle-bar__container">
            
                <a href="https://qrator.net/" target="_blank" title="Qrator Labs">
                    <img src="/dist/img/logo-h.svg" class="logo" alt="" loading="lazy"/>
                </a>
            
        </div>
    </div>
	<div class="header-bottom-bar">
		<div class="header-bottom-bar__container">
			<nav>
				<div class="nav-item ">
					<a class="nav-item__title" href="/en/">
						<i class="material-icons">home</i>
						<span class="xs-hidden">Index</span>
					</a>
				</div>
				
				<div class="nav-item nav-item--active">
					<a class="nav-item__title" href="/en/qrator/">
						Qrator
					</a>
					
					<div class="nav-children" style="display: none;">
						<a href="/en/qrator/">
							Qrator
						</a>
						
						<a class="newsletter" href="/en/qrator/newsletter/">
							Newsletter
						</a>
						
					</div>
					
				</div>
				
				<div class="nav-item ">
					<a class="nav-item__title" href="/en/radar/">
						Radar
					</a>
					
				</div>
				
				<div class="nav-item ">
					<a class="nav-item__title" href="/en/ingress/">
						Ingress
					</a>
					
				</div>
				
				<div class="nav-item ">
					<a class="nav-item__title" href="/en/reports/">
						Reports
					</a>
					
				</div>
				
				<div class="nav-item ">
					<a class="nav-item__title" href="/en/features/">
						Features
					</a>
					
				</div>
				
			</nav>
			<a class="rss-link" type="application/rss+xml" target="_blank" href="/en/rss/">
				<i class="material-icons">rss_feed</i>
			</a>
		</div>
	</div>
</header>

    
    <div class="article-detail-layout">
        <div class="container">
            

<div class="article">
    <div class="article__published">
        <i class="material-icons">calendar_today</i>
        <span>Sept. 9, 2021, 9:13 a.m.</span>
    </div>
    <a
            href="/en/meris-botnet-climbing-to-the-record_142/"
            class="article__title">
        Mēris botnet, climbing to the record
    </a>
    <div class="article__categories">
        
        <a href="/en/qrator/">
            Qrator
        </a>
    </div>

    
    <div class="article__content richtext"><figure><img alt="" height="720" src="/app/media/uploads/2021/09/09/meris.png" width="1280" loading="lazy" />
<figcaption>&nbsp;</figcaption>
</figure>

<p><strong>Introduction</strong></p>

<p>For the last five years, there have virtually been almost no global-scale application-layer attacks.</p>

<p>During this period, the industry has learned how to cope with the high bandwidth network layer attacks, including amplification-based ones. It does not mean that botnets are now harmless.</p>

<p>End of June 2021, Qrator Labs started to see signs of a new assaulting force on the Internet &ndash; a botnet of a new kind. That is a joint research we conducted together with Yandex to elaborate on the specifics of the DDoS attacks enabler emerging in almost real-time.</p>

<p><strong>Discovery</strong></p>

<p>We see here a pretty substantial attacking force &ndash; dozens of thousands of host devices, growing. Separately, Qrator Labs saw the 30 000 host devices in actual numbers through several attacks, and Yandex collected the data about 56 000 attacking hosts.</p>

<p>However, we suppose the number to be higher &ndash; probably more than 200 000 devices, due to the rotation and absence of will to show the &quot;full force&quot; attacking at once. Moreover, all those being highly capable devices, not your typical IoT blinker connected to WiFi &ndash; here we speak of a botnet consisting of, with the highest probability, devices connected through the Ethernet connection &ndash; network devices, primarily.</p>

<p>Some people and organizations already called the botnet &quot;<em>a return of Mirai</em>&quot;, which we do not think to be accurate. Mirai possessed a higher number of compromised devices united under C2C, and it attacked mainly with volumetric traffic.</p>

<p>We have not seen the malicious code, and we are not ready to tell yet if it is somehow related to the Mirai family or not. We tend to think that it is not, since the devices it unites under one umbrella seems to be related to only one manufacturer &ndash; Mikrotik.</p>

<p>Another reason we wanted to name this particular botnet, operating under elusive C2C, with a different name &ndash;&nbsp;<strong>Mēris</strong>, which means &quot;Plague&quot; in the Latvian language. It seems appropriate and relatively close to Mirai in terms of pronunciation.</p>

<p><strong>Specific features of Mēris botnet:</strong></p>

<ul>
	<li>
	<p>Socks4 proxy at the affected device (unconfirmed, although Mikrotik devices&nbsp;<a href="https://wiki.mikrotik.com/wiki/Manual:IP/SOCKS"><u>use socks4</u></a>)</p>
	</li>
	<li>
	<p>Use of&nbsp;<a href="https://en.wikipedia.org/wiki/HTTP_pipelining"><u>HTTP pipelining</u></a>&nbsp;(http/1.1) technique for DDoS attacks (confirmed)</p>
	</li>
	<li>
	<p>Making the DDoS attacks themselves RPS-based (confirmed)</p>
	</li>
	<li>
	<p>Open port 5678 (confirmed)</p>
	</li>
</ul>

<p>We do not know precisely what particular vulnerabilities lead to the situation where Mikrotik devices are being compromised on such a large scale. Several records at the Mikrotik forum indicate that its customers experienced hacking attempts on older versions of RouterOS, particularly 6.40.1 from 2017. If this is correct and we see that old vulnerability still being active on thousands of devices being unpatched and unupgraded, this is horrible news. However, our data with Yandex indicates that this is not true &ndash; because the spectrum of RouterOS versions we see across this botnet varies from years old to recent. The largest share belongs to the version of firmware previous to the current Stable one.</p>

<figure><img alt="Version of RouterOS involved in DDoS attacks. 6.48.4 is the current “Stable” version" height="693" src="/app/media/uploads/2021/09/09/routeros-versions-of-devices-in-meris.png" title="Version of RouterOS involved in DDoS attacks. 6.48.4 is the current “Stable” version" width="1122" loading="lazy" />
<figcaption>Version of RouterOS involved in DDoS attacks. 6.48.4 is the current &ldquo;Stable&rdquo; version</figcaption>
</figure>

<p>It is also clear that this particular botnet is still growing. There is a suggestion that the botnet could grow in force through password brute-forcing, although we tend to neglect that as a slight possibility. That looks like some vulnerability that was either kept secret before the massive campaign&#39;s start or sold on the black market.</p>

<p>It is not our job to investigate the origins, so we must move on with our observations.</p>

<p>In the last couple of weeks, we have seen devastating attacks towards&nbsp;<a href="https://www.theregister.com/2021/09/03/nz_outage/">New Zealand</a>,&nbsp;<a href="https://blog.cloudflare.com/cloudflare-thwarts-17-2m-rps-ddos-attack-the-largest-ever-reported/">United States</a>&nbsp;and&nbsp;<a href="https://tass.com/economy/1333083">Russia</a>, which we all attribute to this botnet species. Now it can overwhelm almost any infrastructure, including some highly robust networks. All this is due to the enormous RPS power that it brings along.</p>

<p>It&#39;s been in the news lately about &quot;largest DDoS attack on Russian internet and Yandex&quot;, but we at Yandex saw a picture much bigger than that. Cloudflare recorded the first attacks of this type. Their blog post of August 19, 2021, mentioned the attack reaching 17M requests per second. We observed similar durations and distributions across countries and reported this information to Cloudflare.</p>

<figure><img alt="RPS graph of a DDoS attack on Yandex, September 5, 2021" height="680" src="/app/media/uploads/2021/09/09/wqdexkyojocos1dngme2rwdpcqw.png" title="RPS graph of a DDoS attack on Yandex, September 5, 2021" width="1100" loading="lazy" />
<figcaption>RPS graph of a DDoS attack on Yandex, September 5, 2021</figcaption>
</figure>

<p>Here is the history of attacks from the same botnet we recorded at Yandex:</p>

<ul>
	<li>
	<p>2021-08-07 - 5.2 M rps</p>
	</li>
	<li>
	<p>2021-08-09 - 6.5 M rps</p>
	</li>
	<li>
	<p>2021-08-29 - 9.6 M rps</p>
	</li>
	<li>
	<p>2021-08-31 - 10.9 M rps</p>
	</li>
	<li>
	<p>2021-09-05 - 21.8 M rps</p>
	</li>
</ul>

<p>Yandex&#39; security team members managed to establish a clear view of the botnet&#39;s internal structure. L2TP tunnels are used for internetwork communications. The number of infected devices, according to the botnet internals we&rsquo;ve seen, reaches 250 000.</p>

<p>How exactly did Yandex withstand such an enormous amount of requests per second?</p>

<p>At Yandex, incoming user traffic passes through several infrastructure components, operating at different ISO/OSI layers. The first component protects Yandex from SYN flood attacks. The following layers analyze incoming traffic in real-time. Based on the technical and network statistics, the system evaluates each request for a level of suspicion. Thanks to robust and well-maintained infrastructure, we quickly scaled our components horizontally after the first attack. We were able to cope with the most significant RPS attack in Internet history without switching to an IP banning mode.</p>

<p>The attacking sources (IP addresses), which are not spoofed, seem to predominantly have the same trait &ndash; open&nbsp;<strong>ports 2000 and 5678</strong>. Of course, many vendors put their services onto those particular ports. However, the specific combination of port 2000 &quot;Bandwidth test server&quot; and port 5678 &quot;Mikrotik Neighbor Discovery Protocol&quot; makes it almost impossible to ignore. Although Mikrotik uses UDP for its standard service on port 5678, an open TCP port is detected on compromised devices. This kind of disguise might be one of the reasons devices got hacked unnoticed by their owners.</p>

<p>Based on this intel, we decided to probe the TCP port 5678 with the help of Qrator.Radar. The results we have gathered were surprising and frightening at the same time.</p>

<figure><img alt="Distribution of open ports 5678. The darker the color is - the more there are devices" height="623" src="/app/media/uploads/2021/09/09/t5rlcrpy985jsb52i7rykdvfprw.png" title="Distribution of open ports 5678. The darker the color is - the more there are devices" width="1280" loading="lazy" />
<figcaption>Distribution of open ports 5678. The darker the color is - the more there are devices</figcaption>
</figure>

<p>It turns out that there are 328 723 active hosts on the Internet replying to the TCP probe on port 5678. Of course, not necessarily each of those is a vulnerable Mikrotik &ndash; there&nbsp;<a href="https://www.speedguide.net/port.php?port=5678"><u>is evidence</u></a>&nbsp;that Linksys devices also use TCP service on port 5678. There may be more, but at the same time, we have to assume that this number might represent the entire active botnet.</p>

<table>
	<tbody>
		<tr>
			<td>
			<p align="center"><strong>Country</strong></p>
			</td>
			<td>
			<p align="center"><strong>Hosts</strong></p>
			</td>
			<td>
			<p align="center"><strong>% of global</strong></p>
			</td>
		</tr>
		<tr>
			<td>
			<p>United States of America</p>
			</td>
			<td>
			<p>139930</p>
			</td>
			<td>
			<p>42.6%</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>China</p>
			</td>
			<td>
			<p>61994</p>
			</td>
			<td>
			<p>18.9%</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>Brazil</p>
			</td>
			<td>
			<p>9244</p>
			</td>
			<td>
			<p>2.8%</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>Indonesia</p>
			</td>
			<td>
			<p>7359</p>
			</td>
			<td>
			<p>2.2%</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>India</p>
			</td>
			<td>
			<p>6767</p>
			</td>
			<td>
			<p>2.1%</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>Hong Kong</p>
			</td>
			<td>
			<p>5225</p>
			</td>
			<td>
			<p>1.6%</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>Japan</p>
			</td>
			<td>
			<p>4928</p>
			</td>
			<td>
			<p>1.5%</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>Sweden</p>
			</td>
			<td>
			<p>4750</p>
			</td>
			<td>
			<p>1.4%</p>
			</td>
		</tr>
		<tr>
			<td>
			<p>South Africa</p>
			</td>
			<td>
			<p>4729</p>
			</td>
			<td>
			<p>1.4%</p>
			</td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>

<p>What is important, that an open port 2000 replies to the incoming connection with a \x01\x00\x00\x00 signature, which belongs to the RouterOS protocol. So it is not some random Bandwidth test server but an identifiable one.</p>

<p>Citing&nbsp;<a href="https://github.com/samm-git/btest-opensource"><u>https://github.com/samm-git/btest-opensource</u></a>:</p>

<p>&ldquo;There is no official protocol description, so everything was obtained using WireShark tool and RouterOS 6 running in the virtualbox, which was connecting to the real device.</p>

<p>Server always starts with &quot;hello&quot; (01:00:00:00) command after establishing TCP connection to port 2000. If UDP protocol is specified in the client TCP connection is still established.&rdquo;</p>

<p>Based on our observation, 60% of attackers have socks4 open on port 5678, and 90-95% have Bandwidth Test on port 2000.</p>

<figure><img alt="Top countries with Mēris botnet hosts from the record attack on Yandex" height="714" src="/app/media/uploads/2021/09/09/attacking-sources-by-country-1.png" title="Top countries with Mēris botnet hosts from the record attack on Yandex" width="1155" loading="lazy" />
<figcaption>Top countries with Mēris botnet hosts from the record attack on Yandex</figcaption>
</figure>

<p>The exploit of HTTP pipelining (in HTTP 1.1, in HTTP 2.0 it is &ldquo;multiplexing&rdquo;) makes mitigating such attacks a task that has been long forgotten. Because, first of all, network devices usually stand for legitimate users &ndash; one could not be sure if the endpoint is entirely compromised into a &ldquo;bot zombie&rdquo;, or there is a part of the bandwidth used in the attack traffic, with the rest being legitimate user traffic. Users that could be registered on a resource they are trying to reach.</p>

<figure><img alt="HTTP pipelining, Wikipedia" height="445" src="/app/media/dl/00abb28cfb9b7ca8f3e949f006851a0e.svg" title="HTTP pipelining, Wikipedia" width="640" loading="lazy" />
<figcaption>HTTP pipelining, Wikipedia</figcaption>
</figure>

<p>It means that front-end optimization could hurt even more by answering every particular network request, as the pipelining is basically about sending requests in batches to the aimed server, making him answer those trash batches of requests. Furthermore, we are speaking of HTTP requests, which already constitute the most computing power of a server, more so if we are talking about a secured connection, bearing the cryptographic load on top of usual requests.</p>

<p>Requests pipelining (in HTTP 1.1) is the primary source of trouble for anyone who meets that particular botnet. Although browsers do not usually use pipelining (except Pale Moon web browser,&nbsp;<a href="https://en.wikipedia.org/wiki/HTTP_pipelining#Implementation_in_web_browsers"><u>which does that</u></a>), bots do that. Moreover, it is easy to recognize and mitigate since the universally accepted TCP sequence is request-response and not the request-request-request-response.</p>

<p>What we see here is a &quot;quality vs quantity&quot; scenario. Because of the request pipelining technique, attackers could squeeze much more RPS than botnets usually do. It happened because traditional mitigation measures would, of course, block the source IP. However, some requests (about 10-20) left in the buffers are processed even after the IP is blocked.</p>

<p><strong>What to do in such a situation?</strong></p>

<p>Blacklists are still a thing. Since those attacks are not spoofed, every victim sees the attack origin as it is. Blocking it for a while should be enough to thwart the attack and not disturb the possible end-user.</p>

<p>Although it is, of course, unclear how the C2C owners for the Mēris botnet would act in the future &ndash; they could be taking advantage of the compromised devices, making 100% of its capacity (both bandwidth and processor wise) into their hands.</p>

<p>In this case, there is no other way other than blocking every consecutive request after the first one, preventing answering the pipelined requests.</p>

<p>If there is no DDoS attack mitigation at the targeted server whatsoever, (not only) request pipelining could turn into a disaster, as the attacker needs much less workforce to fill the RPS threshold for the victim. And it turns out that many were not ready for such a scenario.</p>

<p>We have contacted Mikrotik with the data we have gathered, trying to find a solution, or notify them of our observations, minimally, which we were able to do yesterday.</p>

<p>Last but not least &ndash; please, keep your network devices updated with the latest firmware possible all the time. It is about each router and modem, every internet-connected device and the future of the Internet as a whole. And change your passwords. Nobody knows yet if that&rsquo;s not the brute force against administration passwords &ndash; better be safe, than sorry.</p>

<p><strong>UPDATE:</strong><meta charset="utf-8" /></p>

<p>Mikrotik made an&nbsp;<a href="https://forum.mikrotik.com/viewtopic.php?f=21&amp;t=178417" target="_blank">official statement on Mēris botnet</a>, advising a local fix.</p>

<p>Also,&nbsp;<a href="https://radar.qrator.net/" target="_blank">Qrator.Radar team made an individual checker</a>, allowing to see if a particular IP address was involved in the attacks.</p>

<p><meta charset="utf-8" /></p></div>
    

    

    <div class="skin skin_birman">
        <div
                class="article__share-buttons social-likes"
                data-url="blog.qrator.net/en/meris-botnet-climbing-to-the-record_142/"
                data-title="Mēris botnet, climbing to the record">
            <div data-service="twitter">Twitter</div>
        </div>
    </div>
</div>

        </div>
    </div>

    <script src="/dist/bundle.js"></script>
    
</body>
</html>
