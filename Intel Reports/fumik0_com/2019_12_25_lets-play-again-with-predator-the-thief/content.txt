<!doctype html>
<html lang=en class="no-js">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<meta name="viewport" content="width=device-width, initial-scale=1.0">

<title>Let&#8217;s play (again) with Predator the thief &#8211; Fumik0_&#039;s box</title>
<meta name='robots' content='max-image-preview:large' />
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<link rel='dns-prefetch' href='//secure.gravatar.com' />
<link rel='dns-prefetch' href='//stats.wp.com' />
<link rel='dns-prefetch' href='//fonts-api.wp.com' />
<link rel='dns-prefetch' href='//widgets.wp.com' />
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//0.gravatar.com' />
<link rel='dns-prefetch' href='//1.gravatar.com' />
<link rel='dns-prefetch' href='//2.gravatar.com' />
<link rel='dns-prefetch' href='//jetpack.wordpress.com' />
<link rel='dns-prefetch' href='//public-api.wordpress.com' />
<link rel='preconnect' href='//i0.wp.com' />
<link rel='preconnect' href='//c0.wp.com' />
<link rel="alternate" type="application/rss+xml" title="Fumik0_&#039;s box &raquo; Feed" href="https://fumik0.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Fumik0_&#039;s box &raquo; Comments Feed" href="https://fumik0.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Fumik0_&#039;s box &raquo; Let&#8217;s play (again) with Predator the thief Comments Feed" href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/fumik0.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.7.1"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://c0.wp.com/c/6.7.1/wp-includes/css/dist/block-library/style.min.css' type='text/css' media='all' />
<style id='wp-block-library-inline-css' type='text/css'>
.has-text-align-justify{text-align:justify;}
</style>
<link rel='stylesheet' id='mediaelement-css' href='https://c0.wp.com/c/6.7.1/wp-includes/js/mediaelement/mediaelementplayer-legacy.min.css' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css' href='https://c0.wp.com/c/6.7.1/wp-includes/js/mediaelement/wp-mediaelement.min.css' type='text/css' media='all' />
<style id='jetpack-sharing-buttons-style-inline-css' type='text/css'>
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
</style>
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-family--albert-sans: 'Albert Sans', sans-serif;--wp--preset--font-family--alegreya: Alegreya, serif;--wp--preset--font-family--arvo: Arvo, serif;--wp--preset--font-family--bodoni-moda: 'Bodoni Moda', serif;--wp--preset--font-family--bricolage-grotesque: 'Bricolage Grotesque', sans-serif;--wp--preset--font-family--cabin: Cabin, sans-serif;--wp--preset--font-family--chivo: Chivo, sans-serif;--wp--preset--font-family--commissioner: Commissioner, sans-serif;--wp--preset--font-family--cormorant: Cormorant, serif;--wp--preset--font-family--courier-prime: 'Courier Prime', monospace;--wp--preset--font-family--crimson-pro: 'Crimson Pro', serif;--wp--preset--font-family--dm-mono: 'DM Mono', monospace;--wp--preset--font-family--dm-sans: 'DM Sans', sans-serif;--wp--preset--font-family--dm-serif-display: 'DM Serif Display', serif;--wp--preset--font-family--domine: Domine, serif;--wp--preset--font-family--eb-garamond: 'EB Garamond', serif;--wp--preset--font-family--epilogue: Epilogue, sans-serif;--wp--preset--font-family--fahkwang: Fahkwang, sans-serif;--wp--preset--font-family--figtree: Figtree, sans-serif;--wp--preset--font-family--fira-sans: 'Fira Sans', sans-serif;--wp--preset--font-family--fjalla-one: 'Fjalla One', sans-serif;--wp--preset--font-family--fraunces: Fraunces, serif;--wp--preset--font-family--gabarito: Gabarito, system-ui;--wp--preset--font-family--ibm-plex-mono: 'IBM Plex Mono', monospace;--wp--preset--font-family--ibm-plex-sans: 'IBM Plex Sans', sans-serif;--wp--preset--font-family--ibarra-real-nova: 'Ibarra Real Nova', serif;--wp--preset--font-family--instrument-serif: 'Instrument Serif', serif;--wp--preset--font-family--inter: Inter, sans-serif;--wp--preset--font-family--josefin-sans: 'Josefin Sans', sans-serif;--wp--preset--font-family--jost: Jost, sans-serif;--wp--preset--font-family--libre-baskerville: 'Libre Baskerville', serif;--wp--preset--font-family--libre-franklin: 'Libre Franklin', sans-serif;--wp--preset--font-family--literata: Literata, serif;--wp--preset--font-family--lora: Lora, serif;--wp--preset--font-family--merriweather: Merriweather, serif;--wp--preset--font-family--montserrat: Montserrat, sans-serif;--wp--preset--font-family--newsreader: Newsreader, serif;--wp--preset--font-family--noto-sans-mono: 'Noto Sans Mono', sans-serif;--wp--preset--font-family--nunito: Nunito, sans-serif;--wp--preset--font-family--open-sans: 'Open Sans', sans-serif;--wp--preset--font-family--overpass: Overpass, sans-serif;--wp--preset--font-family--pt-serif: 'PT Serif', serif;--wp--preset--font-family--petrona: Petrona, serif;--wp--preset--font-family--piazzolla: Piazzolla, serif;--wp--preset--font-family--playfair-display: 'Playfair Display', serif;--wp--preset--font-family--plus-jakarta-sans: 'Plus Jakarta Sans', sans-serif;--wp--preset--font-family--poppins: Poppins, sans-serif;--wp--preset--font-family--raleway: Raleway, sans-serif;--wp--preset--font-family--roboto: Roboto, sans-serif;--wp--preset--font-family--roboto-slab: 'Roboto Slab', serif;--wp--preset--font-family--rubik: Rubik, sans-serif;--wp--preset--font-family--rufina: Rufina, serif;--wp--preset--font-family--sora: Sora, sans-serif;--wp--preset--font-family--source-sans-3: 'Source Sans 3', sans-serif;--wp--preset--font-family--source-serif-4: 'Source Serif 4', serif;--wp--preset--font-family--space-mono: 'Space Mono', monospace;--wp--preset--font-family--syne: Syne, sans-serif;--wp--preset--font-family--texturina: Texturina, serif;--wp--preset--font-family--urbanist: Urbanist, sans-serif;--wp--preset--font-family--work-sans: 'Work Sans', sans-serif;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}.has-albert-sans-font-family{font-family: var(--wp--preset--font-family--albert-sans) !important;}.has-alegreya-font-family{font-family: var(--wp--preset--font-family--alegreya) !important;}.has-arvo-font-family{font-family: var(--wp--preset--font-family--arvo) !important;}.has-bodoni-moda-font-family{font-family: var(--wp--preset--font-family--bodoni-moda) !important;}.has-bricolage-grotesque-font-family{font-family: var(--wp--preset--font-family--bricolage-grotesque) !important;}.has-cabin-font-family{font-family: var(--wp--preset--font-family--cabin) !important;}.has-chivo-font-family{font-family: var(--wp--preset--font-family--chivo) !important;}.has-commissioner-font-family{font-family: var(--wp--preset--font-family--commissioner) !important;}.has-cormorant-font-family{font-family: var(--wp--preset--font-family--cormorant) !important;}.has-courier-prime-font-family{font-family: var(--wp--preset--font-family--courier-prime) !important;}.has-crimson-pro-font-family{font-family: var(--wp--preset--font-family--crimson-pro) !important;}.has-dm-mono-font-family{font-family: var(--wp--preset--font-family--dm-mono) !important;}.has-dm-sans-font-family{font-family: var(--wp--preset--font-family--dm-sans) !important;}.has-dm-serif-display-font-family{font-family: var(--wp--preset--font-family--dm-serif-display) !important;}.has-domine-font-family{font-family: var(--wp--preset--font-family--domine) !important;}.has-eb-garamond-font-family{font-family: var(--wp--preset--font-family--eb-garamond) !important;}.has-epilogue-font-family{font-family: var(--wp--preset--font-family--epilogue) !important;}.has-fahkwang-font-family{font-family: var(--wp--preset--font-family--fahkwang) !important;}.has-figtree-font-family{font-family: var(--wp--preset--font-family--figtree) !important;}.has-fira-sans-font-family{font-family: var(--wp--preset--font-family--fira-sans) !important;}.has-fjalla-one-font-family{font-family: var(--wp--preset--font-family--fjalla-one) !important;}.has-fraunces-font-family{font-family: var(--wp--preset--font-family--fraunces) !important;}.has-gabarito-font-family{font-family: var(--wp--preset--font-family--gabarito) !important;}.has-ibm-plex-mono-font-family{font-family: var(--wp--preset--font-family--ibm-plex-mono) !important;}.has-ibm-plex-sans-font-family{font-family: var(--wp--preset--font-family--ibm-plex-sans) !important;}.has-ibarra-real-nova-font-family{font-family: var(--wp--preset--font-family--ibarra-real-nova) !important;}.has-instrument-serif-font-family{font-family: var(--wp--preset--font-family--instrument-serif) !important;}.has-inter-font-family{font-family: var(--wp--preset--font-family--inter) !important;}.has-josefin-sans-font-family{font-family: var(--wp--preset--font-family--josefin-sans) !important;}.has-jost-font-family{font-family: var(--wp--preset--font-family--jost) !important;}.has-libre-baskerville-font-family{font-family: var(--wp--preset--font-family--libre-baskerville) !important;}.has-libre-franklin-font-family{font-family: var(--wp--preset--font-family--libre-franklin) !important;}.has-literata-font-family{font-family: var(--wp--preset--font-family--literata) !important;}.has-lora-font-family{font-family: var(--wp--preset--font-family--lora) !important;}.has-merriweather-font-family{font-family: var(--wp--preset--font-family--merriweather) !important;}.has-montserrat-font-family{font-family: var(--wp--preset--font-family--montserrat) !important;}.has-newsreader-font-family{font-family: var(--wp--preset--font-family--newsreader) !important;}.has-noto-sans-mono-font-family{font-family: var(--wp--preset--font-family--noto-sans-mono) !important;}.has-nunito-font-family{font-family: var(--wp--preset--font-family--nunito) !important;}.has-open-sans-font-family{font-family: var(--wp--preset--font-family--open-sans) !important;}.has-overpass-font-family{font-family: var(--wp--preset--font-family--overpass) !important;}.has-pt-serif-font-family{font-family: var(--wp--preset--font-family--pt-serif) !important;}.has-petrona-font-family{font-family: var(--wp--preset--font-family--petrona) !important;}.has-piazzolla-font-family{font-family: var(--wp--preset--font-family--piazzolla) !important;}.has-playfair-display-font-family{font-family: var(--wp--preset--font-family--playfair-display) !important;}.has-plus-jakarta-sans-font-family{font-family: var(--wp--preset--font-family--plus-jakarta-sans) !important;}.has-poppins-font-family{font-family: var(--wp--preset--font-family--poppins) !important;}.has-raleway-font-family{font-family: var(--wp--preset--font-family--raleway) !important;}.has-roboto-font-family{font-family: var(--wp--preset--font-family--roboto) !important;}.has-roboto-slab-font-family{font-family: var(--wp--preset--font-family--roboto-slab) !important;}.has-rubik-font-family{font-family: var(--wp--preset--font-family--rubik) !important;}.has-rufina-font-family{font-family: var(--wp--preset--font-family--rufina) !important;}.has-sora-font-family{font-family: var(--wp--preset--font-family--sora) !important;}.has-source-sans-3-font-family{font-family: var(--wp--preset--font-family--source-sans-3) !important;}.has-source-serif-4-font-family{font-family: var(--wp--preset--font-family--source-serif-4) !important;}.has-space-mono-font-family{font-family: var(--wp--preset--font-family--space-mono) !important;}.has-syne-font-family{font-family: var(--wp--preset--font-family--syne) !important;}.has-texturina-font-family{font-family: var(--wp--preset--font-family--texturina) !important;}.has-urbanist-font-family{font-family: var(--wp--preset--font-family--urbanist) !important;}.has-work-sans-font-family{font-family: var(--wp--preset--font-family--work-sans) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='bootstrap-css' href='https://fumik0.com/wp-content/themes/mynote/assets/css/bootstrap.min.css?ver=4.1.0' type='text/css' media='all' />
<link rel='stylesheet' id='fontawesome-css' href='https://fumik0.com/wp-content/themes/mynote/assets/css/fontawesome-all.min.css?ver=5.1.0' type='text/css' media='all' />
<link rel='stylesheet' id='mynote-font-roboto-css' href='https://fonts-api.wp.com/css?family=Roboto%3A300%2C400&#038;ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='mynote-css' href='https://fumik0.com/wp-content/themes/mynote/style.css?ver=1.3.6' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_likes-css' href='https://fumik0.com/wp-content/plugins/jetpack/modules/likes/style.css?ver=14.2-a.3' type='text/css' media='all' />
<link rel='stylesheet' id='subscription-modal-css-css' href='https://fumik0.com/wp-content/plugins/jetpack/modules/comments/subscription-modal-on-comment/subscription-modal.css?ver=14.2-a.3' type='text/css' media='all' />
<link rel='stylesheet' id='tablepress-default-css' href='https://fumik0.com/wp-content/plugins/tablepress/css/build/default.css?ver=2.4.3' type='text/css' media='all' />
<link rel='stylesheet' id='hcb-style-css' href='https://fumik0.com/wp-content/plugins/highlighting-code-block/build/css/hcb_style.css?ver=1.2.9' type='text/css' media='all' />
<style id='hcb-style-inline-css' type='text/css'>
.hcb_wrap pre.prism{font-size: 15px}@media screen and (max-width: 599px){.hcb_wrap pre.prism{font-size: 15px}}.hcb_wrap pre:not([data-file]):not([data-show-lang])::before{ content: none;}.hcb_wrap pre{-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;}.hcb_wrap pre{font-family:Menlo, Consolas, "Hiragino Kaku Gothic ProN", "Hiragino Sans", Meiryo, sans-serif;}
</style>
<link rel='stylesheet' id='hcb-coloring-css' href='https://fumik0.com/wp-content/plugins/highlighting-code-block/build/css/coloring_dark.css?ver=1.2.9' type='text/css' media='all' />
<style id='jetpack-global-styles-frontend-style-inline-css' type='text/css'>
:root { --font-headings: unset; --font-base: unset; --font-headings-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; --font-base-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;}
</style>
<link rel='stylesheet' id='sharedaddy-css' href='https://fumik0.com/wp-content/plugins/jetpack/modules/sharedaddy/sharing.css?ver=14.2-a.3' type='text/css' media='all' />
<link rel='stylesheet' id='social-logos-css' href='https://fumik0.com/wp-content/plugins/jetpack/_inc/social-logos/social-logos.min.css?ver=14.2-a.3' type='text/css' media='all' />
<script type="text/javascript" src="https://c0.wp.com/c/6.7.1/wp-includes/js/jquery/jquery.min.js" id="jquery-core-js"></script>
<script type="text/javascript" src="https://c0.wp.com/c/6.7.1/wp-includes/js/jquery/jquery-migrate.min.js" id="jquery-migrate-js"></script>
<script type="text/javascript" src="https://fumik0.com/wp-content/themes/mynote/assets/js/bootstrap.bundle.min.js?ver=4.1.0" id="bootstrap-js"></script>
<script type="text/javascript" id="jetpack-mu-wpcom-settings-js-before">
/* <![CDATA[ */
var JETPACK_MU_WPCOM_SETTINGS = {"assetsUrl":"https:\/\/fumik0.com\/wp-content\/mu-plugins\/wpcomsh\/vendor\/automattic\/jetpack-mu-wpcom\/src\/build\/"};
/* ]]> */
</script>
<link rel="https://api.w.org/" href="https://fumik0.com/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://fumik0.com/wp-json/wp/v2/posts/994" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://fumik0.com/xmlrpc.php?rsd" />

<link rel="canonical" href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/" />
<link rel='shortlink' href='https://wp.me/p9vZjq-g2' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://fumik0.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Ffumik0.com%2F2019%2F12%2F25%2Flets-play-again-with-predator-the-thief%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://fumik0.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Ffumik0.com%2F2019%2F12%2F25%2Flets-play-again-with-predator-the-thief%2F&#038;format=xml" />
	<style>img#wpstats{display:none}</style>
		<style id="mynote-customizer">
@media (max-width: 768px) {
.footer-columns { text-align: center !important; }
.footer-columns .footer-column-left { text-align: center !important; }
}
.scroll-area { display: block !important; }
body.menu-is-collapsed .header { background: rgba(20, 25, 29, 1) !important; }

</style><meta name="description" content="Whenever I reverse a sample, I am mostly interested in how it was developed, even if in the end the techniques employed are generally the same, I am always curious about what was the way to achieve a task, or just simply understand the code philosophy of a piece of code. It is a very&hellip;" />
<link rel="amphtml" href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/amp/">
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Let&#8217;s play (again) with Predator the thief" />
<meta property="og:url" content="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/" />
<meta property="og:description" content="Whenever I reverse a sample, I am mostly interested in how it was developed, even if in the end the techniques employed are generally the same, I am always curious about what was the way to achieve…" />
<meta property="article:published_time" content="2019-12-25T19:49:49+00:00" />
<meta property="article:modified_time" content="2019-12-25T20:14:26+00:00" />
<meta property="og:site_name" content="Fumik0_&#039;s box" />
<meta property="og:image" content="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pred_logo.png?fit=953%2C469&#038;ssl=1" />
<meta property="og:image:width" content="953" />
<meta property="og:image:height" content="469" />
<meta property="og:image:alt" content="" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:text:title" content="Let&#8217;s play (again) with Predator the thief" />
<meta name="twitter:image" content="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pred_logo.png?fit=953%2C469&#038;ssl=1&#038;w=640" />
<meta name="twitter:card" content="summary_large_image" />

<!-- End Jetpack Open Graph Tags -->
<link rel="icon" href="https://i0.wp.com/fumik0.com/wp-content/uploads/2018/05/saber.jpeg?fit=32%2C26&#038;ssl=1" sizes="32x32" />
<link rel="icon" href="https://i0.wp.com/fumik0.com/wp-content/uploads/2018/05/saber.jpeg?fit=192%2C156&#038;ssl=1" sizes="192x192" />
<link rel="apple-touch-icon" href="https://i0.wp.com/fumik0.com/wp-content/uploads/2018/05/saber.jpeg?fit=180%2C146&#038;ssl=1" />
<meta name="msapplication-TileImage" content="https://i0.wp.com/fumik0.com/wp-content/uploads/2018/05/saber.jpeg?fit=249%2C202&#038;ssl=1" />

</head>
<body class="post-template-default single single-post postid-994 single-format-standard has-site-icon lets-play-again-with-predator-the-thief">
	<div class="wrapper">
		<header class="header clear" role="banner">
			<div class="container">
				<nav class="navbar navbar-expand-lg navbar-dark " role="navigation">
										<a class="navbar-brand" href="https://fumik0.com">
						<img src="https://i0.wp.com/fumik0.com/wp-content/uploads/2018/05/saber.jpeg?fit=32%2C26&#038;ssl=1" alt="Logo" class="logo-img">
					</a>
					
											<div id="mynote-nav-bar" class="collapse navbar-collapse"><ul id="menu-primary" class="navbar-nav mr-auto"><li  id="menu-item-8"class="nav-item"><a href="/" class="nav-link">Home</a></li><li  id="menu-item-595"class="nav-item"><a href="http://tracker.fumik0.com" class="nav-link">Tracker</a></li><li  id="menu-item-786"class="nav-item"><a href="https://twitter.com/fumik0_" class="nav-link">Twitter</a></li><li  id="menu-item-9"class="nav-item"><a href="https://fumik0.com/about/" class="nav-link">About</a></li><li  id="menu-item-10"class="nav-item"><a href="https://fumik0.com/contact/" class="nav-link">Contact</a></li></ul></div>					
					<div class="search-bar">
						
<form id="search-form" class="search" method="get" action="https://fumik0.com" role="search" autocomplete="off">
	<input type="text" name="s" class="search-input" placeholder="To search, type and hit enter.">
	<span class="search-icon" onclick="document.getElementById('search-form').submit();"><i class="fas fa-search"></i></span>
</form>


					</div>
					
					<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mynote-nav-bar" aria-controls="mynote-nav-bar" aria-expanded="false" aria-label="Toggle navigation">
						<span class="navbar-toggler-icon"></span>
					</button>
				</nav>
			</div><!-- .container -->
		</header>


		

		<div class="single-post-title-bar clear" role="banner">
			<div class="container">
				<nav class="navbar navbar-expand-lg navbar-dark" role="navigation">
					<a class="navbar-brand" href="https://fumik0.com"></a>
					<div id="progress-title"></div>
				</nav>
			</div>
			<div class="progress-wrapper">
				<div class="progress-label"></div>
				<progress></progress>
			</div>
		</div>
	
<div class="data-schema is-single" itemscope itemtype="http://schema.org/Article">
											<nav class="breadcrumb">
			<div class="container">
				<ul class="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList">
					<li class="breadcrumb-item" itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
						<a href="https://fumik0.com" itemprop="item">
							<span itemprop="name"><i class="fas fa-globe"></i><span class="sr-only">Home</span></span>
						</a>
						<meta itemprop="position" content="1">
					</li>
										<li class="breadcrumb-item" itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
						<a href="https://fumik0.com/category/botnet/" itemprop="item">
							<span itemprop="name">botnet</span>
						</a>
						<meta itemprop="position" content="2">
					</li>
															<li class="breadcrumb-item active" itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
						<span itemprop="name">Let&#8217;s play (again) with Predator the thief</span>
						<meta itemprop="item" content="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/">
						<meta itemprop="position" content="3">
					</li>
				</ul>
			</div>
		</nav>
		
			<div class="single-post-header">
				<div class="container">

					<h1 id="post-title" itemprop="headline">Let&#8217;s play (again) with Predator the thief</h1>
					<div class="post-mynote-buttons">

															<div class="btn-group column-control">
			<div class="btn-counter text-only active" data-target="#aside-container" role="button">		
				<div class="btn"><i class="fas fa-columns"></i></div>
			</div>
			<div class="btn-counter text-only" data-target="#sidebar" role="button">		
				<div class="btn"><i class="fas fa-list-ul"></i></div>
			</div> 
		</div>
							
												
		<a href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/#comments" class="button-like-link">
			<div class="btn-counter">
				<div class="btn">
					<i class="fas fa-comment-dots"></i>
				</div>
				<div class="count-box">2</div>
			</div>
		</a>
						</div><!-- .post-mynote-buttons -->

											<div class="post-meta">
							<div class="author-posted-date"><img src="https://secure.gravatar.com/avatar/60460a1a0d00b32720a59ee2624bb4aa?s=40&#038;d=identicon&#038;r=g" class="rounded-circle poster-avatar" align="middle"> <a href="https://fumik0.com/author/fumko/" title="written December 25, 2019 @ 7:49 pm" class="author-link">fumko</a> <time itemprop="datePublished" datetime="2019-12-25T19:49:49+00:00">written 5 years ago</time></div>						</div>
					
				</div><!-- .container -->
			</div><!-- .single-post-header -->

			
	<div class="container">
		<div class="row row-layout-choice-post">
			<main id="main-container" class="col-lg-8 col-md-8 col-sm-12" role="main">

				
					
						
						<article id="post-994" class="markdown-body post-994 post type-post status-publish format-standard has-post-thumbnail hentry category-botnet category-reverse">

																	<figure>
			<img src="https://fumik0.com/wp-content/uploads/2019/12/pred_logo.png" class="attachment- size- wp-post-image" alt="" itemprop="image" decoding="async" fetchpriority="high" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pred_logo.png?w=953&amp;ssl=1 953w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pred_logo.png?resize=300%2C148&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pred_logo.png?resize=768%2C378&amp;ssl=1 768w" sizes="(max-width: 953px) 100vw, 953px" data-attachment-id="1017" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/pred_logo/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pred_logo.png?fit=953%2C469&amp;ssl=1" data-orig-size="953,469" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="pred_logo" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pred_logo.png?fit=300%2C148&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pred_logo.png?fit=900%2C443&amp;ssl=1" />			<figcaption></figcaption>
		</figure>
								
							<div itemprop="articleBody">
								<p>Whenever I reverse a sample, I am mostly interested in how it was developed, even if in the end the techniques employed are generally the same, I am always curious about what was the way to achieve a task, or just simply understand the code philosophy of a piece of code. It is a very nice way to spot different trending and discovering (sometimes) new tricks that you never know it was possible to do. This is one of the main reasons, I love digging mostly into stealers/clippers for their accessibility for being reversed, and enjoying malware analysis as a kind of game (unless some exceptions like Nymaim that is literally hell).</p>
<p>It&#8217;s been 1 year and a half now that I start looking into &#8220;Predator The Thief&#8221;, and this malware has evolved over time in terms of content added and code structure. This impression could be totally different from others in terms of stealing tasks performed, but based on my first in-depth analysis,, the code has changed too much and it was necessary to make another post on it.</p>
<p>This one will focus on some major aspects of the 3.3.2 version, but will not explain everything (because some details have already been mentioned in other papers,  some subjects are known). Also, times to times I will add some extra commentary about malware analysis in general.</p>
<h2>Anti-Disassembly</h2>
<p>When you open an unpacked binary in IDA or other disassembler software like GHIDRA, there is an amount of code that is not interpreted correctly which leads to rubbish code, the incapacity to construct instructions or showing some graph. Behind this, it&#8217;s obvious that an anti-disassembly trick is used.</p>
<p><img data-recalc-dims="1" decoding="async" data-attachment-id="874" data-permalink="https://fumik0.com/predator_anti_analysis_02/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_02.png?fit=1072%2C534&amp;ssl=1" data-orig-size="1072,534" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_anti_analysis_02" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_02.png?fit=300%2C149&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_02.png?fit=900%2C448&amp;ssl=1" class="  wp-image-874 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_02.png?resize=636%2C317&#038;ssl=1" alt="predator_anti_analysis_02" width="636" height="317" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_02.png?w=1072&amp;ssl=1 1072w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_02.png?resize=300%2C149&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_02.png?resize=768%2C383&amp;ssl=1 768w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_02.png?resize=1024%2C510&amp;ssl=1 1024w" sizes="(max-width: 636px) 100vw, 636px" /></p>
<p>The technique exploited here is known and used in the wild by other malware, it requires just a few opcodes to process and leads at the end at the creation of a false branch. In this case, it begins with a simple xor instruction that focuses on configuring the zero flag and forcing the JZ jump condition to work no matter what, so, at this stage, it&#8217;s understandable that something suspicious is in progress. Then the MOV opcode (0xB8) next to the jump is a 5 bytes instruction and disturbing the disassembler to consider that this instruction is the right one to interpret beside that the correct opcode is inside this one, and in the end, by choosing this wrong path malicious tasks are hidden.</p>
<p>Of course, fixing this issue is simple, and required just a few seconds. For example with IDA, you need to undefine the MOV instruction by pressing the keyboard shortcut &#8220;U&#8221;, to produce this pattern.</p>
<p><img data-recalc-dims="1" decoding="async" data-attachment-id="875" data-permalink="https://fumik0.com/predator_anti_analysis_03/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_03.png?fit=1137%2C321&amp;ssl=1" data-orig-size="1137,321" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_anti_analysis_03" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_03.png?fit=300%2C85&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_03.png?fit=900%2C254&amp;ssl=1" class=" size-full wp-image-875 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_03.png?resize=900%2C254&#038;ssl=1" alt="predator_anti_analysis_03" width="900" height="254" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_03.png?w=1137&amp;ssl=1 1137w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_03.png?resize=300%2C85&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_03.png?resize=768%2C217&amp;ssl=1 768w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_03.png?resize=1024%2C289&amp;ssl=1 1024w" sizes="(max-width: 900px) 100vw, 900px" /></p>
<p>Then skip the 0xB8 opcode, and pushing on &#8220;C&#8221; at the 0xE8 position, to configure the disassembler to interpret instruction at this point.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="876" data-permalink="https://fumik0.com/predator_anti_analysis_04/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_04.png?fit=1089%2C209&amp;ssl=1" data-orig-size="1089,209" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_anti_analysis_04" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_04.png?fit=300%2C58&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_04.png?fit=900%2C173&amp;ssl=1" class=" size-full wp-image-876 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_04.png?resize=900%2C173&#038;ssl=1" alt="predator_anti_analysis_04" width="900" height="173" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_04.png?w=1089&amp;ssl=1 1089w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_04.png?resize=300%2C58&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_04.png?resize=768%2C147&amp;ssl=1 768w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_analysis_04.png?resize=1024%2C197&amp;ssl=1 1024w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>Replacing the 0xB8 opcode by 0x90. with a hexadecimal editor, will fix the issue. Opening again the patched PE, you will see that IDA is now able to even show the graph mode.</p>
<p>After patching it, there are still some parts that can&#8217;t be correctly parsed by the disassembler, but after reading some of the code locations, some of them are correct, so if you want to create a function, you can select the &#8220;loc&#8221; section then pushed on &#8220;P&#8221; to create a sub-function, of course, this action could lead to some irreversible thing if you are not sure about your actions and end to restart again the whole process to remove a the ant-disassembly tricks, so this action must be done only at last resort.</p>
<h2>Code Obfuscation</h2>
<p>Whenever you are analyzing Predator, you know that you will have to deal with some obfuscation tricks almost everywhere just for slowing down your code analysis. Of course, they are not complicated to assimilate, but as always, simple tricks used at their finest could turn a simple fun afternoon to literally &#8220;welcome to Dark Souls&#8221;. The concept was already there in the first in-depth analysis of this malware, and the idea remains over and over with further updates on it. The only differences are easy to guess :</p>
<ul>
<li>More layers of obfuscation have been added</li>
<li>Techniques already used are just adjusted.</li>
<li>More dose of randomness</li>
</ul>
<p>As a reversing point of view, I am considering this part as one the main thing to recognized this stealer, even if of course, you can add network communication and C&amp;C pattern as other ways for identifying it, inspecting the code is one way to clarify doubts (and I understand that this statement is for sure not working for every malware), but the idea is that nowadays it&#8217;s incredibly easy to make mistakes by being dupe by rules or tags on sandboxes, due to similarities based on code-sharing, or just literally creating false flag.</p>
<h4>GetModuleAddress</h4>
<p>Already there in a previous analysis, recreating the GetProcAddress is a popular trick to hide an API call behind a simple register call. Over the updates, the main idea is still there but the main procedures have been modified, reworked or slightly optimized.</p>
<p>First of all, we recognized easily the PEB retrieved by spotting fs[0x30] behind some extra instructions.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="894" data-permalink="https://fumik0.com/predator_getmodulehandle_01/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_01.png?fit=827%2C111&amp;ssl=1" data-orig-size="827,111" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_getmodulehandle_01" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_01.png?fit=300%2C40&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_01.png?fit=827%2C111&amp;ssl=1" class=" size-full wp-image-894 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_01.png?resize=827%2C111&#038;ssl=1" alt="predator_getmodulehandle_01" width="827" height="111" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_01.png?w=827&amp;ssl=1 827w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_01.png?resize=300%2C40&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_01.png?resize=768%2C103&amp;ssl=1 768w" sizes="auto, (max-width: 827px) 100vw, 827px" /></p>
<p>then from it, the loader data section is requested for two things:</p>
<ul>
<li>Getting the InLoadOrderModuleList pointer</li>
<li>Getting the InMemoryOrderModuleList pointer</li>
</ul>
<p>For those who are unfamiliar by this, basically, the PEB_LDR_DATA is a structure is where is stored all the information related to the loaded modules of the process.</p>
<p>Then, a loop is performing a basic search on every entry of the module list but in &#8220;memory order&#8221; on the loader data, by retrieving the module name, generating a hash of it and when it&#8217;s done, it is compared with a hardcoded obfuscated hash of the kernel32 module and obviously, if it matches, the module base address is saved, if it&#8217;s not, the process is repeated again and again.</p>
<div id="attachment_893" style="width: 837px" class="wp-caption aligncenter"><img data-recalc-dims="1" loading="lazy" decoding="async" aria-describedby="caption-attachment-893" data-attachment-id="893" data-permalink="https://fumik0.com/predator_getmodulehandle_02/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_02.png?fit=860%2C206&amp;ssl=1" data-orig-size="860,206" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_getmodulehandle_02" data-image-description="" data-image-caption="&lt;p&gt;The XOR kernel32 hashes compared with the one created&lt;/p&gt;
" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_02.png?fit=300%2C72&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_02.png?fit=860%2C206&amp;ssl=1" class="alignnone  wp-image-893" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_02.png?resize=827%2C197&#038;ssl=1" alt="predator_getmodulehandle_02" width="827" height="197" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_02.png?w=860&amp;ssl=1 860w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_02.png?resize=300%2C72&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getmodulehandle_02.png?resize=768%2C184&amp;ssl=1 768w" sizes="auto, (max-width: 827px) 100vw, 827px" /><p id="caption-attachment-893" class="wp-caption-text">The XOR kernel32 hashes compared with the one created</p></div>
<p>Nowadays, using hashes for a function name or module name is something that you can see in many other malware, purposes are multiple and this is one of the ways to hide some actions. An example of this code behavior could be found easily on the internet and as I said above, this one is popular and already used.</p>
<h4>GetProcAddress / GetLoadLibrary</h4>
<p>Always followed by GetModuleAddress, the code for recreating GetProcAddress is by far the same architecture model than the v2, in term of the concept used. If the function is forwarded, it will basically perform a recursive call of itself by getting the forward address, checking if the library is loaded then call GetProcAddress again with new values.</p>
<h4>Xor everything</h4>
<p>It&#8217;s almost unnecessary to talk about it, but as in-depth analysis, if you have never read the other article before, it&#8217;s always worth to say some words on the subject (as a reminder). The XOR encryption is a common cipher that required a rudimentary implementation for being effective :</p>
<ul>
<li>Only one operator is used (XOR)</li>
<li>it&#8217;s not consuming resources.</li>
<li>It could be used as a component of other ciphers</li>
</ul>
<p>This one is extremely popular in malware and the goal is not really to produce strong encryption because it&#8217;s ridiculously easy to break most of the time, they are used for hiding information or keywords that could be triggering alerts, rules&#8230;</p>
<ul>
<li>Communication between host &amp; server</li>
<li>Hiding strings</li>
<li>Or&#8230; simply used as an absurd step for obfuscating the code</li>
<li>etc&#8230;</li>
</ul>
<p>A typical example in Predator could be seeing huge blocks with only two instructions (XOR &amp; MOV), where stacks strings are decrypted X bytes per X bytes by just moving content on a temporary value (stored on EAX), XORed then pushed back to EBP, and the principle is reproduced endlessly again and again. This is rudimentary, In this scenario, it&#8217;s just part of the obfuscation process heavily abused by predator, for having an absurd amount of instruction for simple things.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="883" data-permalink="https://fumik0.com/predator_xor_01/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_xor_01-3767657766-1573242230846.png?fit=599%2C364&amp;ssl=1" data-orig-size="599,364" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_xor_01" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_xor_01-3767657766-1573242230846.png?fit=300%2C182&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_xor_01-3767657766-1573242230846.png?fit=599%2C364&amp;ssl=1" class=" size-full wp-image-883 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_xor_01-3767657766-1573242230846.png?resize=599%2C364&#038;ssl=1" alt="predator_xor_01" width="599" height="364" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_xor_01-3767657766-1573242230846.png?w=599&amp;ssl=1 599w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_xor_01-3767657766-1573242230846.png?resize=300%2C182&amp;ssl=1 300w" sizes="auto, (max-width: 599px) 100vw, 599px" /></p>
<p>Also for some cases, When a hexadecimal/integer value is required for an API call, it could be possible to spot another pattern of a hardcoded string moved to a register then only one XOR instruction is performed for revealing the correct value, this trivial thing is used for some specific cases like the correct position in the TEB for retrieving the PEB, an RVA of a specific module, &#8230;</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="908" data-permalink="https://fumik0.com/predator_ntsetinformationthread/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-3160877546-1575022768563.png?fit=941%2C89&amp;ssl=1" data-orig-size="941,89" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_ntsetinformationthread" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-3160877546-1575022768563.png?fit=300%2C28&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-3160877546-1575022768563.png?fit=900%2C85&amp;ssl=1" class=" size-full wp-image-908 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-3160877546-1575022768563.png?resize=900%2C85&#038;ssl=1" alt="predator_ntsetinformationthread" width="900" height="85" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-3160877546-1575022768563.png?w=941&amp;ssl=1 941w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-3160877546-1575022768563.png?resize=300%2C28&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-3160877546-1575022768563.png?resize=768%2C73&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>Finally, the most common one, there is also the classic one used by using a for loop for a one key length XOR key, seen for decrypting modules, functions, and other things&#8230;</p>
<pre>str = ... # encrypted string

for i, s in enumerate(str):
  s[i] = s[i] ^ s[len(str)-1]</pre>
<h4>Sub everything</h4>
<p>Let&#8217;s consider this as a perfect example of &#8220;let&#8217;s do the same exact thing by just changing one single instruction&#8221;, so in the end, a new encryption method is used with no effort for the development. That&#8217;s how a SUB instruction is used for doing the substitution cipher. The only difference that I could notice it&#8217;s how the key is retrieved.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="890" data-permalink="https://fumik0.com/predator_sub_02/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_sub_02.png?fit=1088%2C276&amp;ssl=1" data-orig-size="1088,276" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_sub_02" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_sub_02.png?fit=300%2C76&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_sub_02.png?fit=900%2C229&amp;ssl=1" class=" size-full wp-image-890 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_sub_02.png?resize=900%2C228&#038;ssl=1" alt="predator_sub_02" width="900" height="228" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_sub_02.png?w=1088&amp;ssl=1 1088w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_sub_02.png?resize=300%2C76&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_sub_02.png?resize=1024%2C260&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_sub_02.png?resize=768%2C195&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>Besides having something hardcoded directly, a signed 32-bit division is performed, easily noticeable by the use of cdq &amp; idiv instructions, then the dl register (the remainder) is used for the substitution.</p>
<h4>Stack Strings</h4>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="951" data-permalink="https://fumik0.com/stack-strings/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/stack-strings.png?fit=809%2C876&amp;ssl=1" data-orig-size="809,876" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="stack strings" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/stack-strings.png?fit=277%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/stack-strings.png?fit=809%2C876&amp;ssl=1" class=" size-full wp-image-951 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/stack-strings.png?resize=809%2C876&#038;ssl=1" alt="stack strings" width="809" height="876" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/stack-strings.png?w=809&amp;ssl=1 809w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/stack-strings.png?resize=277%2C300&amp;ssl=1 277w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/stack-strings.png?resize=768%2C832&amp;ssl=1 768w" sizes="auto, (max-width: 809px) 100vw, 809px" /></p>
<h4>What&#8217;s the result in the end?</h4>
<p>Merging these obfuscation techniques leads to a nonsense amount of instructions for a basic task, which will obviously burn you some hours of analysis if you don&#8217;t take some time for cleaning a bit all that mess with the help of some scripts or plenty other ideas, that could trigger in your mind. It could be nice to see these days some scripts released by the community.</p>
<div id="attachment_905" style="width: 913px" class="wp-caption aligncenter"><img data-recalc-dims="1" loading="lazy" decoding="async" aria-describedby="caption-attachment-905" data-attachment-id="905" data-permalink="https://fumik0.com/predator_main/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_main.png?fit=903%2C1105&amp;ssl=1" data-orig-size="903,1105" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_main" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_main.png?fit=245%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_main.png?fit=837%2C1024&amp;ssl=1" class=" size-full wp-image-905 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_main.png?resize=900%2C1101&#038;ssl=1" alt="predator_main" width="900" height="1101" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_main.png?w=903&amp;ssl=1 903w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_main.png?resize=245%2C300&amp;ssl=1 245w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_main.png?resize=837%2C1024&amp;ssl=1 837w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_main.png?resize=768%2C940&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /><p id="caption-attachment-905" class="wp-caption-text">Simple tricks lead to nonsense code</p></div>
<h2>Anti-Debug</h2>
<p>There are plenty of techniques abused here that was not in the first analysis, this is not anymore a simple PEB.BeingDebugged or checking if you are running a virtual machine, so let&#8217;s dig into them. one per one except CheckRemoteDebugger! This one is enough to understand by itself :&#8217;)</p>
<p><strong>NtSetInformationThread</strong></p>
<p>One of the oldest tricks in windows and still doing its work over the years. Basically in a very simple way (because there is a lot thing happening during the process), NtSetInformationThread is called with a value (0x11) obfuscated by a XOR operator. This parameter is a ThreadInformationClass with a specific enum called ThreadHideFromDebugger and when it&#8217;s executed, the debugger is not able to catch any debug information. So the supposed pointer to the corresponding thread is, of course, the malware and when you are analyzing it with a debugger, it will result to detach itself.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="914" data-permalink="https://fumik0.com/predator_ntsetinformationthread-2/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-1.png?fit=941%2C217&amp;ssl=1" data-orig-size="941,217" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_ntsetinformationthread" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-1.png?fit=300%2C69&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-1.png?fit=900%2C208&amp;ssl=1" class=" size-full wp-image-914 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-1.png?resize=900%2C208&#038;ssl=1" alt="predator_ntsetinformationthread" width="900" height="208" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-1.png?w=941&amp;ssl=1 941w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-1.png?resize=300%2C69&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_ntsetinformationthread-1.png?resize=768%2C177&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<h4>CloseHandle/NtClose</h4>
<p>Inside WinMain, a huge function is called with a lot of consecutive anti-debug tricks, they were almost all indirectly related to some techniques patched by TitanHide (or strongly looks like), the first one performed is a really basic one, but pretty efficient to do the task.</p>
<p>Basically, when CloseHandle is called with an inexistent handle or an invalid one, it will raise an exception and whenever you have a debugger attached to the process, it will not like that at all. To guarantee that it&#8217;s not an issue for a normal interaction a simple __try / __except method is used, so if this API call is requested, it will safely lead to the end without any issue.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="909" data-permalink="https://fumik0.com/predator_closehandle/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_closehandle.png?fit=1092%2C198&amp;ssl=1" data-orig-size="1092,198" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_closehandle" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_closehandle.png?fit=300%2C54&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_closehandle.png?fit=900%2C163&amp;ssl=1" class=" size-full wp-image-909 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_closehandle.png?resize=900%2C163&#038;ssl=1" alt="predator_closehandle" width="900" height="163" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_closehandle.png?w=1092&amp;ssl=1 1092w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_closehandle.png?resize=300%2C54&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_closehandle.png?resize=1024%2C186&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_closehandle.png?resize=768%2C139&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>The invalid handle used here is a static one and it&#8217;s L33T code with the value <em>0xBAADAA55 </em>and makes me bored as much as this face.</p>
<dl id="attachment_923" class="wp-caption aligncenter" style="width: 470px;">
<dt class="wp-caption-dt"><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="923" data-permalink="https://fumik0.com/not_amused/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/not_amused.jpg?fit=1280%2C720&amp;ssl=1" data-orig-size="1280,720" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="not_amused" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/not_amused.jpg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/not_amused.jpg?fit=900%2C506&amp;ssl=1" class="  wp-image-923 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/not_amused.jpg?resize=470%2C264&#038;ssl=1" alt="not_amused" width="470" height="264" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/not_amused.jpg?w=1280&amp;ssl=1 1280w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/not_amused.jpg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/not_amused.jpg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/not_amused.jpg?resize=768%2C432&amp;ssl=1 768w" sizes="auto, (max-width: 470px) 100vw, 470px" /></dt>
</dl>
<p>That&#8217;s not a surprise to see stuff like this from the malware developer. Inside jokes, l33t values, animes and probably other content that I missed are something usual to spot on Predator.</p>
<p><strong>ProcessDebugObjectHandle</strong></p>
<p>When you are debugging a process, Microsoft Windows is creating a &#8220;Debug&#8221; object and a handle corresponding to it. At this point, when you want to check if this object exists on the process, NtQueryInformationProcess is used with the ProcessInfoClass initialized by  0x1e (that is in fact, ProcessDebugObjectHandle).</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="925" data-permalink="https://fumik0.com/predator_antidebug/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_antidebug.png?fit=772%2C230&amp;ssl=1" data-orig-size="772,230" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_antidebug" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_antidebug.png?fit=300%2C89&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_antidebug.png?fit=772%2C230&amp;ssl=1" class=" size-full wp-image-925 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_antidebug.png?resize=772%2C230&#038;ssl=1" alt="predator_antidebug" width="772" height="230" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_antidebug.png?w=772&amp;ssl=1 772w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_antidebug.png?resize=300%2C89&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_antidebug.png?resize=768%2C229&amp;ssl=1 768w" sizes="auto, (max-width: 772px) 100vw, 772px" /></p>
<p>In this case, the NTStatus value (returning result by the API call) is an error who as the ID 0xC0000353, aka STATUS_PORT_NOT_SET. This means, <em>&#8220;An attempt to remove a process&#8217;s DebugPort was made, but a port was not already associated with the process.&#8221;. </em>The anti-debug trick is to verify if this error is there, that&#8217;s all.</p>
<p><strong>NtGetContextThread</strong></p>
<p>This one is maybe considered as pretty wild if you are not familiar with some hardware breakpoints. Basically, there are some registers that are called &#8220;<strong><span style="color: #ff0000;">D</span></strong>ebug <span style="color: #ff0000;"><strong>R</strong></span>egister&#8221; and they are using the <strong><span style="color: #ff0000;">DR</span></strong>X nomenclature  (DR0 to DR7). When GetThreadContext is called, the function will retrieve al the context information from a thread.</p>
<p>For those that are not familiar with a context structure, it contains all the register data from the corresponding element. So, with this data in possession, it only needs to check if those DRX registers are initiated with a value not equal to 0.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="915" data-permalink="https://fumik0.com/predator_getthreadcontext/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getthreadcontext.png?fit=899%2C191&amp;ssl=1" data-orig-size="899,191" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_getthreadcontext" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getthreadcontext.png?fit=300%2C64&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getthreadcontext.png?fit=899%2C191&amp;ssl=1" class=" size-full wp-image-915 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getthreadcontext.png?resize=899%2C191&#038;ssl=1" alt="predator_getthreadcontext" width="899" height="191" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getthreadcontext.png?w=899&amp;ssl=1 899w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getthreadcontext.png?resize=300%2C64&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_getthreadcontext.png?resize=768%2C163&amp;ssl=1 768w" sizes="auto, (max-width: 899px) 100vw, 899px" /></p>
<p>On the case here, it&#8217;s easily spottable to see that 4 registers are checked</p>
<pre><span class="pl-k">if</span> (ctx-&gt;<span class="pl-smi">Dr0</span> != <span class="pl-c1">0</span> || ctx-&gt;<span class="pl-smi">Dr1</span> != <span class="pl-c1">0</span> || ctx-&gt;<span class="pl-smi">Dr2</span> != <span class="pl-c1">0</span> || ctx-&gt;<span class="pl-smi">Dr3</span> != <span class="pl-c1">0</span>)</pre>
<p><strong>Int 3 breakpoint</strong></p>
<p>int 3 (or Interrupt 3) is a popular opcode to force the debugger to stop at a specific offset. As said in the title, this is a breakpoint but if it&#8217;s executed without any debugging environment, the exception handler is able to deal with this behavior and will continue to run without any issue. Unless I missed something, here is the scenario.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="910" data-permalink="https://fumik0.com/predator_breakpoint/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_breakpoint.png?fit=953%2C157&amp;ssl=1" data-orig-size="953,157" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_breakpoint" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_breakpoint.png?fit=300%2C49&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_breakpoint.png?fit=900%2C148&amp;ssl=1" class=" size-full wp-image-910 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_breakpoint.png?resize=900%2C148&#038;ssl=1" alt="predator_breakpoint" width="900" height="148" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_breakpoint.png?w=953&amp;ssl=1 953w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_breakpoint.png?resize=300%2C49&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_breakpoint.png?resize=768%2C127&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>By the way,  as another scenario used for this one (the int 3), the number of this specific opcode triggered could be also used as an incremented counter, if the counter is above a specific value, a simplistic condition is sufficient to check if it&#8217;s executed into a debugger in that way.</p>
<h4>Debug Condition</h4>
<p>With all the techniques explained above, in the end, they all lead to a final condition step if of course, the debugger hasn&#8217;t crashed. The checking task is pretty easy to understand and it remains to a simple operation: &#8220;setting up a value to EAX during the anti-debug function&#8221;, if everything is correct this register will be set to zero, if not we could see all the different values that could be possible.</p>
<div id="attachment_918" style="width: 1308px" class="wp-caption aligncenter"><img data-recalc-dims="1" loading="lazy" decoding="async" aria-describedby="caption-attachment-918" data-attachment-id="918" data-permalink="https://fumik0.com/anti_debug_condition/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/anti_debug_condition.png?fit=1298%2C231&amp;ssl=1" data-orig-size="1298,231" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="anti_debug_condition" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/anti_debug_condition.png?fit=300%2C53&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/anti_debug_condition.png?fit=900%2C160&amp;ssl=1" class="alignnone size-full wp-image-918" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/anti_debug_condition.png?resize=900%2C160&#038;ssl=1" alt="anti_debug_condition" width="900" height="160" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/anti_debug_condition.png?w=1298&amp;ssl=1 1298w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/anti_debug_condition.png?resize=300%2C53&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/anti_debug_condition.png?resize=1024%2C182&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/anti_debug_condition.png?resize=768%2C137&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /><p id="caption-attachment-918" class="wp-caption-text">bloc in red is the correct condition over all the anti-debug tests</p></div>
<p>&#8230;And when the Anti-Debug function is done, the register EAX is checked by the test operator, so the ZF flag is determinant for entering into the most important loop that contains the main function of the stealer.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="919" data-permalink="https://fumik0.com/predator_anti_debug_02/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_debug_02.png?fit=773%2C89&amp;ssl=1" data-orig-size="773,89" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_anti_debug_02" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_debug_02.png?fit=300%2C35&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_debug_02.png?fit=773%2C89&amp;ssl=1" class=" size-full wp-image-919 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_debug_02.png?resize=773%2C89&#038;ssl=1" alt="predator_anti_debug_02" width="773" height="89" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_debug_02.png?w=773&amp;ssl=1 773w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_debug_02.png?resize=300%2C35&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_anti_debug_02.png?resize=768%2C88&amp;ssl=1 768w" sizes="auto, (max-width: 773px) 100vw, 773px" /></p>
<h2>Anti-VM</h2>
<p>The Anti VM is presented as an option in Predator and is performed just after the first C&amp;C requests.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="978" data-permalink="https://fumik0.com/anti-vm-predator-option/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti-VM-Predator-Option.png?fit=1231%2C323&amp;ssl=1" data-orig-size="1231,323" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Anti-VM-Predator-Option" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti-VM-Predator-Option.png?fit=300%2C79&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti-VM-Predator-Option.png?fit=900%2C236&amp;ssl=1" class=" size-full wp-image-978 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti-VM-Predator-Option.png?resize=900%2C236&#038;ssl=1" alt="Anti-VM-Predator-Option" width="900" height="236" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti-VM-Predator-Option.png?w=1231&amp;ssl=1 1231w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti-VM-Predator-Option.png?resize=300%2C79&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti-VM-Predator-Option.png?resize=1024%2C269&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti-VM-Predator-Option.png?resize=768%2C202&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>Tricks used are pretty olds and basically using Anti-VM Instructions</p>
<ul>
<li>SIDT</li>
<li>SGDT</li>
<li>STR</li>
<li>CPUID (Hypervisor Trick)</li>
</ul>
<p>By curiosity, this option is not by default performed if the C&amp;C is not reachable.</p>
<h2>Paranoid &amp; Organized Predator</h2>
<p>When entering into the &#8220;big main function&#8221;, the stealer is doing &#8220;again&#8221; extra validations if you have a valid payload (and not a modded one), you are running it correctly and being sure again that you are not analyzing it.</p>
<p>This kind of paranoid checking step is a result of the multiple cases of cracked builders developed and released in the wild (mostly or exclusively at a time coming from XakFor.Net). Pretty wild and fun to see when Anti-Piracy protocols are also seen in the malware scape.</p>
<p>Then the malware is doing a classic organized setup to perform all the requested actions and could be represented in that way.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1092" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/predator_roadmap/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Roadmap.png?fit=721%2C1041&amp;ssl=1" data-orig-size="721,1041" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Predator_Roadmap" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Roadmap.png?fit=208%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Roadmap.png?fit=709%2C1024&amp;ssl=1" class=" size-full wp-image-1092 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Roadmap.png?resize=721%2C1041&#038;ssl=1" alt="Predator_Roadmap" width="721" height="1041" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Roadmap.png?w=721&amp;ssl=1 721w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Roadmap.png?resize=208%2C300&amp;ssl=1 208w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Roadmap.png?resize=709%2C1024&amp;ssl=1 709w" sizes="auto, (max-width: 721px) 100vw, 721px" /></p>
<p>Of course as usual and already a bit explained in the first paper, the C&amp;C domain is retrieved in a table of function pointers before the execution of the WinMain function (where the payload is starting to do tasks).</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1093" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/__initerm/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/initerm.png?fit=907%2C214&amp;ssl=1" data-orig-size="907,214" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="__initerm" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/initerm.png?fit=300%2C71&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/initerm.png?fit=900%2C212&amp;ssl=1" class=" size-full wp-image-1093 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/initerm.png?resize=900%2C212&#038;ssl=1" alt="__initerm" width="900" height="212" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/initerm.png?w=907&amp;ssl=1 907w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/initerm.png?resize=300%2C71&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/initerm.png?resize=768%2C181&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>You can see easily all the functions that will be called based on the starting location (__xc_z) and the ending location (__xc_z).</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1094" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/pointer_c2/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pointer_c2.png?fit=789%2C246&amp;ssl=1" data-orig-size="789,246" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="pointer_c2" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pointer_c2.png?fit=300%2C94&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pointer_c2.png?fit=789%2C246&amp;ssl=1" class=" size-full wp-image-1094 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pointer_c2.png?resize=789%2C246&#038;ssl=1" alt="pointer_c2" width="789" height="246" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pointer_c2.png?w=789&amp;ssl=1 789w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pointer_c2.png?resize=300%2C94&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/pointer_c2.png?resize=768%2C239&amp;ssl=1 768w" sizes="auto, (max-width: 789px) 100vw, 789px" /></p>
<p>Then you can spot easily the XOR strings that hide the C&amp;C domain like the usual old predator malware.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1095" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/xor_c2_domain/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/xor_c2_domain.png?fit=817%2C383&amp;ssl=1" data-orig-size="817,383" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="xor_c2_domain" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/xor_c2_domain.png?fit=300%2C141&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/xor_c2_domain.png?fit=817%2C383&amp;ssl=1" class=" size-full wp-image-1095 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/xor_c2_domain.png?resize=817%2C383&#038;ssl=1" alt="xor_c2_domain" width="817" height="383" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/xor_c2_domain.png?w=817&amp;ssl=1 817w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/xor_c2_domain.png?resize=300%2C141&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/xor_c2_domain.png?resize=768%2C360&amp;ssl=1 768w" sizes="auto, (max-width: 817px) 100vw, 817px" /></p>
<h2>Data Encryption &amp; Encoding</h2>
<p>Besides using XOR almost absolutely everywhere, this info stealer is using a mix of RC4 encryption and base64 encoding whenever it is receiving data from the C&amp;C. Without using specialized tools or paid versions of IDA (or whatever other software), it could be a bit challenging to recognize it (when you are a junior analyst), due to some modification of some part of the code.</p>
<h3>Base64</h3>
<p>For the Base64 functions, it&#8217;s extremely easy to spot them, with the symbol values on the register before and after calls. The only thing to notice with them, it&#8217;s that they are using a typical signature&#8230; A whole bloc of XOR stack strings, I believed that this trick is designed to hide an eventual Base64 alphabet from some Yara rules.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1000" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/base64_xored/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/base64_xored.png?fit=1326%2C539&amp;ssl=1" data-orig-size="1326,539" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="base64_xored" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/base64_xored.png?fit=300%2C122&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/base64_xored.png?fit=900%2C366&amp;ssl=1" class=" size-full wp-image-1000 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/base64_xored.png?resize=900%2C366&#038;ssl=1" alt="base64_xored" width="900" height="366" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/base64_xored.png?w=1326&amp;ssl=1 1326w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/base64_xored.png?resize=300%2C122&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/base64_xored.png?resize=1024%2C416&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/base64_xored.png?resize=768%2C312&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>By the way, the rest of the code remains identical to standard base64 algorithms.</p>
<h3>RC4</h3>
<p>For RC4, things could be a little bit messy if you are not familiar at all with encryption algorithm on a disassembler/debugger, for some cases it could be hell, for some case not. Here, it&#8217;s, in fact, this amount of code for performing the process.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1001" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/rc4/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/RC4.png?fit=883%2C691&amp;ssl=1" data-orig-size="883,691" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="RC4" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/RC4.png?fit=300%2C235&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/RC4.png?fit=883%2C691&amp;ssl=1" class=" size-full wp-image-1001 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/RC4.png?resize=883%2C691&#038;ssl=1" alt="RC4" width="883" height="691" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/RC4.png?w=883&amp;ssl=1 883w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/RC4.png?resize=300%2C235&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/RC4.png?resize=768%2C601&amp;ssl=1 768w" sizes="auto, (max-width: 883px) 100vw, 883px" /></p>
<p>Blocs are representing the Generation of the array S, then performing the Key-Scheduling Algorithm (KSA) by using a specific secret key that is, in fact, the C&amp;C domain! (if there is no domain, but an IP hardcoded, this IP is the secret key), then the last one is the Pseudo-random generation algorithm (PRGA).</p>
<p>For more info, some resources about this algorithm below:</p>
<ul>
<li><a href="https://stackoverflow.com/questions/29607753/how-to-decrypt-a-file-that-encrypted-with-rc4-using-python" target="_blank" rel="noopener noreferrer">Stack Overflow example</a></li>
<li><a href="https://en.wikipedia.org/wiki/RC4#Key-scheduling_algorithm_(KSA)" target="_blank" rel="noopener noreferrer">RC4 Algorithm (Wikipedia)</a></li>
</ul>
<h2>Mutex &amp; Hardware ID</h2>
<p>The Hardware ID (HWID) and mutex are related, and the generation is quite funky,  I would say, even if most of the people will consider this as something not important to investigate, I love small details in malware, even if their role is maybe meaningless, but for me, every detail counts no matter what (even the stupidest one).</p>
<p>Here the hardware ID generation is split into 3 main parts. I had a lot of fun to understand how this one was created.</p>
<p>First, it will grab all the available logical drives on the compromised machine, and for each of them, the serial number is saved into a temporary variable. Then, whenever a new drive is found, the hexadecimal value is added to it. so basically if the two drives have the serial number &#8220;44C5-F04D&#8221; and &#8220;1130-DDFF&#8221;, so ESI will receive 0x44C5F04D then will add 0x1130DFF.</p>
<p>When it&#8217;s done, this value is put into a while loop that will divide the value on ESI by 0xA and saved the remainder into another temporary variable, the loop condition breaks when ESI is below 1. Then the results of this operation are saved, duplicated and added to itself the last 4 bytes (i.e 1122334455 will be 1122334455<span style="color: #ff0000;"><strong>22334455</strong></span>).</p>
<p>If this is not sufficient, the value is put into another loop for performing this operation.</p>
<pre>for i, s in enumerate(str):
  if i &amp; 1:
    a += chr(s) + 0x40
  else:
    a += chr(s)</pre>
<p>It results in the creation of an alphanumeric string that will be the archive filename used during the POST request to the C&amp;C.</p>
<div id="attachment_922" style="width: 841px" class="wp-caption aligncenter"><img data-recalc-dims="1" loading="lazy" decoding="async" aria-describedby="caption-attachment-922" data-attachment-id="922" data-permalink="https://fumik0.com/predator_mutex-2/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_mutex-1-1320289659-1575049838563.png?fit=831%2C229&amp;ssl=1" data-orig-size="831,229" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="predator_mutex" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_mutex-1-1320289659-1575049838563.png?fit=300%2C83&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_mutex-1-1320289659-1575049838563.png?fit=831%2C229&amp;ssl=1" class="alignnone size-full wp-image-922" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_mutex-1-1320289659-1575049838563.png?resize=831%2C229&#038;ssl=1" alt="predator_mutex" width="831" height="229" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_mutex-1-1320289659-1575049838563.png?w=831&amp;ssl=1 831w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_mutex-1-1320289659-1575049838563.png?resize=300%2C83&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/11/predator_mutex-1-1320289659-1575049838563.png?resize=768%2C212&amp;ssl=1 768w" sizes="auto, (max-width: 831px) 100vw, 831px" /><p id="caption-attachment-922" class="wp-caption-text">the generated hardware ID based on the serial number devices</p></div>
<p>But wait! there is more&#8230; This value is in part of the creation of the mutex name&#8230; with a simple base64 operation on it and some bit operand operation for cutting part of the base64 encoding string for having finally the mutex name!</p>
<h2>Anti-CIS</h2>
<p>A classic thing in malware, this feature is used for avoiding infecting machines coming from the Commonwealth of Independent States (CIS) by using a simple API call GetUserDefaultLangID.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="984" data-permalink="https://fumik0.com/anti_cis/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti_CIS.png?fit=1280%2C1194&amp;ssl=1" data-orig-size="1280,1194" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Anti_CIS" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti_CIS.png?fit=300%2C280&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti_CIS.png?fit=900%2C839&amp;ssl=1" class=" size-full wp-image-984 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti_CIS.png?resize=900%2C840&#038;ssl=1" alt="Anti_CIS" width="900" height="840" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti_CIS.png?w=1280&amp;ssl=1 1280w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti_CIS.png?resize=300%2C280&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti_CIS.png?resize=1024%2C955&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Anti_CIS.png?resize=768%2C716&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>The value returned is the language identifier of the region format setting for the user and checked by a lot of specific language identifier, of courses in every situation, all the values that are tested, are encrypted.</p>
<table border="0" cellspacing="0">
<colgroup width="136"></colgroup>
<colgroup width="332"></colgroup>
<colgroup width="219"></colgroup>
<tbody>
<tr>
<td align="left" height="17"><span style="font-family: Liberation Serif;">Language ID</span></td>
<td align="left"><span style="font-family: Liberation Serif;">SubLanguage Symbol</span></td>
<td align="left"><span style="font-family: Liberation Serif;">Country</span></td>
</tr>
<tr>
<td align="left" height="17">0x0419</td>
<td align="left">SUBLANG_RUSSIAN_RUSSIA</td>
<td align="left">Russia</td>
</tr>
<tr>
<td align="left" height="17">0x042b</td>
<td align="left">SUBLANG_ARMENIAN_ARMENIA</td>
<td align="left">Armenia</td>
</tr>
<tr>
<td align="left" height="17">0x082c</td>
<td align="left">SUBLANG_AZERI_CYRILLIC</td>
<td align="left">Azerbaijan</td>
</tr>
<tr>
<td align="left" height="17">0x042c</td>
<td align="left">SUBLANG_AZERI_LATIN</td>
<td align="left">Azerbaijan</td>
</tr>
<tr>
<td align="left" height="17">0x0423</td>
<td align="left">SUBLANG_BELARUSIAN_BELARUS</td>
<td align="left">Belarus</td>
</tr>
<tr>
<td align="left" height="17">0x0437</td>
<td align="left">SUBLANG_GEORGIAN_GEORGIA</td>
<td align="left">Georgia</td>
</tr>
<tr>
<td align="left" height="17">0x043f</td>
<td align="left">SUBLANG_KAZAK_KAZAKHSTAN</td>
<td align="left">Kazakhstan</td>
</tr>
<tr>
<td align="left" height="17">0x0428</td>
<td align="left">SUBLANG_TAJIK_TAJIKISTAN</td>
<td align="left">Tajikistan</td>
</tr>
<tr>
<td align="left" height="17">0x0442</td>
<td align="left">SUBLANG_TURKMEN_TURKMENISTAN</td>
<td align="left">Turkmenistan</td>
</tr>
<tr>
<td align="left" height="17">0x0843</td>
<td align="left">SUBLANG_UZBEK_CYRILLIC</td>
<td align="left">Uzbekistan</td>
</tr>
<tr>
<td align="left" height="17">0x0443</td>
<td align="left">SUBLANG_UZBEK_LATIN</td>
<td align="left">Uzbekistan</td>
</tr>
<tr>
<td align="left" height="17">0x0422</td>
<td align="left">SUBLANG_UKRAINIAN_UKRAINE</td>
<td align="left">Ukraine</td>
</tr>
</tbody>
</table>
<h2>Files, files where are you?</h2>
<p>When I reversed for the first time this stealer, files and malicious archive were stored on the disk then deleted. But right now, this is not the case anymore. Predator is managing all the stolen data into memory for avoiding as much as possible any extra traces during the execution.</p>
<p>Predator is nowadays creating in memory a lot of allocated pages and temporary files that will be used for interactions with real files that exist on the disk. Most of the time it&#8217;s basically getting handles, size and doing some operation for opening, grabbing content and saving them to a place in memory. <em><strong>This explanation is summarized in a &#8220;very&#8221; simplify way because there are a lot of cases and scenarios to manage this. </strong></em></p>
<p>Another point to notice is that the archive (using ZIP compression), is also created in memory by selecting folder/files.</p>
<div id="attachment_1089" style="width: 743px" class="wp-caption aligncenter"><img data-recalc-dims="1" loading="lazy" decoding="async" aria-describedby="caption-attachment-1089" data-attachment-id="1089" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/zip_generation_02/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/zip_generation_02.png?fit=733%2C305&amp;ssl=1" data-orig-size="733,305" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="zip_generation_02" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/zip_generation_02.png?fit=300%2C125&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/zip_generation_02.png?fit=733%2C305&amp;ssl=1" class="alignnone size-full wp-image-1089" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/zip_generation_02.png?resize=733%2C305&#038;ssl=1" alt="zip_generation_02" width="733" height="305" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/zip_generation_02.png?w=733&amp;ssl=1 733w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/zip_generation_02.png?resize=300%2C125&amp;ssl=1 300w" sizes="auto, (max-width: 733px) 100vw, 733px" /><p id="caption-attachment-1089" class="wp-caption-text">The generated archive in memory</p></div>
<p>It doesn&#8217;t mean that the whole architecture for the files is different, it&#8217;s the same format as before.</p>
<div id="attachment_935" style="width: 695px" class="wp-caption aligncenter"><img data-recalc-dims="1" loading="lazy" decoding="async" aria-describedby="caption-attachment-935" data-attachment-id="935" data-permalink="https://fumik0.com/default_archive/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Default_Archive.png?fit=685%2C373&amp;ssl=1" data-orig-size="685,373" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Default_Archive" data-image-description="&lt;p&gt;Usual archive that was generated in memory&lt;/p&gt;
" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Default_Archive.png?fit=300%2C163&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Default_Archive.png?fit=685%2C373&amp;ssl=1" class="alignnone size-full wp-image-935" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Default_Archive.png?resize=685%2C373&#038;ssl=1" alt="Default_Archive" width="685" height="373" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Default_Archive.png?w=685&amp;ssl=1 685w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Default_Archive.png?resize=300%2C163&amp;ssl=1 300w" sizes="auto, (max-width: 685px) 100vw, 685px" /><p id="caption-attachment-935" class="wp-caption-text">an example of archive intercepted during the C&amp;C Communication</p></div>
<h2>Stealing</h2>
<p>After explaining this many times about how this stuff, the fundamental idea is boringly the same for every stealer:</p>
<ul>
<li>Check</li>
<li>Analyzing (optional)</li>
<li>Parsing (optional)</li>
<li>Copy</li>
<li>Profit</li>
<li>Repeat</li>
</ul>
<p>What could be different behind that, is how they are obfuscating the files or values to check&#8230; and guess what&#8230; every malware has their specialties (whenever they are not decided to copy the same piece of code on Github or some whatever generic .NET stealer) and in the end, there is no black magic, just simple (or complex) enigma to solve. As a malware analyst, when you are starting into analyzing stealers, you want literally to understand everything, because everything is new, and with the time, you realized the routine performed to fetch the data and how stupid it is working well (as reminder, it might be not always that easy for some highly specific stuff).</p>
<p>In the end, you just want to know the targeted software, and only dig into those you haven&#8217;t seen before, but every time the thing is the same:</p>
<ul>
<li>Checking dumbly a path</li>
<li>Checking a register key to have the correct path of a software</li>
<li>Checking a shortcut path based on an icon</li>
<li>etc&#8230;</li>
</ul>
<p>Beside that Predator the Thief is stealing a lot of different things:</p>
<ol>
<li>Grabbing content from Browsers (Cookies, History, Credentials)</li>
<li>Harvesting/Fetching Credit Cards</li>
<li>Stealing sensible information &amp; files from Crypto-Wallets</li>
<li>Credentials from FTP Software</li>
<li>Data coming from Instant communication software</li>
<li>Data coming from Messenger software</li>
<li>2FA Authenticator software</li>
<li>Fetching Gaming accounts</li>
<li>Credentials coming from VPN software</li>
<li>Grabbing specific files (also dynamically)</li>
<li>Harvesting all the information from the computer (Specs, Software)</li>
<li>Stealing Clipboard (if during the execution of it, there is some content)</li>
<li>Making a picture of yourself (if your webcam is connected)</li>
<li>Making screenshot of your desktop</li>
<li>It could also include a Clipper (as a modular feature).</li>
<li>And&#8230; due to the module manager, other tasks that I still don&#8217;t have mentioned there (that also I don&#8217;t know who they are).</li>
</ol>
<p>Let&#8217;s explain just some of them that I found worth to dig into.</p>
<h3>Browsers</h3>
<p>Since my last analysis, things changed for the browser part and it&#8217;s now divided into three major parts.</p>
<ul>
<li>Internet Explorer is analyzed in a specific function developed due that the data is contained into a &#8220;Vault&#8221;, so it requires a specific Windows API to read it.</li>
<li>Microsoft Edge is also split into another part of the stealing process due that this one is using unique files and needs some tasks for the parsing.</li>
<li>Then, the other browsers are fetched by using a homemade static grabber</li>
</ul>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="948" data-permalink="https://fumik0.com/browsers-2/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Browsers.png?fit=681%2C261&amp;ssl=1" data-orig-size="681,261" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Browsers" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Browsers.png?fit=300%2C115&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Browsers.png?fit=681%2C261&amp;ssl=1" class=" size-full wp-image-948 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Browsers.png?resize=681%2C261&#038;ssl=1" alt="Browsers" width="681" height="261" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Browsers.png?w=681&amp;ssl=1 681w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Browsers.png?resize=300%2C115&amp;ssl=1 300w" sizes="auto, (max-width: 681px) 100vw, 681px" /></p>
<h3><strong>Grabber n°1 (The generic one)</strong></h3>
<p>It&#8217;s pretty fun to see that the stealing process is using at least one single function for catching a lot of things. This generic grabber is pretty &#8220;cleaned&#8221; based on what I saw before even if there is no magic at all, it&#8217;s sufficient to make enough damages by using a recursive loop at a specific place that will search all the required files &amp; folders.</p>
<p>By comparing older versions of predator, when it was attempting to steal content from browsers and some wallets, it was checking step by step specific repositories or registry keys then processing into some loops and tasks for fetching the credentials. Nowadays, this step has been removed (for the browser part) and being part of this raw grabber that will parse everything starting to %USERS% repository.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="939" data-permalink="https://fumik0.com/grabber-2/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/grabber.png?fit=749%2C648&amp;ssl=1" data-orig-size="749,648" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="grabber" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/grabber.png?fit=300%2C260&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/grabber.png?fit=749%2C648&amp;ssl=1" class=" size-full wp-image-939 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/grabber.png?resize=749%2C648&#038;ssl=1" alt="grabber" width="749" height="648" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/grabber.png?w=749&amp;ssl=1 749w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/grabber.png?resize=300%2C260&amp;ssl=1 300w" sizes="auto, (max-width: 749px) 100vw, 749px" /></p>
<p>As usual, all the variables that contain required files are obfuscated and encrypted by a simple XOR algorithm and in the end, this is the &#8220;static&#8221; list that the info stealer will be focused</p>
<table border="0" cellspacing="0">
<colgroup width="155"></colgroup>
<colgroup width="249"></colgroup>
<colgroup width="309"></colgroup>
<tbody>
<tr>
<td align="left" height="17"><span style="font-family: Liberation Serif;">File grabbed</span></td>
<td align="left"><span style="font-family: Liberation Serif;">Type</span></td>
<td align="left"><span style="font-family: Liberation Serif;">Actions</span></td>
</tr>
<tr>
<td align="left" height="17">Login Data</td>
<td align="left">Chrome / Chromium based</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">Cookies</td>
<td align="left">Chrome / Chromium based</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">Web Data</td>
<td align="left">Browsers</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">History</td>
<td align="left">Browsers</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">formhistory.sqlite</td>
<td align="left">Mozilla Firefox &amp; Others</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">cookies.sqlite</td>
<td align="left">Mozilla Firefox &amp; Others</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">wallet.dat</td>
<td align="left">Bitcoin</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">.sln</td>
<td align="left">Visual Studio Projects</td>
<td align="left">Copy filename into Project.txt</td>
</tr>
<tr>
<td align="left" height="17">main.db</td>
<td align="left">Skype</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">logins.json</td>
<td align="left">Chrome</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">signons.sqlite</td>
<td align="left">Mozilla Firefox &amp; Others</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">places.sqlite</td>
<td align="left">Mozilla Firefox &amp; Others</td>
<td align="left">Copy &amp; Parse</td>
</tr>
<tr>
<td align="left" height="17">Last Version</td>
<td align="left">Mozilla Firefox &amp; Others</td>
<td align="left">Copy &amp; Parse</td>
</tr>
</tbody>
</table>
<h3><strong>Grabber n°2 (The dynamic one)</strong></h3>
<p>There is a second grabber in Predator The Thief, and this not only used when there is available config loaded in memory based on the first request done to the C&amp;C. In fact, it&#8217;s also used as part of the process of searching &amp; copying critical files coming from wallets software, communication software, and others&#8230;</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1035" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/dynamic_grabber/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber.png?fit=1007%2C332&amp;ssl=1" data-orig-size="1007,332" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="dynamic_grabber" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber.png?fit=300%2C99&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber.png?fit=900%2C297&amp;ssl=1" class=" size-full wp-image-1035 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber.png?resize=900%2C297&#038;ssl=1" alt="dynamic_grabber" width="900" height="297" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber.png?w=1007&amp;ssl=1 1007w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber.png?resize=300%2C99&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber.png?resize=768%2C253&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p><span style="color: var(--color-text);">The &#8220;main function&#8221; of this dynamic grabber only required three arguments:</span></p>
<ul>
<li>The path where you want to search files</li>
<li>the requested file or mask</li>
<li>A path where the found files will be put in the final archive sent to the C&amp;C</li>
</ul>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1036" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/dynamic_grabber_args/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber_args.png?fit=723%2C116&amp;ssl=1" data-orig-size="723,116" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="dynamic_grabber_args" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber_args.png?fit=300%2C48&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber_args.png?fit=723%2C116&amp;ssl=1" class=" size-full wp-image-1036 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber_args.png?resize=723%2C116&#038;ssl=1" alt="dynamic_grabber_args" width="723" height="116" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber_args.png?w=723&amp;ssl=1 723w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/dynamic_grabber_args.png?resize=300%2C48&amp;ssl=1 300w" sizes="auto, (max-width: 723px) 100vw, 723px" /></p>
<p>When the grabber is configured for a recursive search, it&#8217;s simply adding at the end of the path the value &#8220;..&#8221; and checking if the next file is a folder to enter again into the same function again and again.</p>
<p>In the end, in the fundamentals, this is almost the same pattern as the first grabber with the only difference that in this case, there are no parsing/analyzing files in an in-depth way. It&#8217;s simply this follow-up</p>
<ol>
<li>Find a matched file based on the requested search</li>
<li>creating an entry on the stolen archive folder</li>
<li>setting a handle/pointer from the grabbed file</li>
<li>Save the whole content to memory</li>
<li>Repeat</li>
</ol>
<p>Of course, there is a lot of particular cases that are to take in consideration here, but the main idea is like this.</p>
<h3><strong>What Predator is stealing in the end?</strong></h3>
<p>If we removed the dynamic grabber, this is the current list (for 3.3.2) about what kind of software that is impacted by this stealer, for sure, it&#8217;s hard to know precisely on the browser all the one that is impacted due to the generic grabber, but in the end, the most important one is listed here.</p>
<p>VPN</p>
<ul>
<li>NordVPN</li>
</ul>
<p>Communication</p>
<ul>
<li>Jabber</li>
<li>Discord</li>
<li>Skype</li>
</ul>
<p>FTP</p>
<ul>
<li>WinSCP</li>
<li>WinFTP</li>
<li>FileZilla</li>
</ul>
<p>Mails</p>
<ul>
<li>Outlook</li>
</ul>
<p>2FA Software</p>
<ul>
<li>Authy (Inspired by Vidar)</li>
</ul>
<p>Games</p>
<ul>
<li>Steam</li>
<li>Battle.net (Inspired by Kpot)</li>
<li>Osu</li>
</ul>
<p>Wallets</p>
<ul>
<li>Electrum</li>
<li>MultiBit</li>
<li>Armory</li>
<li>Ethereum</li>
<li>Bytecoin</li>
<li>Bitcoin</li>
<li>Jaxx</li>
<li>Atomic</li>
<li>Exodus</li>
</ul>
<p>Browser</p>
<ul>
<li>Mozilla Firefox (also Gecko browsers using same files)</li>
<li>Chrome (also Chromium browsers using same files)</li>
<li>Internet Explorer</li>
<li>Edge</li>
<li>Unmentioned browsers using the same files detected by the grabber.</li>
</ul>
<p>Also beside stealing other actions are performed like:</p>
<ul>
<li>Performing a webcam picture capture</li>
<li>Performing a desktop screenshot</li>
</ul>
<h2><span style="color: var(--color-text);">Loader</span></h2>
<p>There is currently 4 kind of loader implemented into this info stealer</p>
<ol>
<li>RunPE</li>
<li>CreateProcess</li>
<li>ShellExecuteA</li>
<li>LoadPE</li>
<li>LoadLibrary</li>
</ol>
<p>For all the cases, I have explained below (on another part of this analysis) what are the options of each of the techniques performed. There is no magic, there is nothing to explain more about this feature these days. There are enough articles and tutorials that are talking about this. The only thing to notice is that Predator is designed to load the payload in different ways, just by a simple process creation or abusing some process injections (i recommend on this part, to <a href="https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process">read the work from endgame</a>).</p>
<h2>Module Manager</h2>
<p>Something really interesting about this stealer these days, it that it developed a feature for being able to add the additional tasks as part of a module/plugin package. Maybe the name of this thing is wrongly named (i will probably be fixed soon about this statement). But now it&#8217;s definitely sure that we can consider this malware as a modular one.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1007" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/module-manager/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Module-Manager.png?fit=809%2C1201&amp;ssl=1" data-orig-size="809,1201" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Module Manager" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Module-Manager.png?fit=202%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Module-Manager.png?fit=690%2C1024&amp;ssl=1" class=" size-full wp-image-1007 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Module-Manager.png?resize=809%2C1201&#038;ssl=1" alt="Module Manager" width="809" height="1201" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Module-Manager.png?w=809&amp;ssl=1 809w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Module-Manager.png?resize=202%2C300&amp;ssl=1 202w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Module-Manager.png?resize=690%2C1024&amp;ssl=1 690w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Module-Manager.png?resize=768%2C1140&amp;ssl=1 768w" sizes="auto, (max-width: 809px) 100vw, 809px" /></p>
<p>When decrypting the config from check.get, you can understand fast that a module will be launched, by looking at the last entry&#8230;</p>
<p>[PREDATOR_CONFIG]#[GRABBER]#[NETWORK_INFO]#[LOADER]#[<strong><span style="color: #ff6600;">example</span></strong>]</p>
<p>This will be the name of the module that will be requested to the C&amp;C. (this is also the easiest way to spot a new module).</p>
<ul>
<li><strong><span style="color: #ff6600;">example</span></strong>.get</li>
<li><strong><span style="color: #ff6600;">example</span></strong>.post</li>
</ul>
<p>The first request is giving you the config of the module (on my case it was like this), it&#8217;s saved but NOT decrypted (looks like it will be dealt by the module on this part). The other request is focused on downloading the payload, decrypting it and saving it to the disk in a random folder in %PROGRAMDATA% (also the filename is generated also randomly), when it&#8217;s done, it&#8217;s simply executed by ShellExecuteA.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1006" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/shellexecute_module/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/shellexecute_module.png?fit=1048%2C535&amp;ssl=1" data-orig-size="1048,535" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="shellexecute_module" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/shellexecute_module.png?fit=300%2C153&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/shellexecute_module.png?fit=900%2C460&amp;ssl=1" class=" size-full wp-image-1006 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/shellexecute_module.png?resize=900%2C459&#038;ssl=1" alt="shellexecute_module" width="900" height="459" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/shellexecute_module.png?w=1048&amp;ssl=1 1048w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/shellexecute_module.png?resize=300%2C153&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/shellexecute_module.png?resize=1024%2C523&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/shellexecute_module.png?resize=768%2C392&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>Also, another thing to notice, you know that it&#8217;s designed to launch multiple modules/plugins.</p>
<h2><span style="color: var(--color-text);">Clipper (Optional module)</span></h2>
<p>The clipper is one example of the Module that could be loaded by the module manager. As far as I saw, I only see this one (maybe they are other things, maybe not, I don&#8217;t have the visibility for that).</p>
<p>Disclaimer: Before people will maybe mistaken, the clipper is proper to Predator the Thief and this is NOT something coming from another actor (if it&#8217;s the case, the loader part would be used).</p>
<div id="attachment_1004" style="width: 1313px" class="wp-caption aligncenter"><img data-recalc-dims="1" loading="lazy" decoding="async" aria-describedby="caption-attachment-1004" data-attachment-id="1004" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/clipper_main/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/clipper_main.png?fit=1303%2C773&amp;ssl=1" data-orig-size="1303,773" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="clipper_main" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/clipper_main.png?fit=300%2C178&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/clipper_main.png?fit=900%2C533&amp;ssl=1" class="alignnone size-full wp-image-1004" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/clipper_main.png?resize=900%2C534&#038;ssl=1" alt="clipper_main" width="900" height="534" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/clipper_main.png?w=1303&amp;ssl=1 1303w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/clipper_main.png?resize=300%2C178&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/clipper_main.png?resize=1024%2C607&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/clipper_main.png?resize=768%2C456&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /><p id="caption-attachment-1004" class="wp-caption-text">Clipper WinMain function</p></div>
<p>This malware module is developed in C++, and like Predator itself, you recognized pretty well the obfuscation proper to it (Stack strings, XOR, SUB, Code spaghetti, GetProcAddress recreated&#8230;). Well, everything that you love for slowing down again your analysis.</p>
<p>As detailed already a little above, the module is designed to grab the config from the main program, decrypting it and starting to do the process routine indefinitely:</p>
<ol>
<li>Open Clipboard</li>
<li>Checking content based on the config loaded</li>
<li>If something matches put the malicious wallet</li>
<li>Sleep</li>
<li>Repeat</li>
</ol>
<p>The clipper config is rudimentary using &#8220;|&#8221; as a delimiter. Mask/Regex on the left, malicious wallet on the right.</p>
<pre>1*:1Eh8gHDVCS8xuKQNhCtZKiE1dVuRQiQ58H|
3*:1Eh8gHDVCS8xuKQNhCtZKiE1dVuRQiQ58H|
0x*:0x7996ad65556859C0F795Fe590018b08699092B9C|
q*:qztrpt42h78ks7h6jlgtqtvhp3q6utm7sqrsupgwv0|
G*:GaJvoTcC4Bw3kitxHWU4nrdDK3izXCTmFQ|
X*:XruZmSaEYPX2mH48nGkPSGTzFiPfKXDLWn|
L*:LdPvBrWvimse3WuVNg6pjH15GgBUtSUaWy|
t*:t1dLgBbvV6sXNCMUSS5JeLjF4XhhbJYSDAe|
4*:44tLjmXrQNrWJ5NBsEj2R77ZBEgDa3fEe9GLpSf2FRmhexPvfYDUAB7EXX1Hdb3aMQ9FLqdJ56yaAhiXoRsceGJCRS3Jxkn|
D*:DUMKwVVAaMcbtdWipMkXoGfRistK1cC26C|
A*:AaUgfMh5iVkGKLVpMUZW8tGuyjZQNViwDt|</pre>
<p>There is no communication with the C&amp;C when the clipper is switching wallet, it&#8217;s an offline one.</p>
<h2><span style="color: var(--color-text);">Self Removal</span></h2>
<p>When the parameters are set to 1 in the Predator config got by check.get, the malware is performing a really simple task to erase itself from the machine when all the tasks are done.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="990" data-permalink="https://fumik0.com/self_remove/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/self_remove.png?fit=883%2C421&amp;ssl=1" data-orig-size="883,421" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="self_remove" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/self_remove.png?fit=300%2C143&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/self_remove.png?fit=883%2C421&amp;ssl=1" class=" size-full wp-image-990 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/self_remove.png?resize=883%2C421&#038;ssl=1" alt="self_remove" width="883" height="421" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/self_remove.png?w=883&amp;ssl=1 883w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/self_remove.png?resize=300%2C143&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/self_remove.png?resize=768%2C366&amp;ssl=1 768w" sizes="auto, (max-width: 883px) 100vw, 883px" /></p>
<p>By looking at the bottom of the main big function where all the task is performed, you can see two main blocs that could be skipped. these two are huge stack strings that will generate two things.</p>
<ul>
<li>the API request &#8220;ShellExecuteA&#8221;</li>
<li>The command &#8220;ping 127.0.0.1 &amp; del %PATH%&#8221;</li>
</ul>
<p>When all is prepared the thing is simply executed behind the classic register call. By the way, doing a ping request is one of the dozen way to do a sleep call and waiting for a little before performing the deletion.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="991" data-permalink="https://fumik0.com/shellexecutea/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/ShellExecuteA.png?fit=652%2C127&amp;ssl=1" data-orig-size="652,127" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ShellExecuteA" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/ShellExecuteA.png?fit=300%2C58&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/ShellExecuteA.png?fit=652%2C127&amp;ssl=1" class=" size-full wp-image-991 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/ShellExecuteA.png?resize=652%2C127&#038;ssl=1" alt="ShellExecuteA" width="652" height="127" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/ShellExecuteA.png?w=652&amp;ssl=1 652w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/ShellExecuteA.png?resize=300%2C58&amp;ssl=1 300w" sizes="auto, (max-width: 652px) 100vw, 652px" /></p>
<p><em>This option is not performed by default when the malware is not able to get data from the C&amp;C.</em></p>
<h2>Telemetry files</h2>
<p>There is a bunch of files that are proper to this stealer, which are generated during the whole infection process. Each of them has a specific meaning.</p>
<p>Information.txt</p>
<ol>
<li>Signature of the stealer</li>
<li>Stealing statistics</li>
<li>Computer specs</li>
<li>Number of users in the machine</li>
<li>List of logical drives</li>
<li>Current usage resources</li>
<li>Clipboard content</li>
<li>Network info</li>
<li>Compile-time of the payload</li>
</ol>
<p>Also, this generated file is literally &#8220;hell&#8221; when you want to dig into it by the amount of obfuscated code.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1039" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/information-2/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Information-1.png?fit=697%2C1107&amp;ssl=1" data-orig-size="697,1107" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Information" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Information-1.png?fit=189%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Information-1.png?fit=645%2C1024&amp;ssl=1" class=" size-full wp-image-1039 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Information-1.png?resize=697%2C1107&#038;ssl=1" alt="Information" width="697" height="1107" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Information-1.png?w=697&amp;ssl=1 697w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Information-1.png?resize=189%2C300&amp;ssl=1 189w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Information-1.png?resize=645%2C1024&amp;ssl=1 645w" sizes="auto, (max-width: 697px) 100vw, 697px" /></p>
<p>I can quote these following important telemetry files:</p>
<p>Software.txt</p>
<ul>
<li>Windows Build Version</li>
<li>Generated User-Agent</li>
<li>List of software installed in the machine (checking for x32 and x64 architecture folders)</li>
</ul>
<p>Actions.txt</p>
<ul>
<li>List of actions &amp; telemetry performed by the stealer itself during the stealing process</li>
</ul>
<p>Projects.txt</p>
<ul>
<li>List of SLN filename found during the grabber research (the static one)</li>
</ul>
<p>CookeList.txt</p>
<ul>
<li>List of cookies content fetched/parsed</li>
</ul>
<h2>Network</h2>
<h3>User-Agent &#8220;Builder&#8221;</h3>
<p>Sometimes features are fun to dig in when I heard about that predator is now generating dynamic user-agent, I was thinking about some things but in fact, it&#8217;s way simpler than I thought.</p>
<p>The User-Agent is generated in 5 steps</p>
<ol>
<li>Decrypting a static string that contains the first part of the User-Agent</li>
<li>Using GetTickCount and grabbing the last bytes of it for generating a fake builder version of Chrome</li>
<li>Decrypting another static string that contains the end of the User-Agent</li>
<li>Concat Everything</li>
<li>Profit</li>
</ol>
<p>Tihs User-Agent is shown into the software.txt logfile.</p>
<h3>C&amp;C Requests</h3>
<p>There is currently 4 kind of request seen in Predator 3.3.2 (it&#8217;s always a POST request)</p>
<table border="0" cellspacing="0">
<colgroup width="131"></colgroup>
<colgroup width="383"></colgroup>
<tbody>
<tr>
<td align="left" height="17"><i>Request</i></td>
<td align="left"><em>Meaning</em></td>
</tr>
<tr>
<td align="left" height="17">api/check.get</td>
<td align="left">Get dynamic config, tasks and network info</td>
</tr>
<tr>
<td align="left" height="17">api/gate.get ?……</td>
<td align="left">Send stolen data</td>
</tr>
<tr>
<td align="left" height="17">api/.get</td>
<td align="left">Get modular dynamic config</td>
</tr>
<tr>
<td align="left" height="17">api/.post</td>
<td align="left">Get modular dynamic payload (was like this with the clipper)</td>
</tr>
</tbody>
</table>
<h3>The first step &#8211; Get the config &amp; extra Infos</h3>
<p>For the first request, the response from the server is always in a specific form :</p>
<ul>
<li>String obviously base64 encoded</li>
<li>Encrypted using RC4 encryption by using the domain name as the key</li>
</ul>
<p>When decrypted, the config is pretty easy to guess and also a bit complex (due to the number of options &amp; parameters that the threat actor is able to do).</p>
<pre>[0;1;0;1;1;0;1;1;0;512;]#[[%userprofile%\Desktop|%userprofile%\Downloads|%userprofile%\Documents;*.xls,*.xlsx,*.doc,*.txt;128;;0]]#[Trakai;Republic of Lithuania;54.6378;24.9343;85.206.166.82;Europe/Vilnius;21001]#[]#[Clipper]</pre>
<p>It&#8217;s easily understandable that the config is split by the &#8220;#&#8221; and each data and could be summarized like this</p>
<ol>
<li>The stealer config</li>
<li>The grabber config</li>
<li>The network config</li>
<li>The loader config</li>
<li>The dynamic modular config (i.e Clipper)</li>
</ol>
<p>I have represented each of them into an array with the meaning of each of the parameters (when it was possible).</p>
<p><strong>Predator config</strong></p>
<table border="0" cellspacing="0">
<colgroup width="85"></colgroup>
<colgroup width="438"></colgroup>
<tbody>
<tr>
<td align="left" height="17">Args</td>
<td align="left">Meaning</td>
</tr>
<tr>
<td align="left" height="17">Field 1</td>
<td align="left">Webcam screenshot</td>
</tr>
<tr>
<td align="left" height="17">Field 2</td>
<td align="left">Anti VM</td>
</tr>
<tr>
<td align="left" height="17">Field 3</td>
<td align="left">Skype</td>
</tr>
<tr>
<td align="left" height="17">Field 4</td>
<td align="left">Steam</td>
</tr>
<tr>
<td align="left" height="17">Field 5</td>
<td align="left">Desktop screenshot</td>
</tr>
<tr>
<td align="left" height="17">Field 6</td>
<td align="left">Anti-CIS</td>
</tr>
<tr>
<td align="left" height="17">Field 7</td>
<td align="left">Self Destroy</td>
</tr>
<tr>
<td align="left" height="17">Field 8</td>
<td align="left">Telegram</td>
</tr>
<tr>
<td align="left" height="17">Field 9</td>
<td align="left">Windows Cookie</td>
</tr>
<tr>
<td align="left" height="17">Field 10</td>
<td align="left">Max size for files grabbed</td>
</tr>
<tr>
<td align="left" height="17">Field 11</td>
<td align="left">Powershell script (in base64)</td>
</tr>
</tbody>
</table>
<p><strong>Grabber config</strong></p>
<p>[]#[GRABBER]#[]#[]#[]</p>
<table border="0" cellspacing="0">
<colgroup width="85"></colgroup>
<colgroup width="438"></colgroup>
<tbody>
<tr>
<td align="left" height="17">Args</td>
<td align="left">Meaning</td>
</tr>
<tr>
<td align="left" height="17">Field 1</td>
<td align="left">%PATH% using &#8220;|&#8221; as a delimiter</td>
</tr>
<tr>
<td align="left" height="17">Field 2</td>
<td align="left">Files to grab</td>
</tr>
<tr>
<td align="left" height="17">Field 3</td>
<td align="left">Max sized for each file grabbed</td>
</tr>
<tr>
<td align="left" height="17">Field 4</td>
<td align="left">Whitelist</td>
</tr>
<tr>
<td align="left" height="17">Field 5</td>
<td align="left">Recursive search (0 &#8211; off | 1 &#8211; on)</td>
</tr>
</tbody>
</table>
<p><strong>Network info</strong></p>
<p>[]#[]#[NETWORK]#[]#[]</p>
<table border="0" cellspacing="0">
<colgroup width="85"></colgroup>
<colgroup width="438"></colgroup>
<tbody>
<tr>
<td align="left" height="17">Args</td>
<td align="left">Meaning</td>
</tr>
<tr>
<td align="left" height="17">Field 1</td>
<td align="left">City</td>
</tr>
<tr>
<td align="left" height="17">Field 2</td>
<td align="left">Country</td>
</tr>
<tr>
<td align="left" height="17">Field 3</td>
<td align="left">GPS Coordinate</td>
</tr>
<tr>
<td align="left" height="17">Field 4</td>
<td align="left">Time Zone</td>
</tr>
<tr>
<td align="left" height="17">Field 5</td>
<td align="left">Postal Code</td>
</tr>
</tbody>
</table>
<p><strong>Loader config</strong></p>
<p>[]#[]#[]#[LOADER]#[]</p>
<p><strong>Format</strong></p>
<p>[[URL;3;2;;;;1;amazon.com;0;0;1;0;0;5]]</p>
<p><strong>Meaning</strong></p>
<ol>
<li>Loader URL</li>
<li>Loader Type</li>
<li>Architecture</li>
<li>Targeted Countries (&#8220;,&#8221; as a delimiter)</li>
<li>Blacklisted Countries (&#8220;,&#8221; as a delimiter)</li>
<li>Arguments on startup</li>
<li>Injected process OR Where it&#8217;s saved and executed</li>
<li>Pushing loader if the specific domain(s) is(are) seen in the stolen data</li>
<li>Pushing loader if wallets are presents</li>
<li>Persistence</li>
<li>Executing in admin mode</li>
<li>Random file generated</li>
<li>Repeating execution</li>
<li>???</li>
</ol>
<p><strong>Loader type (argument 2)</strong></p>
<table border="0" cellspacing="0">
<colgroup width="85"></colgroup>
<colgroup width="438"></colgroup>
<tbody>
<tr>
<td align="left" height="17">Value</td>
<td align="left">Meaning</td>
</tr>
<tr>
<td align="left" height="17">1</td>
<td align="left">RunPE</td>
</tr>
<tr>
<td align="left" height="17">2</td>
<td align="left">CreateProcess</td>
</tr>
<tr>
<td align="left" height="17">3</td>
<td align="left">ShellExecute</td>
</tr>
<tr>
<td align="left" height="17">4</td>
<td align="left">LoadPE</td>
</tr>
<tr>
<td align="left" height="17">5</td>
<td align="left">LoadLibrary</td>
</tr>
</tbody>
</table>
<p><strong>Architecture (argument 3)</strong></p>
<table border="0" cellspacing="0">
<colgroup width="85"></colgroup>
<colgroup width="438"></colgroup>
<tbody>
<tr>
<td align="left" height="17">Value</td>
<td align="left">Meaning</td>
</tr>
<tr>
<td align="left" height="17">1</td>
<td align="left">x32 / x64</td>
</tr>
<tr>
<td align="left" height="17">2</td>
<td align="left">x32 only</td>
</tr>
<tr>
<td align="left" height="17">3</td>
<td align="left">x64 only</td>
</tr>
</tbody>
</table>
<p><strong>If it&#8217;s RunPE (argument 7)</strong></p>
<table border="0" cellspacing="0">
<colgroup width="85"></colgroup>
<colgroup width="438"></colgroup>
<tbody>
<tr>
<td align="left" height="17">Value</td>
<td align="left">Meaning</td>
</tr>
<tr>
<td align="left" height="17">1</td>
<td align="left">Attrib.exe</td>
</tr>
<tr>
<td align="left" height="17">2</td>
<td align="left">Cmd.exe</td>
</tr>
<tr>
<td align="left" height="17">3</td>
<td align="left">Audiodg.exe</td>
</tr>
</tbody>
</table>
<p><strong>If it&#8217;s CreateProcess / ShellExecuteA / LoadLibrary (argument 7)</strong></p>
<table border="0" cellspacing="0">
<colgroup width="85"></colgroup>
<colgroup width="438"></colgroup>
<tbody>
<tr>
<td align="left" height="17">Value</td>
<td align="left">Meaning</td>
</tr>
<tr>
<td align="left" height="17">1</td>
<td align="left">%PROGRAMDATA%</td>
</tr>
<tr>
<td align="left" height="17">2</td>
<td align="left">%TEMP%</td>
</tr>
<tr>
<td align="left" height="17">3</td>
<td align="left">%APPDATA%</td>
</tr>
</tbody>
</table>
<h3>The second step &#8211; Sending stolen data</h3>
<p><strong>Format</strong></p>
<pre>/api/gate.get?p1=X&amp;p2=X&amp;p3=X&amp;p4=X&amp;p5=X&amp;p6=X&amp;p7=X&amp;p8=X&amp;p9=X&amp;p10=X</pre>
<p><strong>Goal</strong></p>
<ol>
<li>Sending stolen data</li>
<li>Also victim telemetry</li>
</ol>
<p><strong>Meaning</strong></p>
<table border="0" cellspacing="0">
<colgroup width="85"></colgroup>
<colgroup width="438"></colgroup>
<tbody>
<tr>
<td align="left" height="17">Args</td>
<td align="left">Field</td>
</tr>
<tr>
<td align="left" height="17">p1</td>
<td align="left">Passwords</td>
</tr>
<tr>
<td align="left" height="17">p2</td>
<td align="left">Cookies</td>
</tr>
<tr>
<td align="left" height="17">p3</td>
<td align="left">Credit Cards</td>
</tr>
<tr>
<td align="left" height="17">p4</td>
<td align="left">Forms</td>
</tr>
<tr>
<td align="left" height="17">p5</td>
<td align="left">Steam</td>
</tr>
<tr>
<td align="left" height="17">p6</td>
<td align="left">Wallets</td>
</tr>
<tr>
<td align="left" height="17">p7</td>
<td align="left">Telegram</td>
</tr>
<tr>
<td align="left" height="17">p8</td>
<td align="left">???</td>
</tr>
<tr>
<td align="left" height="17">p9</td>
<td align="left">???</td>
</tr>
<tr>
<td align="left" height="17">p10</td>
<td align="left">OS Version (encrypted + encoded)*</td>
</tr>
</tbody>
</table>
<p>This is an example of crafted request performed by Predator the thief</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1090" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/request_beacon/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/request_beacon.png?fit=757%2C229&amp;ssl=1" data-orig-size="757,229" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="request_beacon" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/request_beacon.png?fit=300%2C91&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/request_beacon.png?fit=757%2C229&amp;ssl=1" class="alignnone size-full wp-image-1090" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/request_beacon.png?resize=757%2C229&#038;ssl=1" alt="request_beacon" width="757" height="229" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/request_beacon.png?w=757&amp;ssl=1 757w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/request_beacon.png?resize=300%2C91&amp;ssl=1 300w" sizes="auto, (max-width: 757px) 100vw, 757px" /></p>
<h3>Third step &#8211; Modular tasks (optional)</h3>
<pre>/api/Clipper.get</pre>
<p>Give the dynamic clipper config</p>
<pre>/api/Clipper.post</pre>
<p>Give the predator clipper payload</p>
<h2>Server side</h2>
<p>The C&amp;C is nowadays way different than the beginning, it has been reworked with some fancy designed and being able to do some stuff:</p>
<ol>
<li>Modulable C&amp;C</li>
<li>Classic fancy index with statistics</li>
<li>Possibility to configure your panel itself</li>
<li>Dynamic grabber configuration</li>
<li>Telegram notifications</li>
<li>Backups</li>
<li>Tags for specific domains</li>
</ol>
<h3><strong>Index</strong></h3>
<p>The predator panel changed a lot between the v2 and v3. This is currently a fancy theme one, and you can easily spot the whole statistics at first glance. the thing to notice is that the panel is fully in Russian (and I don&#8217;t know at that time if there is an English one).</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="965" data-permalink="https://fumik0.com/predator_panel_index/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?fit=2399%2C976&amp;ssl=1" data-orig-size="2399,976" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Predator_Panel_Index" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?fit=300%2C122&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?fit=900%2C367&amp;ssl=1" class=" size-full wp-image-965 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?resize=900%2C366&#038;ssl=1" alt="Predator_Panel_Index" width="900" height="366" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?w=2399&amp;ssl=1 2399w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?resize=300%2C122&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?resize=1024%2C417&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?resize=768%2C312&amp;ssl=1 768w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?resize=1536%2C625&amp;ssl=1 1536w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?resize=2048%2C833&amp;ssl=1 2048w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/Predator_Panel_Index.png?w=1800&amp;ssl=1 1800w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<p>Menu on the left is divide like this (but I&#8217;m not really sure about the correct translation)</p>
<p>Меню (Menu)<br />
Статистика (Stats)</p>
<ul>
<li>Логов (Logs)</li>
<li>По странам (Country stats)</li>
<li>Лоадера (Loader Stats)</li>
</ul>
<p>Логи (Logs)</p>
<ul>
<li>Обычная</li>
</ul>
<p>Модули (Modules)</p>
<ul>
<li>Загрузить модуль (Download/Upload Module)</li>
</ul>
<p>Настройки (Settings)</p>
<ul>
<li>Настройки сайта (Site settings)</li>
<li>Телеграм бот (Telegram Bot)</li>
<li>Конфиг (Config)</li>
</ul>
<p>Граббер (Grabber)<br />
Лоадер (Loader)<br />
Domain Detect<br />
Backup<br />
Поиск (Search)<br />
Конвертация (Converter =&gt; Netscape Json converter)</p>
<h3><strong>Statistics / Landscape</strong></h3>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="964" data-permalink="https://fumik0.com/region/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?fit=2416%2C839&amp;ssl=1" data-orig-size="2416,839" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="region" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?fit=300%2C104&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?fit=900%2C313&amp;ssl=1" class=" size-full wp-image-964 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?resize=900%2C313&#038;ssl=1" alt="region" width="900" height="313" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?w=2416&amp;ssl=1 2416w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?resize=300%2C104&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?resize=1024%2C356&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?resize=768%2C267&amp;ssl=1 768w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?resize=1536%2C533&amp;ssl=1 1536w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?resize=2048%2C711&amp;ssl=1 2048w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/region.png?w=1800&amp;ssl=1 1800w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<h3><strong>Predator Config</strong></h3>
<p>In term of configuring predator, the choices are pretty wild:</p>
<ul>
<li>The actor is able to tweak its panel, by modifying some details, like the title and detail that made me laugh is you can choose a dark theme.</li>
</ul>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1075" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/config_part1-2/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?fit=2111%2C1057&amp;ssl=1" data-orig-size="2111,1057" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="config_part1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?fit=300%2C150&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?fit=900%2C451&amp;ssl=1" class=" size-full wp-image-1075 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?resize=900%2C451&#038;ssl=1" alt="config_part1" width="900" height="451" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?w=2111&amp;ssl=1 2111w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?resize=300%2C150&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?resize=1024%2C513&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?resize=768%2C385&amp;ssl=1 768w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?resize=1536%2C769&amp;ssl=1 1536w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?resize=2048%2C1025&amp;ssl=1 2048w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/config_part1-1-4104273996-1577191883803.png?w=1800&amp;ssl=1 1800w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<ul>
<li>There is also another form, the payload config is configured by just ticking options. When done, this will update the request coming from check.get</li>
</ul>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="966" data-permalink="https://fumik0.com/conf/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?fit=2123%2C630&amp;ssl=1" data-orig-size="2123,630" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="conf" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?fit=300%2C89&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?fit=900%2C267&amp;ssl=1" class=" size-full wp-image-966 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?resize=900%2C267&#038;ssl=1" alt="conf" width="900" height="267" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?w=2123&amp;ssl=1 2123w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?resize=300%2C89&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?resize=1024%2C304&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?resize=768%2C228&amp;ssl=1 768w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?resize=1536%2C456&amp;ssl=1 1536w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?resize=2048%2C608&amp;ssl=1 2048w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/conf-351504808-1576420216108.png?w=1800&amp;ssl=1 1800w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<ul>
<li>As usual, there is also a telegram bot feature</li>
</ul>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="1076" data-permalink="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/telegram_bot-2/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?fit=2121%2C217&amp;ssl=1" data-orig-size="2121,217" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="telegram_bot" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?fit=300%2C31&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?fit=900%2C92&amp;ssl=1" class=" size-full wp-image-1076 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?resize=900%2C92&#038;ssl=1" alt="telegram_bot" width="900" height="92" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?w=2121&amp;ssl=1 2121w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?resize=300%2C31&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?resize=1024%2C105&amp;ssl=1 1024w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?resize=768%2C79&amp;ssl=1 768w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?resize=1536%2C157&amp;ssl=1 1536w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?resize=2048%2C210&amp;ssl=1 2048w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/telegram_bot-1-2035461502-1577192134861.png?w=1800&amp;ssl=1 1800w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<h3>Creating Tags for domains seen</h3>
<p>Small details which were also mentioned in Vidar, but if the actor wants specific attention for bots that have data coming from specific domains, it will create a tag that will help him to filter easily which of them is probably worth to dig into.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="958" data-permalink="https://fumik0.com/domain/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/domain-2812878347-1576420248586.png?fit=911%2C445&amp;ssl=1" data-orig-size="911,445" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="domain" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/domain-2812878347-1576420248586.png?fit=300%2C147&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/domain-2812878347-1576420248586.png?fit=900%2C440&amp;ssl=1" class=" size-full wp-image-958 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/domain-2812878347-1576420248586.png?resize=900%2C440&#038;ssl=1" alt="domain" width="900" height="440" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/domain-2812878347-1576420248586.png?w=911&amp;ssl=1 911w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/domain-2812878347-1576420248586.png?resize=300%2C147&amp;ssl=1 300w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/domain-2812878347-1576420248586.png?resize=768%2C375&amp;ssl=1 768w" sizes="auto, (max-width: 900px) 100vw, 900px" /></p>
<h3><strong>Loader config</strong></h3>
<p>The loader configuration is by far really interesting in my point of view and even it has been explained totally for its functionalities, I considered it pretty complete and user-friendly for the Threat Actor that is using it.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="959" data-permalink="https://fumik0.com/loader-3/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/loader-3209949814-1576420268503.png?fit=898%2C1166&amp;ssl=1" data-orig-size="898,1166" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="loader" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/loader-3209949814-1576420268503.png?fit=231%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/loader-3209949814-1576420268503.png?fit=789%2C1024&amp;ssl=1" class=" size-full wp-image-959 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/loader-3209949814-1576420268503.png?resize=898%2C1166&#038;ssl=1" alt="loader" width="898" height="1166" srcset="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/loader-3209949814-1576420268503.png?w=898&amp;ssl=1 898w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/loader-3209949814-1576420268503.png?resize=231%2C300&amp;ssl=1 231w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/loader-3209949814-1576420268503.png?resize=789%2C1024&amp;ssl=1 789w, https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/loader-3209949814-1576420268503.png?resize=768%2C997&amp;ssl=1 768w" sizes="auto, (max-width: 898px) 100vw, 898px" /></p>
<h2>IoCs</h2>
<p>Hashes for this analysis</p>
<p>p_pckd.exe &#8211; 21ebdc3a58f3d346247b2893d41c80126edabb060759af846273f9c9d0c92a9a<br />
p_upkd.exe &#8211; 6e27a2b223ef076d952aaa7c69725c831997898bebcd2d99654f4a1aa3358619<br />
p_clipper.exe &#8211; 01ef26b464faf08081fceeeb2cdff7a66ffdbd31072fe47b4eb43c219da287e8</p>
<p>C&amp;C</p>
<ul>
<li>cadvexmail19mn.world</li>
</ul>
<p>Other predator hashes</p>
<ul>
<li>9110e59b6c7ced21e194d37bb4fc14b2</li>
<li>51e1924ac4c3f87553e9e9c712348ac8</li>
<li>fe6125adb3cc69aa8c97ab31a0e7f5f8</li>
<li>02484e00e248da80c897e2261e65d275</li>
<li>a86f18fa2d67415ac2d576e1cd5ccad8</li>
<li>3861a092245655330f0f1ffec75aca67</li>
<li><a>ed3893c96decc3aa798be93192413d28</a></li>
</ul>
<h2>Conclusion</h2>
<p>Infostealer is not considered as harmful as recent highly mediatize ransomware attacks, but they are enough effective to perform severe damage and they should not be underrated, furthermore, with the use of cryptocurrencies that are more and more common, or something totally normal nowadays, the lack of security hygiene on this subject is awfully insane. that I am not surprised at all to see so much money stolen, so they will be still really active, it&#8217;s always interesting to keep an eye on this malware family (and also on clippers), whenever there is a new wallet software or trading cryptocurrency software on the list, you know easily what are the possible trends (if you have a lack of knowledge in that area).</p>
<p>Nowadays, it&#8217;s easy to see fresh activities in the wild for this info stealer, it could be dropped by important malware campaigns where notorious malware like ISFB Gozi is also used. It&#8217;s unnecessary (on my side) to speculate about what will be next move with Predator, I have clearly no idea and not interested in that kind of stuff. The thing is the malware scene nowadays is evolving really fast, threat actor teams are moving/switching easily and it could take only hours for new updates and rework of malware by just modifying a piece of code with something already developed on some GitHub repository, or copying code from another malware. Also, the price of the malware has been adjusted, or the support communication is moved to something else.</p>
<p>Due to this,  I am pretty sure at that time, this current in-depth analysis could be already outdated by some modifications. it&#8217;s always a risk to take and on my side, I am only interested in the malware itself, the main ideas/facts of the major version are explained and it&#8217;s plenty sufficient. There is, of course, some topics that I haven&#8217;t talk like nowadays predator is now being to work as a classic executable file or a DLL, but it was developed some times ago and this subject is now a bit popular. Also, another point that I didn&#8217;t find any explanation, is that seeing some decrypting process for strings that leads to some encryption algorithm related to Tor.</p>
<p>This in-depth analysis is also focused on showing that even simple tricks are an efficient way to slow down analysis and it is a good exercise to practice your skills if you want to improve yourself into malware analysis. Also, reverse engineering is not as hard as people could think when the fundamental concepts are assimilated, It&#8217;s just time, practice and motivation.</p>
<hr />
<p>On my side, I am, as usual, typically irregular into releasing stuff due to some stuff (again&#8230;). By the way, updating projects are still one of my main focus, I still have some things that I would love to finish which are not necessarily into malware analysis, it&#8217;s cool to change topics sometimes.</p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="992" data-permalink="https://fumik0.com/kob/" data-orig-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/kob.gif?fit=500%2C281&amp;ssl=1" data-orig-size="500,281" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="kob" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/kob.gif?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/kob.gif?fit=500%2C281&amp;ssl=1" class=" size-full wp-image-992 aligncenter" src="https://i0.wp.com/fumik0.com/wp-content/uploads/2019/12/kob.gif?resize=500%2C281&#038;ssl=1" alt="kob" width="500" height="281" /></p>
<p>#HappyHunting</p>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-twitter"><a rel="nofollow noopener noreferrer" data-shared="sharing-twitter-994" class="share-twitter sd-button share-icon" href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/?share=twitter" target="_blank" title="Click to share on Twitter" ><span>Twitter</span></a></li><li class="share-facebook"><a rel="nofollow noopener noreferrer" data-shared="sharing-facebook-994" class="share-facebook sd-button share-icon" href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/?share=facebook" target="_blank" title="Click to share on Facebook" ><span>Facebook</span></a></li><li class="share-end"></li></ul></div></div></div><div class='sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded' id='like-post-wrapper-140610880-994-67627ff60c720' data-src='https://widgets.wp.com/likes/?ver=14.2-a.3#blog_id=140610880&amp;post_id=994&amp;origin=fumik0.com&amp;obj_id=140610880-994-67627ff60c720&amp;n=1' data-name='like-post-frame-140610880-994-67627ff60c720' data-title='Like or Reblog'><h3 class="sd-title">Like this:</h3><div class='likes-widget-placeholder post-likes-widget-placeholder' style='height: 55px;'><span class='button'><span>Like</span></span> <span class="loading">Loading...</span></div><span class='sd-text-color'></span><a class='sd-link-color'></a></div>
															</div>

						</article>

						<section class="modified-date" itemprop="dateModified" content="2019-12-25T20:14:26+00:00">
							Last modified: December 25, 2019						</section>

						<section class="tags">
													</section>

																<h3 class="section-title">Author</h3>
			<aside class="author-card" itemscope itemprop="author" itemtype="http://schema.org/Person">
				<div class="author-avatar">
					<img src="https://secure.gravatar.com/avatar/60460a1a0d00b32720a59ee2624bb4aa?s=96&#038;d=identicon&#038;r=g" class="rounded-circle" itemprop="image">
				</div>
				<div class="author-info">
					<div class="author-title">
						<a href="https://fumik0.com/author/fumko/" itemprop="name">
							fumko						</a>
					</div>
					<div class="author-description" itemprop="description">  
											</div>
				</div>
			</aside>
								
													
<div id="comments" class="discussion-wrapper">
	<h3 class="section-title">Comments</h3>
	<div class="discussion-timeline">
					
				<div class="comment even thread-even depth-1 comment-wrapper" id="comment-234">
					<div class="comment-avatar">
						<img alt='' src='https://secure.gravatar.com/avatar/f3b903d7722256d3607779260af5bd24?s=44&#038;d=identicon&#038;r=g' srcset='https://secure.gravatar.com/avatar/f3b903d7722256d3607779260af5bd24?s=88&#038;d=identicon&#038;r=g 2x' class='avatar avatar-44 photo' height='44' width='44' loading='lazy' decoding='async'/>					</div>
					<div class="comment-container"> 
						<div class="comment-header">
														<div class="comment-header-btn reply">
								<a rel="nofollow" class="comment-reply-link" href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/?replytocom=234#respond" data-commentid="234" data-postid="994" data-belowelement="comment-234" data-respondelement="respond" data-replyto="Reply to Petr P." aria-label="Reply to Petr P."><i class="fas fa-reply"></i></a>							</div>

							
							<div class="comment-header-text f-14">
								<cite class="reader">Petr P.</cite>&nbsp;<a href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/#comment-234" title="commented January 24, 2021 @ 6:27 pm" class="comment-link"><time itemprop="datePublished" datetime="2021-01-24T18:27:29+00:00">commented 4 years ago</time></a>							</div>
						</div>
						<div class="comment-body">
														<div class="comment-content comment">
								<p>Hi very good article of maware analysis, could you help with this<br />
What is the encryption key that is used to decrypt the strings passed to the decrypt function?<br />
will be appreciete any of your feedback<br />
Regards<br />
Petr</p>
<div class='jetpack-comment-likes-widget-wrapper jetpack-likes-widget-unloaded' id='like-comment-wrapper-140610880-234-67627ff61ebd8' data-src='https://widgets.wp.com/likes/#blog_id=140610880&amp;comment_id=234&amp;origin=fumik0.com&amp;obj_id=140610880-234-67627ff61ebd8' data-name='like-comment-frame-140610880-234-67627ff61ebd8'>
<div class='likes-widget-placeholder comment-likes-widget-placeholder comment-likes'><span class='loading'>Loading...</span></div>
<div class='comment-likes-widget jetpack-likes-widget comment-likes'><span class='comment-like-feedback'></span><span class='sd-text-color'></span><a class='sd-link-color'></a></div>
</div>
	
							</div>
						</div>
					</div>
				</div>

				<ul class="children">

				<div class="comment byuser comment-author-fumko bypostauthor odd alt depth-2 comment-wrapper" id="comment-238">
					<div class="comment-avatar">
						<img alt='' src='https://secure.gravatar.com/avatar/60460a1a0d00b32720a59ee2624bb4aa?s=44&#038;d=identicon&#038;r=g' srcset='https://secure.gravatar.com/avatar/60460a1a0d00b32720a59ee2624bb4aa?s=88&#038;d=identicon&#038;r=g 2x' class='avatar avatar-44 photo' height='44' width='44' loading='lazy' decoding='async'/>					</div>
					<div class="comment-container"> 
						<div class="comment-header">
														<div class="comment-header-btn reply">
								<a rel="nofollow" class="comment-reply-link" href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/?replytocom=238#respond" data-commentid="238" data-postid="994" data-belowelement="comment-238" data-respondelement="respond" data-replyto="Reply to fumko" aria-label="Reply to fumko"><i class="fas fa-reply"></i></a>							</div>

							
								<div class="comment-label">
									Author								</div>

							
							<div class="comment-header-text f-14">
								<cite class="author">fumko</cite>&nbsp;<a href="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/#comment-238" title="commented April 29, 2021 @ 5:41 am" class="comment-link"><time itemprop="datePublished" datetime="2021-04-29T05:41:38+00:00">commented 4 years ago</time></a>							</div>
						</div>
						<div class="comment-body">
														<div class="comment-content comment">
								<p>Predator is always using the domain name of the c&#038;c as it&#8217;s encrypt key (if not it&#8217;s the IP of the domain).</p>
<div class='jetpack-comment-likes-widget-wrapper jetpack-likes-widget-unloaded' id='like-comment-wrapper-140610880-238-67627ff61f3b6' data-src='https://widgets.wp.com/likes/#blog_id=140610880&amp;comment_id=238&amp;origin=fumik0.com&amp;obj_id=140610880-238-67627ff61f3b6' data-name='like-comment-frame-140610880-238-67627ff61f3b6'>
<div class='likes-widget-placeholder comment-likes-widget-placeholder comment-likes'><span class='loading'>Loading...</span></div>
<div class='comment-likes-widget jetpack-likes-widget comment-likes'><span class='comment-like-feedback'></span><span class='sd-text-color'></span><a class='sd-link-color'></a></div>
</div>
	
							</div>
						</div>
					</div>
				</div>

				</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
								
		<div id="respond" class="comment-respond">
			<h3 id="reply-title" class="comment-reply-title">Leave a Reply<small><a rel="nofollow" id="cancel-comment-reply-link" href="/2019/12/25/lets-play-again-with-predator-the-thief/#respond" style="display:none;">Cancel reply</a></small></h3>			<form id="commentform" class="comment-form">
				<iframe
					title="Comment Form"
					src="https://jetpack.wordpress.com/jetpack-comment/?blogid=140610880&#038;postid=994&#038;comment_registration=0&#038;require_name_email=1&#038;stc_enabled=1&#038;stb_enabled=1&#038;show_avatars=1&#038;avatar_default=identicon&#038;greeting=Leave+a+Reply&#038;jetpack_comments_nonce=adafb3965c&#038;greeting_reply=Leave+a+Reply+to+%25s&#038;color_scheme=light&#038;lang=en_US&#038;jetpack_version=14.2-a.3&#038;iframe_unique_id=1&#038;show_cookie_consent=10&#038;has_cookie_consent=0&#038;is_current_user_subscribed=0&#038;token_key=%3Bnormal%3B&#038;sig=162b57aa394f4524d086d9fbac9d6525a3684c5b#parent=https%3A%2F%2Ffumik0.com%2F2019%2F12%2F25%2Flets-play-again-with-predator-the-thief%2F"
											name="jetpack_remote_comment"
						style="width:100%; height: 430px; border:0;"
										class="jetpack_remote_comment"
					id="jetpack_remote_comment"
					sandbox="allow-same-origin allow-top-navigation allow-scripts allow-forms allow-popups"
				>
									</iframe>
									<!--[if !IE]><!-->
					<script>
						document.addEventListener('DOMContentLoaded', function () {
							var commentForms = document.getElementsByClassName('jetpack_remote_comment');
							for (var i = 0; i < commentForms.length; i++) {
								commentForms[i].allowTransparency = false;
								commentForms[i].scrolling = 'no';
							}
						});
					</script>
					<!--<![endif]-->
							</form>
		</div>

		
		<input type="hidden" name="comment_parent" id="comment_parent" value="" />

			</div>
</div>

												
					
							</main>

							<aside id="aside-container" class="col-lg-4 col-md-4 col-sm-12" role="complementary">
					
	<div id="sidebar" class="sidebar">
		<section id="categories-3" class="widget widget_categories"><h2 class="widget-title">Categories</h2>
			<ul>
					<li class="cat-item cat-item-602944907"><a href="https://fumik0.com/category/botnet/">botnet</a> (2)
</li>
	<li class="cat-item cat-item-602944904"><a href="https://fumik0.com/category/projects/">Projects</a> (1)
</li>
	<li class="cat-item cat-item-602944906"><a href="https://fumik0.com/category/reverse/">Reverse</a> (7)
</li>
	<li class="cat-item cat-item-1"><a href="https://fumik0.com/category/uncategorized/">Uncategorized</a> (3)
</li>
			</ul>

			</section><section id="archives-3" class="widget widget_archive"><h2 class="widget-title">Archives</h2>
			<ul>
					<li><a href='https://fumik0.com/2021/06/'>June 2021</a></li>
	<li><a href='https://fumik0.com/2021/04/'>April 2021</a></li>
	<li><a href='https://fumik0.com/2019/12/'>December 2019</a></li>
	<li><a href='https://fumik0.com/2019/08/'>August 2019</a></li>
	<li><a href='https://fumik0.com/2019/05/'>May 2019</a></li>
	<li><a href='https://fumik0.com/2019/03/'>March 2019</a></li>
	<li><a href='https://fumik0.com/2019/02/'>February 2019</a></li>
	<li><a href='https://fumik0.com/2018/12/'>December 2018</a></li>
	<li><a href='https://fumik0.com/2018/10/'>October 2018</a></li>
	<li><a href='https://fumik0.com/2018/05/'>May 2018</a></li>
	<li><a href='https://fumik0.com/2018/01/'>January 2018</a></li>
			</ul>

			</section>	</div>

	<div id="sidebar-sticky" class="sidebar sticky-top">
		<nav id="toc" class="toc" role="navigation"></nav>
	</div>
				</aside>
			
		</div><!-- .row -->
		
	<nav class="navigation post-navigation" aria-label="Posts">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links"><div class="nav-previous"><a href="https://fumik0.com/2019/08/27/haruko-malware-tracker-1-year-anniversary-update/" rel="prev"><i class="fas fa-angle-left"></i> <span class="screen-reader-text">Previous Post</span> Haruko Malware Tracker &#8211; 1 Year Anniversary Update</a></div><div class="nav-next"><a href="https://fumik0.com/2021/04/24/anatomy-of-a-simple-and-popular-packer/" rel="next"><i class="fas fa-angle-right"></i> <span class="screen-reader-text">Next Post</span> Anatomy of a simple and popular packer</a></div></div>
	</nav>	</div><!-- .container -->
</div><!-- .data-schema -->


			<footer class="footer" role="contentinfo">
								<section class="footer-sidebar">
					<div class="container px-responsive">
						<div class="row my-4">
							<section id="rss_links-5" class="widget widget_rss_links col-lg col-md-4 col-sm-12"><p><a target="_self" href="https://fumik0.com/feed/" title="Subscribe to posts"><img src="https://fumik0.com/wp-content/plugins/jetpack/images/rss/orange-small.png" alt="RSS feed" /></a></p>
</section>						</div>
					</div>
				</section>
				
				<div class="container footer-columns">
					<div class="footer-column-left">
						<div>Copyright &copy; 2024 <strong><a href="https://fumik0.com">Fumik0_&#039;s box</a></strong>. All rights reserved. Theme by <a href="https://terryl.in/" target="_blank">Mynote</a>. </div>
						<div></div>
					</div>
					<div class="footer-column-right">
						<nav class="footer-nav"><ul id="menu-social-media" class="social-icon-links"><li id="menu-item-273"><a href="http://tracker.fumik0.com"><i class="fas fa-link"></i></a></li>
<li id="menu-item-13"><a target="_blank" href="https://twitter.com/fumik0_"><span class="brand-sm"><i class="fab fa-twitter twitter brand-link"></i></span></a></li>
<li id="menu-item-424"><a href="https://github.com/Fmk0"><span class="brand-sm"><i class="fab fa-github-alt github brand-link"></i></span></a></li>
<li id="menu-item-426"><a href="https://www.youtube.com/channel/UClEmTjO2nLjbwGht-OckQhA"><span class="brand-sm"><i class="fab fa-youtube youtube brand-link"></i></span></a></li>
</ul></nav>					</div>
				</div>

			</footer>
		</div><!-- .wrapper -->
			<script>

	jQuery( document ).ready(function( $ ) {
		const win = $( window );
		const doc = $( document );
		const progressBar = $( 'progress' );
		const progressLabel = $( '.progress-label' );
		const setValue = () => win.scrollTop();
		const setMax = () => doc.height() - win.height();
		const setPercent = () => Math.round( win.scrollTop() / (doc.height() - win.height()) * 100 );
		const pageTitle = $( '#post-title' );
		const pageTitleTop = pageTitle.offset().top;
		const progressBarContainer = $( '.single-post-title-bar' );
		const headerNavBrand = $( '.header .navbar-brand' );
		const progressTitle = $( '#progress-title' );
		const headerBarContainer = $( '.header .container' );

		progressLabel.text( setPercent() + '%' );
		progressBar.attr(
			{
				value: setValue(),
				max: setMax() 
			}
		);

		doc.on( 'scroll', () => {
			progressLabel.text( setPercent() + '%' );
			progressBar.attr(
				{
					value: setValue()
				} 
			);

			if ( doc.scrollTop() > headerNavBrand.height() ) {
				//headerBarContainer.fadeOut( 800 );
				progressTitle.html( pageTitle.html() );
				progressBarContainer.find( '.navbar-brand' ).html( headerNavBrand.html() );
				progressBarContainer.fadeIn( 100 );
				progressBarContainer.addClass( 'fixed-top' );
				progressBarContainer.addClass( 'slide-down' );
			} else {
				//headerBarContainer.fadeIn( 800 );
				progressBarContainer.removeClass( 'slide-down' );
				progressBarContainer.fadeOut( 100 );

				if ( progressBarContainer.hasClass( 'fixed-top' ) ) {
					setTimeout(function() {
						progressBarContainer.removeClass( 'fixed-top' );
					}, 500);
				}
			}
		});

		win.on( 'resize', () => {
			progressLabel.text( setPercent() + '%' );
			progressBar.attr(
				{
					value: setValue(), 
					max: setMax()
				} 
			);
		});

		// Sidebar switcher
		$( '#main-container' ).attr( 'data-previous-class', $( '#main-container' ).attr( 'class' ) );

		$( '.column-control .btn-counter' ).click(function() {
			var target = $( this ).attr( 'data-target' );
			if ( $( this ).hasClass( 'active' ) ) {
				$( this ).removeClass( 'active' );

				if ( target == '#aside-container' ) {
					$( '#main-container' ).attr( 'data-previous-class', $( '#main-container' ).attr( 'class' ) );
					$( '#main-container' ).attr( 'class', 'col col-sm-12' );
					$( '#aside-container' ).hide();
				}
				if ( target == '#sidebar') {
					$( target ).show();
				}
			} else {
				$( this ).addClass( 'active' );

				if ( target == '#aside-container' ) {
					$( '#main-container' ).attr( 'class', $( '#main-container' ).attr( 'data-previous-class' ) );
					$( '#aside-container' ).show();
				}
				if ( target == '#sidebar') {
					$( target ).hide();
				}
			}

		});

		// For responsive.
		$( '.markdown-body img' ).attr('height', '');
	});

	</script>
	<script>

	jQuery( document ).ready(function( $ ) {

		$( '.scroll-area a' ).on( 'click', function(e) {
			e.preventDefault();
			var movingPosition = 0;

			if ( $( this.hash ).offset().top > $( document ).height() - $( window ).height() ) {
				movingPosition = $( document ).height() - $( window ).height();
			} else {
				movingPosition = $( this.hash ).offset().top;
			}

			$( 'html, body' ).animate({
				scrollTop: movingPosition
			}, 500, 'swing' );
		});

		$( 'a.go-top' ).on( 'click' ,function(e) {
			e.preventDefault();
			$( 'html, body' ).animate( { scrollTop: 0 }, 1000 );
		});

		$( window ).scroll( function() {      
			var windowTop =  $( window ).scrollTop();
			if ( windowTop > 100 ) {
				$( 'a.go-top' ).fadeIn( 300 );
			} else {
				$( 'a.go-top' ).fadeOut( 300 );
			}
		});

		$( '#mynote-nav-bar' ).on( 'show.bs.collapse' , function () {
			$( 'body' ).addClass( 'menu-is-collapsed' );
			$( '.main-header' ).css( { 'top': '-60px' } ).animate( { 'top': '0px' }, 500 );
			$( '.has-site-logo .search-bar' ).fadeOut( 500 );
		});

		$( '#mynote-nav-bar' ).on( 'hidden.bs.collapse' , function () {
			$( '.main-header' ).css( { 'top': '0px' } ).animate( { 'top': '-60px' }, 500 );
			$( '.has-site-logo .search-bar' ).fadeIn( 500 );
			setTimeout(function() {
				$( 'body' ).removeClass( 'menu-is-collapsed' );
			}, 500);
			
		});
	});

	</script>
	<!--  -->
<script defer id="bilmur" data-customproperties="{&quot;woo_active&quot;:&quot;0&quot;}" data-provider="wordpress.com" data-service="atomic"  src="https://s0.wp.com/wp-content/js/bilmur.min.js?m=202451"></script>
					<div class="jetpack-subscription-modal">
						<div class="jetpack-subscription-modal__modal-content">
								
	<div class="wp-block-group has-border-color jetpack-subscription-modal__modal-content-form" style="border-color:#dddddd;border-width:1px;margin-top:0;margin-bottom:0;padding:32px"><div class="wp-block-group__inner-container is-layout-flow wp-block-group-is-layout-flow">

		
		<h2 class="wp-block-heading has-text-align-center" style="margin-top:4px;margin-bottom:10px;font-size:26px;font-style:normal;font-weight:600">Discover more from Fumik0_&#039;s box</h2>
		

		
		<p class='has-text-align-center' style='margin-top:4px;margin-bottom:0px;font-size:15px'>Subscribe now to keep reading and get access to the full archive.</p>
		

			<div class="wp-block-jetpack-subscriptions__supports-newline is-style-compact wp-block-jetpack-subscriptions">
		<div class="wp-block-jetpack-subscriptions__container is-not-subscriber">
							<form
					action="https://wordpress.com/email-subscriptions"
					method="post"
					accept-charset="utf-8"
					data-blog="140610880"
					data-post_access_level="everybody"
					data-subscriber_email=""
					id="subscribe-blog"
				>
					<div class="wp-block-jetpack-subscriptions__form-elements">
												<p id="subscribe-email">
							<label
								id="subscribe-field-label"
								for="subscribe-field"
								class="screen-reader-text"
							>
								Type your email…							</label>
							<input
									required="required"
									type="email"
									name="email"
									
									style="font-size: 16px;padding: 15px 23px 15px 23px;border-radius: 50px;border-width: 1px;"
									placeholder="Type your email…"
									value=""
									id="subscribe-field"
									title="Please fill in this field."
								/>						</p>
												<p id="subscribe-submit"
													>
							<input type="hidden" name="action" value="subscribe"/>
							<input type="hidden" name="blog_id" value="140610880"/>
							<input type="hidden" name="source" value="https://fumik0.com/2019/12/25/lets-play-again-with-predator-the-thief/"/>
							<input type="hidden" name="sub-type" value="subscribe-block"/>
							<input type="hidden" name="app_source" value="atomic-subscription-modal-lo"/>
							<input type="hidden" name="redirect_fragment" value="subscribe-blog"/>
							<input type="hidden" name="lang" value="en_US"/>
							<input type="hidden" id="_wpnonce" name="_wpnonce" value="c43f937e1f" /><input type="hidden" name="_wp_http_referer" value="/2019/12/25/lets-play-again-with-predator-the-thief/" /><input type="hidden" name="post_id" value="994"/>							<button type="submit"
																	class="wp-block-button__link"
																									style="font-size: 16px;padding: 15px 23px 15px 23px;margin: 0; margin-left: 10px;border-radius: 50px;border-width: 1px;"
																name="jetpack_subscriptions_widget"
							>
								Subscribe							</button>
						</p>
					</div>
				</form>
								</div>
	</div>
	

		
		<p class="has-text-align-center jetpack-subscription-modal__close" style="margin-top:20px;font-size:14px"><a href="#">Continue reading</a></p>
		
	</div></div>
							</div>
					</div>
				<div style="display:none">
			<div class="grofile-hash-map-f3b903d7722256d3607779260af5bd24">
		</div>
		<div class="grofile-hash-map-60460a1a0d00b32720a59ee2624bb4aa">
		</div>
		</div>
				<div id="jp-carousel-loading-overlay">
			<div id="jp-carousel-loading-wrapper">
				<span id="jp-carousel-library-loading">&nbsp;</span>
			</div>
		</div>
		<div class="jp-carousel-overlay" style="display: none;">

		<div class="jp-carousel-container">
			<!-- The Carousel Swiper -->
			<div
				class="jp-carousel-wrap swiper-container jp-carousel-swiper-container jp-carousel-transitions"
				itemscope
				itemtype="https://schema.org/ImageGallery">
				<div class="jp-carousel swiper-wrapper"></div>
				<div class="jp-swiper-button-prev swiper-button-prev">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskPrev" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="9" height="12">
							<path d="M16.2072 16.59L11.6496 12L16.2072 7.41L14.8041 6L8.8335 12L14.8041 18L16.2072 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskPrev)">
							<rect x="0.579102" width="23.8823" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
				<div class="jp-swiper-button-next swiper-button-next">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskNext" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="8" height="12">
							<path d="M8.59814 16.59L13.1557 12L8.59814 7.41L10.0012 6L15.9718 12L10.0012 18L8.59814 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskNext)">
							<rect x="0.34375" width="23.8822" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
			</div>
			<!-- The main close buton -->
			<div class="jp-carousel-close-hint">
				<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<mask id="maskClose" mask-type="alpha" maskUnits="userSpaceOnUse" x="5" y="5" width="15" height="14">
						<path d="M19.3166 6.41L17.9135 5L12.3509 10.59L6.78834 5L5.38525 6.41L10.9478 12L5.38525 17.59L6.78834 19L12.3509 13.41L17.9135 19L19.3166 17.59L13.754 12L19.3166 6.41Z" fill="white"/>
					</mask>
					<g mask="url(#maskClose)">
						<rect x="0.409668" width="23.8823" height="24" fill="#FFFFFF"/>
					</g>
				</svg>
			</div>
			<!-- Image info, comments and meta -->
			<div class="jp-carousel-info">
				<div class="jp-carousel-info-footer">
					<div class="jp-carousel-pagination-container">
						<div class="jp-swiper-pagination swiper-pagination"></div>
						<div class="jp-carousel-pagination"></div>
					</div>
					<div class="jp-carousel-photo-title-container">
						<h2 class="jp-carousel-photo-caption"></h2>
					</div>
					<div class="jp-carousel-photo-icons-container">
						<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-info" aria-label="Toggle photo metadata visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskInfo" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M12.7537 2C7.26076 2 2.80273 6.48 2.80273 12C2.80273 17.52 7.26076 22 12.7537 22C18.2466 22 22.7046 17.52 22.7046 12C22.7046 6.48 18.2466 2 12.7537 2ZM11.7586 7V9H13.7488V7H11.7586ZM11.7586 11V17H13.7488V11H11.7586ZM4.79292 12C4.79292 16.41 8.36531 20 12.7537 20C17.142 20 20.7144 16.41 20.7144 12C20.7144 7.59 17.142 4 12.7537 4C8.36531 4 4.79292 7.59 4.79292 12Z" fill="white"/>
									</mask>
									<g mask="url(#maskInfo)">
										<rect x="0.8125" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
							</span>
						</a>
												<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-comments" aria-label="Toggle photo comments visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskComments" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M4.3271 2H20.2486C21.3432 2 22.2388 2.9 22.2388 4V16C22.2388 17.1 21.3432 18 20.2486 18H6.31729L2.33691 22V4C2.33691 2.9 3.2325 2 4.3271 2ZM6.31729 16H20.2486V4H4.3271V18L6.31729 16Z" fill="white"/>
									</mask>
									<g mask="url(#maskComments)">
										<rect x="0.34668" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>

								<span class="jp-carousel-has-comments-indicator" aria-label="This image has comments."></span>
							</span>
						</a>
											</div>
				</div>
				<div class="jp-carousel-info-extra">
					<div class="jp-carousel-info-content-wrapper">
						<div class="jp-carousel-photo-title-container">
							<h2 class="jp-carousel-photo-title"></h2>
						</div>
						<div class="jp-carousel-comments-wrapper">
															<div id="jp-carousel-comments-loading">
									<span>Loading Comments...</span>
								</div>
								<div class="jp-carousel-comments"></div>
								<div id="jp-carousel-comment-form-container">
									<span id="jp-carousel-comment-form-spinner">&nbsp;</span>
									<div id="jp-carousel-comment-post-results"></div>
																														<form id="jp-carousel-comment-form">
												<label for="jp-carousel-comment-form-comment-field" class="screen-reader-text">Write a Comment...</label>
												<textarea
													name="comment"
													class="jp-carousel-comment-form-field jp-carousel-comment-form-textarea"
													id="jp-carousel-comment-form-comment-field"
													placeholder="Write a Comment..."
												></textarea>
												<div id="jp-carousel-comment-form-submit-and-info-wrapper">
													<div id="jp-carousel-comment-form-commenting-as">
																													<fieldset>
																<label for="jp-carousel-comment-form-email-field">Email (Required)</label>
																<input type="text" name="email" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-email-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-author-field">Name (Required)</label>
																<input type="text" name="author" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-author-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-url-field">Website</label>
																<input type="text" name="url" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-url-field" />
															</fieldset>
																											</div>
													<input
														type="submit"
														name="submit"
														class="jp-carousel-comment-form-button"
														id="jp-carousel-comment-form-button-submit"
														value="Post Comment" />
												</div>
											</form>
																											</div>
													</div>
						<div class="jp-carousel-image-meta">
							<div class="jp-carousel-title-and-caption">
								<div class="jp-carousel-photo-info">
									<h3 class="jp-carousel-caption" itemprop="caption description"></h3>
								</div>

								<div class="jp-carousel-photo-description"></div>
							</div>
							<ul class="jp-carousel-image-exif" style="display: none;"></ul>
							<a class="jp-carousel-image-download" href="#" target="_blank" style="display: none;">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="3" y="3" width="19" height="18">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M5.84615 5V19H19.7775V12H21.7677V19C21.7677 20.1 20.8721 21 19.7775 21H5.84615C4.74159 21 3.85596 20.1 3.85596 19V5C3.85596 3.9 4.74159 3 5.84615 3H12.8118V5H5.84615ZM14.802 5V3H21.7677V10H19.7775V6.41L9.99569 16.24L8.59261 14.83L18.3744 5H14.802Z" fill="white"/>
									</mask>
									<g mask="url(#mask0)">
										<rect x="0.870605" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
								<span class="jp-carousel-download-text"></span>
							</a>
							<div class="jp-carousel-image-map" style="display: none;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>

		</div>
		
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"https:\/\/fumik0.com\/2019\/12\/25\/lets-play-again-with-predator-the-thief\/":994};
	</script>
				<link rel='stylesheet' id='jetpack-carousel-swiper-css-css' href='https://fumik0.com/wp-content/plugins/jetpack/modules/carousel/swiper-bundle.css?ver=14.2-a.3' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-carousel-css' href='https://fumik0.com/wp-content/plugins/jetpack/modules/carousel/jetpack-carousel.css?ver=14.2-a.3' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-block-subscriptions-css' href='https://fumik0.com/wp-content/plugins/jetpack/_inc/blocks/subscriptions/view.css?minify=false&#038;ver=14.2-a.3' type='text/css' media='all' />
<script type="text/javascript" src="https://c0.wp.com/c/6.7.1/wp-includes/js/comment-reply.min.js" id="comment-reply-js" async="async" data-wp-strategy="async"></script>
<script type="text/javascript" src="https://c0.wp.com/c/6.7.1/wp-includes/js/dist/dom-ready.min.js" id="wp-dom-ready-js"></script>
<script type="text/javascript" id="subscription-modal-js-js-extra">
/* <![CDATA[ */
var subscriptionData = {"homeUrl":"fumik0.com"};
/* ]]> */
</script>
<script type="text/javascript" src="https://fumik0.com/wp-content/plugins/jetpack/modules/comments/subscription-modal-on-comment/subscription-modal.js?ver=14.2-a.3" id="subscription-modal-js-js"></script>
<script type="text/javascript" src="https://secure.gravatar.com/js/gprofiles.js?ver=202451" id="grofiles-cards-js"></script>
<script type="text/javascript" id="wpgroho-js-extra">
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type="text/javascript" src="https://fumik0.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=14.2-a.3" id="wpgroho-js"></script>
<script type="text/javascript" src="https://fumik0.com/wp-content/plugins/jetpack/_inc/build/likes/queuehandler.min.js?ver=14.2-a.3" id="jetpack_likes_queuehandler-js"></script>
<script type="text/javascript" src="https://c0.wp.com/c/6.7.1/wp-includes/js/clipboard.min.js" id="clipboard-js"></script>
<script type="text/javascript" src="https://fumik0.com/wp-content/plugins/highlighting-code-block/assets/js/prism.js?ver=1.2.9" id="hcb-prism-js"></script>
<script type="text/javascript" id="hcb-script-js-extra">
/* <![CDATA[ */
var hcbVars = {"showCopy":"on"};
/* ]]> */
</script>
<script type="text/javascript" src="https://fumik0.com/wp-content/plugins/highlighting-code-block/build/js/hcb_script.js?ver=1.2.9" id="hcb-script-js"></script>
<script type="text/javascript" src="https://stats.wp.com/e-202451.js" id="jetpack-stats-js" data-wp-strategy="defer"></script>
<script type="text/javascript" id="jetpack-stats-js-after">
/* <![CDATA[ */
_stq = window._stq || [];
_stq.push([ "view", JSON.parse("{\"v\":\"ext\",\"blog\":\"140610880\",\"post\":\"994\",\"tz\":\"0\",\"srv\":\"fumik0.com\",\"hp\":\"atomic\",\"ac\":\"2\",\"amp\":\"0\",\"j\":\"1:14.2-a.3\"}") ]);
_stq.push([ "clickTrackerInit", "140610880", "994" ]);
/* ]]> */
</script>
<script type="text/javascript" id="jetpack-carousel-js-extra">
/* <![CDATA[ */
var jetpackSwiperLibraryPath = {"url":"https:\/\/fumik0.com\/wp-content\/plugins\/jetpack\/_inc\/build\/carousel\/swiper-bundle.min.js"};
var jetpackCarouselStrings = {"widths":[370,700,1000,1200,1400,2000],"is_logged_in":"","lang":"en","ajaxurl":"https:\/\/fumik0.com\/wp-admin\/admin-ajax.php","nonce":"acafc58171","display_exif":"1","display_comments":"1","single_image_gallery":"1","single_image_gallery_media_file":"","background_color":"black","comment":"Comment","post_comment":"Post Comment","write_comment":"Write a Comment...","loading_comments":"Loading Comments...","image_label":"Open image in full-screen.","download_original":"View full size <span class=\"photo-size\">{0}<span class=\"photo-size-times\">\u00d7<\/span>{1}<\/span>","no_comment_text":"Please be sure to submit some text with your comment.","no_comment_email":"Please provide an email address to comment.","no_comment_author":"Please provide your name to comment.","comment_post_error":"Sorry, but there was an error posting your comment. Please try again later.","comment_approved":"Your comment was approved.","comment_unapproved":"Your comment is in moderation.","camera":"Camera","aperture":"Aperture","shutter_speed":"Shutter Speed","focal_length":"Focal Length","copyright":"Copyright","comment_registration":"0","require_name_email":"1","login_url":"https:\/\/fumik0.com\/wp-login.php?redirect_to=https%3A%2F%2Ffumik0.com%2F2019%2F12%2F25%2Flets-play-again-with-predator-the-thief%2F","blog_id":"1","meta_data":["camera","aperture","shutter_speed","focal_length","copyright"]};
/* ]]> */
</script>
<script type="text/javascript" src="https://fumik0.com/wp-content/plugins/jetpack/_inc/build/carousel/jetpack-carousel.min.js?ver=14.2-a.3" id="jetpack-carousel-js"></script>
<script defer type="text/javascript" src="https://fumik0.com/wp-content/plugins/akismet/_inc/akismet-frontend.js?ver=1704837122" id="akismet-frontend-js"></script>
<script type="text/javascript" id="jetpack-blocks-assets-base-url-js-before">
/* <![CDATA[ */
var Jetpack_Block_Assets_Base_Url="https://fumik0.com/wp-content/plugins/jetpack/_inc/blocks/";
/* ]]> */
</script>
<script type="text/javascript" src="https://c0.wp.com/c/6.7.1/wp-includes/js/dist/vendor/wp-polyfill.min.js" id="wp-polyfill-js"></script>
<script type="text/javascript" src="https://fumik0.com/wp-content/plugins/jetpack/_inc/blocks/subscriptions/view.js?minify=false&amp;ver=14.2-a.3" id="jetpack-block-subscriptions-js"></script>
<script type="text/javascript" id="sharing-js-js-extra">
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1","is_stats_active":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="https://fumik0.com/wp-content/plugins/jetpack/_inc/build/sharedaddy/sharing.min.js?ver=14.2-a.3" id="sharing-js-js"></script>
<script type="text/javascript" id="sharing-js-js-after">
/* <![CDATA[ */
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-twitter' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-twitter' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-facebook' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-facebook' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
						return false;
					}
				} );
			} )();
/* ]]> */
</script>
	<iframe src='https://widgets.wp.com/likes/master.html?ver=20241218#ver=20241218&#038;n=1' scrolling='no' id='likes-master' name='likes-master' style='display:none;'></iframe>
	<div id='likes-other-gravatars' class='wpl-new-layout' role="dialog" aria-hidden="true" tabindex="-1"><div class="likes-text"><span>%d</span></div><ul class="wpl-avatars sd-like-gravatars"></ul></div>
			<script type="text/javascript">
			(function () {
				const iframe = document.getElementById( 'jetpack_remote_comment' );
								const watchReply = function() {
					// Check addComment._Jetpack_moveForm to make sure we don't monkey-patch twice.
					if ( 'undefined' !== typeof addComment && ! addComment._Jetpack_moveForm ) {
						// Cache the Core function.
						addComment._Jetpack_moveForm = addComment.moveForm;
						const commentParent = document.getElementById( 'comment_parent' );
						const cancel = document.getElementById( 'cancel-comment-reply-link' );

						function tellFrameNewParent ( commentParentValue ) {
							const url = new URL( iframe.src );
							if ( commentParentValue ) {
								url.searchParams.set( 'replytocom', commentParentValue )
							} else {
								url.searchParams.delete( 'replytocom' );
							}
							if( iframe.src !== url.href ) {
								iframe.src = url.href;
							}
						};

						cancel.addEventListener( 'click', function () {
							tellFrameNewParent( false );
						} );

						addComment.moveForm = function ( _, parentId ) {
							tellFrameNewParent( parentId );
							return addComment._Jetpack_moveForm.apply( null, arguments );
						};
					}
				}
				document.addEventListener( 'DOMContentLoaded', watchReply );
				// In WP 6.4+, the script is loaded asynchronously, so we need to wait for it to load before we monkey-patch the functions it introduces.
				document.querySelector('#comment-reply-js')?.addEventListener( 'load', watchReply );

								
				const commentIframes = document.getElementsByClassName('jetpack_remote_comment');

				window.addEventListener('message', function(event) {
					if (event.origin !== 'https://jetpack.wordpress.com') {
						return;
					}

					if (!event?.data?.iframeUniqueId && !event?.data?.height) {
						return;
					}

					const eventDataUniqueId = event.data.iframeUniqueId;

					// Change height for the matching comment iframe
					for (let i = 0; i < commentIframes.length; i++) {
						const iframe = commentIframes[i];
						const url = new URL(iframe.src);
						const iframeUniqueIdParam = url.searchParams.get('iframe_unique_id');
						if (iframeUniqueIdParam == event.data.iframeUniqueId) {
							iframe.style.height = event.data.height + 'px';
							return;
						}
					}
				});
			})();
		</script>
		
		<a href="javascript:void(0);" class="go-top" style="display: none">
			<i class="fas fa-arrow-up"></i>
		</a>
	</body>
</html>
<!--
	generated in 0.441 seconds
	221361 bytes batcached for 300 seconds
-->
