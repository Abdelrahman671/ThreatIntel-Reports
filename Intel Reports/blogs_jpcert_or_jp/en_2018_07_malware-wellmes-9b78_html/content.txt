
<!DOCTYPE html>
 <html itemscope="" itemtype="http://schema.org/WebPage" lang="en"> <head> <meta charset="utf-8"/> <meta content="IE=edge" http-equiv="X-UA-Compatible"/> <meta content="width=device-width,initial-scale=1" name="viewport"/>
<title>Malware “WellMess” Targeting Linux and Windows - JPCERT/CC Eyes | JPCERT Coordination Center official Blog</title>
<meta content="Some malware is designed to run on multiple platforms, and most commonly they are written in Java. For example, Adwind malware (introduced in a past article) is written in Java, and it runs on Windows and other OS. Golang is..." name="description"/>
<meta content="" name="keywords"/>
<meta content="website" property="og:type"/>
<meta content="en_US" property="og:locale"/>
<meta content="Malware “WellMess” Targeting Linux and Windows - JPCERT/CC Eyes" property="og:title"/>
<meta content="https://blogs.jpcert.or.jp/en/2018/07/malware-wellmes-9b78.html" property="og:url"/>
<meta content="Some malware is designed to run on multiple platforms, and most commonly they are written in Java. For example, Adwind malware (introduced in a past article) is written in Java, and it runs on Windows and other OS. Golang is..." property="og:description"/>
<meta content="JPCERT/CC Eyes" property="og:site_name"/>
<meta content="https://blogs.jpcert.or.jp/en/.assets/thumbnail/fig1-ffd31573-800wi.png" property="og:image"/>
<meta content="summary_large_image" name="twitter:card"/>
<meta content="Malware “WellMess” Targeting Linux and Windows - JPCERT/CC Eyes" name="twitter:title"/>
<meta content="Some malware is designed to run on multiple platforms, and most commonly they are written in Java. For example, Adwind malware (introduced in a past article) is written in Java, and it runs on Windows and other OS. Golang is..." name="twitter:description"/>
<meta content="https://blogs.jpcert.or.jp/en/.assets/thumbnail/fig1-ffd31573-800wi.png" name="twitter:image"/>
<meta content="Some malware is designed to run on multiple platforms, and most commonly they are written in Java. For example, Adwind malware (introduced in a past article) is written in Java, and it runs on Windows and other OS. Golang is..." itemprop="description"/>
<link href="https://blogs.jpcert.or.jp/en/2018/07/malware-wellmes-9b78.html" itemprop="url"/>
<link href="https://blogs.jpcert.or.jp/en/.assets/thumbnail/fig1-ffd31573-800wi.png" itemprop="image"/>
<link href="/en/" rel="start"/> <link href="/en/atom.xml" rel="alternate" type="application/atom+xml"/> <link href="/en/common/css/styles.css" rel="stylesheet"/> <link href="/en/common/images/favicon.ico" rel="shortcut icon" type="image/x-icon"/> <link crossorigin="anonymous" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" integrity="sha256-NuCn4IvuZXdBaFKJOAcsU2Q3ZpwbdFisd5dux4jkQ5w=" rel="stylesheet"> <!--[if lt IE 9]>    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js" integrity="sha256-3Jy/GbSLrg0o9y5Z5n1uw0qxZECH7C6OQpVBgNFYa0g=" crossorigin="anonymous"></script>    <script src="//cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.min.js" integrity="sha256-g6iAfvZp+nDQ2TdTR/VVKJf3bGro4ub5fvWSWVRi2NE=" crossorigin="anonymous"></script>    <![endif]--> <!-- Global site tag (gtag.js) - Google Analytics -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-124034031-1"></script>
<script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'UA-124034031-1');
    </script>
<!-- Global site tag (gtag.js) - Google Analytics GA4-->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-6NX4WBMERX"></script>
<script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-6NX4WBMERX');
    </script>
<link href="https://blogs.jpcert.or.jp/en/2018/07/malware-wellmes-9b78.html" rel="canonical">
</link></link></head> <body class="page_english">
<!-- prepend body -->
<header class="header header--bottom">
<div class="header__inner clearfix">
<p class="header__logo">
<a href="https://www.jpcert.or.jp/english/" target="_blank">
<img alt="JPCERT/CC Eyes" class="header__logo__src" height="66" src="/en/common/images/header_logo.svg" width="198"/>
</a>
</p>
<h1 class="header__title">
<a class="header__title__link" href="/en/">JPCERT/CC Eyes</a>
</h1>
<h2 class="header__description">JPCERT Coordination Center official Blog</h2>
<div class="header__lang">
<p class="header__lang__cell-label">Language:</p>
<div class="header__lang__cell-field">
<select class="header__lang__switcher" onchange="location.href = this.value;">
<option value="/ja/">日本語</option>
<option selected="" value="/en/">English</option>
</select>
</div>
</div>
</div>
</header>
<section class="breadcrumb-navi">
<div class="inner">
<a href="/en/">Top</a> &gt; <a href="https://blogs.jpcert.or.jp/en/malware/">List of “Malware”</a> &gt; Malware “WellMess” Targeting Linux and Windows
      </div>
</section>
<div class="clearfix" id="content">
<div id="main-wrapper">
<main role="main">
<article class="entry" id="entry-991408">
<div class="entry-meta clearfix">
<div class="entry-author">
<figure>
<a href="https://blogs.jpcert.or.jp/en/shu_tom/">
<img alt="朝長 秀誠 (Shusei Tomonaga)" height="50" src="https://movabletype.net/users/shu_tom/ENCORE_400x400.jpg" width="50"/>
</a>
</figure>
<p><a href="https://blogs.jpcert.or.jp/en/shu_tom/">朝長 秀誠 (Shusei Tomonaga)</a></p>
</div>
<div class="entry-date">
<time datetime="2018-07-06T00:00:00+09:00">July  6, 2018</time>
</div>
</div>
<h2 class="entry-title">Malware “WellMess” Targeting Linux and Windows</h2>
<section class="entry-tags">
<ul>
<li>
<a href="https://blogs.jpcert.or.jp/en/tags/tool/">Tool</a>
</li>
</ul>
</section>
<div class="entry-social-buttons entry-social-buttons--before-content clearfix">
<ul>
<li class="entry-social-twitter">
<a class="twitter-share-button" data-show-count="false" data-text="Malware “WellMess” Targeting Linux and Windows" data-url="https://blogs.jpcert.or.jp/en/2018/07/malware-wellmes-9b78.html" href="https://twitter.com/share"></a>
</li>
<li class="entry-social-mail">
<a href="mailto:?subject=Malware%20%E2%80%9CWellMess%E2%80%9D%20Targeting%20Linux%20and%20Windows&amp;body=https%3A%2F%2Fblogs.jpcert.or.jp%2Fen%2F2018%2F07%2Fmalware-wellmes-9b78.html">Email</a>
</li>
</ul>
</div>
<section class="entry-content clearfix">
<p>Some malware is designed to run on multiple platforms, and most commonly they are written in Java. For example, Adwind malware (introduced in <a href="https://blogs.jpcert.or.jp/en/2016/05/decoding-obfuscated-strings-in-adwind.html">a past article</a>) is written in Java, and it runs on Windows and other OS. Golang is another programming language, and it is used for Mirai controller, which infects Linux systems.</p>
<p>This article introduces the behaviour of WellMess malware based on our observation. It is a type of malware programmed in Golang and cross-compiled to make it compatible both with Linux and Windows. For more details about the malware function, please also refer to the report from LAC [1].</p>
<h4><strong>Behaviour of WellMess</strong></h4>
<p>Generally, Golang executable files include many required libraries in itself. This usually increases the file size, making WellMess larger than 3 MB. Another feature is that function names for the executable files can be found in the file itself. (Even for stripped files, function names can be retrieved by using tools such as GoUtils2.0 [2].) Below are the function names used in WellMess:</p>
<pre><code>_/home/ubuntu/GoProject/src/bot/botlib.EncryptText
_/home/ubuntu/GoProject/src/bot/botlib.encrypt
_/home/ubuntu/GoProject/src/bot/botlib.Command
_/home/ubuntu/GoProject/src/bot/botlib.reply
_/home/ubuntu/GoProject/src/bot/botlib.Service
_/home/ubuntu/GoProject/src/bot/botlib.saveFile
_/home/ubuntu/GoProject/src/bot/botlib.UDFile
_/home/ubuntu/GoProject/src/bot/botlib.Download
_/home/ubuntu/GoProject/src/bot/botlib.Send
_/home/ubuntu/GoProject/src/bot/botlib.Work
_/home/ubuntu/GoProject/src/bot/botlib.chunksM
_/home/ubuntu/GoProject/src/bot/botlib.Join
_/home/ubuntu/GoProject/src/bot/botlib.wellMess
_/home/ubuntu/GoProject/src/bot/botlib.RandStringBytes
_/home/ubuntu/GoProject/src/bot/botlib.GetRandomBytes
_/home/ubuntu/GoProject/src/bot/botlib.Key
_/home/ubuntu/GoProject/src/bot/botlib.GenerateSymmKey
_/home/ubuntu/GoProject/src/bot/botlib.CalculateMD5Hash
_/home/ubuntu/GoProject/src/bot/botlib.Parse
_/home/ubuntu/GoProject/src/bot/botlib.Pack
_/home/ubuntu/GoProject/src/bot/botlib.Unpack
_/home/ubuntu/GoProject/src/bot/botlib.UnpackB
_/home/ubuntu/GoProject/src/bot/botlib.FromNormalToBase64
_/home/ubuntu/GoProject/src/bot/botlib.RandInt
_/home/ubuntu/GoProject/src/bot/botlib.Base64ToNormal
_/home/ubuntu/GoProject/src/bot/botlib.KeySizeError.Error
_/home/ubuntu/GoProject/src/bot/botlib.New
_/home/ubuntu/GoProject/src/bot/botlib.(*rc6cipher).BlockSize
_/home/ubuntu/GoProject/src/bot/botlib.convertFromString
_/home/ubuntu/GoProject/src/bot/botlib.(*rc6cipher).Encrypt
_/home/ubuntu/GoProject/src/bot/botlib.(*rc6cipher).Decrypt
_/home/ubuntu/GoProject/src/bot/botlib.Split
_/home/ubuntu/GoProject/src/bot/botlib.Cipher
_/home/ubuntu/GoProject/src/bot/botlib.Decipher
_/home/ubuntu/GoProject/src/bot/botlib.Pad
_/home/ubuntu/GoProject/src/bot/botlib.AES_Encrypt
_/home/ubuntu/GoProject/src/bot/botlib.AES_Decrypt
_/home/ubuntu/GoProject/src/bot/botlib.generateRandomString
_/home/ubuntu/GoProject/src/bot/botlib.deleteFile
_/home/ubuntu/GoProject/src/bot/botlib.Post
_/home/ubuntu/GoProject/src/bot/botlib.SendMessage
_/home/ubuntu/GoProject/src/bot/botlib.ReceiveMessage
_/home/ubuntu/GoProject/src/bot/botlib.Send.func1
_/home/ubuntu/GoProject/src/bot/botlib.init
_/home/ubuntu/GoProject/src/bot/botlib.(*KeySizeError).Error</code></pre>
<p>As mentioned earlier, WellMess has a version that runs on Windows (PE) and another on Linux (ELF). Although there are some minor differences, they both have the same functionality.</p>
<p>The malware communicates with a C&amp;C server using HTTP requests and performs functions based on the received commands. Below is an example of the communication: (User-Agent value varies per sample.)</p>
<pre><code>POST / HTTP/1.1
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20130401 Firefox/31.0
Content-Type: application/x-www-form-urlencoded
Accept: text/html, */*
Accept-Language: en-US,en;q=0.8
Cookie: c22UekXD=J41lrM+S01+KX29R+As21Sur+%3asRnW+3Eo+nIHjv+o6A7qGw+XQr%3aq+PJ9jaI+KQ7G.+FT2wr+wzQ3vd+3IJXC+lays+k27xd.+di%3abd+mHMAi+mYNZv+Mrp+S%2cV21.+ESollsY+6suRD+%2cx8O1m+%3azc+GYdrw.+FbWQWr+5pO8;1rf4EnE9=+WMyn8+8ogDA+WxR5R.+sFMwDnV+DFninOi+XaP+p4iY+82U.+hZb+QB6+kMBvT9R
Host: 45.123.190.168
Content-Length: 426
Expect: 100-continue
Accept-Encoding: deflate
Connection: Keep-Alive

pgY4C8 8JHqk RjrCa R9MS 3vc4Uk KKaRxH R8vg Tfj B3P,C 0RG9lFw DqF405. i3RU1 0lW 2BqdSn K3L Y7hEc. tzto yKU8 p1,E L2kKg pQcE1. b8V6S0Y 6akx, ggMcrXk 0csao Uwxn. fYVtWD rwt:BJ 5IBn rCMxZoo OsC. :ZXg pKT Re0 cJST1 L0GsC. 9dJZON9 qs29pPB pCTR:8 0hO0FK sK13UUw. jMA hDICL hGK1 qjRj1AY YMjAIeI. g7GEZPh gW:C eNX6 ptq kevfIyP. u,96r7c D:6ZiR fCC IIi cBvq,p. Vt96aEu JFLeu 0XtFJm ee4S 7M2. Uc68sF MArC5v 96ngG 9UvQGt 5:ut. qiE0xQ</code></pre>
<p>Results of command execution are send in HTTP POST request data, which is RSA-encrypted. The data in Cookie header is RC6-encrypted. Below is an example of decrypted data. It contains an identifier for infected hosts (the value in between &lt;;head;&gt; tags).</p>
<pre><code>&lt;;head;&gt;6F3C9B16C16074079AFCFF09C6717B0F07864FFE09C1E1DB003B3627D174913B/p&lt;;head;&gt;&lt;;title;&gt;a:1_0&lt;;title;&gt;&lt;;service;&gt;p&lt;;service;&gt;</code></pre>
<p>Below is a part of code that decodes data in the Cookie header. (The script is available on <a href="https://github.com/JPCERTCC/aa-tools/blob/master/wellmess_cookie_decode.py">Github</a>.)</p>
<pre><code>def decode(data, key):
    sep = ';'

    field = data.split(sep)

    i = 1
    encdata = ""
    while i &lt; len(field):
        value = field[i].split("=")
        encdata += value[1]
        I += 1

    encdata = urllib.unquote(encdata)
    encdata = encdata.replace("+", " ").replace("   ", "=").replace(". ", "").replace(" ", "").replace(",", "+").replace(":", "/")

    maindata = base64.b64decode(encdata)
    s = generateKey(base64.b64decode(key))

    i = 0
    decode = ""
    while i &lt; len(maindata):
        orgi = rc6(maindata[i:i + 16], s)
        decode += orgi
        i += 16

    print("Decrypted String: %s" % decode)</code></pre>
<p>The malware may perform the following functions when receiving commands from a C&amp;C server.</p>
<ul>
<li>Execute arbitrary shell command</li>
<li>Upload/Download files</li>
</ul>
<p>In addition, PE file malware executes PowerShell scripts.</p>
<h4><strong>Wellmess Developed in .Net Framework</strong></h4>
<p>There is also a version that was developed in .Net Framework. Figure 1 shows the code that generates data contained in the Cookie header upon communicating with a C&amp;C server. It contains the same string as in the Cookie data in the Golang version.</p>
<table class="img_table"><caption>Figure 1: Code to generate data contained in the Cookie</caption>
<tbody>
<tr>
<td><a href="https://blogs.jpcert.or.jp/en/.assets/fig1-ffd31573.png" onclick="window.open( this.href, '_blank', 'width=795,height=428,scrollbars=no,resizable=no,toolbar=no,directories=no,location=no,menubar=no,status=no,left=0,top=0' ); return false"><img alt="Fig1" class="asset asset-image at-xid-photo-55878004" src="https://blogs.jpcert.or.jp/en/.assets/fig1-ffd31573.png" style="width: 500px; display: block;" title="Fig1"/></a></td>
</tr>
</tbody>
</table>
<p>We have no clue about why the actors have prepared two different versions, however, it seems that they choose a sample depending on the attack target.</p>
<h4><strong>In closing</strong></h4>
<p>We have confirmed some cases where WellMess infection was found in Japanese organisations. Attacks using the malware may continue.</p>
<p>We have listed some hash values of the samples in Appendix A. Some of the C&amp;C servers that we have confirmed are also listed in Appendix B. Please make sure that none of your device is accessing such hosts.</p>
<p>- Shusei Tomonaga</p>
<p><em>(Translated by Yukako Uchida)</em></p>
<h5><strong>Reference</strong></h5>
<p>[1] LAC: Cyber Emergency Center Report Vol.3 (Japanese)</p>
<p><a href="https://www.lac.co.jp/lacwatch/pdf/20180614_cecreport_vol3.pdf">https://www.lac.co.jp/lacwatch/pdf/20180614_cecreport_vol3.pdf</a></p>
<p>[2] GoUtils2.0</p>
<p><a href="https://gitlab.com/zaytsevgu/GoUtils2.0/">https://gitlab.com/zaytsevgu/GoUtils2.0/</a></p>
<h5><strong>Appendix A: SHA-256 Hash value</strong></h5>
<ul>
<li>0b8e6a11adaa3df120ec15846bb966d674724b6b92eae34d63b665e0698e0193 (Golang&amp;ELF)</li>
<li>bec1981e422c1e01c14511d384a33c9bcc66456c1274bbbac073da825a3f537d (Golang&amp;PE)</li>
<li>2285a264ffab59ab5a1eb4e2b9bcab9baf26750b6c551ee3094af56a4442ac41 (.Net&amp;PE)</li>
</ul>
<h5><strong>Appendix B: C&amp;C server</strong></h5>
<ul>
<li>45.123.190.168</li>
<li>103.13.240.46</li>
<li>101.201.53.27</li>
<li>185.217.92.171</li>
<li>93.113.45.101</li>
<li>191.101.180.78</li>
</ul>
</section>
<div class="entry-social-buttons entry-social-buttons--after-content clearfix">
<ul>
<li class="entry-social-twitter">
<a class="twitter-share-button" data-show-count="false" data-text="Malware “WellMess” Targeting Linux and Windows" data-url="https://blogs.jpcert.or.jp/en/2018/07/malware-wellmes-9b78.html" href="https://twitter.com/share"></a>
</li>
<li class="entry-social-mail">
<a href="mailto:?subject=Malware%20%E2%80%9CWellMess%E2%80%9D%20Targeting%20Linux%20and%20Windows&amp;body=https%3A%2F%2Fblogs.jpcert.or.jp%2Fen%2F2018%2F07%2Fmalware-wellmes-9b78.html">Email</a>
</li>
</ul>
</div>
<section class="entry-author-detail">
<div class="entry-author-detail-header">
<p class="title">Author</p>
</div>
<div class="entry-author-detail-body clearfix">
<figure>
<img alt="朝長 秀誠 (Shusei Tomonaga)" height="90" src="https://movabletype.net/users/shu_tom/ENCORE_400x400.jpg" width="90"/>
</figure>
<div class="entry-author-detail-body-text">
<p class="name"><a href="https://blogs.jpcert.or.jp/en/shu_tom/">朝長 秀誠 (Shusei Tomonaga)</a></p>
<div class="profile">
<p>










































Since December 2012, he has been engaged in malware analysis and forensics investigation, and is especially involved in analyzing incidents of targeted attacks. Prior to joining JPCERT/CC, he was engaged in security monitoring and analysis operations at a foreign-affiliated IT vendor. He presented at CODE BLUE, BsidesLV, BlackHat USA Arsenal, Botconf, PacSec and FIRST Conference. JSAC organizer.


</p>
</div>
</div>
</div>
</section>
<!-- Feedback -->
<div class="feedback feedback_noscript" id="fb">
<form id="feedback_form" name="feedback_form">
<p class="title">Was this page helpful?</p>
<div class="inner">
<p class="select">
<label><input id="is_usefull_yes" name="is_useful" type="radio" value="yes"/>Yes</label>
<label><input id="is_usefull_no" name="is_useful" type="radio" value="no"/>No</label>
</p>
<p class="result"><span class="count">0</span> people found this content helpful.</p>
</div>
<p class="title">If you wish to make comments or ask questions, please use this form.</p>
<div class="inner">
<p class="message">This form is for comments and inquiries. For any questions regarding specific commercial products, please contact the vendor.</p>
<div class="container_a">
<div class="container_b">
<textarea cols="30" id="free_text" name="free_text" rows="3"></textarea>
</div>
</div>
<p class="send_area">
<span class="en_js_msg">please change the setting of your browser to set JavaScript valid.</span>
<span class="loader" style="display:none"><img alt="" src="/en/common/images/fb_loader.gif"/></span>
<span class="thanks">Thank you!</span>
<input class="button" disabled="" type="button" value="Send"/>
</p>
</div>
<input id="redirect_to" name="redirect_to" type="hidden" value=""/>
<input id="feedback_host" name="feedback_host" type="hidden" value="//ws.jpcert.or.jp/cgi-bin/"/>
<input id="uri" name="uri" type="hidden" value=""/>
<input id="token" name="token" type="hidden" value=""/>
</form>
</div>
<!-- //-------- feedback --------------------->
<section class="relation-entrylist">
<nav>
<h1>Related articles</h1>
<ul>
<li>
<a class="clearfix" href="https://blogs.jpcert.or.jp/en/2024/09/windows.html">
<figure>
<img alt="Event Log Talks a Lot: Identifying Human-operated Ransomware through Windows Event Logs" class="entry-thumbnail" src="https://blogs.jpcert.or.jp/en/.assets/thumbnail/06-320wi.jpg"/>
</figure>
<div class="detail">
<p class="title">Event Log Talks a Lot: Identifying Human-operated Ransomware through Windows Event Logs</p>
</div>
</a>
</li>
<li>
<a class="clearfix" href="https://blogs.jpcert.or.jp/en/2024/08/smaligadget.html">
<figure>
<img alt="Dynamic Analysis Technique of Android Malware by Injecting Smali Gadgets" class="entry-thumbnail" src="https://blogs.jpcert.or.jp/en/.assets/thumbnail/SmaliGadget-fig2-320wi.png"/>
</figure>
<div class="detail">
<p class="title">Dynamic Analysis Technique of Android Malware by Injecting Smali Gadgets</p>
</div>
</a>
</li>
<li>
<a class="clearfix" href="https://blogs.jpcert.or.jp/en/2024/07/attack-activities-by-kimsuky-targeting-japanese-organizations.html">
<figure>
<img alt="Attack Activities by Kimsuky Targeting Japanese Organizations" class="entry-thumbnail" src="https://blogs.jpcert.or.jp/en/.assets/thumbnail/InfoKey-320wi.png"/>
</figure>
<div class="detail">
<p class="title">Attack Activities by Kimsuky Targeting Japanese Organizations</p>
</div>
</a>
</li>
<li>
<a class="clearfix" href="https://blogs.jpcert.or.jp/en/2024/02/lazarus_pypi.html">
<figure>
<img alt="New Malicious PyPI Packages used by Lazarus" class="entry-thumbnail" src="https://blogs.jpcert.or.jp/en/.assets/thumbnail/pypi-320wi.png"/>
</figure>
<div class="detail">
<p class="title">New Malicious PyPI Packages used by Lazarus</p>
</div>
</a>
</li>
<li>
<a class="clearfix" href="https://blogs.jpcert.or.jp/en/2023/08/maldocinpdf.html">
<figure>
<img alt="MalDoc in PDF - Detection bypass by embedding a malicious Word file into a PDF file –" class="entry-thumbnail" src="https://blogs.jpcert.or.jp/en/.assets/thumbnail/maldocpdf-fig1-320wi.png"/>
</figure>
<div class="detail">
<p class="title">MalDoc in PDF - Detection bypass by embedding a malicious Word file into a PDF file –</p>
</div>
</a>
</li>
</ul>
</nav>
</section>
<section class="entry-navi">
<div class="entry-navi-prev">
<a href="https://blogs.jpcert.or.jp/en/2018/06/plead-downloader-used-by-blacktech.html">Back</a>
</div>
<div class="entry-navi-home">
<a href="/en/">Top</a>
</div>
<div class="entry-navi-next">
<a href="https://blogs.jpcert.or.jp/en/2018/08/volatility-plugin-for-detecting-cobalt-strike-beacon.html">Next</a>
</div>
</section>
</article>
</main>
</div>
<aside>
<div class="google-search">
<script>
      (function() {
        var cx = '004990004422359256493:nnhwqqlx864';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
            '//cse.google.com/cse.js?cx=' + cx;
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(gcse, s);
      })();
    </script>
<gcse:search></gcse:search>
</div>
<section class="categorylist" id="side-categories">
<nav>
<h1>Categories</h1>
<ul>
<li>
<span class="bullet" style="background-color: #6484c5"></span><a href="https://blogs.jpcert.or.jp/en/malware/">Malware</a>
</li>
<li>
<span class="bullet" style="background-color: #fca001"></span><a href="https://blogs.jpcert.or.jp/en/incident/">Incident</a>
</li>
<li>
<span class="bullet" style="background-color: #9ec700"></span><a href="https://blogs.jpcert.or.jp/en/event/">Event</a>
</li>
<li>
<span class="bullet" style="background-color: #009e9f"></span><a href="https://blogs.jpcert.or.jp/en/vulnerability/">Vulnerability</a>
</li>
<li>
<span class="bullet" style="background-color: #0172b6"></span><a href="https://blogs.jpcert.or.jp/en/security-technology/">Security Technology</a>
</li>
<li>
<span class="bullet" style="background-color: #a1017f"></span><a href="https://blogs.jpcert.or.jp/en/forensic/">Forensic</a>
</li>
<li>
<span class="bullet" style="background-color: #000"></span><a href="https://blogs.jpcert.or.jp/en/cyber-metrics/">Cyber Metrics</a>
</li>
<li>
<span class="bullet" style="background-color: #000"></span><a href="https://blogs.jpcert.or.jp/en/ics-ot/">ICS-OT</a>
</li>
<li>
<span class="bullet" style="background-color: #838383"></span><a href="https://blogs.jpcert.or.jp/en/other/">Other</a>
</li>
</ul>
</nav>
</section>

      
            
      


        
  
  　<aside id="ranklet4-N2r04NQy9WPJiTSHTadz"></aside>
<script async="" src="https://pro.ranklet4.com/widgets/N2r04NQy9WPJiTSHTadz.js"></script>
<section class="memberlist" id="side-members">
<nav>
<h1>Authors</h1>
<ul class="clearfix">
<li>
<a href="https://blogs.jpcert.or.jp/en/SHIKAPON/">
<img alt="鹿野 恵祐 (Keisuke Shikano)" src="https://movabletype.net/users/SHIKAPON/matsu.png" title="鹿野 恵祐 (Keisuke Shikano)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/sekiguchi/">
<img alt="関口　晃弘 (Akihiro Sekiguchi)" src="/en/common/images/default-userpic-90.jpg" title="関口　晃弘 (Akihiro Sekiguchi)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/reto/">
<img alt="衛藤 亮介 (Ryosuke Eto)" src="https://movabletype.net/users/reto/Q6VN1jSR_400x400.jpg" title="衛藤 亮介 (Ryosuke Eto)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/ikuya/">
<img alt="福本 郁哉（Ikuya Fukumoto）" src="https://movabletype.net/users/ikuya/profile_icon.png" title="福本 郁哉（Ikuya Fukumoto）" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/m-toyama/">
<img alt="登山 昌恵 (Masae Toyama)" src="/en/common/images/default-userpic-90.jpg" title="登山 昌恵 (Masae Toyama)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/s-tanaka/">
<img alt="田中 信太郎（Shintaro Tanaka） " src="/en/common/images/default-userpic-90.jpg" title="田中 信太郎（Shintaro Tanaka） " width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/horata/">
<img alt="洞田 慎一 (Shinichi Horata)" src="/en/common/images/default-userpic-90.jpg" title="洞田 慎一 (Shinichi Horata)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/kohnowriter/">
<img alt="河野 一之 (Kazuyuki Kohno)" src="/en/common/images/default-userpic-90.jpg" title="河野 一之 (Kazuyuki Kohno)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/t.mizuno/">
<img alt="水野 哲也 (Tetsuya Mizuno)" src="/en/common/images/default-userpic-90.jpg" title="水野 哲也 (Tetsuya Mizuno)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/y-murakami/">
<img alt="村上 勇樹（Yuki Murakami）" src="/en/common/images/default-userpic-90.jpg" title="村上 勇樹（Yuki Murakami）" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/shu_tom/">
<img alt="朝長 秀誠 (Shusei Tomonaga)" src="https://movabletype.net/users/shu_tom/ENCORE_400x400.jpg" title="朝長 秀誠 (Shusei Tomonaga)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/totsuka/">
<img alt="戸塚 紀子（Noriko Totsuka）" src="/en/common/images/default-userpic-90.jpg" title="戸塚 紀子（Noriko Totsuka）" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/kkomiyama/">
<img alt="小宮山 功一朗 (Koichiro Sparky Komiyama)" src="https://movabletype.net/users/kkomiyama/photo_sparky_small.jpg" title="小宮山 功一朗 (Koichiro Sparky Komiyama)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/uno_masumi/">
<img alt="宇野 真純（Masumi Uno）" src="/en/common/images/default-userpic-90.jpg" title="宇野 真純（Masumi Uno）" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/masubuchi/">
<img alt="増渕 維摩(Yuma Masubuchi)" src="https://movabletype.net/users/masubuchi/blog_image.png" title="増渕 維摩(Yuma Masubuchi)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/hori-32tk/">
<img alt="堀 充孝（Mitsutaka Hori）" src="https://movabletype.net/users/hori-32tk/画像の貼り付け先_-2021-3-18-22-18.png" title="堀 充孝（Mitsutaka Hori）" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/kino/">
<img alt="喜野 孝太(Kota Kino)" src="https://movabletype.net/users/kino/image-992ce083-832a-45c5-a3d8-5922b68506a7.jpg" title="喜野 孝太(Kota Kino)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/uchida/">
<img alt="内田 有香子 (Yukako Uchida)" src="https://movabletype.net/users/uchida/14190908.jpg" title="内田 有香子 (Yukako Uchida)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/sajo/">
<img alt="佐條 研(Ken Sajo)" src="https://movabletype.net/users/sajo/Sajo0191031.jpg" title="佐條 研(Ken Sajo)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/Tomotaka/">
<img alt="伊藤 智貴 (Tomo Ito)" src="https://movabletype.net/users/Tomotaka/Tomotaka-Ito.jpg" title="伊藤 智貴 (Tomo Ito)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/TomoyaKamei/">
<img alt="亀井 智矢(Tomoya Kamei)" src="/en/common/images/default-userpic-90.jpg" title="亀井 智矢(Tomoya Kamei)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/tnakano/">
<img alt="中野 巧 (Takumi Nakano)" src="https://movabletype.net/users/tnakano/default-userpic-90.jpg" title="中野 巧 (Takumi Nakano)" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/shoko/">
<img alt="中井 尚子（Shoko Nakai）" src="https://movabletype.net/users/shoko/DSCN1042-(2).png" title="中井 尚子（Shoko Nakai）" width="50"/>
</a>
</li>
<li>
<a href="https://blogs.jpcert.or.jp/en/retiree_blog/">
<img alt="JPCERT/CC" src="https://movabletype.net/users/retiree_blog/j_icon72_400x400.jpg" title="JPCERT/CC" width="50"/>
</a>
</li>
</ul>
</nav>
</section>
<section class="archivelist" id="side-monthly-archive">
<nav>
<h1>Archives</h1>
<ul>
<li><a href="https://blogs.jpcert.or.jp/en/2024/">2024</a><small>15</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2023/">2023</a><small>18</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2022/">2022</a><small>19</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2021/">2021</a><small>20</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2020/">2020</a><small>21</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2019/">2019</a><small>18</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2018/">2018</a><small>12</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2017/">2017</a><small>17</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2016/">2016</a><small>18</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2015/">2015</a><small>20</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2014/">2014</a><small>18</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2013/">2013</a><small>7</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2012/">2012</a><small>2</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2011/">2011</a><small>8</small></li>
<li><a href="https://blogs.jpcert.or.jp/en/2010/">2010</a><small>4</small></li>
</ul>
</nav>
</section>
</aside>
</div>
<footer class="footer">
<div class="footer__inner">
<div class="footer__information">
<div class="footer__information__cell-logo">
<p class="footer__information__logo">
<a href="https://www.jpcert.or.jp/english/" target="_blank">
<img alt="JPCERT Coordination Center" class="footer__information__logo__src" height="48" src="/en/common/images/footer_logo.svg" style="margin-top:3px" width="188"/>
</a>
</p>
</div>
<div class="footer__information__cell-company">
<dl class="footer__information__company">
<dt class="footer__information__company__name">JPCERT/CC</dt>
<dd class="footer__information__company__data">
<address class="footer__information__company__data__address">8F Tozan Bldg, 4-4-2 Nihonbashi-Honcho, Chuo-ku, Tokyo 1030023 JAPAN</address>
<p class="footer__information__company__data__tel">TEL: +81-3-6271-8901　FAX: +81-3-6271-8908</p>
</dd>
</dl>
</div>
<div class="footer__information__cell-navigation">
<ul class="footer__information__navigation">
<li class="footer__information__navigation__item"><a class="footer__information__navigation__link" href="https://blogs.jpcert.or.jp/en/privacy-policy.html" target="_blank">Privacy Policy</a></li>
<li class="footer__information__navigation__item"><a class="footer__information__navigation__link" href="https://blogs.jpcert.or.jp/en/disclaimer.html" target="_blank">Disclaimer</a></li>
</ul>
</div>
</div>
<p class="footer__copyright">© 1996-2024 JPCERT/CC</p>
</div>
</footer>
</body>
</html>
<script async="" charset="utf-8" src="https://platform.twitter.com/widgets.js"></script>
<script src="/en/common/js/prototype.js"></script>
<script src="/en/common/feedback/script.js"></script>
  