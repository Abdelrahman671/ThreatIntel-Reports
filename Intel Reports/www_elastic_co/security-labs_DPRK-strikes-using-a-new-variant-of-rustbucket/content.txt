<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><title>The DPRK strikes using a new variant of RUSTBUCKET — Elastic Security Labs</title><meta name="description" content="Watch out! We’ve recently discovered a variant of RUSTBUCKET. Read this article to understand the new capabilities we’ve observed, as well as how to identify it in your own network."/><meta property="og:title" content="The DPRK strikes using a new variant of RUSTBUCKET — Elastic Security Labs"/><meta property="og:description" content="Watch out! We’ve recently discovered a variant of RUSTBUCKET. Read this article to understand the new capabilities we’ve observed, as well as how to identify it in your own network."/><meta property="og:image" content="https://www.elastic.co/security-labs/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/photo-edited-12@2x.jpg?52abdc1244552bf842bf51ce35f61be2"/><meta property="og:image:alt" content="Watch out! We’ve recently discovered a variant of RUSTBUCKET. Read this article to understand the new capabilities we’ve observed, as well as how to identify it in your own network."/><meta property="og:site_name"/><meta property="og:url" content="https://www.elastic.co/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket"/><meta property="og:type" content="website"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="The DPRK strikes using a new variant of RUSTBUCKET — Elastic Security Labs"/><meta name="twitter:description" content="Watch out! We’ve recently discovered a variant of RUSTBUCKET. Read this article to understand the new capabilities we’ve observed, as well as how to identify it in your own network."/><meta name="twitter:image" content="https://www.elastic.co/security-labs/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/photo-edited-12@2x.jpg?52abdc1244552bf842bf51ce35f61be2"/><meta name="twitter:image:alt" content="Watch out! We’ve recently discovered a variant of RUSTBUCKET. Read this article to understand the new capabilities we’ve observed, as well as how to identify it in your own network."/><link rel="canonical" href="https://www.elastic.co/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket"/><link rel="preload" href="/security-labs/logo.svg" as="image" fetchpriority="high"/><link rel="preload" as="image" imageSrcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=3840&amp;q=75 3840w" imageSizes="100vw" fetchpriority="high"/><meta name="next-head-count" content="19"/><script src="https://play.vidyard.com/embed/v4.js" type="text/javascript" async=""></script><link rel="icon" href="/security-labs/favicon.svg"/><link rel="mask-icon" href="/security-labs/favicon.svg" color="#1C1E23"/><link rel="apple-touch-icon" href="/security-labs/favicon.svg"/><meta name="theme-color" content="#1C1E23"/><link rel="preload" href="/security-labs/_next/static/media/6d93bde91c0c2823-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/a34f9d1faa5f3315-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/369c6e283c5acc6e-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/92f44bb82993d879-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/ee71530a747ff30b-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/9fac010bc1f02be0-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/cbf5fbad4d73afac-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><script id="google-tag-manager" data-nscript="beforeInteractive">
          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-KNJMG2M');
          </script><link rel="preload" href="/security-labs/_next/static/css/265ed7605fd03477.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/265ed7605fd03477.css" data-n-g=""/><link rel="preload" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/security-labs/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js"></script><script src="/security-labs/_next/static/chunks/webpack-7987c6fda769d510.js" defer=""></script><script src="/security-labs/_next/static/chunks/framework-7a7e500878b44665.js" defer=""></script><script src="/security-labs/_next/static/chunks/main-ebd33a9f1cae5951.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/_app-cb8664d1d3df2511.js" defer=""></script><script src="/security-labs/_next/static/chunks/fec483df-43ee602fabdfe3a4.js" defer=""></script><script src="/security-labs/_next/static/chunks/877-34f408271ef44c22.js" defer=""></script><script src="/security-labs/_next/static/chunks/511-d08fe0fdd6f8a984.js" defer=""></script><script src="/security-labs/_next/static/chunks/683-a5053c37fe5bd0c9.js" defer=""></script><script src="/security-labs/_next/static/chunks/402-791da5e634930df4.js" defer=""></script><script src="/security-labs/_next/static/chunks/616-0b017b9cfa597392.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/%5Bslug%5D-3d74e9a05863bcfd.js" defer=""></script><script src="/security-labs/_next/static/dGrrQfBbQkqaleQ_11aBK/_buildManifest.js" defer=""></script><script src="/security-labs/_next/static/dGrrQfBbQkqaleQ_11aBK/_ssgManifest.js" defer=""></script></head><body><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KNJMG2M" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="__next"><main class="__variable_0351a5 __variable_1f211e __variable_a5b5f5 flex flex-col min-h-screen"><div class="scroll-percentage-container"><div class="scroll-percentage-bar" style="width:0%"></div></div><nav class="fixed w-full z-40" data-headlessui-state=""><div class="bg-gradient-to-b from-zinc-900 from-20% h-[200%] to-transparent absolute inset-0 z-0 pointer-events-none"></div><div class="container relative z-10"><div class="flex h-16 items-center justify-between"><div class="flex items-center justify-start w-full"><div><a class="hover:opacity-50 transition" href="/security-labs"><img alt="elastic security labs logo" fetchpriority="high" width="200" height="30" decoding="async" data-nimg="1" style="color:transparent" src="/security-labs/logo.svg"/></a></div><div class="hidden lg:ml-6 lg:block"><div class="flex space-x-4"><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/about"><span>About</span></a><div class="relative" data-headlessui-state=""><div><button class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" id="headlessui-menu-button-:R2kpm:" type="button" aria-haspopup="menu" aria-expanded="false" data-headlessui-state="">Topics<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="ml-1 -mr-1 h-4 w-4 text-zinc-400 relative top-[1px]"><path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd"></path></svg></button></div></div><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/vulnerability-updates"><span>Vulnerability updates</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/reports"><span>Reports</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/tools"><span>Tools</span></a></div></div><div class="hidden lg:ml-auto lg:block"><div class="flex items-center space-x-4"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="https://www.elastic.co/security-labs/rss/feed.xml"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-4 w-4 mr-1"><path d="M3.75 3a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75H4c6.075 0 11 4.925 11 11v.25c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V16C17 8.82 11.18 3 4 3h-.25z"></path><path d="M3 8.75A.75.75 0 013.75 8H4a8 8 0 018 8v.25a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75V16a6 6 0 00-6-6h-.25A.75.75 0 013 9.25v-.5zM7 15a2 2 0 11-4 0 2 2 0 014 0z"></path></svg><span class="hidden xl:block">Subscribe</span></a><a class="font-display inline-flex items-center justify-center rounded font-semibold disabled:!select-none disabled:!bg-gray-400 bg-blue-600 text-white hover:bg-blue-500 enabled:hover:text-white/80 transition-colors px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://cloud.elastic.co/registration?cta=cloud-registration&amp;tech=trial&amp;plcmt=navigation&amp;pg=security-labs">Start free trial</a><a class="font-display inline-flex items-center justify-center rounded font-semibold text-white disabled:!select-none disabled:!bg-gray-400 button px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://www.elastic.co/contact">Contact sales</a></div></div></div><div class="-mr-2 flex lg:hidden"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><button class="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" id="headlessui-disclosure-button-:R59m:" type="button" aria-expanded="false" data-headlessui-state=""><span class="sr-only">Open navigation menu</span><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="block h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path></svg></button></div></div></div></nav><main class="mb-20 flex-1 flex flex-col"><div class="h-48 md:h-64"><div class="after:absolute after:block after:bg-blue-400 after:blur-3xl after:content-[&#x27; &#x27;] after:h-96 after:opacity-5 after:right-0 after:rounded-full after:top-20 after:w-1/2 after:z-0 before:absolute before:block before:blur-3xl before:bg-orange-400 before:content-[&#x27; &#x27;] before:h-96 before:left-0 before:opacity-5 before:rounded-full before:w-1/2 before:z-0 w-full h-full relative"><div class="relative z-10 w-full h-[125%] -top-[25%] bg-no-repeat bg-cover bg-bottom flex items-center justify-center" style="background-image:url(/security-labs/grid.svg)"></div></div></div><article class="px-4"><div class="max-w-7xl mx-auto relative z-10 flex flex-col space-y-4"><div class="eyebrow break-words"><time class="block mb-2 md:mb-0 md:inline-block article-published-date" dateTime="2023-07-14T00:00:00.000Z">14 July 2023</time><span class="hidden md:inline-block md:mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/salim-bitam">Salim Bitam</a><span class="mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/ricardo-ungureanu">Ricardo Ungureanu</a><span class="mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/colson-wilhoit">Colson Wilhoit</a><span class="mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/seth-goodwin">Seth Goodwin</a><span class="mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/andrew-pease">Andrew Pease</a></div><h1 class="font-bold leading-tighter text-3xl md:text-5xl"><span>The DPRK strikes using a new variant of&nbsp;RUSTBUCKET</span></h1><p class="text-zinc-200 text-base md:text-xl">A DPRK campaign using a new variant of the RUSTBUCKET malware is underway with updated capabilities and reduced signature detection.</p><div class="flex items-center mt-4 text-zinc-200 text-sm space-x-4 border-t border-white/25 pt-4"><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><span>16 min read</span></span><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z"></path></svg><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/attack-pattern">Attack pattern</a>, </span><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/activity-group">Activity group</a></span></span></div></div><div class="max-w-7xl mx-auto"><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 sm:p-8 md:p-10 rounded-3xl mt-5 md:mt-10"><div class="relative w-full rounded-lg overflow-hidden aspect-video"><img alt="The DPRK strikes using a new variant of RUSTBUCKET" fetchpriority="high" decoding="async" data-nimg="fill" class="object-cover absolute h-full w-full" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;color:transparent" sizes="100vw" srcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=3840&amp;q=75 3840w" src="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2FDPRK-strikes-using-a-new-variant-of-rustbucket%2Fphoto-edited-12%402x.jpg&amp;w=3840&amp;q=75"/><div class="absolute border border-white/50 inset-0 mix-blend-overlay rounded-lg z-10"></div></div></div></div><div class="lg:max-w-7xl mx-auto relative mt-12 lg:grid lg:grid-cols-4 lg:gap-8 items-start"><div class="flex justify-center lg:col-span-3"><div class="prose lg:prose-lg prose-invert w-full article-content"><div><h2 class="font-bold text-2xl md:text-4xl relative"><span id="key-takeaways" class="absolute -top-32"></span>Key takeaways</h2>
<ul>
<li>The RUSTBUCKET malware family is in an active development phase, adding built-in persistence and focusing on signature reduction.</li>
<li>REF9135 actors are continually shifting their infrastructure to evade detection and response.</li>
<li>The DPRK continues financially motivated attacks against cryptocurrency service providers.</li>
<li>If you are running Elastic Defend, you are protected from REF9135</li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="preamble" class="absolute -top-32"></span>Preamble</h2>
<p>The Elastic Security Labs team has detected a new variant of the RUSTBUCKET malware, a family that has been previously attributed to the BlueNorOff group by <a href="https://www.jamf.com/blog/bluenoroff-apt-targets-macos-rustbucket-malware/">Jamf Threat Labs</a> in April 2023.</p>
<p>This variant of RUSTBUCKET, a malware family that targets macOS systems, adds persistence capabilities not previously observed and, at the time of reporting, is undetected by VirusTotal signature engines. Elastic Defend behavioral and prebuilt detection rules provide protection and visibility for users. We have also released a signature to prevent this malware execution.</p>
<p>The research into REF9135 used host, binary, and network analysis to identify and attribute intrusions observed by this research team, and other intelligence groups, with high confidence to the Lazarus Group; a cybercrime and espionage organization operated by the Democratic People’s Republic of North Korea (DPRK).</p>
<p>This research will describe:</p>
<ul>
<li>REF9135’s use of RUSTBUCKET for sustained operations at a cryptocurrency payment services provider</li>
<li>Reversing of an undetected variant of RUSTBUCKET that adds a built-in persistence mechanism</li>
<li>How victimology, initial infection, malware, and network C2 intersections from first and third-party collection align with previous Lazarus Group reporting</li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="rustbucket-code-analysis" class="absolute -top-32"></span>RUSTBUCKET code analysis</h2>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="overview" class="absolute -top-32"></span>Overview</h3>
<p>Our research has identified a persistence capability not previously seen in the RUSTBUCKET family of malware, leading us to believe that this family is under active development. Additionally, at the time of publication, this new variant has zero detections on VirusTotal and is leveraging a dynamic network infrastructure methodology for command and control.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="stage-1" class="absolute -top-32"></span>Stage 1</h3>
<p>During Stage 1, the process begins with the execution of an AppleScript utilizing the <strong>%2Fusr%2Fbin%2Fosascript</strong> command. This AppleScript is responsible for initiating the download of the Stage 2 binary from the C2 using cURL. This session includes the string <strong>pd</strong> in the body of the HTTP request and <strong>cur1-agent</strong> as the User-Agent string which saves the Stage 2 binary to <strong>%2Fusers%2Fshared%2F.pd,</strong> (<a href="https://www.virustotal.com/gui/file/7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8">7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8</a>).</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="stage-2" class="absolute -top-32"></span>Stage 2</h3>
<p>The Stage 2 binary ( <strong>.pd</strong> ) is compiled in Swift and operates based on command-line arguments. The binary expects a C2 URL to be provided as the first parameter when executed. Upon execution, it invokes the <strong>downAndExec</strong> function, which is responsible for preparing a POST HTTP request. To initiate this request, the binary sets the User-Agent string as <strong>mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)</strong> and includes the string <strong>pw</strong> in the body of the HTTP request.</p>
<p></p>
<p>During execution, the malware utilizes specific macOS APIs for various operations. It begins with <a href="https://developer.apple.com/documentation/foundation/nsfilemanager">NSFileManager&#x27;s</a> <strong>temporaryDirectory</strong> function to obtain the current temporary folder, then generates a random UUID using <a href="https://developer.apple.com/documentation/foundation/nsuuid">NSUUID&#x27;s</a> <strong>UUID.init</strong> method. Finally, the malware combines the temporary directory path with the generated UUID to create a unique file location and writes the payload to it.</p>
<p>Once the payload, representing Stage 3 of the attack is written to disk, the malware utilizes <a href="https://developer.apple.com/documentation/foundation/nstask">NSTask</a> to initiate its execution.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="stage-3" class="absolute -top-32"></span>Stage 3</h3>
<p>In Stage 3, the malware (<a href="https://www.virustotal.com/gui/file/9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747">9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747</a>) is a FAT macOS binary that supports both ARM and Intel architectures written in Rust. It requires a C2 URL to be supplied as a parameter.</p>
<p>The malware initiates its operations by dynamically generating a 16-byte random value at runtime. This value serves as a distinctive identifier for the specific instance of the active malware. Subsequently, the malware proceeds to gather comprehensive system information, including:</p>
<ul>
<li>Computer name</li>
<li>List of active processes</li>
<li>Current timestamp</li>
<li>Installation timestamp</li>
<li>System boot time</li>
<li>Status of all running processes within the system</li>
</ul>
<p>The malware establishes its initial connection to the C2 server by transmitting the gathered data via a POST request. The request is accompanied by a User-Agent string formatted as <strong>Mozilla%2F4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident%2F4.0)</strong>.</p>
<p>Upon receiving the request, the C2 server responds with a command ID, which serves as an instruction for the malware. The malware is designed to handle only two commands.</p>
<h4 class="font-bold leading-tight text-lg md:text-2xl relative"><span id="command-id-0x31" class="absolute -top-32"></span>Command ID 0x31</h4>
<p>This command directs the malware to self-terminate.</p>
<h4 class="font-bold leading-tight text-lg md:text-2xl relative"><span id="command-id-0x30" class="absolute -top-32"></span>Command ID 0x30</h4>
<p>This command enables the operator to upload malicious Mach-O binaries or shell scripts to the system and execute them. The payload is stored in a randomly generated temporary path and created within the current user TMP directory following the naming convention of <strong><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">$TMPDIR%2F.\&lt;8 random digits\&gt;</code></strong></p>
<p>Below is a summary of the command structure, indicating the constants, arguments, and payload components for easy comprehension.</p>
<p></p>
<p>The malware proceeds by granting execution permissions to the uploaded file using the <strong>chmod</strong> API.</p>
<p>After executing the payload, the malware sends a status update to the server, notifying it of the completed execution, and then sleeps for 60 seconds. Following this delay, the malware loops to collect system information once again and remains in a waiting state, anticipating the arrival of the next command from the server</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="the-undetected-version-of-rustbucket" class="absolute -top-32"></span>The undetected version of RUSTBUCKET</h3>
<p>Using code similarities from the sample in our telemetry, we searched VirusTotal and identified an undetected variant of RUSTBUCKET.</p>
<p>As of the publication of this research, the <a href="https://www.virustotal.com/gui/file/de81e5246978775a45f3dbda43e2716aaa1b1c4399fe7d44f918fccecc4dd500">newly discovered version</a> of the malware has not been flagged by any antivirus engines on VirusTotal. A thorough analysis of the sample brought to light the addition of a new persistence capability and C2 infrastructure. The behavioral rules for Elastic Defend prevent, and Elastic’s prebuilt detection rules identify, this activity. We have also released a signature that will prevent this new variant of RUSTBUCKET.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="persistence" class="absolute -top-32"></span>Persistence</h3>
<p>A predominant method utilized by malware to achieve persistence on macOS is through the utilization of LaunchAgents. In macOS, users have individual LaunchAgents folders within their Library directory, enabling them to define code that executes upon each user login. Additionally, a system-level LaunchAgents folder exists, capable of executing code for all users during the login process. Elastic Defend monitors for the creation of LaunchAgents and LaunchDaemons containing malicious or suspicious values as a way to detect these persistence techniques.</p>
<p>In the case of this updated RUSTBUCKET sample, it establishes its own persistence by adding a plist file at the path <strong><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">%2FUsers%2F\&lt;user\&gt;%2FLibrary%2FLaunchAgents%2Fcom.apple.systemupdate.plist</code></strong> , and it copies the malware’s binary to the following path <strong><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">%2FUsers%2F\&lt;user\&gt;%2FLibrary%2FMetadata%2FSystem Update</code></strong>.</p>
<p></p>
<p>There are several elements of the plist file, using standard true%2Ffalse or string values:</p>
<ul>
<li><strong>Label:</strong> The key &quot;Label&quot; specifies the name of the LaunchAgent, which in this case is <strong>com.apple.systemupdate</strong>. This expects a string value.</li>
<li><strong>RunAtLoad:</strong> This indicates that the LaunchAgent should execute its associated code immediately upon loading, specifically during system startup or user login. This expects a true%2Ffalse value.</li>
<li><strong>LaunchOnlyOnce:</strong> This prevents the malware from being executed multiple times concurrently and expects a true%2Ffalse value.</li>
<li><strong>KeepAlive:</strong> This key instructs the system to keep the LaunchAgent running and relaunch it if it terminates unexpectedly. This expects a true%2Ffalse value.</li>
<li><strong>ProgramArguments:</strong> The &quot;ProgramArguments&quot; key specifies an array of strings that define the program or script to be executed by the LaunchAgent. This expects a string value and in this case, the LaunchAgent executes the file located at <strong>&quot;<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">%2FUsers%2F\&lt;user\&gt;%2FLibrary%2FMetadata%2FSystem Update</code>&quot;</strong> and provides the C2 URL <strong>&quot;https:%2F%2Fwebhostwatto.work[.]gd&quot;</strong> as an argument to the malware.</li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="rustbucket-and-ref9135-analysis" class="absolute -top-32"></span>RUSTBUCKET and REF9135 analysis</h2>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="overview-1" class="absolute -top-32"></span>Overview</h3>
<p>The RUSTBUCKET campaign has previously been associated with BlueNorOff by Jamf and Sekoia.io. BlueNorOff is believed to be operating at the behest of the DPRK for the purposes of financial gain in order to ease the strain of global sanctions. BlueNorOff is a sub-unit of the overarching DPRK offensive cyber attack organization, the <a href="https://attack.mitre.org/groups/G0032/">Lazarus Group</a>. The <a href="https://www.nytimes.com/interactive/2018/05/03/magazine/money-issue-bangladesh-billion-dollar-bank-heist.html">2016 Bangladesh Bank robbery</a> stands out as BlueNorOff&#x27;s most notorious attack, wherein their objective was to illicitly transfer over $850M from the Federal Reserve Bank of New York account owned by Bangladesh Bank, the central bank of Bangladesh, by exploiting the SWIFT network.</p>
<blockquote>
<p>As an analyst note, if you’re interested in a tremendously verbose and detailed walkthrough of this intrusion, Geoff White and Jean Lee released a 19-part podcast through the <a href="https://www.bbc.co.uk/programmes/w13xtvg9/episodes/downloads">BBC World Service</a> that is an unbelievable account of this event.</p>
</blockquote>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="networking-infrastructure" class="absolute -top-32"></span>Networking infrastructure</h3>
<p>The persistence mechanism identified previously calls out to <strong>https:%2F%2Fwebhostwatto.work[.]gd</strong>. Third-party research into this URL indicates that 12%2F89 <a href="https://www.virustotal.com/gui/url/e299c9f2233f025256ab29d53d070a8f94d1c2c1a2b6f3a7c13e16df185e9e32/detection">VirusTotal</a> vendors have identified it as malicious, and it exists within a community collection documenting the <a href="https://www.cyfirma.com/outofband/tracking_dangerouspassword_campaign_by_lazarusgroup/">DangerousPassword phishing campaign</a>.</p>
<p></p>
<p>VirusTotal <a href="https://www.virustotal.com/gui/domain/webhostwatto.work.gd/detection">last saw</a> the domain pointing to <strong>104.168.167[.]88</strong>. Which has been specifically identified in a Sekoia.io <a href="https://blog.sekoia.io/bluenoroffs-rustbucket-campaign/">blog</a> in May as part of BlueNorOff’s RUSTBUCKET campaign.</p>
<p></p>
<p>Further connecting <strong>webhostwatto.work[.]gd</strong> to DangerousPassword, BlueNorOff, and the DPRK campaigns, this domain shares a TLS leaf certificate fingerprint hash ( <strong>1031871a8bb920033af87078e4a418ebd30a5d06152cd3c2c257aecdf8203ce6</strong> ) with another domain, <strong>companydeck[.]online</strong>.</p>
<p><strong>companydesk[.]online</strong> is included in the <a href="https://www.virustotal.com/graph/g6e8b200cfd774d129558fa5715c83d1bc81099f5cd7643719580be988ec01b8f">VirusTotal Graph</a> (VirusTotal account required) for <a href="https://attack.mitre.org/groups/G0082/">APT38</a>, which is also known as DangerousPassword, BlueNorOff, etc.</p>
<p></p>
<p>DangerousPassword and BlueNorOff are campaigns that have both been previously associated with the DPRK.</p>
<p>Using the IP address (<strong>64.44.141[.]15</strong>) for our initial C2 domain, <strong>crypto.hondchain[.]com</strong>, we uncovered 3 additional C2 domains:</p>
<ul>
<li><strong>starbucls[.]xyz</strong></li>
<li><strong>jaicvc[.]com</strong></li>
<li><strong>docsend.linkpc[.]net</strong> (dynamic DNS domain)</li>
</ul>
<p>While there are only 5 hosts (4 total domains) registered to the C2 IP address (indicating that this was not a high-capacity hosting server), we looked for additional relationships to increase the association confidence between the domains. To do this, we replicated the same fingerprinting process previously used with <strong>webhostwatto.work[.]gd</strong>. The TLS fingerprint hash for <strong>starbucls[.]xyz</strong> ( <strong>788261d948177acfcfeb1f839053c8ee9f325bd6fb3f07637a7465acdbbef76a</strong> ) is the same fingerprint as <strong>jaicvc[.]com</strong>.</p>
<p>With these two domains having the same TLS fingerprint hash and the fact that they were both registered to the IP address, we were able to cluster these atomic entities, and their siblings, together with high confidence:</p>
<ul>
<li>All hosts were registered to <strong>64.44.141[.]15</strong></li>
<li><strong>starbucls[.]xyz</strong> and <strong>crypto.hondchain[.]com</strong> were observed being used by our malware samples</li>
<li><strong>starbucls[.]xyz</strong> and <strong>jaicvc[.]com</strong> shared a TLS fingerprint</li>
</ul>
<p></p>
<p>Looking at the “First” column (when they were first observed through 3rd party passive DNS), these hosts are being created rapidly, likely as an attempt to stay ahead of detection efforts by research teams. We are associating the following domains and IP address to the REF9135 campaign with high confidence:</p>
<ul>
<li><strong>starbucls[.]xyz</strong></li>
<li><strong>jaicvc[.]com</strong></li>
<li><strong>crypto.hondchain[.]com</strong></li>
<li><strong>64.44.141[.]15</strong></li>
</ul>
<p>We have not observed <strong>docsend.linkpc[.]net</strong> being used with the RUSTBUCKET samples we analyzed. However, its shared IP registration and host siblings lead us to state with a moderate degree of confidence that it is directly related to RUSTBUCKET and REF9135 as C2 infrastructure; and a high degree of confidence that it is malicious (shared infrastructure as part of other campaigns).</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="defense-evasion" class="absolute -top-32"></span>Defense evasion</h3>
<p>The campaign owners used techniques to hinder the collection of Stage 2 and Stage 3 binaries by analysts who may have overlooked User-Agent strings in their investigations, as well as internet scanners and sandboxes focused on collecting malicious binaries.</p>
<p>As outlined in the Stage 1 section, there is a specific User-Agent string ( <strong>cur1-agent</strong> ) that is expected when downloading the Stage 2 binary, if you do not use the expected User-Agent, you will be provided with a 405 HTTP response status code (Method Not Allowed).</p>
<p>It also appears that the campaign owners are monitoring their payload staging infrastructure. Using the expected User-Agent for the Stage 3 binary download (<strong>mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)</strong>), we were able to collect the Stage 3 binary.</p>
<p>Finally, we observed REF9135 changing its C2 domain once we began to collect the Stage 2 and 3 binaries for analysis. When making subsequent requests to the original server (<strong>crypto.hondchain[.]com</strong>), we received a 404 HTTP response status code (Not Found) and shortly after, a new C2 server was identified (<strong>starbucls[.]xyz</strong>). This could be because we caught the binary before it was rolled off as part of a normal operational security practice (don’t leave your valuable payload attached to the Internet to be discovered) or because they observed a connection to their infrastructure that was not from their targeted network.</p>
<p>Of note, while the User-Agent strings above could initially appear to be the default cURL or Firefox User-Agents strings to an analyst, they are not. The default cURL User-Agent string is <strong>curl%2Fversion.number</strong> whereas the malware uses <strong>cur1-agent</strong> (using a <strong>1</strong> in place of the <strong>l</strong> in “curl”). Additionally, the “Firefox” string is all lowercase (<strong>mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)</strong>), unlike actual <a href="https://www.useragentstring.com/pages/Firefox/">Firefox User-Agent strings</a> which are camel-cased.</p>
<p>This requirement to download payloads allows the attackers to restrict distribution to only requestors who know the correct UA string. This provides strong protection against both scanning services and researchers, who would otherwise have early access to hosted malicious files for analysis and detection engineering.</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="victimology" class="absolute -top-32"></span>Victimology</h3>
<p>The REF9135 victim is a venture-backed cryptocurrency company providing services to businesses such as payroll and business-to-business transactions with a headquarters in the United States. This victim fits the mold from prior reporting on BlueNorOff targeting organizations with access to large amounts of cryptocurrency for theft.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="observed-adversary-tactics-and-techniques" class="absolute -top-32"></span>Observed adversary tactics and techniques</h2>
<p>Elastic uses the MITRE ATT&amp;CK framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="tactics" class="absolute -top-32"></span>Tactics</h3>
<p>Tactics represent the why of a technique or sub-technique. It is the adversary’s tactical goal: the reason for performing an action.</p>
<ul>
<li><a href="https://attack.mitre.org/tactics/TA0001">Initial access</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0002">Execution</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0005">Defense evasion</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0007">Discovery</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0008/">Lateral movement</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0011">Command and control</a></li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="diamond-model" class="absolute -top-32"></span>Diamond model</h2>
<p>Elastic Security utilizes the <a href="https://www.activeresponse.org/wp-content/uploads/2013/07/diamond.pdf">Diamond Model</a> to describe high-level relationships between adversaries, capabilities, infrastructure, and victims of intrusions. While the Diamond Model is most commonly used with single intrusions, and leveraging Activity Threading (section 8) as a way to create relationships between incidents, an adversary-centered (section 7.1.4) approach allows for a, although cluttered, single diamond.</p>
<p></p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="detection-logic" class="absolute -top-32"></span>Detection logic</h2>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="prevention" class="absolute -top-32"></span>Prevention</h3>
<ul>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/yara/rules/MacOS_Trojan_RustBucket.yar">MacOS.Trojan.RustBucket</a></li>
<li><a href="https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/persistence_persistence_via_suspicious_launch_agent_or_launch_daemon.toml">Persistence via Suspicious Launch Agent or Launch Daemon</a></li>
</ul>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="hunting-queries" class="absolute -top-32"></span>Hunting queries</h3>
<p>The events for EQL are provided with the Elastic Agent using the Elastic Defend integration. Hunting queries could return high signals or false positives. These queries are used to identify potentially suspicious behavior, but an investigation is required to validate the findings.</p>
<h4 class="font-bold leading-tight text-lg md:text-2xl relative"><span id="eql-queries" class="absolute -top-32"></span>EQL queries</h4>
<p>Using the Timeline section of the Security Solution in Kibana under the “Correlation” tab, you can use the below EQL queries to hunt for behaviors observed in REF9135.</p>
<p><strong>Suspicious Curl File Download via Osascript</strong></p>
<pre><code>process where process.parent.name : &quot;osascript&quot; and process.name : &quot;curl&quot; and process.args : &quot;-o&quot;</code></pre>
<p><strong>Suspicious URL as argument to Self-Signed Binary</strong></p>
<pre><code>process where event.type == &quot;start&quot; and event.action == &quot;exec&quot; and 
 process.code_signature.trusted == false and 
 process.code_signature.signing_id regex~ &quot;&quot;&quot;[A-Za-z0-9\_\s]{2,}\-[a-z0-9]{40}&quot;&quot;&quot; and 
 process.args : &quot;http*&quot; and process.args_count &lt;= 3</code></pre>
<h4 class="font-bold leading-tight text-lg md:text-2xl relative"><span id="yara" class="absolute -top-32"></span>YARA</h4>
<p>Elastic Security has created YARA rules to identify this activity. Below are YARA rules to identify the RUSTBUCKET malware:</p>
<pre><code> rule MacOS_Trojan_RustBucket {
    meta:
        author = &quot;Elastic Security&quot;
        creation_date = &quot;2023-06-26&quot;
        last_modified = &quot;2023-06-26&quot;
        license = &quot;Elastic License v2&quot;
        os = &quot;MacOS&quot;
        arch = &quot;x86&quot;
        category_type = &quot;Trojan&quot;
        family = &quot;RustBucket&quot;
        threat_name = &quot;MacOS.Trojan.RustBucket&quot;
        reference_sample = &quot;9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747&quot;
        severity = 100

    strings:
        $user_agent = &quot;User-AgentMozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)&quot;
        $install_log = &quot;/var/log/install.log&quot;
        $timestamp = &quot;%Y-%m-%d %H:%M:%S&quot;
    condition:
        all of them
}</code></pre>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="references" class="absolute -top-32"></span>References</h2>
<p>The following were referenced throughout the above research:</p>
<ul>
<li><a href="https://www.jamf.com/blog/bluenoroff-apt-targets-macos-rustbucket-malware/">https:%2F%2Fwww.jamf.com%2Fblog%2FBlueNorOff-apt-targets-macos-rustbucket-malware%2F</a></li>
<li><a href="https://blog.sekoia.io/bluenoroffs-rustbucket-campaign/">https:%2F%2Fblog.sekoia.io%2FBlueNorOffs-rustbucket-campaign%2F</a></li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="observations" class="absolute -top-32"></span>Observations</h2>
<p>All observables are also available for <a href="https://github.com/elastic/labs-releases/tree/main/indicators/rustbucket">download</a> in both ECS and STIX format in a combined zip bundle.</p>
<p>The following observables were discussed in this research.</p>
<div class="table-container"><table style="width:100%;table-layout:fixed;word-wrap:break-word"><thead><tr><th>Observable</th><th>Type</th><th>Name</th><th>Reference</th></tr></thead><tbody><tr><td>webhostwatto.work[.]gd</td><td>Domain</td><td>N%2FA</td><td>REF9135 C2 domain</td></tr><tr><td>crypto.hondchain[.]com</td><td>Domain</td><td>N%2FA</td><td>REF9135 C2 domain</td></tr><tr><td>starbucls[.]xyz</td><td>Domain</td><td>N%2FA</td><td>REF9135 C2 domain</td></tr><tr><td>jaicvc[.]com</td><td>Domain</td><td>N%2FA</td><td>REF9135 C2 domain</td></tr><tr><td>docsend.linkpc[.]net</td><td>Domain</td><td>N%2FA</td><td>REF9135 C2 domain</td></tr><tr><td>companydeck[.]online</td><td>Domain</td><td>N%2FA</td><td>Associated by REF9135 TLS fingerprint hash</td></tr><tr><td>104.168.167[.]88</td><td>ipv4</td><td>N%2FA</td><td>REF9135 C2 IP address</td></tr><tr><td>64.44.141[.]15</td><td>ipv4</td><td>N%2FA</td><td>REF9135 C2 IP address</td></tr><tr><td>788261d948177acfcfeb1f839053c8ee9f325bd6fb3f07637a7465acdbbef76a</td><td>x509-certificate</td><td>jaicvc[.]com</td><td>REF9135 C2 TLS fingerprint hash</td></tr><tr><td>1031871a8bb920033af87078e4a418ebd30a5d06152cd3c2c257aecdf8203ce6</td><td>x509-certificate</td><td>webhostwatto.work[.]gd</td><td>REF9135 C2 TLS fingerprint hash</td></tr><tr><td>9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747</td><td>SHA-256</td><td>N%2FA</td><td>MacOS.Trojan.RustBucket</td></tr><tr><td>7fccc871c889a4f4c13a977fdd5f062d6de23c3ffd27e72661c986fae6370387</td><td>SHA-256</td><td>N%2FA</td><td>MacOS.Trojan.RustBucket</td></tr><tr><td>ec8f97d5595d92ec678ffbf5ae1f60ce90e620088927f751c76935c46aa7dc41</td><td>SHA-256</td><td>N%2FA</td><td>MacOS.Trojan.RustBucket</td></tr><tr><td>de81e5246978775a45f3dbda43e2716aaa1b1c4399fe7d44f918fccecc4dd500</td><td>SHA-256</td><td>ErrorCheck</td><td>MacOS.Trojan.RustBucket</td></tr><tr><td>4f49514ab1794177a61c50c63b93b903c46f9b914c32ebe9c96aa3cbc1f99b16</td><td>SHA-256</td><td>N%2FA</td><td>MacOS.Trojan.RustBucket</td></tr><tr><td>fe8c0e881593cc3dfa7a66e314b12b322053c67cbc9b606d5a2c0a12f097ef69</td><td>SHA-256</td><td>N%2FA</td><td>MacOS.Trojan.RustBucket</td></tr><tr><td>7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8</td><td>SHA-256</td><td>%2FUsers%2FShared%2F.pd</td><td>Stage 2</td></tr></tbody></table></div></div></div></div><div class="hidden lg:flex lg:col-span-1 text-sm lg:flex-col lg:space-y-6"><div class="toc"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Jump to section</h4><ul class="flex flex-col space-y-2"><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#preamble"><span>Preamble</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#rustbucket-code-analysis"><span>RUSTBUCKET code&nbsp;analysis</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#overview"><span>Overview</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#stage-1"><span>Stage&nbsp;1</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#stage-2"><span>Stage&nbsp;2</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#stage-3"><span>Stage&nbsp;3</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-8" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#command-id-0x31"><span>Command ID&nbsp;0x31</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-8" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#command-id-0x30"><span>Command ID&nbsp;0x30</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#the-undetected-version-of-rustbucket"><span>The undetected version of&nbsp;RUSTBUCKET</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket#persistence"><span>Persistence</span></a></li></ul><button class="border-t border-white/20 w-full mt-3 py-2 flex items-center space-x-1 text-xs font-medium uppercase tracking-wide hover:text-white"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="w-3 h-3"><path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path></svg><span>Show more</span></button></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Elastic Security Labs Newsletter</h4><div><a target="_blank" class="button inline-flex" href="https://www.elastic.co/security-labs/newsletter?utm_source=security-labs">Sign Up</a></div></div></div></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl my-5 md:my-10 max-w-3xl mx-auto flex flex-col items-center shadow-2xl"><h4 class="font-bold leading-tight text-lg md:text-2xl">Share this article</h4><div class="flex flex-wrap items-center justify-center mt-4 space-x-4"><a class="flex items-center space-x-2 button" href="https://twitter.com/intent/tweet?text=The DPRK strikes using a new variant of RUSTBUCKET&amp;url=https://www.elastic.co/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Twitter" title="Share this article on Twitter"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>Twitter</span></a><a class="flex items-center space-x-2 button" href="https://www.facebook.com/sharer/sharer.php?u=https://www.elastic.co/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Facebook" title="Share this article on Facebook"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M22.5 12c0-5.799-4.701-10.5-10.5-10.5S1.5 6.201 1.5 12c0 5.301 3.901 9.699 9 10.401V14.4h-2.7v-2.7h2.7v-2.1c0-2.7 1.8-4.2 4.2-4.2 1.2 0 2.1.1 2.4.2v2.4h-1.5c-1.2 0-1.5.6-1.5 1.5v1.8h3l-.3 2.7h-2.7V22C18.599 21.3 22.5 17.301 22.5 12z"></path></svg><span>Facebook</span></a><a class="flex items-center space-x-2 button" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.elastic.co/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket&amp;title=The DPRK strikes using a new variant of RUSTBUCKET" target="_blank" rel="noopener noreferrer" aria-label="Share this article on LinkedIn" title="Share this article on LinkedIn"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"></path></svg><span>LinkedIn</span></a><a class="flex items-center space-x-2 button" href="https://reddit.com/submit?url=https://www.elastic.co/security-labs/DPRK-strikes-using-a-new-variant-of-rustbucket&amp;title=The DPRK strikes using a new variant of RUSTBUCKET" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Reddit" title="Share this article on Reddit"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill-rule="evenodd" clip-rule="evenodd" d="M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM19.6879 11.0584C19.8819 11.3352 19.9916 11.6622 20.004 12C20.0091 12.3306 19.9205 12.656 19.7485 12.9384C19.5765 13.2208 19.3281 13.4488 19.032 13.596C19.0455 13.7717 19.0455 13.9483 19.032 14.124C19.032 16.812 15.9 18.996 12.036 18.996C8.172 18.996 5.04 16.812 5.04 14.124C5.02649 13.9483 5.02649 13.7717 5.04 13.596C4.80919 13.49 4.6042 13.335 4.43923 13.1419C4.27427 12.9487 4.15327 12.722 4.08462 12.4775C4.01598 12.2329 4.00133 11.9764 4.04169 11.7256C4.08205 11.4748 4.17646 11.2358 4.31837 11.0251C4.46028 10.8145 4.6463 10.6372 4.86354 10.5056C5.08078 10.3739 5.32404 10.2911 5.57646 10.2629C5.82889 10.2346 6.08444 10.2616 6.32541 10.3419C6.56638 10.4222 6.78701 10.5539 6.972 10.728C8.35473 9.79023 9.98146 9.27718 11.652 9.252L12.54 5.088C12.55 5.03979 12.5694 4.99405 12.5972 4.95341C12.625 4.91277 12.6605 4.87805 12.7018 4.85127C12.7431 4.82448 12.7894 4.80615 12.8378 4.79735C12.8862 4.78855 12.9359 4.78945 12.984 4.8L15.924 5.388C16.0676 5.14132 16.2944 4.9539 16.5637 4.85937C16.833 4.76484 17.1272 4.7694 17.3934 4.87222C17.6597 4.97505 17.8806 5.1694 18.0164 5.42041C18.1523 5.67141 18.1942 5.96262 18.1348 6.24177C18.0753 6.52092 17.9182 6.76972 17.6918 6.94352C17.4654 7.11732 17.1845 7.20473 16.8995 7.19006C16.6144 7.1754 16.3439 7.05962 16.1366 6.8635C15.9292 6.66738 15.7985 6.40378 15.768 6.12L13.2 5.58L12.42 9.324C14.0702 9.3594 15.6749 9.87206 17.04 10.8C17.2839 10.566 17.5902 10.4074 17.9221 10.3436C18.254 10.2797 18.5973 10.3132 18.9106 10.4401C19.2239 10.5669 19.4939 10.7817 19.6879 11.0584ZM8.20624 12.5333C8.07438 12.7307 8.004 12.9627 8.004 13.2C8.004 13.5183 8.13043 13.8235 8.35547 14.0485C8.58051 14.2736 8.88574 14.4 9.204 14.4C9.44134 14.4 9.67335 14.3296 9.87068 14.1978C10.068 14.0659 10.2218 13.8785 10.3127 13.6592C10.4035 13.4399 10.4272 13.1987 10.3809 12.9659C10.3346 12.7331 10.2204 12.5193 10.0525 12.3515C9.8847 12.1836 9.67089 12.0694 9.43811 12.0231C9.20533 11.9768 8.96405 12.0005 8.74478 12.0913C8.52551 12.1822 8.33809 12.336 8.20624 12.5333ZM12.012 17.424C13.0771 17.4681 14.1246 17.1416 14.976 16.5V16.548C15.0075 16.5173 15.0327 16.4806 15.05 16.4402C15.0674 16.3997 15.0766 16.3563 15.0772 16.3122C15.0777 16.2682 15.0696 16.2245 15.0533 16.1837C15.0369 16.1428 15.0127 16.1055 14.982 16.074C14.9513 16.0425 14.9146 16.0173 14.8742 16C14.8337 15.9826 14.7903 15.9734 14.7462 15.9728C14.7022 15.9723 14.6585 15.9804 14.6177 15.9967C14.5768 16.0131 14.5395 16.0373 14.508 16.068C13.7797 16.5904 12.895 16.8487 12 16.8C11.1061 16.8399 10.2255 16.5732 9.504 16.044C9.44182 15.993 9.36289 15.9669 9.28256 15.9708C9.20222 15.9748 9.12622 16.0085 9.06935 16.0653C9.01247 16.1222 8.97879 16.1982 8.97484 16.2786C8.97089 16.3589 8.99697 16.4378 9.048 16.5C9.89937 17.1416 10.9469 17.4681 12.012 17.424ZM14.0933 14.2458C14.2907 14.3776 14.5227 14.448 14.76 14.448L14.748 14.496C14.9107 14.4978 15.0721 14.4664 15.2223 14.4038C15.3725 14.3413 15.5084 14.2488 15.6218 14.1321C15.7352 14.0154 15.8236 13.8768 15.8818 13.7248C15.9399 13.5728 15.9665 13.4106 15.96 13.248C15.96 13.0107 15.8896 12.7787 15.7578 12.5813C15.6259 12.384 15.4385 12.2302 15.2192 12.1393C14.9999 12.0485 14.7587 12.0248 14.5259 12.0711C14.2931 12.1174 14.0793 12.2316 13.9115 12.3995C13.7436 12.5673 13.6294 12.7811 13.5831 13.0139C13.5368 13.2467 13.5605 13.4879 13.6513 13.7072C13.7422 13.9265 13.896 14.1139 14.0933 14.2458Z" fill="currentColor"></path></svg><span>Reddit</span></a></div></div></article></main><footer class="mt-auto text-xs md:text-sm"><div class="container py-6 flex flex-col md:flex-row gap-2 md:gap-0 justify-between items-center"><div class="text-zinc-300"><nav><ul class="flex space-x-4"><li><a class="hover:text-white font-medium" href="/security-labs/sitemap.xml">Sitemap</a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://elastic.co?utm_source=elastic-search-labs&amp;utm_medium=referral&amp;utm_campaign=search-labs&amp;utm_content=footer"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="inline-block w-3 h-3"><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"></path></svg><span>Elastic.co</span></a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://twitter.com/elasticseclabs"><svg class="w-4 h-4 inline-block w-3 h-3" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>@elasticseclabs</span></a></li></ul></nav></div><div class="flex flex-col space-y-1 text-zinc-300"><p>© <!-- -->2024<!-- -->. Elasticsearch B.V. All Rights Reserved.</p></div></div></footer></main></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"article":{"title":"The DPRK strikes using a new variant of RUSTBUCKET","slug":"DPRK-strikes-using-a-new-variant-of-rustbucket","date":"2023-07-14","description":"Watch out! We’ve recently discovered a variant of RUSTBUCKET. Read this article to understand the new capabilities we’ve observed, as well as how to identify it in your own network.","image":"photo-edited-12@2x.jpg","subtitle":"A DPRK campaign using a new variant of the RUSTBUCKET malware is underway with updated capabilities and reduced signature detection.","tags":["ref9135","rustbucket","dprk","bluenoroff","cryptocurrency","apt38"],"body":{"raw":"## Key takeaways\n- The RUSTBUCKET malware family is in an active development phase, adding built-in persistence and focusing on signature reduction.\n- REF9135 actors are continually shifting their infrastructure to evade detection and response.\n- The DPRK continues financially motivated attacks against cryptocurrency service providers.\n- If you are running Elastic Defend, you are protected from REF9135\n\n\n## Preamble\nThe Elastic Security Labs team has detected a new variant of the RUSTBUCKET malware, a family that has been previously attributed to the BlueNorOff group by [Jamf Threat Labs](https://www.jamf.com/blog/bluenoroff-apt-targets-macos-rustbucket-malware/) in April 2023.\n\nThis variant of RUSTBUCKET, a malware family that targets macOS systems, adds persistence capabilities not previously observed and, at the time of reporting, is undetected by VirusTotal signature engines. Elastic Defend behavioral and prebuilt detection rules provide protection and visibility for users. We have also released a signature to prevent this malware execution.\n\nThe research into REF9135 used host, binary, and network analysis to identify and attribute intrusions observed by this research team, and other intelligence groups, with high confidence to the Lazarus Group; a cybercrime and espionage organization operated by the Democratic People’s Republic of North Korea (DPRK).\n\nThis research will describe:\n\n- REF9135’s use of RUSTBUCKET for sustained operations at a cryptocurrency payment services provider\n- Reversing of an undetected variant of RUSTBUCKET that adds a built-in persistence mechanism\n- How victimology, initial infection, malware, and network C2 intersections from first and third-party collection align with previous Lazarus Group reporting\n\n\n## RUSTBUCKET code analysis\n\n\n### Overview\nOur research has identified a persistence capability not previously seen in the RUSTBUCKET family of malware, leading us to believe that this family is under active development. Additionally, at the time of publication, this new variant has zero detections on VirusTotal and is leveraging a dynamic network infrastructure methodology for command and control.\n\n\n\n![Execution flow of REF9135](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image1.jpg)\n\n### Stage 1\nDuring Stage 1, the process begins with the execution of an AppleScript utilizing the **%2Fusr%2Fbin%2Fosascript** command. This AppleScript is responsible for initiating the download of the Stage 2 binary from the C2 using cURL. This session includes the string **pd** in the body of the HTTP request and **cur1-agent** as the User-Agent string which saves the Stage 2 binary to **%2Fusers%2Fshared%2F.pd,** ([7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8](https://www.virustotal.com/gui/file/7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8)).\n\n\n\n![Stage 1 command line](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image2.jpg)\n\n### Stage 2\nThe Stage 2 binary ( **.pd** ) is compiled in Swift and operates based on command-line arguments. The binary expects a C2 URL to be provided as the first parameter when executed. Upon execution, it invokes the **downAndExec** function, which is responsible for preparing a POST HTTP request. To initiate this request, the binary sets the User-Agent string as **mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)** and includes the string **pw** in the body of the HTTP request.\n\n\n\n![Setting the HTTP parameters before sending the request](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image12.jpg)\n\nDuring execution, the malware utilizes specific macOS APIs for various operations. It begins with [NSFileManager's](https://developer.apple.com/documentation/foundation/nsfilemanager) **temporaryDirectory** function to obtain the current temporary folder, then generates a random UUID using [NSUUID's](https://developer.apple.com/documentation/foundation/nsuuid) **UUID.init** method. Finally, the malware combines the temporary directory path with the generated UUID to create a unique file location and writes the payload to it.\n\nOnce the payload, representing Stage 3 of the attack is written to disk, the malware utilizes [NSTask](https://developer.apple.com/documentation/foundation/nstask) to initiate its execution.\n\n\n\n![Generating the Stage 3 file path](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image11.jpg)\n\n### Stage 3\nIn Stage 3, the malware ([9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747](https://www.virustotal.com/gui/file/9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747)) is a FAT macOS binary that supports both ARM and Intel architectures written in Rust. It requires a C2 URL to be supplied as a parameter.\n\nThe malware initiates its operations by dynamically generating a 16-byte random value at runtime. This value serves as a distinctive identifier for the specific instance of the active malware. Subsequently, the malware proceeds to gather comprehensive system information, including:\n\n- Computer name\n- List of active processes\n- Current timestamp\n- Installation timestamp\n- System boot time\n- Status of all running processes within the system\n\nThe malware establishes its initial connection to the C2 server by transmitting the gathered data via a POST request. The request is accompanied by a User-Agent string formatted as **Mozilla%2F4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident%2F4.0)**.\n\nUpon receiving the request, the C2 server responds with a command ID, which serves as an instruction for the malware. The malware is designed to handle only two commands.\n\n\n\n#### Command ID 0x31\nThis command directs the malware to self-terminate.\n\n\n\n#### Command ID 0x30\nThis command enables the operator to upload malicious Mach-O binaries or shell scripts to the system and execute them. The payload is stored in a randomly generated temporary path and created within the current user TMP directory following the naming convention of **`$TMPDIR%2F.\\\u003c8 random digits\\\u003e`**\n\nBelow is a summary of the command structure, indicating the constants, arguments, and payload components for easy comprehension.\n\n\n\n![Command structure example](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image5.jpg)\n\nThe malware proceeds by granting execution permissions to the uploaded file using the **chmod** API.\n\nAfter executing the payload, the malware sends a status update to the server, notifying it of the completed execution, and then sleeps for 60 seconds. Following this delay, the malware loops to collect system information once again and remains in a waiting state, anticipating the arrival of the next command from the server\n\n\n\n### The undetected version of RUSTBUCKET\nUsing code similarities from the sample in our telemetry, we searched VirusTotal and identified an undetected variant of RUSTBUCKET.\n\nAs of the publication of this research, the [newly discovered version](https://www.virustotal.com/gui/file/de81e5246978775a45f3dbda43e2716aaa1b1c4399fe7d44f918fccecc4dd500) of the malware has not been flagged by any antivirus engines on VirusTotal. A thorough analysis of the sample brought to light the addition of a new persistence capability and C2 infrastructure. The behavioral rules for Elastic Defend prevent, and Elastic’s prebuilt detection rules identify, this activity. We have also released a signature that will prevent this new variant of RUSTBUCKET.\n\n\n\n![VirusTotal results at the time of publication](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image7.png)\n\n### Persistence\nA predominant method utilized by malware to achieve persistence on macOS is through the utilization of LaunchAgents. In macOS, users have individual LaunchAgents folders within their Library directory, enabling them to define code that executes upon each user login. Additionally, a system-level LaunchAgents folder exists, capable of executing code for all users during the login process. Elastic Defend monitors for the creation of LaunchAgents and LaunchDaemons containing malicious or suspicious values as a way to detect these persistence techniques.\n\nIn the case of this updated RUSTBUCKET sample, it establishes its own persistence by adding a plist file at the path **`%2FUsers%2F\\\u003cuser\\\u003e%2FLibrary%2FLaunchAgents%2Fcom.apple.systemupdate.plist`** , and it copies the malware’s binary to the following path **`%2FUsers%2F\\\u003cuser\\\u003e%2FLibrary%2FMetadata%2FSystem Update`**.\n\n\n\n![File content of plist used for persistence](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image9.jpg)\n\nThere are several elements of the plist file, using standard true%2Ffalse or string values:\n\n- **Label:** The key \"Label\" specifies the name of the LaunchAgent, which in this case is **com.apple.systemupdate**. This expects a string value.\n- **RunAtLoad:** This indicates that the LaunchAgent should execute its associated code immediately upon loading, specifically during system startup or user login. This expects a true%2Ffalse value.\n- **LaunchOnlyOnce:** This prevents the malware from being executed multiple times concurrently and expects a true%2Ffalse value.\n- **KeepAlive:** This key instructs the system to keep the LaunchAgent running and relaunch it if it terminates unexpectedly. This expects a true%2Ffalse value.\n- **ProgramArguments:** The \"ProgramArguments\" key specifies an array of strings that define the program or script to be executed by the LaunchAgent. This expects a string value and in this case, the LaunchAgent executes the file located at **\"`%2FUsers%2F\\\u003cuser\\\u003e%2FLibrary%2FMetadata%2FSystem Update`\"** and provides the C2 URL **\"https:%2F%2Fwebhostwatto.work[.]gd\"** as an argument to the malware.\n\n\n## RUSTBUCKET and REF9135 analysis\n\n\n### Overview\nThe RUSTBUCKET campaign has previously been associated with BlueNorOff by Jamf and Sekoia.io. BlueNorOff is believed to be operating at the behest of the DPRK for the purposes of financial gain in order to ease the strain of global sanctions. BlueNorOff is a sub-unit of the overarching DPRK offensive cyber attack organization, the [Lazarus Group](https://attack.mitre.org/groups/G0032/). The [2016 Bangladesh Bank robbery](https://www.nytimes.com/interactive/2018/05/03/magazine/money-issue-bangladesh-billion-dollar-bank-heist.html) stands out as BlueNorOff's most notorious attack, wherein their objective was to illicitly transfer over $850M from the Federal Reserve Bank of New York account owned by Bangladesh Bank, the central bank of Bangladesh, by exploiting the SWIFT network.\n\n\n\n\u003e As an analyst note, if you’re interested in a tremendously verbose and detailed walkthrough of this intrusion, Geoff White and Jean Lee released a 19-part podcast through the [BBC World Service](https://www.bbc.co.uk/programmes/w13xtvg9/episodes/downloads) that is an unbelievable account of this event.\n\n### Networking infrastructure\nThe persistence mechanism identified previously calls out to **https:%2F%2Fwebhostwatto.work[.]gd**. Third-party research into this URL indicates that 12%2F89 [VirusTotal](https://www.virustotal.com/gui/url/e299c9f2233f025256ab29d53d070a8f94d1c2c1a2b6f3a7c13e16df185e9e32/detection) vendors have identified it as malicious, and it exists within a community collection documenting the [DangerousPassword phishing campaign](https://www.cyfirma.com/outofband/tracking_dangerouspassword_campaign_by_lazarusgroup/).\n\n\n\n![VT detections and community collections for https://webhostwatto.work[.]gd](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image6.png)\n\nVirusTotal [last saw](https://www.virustotal.com/gui/domain/webhostwatto.work.gd/detection) the domain pointing to **104.168.167[.]88**. Which has been specifically identified in a Sekoia.io [blog](https://blog.sekoia.io/bluenoroffs-rustbucket-campaign/) in May as part of BlueNorOff’s RUSTBUCKET campaign.\n\n\n\n![Updated RUSTBUCKET IP (104.168.167[.]88) previously identified by Sekoia.io](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image4.jpg)\n\nFurther connecting **webhostwatto.work[.]gd** to DangerousPassword, BlueNorOff, and the DPRK campaigns, this domain shares a TLS leaf certificate fingerprint hash ( **1031871a8bb920033af87078e4a418ebd30a5d06152cd3c2c257aecdf8203ce6** ) with another domain, **companydeck[.]online**.\n\n**companydesk[.]online** is included in the [VirusTotal Graph](https://www.virustotal.com/graph/g6e8b200cfd774d129558fa5715c83d1bc81099f5cd7643719580be988ec01b8f) (VirusTotal account required) for [APT38](https://attack.mitre.org/groups/G0082/), which is also known as DangerousPassword, BlueNorOff, etc.\n\n\n\n![Selection from the VirusTotal Graph for DangerousPassword](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image3.jpg)\n\nDangerousPassword and BlueNorOff are campaigns that have both been previously associated with the DPRK.\n\nUsing the IP address (**64.44.141[.]15**) for our initial C2 domain, **crypto.hondchain[.]com**, we uncovered 3 additional C2 domains:\n\n- **starbucls[.]xyz**\n- **jaicvc[.]com**\n- **docsend.linkpc[.]net** (dynamic DNS domain)\n\nWhile there are only 5 hosts (4 total domains) registered to the C2 IP address (indicating that this was not a high-capacity hosting server), we looked for additional relationships to increase the association confidence between the domains. To do this, we replicated the same fingerprinting process previously used with **webhostwatto.work[.]gd**. The TLS fingerprint hash for **starbucls[.]xyz** ( **788261d948177acfcfeb1f839053c8ee9f325bd6fb3f07637a7465acdbbef76a** ) is the same fingerprint as **jaicvc[.]com**.\n\nWith these two domains having the same TLS fingerprint hash and the fact that they were both registered to the IP address, we were able to cluster these atomic entities, and their siblings, together with high confidence:\n\n- All hosts were registered to **64.44.141[.]15**\n- **starbucls[.]xyz** and **crypto.hondchain[.]com** were observed being used by our malware samples\n- **starbucls[.]xyz** and **jaicvc[.]com** shared a TLS fingerprint\n\n\n![Domains registered to REF9135 C2 IP address](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image8.jpg)\n\nLooking at the “First” column (when they were first observed through 3rd party passive DNS), these hosts are being created rapidly, likely as an attempt to stay ahead of detection efforts by research teams. We are associating the following domains and IP address to the REF9135 campaign with high confidence:\n\n- **starbucls[.]xyz**\n- **jaicvc[.]com**\n- **crypto.hondchain[.]com**\n- **64.44.141[.]15**\n\nWe have not observed **docsend.linkpc[.]net** being used with the RUSTBUCKET samples we analyzed. However, its shared IP registration and host siblings lead us to state with a moderate degree of confidence that it is directly related to RUSTBUCKET and REF9135 as C2 infrastructure; and a high degree of confidence that it is malicious (shared infrastructure as part of other campaigns).\n\n\n\n### Defense evasion\nThe campaign owners used techniques to hinder the collection of Stage 2 and Stage 3 binaries by analysts who may have overlooked User-Agent strings in their investigations, as well as internet scanners and sandboxes focused on collecting malicious binaries.\n\nAs outlined in the Stage 1 section, there is a specific User-Agent string ( **cur1-agent** ) that is expected when downloading the Stage 2 binary, if you do not use the expected User-Agent, you will be provided with a 405 HTTP response status code (Method Not Allowed).\n\nIt also appears that the campaign owners are monitoring their payload staging infrastructure. Using the expected User-Agent for the Stage 3 binary download (**mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)**), we were able to collect the Stage 3 binary.\n\nFinally, we observed REF9135 changing its C2 domain once we began to collect the Stage 2 and 3 binaries for analysis. When making subsequent requests to the original server (**crypto.hondchain[.]com**), we received a 404 HTTP response status code (Not Found) and shortly after, a new C2 server was identified (**starbucls[.]xyz**). This could be because we caught the binary before it was rolled off as part of a normal operational security practice (don’t leave your valuable payload attached to the Internet to be discovered) or because they observed a connection to their infrastructure that was not from their targeted network.\n\nOf note, while the User-Agent strings above could initially appear to be the default cURL or Firefox User-Agents strings to an analyst, they are not. The default cURL User-Agent string is **curl%2Fversion.number** whereas the malware uses **cur1-agent** (using a **1** in place of the **l** in “curl”). Additionally, the “Firefox” string is all lowercase (**mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)**), unlike actual [Firefox User-Agent strings](https://www.useragentstring.com/pages/Firefox/) which are camel-cased.\n\nThis requirement to download payloads allows the attackers to restrict distribution to only requestors who know the correct UA string. This provides strong protection against both scanning services and researchers, who would otherwise have early access to hosted malicious files for analysis and detection engineering.\n\n\n\n### Victimology\nThe REF9135 victim is a venture-backed cryptocurrency company providing services to businesses such as payroll and business-to-business transactions with a headquarters in the United States. This victim fits the mold from prior reporting on BlueNorOff targeting organizations with access to large amounts of cryptocurrency for theft.\n\n\n\n## Observed adversary tactics and techniques\nElastic uses the MITRE ATT\u0026CK framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.\n\n\n\n### Tactics\nTactics represent the why of a technique or sub-technique. It is the adversary’s tactical goal: the reason for performing an action.\n\n- [Initial access](https://attack.mitre.org/tactics/TA0001)\n- [Execution](https://attack.mitre.org/tactics/TA0002)\n- [Defense evasion](https://attack.mitre.org/tactics/TA0005)\n- [Discovery](https://attack.mitre.org/tactics/TA0007)\n- [Lateral movement](https://attack.mitre.org/tactics/TA0008/)\n- [Command and control](https://attack.mitre.org/tactics/TA0011)\n\n\n## Diamond model\nElastic Security utilizes the [Diamond Model](https://www.activeresponse.org/wp-content/uploads/2013/07/diamond.pdf) to describe high-level relationships between adversaries, capabilities, infrastructure, and victims of intrusions. While the Diamond Model is most commonly used with single intrusions, and leveraging Activity Threading (section 8) as a way to create relationships between incidents, an adversary-centered (section 7.1.4) approach allows for a, although cluttered, single diamond.\n\n\n\n![REF9135 Diamond Model](/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image13.jpg)\n\n## Detection logic\n\n\n### Prevention\n- [MacOS.Trojan.RustBucket](https://github.com/elastic/protections-artifacts/blob/main/yara/rules/MacOS_Trojan_RustBucket.yar)\n- [Persistence via Suspicious Launch Agent or Launch Daemon](https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/persistence_persistence_via_suspicious_launch_agent_or_launch_daemon.toml)\n\n\n### Hunting queries\nThe events for EQL are provided with the Elastic Agent using the Elastic Defend integration. Hunting queries could return high signals or false positives. These queries are used to identify potentially suspicious behavior, but an investigation is required to validate the findings.\n\n\n\n#### EQL queries\nUsing the Timeline section of the Security Solution in Kibana under the “Correlation” tab, you can use the below EQL queries to hunt for behaviors observed in REF9135.\n\n**Suspicious Curl File Download via Osascript**\n\n\n\n```\nprocess where process.parent.name : \"osascript\" and process.name : \"curl\" and process.args : \"-o\"\n```\n\n **Suspicious URL as argument to Self-Signed Binary**\n\n\n\n```\nprocess where event.type == \"start\" and event.action == \"exec\" and \n process.code_signature.trusted == false and \n process.code_signature.signing_id regex~ \"\"\"[A-Za-z0-9\\_\\s]{2,}\\-[a-z0-9]{40}\"\"\" and \n process.args : \"http*\" and process.args_count \u003c= 3\n```\n\n#### YARA\nElastic Security has created YARA rules to identify this activity. Below are YARA rules to identify the RUSTBUCKET malware:\n\n\n\n```\n rule MacOS_Trojan_RustBucket {\n    meta:\n        author = \"Elastic Security\"\n        creation_date = \"2023-06-26\"\n        last_modified = \"2023-06-26\"\n        license = \"Elastic License v2\"\n        os = \"MacOS\"\n        arch = \"x86\"\n        category_type = \"Trojan\"\n        family = \"RustBucket\"\n        threat_name = \"MacOS.Trojan.RustBucket\"\n        reference_sample = \"9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747\"\n        severity = 100\n\n    strings:\n        $user_agent = \"User-AgentMozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\"\n        $install_log = \"/var/log/install.log\"\n        $timestamp = \"%Y-%m-%d %H:%M:%S\"\n    condition:\n        all of them\n}\n```\n\n## References\nThe following were referenced throughout the above research:\n\n- [https:%2F%2Fwww.jamf.com%2Fblog%2FBlueNorOff-apt-targets-macos-rustbucket-malware%2F](https://www.jamf.com/blog/bluenoroff-apt-targets-macos-rustbucket-malware/)\n- [https:%2F%2Fblog.sekoia.io%2FBlueNorOffs-rustbucket-campaign%2F](https://blog.sekoia.io/bluenoroffs-rustbucket-campaign/)\n\n\n## Observations\nAll observables are also available for [download](https://github.com/elastic/labs-releases/tree/main/indicators/rustbucket) in both ECS and STIX format in a combined zip bundle.\n\nThe following observables were discussed in this research.\n\n| Observable | Type | Name | Reference |\n| --- | --- | --- | --- |\n| webhostwatto.work[.]gd | Domain | N%2FA | REF9135 C2 domain |\n| crypto.hondchain[.]com | Domain | N%2FA | REF9135 C2 domain |\n| starbucls[.]xyz | Domain | N%2FA | REF9135 C2 domain |\n| jaicvc[.]com | Domain | N%2FA | REF9135 C2 domain |\n| docsend.linkpc[.]net | Domain | N%2FA | REF9135 C2 domain |\n| companydeck[.]online | Domain | N%2FA | Associated by REF9135 TLS fingerprint hash |\n| 104.168.167[.]88 | ipv4 | N%2FA | REF9135 C2 IP address |\n| 64.44.141[.]15 | ipv4 | N%2FA | REF9135 C2 IP address |\n| 788261d948177acfcfeb1f839053c8ee9f325bd6fb3f07637a7465acdbbef76a | x509-certificate | jaicvc[.]com | REF9135 C2 TLS fingerprint hash |\n| 1031871a8bb920033af87078e4a418ebd30a5d06152cd3c2c257aecdf8203ce6 | x509-certificate | webhostwatto.work[.]gd | REF9135 C2 TLS fingerprint hash |\n| 9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747 | SHA-256 | N%2FA | MacOS.Trojan.RustBucket |\n| 7fccc871c889a4f4c13a977fdd5f062d6de23c3ffd27e72661c986fae6370387 | SHA-256 | N%2FA | MacOS.Trojan.RustBucket |\n| ec8f97d5595d92ec678ffbf5ae1f60ce90e620088927f751c76935c46aa7dc41 | SHA-256 | N%2FA | MacOS.Trojan.RustBucket |\n| de81e5246978775a45f3dbda43e2716aaa1b1c4399fe7d44f918fccecc4dd500 | SHA-256 | ErrorCheck | MacOS.Trojan.RustBucket |\n| 4f49514ab1794177a61c50c63b93b903c46f9b914c32ebe9c96aa3cbc1f99b16 | SHA-256 | N%2FA | MacOS.Trojan.RustBucket |\n| fe8c0e881593cc3dfa7a66e314b12b322053c67cbc9b606d5a2c0a12f097ef69 | SHA-256 | N%2FA | MacOS.Trojan.RustBucket |\n| 7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8 | SHA-256 | %2FUsers%2FShared%2F.pd | Stage 2 |\n\n\n\n","code":"var Component=(()=\u003e{var h=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var m=(n,e)=\u003e()=\u003e(e||n((e={exports:{}}).exports,e),e.exports),b=(n,e)=\u003e{for(var i in e)a(n,i,{get:e[i],enumerable:!0})},o=(n,e,i,s)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let r of g(e))!f.call(n,r)\u0026\u0026r!==i\u0026\u0026a(n,r,{get:()=\u003ee[r],enumerable:!(s=u(e,r))||s.enumerable});return n};var w=(n,e,i)=\u003e(i=n!=null?h(p(n)):{},o(e||!n||!n.__esModule?a(i,\"default\",{value:n,enumerable:!0}):i,n)),y=n=\u003eo(a({},\"__esModule\",{value:!0}),n);var d=m((R,c)=\u003e{c.exports=_jsx_runtime});var S={};b(S,{default:()=\u003ek,frontmatter:()=\u003ev});var t=w(d()),v={title:\"The DPRK strikes using a new variant of RUSTBUCKET\",slug:\"DPRK-strikes-using-a-new-variant-of-rustbucket\",date:\"2023-07-14\",subtitle:\"A DPRK campaign using a new variant of the RUSTBUCKET malware is underway with updated capabilities and reduced signature detection.\",description:\"Watch out! We\\u2019ve recently discovered a variant of RUSTBUCKET. Read this article to understand the new capabilities we\\u2019ve observed, as well as how to identify it in your own network.\",author:[{slug:\"salim-bitam\"},{slug:\"ricardo-ungureanu\"},{slug:\"colson-wilhoit\"},{slug:\"seth-goodwin\"},{slug:\"andrew-pease\"}],image:\"photo-edited-12@2x.jpg\",category:[{slug:\"attack-pattern\"},{slug:\"activity-group\"}],tags:[\"ref9135\",\"rustbucket\",\"dprk\",\"bluenoroff\",\"cryptocurrency\",\"apt38\"]};function l(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",p:\"p\",a:\"a\",h3:\"h3\",img:\"img\",strong:\"strong\",h4:\"h4\",code:\"code\",blockquote:\"blockquote\",pre:\"pre\",div:\"div\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:\"key-takeaways\",children:\"Key takeaways\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"The RUSTBUCKET malware family is in an active development phase, adding built-in persistence and focusing on signature reduction.\"}),`\n`,(0,t.jsx)(e.li,{children:\"REF9135 actors are continually shifting their infrastructure to evade detection and response.\"}),`\n`,(0,t.jsx)(e.li,{children:\"The DPRK continues financially motivated attacks against cryptocurrency service providers.\"}),`\n`,(0,t.jsx)(e.li,{children:\"If you are running Elastic Defend, you are protected from REF9135\"}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"preamble\",children:\"Preamble\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The Elastic Security Labs team has detected a new variant of the RUSTBUCKET malware, a family that has been previously attributed to the BlueNorOff group by \",(0,t.jsx)(e.a,{href:\"https://www.jamf.com/blog/bluenoroff-apt-targets-macos-rustbucket-malware/\",rel:\"nofollow\",children:\"Jamf Threat Labs\"}),\" in April 2023.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"This variant of RUSTBUCKET, a malware family that targets macOS systems, adds persistence capabilities not previously observed and, at the time of reporting, is undetected by VirusTotal signature engines. Elastic Defend behavioral and prebuilt detection rules provide protection and visibility for users. We have also released a signature to prevent this malware execution.\"}),`\n`,(0,t.jsx)(e.p,{children:\"The research into REF9135 used host, binary, and network analysis to identify and attribute intrusions observed by this research team, and other intelligence groups, with high confidence to the Lazarus Group; a cybercrime and espionage organization operated by the Democratic People\\u2019s Republic of North Korea (DPRK).\"}),`\n`,(0,t.jsx)(e.p,{children:\"This research will describe:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"REF9135\\u2019s use of RUSTBUCKET for sustained operations at a cryptocurrency payment services provider\"}),`\n`,(0,t.jsx)(e.li,{children:\"Reversing of an undetected variant of RUSTBUCKET that adds a built-in persistence mechanism\"}),`\n`,(0,t.jsx)(e.li,{children:\"How victimology, initial infection, malware, and network C2 intersections from first and third-party collection align with previous Lazarus Group reporting\"}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"rustbucket-code-analysis\",children:\"RUSTBUCKET code analysis\"}),`\n`,(0,t.jsx)(e.h3,{id:\"overview\",children:\"Overview\"}),`\n`,(0,t.jsx)(e.p,{children:\"Our research has identified a persistence capability not previously seen in the RUSTBUCKET family of malware, leading us to believe that this family is under active development. Additionally, at the time of publication, this new variant has zero detections on VirusTotal and is leveraging a dynamic network infrastructure methodology for command and control.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image1.jpg\",alt:\"Execution flow of REF9135\",width:\"960\",height:\"540\"})}),`\n`,(0,t.jsx)(e.h3,{id:\"stage-1\",children:\"Stage 1\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"During Stage 1, the process begins with the execution of an AppleScript utilizing the \",(0,t.jsx)(e.strong,{children:\"%2Fusr%2Fbin%2Fosascript\"}),\" command. This AppleScript is responsible for initiating the download of the Stage 2 binary from the C2 using cURL. This session includes the string \",(0,t.jsx)(e.strong,{children:\"pd\"}),\" in the body of the HTTP request and \",(0,t.jsx)(e.strong,{children:\"cur1-agent\"}),\" as the User-Agent string which saves the Stage 2 binary to \",(0,t.jsx)(e.strong,{children:\"%2Fusers%2Fshared%2F.pd,\"}),\" (\",(0,t.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8\",rel:\"nofollow\",children:\"7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8\"}),\").\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image2.jpg\",alt:\"Stage 1 command line\",width:\"1314\",height:\"548\"})}),`\n`,(0,t.jsx)(e.h3,{id:\"stage-2\",children:\"Stage 2\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The Stage 2 binary ( \",(0,t.jsx)(e.strong,{children:\".pd\"}),\" ) is compiled in Swift and operates based on command-line arguments. The binary expects a C2 URL to be provided as the first parameter when executed. Upon execution, it invokes the \",(0,t.jsx)(e.strong,{children:\"downAndExec\"}),\" function, which is responsible for preparing a POST HTTP request. To initiate this request, the binary sets the User-Agent string as \",(0,t.jsx)(e.strong,{children:\"mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)\"}),\" and includes the string \",(0,t.jsx)(e.strong,{children:\"pw\"}),\" in the body of the HTTP request.\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image12.jpg\",alt:\"Setting the HTTP parameters before sending the request\",width:\"1440\",height:\"514\"})}),`\n`,(0,t.jsxs)(e.p,{children:[\"During execution, the malware utilizes specific macOS APIs for various operations. It begins with \",(0,t.jsx)(e.a,{href:\"https://developer.apple.com/documentation/foundation/nsfilemanager\",rel:\"nofollow\",children:\"NSFileManager's\"}),\" \",(0,t.jsx)(e.strong,{children:\"temporaryDirectory\"}),\" function to obtain the current temporary folder, then generates a random UUID using \",(0,t.jsx)(e.a,{href:\"https://developer.apple.com/documentation/foundation/nsuuid\",rel:\"nofollow\",children:\"NSUUID's\"}),\" \",(0,t.jsx)(e.strong,{children:\"UUID.init\"}),\" method. Finally, the malware combines the temporary directory path with the generated UUID to create a unique file location and writes the payload to it.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Once the payload, representing Stage 3 of the attack is written to disk, the malware utilizes \",(0,t.jsx)(e.a,{href:\"https://developer.apple.com/documentation/foundation/nstask\",rel:\"nofollow\",children:\"NSTask\"}),\" to initiate its execution.\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image11.jpg\",alt:\"Generating the Stage 3 file path\",width:\"999\",height:\"241\"})}),`\n`,(0,t.jsx)(e.h3,{id:\"stage-3\",children:\"Stage 3\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"In Stage 3, the malware (\",(0,t.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747\",rel:\"nofollow\",children:\"9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747\"}),\") is a FAT macOS binary that supports both ARM and Intel architectures written in Rust. It requires a C2 URL to be supplied as a parameter.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"The malware initiates its operations by dynamically generating a 16-byte random value at runtime. This value serves as a distinctive identifier for the specific instance of the active malware. Subsequently, the malware proceeds to gather comprehensive system information, including:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Computer name\"}),`\n`,(0,t.jsx)(e.li,{children:\"List of active processes\"}),`\n`,(0,t.jsx)(e.li,{children:\"Current timestamp\"}),`\n`,(0,t.jsx)(e.li,{children:\"Installation timestamp\"}),`\n`,(0,t.jsx)(e.li,{children:\"System boot time\"}),`\n`,(0,t.jsx)(e.li,{children:\"Status of all running processes within the system\"}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"The malware establishes its initial connection to the C2 server by transmitting the gathered data via a POST request. The request is accompanied by a User-Agent string formatted as \",(0,t.jsx)(e.strong,{children:\"Mozilla%2F4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident%2F4.0)\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Upon receiving the request, the C2 server responds with a command ID, which serves as an instruction for the malware. The malware is designed to handle only two commands.\"}),`\n`,(0,t.jsx)(e.h4,{id:\"command-id-0x31\",children:\"Command ID 0x31\"}),`\n`,(0,t.jsx)(e.p,{children:\"This command directs the malware to self-terminate.\"}),`\n`,(0,t.jsx)(e.h4,{id:\"command-id-0x30\",children:\"Command ID 0x30\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This command enables the operator to upload malicious Mach-O binaries or shell scripts to the system and execute them. The payload is stored in a randomly generated temporary path and created within the current user TMP directory following the naming convention of \",(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.code,{children:\"$TMPDIR%2F.\\\\\u003c8 random digits\\\\\u003e\"})})]}),`\n`,(0,t.jsx)(e.p,{children:\"Below is a summary of the command structure, indicating the constants, arguments, and payload components for easy comprehension.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image5.jpg\",alt:\"Command structure example\",width:\"1440\",height:\"275\"})}),`\n`,(0,t.jsxs)(e.p,{children:[\"The malware proceeds by granting execution permissions to the uploaded file using the \",(0,t.jsx)(e.strong,{children:\"chmod\"}),\" API.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"After executing the payload, the malware sends a status update to the server, notifying it of the completed execution, and then sleeps for 60 seconds. Following this delay, the malware loops to collect system information once again and remains in a waiting state, anticipating the arrival of the next command from the server\"}),`\n`,(0,t.jsx)(e.h3,{id:\"the-undetected-version-of-rustbucket\",children:\"The undetected version of RUSTBUCKET\"}),`\n`,(0,t.jsx)(e.p,{children:\"Using code similarities from the sample in our telemetry, we searched VirusTotal and identified an undetected variant of RUSTBUCKET.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"As of the publication of this research, the \",(0,t.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/de81e5246978775a45f3dbda43e2716aaa1b1c4399fe7d44f918fccecc4dd500\",rel:\"nofollow\",children:\"newly discovered version\"}),\" of the malware has not been flagged by any antivirus engines on VirusTotal. A thorough analysis of the sample brought to light the addition of a new persistence capability and C2 infrastructure. The behavioral rules for Elastic Defend prevent, and Elastic\\u2019s prebuilt detection rules identify, this activity. We have also released a signature that will prevent this new variant of RUSTBUCKET.\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image7.png\",alt:\"VirusTotal results at the time of publication\",width:\"1440\",height:\"517\"})}),`\n`,(0,t.jsx)(e.h3,{id:\"persistence\",children:\"Persistence\"}),`\n`,(0,t.jsx)(e.p,{children:\"A predominant method utilized by malware to achieve persistence on macOS is through the utilization of LaunchAgents. In macOS, users have individual LaunchAgents folders within their Library directory, enabling them to define code that executes upon each user login. Additionally, a system-level LaunchAgents folder exists, capable of executing code for all users during the login process. Elastic Defend monitors for the creation of LaunchAgents and LaunchDaemons containing malicious or suspicious values as a way to detect these persistence techniques.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"In the case of this updated RUSTBUCKET sample, it establishes its own persistence by adding a plist file at the path \",(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.code,{children:\"%2FUsers%2F\\\\\u003cuser\\\\\u003e%2FLibrary%2FLaunchAgents%2Fcom.apple.systemupdate.plist\"})}),\" , and it copies the malware\\u2019s binary to the following path \",(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.code,{children:\"%2FUsers%2F\\\\\u003cuser\\\\\u003e%2FLibrary%2FMetadata%2FSystem Update\"})}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image9.jpg\",alt:\"File content of plist used for persistence\",width:\"1230\",height:\"739\"})}),`\n`,(0,t.jsx)(e.p,{children:\"There are several elements of the plist file, using standard true%2Ffalse or string values:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"Label:\"}),' The key \"Label\" specifies the name of the LaunchAgent, which in this case is ',(0,t.jsx)(e.strong,{children:\"com.apple.systemupdate\"}),\". This expects a string value.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"RunAtLoad:\"}),\" This indicates that the LaunchAgent should execute its associated code immediately upon loading, specifically during system startup or user login. This expects a true%2Ffalse value.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"LaunchOnlyOnce:\"}),\" This prevents the malware from being executed multiple times concurrently and expects a true%2Ffalse value.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"KeepAlive:\"}),\" This key instructs the system to keep the LaunchAgent running and relaunch it if it terminates unexpectedly. This expects a true%2Ffalse value.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"ProgramArguments:\"}),' The \"ProgramArguments\" key specifies an array of strings that define the program or script to be executed by the LaunchAgent. This expects a string value and in this case, the LaunchAgent executes the file located at ',(0,t.jsxs)(e.strong,{children:['\"',(0,t.jsx)(e.code,{children:\"%2FUsers%2F\\\\\u003cuser\\\\\u003e%2FLibrary%2FMetadata%2FSystem Update\"}),'\"']}),\" and provides the C2 URL \",(0,t.jsx)(e.strong,{children:'\"https:%2F%2Fwebhostwatto.work[.]gd\"'}),\" as an argument to the malware.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"rustbucket-and-ref9135-analysis\",children:\"RUSTBUCKET and REF9135 analysis\"}),`\n`,(0,t.jsx)(e.h3,{id:\"overview-1\",children:\"Overview\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The RUSTBUCKET campaign has previously been associated with BlueNorOff by Jamf and Sekoia.io. BlueNorOff is believed to be operating at the behest of the DPRK for the purposes of financial gain in order to ease the strain of global sanctions. BlueNorOff is a sub-unit of the overarching DPRK offensive cyber attack organization, the \",(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/groups/G0032/\",rel:\"nofollow\",children:\"Lazarus Group\"}),\". The \",(0,t.jsx)(e.a,{href:\"https://www.nytimes.com/interactive/2018/05/03/magazine/money-issue-bangladesh-billion-dollar-bank-heist.html\",rel:\"nofollow\",children:\"2016 Bangladesh Bank robbery\"}),\" stands out as BlueNorOff's most notorious attack, wherein their objective was to illicitly transfer over $850M from the Federal Reserve Bank of New York account owned by Bangladesh Bank, the central bank of Bangladesh, by exploiting the SWIFT network.\"]}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsxs)(e.p,{children:[\"As an analyst note, if you\\u2019re interested in a tremendously verbose and detailed walkthrough of this intrusion, Geoff White and Jean Lee released a 19-part podcast through the \",(0,t.jsx)(e.a,{href:\"https://www.bbc.co.uk/programmes/w13xtvg9/episodes/downloads\",rel:\"nofollow\",children:\"BBC World Service\"}),\" that is an unbelievable account of this event.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{id:\"networking-infrastructure\",children:\"Networking infrastructure\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The persistence mechanism identified previously calls out to \",(0,t.jsx)(e.strong,{children:\"https:%2F%2Fwebhostwatto.work[.]gd\"}),\". Third-party research into this URL indicates that 12%2F89 \",(0,t.jsx)(e.a,{href:\"https://www.virustotal.com/gui/url/e299c9f2233f025256ab29d53d070a8f94d1c2c1a2b6f3a7c13e16df185e9e32/detection\",rel:\"nofollow\",children:\"VirusTotal\"}),\" vendors have identified it as malicious, and it exists within a community collection documenting the \",(0,t.jsx)(e.a,{href:\"https://www.cyfirma.com/outofband/tracking_dangerouspassword_campaign_by_lazarusgroup/\",rel:\"nofollow\",children:\"DangerousPassword phishing campaign\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image6.png\",alt:\"VT detections and community collections for https://webhostwatto.work[.]gd\",width:\"1440\",height:\"486\"})}),`\n`,(0,t.jsxs)(e.p,{children:[\"VirusTotal \",(0,t.jsx)(e.a,{href:\"https://www.virustotal.com/gui/domain/webhostwatto.work.gd/detection\",rel:\"nofollow\",children:\"last saw\"}),\" the domain pointing to \",(0,t.jsx)(e.strong,{children:\"104.168.167[.]88\"}),\". Which has been specifically identified in a Sekoia.io \",(0,t.jsx)(e.a,{href:\"https://blog.sekoia.io/bluenoroffs-rustbucket-campaign/\",rel:\"nofollow\",children:\"blog\"}),\" in May as part of BlueNorOff\\u2019s RUSTBUCKET campaign.\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image4.jpg\",alt:\"Updated RUSTBUCKET IP (104.168.167[.]88) previously identified by Sekoia.io\",width:\"922\",height:\"608\"})}),`\n`,(0,t.jsxs)(e.p,{children:[\"Further connecting \",(0,t.jsx)(e.strong,{children:\"webhostwatto.work[.]gd\"}),\" to DangerousPassword, BlueNorOff, and the DPRK campaigns, this domain shares a TLS leaf certificate fingerprint hash ( \",(0,t.jsx)(e.strong,{children:\"1031871a8bb920033af87078e4a418ebd30a5d06152cd3c2c257aecdf8203ce6\"}),\" ) with another domain, \",(0,t.jsx)(e.strong,{children:\"companydeck[.]online\"}),\".\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"companydesk[.]online\"}),\" is included in the \",(0,t.jsx)(e.a,{href:\"https://www.virustotal.com/graph/g6e8b200cfd774d129558fa5715c83d1bc81099f5cd7643719580be988ec01b8f\",rel:\"nofollow\",children:\"VirusTotal Graph\"}),\" (VirusTotal account required) for \",(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/groups/G0082/\",rel:\"nofollow\",children:\"APT38\"}),\", which is also known as DangerousPassword, BlueNorOff, etc.\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image3.jpg\",alt:\"Selection from the VirusTotal Graph for DangerousPassword\",width:\"1440\",height:\"931\"})}),`\n`,(0,t.jsx)(e.p,{children:\"DangerousPassword and BlueNorOff are campaigns that have both been previously associated with the DPRK.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Using the IP address (\",(0,t.jsx)(e.strong,{children:\"64.44.141[.]15\"}),\") for our initial C2 domain, \",(0,t.jsx)(e.strong,{children:\"crypto.hondchain[.]com\"}),\", we uncovered 3 additional C2 domains:\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.strong,{children:\"starbucls[.]xyz\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.strong,{children:\"jaicvc[.]com\"})}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"docsend.linkpc[.]net\"}),\" (dynamic DNS domain)\"]}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"While there are only 5 hosts (4 total domains) registered to the C2 IP address (indicating that this was not a high-capacity hosting server), we looked for additional relationships to increase the association confidence between the domains. To do this, we replicated the same fingerprinting process previously used with \",(0,t.jsx)(e.strong,{children:\"webhostwatto.work[.]gd\"}),\". The TLS fingerprint hash for \",(0,t.jsx)(e.strong,{children:\"starbucls[.]xyz\"}),\" ( \",(0,t.jsx)(e.strong,{children:\"788261d948177acfcfeb1f839053c8ee9f325bd6fb3f07637a7465acdbbef76a\"}),\" ) is the same fingerprint as \",(0,t.jsx)(e.strong,{children:\"jaicvc[.]com\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:\"With these two domains having the same TLS fingerprint hash and the fact that they were both registered to the IP address, we were able to cluster these atomic entities, and their siblings, together with high confidence:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"All hosts were registered to \",(0,t.jsx)(e.strong,{children:\"64.44.141[.]15\"})]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"starbucls[.]xyz\"}),\" and \",(0,t.jsx)(e.strong,{children:\"crypto.hondchain[.]com\"}),\" were observed being used by our malware samples\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"starbucls[.]xyz\"}),\" and \",(0,t.jsx)(e.strong,{children:\"jaicvc[.]com\"}),\" shared a TLS fingerprint\"]}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image8.jpg\",alt:\"Domains registered to REF9135 C2 IP address\",width:\"850\",height:\"430\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Looking at the \\u201CFirst\\u201D column (when they were first observed through 3rd party passive DNS), these hosts are being created rapidly, likely as an attempt to stay ahead of detection efforts by research teams. We are associating the following domains and IP address to the REF9135 campaign with high confidence:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.strong,{children:\"starbucls[.]xyz\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.strong,{children:\"jaicvc[.]com\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.strong,{children:\"crypto.hondchain[.]com\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.strong,{children:\"64.44.141[.]15\"})}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"We have not observed \",(0,t.jsx)(e.strong,{children:\"docsend.linkpc[.]net\"}),\" being used with the RUSTBUCKET samples we analyzed. However, its shared IP registration and host siblings lead us to state with a moderate degree of confidence that it is directly related to RUSTBUCKET and REF9135 as C2 infrastructure; and a high degree of confidence that it is malicious (shared infrastructure as part of other campaigns).\"]}),`\n`,(0,t.jsx)(e.h3,{id:\"defense-evasion\",children:\"Defense evasion\"}),`\n`,(0,t.jsx)(e.p,{children:\"The campaign owners used techniques to hinder the collection of Stage 2 and Stage 3 binaries by analysts who may have overlooked User-Agent strings in their investigations, as well as internet scanners and sandboxes focused on collecting malicious binaries.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"As outlined in the Stage 1 section, there is a specific User-Agent string ( \",(0,t.jsx)(e.strong,{children:\"cur1-agent\"}),\" ) that is expected when downloading the Stage 2 binary, if you do not use the expected User-Agent, you will be provided with a 405 HTTP response status code (Method Not Allowed).\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"It also appears that the campaign owners are monitoring their payload staging infrastructure. Using the expected User-Agent for the Stage 3 binary download (\",(0,t.jsx)(e.strong,{children:\"mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)\"}),\"), we were able to collect the Stage 3 binary.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Finally, we observed REF9135 changing its C2 domain once we began to collect the Stage 2 and 3 binaries for analysis. When making subsequent requests to the original server (\",(0,t.jsx)(e.strong,{children:\"crypto.hondchain[.]com\"}),\"), we received a 404 HTTP response status code (Not Found) and shortly after, a new C2 server was identified (\",(0,t.jsx)(e.strong,{children:\"starbucls[.]xyz\"}),\"). This could be because we caught the binary before it was rolled off as part of a normal operational security practice (don\\u2019t leave your valuable payload attached to the Internet to be discovered) or because they observed a connection to their infrastructure that was not from their targeted network.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Of note, while the User-Agent strings above could initially appear to be the default cURL or Firefox User-Agents strings to an analyst, they are not. The default cURL User-Agent string is \",(0,t.jsx)(e.strong,{children:\"curl%2Fversion.number\"}),\" whereas the malware uses \",(0,t.jsx)(e.strong,{children:\"cur1-agent\"}),\" (using a \",(0,t.jsx)(e.strong,{children:\"1\"}),\" in place of the \",(0,t.jsx)(e.strong,{children:\"l\"}),\" in \\u201Ccurl\\u201D). Additionally, the \\u201CFirefox\\u201D string is all lowercase (\",(0,t.jsx)(e.strong,{children:\"mozilla%2F4.0 (compatible; msie 8.0; windows nt 5.1; trident%2F4.0)\"}),\"), unlike actual \",(0,t.jsx)(e.a,{href:\"https://www.useragentstring.com/pages/Firefox/\",rel:\"nofollow\",children:\"Firefox User-Agent strings\"}),\" which are camel-cased.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"This requirement to download payloads allows the attackers to restrict distribution to only requestors who know the correct UA string. This provides strong protection against both scanning services and researchers, who would otherwise have early access to hosted malicious files for analysis and detection engineering.\"}),`\n`,(0,t.jsx)(e.h3,{id:\"victimology\",children:\"Victimology\"}),`\n`,(0,t.jsx)(e.p,{children:\"The REF9135 victim is a venture-backed cryptocurrency company providing services to businesses such as payroll and business-to-business transactions with a headquarters in the United States. This victim fits the mold from prior reporting on BlueNorOff targeting organizations with access to large amounts of cryptocurrency for theft.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"observed-adversary-tactics-and-techniques\",children:\"Observed adversary tactics and techniques\"}),`\n`,(0,t.jsx)(e.p,{children:\"Elastic uses the MITRE ATT\u0026CK framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.\"}),`\n`,(0,t.jsx)(e.h3,{id:\"tactics\",children:\"Tactics\"}),`\n`,(0,t.jsx)(e.p,{children:\"Tactics represent the why of a technique or sub-technique. It is the adversary\\u2019s tactical goal: the reason for performing an action.\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0001\",rel:\"nofollow\",children:\"Initial access\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0002\",rel:\"nofollow\",children:\"Execution\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0005\",rel:\"nofollow\",children:\"Defense evasion\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0007\",rel:\"nofollow\",children:\"Discovery\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0008/\",rel:\"nofollow\",children:\"Lateral movement\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0011\",rel:\"nofollow\",children:\"Command and control\"})}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"diamond-model\",children:\"Diamond model\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Elastic Security utilizes the \",(0,t.jsx)(e.a,{href:\"https://www.activeresponse.org/wp-content/uploads/2013/07/diamond.pdf\",rel:\"nofollow\",children:\"Diamond Model\"}),\" to describe high-level relationships between adversaries, capabilities, infrastructure, and victims of intrusions. While the Diamond Model is most commonly used with single intrusions, and leveraging Activity Threading (section 8) as a way to create relationships between incidents, an adversary-centered (section 7.1.4) approach allows for a, although cluttered, single diamond.\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/image13.jpg\",alt:\"REF9135 Diamond Model\",width:\"1440\",height:\"868\"})}),`\n`,(0,t.jsx)(e.h2,{id:\"detection-logic\",children:\"Detection logic\"}),`\n`,(0,t.jsx)(e.h3,{id:\"prevention\",children:\"Prevention\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/yara/rules/MacOS_Trojan_RustBucket.yar\",rel:\"nofollow\",children:\"MacOS.Trojan.RustBucket\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/elastic/protections-artifacts/blob/main/behavior/rules/persistence_persistence_via_suspicious_launch_agent_or_launch_daemon.toml\",rel:\"nofollow\",children:\"Persistence via Suspicious Launch Agent or Launch Daemon\"})}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{id:\"hunting-queries\",children:\"Hunting queries\"}),`\n`,(0,t.jsx)(e.p,{children:\"The events for EQL are provided with the Elastic Agent using the Elastic Defend integration. Hunting queries could return high signals or false positives. These queries are used to identify potentially suspicious behavior, but an investigation is required to validate the findings.\"}),`\n`,(0,t.jsx)(e.h4,{id:\"eql-queries\",children:\"EQL queries\"}),`\n`,(0,t.jsx)(e.p,{children:\"Using the Timeline section of the Security Solution in Kibana under the \\u201CCorrelation\\u201D tab, you can use the below EQL queries to hunt for behaviors observed in REF9135.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:\"Suspicious Curl File Download via Osascript\"})}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`process where process.parent.name : \"osascript\" and process.name : \"curl\" and process.args : \"-o\"\n`})}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:\"Suspicious URL as argument to Self-Signed Binary\"})}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`process where event.type == \"start\" and event.action == \"exec\" and \n process.code_signature.trusted == false and \n process.code_signature.signing_id regex~ \"\"\"[A-Za-z0-9\\\\_\\\\s]{2,}\\\\-[a-z0-9]{40}\"\"\" and \n process.args : \"http*\" and process.args_count \u003c= 3\n`})}),`\n`,(0,t.jsx)(e.h4,{id:\"yara\",children:\"YARA\"}),`\n`,(0,t.jsx)(e.p,{children:\"Elastic Security has created YARA rules to identify this activity. Below are YARA rules to identify the RUSTBUCKET malware:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:` rule MacOS_Trojan_RustBucket {\n    meta:\n        author = \"Elastic Security\"\n        creation_date = \"2023-06-26\"\n        last_modified = \"2023-06-26\"\n        license = \"Elastic License v2\"\n        os = \"MacOS\"\n        arch = \"x86\"\n        category_type = \"Trojan\"\n        family = \"RustBucket\"\n        threat_name = \"MacOS.Trojan.RustBucket\"\n        reference_sample = \"9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747\"\n        severity = 100\n\n    strings:\n        $user_agent = \"User-AgentMozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\"\n        $install_log = \"/var/log/install.log\"\n        $timestamp = \"%Y-%m-%d %H:%M:%S\"\n    condition:\n        all of them\n}\n`})}),`\n`,(0,t.jsx)(e.h2,{id:\"references\",children:\"References\"}),`\n`,(0,t.jsx)(e.p,{children:\"The following were referenced throughout the above research:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://www.jamf.com/blog/bluenoroff-apt-targets-macos-rustbucket-malware/\",rel:\"nofollow\",children:\"https:%2F%2Fwww.jamf.com%2Fblog%2FBlueNorOff-apt-targets-macos-rustbucket-malware%2F\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://blog.sekoia.io/bluenoroffs-rustbucket-campaign/\",rel:\"nofollow\",children:\"https:%2F%2Fblog.sekoia.io%2FBlueNorOffs-rustbucket-campaign%2F\"})}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"observations\",children:\"Observations\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"All observables are also available for \",(0,t.jsx)(e.a,{href:\"https://github.com/elastic/labs-releases/tree/main/indicators/rustbucket\",rel:\"nofollow\",children:\"download\"}),\" in both ECS and STIX format in a combined zip bundle.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"The following observables were discussed in this research.\"}),`\n`,(0,t.jsx)(e.div,{className:\"table-container\",children:(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:\"Observable\"}),(0,t.jsx)(e.th,{children:\"Type\"}),(0,t.jsx)(e.th,{children:\"Name\"}),(0,t.jsx)(e.th,{children:\"Reference\"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"webhostwatto.work[.]gd\"}),(0,t.jsx)(e.td,{children:\"Domain\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 domain\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"crypto.hondchain[.]com\"}),(0,t.jsx)(e.td,{children:\"Domain\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 domain\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"starbucls[.]xyz\"}),(0,t.jsx)(e.td,{children:\"Domain\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 domain\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"jaicvc[.]com\"}),(0,t.jsx)(e.td,{children:\"Domain\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 domain\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"docsend.linkpc[.]net\"}),(0,t.jsx)(e.td,{children:\"Domain\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 domain\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"companydeck[.]online\"}),(0,t.jsx)(e.td,{children:\"Domain\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"Associated by REF9135 TLS fingerprint hash\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"104.168.167[.]88\"}),(0,t.jsx)(e.td,{children:\"ipv4\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 IP address\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"64.44.141[.]15\"}),(0,t.jsx)(e.td,{children:\"ipv4\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 IP address\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"788261d948177acfcfeb1f839053c8ee9f325bd6fb3f07637a7465acdbbef76a\"}),(0,t.jsx)(e.td,{children:\"x509-certificate\"}),(0,t.jsx)(e.td,{children:\"jaicvc[.]com\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 TLS fingerprint hash\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"1031871a8bb920033af87078e4a418ebd30a5d06152cd3c2c257aecdf8203ce6\"}),(0,t.jsx)(e.td,{children:\"x509-certificate\"}),(0,t.jsx)(e.td,{children:\"webhostwatto.work[.]gd\"}),(0,t.jsx)(e.td,{children:\"REF9135 C2 TLS fingerprint hash\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"9ca914b1cfa8c0ba021b9e00bda71f36cad132f27cf16bda6d937badee66c747\"}),(0,t.jsx)(e.td,{children:\"SHA-256\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"MacOS.Trojan.RustBucket\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"7fccc871c889a4f4c13a977fdd5f062d6de23c3ffd27e72661c986fae6370387\"}),(0,t.jsx)(e.td,{children:\"SHA-256\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"MacOS.Trojan.RustBucket\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"ec8f97d5595d92ec678ffbf5ae1f60ce90e620088927f751c76935c46aa7dc41\"}),(0,t.jsx)(e.td,{children:\"SHA-256\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"MacOS.Trojan.RustBucket\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"de81e5246978775a45f3dbda43e2716aaa1b1c4399fe7d44f918fccecc4dd500\"}),(0,t.jsx)(e.td,{children:\"SHA-256\"}),(0,t.jsx)(e.td,{children:\"ErrorCheck\"}),(0,t.jsx)(e.td,{children:\"MacOS.Trojan.RustBucket\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"4f49514ab1794177a61c50c63b93b903c46f9b914c32ebe9c96aa3cbc1f99b16\"}),(0,t.jsx)(e.td,{children:\"SHA-256\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"MacOS.Trojan.RustBucket\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"fe8c0e881593cc3dfa7a66e314b12b322053c67cbc9b606d5a2c0a12f097ef69\"}),(0,t.jsx)(e.td,{children:\"SHA-256\"}),(0,t.jsx)(e.td,{children:\"N%2FA\"}),(0,t.jsx)(e.td,{children:\"MacOS.Trojan.RustBucket\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"7887638bcafd57e2896c7c16698e927ce92fd7d409aae698d33cdca3ce8d25b8\"}),(0,t.jsx)(e.td,{children:\"SHA-256\"}),(0,t.jsx)(e.td,{children:\"%2FUsers%2FShared%2F.pd\"}),(0,t.jsx)(e.td,{children:\"Stage 2\"})]})]})]})})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(l,n)})):l(n)}var k=T;return y(S);})();\n;return Component;"},"_id":"articles/DPRK-strikes-using-a-new-variant-of-rustbucket.mdx","_raw":{"sourceFilePath":"articles/DPRK-strikes-using-a-new-variant-of-rustbucket.mdx","sourceFileName":"DPRK-strikes-using-a-new-variant-of-rustbucket.mdx","sourceFileDir":"articles","contentType":"mdx","flattenedPath":"articles/DPRK-strikes-using-a-new-variant-of-rustbucket"},"type":"Article","imageUrl":"/assets/images/DPRK-strikes-using-a-new-variant-of-rustbucket/photo-edited-12@2x.jpg","readingTime":"16 min read","series":"","url":"/DPRK-strikes-using-a-new-variant-of-rustbucket","headings":[{"level":2,"title":"Preamble","href":"#preamble"},{"level":2,"title":"RUSTBUCKET code analysis","href":"#rustbucket-code-analysis"},{"level":3,"title":"Overview","href":"#overview"},{"level":3,"title":"Stage 1","href":"#stage-1"},{"level":3,"title":"Stage 2","href":"#stage-2"},{"level":3,"title":"Stage 3","href":"#stage-3"},{"level":4,"title":"Command ID 0x31","href":"#command-id-0x31"},{"level":4,"title":"Command ID 0x30","href":"#command-id-0x30"},{"level":3,"title":"The undetected version of RUSTBUCKET","href":"#the-undetected-version-of-rustbucket"},{"level":3,"title":"Persistence","href":"#persistence"},{"level":2,"title":"RUSTBUCKET and REF9135 analysis","href":"#rustbucket-and-ref9135-analysis"},{"level":3,"title":"Overview","href":"#overview-1"},{"level":3,"title":"Networking infrastructure","href":"#networking-infrastructure"},{"level":3,"title":"Defense evasion","href":"#defense-evasion"},{"level":3,"title":"Victimology","href":"#victimology"},{"level":2,"title":"Observed adversary tactics and techniques","href":"#observed-adversary-tactics-and-techniques"},{"level":3,"title":"Tactics","href":"#tactics"},{"level":2,"title":"Diamond model","href":"#diamond-model"},{"level":2,"title":"Detection logic","href":"#detection-logic"},{"level":3,"title":"Prevention","href":"#prevention"},{"level":3,"title":"Hunting queries","href":"#hunting-queries"},{"level":4,"title":"EQL queries","href":"#eql-queries"},{"level":4,"title":"YARA","href":"#yara"},{"level":2,"title":"References","href":"#references"},{"level":2,"title":"Observations","href":"#observations"}],"author":[{"title":"Salim Bitam","slug":"salim-bitam","description":"Elastic","body":{"raw":"","code":"var Component=(()=\u003e{var l=Object.create;var i=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty;var g=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),j=(t,n)=\u003e{for(var e in n)i(t,e,{get:n[e],enumerable:!0})},s=(t,n,e,o)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let a of f(n))!d.call(t,a)\u0026\u0026a!==e\u0026\u0026i(t,a,{get:()=\u003en[a],enumerable:!(o=x(n,a))||o.enumerable});return t};var p=(t,n,e)=\u003e(e=t!=null?l(_(t)):{},s(n||!t||!t.__esModule?i(e,\"default\",{value:t,enumerable:!0}):e,t)),M=t=\u003es(i({},\"__esModule\",{value:!0}),t);var c=g((h,m)=\u003e{m.exports=_jsx_runtime});var F={};j(F,{default:()=\u003eD,frontmatter:()=\u003eb});var r=p(c()),b={title:\"Salim Bitam\",description:\"Elastic\",slug:\"salim-bitam\"};function u(t){return(0,r.jsx)(r.Fragment,{})}function C(t={}){let{wrapper:n}=t.components||{};return n?(0,r.jsx)(n,Object.assign({},t,{children:(0,r.jsx)(u,t)})):u(t)}var D=C;return M(F);})();\n;return Component;"},"_id":"authors/salim-bitam.mdx","_raw":{"sourceFilePath":"authors/salim-bitam.mdx","sourceFileName":"salim-bitam.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/salim-bitam"},"type":"Author","imageUrl":"","url":"/authors/salim-bitam"},{"title":"Ricardo Ungureanu","slug":"ricardo-ungureanu","description":"Principal Security Engineer, Elastic","image":"ricardo-ungureanu.jpg","body":{"raw":"","code":"var Component=(()=\u003e{var m=Object.create;var i=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var f=(n,t)=\u003e()=\u003e(t||n((t={exports:{}}).exports,t),t.exports),j=(n,t)=\u003e{for(var r in t)i(n,r,{get:t[r],enumerable:!0})},u=(n,t,r,o)=\u003e{if(t\u0026\u0026typeof t==\"object\"||typeof t==\"function\")for(let a of x(t))!p.call(n,a)\u0026\u0026a!==r\u0026\u0026i(n,a,{get:()=\u003et[a],enumerable:!(o=d(t,a))||o.enumerable});return n};var _=(n,t,r)=\u003e(r=n!=null?m(l(n)):{},u(t||!n||!n.__esModule?i(r,\"default\",{value:n,enumerable:!0}):r,n)),M=n=\u003eu(i({},\"__esModule\",{value:!0}),n);var s=f((X,c)=\u003e{c.exports=_jsx_runtime});var E={};j(E,{default:()=\u003eD,frontmatter:()=\u003ey});var e=_(s()),y={title:\"Ricardo Ungureanu\",description:\"Principal Security Engineer, Elastic\",slug:\"ricardo-ungureanu\",image:\"ricardo-ungureanu.jpg\"};function g(n){return(0,e.jsx)(e.Fragment,{})}function C(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,Object.assign({},n,{children:(0,e.jsx)(g,n)})):g(n)}var D=C;return M(E);})();\n;return Component;"},"_id":"authors/ricardo-ungureanu.mdx","_raw":{"sourceFilePath":"authors/ricardo-ungureanu.mdx","sourceFileName":"ricardo-ungureanu.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/ricardo-ungureanu"},"type":"Author","imageUrl":"/assets/images/authors/ricardo-ungureanu.jpg","url":"/authors/ricardo-ungureanu"},{"title":"Colson Wilhoit","slug":"colson-wilhoit","description":"Elastic","body":{"raw":"","code":"var Component=(()=\u003e{var m=Object.create;var i=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty;var g=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),j=(t,n)=\u003e{for(var e in n)i(t,e,{get:n[e],enumerable:!0})},a=(t,n,e,s)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let r of f(n))!d.call(t,r)\u0026\u0026r!==e\u0026\u0026i(t,r,{get:()=\u003en[r],enumerable:!(s=x(n,r))||s.enumerable});return t};var p=(t,n,e)=\u003e(e=t!=null?m(_(t)):{},a(n||!t||!t.__esModule?i(e,\"default\",{value:t,enumerable:!0}):e,t)),h=t=\u003ea(i({},\"__esModule\",{value:!0}),t);var l=g((X,c)=\u003e{c.exports=_jsx_runtime});var D={};j(D,{default:()=\u003ew,frontmatter:()=\u003eC});var o=p(l()),C={title:\"Colson Wilhoit\",description:\"Elastic\",slug:\"colson-wilhoit\"};function u(t){return(0,o.jsx)(o.Fragment,{})}function M(t={}){let{wrapper:n}=t.components||{};return n?(0,o.jsx)(n,Object.assign({},t,{children:(0,o.jsx)(u,t)})):u(t)}var w=M;return h(D);})();\n;return Component;"},"_id":"authors/colson-wilhoit.mdx","_raw":{"sourceFilePath":"authors/colson-wilhoit.mdx","sourceFileName":"colson-wilhoit.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/colson-wilhoit"},"type":"Author","imageUrl":"","url":"/authors/colson-wilhoit"},{"title":"Seth Goodwin","slug":"seth-goodwin","description":"Elastic","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var s=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var _=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),j=(t,n)=\u003e{for(var e in n)s(t,e,{get:n[e],enumerable:!0})},a=(t,n,e,i)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let r of f(n))!l.call(t,r)\u0026\u0026r!==e\u0026\u0026s(t,r,{get:()=\u003en[r],enumerable:!(i=d(n,r))||i.enumerable});return t};var p=(t,n,e)=\u003e(e=t!=null?x(g(t)):{},a(n||!t||!t.__esModule?s(e,\"default\",{value:t,enumerable:!0}):e,t)),h=t=\u003ea(s({},\"__esModule\",{value:!0}),t);var u=_((X,c)=\u003e{c.exports=_jsx_runtime});var D={};j(D,{default:()=\u003eC,frontmatter:()=\u003ew});var o=p(u()),w={title:\"Seth Goodwin\",description:\"Elastic\",slug:\"seth-goodwin\"};function m(t){return(0,o.jsx)(o.Fragment,{})}function M(t={}){let{wrapper:n}=t.components||{};return n?(0,o.jsx)(n,Object.assign({},t,{children:(0,o.jsx)(m,t)})):m(t)}var C=M;return h(D);})();\n;return Component;"},"_id":"authors/seth-goodwin.mdx","_raw":{"sourceFilePath":"authors/seth-goodwin.mdx","sourceFileName":"seth-goodwin.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/seth-goodwin"},"type":"Author","imageUrl":"","url":"/authors/seth-goodwin"},{"title":"Andrew Pease","slug":"andrew-pease","description":"Elastic Security Labs Technical Lead, Elastic","image":"andrew-pease.jpg","body":{"raw":"","code":"var Component=(()=\u003e{var m=Object.create;var s=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(e,t)=\u003e()=\u003e(t||e((t={exports:{}}).exports,t),t.exports),j=(e,t)=\u003e{for(var n in t)s(e,n,{get:t[n],enumerable:!0})},i=(e,t,n,c)=\u003e{if(t\u0026\u0026typeof t==\"object\"||typeof t==\"function\")for(let r of p(t))!g.call(e,r)\u0026\u0026r!==n\u0026\u0026s(e,r,{get:()=\u003et[r],enumerable:!(c=l(t,r))||c.enumerable});return e};var _=(e,t,n)=\u003e(n=e!=null?m(x(e)):{},i(t||!e||!e.__esModule?s(n,\"default\",{value:e,enumerable:!0}):n,e)),w=e=\u003ei(s({},\"__esModule\",{value:!0}),e);var u=f((C,o)=\u003e{o.exports=_jsx_runtime});var h={};j(h,{default:()=\u003eb,frontmatter:()=\u003eL});var a=_(u()),L={title:\"Andrew Pease\",description:\"Elastic Security Labs Technical Lead, Elastic\",slug:\"andrew-pease\",image:\"andrew-pease.jpg\"};function d(e){return(0,a.jsx)(a.Fragment,{})}function M(e={}){let{wrapper:t}=e.components||{};return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(d,e)})):d(e)}var b=M;return w(h);})();\n;return Component;"},"_id":"authors/andrew-pease.mdx","_raw":{"sourceFilePath":"authors/andrew-pease.mdx","sourceFileName":"andrew-pease.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/andrew-pease"},"type":"Author","imageUrl":"/assets/images/authors/andrew-pease.jpg","url":"/authors/andrew-pease"}],"category":[{"title":"Attack pattern","slug":"attack-pattern","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var o=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),l=(t,n)=\u003e{for(var e in n)o(t,e,{get:n[e],enumerable:!0})},s=(t,n,e,c)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let a of p(n))!g.call(t,a)\u0026\u0026a!==e\u0026\u0026o(t,a,{get:()=\u003en[a],enumerable:!(c=f(n,a))||c.enumerable});return t};var d=(t,n,e)=\u003e(e=t!=null?x(_(t)):{},s(n||!t||!t.__esModule?o(e,\"default\",{value:t,enumerable:!0}):e,t)),M=t=\u003es(o({},\"__esModule\",{value:!0}),t);var i=j((b,u)=\u003e{u.exports=_jsx_runtime});var F={};l(F,{default:()=\u003eD,frontmatter:()=\u003ek});var r=d(i()),k={title:\"Attack pattern\",slug:\"attack-pattern\"};function m(t){return(0,r.jsx)(r.Fragment,{})}function C(t={}){let{wrapper:n}=t.components||{};return n?(0,r.jsx)(n,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var D=C;return M(F);})();\n;return Component;"},"_id":"categories/attack-pattern.mdx","_raw":{"sourceFilePath":"categories/attack-pattern.mdx","sourceFileName":"attack-pattern.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/attack-pattern"},"type":"Category","url":"/categories/attack-pattern"},{"title":"Activity group","slug":"activity-group","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var j=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),l=(t,n)=\u003e{for(var e in n)a(t,e,{get:n[e],enumerable:!0})},c=(t,n,e,i)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let o of f(n))!_.call(t,o)\u0026\u0026o!==e\u0026\u0026a(t,o,{get:()=\u003en[o],enumerable:!(i=g(n,o))||i.enumerable});return t};var d=(t,n,e)=\u003e(e=t!=null?x(p(t)):{},c(n||!t||!t.__esModule?a(e,\"default\",{value:t,enumerable:!0}):e,t)),y=t=\u003ec(a({},\"__esModule\",{value:!0}),t);var u=j((X,s)=\u003e{s.exports=_jsx_runtime});var D={};l(D,{default:()=\u003eC,frontmatter:()=\u003eM});var r=d(u()),M={title:\"Activity group\",slug:\"activity-group\"};function m(t){return(0,r.jsx)(r.Fragment,{})}function v(t={}){let{wrapper:n}=t.components||{};return n?(0,r.jsx)(n,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var C=v;return y(D);})();\n;return Component;"},"_id":"categories/activity-group.mdx","_raw":{"sourceFilePath":"categories/activity-group.mdx","sourceFileName":"activity-group.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/activity-group"},"type":"Category","url":"/categories/activity-group"}]},"seriesArticles":null},"__N_SSG":true},"page":"/[slug]","query":{"slug":"DPRK-strikes-using-a-new-variant-of-rustbucket"},"buildId":"dGrrQfBbQkqaleQ_11aBK","assetPrefix":"/security-labs","isFallback":false,"gsp":true,"scriptLoader":[]}</script></body></html>