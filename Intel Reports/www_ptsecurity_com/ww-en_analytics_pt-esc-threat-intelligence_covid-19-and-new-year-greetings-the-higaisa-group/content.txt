<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><title>COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group</title><meta name="description" content="In March 2020 specialists from the PT Expert Security Center conducted an analysis on the activities of the APT group Higaisa. This group was first studied by security analysts at Tencent in November 2019. In that analysis, Tencent specialists reached the conclusion that Higaisa has its origins in South Korea. The group, which is still active today, can be tracked all the way back to 2009.
With the recent prevalence of the coronavirus (COVID-19) pandemic, many APT groups, including Gamaredon, SongXY, TA428, Lazarus, Konni, and Winnti, have been using the topic of COVID-19 in their email distributions. Higaisa is no exception.
This article is an investigation into one of the malicious files created by Higaisa. The file was discovered by security experts on March 11 while conducting another study on information security threats. The file is also compared with earlier files, and observed changes are noted and analyzed.
"/><meta name="viewport" content="width=device-width, initial-scale=1"/><link rel="icon" href="/images/favicons/favicon.ico" sizes="any"/><link rel="icon" href="/images/favicons/icon.svg" type="image/svg+xml"/><link rel="apple-touch-icon" href="/images/favicons/apple-touch-icon.png"/><meta name="next-head-count" content="7"/><script type="text/javascript">
                   
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();
    for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
    k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");
  
                   ym(93900442, "init", {
                       clickmap: true,
                       trackLinks: true,
                       accurateTrackBounce: true,
                       webvisor: true
                   });
             </script><noscript><div><img src="https://mc.yandex.ru/watch/93900442" style="position:absolute;left:-9999px" alt=""/></div></noscript><script id="mindbox-init">
    mindbox = window.mindbox || function() { mindbox.queue.push(arguments); };
    mindbox.queue = mindbox.queue || [];

    mindbox('create', {
        endpointId: 'ptsec.global',
    });
</script><script async="" src="https://api.mindbox.ru/scripts/v1/tracker.js"></script><script async="" src="https://cdn.cookielaw.org/scripttemplates/otSDKStub.js" type="text/javascript" data-domain-script="0191d674-840f-7931-a533-9567b38dbd10" data-document-language="true"></script><script type="text/javascript">function OptanonWrapper() { }</script><link rel="preload" href="/_next/static/css/acc47ecb7f28ca71.css" as="style"/><link rel="stylesheet" href="/_next/static/css/acc47ecb7f28ca71.css" data-n-g=""/><link rel="preload" href="/_next/static/css/b12d59401e55e599.css" as="style"/><link rel="stylesheet" href="/_next/static/css/b12d59401e55e599.css" data-n-p=""/><link rel="preload" href="/_next/static/css/4315b2ada75d79ce.css" as="style"/><link rel="stylesheet" href="/_next/static/css/4315b2ada75d79ce.css" data-n-p=""/><link rel="preload" href="/_next/static/css/e997fe3245b69611.css" as="style"/><link rel="stylesheet" href="/_next/static/css/e997fe3245b69611.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js"></script><script src="/_next/static/chunks/webpack-149a9840ee99759d.js" defer=""></script><script src="/_next/static/chunks/framework-ce84985cd166733a.js" defer=""></script><script src="/_next/static/chunks/main-2aa161cc193cdf0e.js" defer=""></script><script src="/_next/static/chunks/pages/_app-2784b74fa600b386.js" defer=""></script><script src="/_next/static/chunks/4b358913-e177b648ea0062d1.js" defer=""></script><script src="/_next/static/chunks/f10e284a-c46ff7024e963ef1.js" defer=""></script><script src="/_next/static/chunks/dff27125-edb64a536e668286.js" defer=""></script><script src="/_next/static/chunks/4322cd96-db9c9cbc97931387.js" defer=""></script><script src="/_next/static/chunks/5300-5d5240edfe5088d0.js" defer=""></script><script src="/_next/static/chunks/1954-12f2cdecebc8919e.js" defer=""></script><script src="/_next/static/chunks/676-2a191cf9e8fce8ff.js" defer=""></script><script src="/_next/static/chunks/2580-447bcccef7567d77.js" defer=""></script><script src="/_next/static/chunks/8407-f765b09e5f9d9e88.js" defer=""></script><script src="/_next/static/chunks/8973-5b086d43f68f9a0f.js" defer=""></script><script src="/_next/static/chunks/9381-02b165248d10c3a6.js" defer=""></script><script src="/_next/static/chunks/9966-46611a17ae99bd7e.js" defer=""></script><script src="/_next/static/chunks/4089-21267ff85ef1a1bd.js" defer=""></script><script src="/_next/static/chunks/4883-5e080e89aa97bea0.js" defer=""></script><script src="/_next/static/chunks/7675-b6078f31b8f7cdd7.js" defer=""></script><script src="/_next/static/chunks/4636-ba4ebbe439f00319.js" defer=""></script><script src="/_next/static/chunks/706-77eec08b70578726.js" defer=""></script><script src="/_next/static/chunks/pages/analytics/pt-esc-threat-intelligence/%5Bslug%5D-301146ceec0052df.js" defer=""></script><script src="/_next/static/fGk60SBlODknG4pBg3RpC/_buildManifest.js" defer=""></script><script src="/_next/static/fGk60SBlODknG4pBg3RpC/_ssgManifest.js" defer=""></script></head><body><div id="__next"><div><header class="Header_header__Hd6K0" id="nav-bar"><div><a class="Logo_logo__3fKo7" href="/"><img alt="" loading="lazy" decoding="async" data-nimg="fill" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;color:transparent" src="https://pt-global.storage.yandexcloud.net/logo_header_1bd424ccc4.svg"/></a></div><nav role="navigation" class="Nav_nav__kBEMb"><a class="NavItem_nav_item__awGsH" href="/"><div class="Text_base__riB2c Text_type_pM__mE14b"><span>Products</span></div></a><a class="NavItem_nav_item__awGsH" href="/services"><div class="Text_base__riB2c Text_type_pM__mE14b"><span>Services</span></div></a><a class="NavItem_nav_item__awGsH" href="/"><div class="Text_base__riB2c Text_type_pM__mE14b"><span>Education</span></div></a><a class="NavItem_nav_item__awGsH" href="/about/news"><div class="Text_base__riB2c Text_type_pM__mE14b"><span>News & events</span></div></a><a class="NavItem_nav_item__awGsH" href="/"><div class="Text_base__riB2c Text_type_pM__mE14b"><span>Analytics</span></div></a><a class="NavItem_nav_item__awGsH" href="/"><div class="Text_base__riB2c Text_type_pM__mE14b"><span>About us</span></div></a></nav><div class="Controls_list__PN_H7"><a class="Controls_locale__3CfMZ" href="https://www.ptsecurity.com/choose-region/?return_url=/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group"><img alt="locale" loading="lazy" width="16" height="16" decoding="async" data-nimg="1" style="color:transparent" src="/images/common/language.svg"/><div class="Text_base__riB2c Text_type_pM__mE14b"><span>English</span></div></a><button type="button" class="Button_button__tsTx6 Button_hasBorder__K5Pnv"><svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13 13L10.1 10.1M11.6667 6.33333C11.6667 9.27885 9.27885 11.6667 6.33333 11.6667C3.38781 11.6667 1 9.27885 1 6.33333C1 3.38781 3.38781 1 6.33333 1C9.27885 1 11.6667 3.38781 11.6667 6.33333Z" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path></svg></button></div></header><main id="main" class="PageLayout_main__LUbC0"><div class="ArticleHeader_banner__enm6f"><section class="PageSection_section__GxaaG ArticleHeader_section__sve5w ArticleHeader_withBottomBar__d_wKA"><div class="ArticleHeader_header___PnMn"><div class="ArticleHeader_headerInner__2bYRI"><h2 class="Heading_base__MUnbH Heading_level_2__qXMBH"><span>COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group</span></h2></div></div><div class="ArticleHeader_bottomBar__EgyS1"><div class="ArticleHeader_leftSide__gAaId"><div class="ArticleBageLink_container__n25zS"><div class="ArticleBageLink_icon__Z9k9v"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.312 12.1358L8 14.7438L3.688 12.1358C3.1848 11.8491 2.76468 11.4366 2.46878 10.9388C2.17288 10.441 2.01135 9.8748 2 9.29577L2 2.50377C2 2.50377 2.04 2.39977 2.16 2.35177L7.808 1.21577C7.93487 1.19175 8.06513 1.19175 8.192 1.21577L13.84 2.35177C13.96 2.35177 14 2.46377 14 2.50377L14 9.29577C13.9887 9.8748 13.8271 10.441 13.5312 10.9388C13.2353 11.4366 12.8152 11.8491 12.312 12.1358Z" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"></path><path d="M6.40039 7.1999L8.00039 8.7999L10.4004 6.3999" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"></path></svg></div><a href="/analytics/pt-esc-threat-intelligence"><div class="Text_base__riB2c Text_type_pS__4RXUf Text_theme_dark__type_pS__jWlgX"><span>PT EXPERT SECURITY CENTER</span></div></a></div><div class="ArticleDate_dark__bQPEn Text_base__riB2c Text_type_pS__4RXUf Text_theme_dark__type_pS__jWlgX"><span>3 JUNE 2020</span></div></div><div class="ArticleHeader_rightSide__zUGU_"><button type="button" class="ButtonShareLink_extraButton__6pf3i ArticleHeader_extraButton__zTZOf Button_button__F7Ulc Button_button_size_s___Bpb6 Button_button_theme_dark__iuu3A"><span>Share<img alt="share" loading="lazy" width="16" height="16" decoding="async" data-nimg="1" style="color:transparent" src="/_next/static/media/sharing.472b5ae7.svg"/></span></button></div></div></section></div><section class="PageSection_section__GxaaG Card_section__QzdVO"><div class="Card_contentWrapper__45uLa Card_mode_light__02f7V Card_zIndex_1__NP_2j"><div class="ArticleLayout_grid__ARjhp"><div class="ArticleLayout_leftColumn___AQb_"><div class="SidebarWidgets_root__EIInZ"><div class="SidebarWidget_root__2qKSt" data-theme="light"><span class="SidebarWidget_badge__tPniR" aria-hidden="true"></span><a href="/analytics"><h4 class="SidebarWidget_link__IFJJP Heading_base__MUnbH Heading_level_4__vTL_m Heading_theme_light__level_4__u4aOM"><span>Analytics articles</span></h4></a><ul class="SidebarWidget_articles__1tx0t"><li class="ArticlesWidget_article__5hn4y"><div class="ArticlesWidget_article_date__LAjT6 ArticleDate_light__n8s4o Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>22 October 2024</span></div><a target="_blank" href="/analytics/india-cyberthreat-landscape-q3-2023-q3-2024"><div class="ArticlesWidget_article_text__Bx4ya Text_base__riB2c Text_type_pM__mE14b Text_clamp_3__8DSUm Text_theme_light__type_pM__2zLmc"><span>India: cyberthreat landscape Q3 2023-Q3 2024</span></div></a></li><li class="ArticlesWidget_article__5hn4y"><div class="ArticlesWidget_article_date__LAjT6 ArticleDate_light__n8s4o Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>21 October 2024</span></div><a target="_blank" href="/analytics/trending-vulnerability-digest-september-2024"><div class="ArticlesWidget_article_text__Bx4ya Text_base__riB2c Text_type_pM__mE14b Text_clamp_3__8DSUm Text_theme_light__type_pM__2zLmc"><span>Trending vulnerability digest September 2024</span></div></a></li><li class="ArticlesWidget_article__5hn4y"><div class="ArticlesWidget_article_date__LAjT6 ArticleDate_light__n8s4o Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>17 October 2024</span></div><a target="_blank" href="/analytics/positive-research-2024"><div class="ArticlesWidget_article_text__Bx4ya Text_base__riB2c Text_type_pM__mE14b Text_clamp_3__8DSUm Text_theme_light__type_pM__2zLmc"><span>Positive Research 2024</span></div></a></li></ul></div><div class="AdBanner_banner__j5zzr"><img alt="" loading="lazy" decoding="async" data-nimg="fill" class="AdBanner_image__gI5SU" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;object-fit:cover;color:transparent" src="https://pt-global.storage.yandexcloud.net/PT_Network_Attack_Discovery_2x_0d8a5793c7.png"/><div class="AdBanner_detail__O_Wq5"><h4 class="Heading_base__MUnbH Heading_level_4__vTL_m Heading_theme_dark__level_4__5RqHy"><span>What are the security threats on your network?</span></h4><div class="Text_base__riB2c Text_type_pM__mE14b Text_theme_dark__type_pM__3GUPK"><span>Check your traffic-for free</span></div><a class="AdBanner_button___qTOt Button_button__F7Ulc Button_button_size_m__cmMD_ Button_button_theme_dark__iuu3A" href="/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group#contacts"><span><span>Request pilot</span></span><img alt="" loading="lazy" width="20" height="20" decoding="async" data-nimg="1" class="Button_arrow__ZXQXI" style="color:transparent" src="/_next/static/media/arrows-right.1fc87099.svg"/></a></div></div></div></div><div class="ArticleLayout_rightColumn__c8u4z"><div class="HtmlContent_content__ajDaE esiArticle_bitrixContent__PCSBe"><article>
<p>
In March 2020 specialists from the PT Expert Security Center conducted an analysis on the activities of the APT group Higaisa. This group was <a href="https://s.tencent.com/research/report/836.html" target="_blank">first studied</a> by security analysts at Tencent in November 2019. In that analysis, Tencent specialists reached the conclusion that Higaisa has its origins in South Korea. The group, which is still active today, can be tracked all the way back to 2009. According to the Tencent analysis, Higaisa&#x27;s main targets have been government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations.
</p>
<p>
Higaisa distributes messages containing real news and information on current events to initially spread their malware. They have also used messages containing seasonal greetings, which congratulate their recipients on holidays such as New Year, the Chinese Lantern Festival, and North Korean national holidays. In most cases the messages are written in English, implying that English-speaking countries could also be targets.
</p>
<p>
With the recent prevalence of the coronavirus (COVID-19) pandemic, many APT groups, including Gamaredon, SongXY, TA428, Lazarus, Konni, and Winnti, have been using the topic of COVID-19 in their email distributions. Higaisa is no exception.
</p>
<p>
This article is an investigation into one of the malicious files created by Higaisa. The file was discovered by security experts on March 11 while conducting another study on information security threats. The file is also compared with earlier files, and observed changes are noted and analyzed.
</p>
<h2>Object #1: File 20200308-sitrep-48-covid-19.pdf.lnk</h2>
 <figure> <img alt="Figure 1. PDF document containing a World Health Organization (WHO) report" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/01.png"/> <figcaption>Figure 1. PDF document containing a World Health Organization (WHO) report</figcaption> </figure>
<h3>Stage 1. Shortcut</h3>
<p>
The malware originates from a file called 20200308-sitrep-48-covid-19.pdf.lnk, which is concealed as a PDF file.
</p>
 <figure> <img alt="Figure 2. Contents of the LNK file" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/02.png"/> <figcaption>Figure 2. Contents of the LNK file</figcaption> </figure>
<p>
	 The file is a .lnk shortcut with the icon of a PDF document. When opened, the command <em>cmd.exe /c</em> is executed with the following command string (note: line breaks and spaces have been added for readability):
</p>
 <figure> <img alt="Figure 3. The command string executed by the shortcut" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/03.png"/> <figcaption>Figure 3. The command string executed by the shortcut</figcaption> </figure>
<p>
As a result, copies of the shortcut and a file called <em>C:\Windows\System32\CertUtil.exe</em> (under the name of <em>msoia.exe</em>) are placed into a temporary folder. Instead of directly using the name <em>CertUtil.exe</em>, the file mask <em>*ertu*.exe</em> and the <em>for</em> command are used to conduct search, bypassing filename signatures.
</p>
<p>
By launching <em>findstr.exe</em>, the Base64-encoded payload at the end of the LNK file is retrieved and then decoded using <em>CertUtil.exe</em> (<em>msioa.exe</em>).
</p>
<h3>Stage 2. Archive</h3>
<p>
	 The decoding results in a CAB archive, which is unpacked into the same <em>%tmp%</em> folder and contains the following files:
</p>
<ul>
	<li>3UDBUTNY7YstRc.tmp (DLL, used for autorun)</li>
	<li>9sOXN6Ltf0afe7.js (installation script)</li>
	<li>486AULMsOPmf6W.tmp (a legitimate executable file used for autorun)</li>
	<li>20200308-sitrep-48-covid-19.pdf (<a href="https://www.who.int/docs/default-source/coronaviruse/situation-reports/20200308-sitrep-48-covid-19.pdf" target="_blank">the original WHO report</a>, used as bait)</li>
	<li>cSi1r0uywDNvDu.tmp (XSL; contains part of the installation code written in VBScript)</li>
	<li>MiZl5xsDRylf0W.tmp (installer payload)</li>
</ul>
<p>
	 After the files have been retrieved, the malware moves to the next stage in the process of achieving persistence in the system, launching the file <em>9sOXN6Ltf0afe7.js</em>.
</p>
<h3>Stage 3. JS script. Part one.</h3>
<p>
	The script is written as one line:
</p>
 <figure> <img alt="Figure 4. A fragment of the code from 9sOXN6Ltf0afe7.js" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/04.png"/> <figcaption>Figure 4. A fragment of the code from 9sOXN6Ltf0afe7.js</figcaption> </figure>
<p>
	 In effect, the script executes the following console commands:
</p>
 <figure> <img alt="Figure 5. Console commands in 9sOXN6Ltf0afe7.js" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/05.png"/> <figcaption>Figure 5. Console commands in 9sOXN6Ltf0afe7.js</figcaption> </figure>
<p>
	 A folder with the name <em>cscript.exe</em> is created in the temporary folder called <em>%tmp%</em>. The original script interpreter, <em>cscript.exe</em>, is then copied into this folder with the name <em>msproof.exe</em>. An XSL file by the name of <em>WsmPty.xsl</em> is copied in as well. This is what the XSL file looks like:
</p>
 <figure> <img alt="Figure 6. A fragment of the code in WsmPty.xsl" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/06.png"/> <figcaption>Figure 6. A fragment of the code in WsmPty.xsl</figcaption> </figure>
<p>
	 A legitimate script, <em>%windir%\System32\winrm.vbs</em> (a console tool for work with the Windows Remote Management API), is launched using the interpreter. It is then passed the command <em>get wmicimv2/Win32_Process?Handle=4</em> and the output format: <em>format:pretty</em>.
</p>
<p>
	 When this format is specified, <em>winrm.vbs</em> is pulled from the directory where the interpreter <em>cscript.exe</em> and the file <em>WsmPty.xsl</em> are located. <em>winrm.vbs</em> is used to format the command output (regardless of whether it was successfully executed). This will then run the VBScript code embedded in the file.
</p>
<p>
	 This method, <a href="https://posts.specterops.io/application-whitelisting-bypass-and-arbitrary-unsigned-code-execution-technique-in-winrm-vbs-c8c24fb40404" target="_blank">described</a> by Matt Graeber in 2018, bypasses application whitelisting restrictions to run unauthorized code. There is one essential condition for <em>winrm.vbs</em> to work—the string <em>cscript.exe</em> must be present in the path to the interpreter. This is why the folder that it is copied into is created with this particular name.
</p>
<h3>Stage 4. XSL</h3>
<p>
	 The VBScript code that is launched contains a hex string and code that are responsible for decoding and executing the file. Here you can see the code with all hex strings converted into bytes and deobfuscated variable names:
</p>
 <figure> <img alt="Figure 7. Deobfuscated VBScript code" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/07.png"/> <figcaption>Figure 7. Deobfuscated VBScript code</figcaption> </figure>
<p>
	 Essentially, what the code does is create a file called OFFICE12 in the user profile, as well as a shortcut called <em>Accessories.lnk</em> in the startup directory. The shortcut does not directly launch the payload, instead using the function <em>FileProtocolHandler</em> from the <em>url.dll</em> library:
</p>
<pre><div class="code">C:\Windows\System32\rundll32.exe C:\Windows\system32\url.dll,FileProtocolHandler %UserProfile%\OFFICE12\MSOStyle.exe</div></pre>
<p>
</p>
<p>
	 Additionally, a file called <em>2m7EBxdH3wHwBO.tmp</em> is created in <em>%tmp%</em> via the function Write4D5A90. This file contains three bytes from the beginning of an EXE file: 0x4D, 0x5A, 0x90.
</p>
<h3>Stage 3. JS script. Continuation</h3>
<p>
	 Once the VBScript in XSL has been run, console commands launched by the JS code continue to be executed. Three files are copied into the folder OFFICE12 that was created in the user profile. Those files are:
</p>
<ul>
	<li>MSOSTYLE.EXE</li>
	<li>OINFO12.OCX</li>
	<li>Wordcnvpxy.exe</li>
</ul>
<p>
	The last file, which is the payload, is built from the three-byte introductory string created by VBScript and from <em>MiZl5xsDRylf0W.tmp</em>, which was unpacked earlier. The result is a valid .exe file.
</p>
<p>
	 MSOSTYLE.EXE is a legitimate file from the Microsoft Office 2007 package. It is responsible for sideloading the dynamic link library OINFO12.OCX.
</p>
<p>
	 OINFO12.OCX contains the code for executing the final payload:
</p>
 <figure> <img alt="Figure 8. Launching Wordcnvpxy.exe in DllMain" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/08.png"/> <figcaption>Figure 8. Launching Wordcnvpxy.exe in DllMain</figcaption> </figure>
<p>
	 It also contains code in exported functions that is not actually run (we suspect that this is part of an attempt to avoid detection in sandbox environments):
</p>
 <figure> <img alt="Figure 9. The code of GetOfficeData()" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/09.png"/> <figcaption>Figure 9. The code of GetOfficeData()</figcaption> </figure> <figure> <img alt="Figure 10. The code of DeleteOfficeData()" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/10.png"/> <figcaption>Figure 10. The code of DeleteOfficeData()</figcaption> </figure>
<p>
	 The last step in the script is to open the PDF file that was used as bait.
</p>
<h3>Wordcnvpxy.exe downloader</h3>
<p>
</p>
<p>
	 The payload is an application that creates a hidden window (the name of the class and the window is SK_Parasite).
</p>
 <figure> <img alt="Figure 11. Window creation and event processing loop in Wordcnvpxy.exe" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/11.png"/> <figcaption>Figure 11. Window creation and event processing loop in Wordcnvpxy.exe</figcaption> </figure>
<p>
	 Essential functions are loaded dynamically. Base64 with the following non-standard alphabet is used to decode library names: <em>z2bqw7k90rJYALIQUxZK%sO=hd5C4piVMFlaRucWy31GTNH-mED8fnXtPvSojeB6g</em>. Instead of using function names, their hashes are used, using <a href="http://www.azillionmonkeys.com/qed/hash.html" target="_blank">SuperFastHash</a> algorithm.
</p>
 <figure> <img alt="Figure 12. Dynamically loaded libraries" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/12.png"/> <figcaption>Figure 12. Dynamically loaded libraries</figcaption> </figure>
<p>
	The main code is run in a separate thread: every 10 minutes, the application contacts the C&amp;C server <em>motivation[.]neighboring[.]site</em> and passes it the computer&#x27;s identifier in the User-Agent string. The identifier is a SuperFastHash of the system volume serial number and the name of the computer.
</p>
 <figure> <img alt="Figure 13. Main downloader cycle" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/13.png"/> <figcaption>Figure 13. Main downloader cycle</figcaption> </figure>
<p>
	 The response from the server is saved into a temporary file. If the response contains at least 10 bytes, it is decoded from Base64 and divided into two segments separated by the symbol $. The first segment contains the RC4-encoded executable file, and the second contains its filename without an extension.
</p>
 <figure> <img alt="Figure 14. Processing the server response" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/14.png"/> <figcaption>Figure 14. Processing the server response</figcaption> </figure>
<p>
	 The method used to construct a key for decoding the RC4 encryption is interesting. It is generated via a recurrent sequence that begins with two numbers (28 and 39), and every subsequent number equals the sum of the previous two, mod 255. The key consists of 64 bytes and begins with the first sum in the sequence. The key is later expanded to 256 bytes (by looping) and is used in the standard RC4 algorithm.
</p>
 <figure> <img alt="Figure 15. Generation of the RC4 key in Wordcnvpxy.exe" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/15.png"/> <figcaption>Figure 15. Generation of the RC4 key in Wordcnvpxy.exe</figcaption> </figure>
<p>
	 The executable file received from the server is saved in <em>%TEMP%</em> with the specified name and is then launched.
</p>
<h2>Object #2: 邀请函.doc (Invitation card.doc)</h2>
<p>
	 This is an RTF file containing a congratulatory statement:
</p>
 <figure> <img alt="Figure 16. Document with holiday greetings" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/16.png"/> <figcaption>Figure 16. Document with holiday greetings</figcaption> </figure>
<p>
The document was created using the popular builder &#x27;Royal Road RTF&#x27; (also known as 8.t), which exploits the CVE-2018-0798 vulnerability in Microsoft Equation Editor. This builder is not publicly accessible, but <a href="https://malpedia.caad.fkie.fraunhofer.de/details/win.8t_dropper" target="_blank">is widely used</a> by Chinese APT groups, including TA428, Goblin Panda, IceFog, and <a href="https://www.ptsecurity.com/ww-en/analytics/cybersecurity-threatscape-q4-2017/" target="_blank">SongXY</a>. The name &#x27;8.t&#x27; originates from the fact that the malware creates a file called 8.t containing the encoded payload in a temporary folder.
</p>
<p>
	 Exploitation results in the creation of a file called <em>%APPDATA%\microsoft\word\startup\intel.wll</em>. This file is a DLL dropper, which is loaded the next time Microsoft Word is launched. Its payload consists of two files: <em>%ALLUSERSPROFILE%\TotalSecurity\360ShellPro.exe</em> and <em>%ALLUSERSPROFILE \TotalSecurity\utils\FileSmasher.exe</em>. The files are encoded using <em>xor 0x1A</em>.
</p>
 <figure> <img alt="Figure 17. The main function in the intel.wll dropper (fragment)" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/17.png"/> <figcaption>Figure 17. The main function in the intel.wll dropper (fragment)</figcaption> </figure>
<p>
	The dropper achieves persistence in the system by creating a shortcut in the startup directory that launches <em>%ALLUSERSPROFILE%\TotalSecurity\360ShellPro.exe</em> with key <em>/func=5</em>. This file is a modified component of the antivirus tool <a href="https://www.360totalsecurity.com/en/" target="_blank">360 Total Security</a>, and is used to transfer control to the downloader <em>FileSmasher.exe</em> via a method similar to DLL side-loading.
</p>
<p>
	 The legitimate <em>360ShellPro.exe</em> file contains a number of relative paths to the executable file. The correct file is selected and launched depending on the value of the argument <em>/func=</em>.
</p>
 <figure> <img alt="Figure 18. File selection based on the func parameter" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/18.png"/> <figcaption>Figure 18. File selection based on the func parameter</figcaption> </figure>
<h3>FileSmasher.exe downloader</h3>
<p>
	 In many ways, <em>FileSmasher.exe</em> resembles <em>Wordcnvpxy.exe</em>. It is also a windowed application (class name: NIS_K). However, in this case, the relevant code is launched using a 10-minute timer, not a separate thread.
</p>
 <figure> <img alt="Figure 19. Window creation, timer set-up, and event processing loop in FileSmasher.exe" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/19.png"/> <figcaption>Figure 19. Window creation, timer set-up, and event processing loop in FileSmasher.exe</figcaption> </figure>
<p>
	 Dynamic DLL loading is not used (all imports are static) and the address of the C&amp;C server is restored using a similar RC4 decoding function (instead of decoding from Base64 with a nonstandard alphabet). However, the initial elements in the series used to generate the key have different values (8 and 5), and the generative algorithm is fully repeated.
</p>
 <figure> <img alt="Figure 20. RC4 key generation in FileSmasher.exe" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/20.png"/> <figcaption>Figure 20. RC4 key generation in FileSmasher.exe</figcaption> </figure>
<p>
	 The CRC32 from the system volume serial number is used as an infected machine identifier. It is passed explicitly as a GET parameter. The following is the full address that the downloader uses to access the server: <em>http://walker[.]shopbopstar[.]top/blog/index.php?ei={32 random chars}&amp;ti={volume serial CRC32}</em>
</p>
<p>
</p>
 <figure> <img alt="Figure 21. Construction of a URL to access the monitoring server, from FileSmasher.exe" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/21.png"/> <figcaption>Figure 21. Construction of a URL to access the monitoring server, from FileSmasher.exe</figcaption> </figure>
<p>
	 The loading algorithm is practically identical:
</p>
<ul>
	<li>The server response is saved in a temporary file and is processed only if it contains at least 10 bytes.</li>
	<li>In contrast to <em>Wordcnvpxy.exe</em>, there is no Base64 decoding.</li>
	<li>The response is divided into two parts using an ampersand (&amp;) instead of a dollar sign ($).</li>
	<li>The first segment is also an executable file encrypted with RC4, and the second part is its name without an extension.</li>
	<li>The file is decoded using the same function that is responsible for decoding the address (the RC4 key parameters are 8 and 5).</li>
</ul>
<p>
	The loaded file is launched using <em>CreateProcess</em>. 
</p>
<p>
	 It is worth noting that the resource files for <em>Wordcnvpxy.exe</em> and <em>FileSmasher.exe</em> include a dialogue window, &quot;About,&quot; containing the application&#x27;s name and copyright information.
</p>
 <figure> <img alt="Figure 22. The " loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/22.png"/> <figcaption>Figure 22. The &quot;About&quot; dialogue window from the resources included in FileSmasher.exe</figcaption> </figure>
<p>
	 This window as well as other resources (Menu, Accelerators) are generated by Visual Studio when the project is created. In the case of Wordcnvpxy.exe, the application name indicated in the dialogue window matches the name of the window&#x27;s class (SK_Parasite). However, this is not the case for FileSmasher.exe. Here, the application is called AttackBot, and in its case we see the abbreviation NIS, which we saw earlier in the name of the window class (NIS_K).
</p>
<p>
	 Experts at Tencent drew a connection between Higaisa and the Republic of Korea and identified its main targets as North Korean government and trade organizations. This suggests that NIS could stand for National Intelligence Service (<a href="https://en.wikipedia.org/wiki/National_Intelligence_Service_(South_Korea)" target="_blank">The National Intelligence Service of the Republic of Korea</a>). SK_Parasite could be a reference to the South Korean film <a href="https://en.wikipedia.org/wiki/Parasite_(2019_film)" target="_blank">Parasite</a> (released in 2019). Alone, these data are insufficient to draw firm conclusions; however, they can be seen as circumstantial evidence for a connection with South Korea.
</p>
<h3>Related objects</h3>
<p>
	The contents of the initial document (New Year greetings) and the date the file was created (22.12.2019) specify the period during which it was used. However, it is not the only object of its kind. Analysts at Tencent <a href="https://s.tencent.com/research/report/895.html" target="_blank">identified</a> another distribution of malicious files during the same period. In that case the filenames were <em>Happy-new-year-2020.scr</em> and <em>2020-New-Year-Wishes-For-You.scr</em>. These files are executable and use a congratulatory JPG file as bait. The image is dropped from an executable file and opened in the default viewer.
</p>
 <figure> <img alt="Figure 23. The image contained in Happy-new-year-2020.scr" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/23.png"/> <figcaption>Figure 23. The image contained in Happy-new-year-2020.scr</figcaption> </figure> <figure> <img alt="Figure 24. The image contained in 2020-New-Year-Wishes-For-You.scr" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/24.png"/> <figcaption>Figure 24. The image contained in 2020-New-Year-Wishes-For-You.scr</figcaption> </figure>
<p>
	 Other than the exploitation of the CVE-2018-0798 vulnerability, the structure of these threats is effectively identical to the RTF document. SCR files are droppers whose payload is decrypted using <em>xor 0x1A</em> and unpacked into the subdirectory of <em>%ALLUSERSPROFILE%</em>.
</p>
 <figure> <img alt="Figure 25. The main function in 2020-New-Year-Wishes-For-You.scr dropper (fragment)" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/25.png"/> <figcaption>Figure 25. The main function in 2020-New-Year-Wishes-For-You.scr dropper (fragment)</figcaption> </figure>
<p>
	 The payload consists of a legitimate executable file (<em>rekeywiz.exe</em> from Windows 7 is used) and the DLL downloader <em>Duser.dll</em>. The legitimate file is added to startup using a shortcut.
</p>
<p>
	 The downloader decrypts the URL using RC4 (the initial values are 8, 5 and 9, 5) and adds a random string and the CRC32 computer identifier into the GET parameter.
</p>
 <figure> <img alt="Figure 26. Construction of a URL to access the control server, from Duser.dll (2020-New-Year-Wishes-For-You.scr dropper)" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/26.png"/> <figcaption>Figure 26. Construction of a URL to access the control server, from Duser.dll (2020-New-Year-Wishes-For-You.scr dropper)</figcaption> </figure>
<p>
	 The downloader instance unpacked from <em>2020-New-Year-Wishes-For-You.scr</em> to establish a connection with the C&amp;C server uses a statically linked libcurl library. The other instance uses statically imported functions from the <em>winhttp.dll</em> library, just like <em>FileSmasher.exe</em>.
</p>
<p>
	 The server is accessed at the following addresses: <em>http://adobeinfo[.]shopbopstar[.]top/notice/index.php</em> and <em>http://petuity[.]shopbopstar[.]top/research/index.php</em>.
</p>
<p>
	 In both cases data is received from the server in the same format as in <em>FileSmasher.exe</em>.
</p>
<p>
	 Regardless of the fact that neither of the droppers that we have described actually create any windows, they do contain a standard set of window resources, including the &quot;About&quot; dialogue window. The strings &quot;K_NIS&quot; and &quot;KISA&quot; are used as application names.
</p>
<h2>C&amp;C server responses</h2>
<p>
	 Two types of components were used as the payloads distributed by the C&amp;C server:
</p>
<ul>
	<li>The system information collector (InfoStealer), which essentially provides the function of running the console command <em>systeminfo &amp; ipconfig -all &amp; tasklist &amp; net view &amp; dir c:\ &amp; dir c:\users\ &amp; dir d:\ &amp; dir e:\</em> and relays the response to the command server.</li>
	<li>Gh0st RAT in a variety of modified forms, particularly with all essential functionality implemented in DLL plug-ins loaded from the C&amp;C server.</li>
</ul>
<p>
	 These instances of Gh0st RAT are interesting when compared with the publicly accessible source code, as they implement a non-standard encryption of incoming and outgoing data. In packets containing less than 10 payload bytes (not including the header), the first 10 bytes are processed with a 0x12 xor key. The bytes 0x0 and 0x12 are left unchanged. Data are compressed with LZO instead of zlib.
</p>
 <figure> <img alt="Figure 27. Decompiled code of the function CClientSocket::OnRead" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/27.png"/> <figcaption>Figure 27. Decompiled code of the function CClientSocket::OnRead</figcaption> </figure>
<p>
	In addition, the <em>m_bPacketFlag</em> field (the signature of packets sent to the command sever) is initialized with a pseudorandom value calculated using the value returned from calling <em>GetTickCount()</em>. In the original code, the field is equal to <em>Gh0st</em>. 
</p>
 <figure> <img alt="Figure 28. Initialization of the field CClientSocket::m_bPacketFlag" loading="lazy" width="0" height="0" decoding="async" data-nimg="1" class="HtmlContent_image-next__g1zfK" style="color:transparent" src="https://www.ptsecurity.com/upload/corporate/ww-en/images/esc/higaisa/28.png"/> <figcaption>Figure 28. Initialization of the field CClientSocket::m_bPacketFlag</figcaption> </figure>
<h2>Conclusion</h2>
<p>
	 The results of our study demonstrate how the malicious objects used by the Higaisa group have evolved over time. Beginning with a simple distribution of executable files, they shifted towards utilizing exploits and complex multi-stage threats. However, the structure of their tools (such as droppers and downloaders) remained largely unchanged. To deter detection, the attackers modified details such as the control server URL, RC4 key parameters, the legitimate files used for DLL side-loading, and the libraries used for HTTP interaction.
</p>
<p>
 <b>Author:</b> Alexey Zakharov, Positive Technologies
</p>
<h2>IOCs</h2>
<div class="table-container">
	<table class="table-article">
	<thead>
	<tr>
		<th>
			 Filename
		</th>
		<th>
			 MD5
		</th>
		<th>
			 SHA-1
		</th>
		<th>
			 SHA-256
		</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td>
			 20200308-sitrep-48-covid-19.pdf.lnk
		</td>
		<td>
			 21a51a834372ab11fba72fb865d6830e
		</td>
		<td>
			 9ceb6e0e4ad0a2c03751d0563a82a79ebb94ec95
		</td>
		<td>
			 95489af84596a21b6fcca078ed10746a32e974a84d0daed28cc56e77c38cc5a8
		</td>
	</tr>
	<tr>
		<td>
			 oGhPGUDC03tURV.tmp
		</td>
		<td>
			 37f78b1ad43959a788162f560bdc9c79
		</td>
		<td>
			 992d530d4bb35fb8dbdfb690740ead6e0fa974ec
		</td>
		<td>
			 f74199f59533fbbe57f0b2aae45c837b3ed5e4f5184e74c02e06c12c6535f0f9
		</td>
	</tr>
	<tr>
		<td>
			 OINFO12.OCX
		</td>
		<td>
			 83d04f21515c7e6316f9cd0bb393a118
		</td>
		<td>
			 e00b982a14835dae781bbbe06055d7d18acc6eb0
		</td>
		<td>
			 a49133ed68bebb66412d3eb5d2b84ee71c393627906f574a29247d8699f1f38e
		</td>
	</tr>
	<tr>
		<td>
			 9sOXN6Ltf0afe7.js
		</td>
		<td>
			 4f8ff5e70647dbc5d91326346c393729
		</td>
		<td>
			 2fd4eb78e53af6a5b210943ca8f0e521bb567afb
		</td>
		<td>
			 70b8397f87e4a0d235d41b00a980a8be9743691318d30293f7aa6044284ffc9c
		</td>
	</tr>
	<tr>
		<td>
			 MSOSTYLE.EXE
		</td>
		<td>
			 371e896d818784934bd1456296b99cbe
		</td>
		<td>
			 88f23b0913ef5f94cd888605504e1e54c3a6e48f
		</td>
		<td>
			 604679789c46a01aa320eb1390da98b92721b7144e57ef63853c3c8f6d7ea85d
		</td>
	</tr>
	<tr>
		<td>
			 20200308-sitrep-48-covid-19.pdf
		</td>
		<td>
			 faf5ef01f4a9bf2aba7ede67dcc5a2d4
		</td>
		<td>
			 4e0c1a05360c6bebf903a708acf6792b13f43870
		</td>
		<td>
			 2dd886cc041ea6e5e80880ccbbc54be42079598acf0c1e7e459616c3f9c0dd34
		</td>
	</tr>
	<tr>
		<td>
			 cSi1r0uywDNvDu.tmp
		</td>
		<td>
			 eefeb76d26338e09958aae5d81479178
		</td>
		<td>
			 c400e10a8f2b5b62f919033e2db0a1f99b1a3c38
		</td>
		<td>
			 9d52d8f10673518cb9f19153ddbe362acc7ca885974a217a52d1ee8257f22cfc
		</td>
	</tr>
	<tr>
		<td>
			 MiZl5xsDRylf0W.tmp
		</td>
		<td>
			 c1d8966fa1bd7aee41b2c4ad731407d3
		</td>
		<td>
			 6e7e3277801669f3053bf364ae6be89f00017c89
		</td>
		<td>
			 b578a237587054f351f71bd41bede49197f77a1409176f839ebde105f3aee44c
		</td>
	</tr>
	<tr>
		<td>
			 Wordcnvpxy.exe
		</td>
		<td>
			 fd648c3b7495abbe86b850587e2e5431
		</td>
		<td>
			 d0e0d641f3a063fb02c7f862ea8586312af5fa2e
		</td>
		<td>
			 002c9e0578a8b76f626e59b755a8aac18b5d048f1cc76e2c12f68bc3dd18b124
		</td>
	</tr>
	</tbody>
	</table>
</div>
<div class="table-container">
	<table class="table-article">
	<thead>
	<tr>
		<th>
			 Filename
		</th>
		<th>
			 MD5
		</th>
		<th>
			 SHA-1
		</th>
		<th>
			 SHA-256
		</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td>
			 邀请函.doc
		</td>
		<td>
			 2123bf482c9c80cb1896ff9288ad7d60
		</td>
		<td>
			 ea02db9b92cbf1d243b502d130aa2dd6c98637d2
		</td>
		<td>
			 500b6037ddb5efff0dd91f75b22ccce5b04d996c459d83d1f07fae8780b24e09
		</td>
	</tr>
	<tr>
		<td>
			 intel.wll
		</td>
		<td>
			 59a55c7bbc0ee488ec9e2cf50b792a56
		</td>
		<td>
			 a29ce0331015f2a3e87fd7fe1ce9dae228808b59
		</td>
		<td>
			 1b978324df504451c2a3430e32dc577742e2ac93b2602d68d771d89be4199a58
		</td>
	</tr>
	<tr>
		<td>
			 360ShellPro.exe
		</td>
		<td>
			 d5e42cc18906f09d5bab62df45b5fcf6
		</td>
		<td>
			 46833928f75db90220451e026997d039730906fa
		</td>
		<td>
			 1acd3cbc83dd4153f07b869b3142594aa9e77df33aa5319312439ecf7f606152
		</td>
	</tr>
	<tr>
		<td>
			 FileSmasher.exe
		</td>
		<td>
			 ea628fef3b547a1476d915963415e64c
		</td>
		<td>
			 07dbfaa430a201ce81f5079dd1e48379fac27177
		</td>
		<td>
			 f2c60274e625bcb051909797b35095dc5f37fae155cfdd96287c4ac112664a65
		</td>
	</tr>
	</tbody>
	</table>
</div>
<br/>
<p>
	 motivation[.]neighboring[.]site
</p>
<p>
	 walker[.]shopbopstar[.]top
</p>
 </article></div><div class="ShareBlock_container__5nb7z"><div class="Text_base__riB2c Text_type_pM__mE14b Text_theme_light__type_pM__2zLmc"><span>Share this article</span><span>:</span></div><div class="ShareBlock_icons__vIJLT"><button type="button" class="Social_icon__pVcgR"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none"><path stroke="currentColor" d="M8.39 10.805a4.024 4.024 0 0 0 4.628 1.36 4.023 4.023 0 0 0 1.44-.925l2.413-2.416A4.029 4.029 0 0 0 14.012 2a4.02 4.02 0 0 0-2.83 1.13L9.8 4.507m1.81 4.688a4.024 4.024 0 0 0-4.627-1.36 4.022 4.022 0 0 0-1.44.925L3.13 11.176A4.029 4.029 0 0 0 5.988 18a4.02 4.02 0 0 0 2.83-1.13l1.375-1.377"></path></svg></button></div></div></div></div></div></section><section class="PageSection_section__GxaaG Card_section__QzdVO" id="contacts"><div class="Card_contentWrapper__45uLa Card_mode_light__02f7V Card_zIndex_1__NP_2j AnyQuestions_container__KVhzR"><div class="AnyQuestions_heading__pSibU"><h1 class="AnyQuestions_title__ScrF1 Heading_base__MUnbH Heading_level_1__oOibP Heading_theme_light__level_1__7KeY7"><span>Get in touch</span></h1><div class="Text_base__riB2c Text_type_pL__A_h0d Text_theme_light__type_pL___Cab8"><span>Fill in the form and our specialists<br> will contact you shortly</span></div></div><div class="AnyQuestions_content__rdK_e"><div class="CardsSlider_root__4cbz_ AnyQuestions_radioGroupWrapper__WrSuy"><div class="CardsSlider_scrollArea__LArfW AnyQuestions_radioGroup__DBJB4"><label style="--cards-count:3" data-testid="form-tab-feedback" class="CardRadio_mode_light__Fnmg8 CardRadio_container__9oMVF CardRadio_checked__7uYOJ AnyQuestions_cardLayout__p5bqj"><input name="type" type="radio" checked="" value="feedback"/><div class="CardRadio_title__SlAzv Text_base__riB2c Text_type_postscript__I0CC_ Text_theme_light__type_postscript__JvgMb"><span>General<br> questions</span></div><div class="CardRadio_description__rzM_f Text_base__riB2c Text_type_pM__mE14b Text_theme_light__type_pM__2zLmc"><span>We're happy to answer any questions you may have.</span></div></label><label style="--cards-count:3" data-testid="form-tab-partnership" class="CardRadio_mode_light__Fnmg8 CardRadio_container__9oMVF AnyQuestions_cardLayout__p5bqj"><input name="type" type="radio" value="partnership"/><div class="CardRadio_title__SlAzv Text_base__riB2c Text_type_postscript__I0CC_ Text_theme_light__type_postscript__JvgMb"><span>Partnership</span></div><div class="CardRadio_description__rzM_f Text_base__riB2c Text_type_pM__mE14b Text_theme_light__type_pM__2zLmc"><span>Join us in making the world a safer place.</span></div></label><label style="--cards-count:3" data-testid="form-tab-pilotApplication" class="CardRadio_mode_light__Fnmg8 CardRadio_container__9oMVF AnyQuestions_cardLayout__p5bqj"><input name="type" type="radio" value="pilotApplication"/><div class="CardRadio_title__SlAzv Text_base__riB2c Text_type_postscript__I0CC_ Text_theme_light__type_postscript__JvgMb"><span>Pilot<br> application</span></div><div class="CardRadio_description__rzM_f Text_base__riB2c Text_type_pM__mE14b Text_theme_light__type_pM__2zLmc"><span>Test drive our solutions with a customized pilot program.</span></div></label></div></div><form><div class="FeedbackForm_fields__NxBGh"><div class="FeedbackForm_field__GSf0c FeedbackForm_fullWidth__SPrCb"><label class="Input_container__CtV41 Input_mode_light__DDarT"><input class="Input_input__dAKAo" placeholder="Name" type="text" autoComplete="name" maxLength="250" name="fullName" value=""/></label></div><div class="FeedbackForm_field__GSf0c"><label class="Input_container__CtV41 Input_mode_light__DDarT"><input class="Input_input__dAKAo" placeholder="Phone number" type="text" autoComplete="tel" maxLength="20" name="phone" value=""/></label></div><div class="FeedbackForm_field__GSf0c"><label class="Input_container__CtV41 Input_mode_light__DDarT"><input class="Input_input__dAKAo" placeholder="Email" type="text" autoComplete="email" maxLength="250" name="email" value=""/></label></div><div class="FeedbackForm_field__GSf0c FeedbackForm_fullWidth__SPrCb"><div class="Autocomplete_root__of0uL Select_root__qV3jk Select_mode_light__6i67a"><div class="Select_select__Wgg4m"><div class="SearchField_container__r8UBy"><input placeholder="Country" class="Input_input__dAKAo SearchField_input__OhP5T" id="headlessui-combobox-input-:R1d8qkf6:" role="combobox" type="text" aria-expanded="false" aria-autocomplete="list" data-headlessui-state=""/><button class="SearchField_icon__n277G SearchField_icon_second__tgr0q SearchField_icon_action__K_KOk" id="headlessui-combobox-button-:R2d8qkf6:" type="button" tabindex="-1" aria-haspopup="listbox" aria-expanded="false" data-headlessui-state=""></button><button class="SearchField_icon__n277G SearchField_icon_grey__v_ngf" id="headlessui-combobox-button-:R3d8qkf6:" type="button" tabindex="-1" aria-haspopup="listbox" aria-expanded="false" data-headlessui-state=""><svg width="17" height="16" viewBox="0 0 17 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10.7645 11.4123C12.0858 10.3117 12.9268 8.65406 12.9268 6.79999C12.9268 3.48628 10.2405 0.799988 6.92676 0.799988C3.61305 0.799988 0.926758 3.48628 0.926758 6.79999C0.926758 10.1137 3.61305 12.8 6.92676 12.8C8.3864 12.8 9.7243 12.2788 10.7645 11.4123ZM10.7645 11.4123L14.5522 15.2" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path></svg></button></div></div></div></div><div class="FeedbackForm_field__GSf0c FeedbackForm_fullWidth__SPrCb"><label class="Textarea_container__HPtza Textarea_mode_light__E0Y92"><textarea id="comment" class="Textarea_textarea__MapxB" placeholder="How can we help?" maxLength="1000" name="comment"></textarea></label></div></div><div class="FeedbackForm_agrees__062n_"><label class="InputCheckbox_mode_light__1Ed_W"><input class="InputCheckbox_input__x9X51" type="checkbox" name="consentsTerms" value="false"/><div class="InputCheckbox_checkboxLabel__hXRgu Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>I give <a data-sanitize-target="_blank" href="https://global.ptsecurity.com/policies/consent" target="_blank">my&nbsp;consent to&nbsp;the processing of&nbsp;my&nbsp;personal data</a> in&nbsp;accordance with the terms of&nbsp;the <a data-sanitize-target="_blank" href="https://global.ptsecurity.com/policies/privacy-policy" target="_blank">Privacy Notice</a></span></div></label><label class="InputCheckbox_mode_light__1Ed_W"><input class="InputCheckbox_input__x9X51" type="checkbox" name="subscription" value="false"/><div class="InputCheckbox_checkboxLabel__hXRgu Text_base__riB2c Text_type_pS__4RXUf Text_theme_light__type_pS__eERKe"><span>I&nbsp;give <a data-sanitize-target="_blank" href="https://global.ptsecurity.com/policies/consent-email" target="_blank">my&nbsp;consent to&nbsp;receive marketing and&nbsp;informational messages</a></span></div></label></div><div><div class="smart-captcha"></div><button type="submit" class="Button_button__F7Ulc Button_button_size_m__cmMD_ Button_button_theme_light__W9pGX"><span><span>SEND</span></span><img alt="" loading="lazy" width="20" height="20" decoding="async" data-nimg="1" class="Button_arrow__ZXQXI" style="color:transparent" src="/_next/static/media/arrows-right.1fc87099.svg"/></button></div></form></div></div></section><footer class="Footer_wrapper__igPy4"><div class="Footer_info__BLmy7"><div class="Footer_head__3m28S"><div class="Footer_copyright__JcWnj Text_base__riB2c Text_type_pM__mE14b"><span>Copyright <mark>©</mark> 2002–2024 Positive Technologies. All rights reserved.</span></div><h2 class="Footer_heading__mQ6QG Heading_base__MUnbH Heading_level_2__qXMBH"><span>Cybersecurity market leader</span></h2><div class="Footer_additionalLinks__KyguX"><a class="Footer_additionalLink__5ONRT" target="_blank" href="https://global.ptsecurity.com/policies/terms-of-use">Legal documents</a><a class="Footer_additionalLink__5ONRT" href="https://www.ptsecurity.com/choose-region/?return_url=/analytics/pt-esc-threat-intelligence/covid-19-and-new-year-greetings-the-higaisa-group">Change region</a></div></div><nav class="Footer_nav__LBYFW"><div class="Footer_nav_col__lYnPU"><div class="NavBlock_title__7sNY5 Text_base__riB2c Text_type_pL__A_h0d"><span>Products</span></div><a class="NavBlock_list_item__wGeXz" href="/products/network-attack-discovery"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT NAD</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/sandbox"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Sandbox</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/maxpatrol-vm"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>MaxPatrol VM</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/siem"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>MaxPatrol SIEM</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/ai"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT AI</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/blackbox"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT BlackBox</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/isim"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT ISIM</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/mp-o2"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>MaxPatrol O2</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/edr"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>MaxPatrol EDR</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/pt-af"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Application Firewall</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/cs"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Container Security</span></div></a><a class="NavBlock_list_item__wGeXz" href="/products/ics"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT Industrial Cybersecurity Suite</span></div></a></div><div class="Footer_nav_col__lYnPU"><div class="NavBlock_title__7sNY5 Text_base__riB2c Text_type_pL__A_h0d"><span>ANALYTICS</span></div><a class="NavBlock_list_item__wGeXz" href="/analytics"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Analytics articles</span></div></a><a class="NavBlock_list_item__wGeXz" href="/analytics/knowledge-base"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Knowledge base</span></div></a><a class="NavBlock_list_item__wGeXz" href="/analytics/pt-esc-threat-intelligence"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT ESC threat intelligence</span></div></a><a class="NavBlock_list_item__wGeXz" href="/analytics/threatscape"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Threatscape</span></div></a><a class="NavBlock_list_item__wGeXz" href="/analytics/hacker-groups"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Hacker groups</span></div></a></div><div class="Footer_nav_col__lYnPU"><div class="NavBlock_title__7sNY5 Text_base__riB2c Text_type_pL__A_h0d"><span>COMPANY</span></div><a class="NavBlock_list_item__wGeXz" href="/about"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>About us</span></div></a><a class="NavBlock_list_item__wGeXz" href="/about/clients"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Clients</span></div></a><a class="NavBlock_list_item__wGeXz" href="/about/contacts"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Contacts</span></div></a><a class="NavBlock_list_item__wGeXz" href="/about/pt-in-the-media"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>PT in the Media</span></div></a><a href="https://edu.ptsecurity.com/learning-space" target="_blank" class="NavBlock_list_item__wGeXz"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Education</span></div></a><a href="https://www.youtube.com/channel/UC9hnMfdwfLd8V5qEc-6MXXQ" target="_blank" class="NavBlock_list_item__wGeXz"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>YouTube</span></div></a><a href="https://vacancy.global.ptsecurity.com/" target="_blank" class="NavBlock_list_item__wGeXz"><div class="Text_base__riB2c Text_type_pL__A_h0d"><span>Vacancy</span></div></a></div></nav></div><div><img alt="" loading="lazy" width="1200" height="100" decoding="async" data-nimg="1" class="Footer_logo__cDBuS" style="color:transparent" src="https://pt-global.storage.yandexcloud.net/logo_1d137588e3.svg"/></div></footer></main></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"seo":{"title":"COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group","description":"In March 2020 specialists from the PT Expert Security Center conducted an analysis on the activities of the APT group Higaisa. This group was first studied by security analysts at Tencent in November 2019. In that analysis, Tencent specialists reached the conclusion that Higaisa has its origins in South Korea. The group, which is still active today, can be tracked all the way back to 2009.\r\nWith the recent prevalence of the coronavirus (COVID-19) pandemic, many APT groups, including Gamaredon, SongXY, TA428, Lazarus, Konni, and Winnti, have been using the topic of COVID-19 in their email distributions. Higaisa is no exception.\r\nThis article is an investigation into one of the malicious files created by Higaisa. The file was discovered by security experts on March 11 while conducting another study on information security threats. The file is also compared with earlier files, and observed changes are noted and analyzed.\r\n"},"headerData":{"logoImage":{"src":"https://pt-global.storage.yandexcloud.net/logo_header_1bd424ccc4.svg","width":249,"height":22,"alt":""},"nav":[{"type":"product-menu","data":{"title":"Products","button":{"link":"/products","text":"Jump to section","targetBlank":false},"items":[{"description":"NDR system for detecting hidden threats on the perimeter and inside the network","link":"/products/network-attack-discovery","title":"PT NAD"},{"description":"Advanced sandbox with customizable virtual environments","link":"/products/sandbox","title":"PT Sandbox"},{"description":"Next-generation vulnerability management system","link":"/products/maxpatrol-vm","title":"MaxPatrol VM"},{"description":"Pinpoint threat detection solution for your infrastructure","link":"/products/siem","title":"MaxPatrol SIEM"},{"description":"Source-code analysis tool","link":"/products/ai","title":"PT AI"},{"description":"Dynamic application security testing tool","link":"/products/blackbox","title":"PT BlackBox"},{"description":"Cyberthreat detection and incident response in ICS","link":"/products/isim","title":"PT ISIM"},{"description":"Autopilot for result-driven cybersecurity","link":"/products/mp-o2/","title":"MaxPatrol O2"},{"description":"Protects your endpoints","link":"/products/edr","title":"MaxPatrol EDR"},{"description":"A web application firewall","link":"/products/pt-af","title":"PT Application Firewall"},{"description":"Innovative solution for the comprehensive protection","link":"/products/cs","title":"PT Container Security"},{"description":"The first comprehensive platform for cyberthreat detection and response in industrial systems","link":"/products/ics","title":"PT Industrial Cybersecurity Suite"}]}},{"type":"link","data":{"link":"/services","title":"Services"}},{"type":"product-menu","data":{"title":"Education","button":null,"items":[{"description":"","link":"https://edu.ptsecurity.com/learning-space","title":"Positive Education Learning Space"},{"description":"","link":"https://edu.ptsecurity.com/pros-programs","title":"Cybersecurity programs for Professionals"},{"description":"","link":"https://edu.ptsecurity.com/c-level-programs","title":"Cybersecurity programs for Executives"},{"description":"","link":"https://edu.ptsecurity.com/product-courses","title":"Product courses"}]}},{"type":"link","data":{"link":"/about/news/","title":"News \u0026 events"}},{"type":"product-menu","data":{"title":"Analytics","button":{"link":"/analytics","text":"Jump to section","targetBlank":false},"items":[{"description":"","link":"/analytics/knowledge-base","title":"Knowledge base"},{"description":"","link":"/analytics/pt-esc-threat-intelligence","title":"PT ESC threat intelligence"},{"description":"","link":"/analytics/threatscape","title":"Threatscape"},{"description":"","link":"/analytics/hacker-groups","title":"Hacker groups"}]}},{"type":"product-menu","data":{"title":"About us","button":{"link":"/about","text":"Jump to section","targetBlank":false},"items":[{"description":"","link":"/about/clients","title":"Clients"},{"description":"","link":"/about/contacts","title":"Contacts"},{"description":"","link":"/about/pt-in-the-media","title":"PT in the Media"},{"description":"","link":"https://vacancy.global.ptsecurity.com/","title":"Vacancy"}]}}],"searchInputPlaceholder":"Search on ptsecurity.com"},"articleData":{"content":[],"deprecatedDetailText":"\u003carticle\u003e\r\n\u003cp\u003e\r\nIn March 2020 specialists from the PT Expert Security Center conducted an analysis on the activities of the APT group Higaisa. This group was \u003ca href=\"https://s.tencent.com/research/report/836.html\" target=\"_blank\"\u003efirst studied\u003c/a\u003e by security analysts at Tencent in November 2019. In that analysis, Tencent specialists reached the conclusion that Higaisa has its origins in South Korea. The group, which is still active today, can be tracked all the way back to 2009. According to the Tencent analysis, Higaisa's main targets have been government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\nHigaisa distributes messages containing real news and information on current events to initially spread their malware. They have also used messages containing seasonal greetings, which congratulate their recipients on holidays such as New Year, the Chinese Lantern Festival, and North Korean national holidays. In most cases the messages are written in English, implying that English-speaking countries could also be targets.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\nWith the recent prevalence of the coronavirus (COVID-19) pandemic, many APT groups, including Gamaredon, SongXY, TA428, Lazarus, Konni, and Winnti, have been using the topic of COVID-19 in their email distributions. Higaisa is no exception.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\nThis article is an investigation into one of the malicious files created by Higaisa. The file was discovered by security experts on March 11 while conducting another study on information security threats. The file is also compared with earlier files, and observed changes are noted and analyzed.\r\n\u003c/p\u003e\r\n\u003ch2\u003eObject #1: File 20200308-sitrep-48-covid-19.pdf.lnk\u003c/h2\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 1. PDF document containing a World Health Organization (WHO) report\" src=\"/upload/corporate/ww-en/images/esc/higaisa/01.png\"\u003e \u003cfigcaption\u003eFigure 1. PDF document containing a World Health Organization (WHO) report\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003ch3\u003eStage 1. Shortcut\u003c/h3\u003e\r\n\u003cp\u003e\r\nThe malware originates from a file called 20200308-sitrep-48-covid-19.pdf.lnk, which is concealed as a PDF file.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 2. Contents of the LNK file\" src=\"/upload/corporate/ww-en/images/esc/higaisa/02.png\"\u003e \u003cfigcaption\u003eFigure 2. Contents of the LNK file\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The file is a .lnk shortcut with the icon of a PDF document. When opened, the command \u003cem\u003ecmd.exe /c\u003c/em\u003e is executed with the following command string (note: line breaks and spaces have been added for readability):\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 3. The command string executed by the shortcut\" src=\"/upload/corporate/ww-en/images/esc/higaisa/03.png\"\u003e \u003cfigcaption\u003eFigure 3. The command string executed by the shortcut\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\nAs a result, copies of the shortcut and a file called \u003cem\u003eC:\\Windows\\System32\\CertUtil.exe\u003c/em\u003e (under the name of \u003cem\u003emsoia.exe\u003c/em\u003e) are placed into a temporary folder. Instead of directly using the name \u003cem\u003eCertUtil.exe\u003c/em\u003e, the file mask \u003cem\u003e*ertu*.exe\u003c/em\u003e and the \u003cem\u003efor\u003c/em\u003e command are used to conduct search, bypassing filename signatures.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\nBy launching \u003cem\u003efindstr.exe\u003c/em\u003e, the Base64-encoded payload at the end of the LNK file is retrieved and then decoded using \u003cem\u003eCertUtil.exe\u003c/em\u003e (\u003cem\u003emsioa.exe\u003c/em\u003e).\r\n\u003c/p\u003e\r\n\u003ch3\u003eStage 2. Archive\u003c/h3\u003e\r\n\u003cp\u003e\r\n\t The decoding results in a CAB archive, which is unpacked into the same \u003cem\u003e%tmp%\u003c/em\u003e folder and contains the following files:\r\n\u003c/p\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003e3UDBUTNY7YstRc.tmp (DLL, used for autorun)\u003c/li\u003e\r\n\t\u003cli\u003e9sOXN6Ltf0afe7.js (installation script)\u003c/li\u003e\r\n\t\u003cli\u003e486AULMsOPmf6W.tmp (a legitimate executable file used for autorun)\u003c/li\u003e\r\n\t\u003cli\u003e20200308-sitrep-48-covid-19.pdf (\u003ca href=\"https://www.who.int/docs/default-source/coronaviruse/situation-reports/20200308-sitrep-48-covid-19.pdf\" target=\"_blank\"\u003ethe original WHO report\u003c/a\u003e, used as bait)\u003c/li\u003e\r\n\t\u003cli\u003ecSi1r0uywDNvDu.tmp (XSL; contains part of the installation code written in VBScript)\u003c/li\u003e\r\n\t\u003cli\u003eMiZl5xsDRylf0W.tmp (installer payload)\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\r\n\t After the files have been retrieved, the malware moves to the next stage in the process of achieving persistence in the system, launching the file \u003cem\u003e9sOXN6Ltf0afe7.js\u003c/em\u003e.\r\n\u003c/p\u003e\r\n\u003ch3\u003eStage 3. JS script. Part one.\u003c/h3\u003e\r\n\u003cp\u003e\r\n\tThe script is written as one line:\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 4. A fragment of the code from 9sOXN6Ltf0afe7.js\" src=\"/upload/corporate/ww-en/images/esc/higaisa/04.png\"\u003e \u003cfigcaption\u003eFigure 4. A fragment of the code from 9sOXN6Ltf0afe7.js\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t In effect, the script executes the following console commands:\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 5. Console commands in 9sOXN6Ltf0afe7.js\" src=\"/upload/corporate/ww-en/images/esc/higaisa/05.png\"\u003e \u003cfigcaption\u003eFigure 5. Console commands in 9sOXN6Ltf0afe7.js\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t A folder with the name \u003cem\u003ecscript.exe\u003c/em\u003e is created in the temporary folder called \u003cem\u003e%tmp%\u003c/em\u003e. The original script interpreter, \u003cem\u003ecscript.exe\u003c/em\u003e, is then copied into this folder with the name \u003cem\u003emsproof.exe\u003c/em\u003e. An XSL file by the name of \u003cem\u003eWsmPty.xsl\u003c/em\u003e is copied in as well. This is what the XSL file looks like:\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 6. A fragment of the code in WsmPty.xsl\" src=\"/upload/corporate/ww-en/images/esc/higaisa/06.png\"\u003e \u003cfigcaption\u003eFigure 6. A fragment of the code in WsmPty.xsl\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t A legitimate script, \u003cem\u003e%windir%\\System32\\winrm.vbs\u003c/em\u003e (a console tool for work with the Windows Remote Management API), is launched using the interpreter. It is then passed the command \u003cem\u003eget wmicimv2/Win32_Process?Handle=4\u003c/em\u003e and the output format: \u003cem\u003eformat:pretty\u003c/em\u003e.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t When this format is specified, \u003cem\u003ewinrm.vbs\u003c/em\u003e is pulled from the directory where the interpreter \u003cem\u003ecscript.exe\u003c/em\u003e and the file \u003cem\u003eWsmPty.xsl\u003c/em\u003e are located. \u003cem\u003ewinrm.vbs\u003c/em\u003e is used to format the command output (regardless of whether it was successfully executed). This will then run the VBScript code embedded in the file.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t This method, \u003ca href=\"https://posts.specterops.io/application-whitelisting-bypass-and-arbitrary-unsigned-code-execution-technique-in-winrm-vbs-c8c24fb40404\" target=\"_blank\"\u003edescribed\u003c/a\u003e by Matt Graeber in 2018, bypasses application whitelisting restrictions to run unauthorized code. There is one essential condition for \u003cem\u003ewinrm.vbs\u003c/em\u003e to work—the string \u003cem\u003ecscript.exe\u003c/em\u003e must be present in the path to the interpreter. This is why the folder that it is copied into is created with this particular name.\r\n\u003c/p\u003e\r\n\u003ch3\u003eStage 4. XSL\u003c/h3\u003e\r\n\u003cp\u003e\r\n\t The VBScript code that is launched contains a hex string and code that are responsible for decoding and executing the file. Here you can see the code with all hex strings converted into bytes and deobfuscated variable names:\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 7. Deobfuscated VBScript code\" src=\"/upload/corporate/ww-en/images/esc/higaisa/07.png\"\u003e \u003cfigcaption\u003eFigure 7. Deobfuscated VBScript code\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t Essentially, what the code does is create a file called OFFICE12 in the user profile, as well as a shortcut called \u003cem\u003eAccessories.lnk\u003c/em\u003e in the startup directory. The shortcut does not directly launch the payload, instead using the function \u003cem\u003eFileProtocolHandler\u003c/em\u003e from the \u003cem\u003eurl.dll\u003c/em\u003e library:\r\n\u003c/p\u003e\r\n\u003cpre\u003e\u003cdiv class=\"code\"\u003eC:\\Windows\\System32\\rundll32.exe C:\\Windows\\system32\\url.dll,FileProtocolHandler %UserProfile%\\OFFICE12\\MSOStyle.exe\u003c/div\u003e\u003c/pre\u003e\r\n\u003cp\u003e\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t Additionally, a file called \u003cem\u003e2m7EBxdH3wHwBO.tmp\u003c/em\u003e is created in \u003cem\u003e%tmp%\u003c/em\u003e via the function Write4D5A90. This file contains three bytes from the beginning of an EXE file: 0x4D, 0x5A, 0x90.\r\n\u003c/p\u003e\r\n\u003ch3\u003eStage 3. JS script. Continuation\u003c/h3\u003e\r\n\u003cp\u003e\r\n\t Once the VBScript in XSL has been run, console commands launched by the JS code continue to be executed. Three files are copied into the folder OFFICE12 that was created in the user profile. Those files are:\r\n\u003c/p\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003eMSOSTYLE.EXE\u003c/li\u003e\r\n\t\u003cli\u003eOINFO12.OCX\u003c/li\u003e\r\n\t\u003cli\u003eWordcnvpxy.exe\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\r\n\tThe last file, which is the payload, is built from the three-byte introductory string created by VBScript and from \u003cem\u003eMiZl5xsDRylf0W.tmp\u003c/em\u003e, which was unpacked earlier. The result is a valid .exe file.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t MSOSTYLE.EXE is a legitimate file from the Microsoft Office 2007 package. It is responsible for sideloading the dynamic link library OINFO12.OCX.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t OINFO12.OCX contains the code for executing the final payload:\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 8. Launching Wordcnvpxy.exe in DllMain\" src=\"/upload/corporate/ww-en/images/esc/higaisa/08.png\"\u003e \u003cfigcaption\u003eFigure 8. Launching Wordcnvpxy.exe in DllMain\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t It also contains code in exported functions that is not actually run (we suspect that this is part of an attempt to avoid detection in sandbox environments):\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 9. The code of GetOfficeData()\" src=\"/upload/corporate/ww-en/images/esc/higaisa/09.png\"\u003e \u003cfigcaption\u003eFigure 9. The code of GetOfficeData()\u003c/figcaption\u003e \u003c/figure\u003e \u003cfigure\u003e \u003cimg alt=\"Figure 10. The code of DeleteOfficeData()\" src=\"/upload/corporate/ww-en/images/esc/higaisa/10.png\"\u003e \u003cfigcaption\u003eFigure 10. The code of DeleteOfficeData()\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The last step in the script is to open the PDF file that was used as bait.\r\n\u003c/p\u003e\r\n\u003ch3\u003eWordcnvpxy.exe downloader\u003c/h3\u003e\r\n\u003cp\u003e\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t The payload is an application that creates a hidden window (the name of the class and the window is SK_Parasite).\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 11. Window creation and event processing loop in Wordcnvpxy.exe\" src=\"/upload/corporate/ww-en/images/esc/higaisa/11.png\"\u003e \u003cfigcaption\u003eFigure 11. Window creation and event processing loop in Wordcnvpxy.exe\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t Essential functions are loaded dynamically. Base64 with the following non-standard alphabet is used to decode library names: \u003cem\u003ez2bqw7k90rJYALIQUxZK%sO=hd5C4piVMFlaRucWy31GTNH-mED8fnXtPvSojeB6g\u003c/em\u003e. Instead of using function names, their hashes are used, using \u003ca href=\"http://www.azillionmonkeys.com/qed/hash.html\" target=\"_blank\"\u003eSuperFastHash\u003c/a\u003e algorithm.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 12. Dynamically loaded libraries\" src=\"/upload/corporate/ww-en/images/esc/higaisa/12.png\"\u003e \u003cfigcaption\u003eFigure 12. Dynamically loaded libraries\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tThe main code is run in a separate thread: every 10 minutes, the application contacts the C\u0026C server \u003cem\u003emotivation[.]neighboring[.]site\u003c/em\u003e and passes it the computer's identifier in the User-Agent string. The identifier is a SuperFastHash of the system volume serial number and the name of the computer.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 13. Main downloader cycle\" src=\"/upload/corporate/ww-en/images/esc/higaisa/13.png\"\u003e \u003cfigcaption\u003eFigure 13. Main downloader cycle\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The response from the server is saved into a temporary file. If the response contains at least 10 bytes, it is decoded from Base64 and divided into two segments separated by the symbol $. The first segment contains the RC4-encoded executable file, and the second contains its filename without an extension.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 14. Processing the server response\" src=\"/upload/corporate/ww-en/images/esc/higaisa/14.png\"\u003e \u003cfigcaption\u003eFigure 14. Processing the server response\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The method used to construct a key for decoding the RC4 encryption is interesting. It is generated via a recurrent sequence that begins with two numbers (28 and 39), and every subsequent number equals the sum of the previous two, mod 255. The key consists of 64 bytes and begins with the first sum in the sequence. The key is later expanded to 256 bytes (by looping) and is used in the standard RC4 algorithm.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 15. Generation of the RC4 key in Wordcnvpxy.exe\" src=\"/upload/corporate/ww-en/images/esc/higaisa/15.png\"\u003e \u003cfigcaption\u003eFigure 15. Generation of the RC4 key in Wordcnvpxy.exe\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The executable file received from the server is saved in \u003cem\u003e%TEMP%\u003c/em\u003e with the specified name and is then launched.\r\n\u003c/p\u003e\r\n\u003ch2\u003eObject #2: 邀请函.doc (Invitation card.doc)\u003c/h2\u003e\r\n\u003cp\u003e\r\n\t This is an RTF file containing a congratulatory statement:\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 16. Document with holiday greetings\" src=\"/upload/corporate/ww-en/images/esc/higaisa/16.png\"\u003e \u003cfigcaption\u003eFigure 16. Document with holiday greetings\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\nThe document was created using the popular builder 'Royal Road RTF' (also known as 8.t), which exploits the CVE-2018-0798 vulnerability in Microsoft Equation Editor. This builder is not publicly accessible, but \u003ca href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.8t_dropper\" target=\"_blank\"\u003eis widely used\u003c/a\u003e by Chinese APT groups, including TA428, Goblin Panda, IceFog, and \u003ca href=\"https://www.ptsecurity.com/ww-en/analytics/cybersecurity-threatscape-q4-2017/\" target=\"_blank\"\u003eSongXY\u003c/a\u003e. The name '8.t' originates from the fact that the malware creates a file called 8.t containing the encoded payload in a temporary folder.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t Exploitation results in the creation of a file called \u003cem\u003e%APPDATA%\\microsoft\\word\\startup\\intel.wll\u003c/em\u003e. This file is a DLL dropper, which is loaded the next time Microsoft Word is launched. Its payload consists of two files: \u003cem\u003e%ALLUSERSPROFILE%\\TotalSecurity\\360ShellPro.exe\u003c/em\u003e and \u003cem\u003e%ALLUSERSPROFILE \\TotalSecurity\\utils\\FileSmasher.exe\u003c/em\u003e. The files are encoded using \u003cem\u003exor 0x1A\u003c/em\u003e.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 17. The main function in the intel.wll dropper (fragment)\" src=\"/upload/corporate/ww-en/images/esc/higaisa/17.png\"\u003e \u003cfigcaption\u003eFigure 17. The main function in the intel.wll dropper (fragment)\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tThe dropper achieves persistence in the system by creating a shortcut in the startup directory that launches \u003cem\u003e%ALLUSERSPROFILE%\\TotalSecurity\\360ShellPro.exe\u003c/em\u003e with key \u003cem\u003e/func=5\u003c/em\u003e. This file is a modified component of the antivirus tool \u003ca href=\"https://www.360totalsecurity.com/en/\" target=\"_blank\"\u003e360 Total Security\u003c/a\u003e, and is used to transfer control to the downloader \u003cem\u003eFileSmasher.exe\u003c/em\u003e via a method similar to DLL side-loading.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t The legitimate \u003cem\u003e360ShellPro.exe\u003c/em\u003e file contains a number of relative paths to the executable file. The correct file is selected and launched depending on the value of the argument \u003cem\u003e/func=\u003c/em\u003e.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 18. File selection based on the func parameter\" src=\"/upload/corporate/ww-en/images/esc/higaisa/18.png\"\u003e \u003cfigcaption\u003eFigure 18. File selection based on the func parameter\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003ch3\u003eFileSmasher.exe downloader\u003c/h3\u003e\r\n\u003cp\u003e\r\n\t In many ways, \u003cem\u003eFileSmasher.exe\u003c/em\u003e resembles \u003cem\u003eWordcnvpxy.exe\u003c/em\u003e. It is also a windowed application (class name: NIS_K). However, in this case, the relevant code is launched using a 10-minute timer, not a separate thread.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 19. Window creation, timer set-up, and event processing loop in FileSmasher.exe\" src=\"/upload/corporate/ww-en/images/esc/higaisa/19.png\"\u003e \u003cfigcaption\u003eFigure 19. Window creation, timer set-up, and event processing loop in FileSmasher.exe\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t Dynamic DLL loading is not used (all imports are static) and the address of the C\u0026amp;C server is restored using a similar RC4 decoding function (instead of decoding from Base64 with a nonstandard alphabet). However, the initial elements in the series used to generate the key have different values (8 and 5), and the generative algorithm is fully repeated.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 20. RC4 key generation in FileSmasher.exe\" src=\"/upload/corporate/ww-en/images/esc/higaisa/20.png\"\u003e \u003cfigcaption\u003eFigure 20. RC4 key generation in FileSmasher.exe\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The CRC32 from the system volume serial number is used as an infected machine identifier. It is passed explicitly as a GET parameter. The following is the full address that the downloader uses to access the server: \u003cem\u003ehttp://walker[.]shopbopstar[.]top/blog/index.php?ei={32 random chars}\u0026ti={volume serial CRC32}\u003c/em\u003e\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 21. Construction of a URL to access the monitoring server, from FileSmasher.exe\" src=\"/upload/corporate/ww-en/images/esc/higaisa/21.png\"\u003e \u003cfigcaption\u003eFigure 21. Construction of a URL to access the monitoring server, from FileSmasher.exe\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The loading algorithm is practically identical:\r\n\u003c/p\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003eThe server response is saved in a temporary file and is processed only if it contains at least 10 bytes.\u003c/li\u003e\r\n\t\u003cli\u003eIn contrast to \u003cem\u003eWordcnvpxy.exe\u003c/em\u003e, there is no Base64 decoding.\u003c/li\u003e\r\n\t\u003cli\u003eThe response is divided into two parts using an ampersand (\u0026amp;) instead of a dollar sign ($).\u003c/li\u003e\r\n\t\u003cli\u003eThe first segment is also an executable file encrypted with RC4, and the second part is its name without an extension.\u003c/li\u003e\r\n\t\u003cli\u003eThe file is decoded using the same function that is responsible for decoding the address (the RC4 key parameters are 8 and 5).\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\r\n\tThe loaded file is launched using \u003cem\u003eCreateProcess\u003c/em\u003e. \r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t It is worth noting that the resource files for \u003cem\u003eWordcnvpxy.exe\u003c/em\u003e and \u003cem\u003eFileSmasher.exe\u003c/em\u003e include a dialogue window, \"About,\" containing the application's name and copyright information.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 22. The \"About\" dialogue window from the resources included in FileSmasher.exe\" src=\"/upload/corporate/ww-en/images/esc/higaisa/22.png\"\u003e \u003cfigcaption\u003eFigure 22. The \"About\" dialogue window from the resources included in FileSmasher.exe\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t This window as well as other resources (Menu, Accelerators) are generated by Visual Studio when the project is created. In the case of Wordcnvpxy.exe, the application name indicated in the dialogue window matches the name of the window's class (SK_Parasite). However, this is not the case for FileSmasher.exe. Here, the application is called AttackBot, and in its case we see the abbreviation NIS, which we saw earlier in the name of the window class (NIS_K).\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t Experts at Tencent drew a connection between Higaisa and the Republic of Korea and identified its main targets as North Korean government and trade organizations. This suggests that NIS could stand for National Intelligence Service (\u003ca href=\"https://en.wikipedia.org/wiki/National_Intelligence_Service_(South_Korea)\" target=\"_blank\"\u003eThe National Intelligence Service of the Republic of Korea\u003c/a\u003e). SK_Parasite could be a reference to the South Korean film \u003ca href=\"https://en.wikipedia.org/wiki/Parasite_(2019_film)\" target=\"_blank\"\u003eParasite\u003c/a\u003e (released in 2019). Alone, these data are insufficient to draw firm conclusions; however, they can be seen as circumstantial evidence for a connection with South Korea.\r\n\u003c/p\u003e\r\n\u003ch3\u003eRelated objects\u003c/h3\u003e\r\n\u003cp\u003e\r\n\tThe contents of the initial document (New Year greetings) and the date the file was created (22.12.2019) specify the period during which it was used. However, it is not the only object of its kind. Analysts at Tencent \u003ca href=\"https://s.tencent.com/research/report/895.html\" target=\"_blank\"\u003eidentified\u003c/a\u003e another distribution of malicious files during the same period. In that case the filenames were \u003cem\u003eHappy-new-year-2020.scr\u003c/em\u003e and \u003cem\u003e2020-New-Year-Wishes-For-You.scr\u003c/em\u003e. These files are executable and use a congratulatory JPG file as bait. The image is dropped from an executable file and opened in the default viewer.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 23. The image contained in Happy-new-year-2020.scr\" src=\"/upload/corporate/ww-en/images/esc/higaisa/23.png\"\u003e \u003cfigcaption\u003eFigure 23. The image contained in Happy-new-year-2020.scr\u003c/figcaption\u003e \u003c/figure\u003e \u003cfigure\u003e \u003cimg alt=\"Figure 24. The image contained in 2020-New-Year-Wishes-For-You.scr\" src=\"/upload/corporate/ww-en/images/esc/higaisa/24.png\"\u003e \u003cfigcaption\u003eFigure 24. The image contained in 2020-New-Year-Wishes-For-You.scr\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t Other than the exploitation of the CVE-2018-0798 vulnerability, the structure of these threats is effectively identical to the RTF document. SCR files are droppers whose payload is decrypted using \u003cem\u003exor 0x1A\u003c/em\u003e and unpacked into the subdirectory of \u003cem\u003e%ALLUSERSPROFILE%\u003c/em\u003e.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 25. The main function in 2020-New-Year-Wishes-For-You.scr dropper (fragment)\" src=\"/upload/corporate/ww-en/images/esc/higaisa/25.png\"\u003e \u003cfigcaption\u003eFigure 25. The main function in 2020-New-Year-Wishes-For-You.scr dropper (fragment)\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The payload consists of a legitimate executable file (\u003cem\u003erekeywiz.exe\u003c/em\u003e from Windows 7 is used) and the DLL downloader \u003cem\u003eDuser.dll\u003c/em\u003e. The legitimate file is added to startup using a shortcut.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t The downloader decrypts the URL using RC4 (the initial values are 8, 5 and 9, 5) and adds a random string and the CRC32 computer identifier into the GET parameter.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 26. Construction of a URL to access the control server, from Duser.dll (2020-New-Year-Wishes-For-You.scr dropper)\" src=\"/upload/corporate/ww-en/images/esc/higaisa/26.png\"\u003e \u003cfigcaption\u003eFigure 26. Construction of a URL to access the control server, from Duser.dll (2020-New-Year-Wishes-For-You.scr dropper)\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\t The downloader instance unpacked from \u003cem\u003e2020-New-Year-Wishes-For-You.scr\u003c/em\u003e to establish a connection with the C\u0026C server uses a statically linked libcurl library. The other instance uses statically imported functions from the \u003cem\u003ewinhttp.dll\u003c/em\u003e library, just like \u003cem\u003eFileSmasher.exe\u003c/em\u003e.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t The server is accessed at the following addresses: \u003cem\u003ehttp://adobeinfo[.]shopbopstar[.]top/notice/index.php\u003c/em\u003e and \u003cem\u003ehttp://petuity[.]shopbopstar[.]top/research/index.php\u003c/em\u003e.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t In both cases data is received from the server in the same format as in \u003cem\u003eFileSmasher.exe\u003c/em\u003e.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t Regardless of the fact that neither of the droppers that we have described actually create any windows, they do contain a standard set of window resources, including the \"About\" dialogue window. The strings \"K_NIS\" and \"KISA\" are used as application names.\r\n\u003c/p\u003e\r\n\u003ch2\u003eC\u0026amp;C server responses\u003c/h2\u003e\r\n\u003cp\u003e\r\n\t Two types of components were used as the payloads distributed by the C\u0026amp;C server:\r\n\u003c/p\u003e\r\n\u003cul\u003e\r\n\t\u003cli\u003eThe system information collector (InfoStealer), which essentially provides the function of running the console command \u003cem\u003esysteminfo \u0026 ipconfig -all \u0026 tasklist \u0026 net view \u0026 dir c:\\ \u0026 dir c:\\users\\ \u0026 dir d:\\ \u0026 dir e:\\\u003c/em\u003e and relays the response to the command server.\u003c/li\u003e\r\n\t\u003cli\u003eGh0st RAT in a variety of modified forms, particularly with all essential functionality implemented in DLL plug-ins loaded from the C\u0026C server.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e\r\n\t These instances of Gh0st RAT are interesting when compared with the publicly accessible source code, as they implement a non-standard encryption of incoming and outgoing data. In packets containing less than 10 payload bytes (not including the header), the first 10 bytes are processed with a 0x12 xor key. The bytes 0x0 and 0x12 are left unchanged. Data are compressed with LZO instead of zlib.\r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 27. Decompiled code of the function CClientSocket::OnRead\" src=\"/upload/corporate/ww-en/images/esc/higaisa/27.png\"\u003e \u003cfigcaption\u003eFigure 27. Decompiled code of the function CClientSocket::OnRead\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003cp\u003e\r\n\tIn addition, the \u003cem\u003em_bPacketFlag\u003c/em\u003e field (the signature of packets sent to the command sever) is initialized with a pseudorandom value calculated using the value returned from calling \u003cem\u003eGetTickCount()\u003c/em\u003e. In the original code, the field is equal to \u003cem\u003eGh0st\u003c/em\u003e. \r\n\u003c/p\u003e\r\n \u003cfigure\u003e \u003cimg alt=\"Figure 28. Initialization of the field CClientSocket::m_bPacketFlag\" src=\"/upload/corporate/ww-en/images/esc/higaisa/28.png\"\u003e \u003cfigcaption\u003eFigure 28. Initialization of the field CClientSocket::m_bPacketFlag\u003c/figcaption\u003e \u003c/figure\u003e\r\n\u003ch2\u003eConclusion\u003c/h2\u003e\r\n\u003cp\u003e\r\n\t The results of our study demonstrate how the malicious objects used by the Higaisa group have evolved over time. Beginning with a simple distribution of executable files, they shifted towards utilizing exploits and complex multi-stage threats. However, the structure of their tools (such as droppers and downloaders) remained largely unchanged. To deter detection, the attackers modified details such as the control server URL, RC4 key parameters, the legitimate files used for DLL side-loading, and the libraries used for HTTP interaction.\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n \u003cb\u003eAuthor:\u003c/b\u003e Alexey Zakharov, Positive Technologies\r\n\u003c/p\u003e\r\n\u003ch2\u003eIOCs\u003c/h2\u003e\r\n\u003cdiv class=\"table-container\"\u003e\r\n\t\u003ctable class=\"table-article\"\u003e\r\n\t\u003cthead\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\t Filename\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\t MD5\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\t SHA-1\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\t SHA-256\r\n\t\t\u003c/th\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/thead\u003e\r\n\t\u003ctbody\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 20200308-sitrep-48-covid-19.pdf.lnk\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 21a51a834372ab11fba72fb865d6830e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 9ceb6e0e4ad0a2c03751d0563a82a79ebb94ec95\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 95489af84596a21b6fcca078ed10746a32e974a84d0daed28cc56e77c38cc5a8\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t oGhPGUDC03tURV.tmp\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 37f78b1ad43959a788162f560bdc9c79\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 992d530d4bb35fb8dbdfb690740ead6e0fa974ec\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t f74199f59533fbbe57f0b2aae45c837b3ed5e4f5184e74c02e06c12c6535f0f9\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t OINFO12.OCX\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 83d04f21515c7e6316f9cd0bb393a118\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t e00b982a14835dae781bbbe06055d7d18acc6eb0\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t a49133ed68bebb66412d3eb5d2b84ee71c393627906f574a29247d8699f1f38e\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 9sOXN6Ltf0afe7.js\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 4f8ff5e70647dbc5d91326346c393729\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 2fd4eb78e53af6a5b210943ca8f0e521bb567afb\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 70b8397f87e4a0d235d41b00a980a8be9743691318d30293f7aa6044284ffc9c\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t MSOSTYLE.EXE\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 371e896d818784934bd1456296b99cbe\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 88f23b0913ef5f94cd888605504e1e54c3a6e48f\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 604679789c46a01aa320eb1390da98b92721b7144e57ef63853c3c8f6d7ea85d\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 20200308-sitrep-48-covid-19.pdf\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t faf5ef01f4a9bf2aba7ede67dcc5a2d4\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 4e0c1a05360c6bebf903a708acf6792b13f43870\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 2dd886cc041ea6e5e80880ccbbc54be42079598acf0c1e7e459616c3f9c0dd34\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t cSi1r0uywDNvDu.tmp\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t eefeb76d26338e09958aae5d81479178\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t c400e10a8f2b5b62f919033e2db0a1f99b1a3c38\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 9d52d8f10673518cb9f19153ddbe362acc7ca885974a217a52d1ee8257f22cfc\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t MiZl5xsDRylf0W.tmp\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t c1d8966fa1bd7aee41b2c4ad731407d3\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 6e7e3277801669f3053bf364ae6be89f00017c89\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t b578a237587054f351f71bd41bede49197f77a1409176f839ebde105f3aee44c\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t Wordcnvpxy.exe\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t fd648c3b7495abbe86b850587e2e5431\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t d0e0d641f3a063fb02c7f862ea8586312af5fa2e\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 002c9e0578a8b76f626e59b755a8aac18b5d048f1cc76e2c12f68bc3dd18b124\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/tbody\u003e\r\n\t\u003c/table\u003e\r\n\u003c/div\u003e\r\n\u003cdiv class=\"table-container\"\u003e\r\n\t\u003ctable class=\"table-article\"\u003e\r\n\t\u003cthead\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\t Filename\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\t MD5\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\t SHA-1\r\n\t\t\u003c/th\u003e\r\n\t\t\u003cth\u003e\r\n\t\t\t SHA-256\r\n\t\t\u003c/th\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/thead\u003e\r\n\t\u003ctbody\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 邀请函.doc\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 2123bf482c9c80cb1896ff9288ad7d60\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t ea02db9b92cbf1d243b502d130aa2dd6c98637d2\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 500b6037ddb5efff0dd91f75b22ccce5b04d996c459d83d1f07fae8780b24e09\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t intel.wll\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 59a55c7bbc0ee488ec9e2cf50b792a56\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t a29ce0331015f2a3e87fd7fe1ce9dae228808b59\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 1b978324df504451c2a3430e32dc577742e2ac93b2602d68d771d89be4199a58\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 360ShellPro.exe\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t d5e42cc18906f09d5bab62df45b5fcf6\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 46833928f75db90220451e026997d039730906fa\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 1acd3cbc83dd4153f07b869b3142594aa9e77df33aa5319312439ecf7f606152\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t FileSmasher.exe\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t ea628fef3b547a1476d915963415e64c\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t 07dbfaa430a201ce81f5079dd1e48379fac27177\r\n\t\t\u003c/td\u003e\r\n\t\t\u003ctd\u003e\r\n\t\t\t f2c60274e625bcb051909797b35095dc5f37fae155cfdd96287c4ac112664a65\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003c/tbody\u003e\r\n\t\u003c/table\u003e\r\n\u003c/div\u003e\r\n\u003cbr\u003e\r\n\u003cp\u003e\r\n\t motivation[.]neighboring[.]site\r\n\u003c/p\u003e\r\n\u003cp\u003e\r\n\t walker[.]shopbopstar[.]top\r\n\u003c/p\u003e\r\n \u003c/article\u003e","title":"COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group","date":"2020-06-03T21:00:00.000Z","slug":"covid-19-and-new-year-greetings-the-higaisa-group","file":"","titleOfHelpfulFiles":"","helpfulFiles":[]},"footerData":{"title":"Cybersecurity market leader","copyright":"Copyright \u003cmark\u003e©\u003c/mark\u003e 2002–2024 Positive Technologies. All rights reserved.","products":{"title":"Products","navItems":[{"name":"PT NAD","link":"/products/network-attack-discovery"},{"name":"PT Sandbox","link":"/products/sandbox"},{"name":"MaxPatrol VM","link":"/products/maxpatrol-vm"},{"name":"MaxPatrol SIEM","link":"/products/siem"},{"name":"PT AI","link":"/products/ai"},{"name":"PT BlackBox","link":"/products/blackbox"},{"name":"PT ISIM","link":"/products/isim"},{"name":"MaxPatrol O2","link":"/products/mp-o2"},{"name":"MaxPatrol EDR","link":"/products/edr"},{"name":"PT Application Firewall","link":"/products/pt-af"},{"name":"PT Container Security","link":"/products/cs"},{"name":"PT Industrial Cybersecurity Suite","link":"/products/ics"}]},"company":{"title":"ANALYTICS","navItems":[{"name":"Analytics articles","link":"/analytics"},{"name":"Knowledge base","link":"/analytics/knowledge-base"},{"name":"PT ESC threat intelligence","link":"/analytics/pt-esc-threat-intelligence"},{"name":"Threatscape","link":"/analytics/threatscape"},{"name":"Hacker groups","link":"/analytics/hacker-groups"}]},"social":{"title":"COMPANY","navItems":[{"name":"About us","link":"/about"},{"name":"Clients","link":"/about/clients"},{"name":"Contacts","link":"/about/contacts"},{"name":"PT in the Media","link":"/about/pt-in-the-media"},{"name":"Education","link":"https://edu.ptsecurity.com/learning-space"},{"name":"YouTube","link":"https://www.youtube.com/channel/UC9hnMfdwfLd8V5qEc-6MXXQ"},{"name":"Vacancy","link":"https://vacancy.global.ptsecurity.com/"}]},"logoImage":{"src":"https://pt-global.storage.yandexcloud.net/logo_1d137588e3.svg","width":1200,"height":100,"alt":""},"legalDocsLink":{"id":61,"text":"Legal documents","link":"https://global.ptsecurity.com/policies/terms-of-use","targetBlank":true}},"anyQuestionsData":{"selectProductOptions":[{"value":"network-attack-discovery","label":"PT NAD","crmId":"3212ea27-d047-42f9-9da3-9ef5233634bb"},{"value":"sandbox","label":"PT Sandbox","crmId":"5addae27-2762-4a89-8b58-e247ab1e71dc"},{"value":"maxpatrol-vm","label":"MaxPatrol VM","crmId":"e5ffe330-69bf-4344-b0b0-c228de0f6f83"},{"value":"siem","label":"MaxPatrol SIEM","crmId":"0c54a201-09a7-4dc9-b3ca-1ce61715388b"},{"value":"ai","label":"PT AI","crmId":"4c2c50e6-2b8c-4c1e-a2da-f6423ece496b"},{"value":"blackbox","label":"PT BlackBox","crmId":"081eb4e2-54c2-4ce5-b171-d7dcaecc1c1f"},{"value":"isim","label":"PT ISIM","crmId":"67a72950-2d9c-47a1-8bb8-49540356da8f"},{"value":"mp-o2","label":"MaxPatrol O2","crmId":"29563721-4ec7-4e5b-8a48-f3674ab70749"},{"value":"edr","label":"MaxPatrol EDR","crmId":"c667eb61-0b7a-457c-991c-43b83504a7ed"},{"value":"pt-af","label":"PT Application Firewall","crmId":"b6b16deb-0ceb-4318-b947-fd238d7a9935"},{"value":"cs","label":"PT Container Security","crmId":"2df38b89-5d1f-4a0d-8be4-76ea9f8d2e30"},{"value":"ics","label":"PT Industrial Cybersecurity Suite","crmId":""}],"title":"Get in touch","description":"Fill in the form and our specialists\u003cbr/\u003e will contact you shortly","feedback":{"title":"General\u003cbr/\u003e questions","description":"We're happy to answer any questions you may have.","fieldName":"Name","fieldPhone":"Phone number","fieldEmail":"Email","fieldComment":"How can we help?","fieldCountry":"Country","checkboxConsentsTerms":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent\" target=\"_blank\"\u003emy consent to the processing of my personal data\u003c/a\u003e in accordance with the terms of the \u003ca href=\"https://global.ptsecurity.com/policies/privacy-policy\" target=\"_blank\"\u003ePrivacy Notice\u003c/a\u003e","checkboxSubscription":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent-email\" target=\"_blank\"\u003emy consent to receive marketing and informational messages\u003c/a\u003e","buttonSubmit":"SEND","successTitle":"Thank you, your application has been sent","successDescription":"Our specialists will contact you soon."},"partnership":{"title":"Partnership","description":"Join us in making the world a safer place.","fieldName":"Name","fieldCompanyName":"Company name","fieldPhone":"Phone number","fieldEmail":"Email","fieldComment":"How can we help?","fieldAddress":"Address","fieldCountry":"Country","checkboxConsentsTerms":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent\" target=\"_blank\"\u003emy consent to the processing of my personal data\u003c/a\u003e in accordance with the terms of the \u003ca href=\"https://global.ptsecurity.com/policies/privacy-policy\" target=\"_blank\"\u003ePrivacy Notice\u003c/a\u003e","checkboxSubscription":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent-email\" target=\"_blank\"\u003emy consent to receive marketing and informational messages\u003c/a\u003e","buttonSubmit":"SEND","successTitle":"Thank you, your application has been sent","successDescription":"Our specialists will contact you shortly."},"pilotApplication":{"title":"Pilot\u003cbr/\u003e application","description":"Test drive our solutions with a customized pilot program.","fieldProduct":"Select a product","fieldName":"Name","fieldCompanyName":"Company name","fieldPhone":"Phone number","fieldEmail":"Email","fieldComment":"How can we help?","fieldCountry":"Country","checkboxConsentsTerms":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent\" target=\"_blank\"\u003emy consent to the processing of my personal data\u003c/a\u003e in accordance with the terms of the \u003ca href=\"https://global.ptsecurity.com/policies/privacy-policy\" target=\"_blank\"\u003ePrivacy Notice\u003c/a\u003e","checkboxSubscription":"I give \u003ca href=\"https://global.ptsecurity.com/policies/consent-email\" target=\"_blank\"\u003emy consent to receive marketing and informational messages\u003c/a\u003e","buttonSubmit":"SEND","successTitle":"Thank you, your application has been sent","successDescription":"Our specialists will contact you shortly."}},"sidebarData":{"widgets":[{"kind":"analytics-articles","data":{"title":"Analytics articles","link":"/analytics","withFlag":true,"items":[{"text":"India: cyberthreat landscape Q3 2023-Q3 2024","link":"/analytics/india-cyberthreat-landscape-q3-2023-q3-2024","targetBlank":true,"publishedDate":"2024-10-22T00:00:00.000Z"},{"text":"Trending vulnerability digest September 2024","link":"/analytics/trending-vulnerability-digest-september-2024","targetBlank":true,"publishedDate":"2024-10-21T00:00:00.000Z"},{"text":"Positive Research 2024","link":"/analytics/positive-research-2024","targetBlank":true,"publishedDate":"2024-10-17T00:00:00.000Z"}]}},{"kind":"ad-banner","data":{"title":"What are the security threats on your network?","subtitle":"Check your traffic-for free","backgroundColor":null,"image":{"src":"https://pt-global.storage.yandexcloud.net/PT_Network_Attack_Discovery_2x_0d8a5793c7.png","width":542,"height":822,"alt":""},"actionProps":{"label":"Request pilot","href":"#contacts","isExternal":false}}}]}},"__N_SSP":true},"page":"/analytics/pt-esc-threat-intelligence/[slug]","query":{"slug":"covid-19-and-new-year-greetings-the-higaisa-group"},"buildId":"fGk60SBlODknG4pBg3RpC","isFallback":false,"gssp":true,"locale":"en","locales":["en","es","pt"],"defaultLocale":"en","scriptLoader":[]}</script></body></html>