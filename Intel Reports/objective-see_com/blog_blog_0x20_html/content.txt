<html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#">

<head>
<title>Objective-See</title>

<meta property="og:title" content="WTF is Mughthesec!? Poking on a Piece of Undetected Adware"/>
<meta property="og:type" content="website" />
<meta property="og:image" content="https://objective-see.com/images/blog/blog_0x20/lulu.png" />

<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@objective_see" />
<meta name="twitter:title" content="WTF is Mughthesec!?" />
<meta name="twitter:description" content="Poking on a Piece of Undetected Adware" />
<meta name="twitter:image" content="https://objective-see.com/images/blog/blog_0x20/lulu.png" />

<link rel="shortcut icon" href="../images/logoApple.ico">
<link rel="stylesheet" type="text/css" href="../css/style.css">
<link href="../css/ss-social.css" rel="stylesheet" />
<link href="../css/ss-standard.css" rel="stylesheet" />
<link href="../css/timeline.css" rel="stylesheet" />
<link href="../css/table.css" rel="stylesheet" />


<link href="https://objective-see.com/rss.xml" rel="alternate" type="application/rss+xml" title="Objective-See's Blog Feed" />

<script src="../js/analytics.js"></script>

<meta http-equiv="cache-control" content="max-age=0" />
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="expires" content="0" />
<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
<meta http-equiv="pragma" content="no-cache" />

</head>

<body>
<nav role="main">
<ul>
	<li><a href="../index.html" class="menubutton logo">Objective See</a></li>
	<li><a href="../about.html" class="menubutton about">about</a></li>
	<li><a href="../blog.html" class="menubutton blog visited">blog</a></li>
	<li><a href="../malware.html" class="menubutton malware">malware</a></li>
	<li><a href="../products.html" class="menubutton products">products</a></li>
</ul>
</nav>

<div class="pageContent">
	<hr class="gradient">
	<br>
	<section class="blogContent">
		<div class="blogTitle">WTF is Mughthesec!?</div>
		<div class="blogSubTitle">&rsaquo; poking on a piece of undetected adware</div>
		<div class="blogDate">8/08/2017</div>
		
		<div style="border: 1px solid #95c02d; padding: 10px; margin-top:15px; font-size: 15px;">
		<span class="n3rdFont">
		love these blog posts? support my tools &amp; writing on <a class="inlineLink" href="https://www.patreon.com/objective_see"><span class="n3rdFont">patreon</span></a>! Mahalo :) 
		<br><br>
		<span>
		<a class="inlineLink" href="https://www.patreon.com/objective_see">
			<img src="../images/blog/blog_0x1D/patreon.png" width="700" style="display:block; margin:auto;"/>
		</a>
		</span>
		<br>
		</span>
		</div>
		<br>
		<div style="border: 1px solid red; padding: 10px; margin-top:15px;">
		Want to play along? I've shared the adware, which can be downloaded <a class="inlineLink" href="https://objective-see.com/downloads/malware/Mughthesec.zip">here</a> (password: <span class="n3rdFont">infect3d</span>).
		</div>
		<br>
		<span style="color: #95c02d; font-weight: bold;">Background</span><br>
		Yesterday Gavriel State (<a class="inlineLink" href="https://twitter.com/gavrielstate">@gavrielstate</a>) posted an interesting <a class="inlineLink" href="https://twitter.com/gavrielstate/status/894463926922092544">tweet</a>:
		<br><br>
		<span><img src="../images/blog/blog_0x20/tweet.jpg" width="600" style="display:block; margin:auto;"/></span>
		<br>
		Interestingly, googling "<span class="n3rdFont">Mughthesec</span>" only returned one relevant hit; a post on Apple's online's forums tilted <a class="inlineLink" href="https://discussions.apple.com/thread/8029380?start=0&tstart=0">"Safari does not render Gmail correctly"</a>. Posted on August 2nd, user 'giveen' stated that, "Only in Safari, when this specific user logins, it does not render Gmail correctly. Only Gmail. Only in Safari." Following another user's suggestion, 'giveen ' ran <a class="inlineLink" href="https://etrecheck.com/">EtreCheck</a> which noted several "unknown files:" 
		<ul style="list-style-type: square;">
		<li><span class="n3rdFont">~/Library/LaunchAgents/com.Mughthesec.plist</span></li><br>
		<li><span class="n3rdFont">~/Library/Application Support/com.Mughthesec/Mughthesec</span></li><br>
		</ul>
		Gavriel was kind enough to share a sample (<span class="n3rdFont">'Mughthesec'</span>) with me, and that, coupled with the assistance from another security researcher, led to recovery of what appeared to be the original installer (sha256: <span class="n3rdFont">f5d76324cb8fcae7f00b6825e4c110ddfd6b32db452f1eca0f4cff958316869c</span>)
		<br>
		<br>
		As neither the sample, <span class="n3rdFont">Mughthesec</span>, nor the (signed!) installer were detected by any AV engines on Virus Total I decided to take a closer look. 
		<br>
		<br>
		<span style="color: #95c02d; font-weight: bold;">Analysis</span><br>
		Let's start with the installer disk image. Uploaded to VirusTotal on August 4th as <span class="n3rdFont">Player.dmg</span>, it currently remains undetected:
		<br><br>
		<span><img src="../images/blog/blog_0x20/vtDMG.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		Using <a class="inlineLink" href="https://objective-see.com/products/whatsyoursign.html">WhatsYourSign</a>, we can examine the signing info:
		<br><br>
		<span><img src="../images/blog/blog_0x20/signedDMG.png" width="700" style="display:block; margin:auto;"/></span>
		<br>
		Using <span class="n3rdFont">spctl</span>, we can confirm the disk image's certificate is still valid (i.e. not rejected):
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		$ spctl -a -t install -vv ~/Downloads/Mughthesec/Player.dmg<br>
		<br>
		~/Downloads/Mughthesec/player.dmg: <b>accepted</b><br>
		source=Developer ID<br>
		origin=Developer ID Application: <b>Quoc Thinh (9G2J3967H9)</b><br>
		<br>
		</span>
		</div>
		<br>
		Double-clicking the disk image, <span class="n3rdFont">Player.dmg</span> mounts it, revealing a single file <span class="n3rdFont">Installer.app</span>: 
		<br><br>
		<span><img src="../images/blog/blog_0x20/mounted.png" width="500" style="display:block; margin:auto;"/></span>
		<br>
		Besides it's icon and name, the <span class="n3rdFont">Installer.app</span>'s' <span class="n3rdFont">Info.plist</span> file, shows it masquerading as Flash installer:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		cat Installer.app/Contents/Info.plist<br>
		<br>
		&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br>
		&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;<br>
		&lt;plist version=&quot;1.0&quot;&gt;<br>
		&lt;dict&gt;<br>
		...<br>
        &nbsp;&nbsp;&nbsp;&lt;key&gt;CFBundleIdentifier&lt;/key&gt;<br>
        &nbsp;&nbsp;&nbsp;&lt;string&gt;com.FlashPlayer&lt;/string&gt;<br>
        <br>
        &nbsp;&nbsp;&nbsp;&lt;key&gt;CFBundleName&lt;/key&gt;<br>
        &nbsp;&nbsp;&nbsp;&lt;string&gt;<b>FlashPlayerInstaller</b>&lt;/string&gt;<br>
		<br>
		</span>
		</div>
		<br>
		This application, is also signed with the same Apple Developer ID:
		<br><br>
		<span><img src="../images/blog/blog_0x20/signedInstaller.png" width="700" style="display:block; margin:auto;"/></span>
		<br>
		Examining its application bundle, we can see its executable is a binary name 'mac' ... how creative! 
		<br><br>
		<span><img src="../images/blog/blog_0x20/appBundle.png" width="400" style="display:block; margin:auto;"/></span>
		<br>
		This binary is also (currently) undetected by any AV engine on Virus Total:
		<br><br>
		<span><img src="../images/blog/blog_0x20/vtInstaller.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		Taking a quick peak at the installer binary shows what appears to be anti-anti-virus logic:
		<br><br>
		<span><img src="../images/blog/blog_0x20/antiAV.png" width="700" style="display:block; margin:auto;"/></span>
		<br>
		We can also run <span class="n3rdFont">strings</span> to search for embedded URLs:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		$ strings -a ~/Downloads/Mughthesec/Installer.app/Contents/MacOS/mac | grep http<br>
		<br>
		http://api.simplyeapps.com/p<br>
		http://cdn.simplyeapps.com/screens/precheck/DmFybQ==<br>
		http://cdn.simplyeapps.com/screens/progress/DmFybQ==<br>
		http://cdn.simplyeapps.com/screens/complete/DmFybQ==<br>
		http://api.simplyeapps.com/l<br>
		<br>
		</span>
		</div>
		<br>
		Now, before we run this in a VM - let's change the MAC address of the virtual machine. This is required step, because it turns out that the installer actually doesn't do anything malicious, (besides actually installing a legit copy of Flash), if it detects it running in VM. Thomas Reed (<a class="inlineLink" href="https://twitter.com/thomasareed">@thomasareed</a>) correctly guessed that this 'VM detection' is done by examining the MAC address (VMWare VMs have 'recognizable' MAC address). Apparently this is common trick used in macOS adware!
		<br>
		<br>
		To change the VM's mac address, shut it down, then change it via the VM's Network Adapter's settings (click 'Advanced Options' to modify the MAC address).
		<br><br>
		<span><img src="../images/blog/blog_0x20/vmSettings.png" width="700" style="display:block; margin:auto;"/></span>
		<br>
		Alright, let's run the damn <span class="n3rdFont">Installer.app</span> already!
		First thing, LuLu (my soon-to-be-released macOS firewall!) detects an outgoing network connection:
		<br><br>
		<span><img src="../images/blog/blog_0x20/lulu.png" width="700" style="display:block; margin:auto;"/></span>
		<br>
		Once the outgoing connection is allowed, the Installer application kindly asks the user to install some 'adware' and potentially unwanted programs:
		<ol>
		<li>Advanced Mac Cleaner</li>
		<li>Safe Finder</li>
		<li>Booking.com</li>
		</ol>
		<br>
		<span><img src="../images/blog/blog_0x20/crapware.jpg" width="700" style="display:block; margin:auto;"/></span>
		<br>
		Since we're playing along, we click 'Next' to install it all!
		<br>
		<br>
		Not too unexpectedly, the Advanced Mac Cleaner triggers a few <a class="inlineLink" href="https://objective-see.com/products/blockblock.html">BlockBlock</a> warnings as it attempts to install a persistent launch agent and login item:
		<br><br>
		<span><img src="../images/blog/blog_0x20/bbMacCleaner.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		It also kindly informs us of several 'critical' issues. How thoughtful :P
		<br><br>
		<span><img src="../images/blog/blog_0x20/macCleaner.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		Moving on to 'Safe Finder', <a class="inlineLink" href="https://objective-see.com/products/blockblock.html">BlockBlock</a> as alerts us of a process named <span class="n3rdFont">'i'</span> persisting something named <span class="n3rdFont">'Mughthesec</span> as a launch agent. 
		<br><br>
		<span><img src="../images/blog/blog_0x20/bbMughthesec.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		An open-source <a class="inlineLink" href="https://github.com/objective-see/ProcInfoExample/">process monitoring utility</a> I wrote (based on the <a class="inlineLink" href="https://github.com/objective-see/ProcInfo/">Proc Info library</a>) shows <span class="n3rdFont">Mughthesec</span> being started by the Installer application (<span class="n3rdFont">FlashPlayerInstaller</span>, pid: 490):
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		# procMonitor<br>
		<br>
		process start:<br>
		pid: 532<br>
		path: /private/tmp/F3A53281-D3FA-4F32-B996-3EE0FCF522D5/62/Mughthesec<br>
		user: 501<br>
		args: (<br>
		&nbsp;&nbsp;&nbsp;"/tmp/F3A53281-D3FA-4F32-B996-3EE0FCF522D5/62/Mughthesec",<br>
		&nbsp;&nbsp;&nbsp;2,<br>
		&nbsp;&nbsp;&nbsp;na,<br>
		&nbsp;&nbsp;&nbsp;na,<br>
		&nbsp;&nbsp;&nbsp;"F3A53281-D3FA-4F32-B996-3EE0FCF522D5"<br>
		)<br>
		ancestors: (<br>
		&nbsp;&nbsp;&nbsp;490,<br>
		&nbsp;&nbsp;&nbsp;1<br>
		)<br>
		binary: <br>
		name: <b>Mughthesec</b><br>
		path: /private/tmp/F3A53281-D3FA-4F32-B996-3EE0FCF522D5/62/Mughthesec<br>
		signing info: {<br>
		&nbsp;&nbsp;&nbsp;signatureStatus = "-67062";<br>
		} (isApple: 0 / isAppStore: 0)<br>
		<br>
		</span>
		</div>
		<br>
		The process monitor also shows this process (<span class="n3rdFont">Mughthesec</span>, pid: 532), spawning executing the <span class="n3rdFont">'i'</span> process out of <span class="n3rdFont">/tmp</span>: 
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		# procMonitor<br>
		<br>
		process start: <br>
		pid: 568<br>
		path: /private/tmp/5E0BE2D2-7AD7-4005-8B1C-A635675BB4FD/15261EBB-ED0B-46DA-8C3B-AE8C02E802B3/i<br>
		user: 501<br>
		args: (<br>
		&nbsp;&nbsp;&nbsp;"/tmp/5E0BE2D2-7AD7-4005-8B1C-A635675BB4FD/15261EBB-ED0B-46DA-8C3B-AE8C02E802B3/i",<br>
		&nbsp;&nbsp;&nbsp;"5E0BE2D2-7AD7-4005-8B1C-A635675BB4FD",<br>
		&nbsp;&nbsp;&nbsp;"S+wIS+tmwyirlkak8AAF36JIq8TSRdg...==",<br>
		&nbsp;&nbsp;&nbsp;10<br>
		)<br>
		ancestors: (<br>
		&nbsp;&nbsp;&nbsp;532,<br>
		&nbsp;&nbsp;&nbsp;490,<br>
		&nbsp;&nbsp;&nbsp;1<br>
		)<br>
		binary:<br>
		name: <b>i</b><br>
		path: /private/tmp/5E0BE2D2-7AD7-4005-8B1C-A635675BB4FD/15261EBB-ED0B-46DA-8C3B-AE8C02E802B3/i<br>
		signing info: {<br>
		&nbsp;&nbsp;&nbsp;signatureStatus = "-67062";<br>
		} (isApple: 0 / isAppStore: 0)<br>
		<br>
		</span>
		</div>
		<br>
		This <span class="n3rdFont">'i'</span> process is what persists and starts 'launch agent' instance of <span class="n3rdFont">Mughthesec</span>. We can see this, again, via the process monitor which shows process <span class="n3rdFont">'i'</span> (pid: 568) invoking <span class="n3rdFont">launchctl</span> with the <span class="n3rdFont">'load'</span> command line option and the path to the launch agent plist:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		# procMonitor<br>
		<br>
		process start: <br>
		pid: 576<br>
		path: /bin/launchctl<br>
		user: 501<br>
		args: (<br>
		&nbsp;&nbsp;&nbsp;<b>"/bin/launchctl",<br>
		&nbsp;&nbsp;&nbsp;load,<br>
		&nbsp;&nbsp;&nbsp;"/Users/user/Library/LaunchAgents/com.Mughthesec.plist"</b><br>
		)<br>
		ancestors: (<br>
		&nbsp;&nbsp;&nbsp;568,<br>
		&nbsp;&nbsp;&nbsp;532,<br>
		&nbsp;&nbsp;&nbsp;490,<br>
		&nbsp;&nbsp;&nbsp;1<br>
		)<br>
		binary: name: launchctl<br>
		path: /bin/launchctl<br>
		signing info: {<br>
		&nbsp;&nbsp;&nbsp;signatureStatus = 0;<br>
		&nbsp;&nbsp;&nbsp;signedByApple = 1;<br>
		&nbsp;&nbsp;&nbsp;signingAuthorities =     (<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Software Signing",<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Apple Code Signing Certification Authority",<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Apple Root CA"<br>
		    );<br>
		} (isApple: 1 / isAppStore: 0)<br>
		<br>
		</span>
		</div>
		<br>
		Ok, so let's take a closer look at the <span class="n3rdFont">Mughthesec</span> launch agent and binary. The <span class="n3rdFont">Mughthesec</span> launch agent plist is located at <span class="n3rdFont">~/Library/LaunchAgents/com.Mughthesec.plist</span>:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		$ cat ~/Library/LaunchAgents/com.Mughthesec.plist<br>
		<br>
		&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br>
		&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;<br>
		&lt;plist version=&quot;1.0&quot;&gt;<br>
		&lt;dict&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;key&gt;Label&lt;/key&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;string&gt;com.Mughthesec&lt;/string&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;key&gt;ProgramArguments&lt;/key&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;array&gt;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;string&gt;<b>/Users/user/Library/Application Support/com.Mughthesec/Mughthesec</b>&lt;/string&gt;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;string&gt;r&lt;/string&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;/array&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;key&gt;RunAtLoad&lt;/key&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;true /&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;key&gt;StartInterval&lt;/key&gt;<br>
		&nbsp;&nbsp;&nbsp;&lt;integer&gt;14400&lt;/integer&gt;<br>
		&lt;/dict&gt;<br>
		&lt;/plist&gt;<br>
		<br>
		</span>
		</div>
		<br>
		From this plist we can see that the launch agent will:
		<ol>
		<li>execute a binary: <span class="n3rdFont">~/Library/Application Support/com.Mughthesec/Mughthesec</span></li>
		<li>pass in a parameter: <span class="n3rdFont">'r'</span></li>
		<li>be automatically started whenever the user logs in, as <span class="n3rdFont">'RunAtLoad'</span> is set to <span class="n3rdFont">true</span></li>
		</ol>
		<br>
		The <span class="n3rdFont">'Mughthesec'</span> binary,  <span class="n3rdFont">~/Library/Application Support/com.Mughthesec/Mughthesec</span>, is unsigned:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		$ codesign -dvvv "~/Library/Application Support/com.Mughthesec/Mughthesec"<br>
		<br>
		~/Library/Application Support/com.Mughthesec/Mughthesec: <b>code object is not signed at all</b><br>
		<br>
		</span>
		</div>
		<br>
		It is also (currently) undetected by any AV engines on VirusTotal:
		<br><br>
		<span><img src="../images/blog/blog_0x20/vtMughthesec.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		Running <span class="n3rdFont">strings</span> shows some embedded URLs:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		$ strings -a ~/Library/Application Support/com.Mughthesec/Mughthesec | grep http<br>
		<br>
		http://api.mughthesec.com/ai<br>
		http://api.mughthesec.com/l<br>
		<br>
		</span>
		</div>
		<br>
		Attempting to access those URLs in a browser, appears to result in an error: 
		<br><br>
		<span><img src="../images/blog/blog_0x20/offline.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		However, the host <span class="n3rdFont">mughthesec.com</span> does appear to be online, resolving to <span class="n3rdFont">192.64.119.107</span>:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		$ nslookup mughthesec.com<br>
		<br>
		Non-authoritative answer:<br>
		Name:	mughthesec.com<br>
		Address: <b>192.64.119.107</b><br>
		<br>
		</span>
		</div>
		<br>
		This IP address, <span class="n3rdFont">192.64.119.107</span>, appears to be rather malicious:
		<br><br>
		<span><img src="../images/blog/blog_0x20/vtIPAddr.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		So what does the <span class="n3rdFont">Mughthesec</span> binary actually do? Lets take a peek! However, I want to point out that I've learned (the hard way) that spending a large amount of time reversing adware can quickly drive one somewhat mad...so here, we'll only perform a cursory look.
		<br>
		<br>
		A common tactic of adware is to hijack the victims browser (homepage, inject ads, etc) for financial gain. <span class="n3rdFont">Mughthesec</span> (which is installed when the user "agrees" to install "Safe Finder") appears to conform to goal. Specifically we can see that Safari's home page has been set to <span class="n3rdFont">http://default27061330-a.akamaihd.net/s?q=@@@&amp;_pg=564D4420-C090-470B-9C13-6760B31264E7</span>
		<br><br>
		<span><img src="../images/blog/blog_0x20/safariHomePage.png" width="700" style="display:block; margin:auto;"/></span>
		<br>
		If we open Safari; indeed the home page has been hijacked - though in a seemingly innocuous way. It simply displays a rather 'clean' search page - though looking at the source, we can the inclusion of several scripts 'Safe Finder' scripts:
		<br><br>
		<span><img src="../images/blog/blog_0x20/safariHome.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		Also, examining the installed extensions we can see that an "Any Search" browser extension was installed:
		<br><br>
		<span><img src="../images/blog/blog_0x20/safariExtension.png" width="650" style="display:block; margin:auto;"/></span>
		<br>
		Searches are funneled thru various affiliates, before ending up being serviced by Yahoo Search. However, 'Safe Finder' logic (such as an icon, and likely other scripts) are injected into all search results:
		<br><br>
		<span><img src="../images/blog/blog_0x20/safariSearchResults.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		At this point, I'm calling it a night! It appears that <span class="n3rdFont">Mughthesec</span> is simply some 'run-of-the-mill' macOS malware. But is it new? Not likely. According to the mac adware analysis guru, Thomas Reed; this "looks like a new variant of something we call OperatorMac":  
		<br><br>
		<span><img src="../images/blog/blog_0x20/tReedTweet.png" width="550" style="display:block; margin:auto;"/></span>
		<br>
		Moreover, <a class="inlineLink" href="https://twitter.com/@noarfromspace">@noarfromspace</a> pointed me towards several samples from earlier this year (spring?) that appear to be related:
		<br><br>
		<span><img src="../images/blog/blog_0x20/oldSamples.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		<span style="color: #95c02d; font-weight: bold;">Conclusion</span><br>
		In the blog post, we sought to answer the question, "What is <span class="n3rdFont">Mughthesec</span>?" The answer; likely a new variant of the 'SafeFinder/OperatorMac' adware. Yes it's rather unsophisticated macOS malware, but it's installer is signed (to 'bypass' Gatekeeper) and at the time of this analysis no anti-virus engines were detected it....and mac users are being infected :|
		<br>
		<br>
		Speaking of infection, due to the fact that the installer is masquerading as Flash Player installer, it's likely that this adware is relying on common infection techniques to gain new victims. If I had to guess its infection vector is likely one (or all?) of the following:
		<ul style="list-style-type: square;">
		<li>fake popups on 'shady' websites</span></li><br>
		<li>malicious ads, perhaps on legit websites</span></li><br>
		</ul>
		Either way, user-interaction is likely required.
		<br>
		<br>
		In terms of detection, we showed how <a class="inlineLink" href="https://objective-see.com/products/blockblock.html">BlockBlock</a> will alert when the adware goes to persist. Neat!
		<br><br>
		<a class="inlineLink" href="https://objective-see.com/products/knockknock.html">KnockKnock</a> can also be used to (after the fact), to reveal infections. For example, it can reveal the presence of the unsigned launch agent:
		<br><br>
		<span><img src="../images/blog/blog_0x20/kkLaunchAgent.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		And what about the malicious browser extension? Yup, <a class="inlineLink" href="https://objective-see.com/products/knockknock.html">KnockKnock</a> can show that too:
		<br><br>
		<span><img src="../images/blog/blog_0x20/kkExtension.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		Hooray! Objective-See FTW ❤️
		<br>
		<br>
		To manually disinfect <span class="n3rdFont">Mughthesec</span>:
		<ul style="list-style-type: square;">
		<li>unload the launch agent via: <span class="n3rdFont">launchctl unload ~/Library/LaunchAgents/com.Mughthesec.plist</span></li><br>
		<li>delete <span class="n3rdFont">~/Library/Application Support/com.Mughthesec/Mughthesec</span></li><br>
		<li>delete <span class="n3rdFont">~/Library/LaunchAgents/com.Mughthesec.plist</span></li><br>
		<li>delete the 'Any Search' browser extension</span></li><br>
		</ul>
		However, as we saw, the Installer application could install other 'adware' - so it's probably best to just reinstall macOS. Instructions <a class="inlineLink" href="https://support.apple.com/en-us/HT204904 ">here</a>.
		<br>
		<br>
		<div style="border: 1px solid #95c02d; padding: 10px; margin-top:15px; font-size: 15px;">
		<span class="n3rdFont">
		love these blog posts &amp; tools? you can support them via <a class="inlineLink" href="https://www.patreon.com/objective_see"><span class="n3rdFont">patreon</span></a>! Mahalo :) 
		<br>
		</span>
		</div>
		<br>
		<br>
		<br>
		</span>
		</div>
	</section>	
</div>	

<!-- footer, copyright notice and social media icons -->
<nav role="footer">
<ul>
	<li class="copyright">&copy; 2017 objective-see llc</li>
	<li><a href="mailto:contact@objective-see.com" class="menubutton icon"><span class="ss-icon ss-social">&#x2709;</span></a></li>
	<li><a href="https://twitter.com/objective_see" class="menubutton icon"><span class="ss-icon ss-social">&#xF611;</span></a></li>
	<li><a href="../rss.xml" class="menubutton icon"><span class="ss-icon">&#xE310;</span></a></li>
	<li>
        <a href="https://www.patreon.com/bePatron?u=4857001" class="menubutton icon donate" style="font-size: 18px; padding-top: 14px;">donate!</a>
    </li>
</ul>
</nav>

</body>
</html>
