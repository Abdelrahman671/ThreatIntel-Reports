<html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#">

<head>
<title>Objective-See</title>

<meta property="og:title" content="HandBrake Hacked! OSX/Proton (re)Appears" />
<meta property="og:type" content="website" />
<meta property="og:image" content="https://objective-see.com/images/blog/blog_0x1D/authPrompt.png" />

<link rel="shortcut icon" href="../images/logoApple.ico">
<link rel="stylesheet" type="text/css" href="../css/style.css">
<link href="../css/ss-social.css" rel="stylesheet" />
<link href="../css/ss-standard.css" rel="stylesheet" />
<link href="../css/timeline.css" rel="stylesheet" />
<link href="../css/table.css" rel="stylesheet" />


<link href="https://objective-see.com/rss.xml" rel="alternate" type="application/rss+xml" title="Objective-See's Blog Feed" />

<script src="../js/analytics.js"></script>

<meta http-equiv="cache-control" content="max-age=0" />
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="expires" content="0" />
<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
<meta http-equiv="pragma" content="no-cache" />

</head>

<body>
<nav role="main">
<ul>
	<li><a href="../index.html" class="menubutton logo">Objective See</a></li>
	<li><a href="../about.html" class="menubutton about">about</a></li>
	<li><a href="../blog.html" class="menubutton blog visited">blog</a></li>
	<li><a href="../malware.html" class="menubutton malware">malware</a></li>
	<li><a href="../products.html" class="menubutton products">products</a></li>
</ul>
</nav>

<div class="pageContent">
	<hr class="gradient">
	<br>
	<section class="blogContent">
		<div class="blogTitle">HandBrake Hacked!</div>
		<div class="blogSubTitle">&rsaquo; osx/proton (re)appears</div>
		<div class="blogDate">5/06/2017</div>
		
		<div style="border: 1px solid #95c02d; padding: 10px; margin-top:15px; font-size: 15px;">
		<span class="n3rdFont">
		love these blog posts? support my tools &amp; writing on <a class="inlineLink" href="https://www.patreon.com/objective_see"><span class="n3rdFont">patreon</span></a>! Mahalo :) 
		<br><br>
		<span>
		<a class="inlineLink" href="https://www.patreon.com/objective_see">
			<img src="../images/blog/blog_0x1D/patreon.png" width="700" style="display:block; margin:auto;"/>
		</a>
		</span>
		<br>
		</span>
		</div>
		<br>
		<div style="border: 1px solid red; padding: 10px; margin-top:15px; font-size: 15px;">
		Want to play along? I've shared the malware, which can be downloaded <a class="inlineLink" href="https://objective-see.com/downloads/malware/Proton.zip">here</a> (password: <span class="n3rdFont">infect3d</span>). Please don't infect yourself!
		</div>
		<br>
		<span style="color: #95c02d; font-weight: bold;">Background</span><br>
		Today started like pretty much every other day in Hawaii, surf &amp; beach ;)
		<br><br>
		<span><img src="../images/blog/blog_0x1D/beach.jpg" width="600" style="display:block; margin:auto;"/></span>
		<br>
		However, around noon, Eric Holtam (<a class="inlineLink" href="https://twitter.com/eholtam">@eholtam</a>) tweeted the following:
		<br><br>
		<span><img src="../images/blog/blog_0x1D/tweet.png" width="500" style="display:block; margin:auto;"/></span>
		<br>
		Mahalo to <a class="inlineLink" href="https://twitter.com/mikeymikey">@mikeymikey</a> to notifying me about this tweet!
		<br>
		<br>
		Handbrake is an 'open-source video transcoder.' Heading over to their website (handbrake.fr), we can see they've added a 'Security Alert' for Mac Users:
		<br><br>
		<span><img src="../images/blog/blog_0x1D/alert.png" width="600" style="display:block; margin:auto;"/></span>
		<br>
		Following the url, links to a rather dire security alert, <a class="inlineLink" href="https://forum.handbrake.fr/viewtopic.php?f=33&t=36364">Mirror Download Server Compromised</a>:
		<div style="border: 1px solid red; padding: 10px; margin-top:15px; font-size: 13px;">
		<span class="n3rdFont">
		<br>
		<b>SECURITY WARNING</b>
		<br>
		Anyone who has downloaded HandBrake on Mac between [02/May/2017 14:30 UTC] and [06/May/2017 11:00 UTC] needs to verify the SHA1 / 256 sum of the file before running it.<br>
		<br>
		<br>Anyone who has installed HandBrake for Mac needs to verify their system is not infected with a Trojan. You have 50/50 chance if you've downloaded HandBrake during this period.<br>
		<br>
		</span>
		</div>
		<br>
		Yikes!
		<br><br>
		The security alert also provided a hash of the disk image (<span class="n3rdFont">0935a43ca90c6c419a49e4f8f1d75e68cd70b274</span>) that was trojaned by the hackers.
		<br><br>
		Hopping over to VirusTotal, we can see that while this .dmg was submitted for analysis, no anti-virus engines are currently flagging it. No surprise there :|
		<br><br>
		<span><img src="../images/blog/blog_0x1D/vtHandbrake.png" width="750" style="display:block; margin:auto;"/></span>
		<br>		
		<span style="color: #95c02d; font-weight: bold;">Analysis</span><br>
		Once we have a copy of the infected .dmg (I've shared it <a class="inlineLink" href="https://objective-see.com/downloads/malware/Proton.zip">here</a> password: infect3d), analysis can commence. Since it's the weekend - I'm going to take the 'lazy' (efficient?) route and basically just run the infected application and see what happens :)
		<br>
		<br>
		In order to facilitate malware analysis I wrote a simple user-mode 'process monitor' library that allows us to easy track what application is doing - in terms of spawning other processes, etc: 
		<div style="border: 1px solid #95c02d; padding: 10px; margin-top:15px; font-size: 13px;">
		<span class="n3rdFont">
		<br>
		ProcessMonitor* procMon = nil;
        <br>
        <br>
        <span style="color: #006600;">//block</span><br>
        ProcessCallbackBlock block = ^(Process* newProcess)<br>
        {<br>
        &nbsp;&nbsp;NSLog(@"new process: %@", newProcess);<br>
        };<br>
        <br>
        <br>
        <span style="color: #006600;">//start monitoring!</span><br>
        procMon = [[ProcessMonitor alloc] init];<br>
        [procMon start:block];<br>
        <br>
        <br>
        <span style="color: #006600;">//run loop</span><br>
        [[NSRunLoop currentRunLoop] run];<br>
		</span>
		</div>
		<br>
		Running this code and executing the infected Handbrake application, we can see exactly what's going on:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		[new process]<br>
			pid=1368<br>
			binary=/Volumes/HandBrake/HandBrake.app/Contents/MacOS/HandBrake<br>
			signatureStatus = "-67062 (unsigned)<br>
		<br>
		[new process]<br>
			pid=1370<br>
			binary=path=/bin/sh<br>
			args: "-c", "pgrep -x activity_agent &amp;&amp; echo Queue.hbqueue"<br>
		<br>
		[new process]<br>
			pid=1371<br>
			binary=/usr/bin/unzip<br>
			args: "-P", "qzyuzacCELFEYiJ52mhjEC7HYl4eUPAR1EEf63oQ5iTkuNIhzRk2JUKF4IXTRdiQ", "/Volumes/HandBrake/HandBrake.app/Contents/Resources/HBPlayerHUDMainController.nib", "-d", "/tmp"<br>
		<br>
		[new process]<br>
			pid=1372<br>
			binary=/usr/bin/open<br>
			args: "/tmp/HandBrake.app"<br>
		<br>
		</span>
		</div>
		<br>
		So yah, when run, the infected Handbrake application:
		<ol>
		<li>unzips <span class="n3rdFont">Contents/Resources/HBPlayerHUDMainController.nib</span> to <span class="n3rdFont">/tmp/HandBrake.appâ€¨</span>. This 'nib' is a password protected zip file who's password is: <span class="n3rdFont">qzyuzacCELFEYiJ52mhjEC7HYl4eUPAR1EEf63oQ5iTkuNIhzRk2JUKF4IXTRdiQ</span></li><br>
		<li>launches (opens) <span class="n3rdFont">/tmp/HandBrake.app</span></li>
		</ol>
		<br>
		Once the <span class="n3rdFont">/tmp/HandBrake.app</span> is launched, it displays a (fake) authentication popup - which is how the malware attempts to elevate its privileges: 
		<br><br>
		<span><img src="../images/blog/blog_0x1D/authPrompt.png" width="500" style="display:block; margin:auto;"/></span>
		<br>		
		<br>
		If the user is tricked into providing a user name and password the malware will install itself (<span class="n3rdFont">/tmp/HandBrake.app</span>) persistently as: <span class="n3rdFont">'activity_agent.app'</span>.
		<br>
		<br>
		Thankful, BlockBlock can alert us of this fact:
		<br><br>
		<span><img src="../images/blog/blog_0x1D/blockblock.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		Dumping the Launch Agent plist file (<span class="n3rdFont">fr.handbrake.activity_agent.plist</span>), we can see the malware has been set to automatically start each time the user logs in:
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br>
		&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;<br>
		&lt;plist version=&quot;1.0&quot;&gt;<br>
		&lt;dict&gt;<br>
        &nbsp;&nbsp;&lt;key&gt;KeepAlive&lt;/key&gt;<br>
        &nbsp;&nbsp;&lt;true/&gt;<br>
        &nbsp;&nbsp;...<br>
 	  	&nbsp;&nbsp;&lt;key&gt;ProgramArguments&lt;/key&gt;<br>
        &nbsp;&nbsp;&lt;array&gt;<br>
        &nbsp;&nbsp;&nbsp;&nbsp;&lt;string&gt;/Users/user/Library/RenderFiles/activity_agent.app/<br>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contents/MacOS/activity_agent&lt;/string&gt;<br>
        &nbsp;&nbsp;&lt;/array&gt;<br>
        &nbsp;&nbsp;&lt;key&gt;RunAtLoad&lt;/key&gt;<br>
        &nbsp;&nbsp;&lt;true/&gt;<br>
        <br>
		&lt;/dict&gt;<br>
		&lt;/plist&gt;<br>
		</span>
		</div>
		<br>
		According to the HandBrake advisory, the malware's peristent component, <span class="n3rdFont">activity_agent.app</span> is a 'a new variant of <span class="n3rdFont">OSX.PROTON</span>'
		<br><br>
		Proton (variant 'A') was discussed earlier this year by the media (for example, see: <a class="inlineLink" href="https://www.hackread.com/hackers-selling-undetectable-proton-mac-malware/">"Hackers Selling Undetectable Proton Malware for macOS in 40 BTC"</a>)
		<br>
		<br>
		Though Apple released an XProtect signature for it, the sample was never publicly shared. However, the malware author was kind enough to describe ('advertise') its capabilties:
		<br>
		<br>
		<span><img src="../images/blog/blog_0x1D/capabilities.jpg" width="600" style="display:block; margin:auto;"/></span>
		<br>
		With the HandBrake hack, finally now we have a variant for analysis :). Initial triage confirms, yes this a variant of OSX/Proton ('B'), although some of the features found in the 'A' variant, (such as the ability to take screenshots) are not present. 
		<br>
		<br>
		Again, unsurprisingly this new variant of OSX/Proton is also currently undetected by any anti-virus engines on VirusTotal:
		<br><br>
		<span><img src="../images/blog/blog_0x1D/vtProton.png" width="750" style="display:block; margin:auto;"/></span>
		<br>
		Interested in the technical details of OSX/Proton? I wrote it in a new blog, <a class="inlineLink" href="https://objective-see.com/blog/blog_0x1F.html">"OSX/Proton.B (a brief analysis, at 6 miles up)"</a>.
		<br>
		<br>
		<span style="color: #95c02d; font-weight: bold;">Conclusions</span><br>
		As with KeRanger and Keydnap, hackers targeted an official distribution website of legitimate macOS software. With access to HandBrake's mirror, they trojaned the legitimate application, meaning any user who downloaded the application would inadvertently infect themselves!
		<br>
		<br>
		Luckily the trojaned disk image was only online for a few days. However as is often (always!?) the case, no anti-virus products flagged the malware :( So if you recently download HandBrake, unless you were running something like BlockBlock you'd likely have been infected. 
		<br>
		<br>
		To check if you're infected, look for the following:
		<br><br>
		<span><img src="../images/blog/blog_0x1D/taskExplorer.png" width="800" style="display:block; margin:auto;"/></span>
		<br>
		<ul style="list-style-type: square;">
		<li>a process named <span class="n3rdFont">'activity_agent'</span></li><br>
		<li>an application name <span class="n3rdFont">'activity_agent.app</span> in <span class="n3rdFont">~/Library/RenderFiles/</span></li><br>
		<li>a plist file: <span class="n3rdFont">'~/Library/LaunchAgents/fr.handbrake.activity_agent.plist</span></li><br>
		</ul>
		Apple has now also pushed out an XProtect signature, meaning that all new infections should be twarted. Hooray! 
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 14px;">
		<span class="n3rdFont">
		<br>
		$ cat /System/Library/CoreServices/XProtect.bundle/Contents/Resources/XProtect.yara<br>
		<br>
		private rule Macho<br>
		{<br>
    	&nbsp;&nbsp;meta:<br>
        &nbsp;&nbsp;description = "private rule to match Mach-O binaries"<br>
    	&nbsp;&nbsp;condition:<br>
        &nbsp;&nbsp;uint32(0) == 0xfeedface or uint32(0) == 0xcefaedfe or uint32(0) == 0xfeedfacf<br>
        &nbsp;&nbsp;or uint32(0) == 0xcffaedfe or uint32(0) == 0xcafebabe or uint32(0) == 0xbebafeca<br>
        <br>
		}<br>
		<br>
		rule XProtect_OSX_Proton_B<br>
		{<br>
    	&nbsp;&nbsp;meta:<br>
        &nbsp;&nbsp;description = "OSX.Proton.B"<br>
        <br>
    	&nbsp;&nbsp;condition:<br>
        &nbsp;&nbsp;<b>Macho and filesize &lt; 800000 and hash.sha1(0, filesize) == <br>
        &nbsp;&nbsp;&nbsp;&nbsp;"a8ea82ee767091098b0e275a80d25d3bc79e0cea"</b><br>
		}<br>
		<br>
		</span>
		</div>
		<br>
		<br>
		Ok, so kudos to Apple for the quick turn around on signatures....but the signature is:
		<ul style="list-style-type: square;">
		<li>just a SHA-1 hash</li>
		<li>matches on the trojaned Handbrake binary (<span class="n3rdFont">HandBrake.app/Contents/MacOS/HandBrake</span> on the .dmg)</li>
		<div style="padding: 10px; margin-top:10px; background-color:black; color:lime; font-size: 15px;">
		<span class="n3rdFont">
		$ shasum -a 1 /Volumes/HandBrake/HandBrake.app/Contents/MacOS/HandBrake<br> 
		<br>
		a8ea82ee767091098b0e275a80d25d3bc79e0cea  /Volumes/HandBrake/HandBrake.app/Contents/MacOS/HandBrake<br>
		</span>
		</div>
		</ul>
		This means if the malware authors used any other infection vector, or even just recompiled the trojaned binary, this signature would no longer flag the malware :/ Do people still say 'yolo'?
		<br>
		<br>
		And even if you don't have source code, you can just flip a single bit in the binary to thwart the signature. To test this, I changed the final byte in <span class="n3rdFont">HandBrake.app/Contents/MacOS/HandBrake</span> from an <span class="n3rdFont">0x00</span> to <span class="n3rdFont">0xFF</span>. While this doesn't impact functionality of the binary, it changes its SHA-1 hash, meaning the malware is no longer blocked by XProtect. The following, first shows XProtect 'blocking' OSX/Proton.B. However, a second modified version is allowed to run, as the signature no longer matches:
		<br><br>
		<span><img src="../images/blog/blog_0x1D/protonC.gif" width="800" style="display:block; margin:auto;"/></span>
		<br>
		<br>
		<br>
		<br>
		</span>
		</div>
	</section>	
</div>	

<!-- footer, copyright notice and social media icons -->
<nav role="footer">
<ul>
	<li class="copyright">&copy; 2017 objective-see llc</li>
	<li><a href="mailto:contact@objective-see.com" class="menubutton icon"><span class="ss-icon ss-social">&#x2709;</span></a></li>
	<li><a href="https://twitter.com/objective_see" class="menubutton icon"><span class="ss-icon ss-social">&#xF611;</span></a></li>
	<li><a href="../rss.xml" class="menubutton icon"><span class="ss-icon">&#xE310;</span></a></li>
	<li>
        <a href="https://www.patreon.com/bePatron?u=4857001" class="menubutton icon donate" style="font-size: 18px; padding-top: 14px;">donate!</a>
    </li>
</ul>
</nav>

</body>
</html>
