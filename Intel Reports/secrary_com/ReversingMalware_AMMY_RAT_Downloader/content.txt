<!DOCTYPE html> <html> <head> <meta charset="utf-8"> <meta name="apple-mobile-web-app-capable" content="yes"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1"> <title> A Brief Overview of the AMMYY RAT Downloader | secrary[dot]com </title> <meta name="description" content=" secrary[dot]com::blog "> <meta name="keywords" content="reverse engineering, malware, windows, android, internals, blog"> <meta name="HandheldFriendly" content="True"> <meta name="MobileOptimized" content="320"> <!-- Social: Facebook / Open Graph --> <meta property="og:type" content="website"> <meta property="og:url" content="https://secrary.com/ReversingMalware/AMMY_RAT_Downloader/"> <meta property="og:title" content=" A Brief Overview of the AMMYY RAT Downloader | secrary[dot]com "> <meta property="og:image" content="https://secrary.com"> <meta property="og:description" content=" secrary[dot]com::blog "> <meta property="og:site_name" content="@_qaz_qaz"> <meta property="og:locale" content="en_US"> <!-- Social: Twitter --> <meta name="twitter:card" content="summary_large_image"> <meta name="twitter:site" content="@_qaz_qaz"> <meta name="twitter:title" content=" A Brief Overview of the AMMYY RAT Downloader | secrary[dot]com "> <meta name="twitter:description" content=" secrary[dot]com::blog "> <meta name="twitter:image:src" content="https://secrary.com"> <!-- Social: Google+ / Schema.org --> <meta itemprop="name" content=" A Brief Overview of the AMMYY RAT Downloader | secrary[dot]com "> <meta itemprop="description" content=" secrary[dot]com::blog "> <meta itemprop="image" content="https://secrary.com"> <!-- Canonical link tag --> <link rel="canonical" href="https://secrary.com/ReversingMalware/AMMY_RAT_Downloader/"> <link rel="alternate" type="application/rss+xml" title="secrary[dot]com" href="https://secrary.com/feed.xml"> <!-- rel prev and next --> <link rel="stylesheet" href="https://secrary.com/assets/css/main.css"> </head> <body> <main class="wrapper"> <header class="site-header"> <nav class="nav"> <div class="container"> <h1 class="logo"><a href="https://secrary.com/">secrary<span>[dot]com</span></a></h1> <ul class="navbar"> <li><a href="https://secrary.com/about">about me</a></li> <!-- <li><a href="https://secrary.com/feed.xml" target="_blank">RSS</a></li> --> </ul> </div> </nav> </header> <article class="post container" itemscope itemtype="http://schema.org/BlogPosting" > <header class="post-header"> <h1 class="post-title" itemprop="name headline">A Brief Overview of the AMMYY RAT Downloader</h1> </header> <div class="post-content" itemprop="articleBody"> <p>SHA-256: <a href="https://www.virustotal.com/#/file/963f1735e9ee06c66fdf3a831d7c262bc8bce0d7155e37f9a5aa2677e0a6090c/detection">963f1735e9ee06c66fdf3a831d7c262bc8bce0d7155e37f9a5aa2677e0a6090c</a></p> <p>You can download the malware sample from <a href="https://malware-traffic-analysis.net/2018/05/25/index.html">malware-traffic-analysis.net</a></p> <h1 id="stage-1">Stage 1</h1> <p>The main function is full of junk instructions, the most interesting function inside the <code class="language-plaintext highlighter-rouge">main</code> is <code class="language-plaintext highlighter-rouge">decode_n_call</code> function near the end:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530771-b5f3355c-72e0-11e8-89cd-9c0aab2483ef.PNG" alt="1" /></p> <p>Inside the <code class="language-plaintext highlighter-rouge">decode_n_call</code> function, it allocated memory, decodes a data from <code class="language-plaintext highlighter-rouge">0x0433220</code> address and jumps to it via <code class="language-plaintext highlighter-rouge">call</code> instruction:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530774-b64df87a-72e0-11e8-91d0-18ec0ab2f738.png" alt="2" /></p> <p><img src="https://user-images.githubusercontent.com/16405698/41530896-193847ce-72e1-11e8-9686-68e347e5f64b.gif" alt="3" /></p> <p>It allocates two memory blocks, each <code class="language-plaintext highlighter-rouge">0x3000</code> length, with <code class="language-plaintext highlighter-rouge">PAGE_EXECUTE_READWRITE</code> permission:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530775-b6a7125c-72e0-11e8-9cd0-a44e2a24fa7b.PNG" alt="4" /></p> <p>After that, it writes some decoded data inside the first allocated memory:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530897-1ad00f90-72e1-11e8-9e07-531578b07dab.gif" alt="5" /></p> <p>Also, there is another loop which decodes/decrypts once again the written data in the memory:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530899-1b1fe222-72e1-11e8-9ab7-2234be8770db.gif" alt="6" /></p> <p>Seems like it’s <code class="language-plaintext highlighter-rouge">PE</code> file, but still encoded, not valid yet.</p> <p>Function <code class="language-plaintext highlighter-rouge">0x30A70</code> gets two arguments, the encoded/encrypted data and the second allocated memory, the function returns a decoded/decrypted <code class="language-plaintext highlighter-rouge">PE</code> file via the second argument:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530900-1b51cad0-72e1-11e8-8976-c739e2efd79c.gif" alt="7" /></p> <p>It removes the <code class="language-plaintext highlighter-rouge">main</code> executable from the memory and copies recently decoded/decrypted code:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530901-1b87c16c-72e1-11e8-8b44-dfb94bc5ac92.gif" alt="8" /></p> <p>Section maps:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530776-b6fe3780-72e0-11e8-95ff-da62d118d39f.PNG" alt="9" /></p> <p>Inside <code class="language-plaintext highlighter-rouge">0x30730</code> (offset <code class="language-plaintext highlighter-rouge">0x730</code>) function it build IAT for the new <code class="language-plaintext highlighter-rouge">PE</code> file:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530777-b7606ef0-72e0-11e8-8da5-6f3c312b1957.PNG" alt="10" /></p> <p>After that, it jumps to the entry point of the new <code class="language-plaintext highlighter-rouge">PE</code> file:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530902-1bb8683a-72e1-11e8-9575-7fe85e4c24e9.gif" alt="11" /></p> <p>Instead of continuing analysis, it’s much easier to dump the new <code class="language-plaintext highlighter-rouge">PE</code> and analyze it separately.</p> <h1 id="stage-2">Stage 2</h1> <p>The second <code class="language-plaintext highlighter-rouge">PE</code> is full of junk instructions, too. The interesting part starts at <code class="language-plaintext highlighter-rouge">0x0401EED</code> location.</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530778-b7da7c86-72e0-11e8-8b62-51a2e1239ef3.PNG" alt="12" /></p> <p>Inside the <code class="language-plaintext highlighter-rouge">sub_403B10</code> function, it tries to delete <code class="language-plaintext highlighter-rouge">Settings</code>, <code class="language-plaintext highlighter-rouge">Microsoft\\Enc</code>, <code class="language-plaintext highlighter-rouge">AMMYY</code>, <code class="language-plaintext highlighter-rouge">Foundation</code> and <code class="language-plaintext highlighter-rouge">Foundation1</code> directories, also following files: <code class="language-plaintext highlighter-rouge">wmihost.exe</code>, <code class="language-plaintext highlighter-rouge">settings3.bin</code>, <code class="language-plaintext highlighter-rouge">wmites.exe</code>, <code class="language-plaintext highlighter-rouge">wsus</code> from different directories:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530779-b817fbec-72e0-11e8-84d8-fc3deb3dc8d4.PNG" alt="13" /></p> <p>It uses <code class="language-plaintext highlighter-rouge">sub_404450</code> to get a function addresses based on some kind of hash, which is passed via the second argument:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530905-1c74c7b4-72e1-11e8-84f8-6472feec9e20.gif" alt="14" /></p> <p>The <code class="language-plaintext highlighter-rouge">0x403DE0</code> function gets process name as the argument and terminates the corresponding process:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530782-b8827dd2-72e0-11e8-8677-24527f518f48.PNG" alt="16" /></p> <p><img src="https://user-images.githubusercontent.com/16405698/41530780-b84cfe32-72e0-11e8-91a9-124f56af1b4c.PNG" alt="15" /></p> <p>It executes following commands using <code class="language-plaintext highlighter-rouge">ShellExecuteW</code> function: <code class="language-plaintext highlighter-rouge">cmd /C net.exe stop ammyy</code>, <code class="language-plaintext highlighter-rouge">cmd /C sc delete ammyy</code>, <code class="language-plaintext highlighter-rouge">cmd /C net.exe stop foundation</code> and <code class="language-plaintext highlighter-rouge">cmd /C sc delete foundation</code></p> <p><img src="https://user-images.githubusercontent.com/16405698/41530746-aefa3dfe-72e0-11e8-89e0-8ff3b98779f5.PNG" alt="17" /></p> <p>These commands stop the malware if there is one.</p> <p>It generates random name (via <code class="language-plaintext highlighter-rouge">CoCreateGuid</code>) for a <code class="language-plaintext highlighter-rouge">PE</code> file, which it downloads from <code class="language-plaintext highlighter-rouge">http://185.176.221.29/ban3.dat</code>:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530747-af2eccae-72e0-11e8-95b6-546ee3079c54.PNG" alt="18" /></p> <p>Inside <code class="language-plaintext highlighter-rouge">downloadNextStage_bin</code> function, it downloads a file from the URL and saves at above-mentionshed location:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530748-af9deb2a-72e0-11e8-82ad-d85f2d59048e.PNG" alt="19" /></p> <p>It copies the new file to <code class="language-plaintext highlighter-rouge">CSIDL_COMMON_APPDATA\Microsoft Help\\wsus.exe</code> and deletes original one:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530750-afd00434-72e0-11e8-8833-8703c0592eb0.PNG" alt="20" /></p> <p>Inside <code class="language-plaintext highlighter-rouge">sub_402960</code> function if the user is an <code class="language-plaintext highlighter-rouge">admin</code>, it executes above-mentioned commands once again, registers the downloaded <code class="language-plaintext highlighter-rouge">PE</code> file as a service called <code class="language-plaintext highlighter-rouge">foundation</code> and starts it:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530754-b1266bc0-72e0-11e8-991a-1ac7fc8b1112.PNG" alt="21" /></p> <p><img src="https://user-images.githubusercontent.com/16405698/41530757-b226786c-72e0-11e8-8929-17fad5a4ba20.PNG" alt="22" /></p> <p>In the end, it deletes the original, second stage <code class="language-plaintext highlighter-rouge">PE</code> file:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530760-b3025ce2-72e0-11e8-99fb-d0cbfe8288ed.PNG" alt="23" /></p> <p>If the user is not an <code class="language-plaintext highlighter-rouge">admin</code>, it uses a COM object (<code class="language-plaintext highlighter-rouge">taskscd.dll</code>) to create and run the executable (via <code class="language-plaintext highlighter-rouge">scheduled task</code>):</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530762-b3e55c0e-72e0-11e8-8ec5-166d2e0a500c.PNG" alt="24" /></p> <p><img src="https://user-images.githubusercontent.com/16405698/41530764-b44410aa-72e0-11e8-9053-9c872bf18eef.PNG" alt="26" /></p> <p>For the more detailed information look at <code class="language-plaintext highlighter-rouge">sub_402360</code> function.</p> <p>After that, same happens, it deletes the original, second stage <code class="language-plaintext highlighter-rouge">PE</code> file and exist via <code class="language-plaintext highlighter-rouge">TerminateProcess</code> call:</p> <p><img src="https://user-images.githubusercontent.com/16405698/41530767-b4a199be-72e0-11e8-8dda-d436aec9cd9f.PNG" alt="27" /></p> <p>That’s all.</p> <p>That was the brief overview of the <code class="language-plaintext highlighter-rouge">AMMYY RAT Downloader</code>.</p> <p>Thank you for your time.</p> <p>Discuss on <a href="https://www.reddit.com/r/ReverseEngineering/comments/8ryy2u/a_brief_overview_of_the_ammyy_rat_downloader/">Reddit</a></p> <p>Twitter: <a href="https://twitter.com/_qaz_qaz">@_qaz_qaz</a></p> </div> </article> <footer class="site-footer"> <div class="container"> <small class="block" >&copy; 2022 &middot; @_qaz_qaz </small> </div> </footer> </main> <script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'8f3c004caa31648d',t:'MTczNDQ5MTg2MC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body> </html>
