<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">

<head profile="http://gmpg.org/xfn/11">
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

	<title>Manually Enumerating Process Modules &laquo;  RCE Endeavors</title>

	<style type="text/css" media="screen">
		@import url( https://www.codereversing.com/wp-content/themes/classic/style.css );
	</style>

	<link rel="pingback" href="https://www.codereversing.com/xmlrpc.php" />
		<link rel='archives' title='June 2023' href='https://www.codereversing.com/archives/date/2023/06' />
	<link rel='archives' title='May 2023' href='https://www.codereversing.com/archives/date/2023/05' />
	<link rel='archives' title='October 2022' href='https://www.codereversing.com/archives/date/2022/10' />
	<link rel='archives' title='August 2022' href='https://www.codereversing.com/archives/date/2022/08' />
	<link rel='archives' title='July 2022' href='https://www.codereversing.com/archives/date/2022/07' />
	<link rel='archives' title='June 2022' href='https://www.codereversing.com/archives/date/2022/06' />
	<link rel='archives' title='December 2021' href='https://www.codereversing.com/archives/date/2021/12' />
	<link rel='archives' title='November 2021' href='https://www.codereversing.com/archives/date/2021/11' />
	<link rel='archives' title='October 2021' href='https://www.codereversing.com/archives/date/2021/10' />
	<link rel='archives' title='May 2021' href='https://www.codereversing.com/archives/date/2021/05' />
	<link rel='archives' title='March 2017' href='https://www.codereversing.com/archives/date/2017/03' />
	<link rel='archives' title='February 2017' href='https://www.codereversing.com/archives/date/2017/02' />
	<link rel='archives' title='December 2015' href='https://www.codereversing.com/archives/date/2015/12' />
	<link rel='archives' title='September 2015' href='https://www.codereversing.com/archives/date/2015/09' />
	<link rel='archives' title='August 2015' href='https://www.codereversing.com/archives/date/2015/08' />
	<link rel='archives' title='July 2015' href='https://www.codereversing.com/archives/date/2015/07' />
	<link rel='archives' title='June 2015' href='https://www.codereversing.com/archives/date/2015/06' />
	<link rel='archives' title='May 2015' href='https://www.codereversing.com/archives/date/2015/05' />
	<link rel='archives' title='April 2015' href='https://www.codereversing.com/archives/date/2015/04' />
	<link rel='archives' title='March 2015' href='https://www.codereversing.com/archives/date/2015/03' />
	<link rel='archives' title='January 2015' href='https://www.codereversing.com/archives/date/2015/01' />
	<link rel='archives' title='December 2014' href='https://www.codereversing.com/archives/date/2014/12' />
	<link rel='archives' title='November 2014' href='https://www.codereversing.com/archives/date/2014/11' />
	<link rel='archives' title='June 2014' href='https://www.codereversing.com/archives/date/2014/06' />
	<link rel='archives' title='May 2014' href='https://www.codereversing.com/archives/date/2014/05' />
	<link rel='archives' title='April 2014' href='https://www.codereversing.com/archives/date/2014/04' />
	<link rel='archives' title='December 2013' href='https://www.codereversing.com/archives/date/2013/12' />
	<link rel='archives' title='July 2011' href='https://www.codereversing.com/archives/date/2011/07' />
	<link rel='archives' title='June 2011' href='https://www.codereversing.com/archives/date/2011/06' />
	<link rel='archives' title='May 2011' href='https://www.codereversing.com/archives/date/2011/05' />
	<link rel='archives' title='April 2011' href='https://www.codereversing.com/archives/date/2011/04' />
	<link rel='archives' title='March 2011' href='https://www.codereversing.com/archives/date/2011/03' />
	<link rel='archives' title='February 2011' href='https://www.codereversing.com/archives/date/2011/02' />
	<link rel='archives' title='January 2011' href='https://www.codereversing.com/archives/date/2011/01' />
		<meta name='robots' content='max-image-preview:large' />
<link rel="alternate" type="application/rss+xml" title="RCE Endeavors &raquo; Feed" href="https://www.codereversing.com/feed" />
<link rel="alternate" type="application/rss+xml" title="RCE Endeavors &raquo; Comments Feed" href="https://www.codereversing.com/comments/feed" />
<link rel="alternate" type="application/rss+xml" title="RCE Endeavors &raquo; Manually Enumerating Process Modules Comments Feed" href="https://www.codereversing.com/archives/265/feed" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.codereversing.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.7"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://www.codereversing.com/wp-includes/css/dist/block-library/style.min.css?ver=6.7' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='twttr_stylesheet-css' href='https://www.codereversing.com/wp-content/plugins/twitter-plugin/css/style.css?ver=2.66' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css' href='https://www.codereversing.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.2' type='text/css' media='all' />
<link rel='stylesheet' id='easy_table_style-css' href='https://www.codereversing.com/wp-content/plugins/easy-table/themes/default/style.css?ver=1.6' type='text/css' media='all' />
<script type="text/javascript" src="https://www.codereversing.com/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://www.codereversing.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="https://api.w.org/" href="https://www.codereversing.com/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://www.codereversing.com/wp-json/wp/v2/posts/265" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.codereversing.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.7" />
<link rel="canonical" href="https://www.codereversing.com/archives/265" />
<link rel='shortlink' href='https://www.codereversing.com/?p=265' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://www.codereversing.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.codereversing.com%2Farchives%2F265" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://www.codereversing.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.codereversing.com%2Farchives%2F265&#038;format=xml" />
<!-- Analytics by WP Statistics v14.11.2 - https://wp-statistics.com -->
</head>

<body class="post-template-default single single-post postid-265 single-format-standard">
<div id="rap">
<h1 id="header">
	<a href="https://www.codereversing.com/">RCE Endeavors</a>
	<span id="tagline">&#x1f605;</span>
</h1>

<div id="content">
<!-- end header -->


<h2>August 20, 2015</h2>
<div class="post-265 post type-post status-publish format-standard hentry category-genx86 category-genx8664 category-programming" id="post-265">
	 <h3 class="storytitle"><a href="https://www.codereversing.com/archives/265" rel="bookmark">Manually Enumerating Process Modules</a></h3>
	<div class="meta">Filed under: <a href="https://www.codereversing.com/archives/category/genx86" rel="category tag">General x86</a>,<a href="https://www.codereversing.com/archives/category/genx8664" rel="category tag">General x86-64</a>,<a href="https://www.codereversing.com/archives/category/programming" rel="category tag">Programming</a> &#8212;  admin @ 9:12 PM </div>

	<div class="storycontent">
		<div class="twttr_buttons"><div class="twttr_twitter">
					<a href="http://twitter.com/share?text=Manually+Enumerating+Process+Modules" class="twitter-share-button" data-via="" data-hashtags=""  data-size="default" data-url="https://www.codereversing.com/archives/265"  data-related="" target="_blank">Tweet</a>
				</div><div class="twttr_followme">
						<a href="https://twitter.com/codereversing" class="twitter-follow-button" data-size="default"  data-show-screen-name="false"  target="_blank">Follow me</a>
					</div></div><p>This post will show how to enumerate a processes loaded modules without the use of any direct Windows API call. It will rely on partially undocumented functionality both from the native API and the undocumented structures provided by them. The implementation discussed is actually reasonably close to how <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms682631%28v=vs.85%29.aspx" target="_blank">EnumProcessModules</a> works.</p>
<p><strong>Undocumented Functions and Structures</strong></p>
<p>The main undocumented function that will be used here is <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms684280%28v=vs.85%29.aspx" target="_blank">NtQueryInformationProcess</a>, which is a very general function that can return a large variety of information about a process depending on input parameters. It takes in a <em>PROCINFOCLASS</em> as its second parameter, which determines which type of information it is to return. The value of this parameter are largely undocumented, but a complete definition of it can be found <a href="http://undocumented.ntinternals.net/source/usermode/undocumented%20functions/nt%20objects/process/process_information_class.html" target="_blank">here</a>. The parameter of interest here will be <em>ProcessBasicInformation</em>, which fills out a <em>PROCESS_BASIC_INFORMATION</em> structure prior to returning. In code this looks like the following:</p>

<div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="cpp" style="font-family:monospace;">PROCESS_BASIC_INFORMATION procBasicInfo <span style="color: #000080;">=</span> <span style="color: #008000;">&#123;</span> <span style="color: #0000dd;">0</span> <span style="color: #008000;">&#125;</span><span style="color: #008080;">;</span>
ULONG ulRetLength <span style="color: #000080;">=</span> <span style="color: #0000dd;">0</span><span style="color: #008080;">;</span>
NTSTATUS ntStatus <span style="color: #000080;">=</span> NtQueryInformationProcess<span style="color: #008000;">&#40;</span>hProcess,
    PROCESS_INFORMATION_CLASS_FULL<span style="color: #008080;">::</span><span style="color: #007788;">ProcessBasicInformation</span>, <span style="color: #000040;">&amp;</span>procBasicInfo,
    <span style="color: #0000dd;">sizeof</span><span style="color: #008000;">&#40;</span>PROCESS_BASIC_INFORMATION<span style="color: #008000;">&#41;</span>, <span style="color: #000040;">&amp;</span>ulRetLength<span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span>ntStatus <span style="color: #000040;">!</span><span style="color: #000080;">=</span> STATUS_SUCCESS<span style="color: #008000;">&#41;</span>
<span style="color: #008000;">&#123;</span>
    <span style="color: #0000dd;">fprintf</span><span style="color: #008000;">&#40;</span><span style="color: #0000ff;">stderr</span>, <span style="color: #FF0000;">&quot;Could not get process information. Status = %X<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>,
        ntStatus<span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
    <span style="color: #0000dd;">exit</span><span style="color: #008000;">&#40;</span><span style="color: #000040;">-</span><span style="color: #0000dd;">1</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table><p class="theCode" style="display:none;">PROCESS_BASIC_INFORMATION procBasicInfo = { 0 };
ULONG ulRetLength = 0;
NTSTATUS ntStatus = NtQueryInformationProcess(hProcess,
    PROCESS_INFORMATION_CLASS_FULL::ProcessBasicInformation, &amp;procBasicInfo,
    sizeof(PROCESS_BASIC_INFORMATION), &amp;ulRetLength);
if (ntStatus != STATUS_SUCCESS)
{
    fprintf(stderr, &quot;Could not get process information. Status = %X\n&quot;,
        ntStatus);
    exit(-1);
}</p></div>

<p>This structure, too, is largely undocumented. Its full definition can be found <a href="http://www.pinvoke.net/default.aspx/Structures/PROCESS_BASIC_INFORMATION.html?diff=y" target="_blank">here</a>. The field of interest is the second one, the pointer to the processes <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa813706%28v=vs.85%29.aspx" target="_blank">PEB</a>. This is a <a href="http://blog.rewolf.pl/blog/?p=294" target="_blank">very large</a> structure that is mapped into every process and contains an enormous amount of information about the process. Among the vast amount of information contained within the <em>PEB </em>are the loaded modules lists. The <em>Ldr</em> member in the <em>PEB</em> is a pointer to a <a href="http://undocumented.ntinternals.net/source/usermode/structures/peb_ldr_data.html" target="_blank">PEB_LDR_DATA</a> structure which contains these three lists. These three lists contain the same modules, but ordered differently; either in load order, memory initialization order, or initialization order as their names describe. The list consists of <a href="http://www.nirsoft.net/kernel_struct/vista/LDR_DATA_TABLE_ENTRY.html" target="_blank">LDR_DATA_TABLE_ENTRY</a> entries that contain extended information about the loaded module.</p>
<p><strong>Retrieving Module Information</strong></p>
<p>The above definitions are all that is needed in order to implement manual module traversal. The general idea is the following:</p>
<ol>
<li>Open a handle to the target process and obtain the address of its <em>PEB</em> (via <em>NtQuerySystemInformation</em>).</li>
<li>Read the PEB structure from the process (via <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms680553%28v=vs.85%29.aspx" target="_blank">ReadProcessMemory</a>).</li>
<li>Read the PEB_LDR_DATA from the PEB (via <em>ReadProcessMemory</em>).</li>
<li>Store off the top node and begin traversing the doubly-linked list, reading each node (via <em>ReadProcessMemory</em>).</li>
</ol>
<p>Writing it in C++ translates to the following:</p>

<div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="cpp" style="font-family:monospace;"><span style="color: #0000ff;">void</span> EnumerateProcessDlls<span style="color: #008000;">&#40;</span><span style="color: #0000ff;">const</span> HANDLE hProcess<span style="color: #008000;">&#41;</span>
<span style="color: #008000;">&#123;</span>
    PROCESS_BASIC_INFORMATION procBasicInfo <span style="color: #000080;">=</span> <span style="color: #008000;">&#123;</span> <span style="color: #0000dd;">0</span> <span style="color: #008000;">&#125;</span><span style="color: #008080;">;</span>
    ULONG ulRetLength <span style="color: #000080;">=</span> <span style="color: #0000dd;">0</span><span style="color: #008080;">;</span>
    NTSTATUS ntStatus <span style="color: #000080;">=</span> NtQueryInformationProcess<span style="color: #008000;">&#40;</span>hProcess,
        PROCESS_INFORMATION_CLASS_FULL<span style="color: #008080;">::</span><span style="color: #007788;">ProcessBasicInformation</span>, <span style="color: #000040;">&amp;</span>procBasicInfo,
        <span style="color: #0000dd;">sizeof</span><span style="color: #008000;">&#40;</span>PROCESS_BASIC_INFORMATION<span style="color: #008000;">&#41;</span>, <span style="color: #000040;">&amp;</span>ulRetLength<span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
    <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span>ntStatus <span style="color: #000040;">!</span><span style="color: #000080;">=</span> STATUS_SUCCESS<span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        <span style="color: #0000dd;">fprintf</span><span style="color: #008000;">&#40;</span><span style="color: #0000ff;">stderr</span>, <span style="color: #FF0000;">&quot;Could not get process information. Status = %X<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>,
            ntStatus<span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
        <span style="color: #0000dd;">exit</span><span style="color: #008000;">&#40;</span><span style="color: #000040;">-</span><span style="color: #0000dd;">1</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    PEB procPeb <span style="color: #000080;">=</span> <span style="color: #008000;">&#123;</span> <span style="color: #0000dd;">0</span> <span style="color: #008000;">&#125;</span><span style="color: #008080;">;</span>
    SIZE_T ulBytesRead <span style="color: #000080;">=</span> <span style="color: #0000dd;">0</span><span style="color: #008080;">;</span>
    <span style="color: #0000ff;">bool</span> bRet <span style="color: #000080;">=</span> BOOLIFY<span style="color: #008000;">&#40;</span>ReadProcessMemory<span style="color: #008000;">&#40;</span>hProcess, <span style="color: #008000;">&#40;</span>LPCVOID<span style="color: #008000;">&#41;</span>procBasicInfo.<span style="color: #007788;">PebBaseAddress</span>, <span style="color: #000040;">&amp;</span>procPeb,
        <span style="color: #0000dd;">sizeof</span><span style="color: #008000;">&#40;</span>PEB<span style="color: #008000;">&#41;</span>, <span style="color: #000040;">&amp;</span>ulBytesRead<span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
    <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span><span style="color: #000040;">!</span>bRet<span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        <span style="color: #0000dd;">fprintf</span><span style="color: #008000;">&#40;</span><span style="color: #0000ff;">stderr</span>, <span style="color: #FF0000;">&quot;Failed to read PEB from process. Error = %X<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>,
            GetLastError<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
        <span style="color: #0000dd;">exit</span><span style="color: #008000;">&#40;</span><span style="color: #000040;">-</span><span style="color: #0000dd;">1</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    PEB_LDR_DATA pebLdrData <span style="color: #000080;">=</span> <span style="color: #008000;">&#123;</span> <span style="color: #0000dd;">0</span> <span style="color: #008000;">&#125;</span><span style="color: #008080;">;</span>
    bRet <span style="color: #000080;">=</span> BOOLIFY<span style="color: #008000;">&#40;</span>ReadProcessMemory<span style="color: #008000;">&#40;</span>hProcess, <span style="color: #008000;">&#40;</span>LPCVOID<span style="color: #008000;">&#41;</span>procPeb.<span style="color: #007788;">Ldr</span>, <span style="color: #000040;">&amp;</span>pebLdrData, <span style="color: #0000dd;">sizeof</span><span style="color: #008000;">&#40;</span>PEB_LDR_DATA<span style="color: #008000;">&#41;</span>,
        <span style="color: #000040;">&amp;</span>ulBytesRead<span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
    <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span><span style="color: #000040;">!</span>bRet<span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        <span style="color: #0000dd;">fprintf</span><span style="color: #008000;">&#40;</span><span style="color: #0000ff;">stderr</span>, <span style="color: #FF0000;">&quot;Failed to read module list from process. Error = %X<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>,
            GetLastError<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
        <span style="color: #0000dd;">exit</span><span style="color: #008000;">&#40;</span><span style="color: #000040;">-</span><span style="color: #0000dd;">1</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    LIST_ENTRY <span style="color: #000040;">*</span>pLdrListHead <span style="color: #000080;">=</span> <span style="color: #008000;">&#40;</span>LIST_ENTRY <span style="color: #000040;">*</span><span style="color: #008000;">&#41;</span>pebLdrData.<span style="color: #007788;">InLoadOrderModuleList</span>.<span style="color: #007788;">Flink</span><span style="color: #008080;">;</span>
    LIST_ENTRY <span style="color: #000040;">*</span>pLdrCurrentNode <span style="color: #000080;">=</span> pebLdrData.<span style="color: #007788;">InLoadOrderModuleList</span>.<span style="color: #007788;">Flink</span><span style="color: #008080;">;</span>
    <span style="color: #0000ff;">do</span>
    <span style="color: #008000;">&#123;</span>
        LDR_DATA_TABLE_ENTRY lstEntry <span style="color: #000080;">=</span> <span style="color: #008000;">&#123;</span> <span style="color: #0000dd;">0</span> <span style="color: #008000;">&#125;</span><span style="color: #008080;">;</span>
        bRet <span style="color: #000080;">=</span> BOOLIFY<span style="color: #008000;">&#40;</span>ReadProcessMemory<span style="color: #008000;">&#40;</span>hProcess, <span style="color: #008000;">&#40;</span>LPCVOID<span style="color: #008000;">&#41;</span>pLdrCurrentNode, <span style="color: #000040;">&amp;</span>lstEntry,
            <span style="color: #0000dd;">sizeof</span><span style="color: #008000;">&#40;</span>LDR_DATA_TABLE_ENTRY<span style="color: #008000;">&#41;</span>, <span style="color: #000040;">&amp;</span>ulBytesRead<span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
        <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span><span style="color: #000040;">!</span>bRet<span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            <span style="color: #0000dd;">fprintf</span><span style="color: #008000;">&#40;</span><span style="color: #0000ff;">stderr</span>, <span style="color: #FF0000;">&quot;Could not read list entry from LDR list. Error = %X<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>,
                GetLastError<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
            <span style="color: #0000dd;">exit</span><span style="color: #008000;">&#40;</span><span style="color: #000040;">-</span><span style="color: #0000dd;">1</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
        <span style="color: #008000;">&#125;</span>
&nbsp;
        pLdrCurrentNode <span style="color: #000080;">=</span> lstEntry.<span style="color: #007788;">InLoadOrderLinks</span>.<span style="color: #007788;">Flink</span><span style="color: #008080;">;</span>
&nbsp;
        WCHAR strFullDllName<span style="color: #008000;">&#91;</span>MAX_PATH<span style="color: #008000;">&#93;</span> <span style="color: #000080;">=</span> <span style="color: #008000;">&#123;</span> <span style="color: #0000dd;">0</span> <span style="color: #008000;">&#125;</span><span style="color: #008080;">;</span>
        WCHAR strBaseDllName<span style="color: #008000;">&#91;</span>MAX_PATH<span style="color: #008000;">&#93;</span> <span style="color: #000080;">=</span> <span style="color: #008000;">&#123;</span> <span style="color: #0000dd;">0</span> <span style="color: #008000;">&#125;</span><span style="color: #008080;">;</span>
        <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span>lstEntry.<span style="color: #007788;">FullDllName</span>.<span style="color: #007788;">Length</span> <span style="color: #000080;">&gt;</span> <span style="color: #0000dd;">0</span><span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            bRet <span style="color: #000080;">=</span> BOOLIFY<span style="color: #008000;">&#40;</span>ReadProcessMemory<span style="color: #008000;">&#40;</span>hProcess, <span style="color: #008000;">&#40;</span>LPCVOID<span style="color: #008000;">&#41;</span>lstEntry.<span style="color: #007788;">FullDllName</span>.<span style="color: #007788;">Buffer</span>, <span style="color: #000040;">&amp;</span>strFullDllName,
                lstEntry.<span style="color: #007788;">FullDllName</span>.<span style="color: #007788;">Length</span>, <span style="color: #000040;">&amp;</span>ulBytesRead<span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
            <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span>bRet<span style="color: #008000;">&#41;</span>
            <span style="color: #008000;">&#123;</span>
                wprintf<span style="color: #008000;">&#40;</span><span style="color: #FF0000;">L</span><span style="color: #FF0000;">&quot;Full Dll Name: %s<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>, strFullDllName<span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
            <span style="color: #008000;">&#125;</span>
        <span style="color: #008000;">&#125;</span>
&nbsp;
        <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span>lstEntry.<span style="color: #007788;">BaseDllName</span>.<span style="color: #007788;">Length</span> <span style="color: #000080;">&gt;</span> <span style="color: #0000dd;">0</span><span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            bRet <span style="color: #000080;">=</span> BOOLIFY<span style="color: #008000;">&#40;</span>ReadProcessMemory<span style="color: #008000;">&#40;</span>hProcess, <span style="color: #008000;">&#40;</span>LPCVOID<span style="color: #008000;">&#41;</span>lstEntry.<span style="color: #007788;">BaseDllName</span>.<span style="color: #007788;">Buffer</span>, <span style="color: #000040;">&amp;</span>strBaseDllName,
                lstEntry.<span style="color: #007788;">BaseDllName</span>.<span style="color: #007788;">Length</span>, <span style="color: #000040;">&amp;</span>ulBytesRead<span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
            <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span>bRet<span style="color: #008000;">&#41;</span>
            <span style="color: #008000;">&#123;</span>
                wprintf<span style="color: #008000;">&#40;</span><span style="color: #FF0000;">L</span><span style="color: #FF0000;">&quot;Base Dll Name: %s<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>, strBaseDllName<span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
            <span style="color: #008000;">&#125;</span>
        <span style="color: #008000;">&#125;</span>
&nbsp;
        <span style="color: #0000ff;">if</span> <span style="color: #008000;">&#40;</span>lstEntry.<span style="color: #007788;">DllBase</span> <span style="color: #000040;">!</span><span style="color: #000080;">=</span> <span style="color: #0000ff;">nullptr</span> <span style="color: #000040;">&amp;&amp;</span> lstEntry.<span style="color: #007788;">SizeOfImage</span> <span style="color: #000040;">!</span><span style="color: #000080;">=</span> <span style="color: #0000dd;">0</span><span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            wprintf<span style="color: #008000;">&#40;</span>
                <span style="color: #FF0000;">L</span><span style="color: #FF0000;">&quot;  Dll Base: %p<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>
                <span style="color: #FF0000;">L</span><span style="color: #FF0000;">&quot;  Entry point: %p<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>
                <span style="color: #FF0000;">L</span><span style="color: #FF0000;">&quot;  Size of Image: %X<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>,
                lstEntry.<span style="color: #007788;">DllBase</span>, lstEntry.<span style="color: #007788;">EntryPoint</span>, lstEntry.<span style="color: #007788;">SizeOfImage</span><span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
        <span style="color: #008000;">&#125;</span>
&nbsp;
    <span style="color: #008000;">&#125;</span> <span style="color: #0000ff;">while</span> <span style="color: #008000;">&#40;</span>pLdrListHead <span style="color: #000040;">!</span><span style="color: #000080;">=</span> pLdrCurrentNode<span style="color: #008000;">&#41;</span><span style="color: #008080;">;</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table><p class="theCode" style="display:none;">void EnumerateProcessDlls(const HANDLE hProcess)
{
    PROCESS_BASIC_INFORMATION procBasicInfo = { 0 };
    ULONG ulRetLength = 0;
    NTSTATUS ntStatus = NtQueryInformationProcess(hProcess,
        PROCESS_INFORMATION_CLASS_FULL::ProcessBasicInformation, &amp;procBasicInfo,
        sizeof(PROCESS_BASIC_INFORMATION), &amp;ulRetLength);
    if (ntStatus != STATUS_SUCCESS)
    {
        fprintf(stderr, &quot;Could not get process information. Status = %X\n&quot;,
            ntStatus);
        exit(-1);
    }

    PEB procPeb = { 0 };
    SIZE_T ulBytesRead = 0;
    bool bRet = BOOLIFY(ReadProcessMemory(hProcess, (LPCVOID)procBasicInfo.PebBaseAddress, &amp;procPeb,
        sizeof(PEB), &amp;ulBytesRead));
    if (!bRet)
    {
        fprintf(stderr, &quot;Failed to read PEB from process. Error = %X\n&quot;,
            GetLastError());
        exit(-1);
    }

    PEB_LDR_DATA pebLdrData = { 0 };
    bRet = BOOLIFY(ReadProcessMemory(hProcess, (LPCVOID)procPeb.Ldr, &amp;pebLdrData, sizeof(PEB_LDR_DATA),
        &amp;ulBytesRead));
    if (!bRet)
    {
        fprintf(stderr, &quot;Failed to read module list from process. Error = %X\n&quot;,
            GetLastError());
        exit(-1);
    }

    LIST_ENTRY *pLdrListHead = (LIST_ENTRY *)pebLdrData.InLoadOrderModuleList.Flink;
    LIST_ENTRY *pLdrCurrentNode = pebLdrData.InLoadOrderModuleList.Flink;
    do
    {
        LDR_DATA_TABLE_ENTRY lstEntry = { 0 };
        bRet = BOOLIFY(ReadProcessMemory(hProcess, (LPCVOID)pLdrCurrentNode, &amp;lstEntry,
            sizeof(LDR_DATA_TABLE_ENTRY), &amp;ulBytesRead));
        if (!bRet)
        {
            fprintf(stderr, &quot;Could not read list entry from LDR list. Error = %X\n&quot;,
                GetLastError());
            exit(-1);
        }

        pLdrCurrentNode = lstEntry.InLoadOrderLinks.Flink;

        WCHAR strFullDllName[MAX_PATH] = { 0 };
        WCHAR strBaseDllName[MAX_PATH] = { 0 };
        if (lstEntry.FullDllName.Length &gt; 0)
        {
            bRet = BOOLIFY(ReadProcessMemory(hProcess, (LPCVOID)lstEntry.FullDllName.Buffer, &amp;strFullDllName,
                lstEntry.FullDllName.Length, &amp;ulBytesRead));
            if (bRet)
            {
                wprintf(L&quot;Full Dll Name: %s\n&quot;, strFullDllName);
            }
        }

        if (lstEntry.BaseDllName.Length &gt; 0)
        {
            bRet = BOOLIFY(ReadProcessMemory(hProcess, (LPCVOID)lstEntry.BaseDllName.Buffer, &amp;strBaseDllName,
                lstEntry.BaseDllName.Length, &amp;ulBytesRead));
            if (bRet)
            {
                wprintf(L&quot;Base Dll Name: %s\n&quot;, strBaseDllName);
            }
        }

        if (lstEntry.DllBase != nullptr &amp;&amp; lstEntry.SizeOfImage != 0)
        {
            wprintf(
                L&quot;  Dll Base: %p\n&quot;
                L&quot;  Entry point: %p\n&quot;
                L&quot;  Size of Image: %X\n&quot;,
                lstEntry.DllBase, lstEntry.EntryPoint, lstEntry.SizeOfImage);
        }

    } while (pLdrListHead != pLdrCurrentNode);
}</p></div>

<p><strong>Code</strong></p>
<p>The Visual Studio 2015 project for this example can be found <a href="http://codereversing.com/manualenum.zip" target="_blank">here</a>. The source code is viewable on Github <a href="https://github.com/codereversing/manualenum" target="_blank">here</a>.<br />
This code was tested on x64 Windows 7, 8.1, and 10.</p>
<p>Follow on Twitter for more updates<br />
<div class="twttr_buttons"><div class="twttr_followme">
						<a href="https://twitter.com/codereversing" class="twitter-follow-button" data-size="default"  data-show-screen-name="false"  target="_blank">Follow me</a>
					</div></div></p>
	</div>

	<div class="feedback">
				<a href="https://www.codereversing.com/archives/265#respond">Comments (0)</a>	</div>

</div>


<h2 id="comments">No Comments	<a href="#postcomment" title="Leave a comment">&raquo;</a>
</h2>

	<p>No comments yet.</p>

<p><a href="https://www.codereversing.com/archives/265/feed"><abbr title="Really Simple Syndication">RSS</abbr> feed for comments on this post.</a>	<a href="https://www.codereversing.com/archives/265/trackback" rel="trackback">TrackBack <abbr title="Universal Resource Locator">URL</abbr></a>
</p>

<h2 id="postcomment">Leave a comment</h2>


<form action="https://www.codereversing.com/wp-comments-post.php" method="post" id="commentform">


<p><input type="text" name="author" id="author" value="" size="22" tabindex="1" />
<label for="author"><small>Name (required)</small></label></p>

<p><input type="text" name="email" id="email" value="" size="22" tabindex="2" />
<label for="email"><small>Mail (will not be published) (required)</small></label></p>

<p><input type="text" name="url" id="url" value="" size="22" tabindex="3" />
<label for="url"><small>Website</small></label></p>


<!--<p><small><strong>XHTML:</strong> You can use these tags: &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;s&gt; &lt;strike&gt; &lt;strong&gt; </small></p>-->

<p><textarea autocomplete="new-password"  id="i5330ad5a8"  name="i5330ad5a8"   cols="58" rows="10" tabindex="4"></textarea><textarea id="comment" aria-label="hp-comment" aria-hidden="true" name="comment" autocomplete="new-password" style="padding:0 !important;clip:rect(1px, 1px, 1px, 1px) !important;position:absolute !important;white-space:nowrap !important;height:1px !important;width:1px !important;overflow:hidden !important;" tabindex="-1"></textarea><script data-noptimize>document.getElementById("comment").setAttribute( "id", "a5c9f70643a6f8fcbcf69e99f2358adf" );document.getElementById("i5330ad5a8").setAttribute( "id", "comment" );</script></p>

<p><input name="submit" type="submit" id="submit" tabindex="5" value="Submit Comment" />
<input type="hidden" name="comment_post_ID" value="265" />
</p>
<div class="g-recaptcha" data-sitekey="6Lc0aP4SAAAAAHRcLuo3-kU46INWVVL74pH7cPzJ" data-theme="standard"></div><script type="text/javascript"src="https://www.google.com/recaptcha/api.js?hl=en"></script>            <div id="recaptcha-submit-btn-area">&nbsp;</div>
            <noscript>
            <style type='text/css'>#submit {display:none;}</style>
            <input name="submit" type="submit" id="submit-alt" tabindex="6"
                value="Submit Comment"/> 
            </noscript>
</form>





<!-- begin footer -->
</div>

<!-- begin sidebar -->
<div id="menu">

<ul>
<li id="pages-4" class="widget widget_pages">Pages
			<ul>
				<li class="page_item page-item-331"><a href="https://www.codereversing.com/index">All Posts</a></li>
<li class="page_item page-item-2"><a href="https://www.codereversing.com/about">About</a></li>
			</ul>

			</li><li id="search-2" class="widget widget_search"><form role="search" method="get" id="searchform" class="searchform" action="https://www.codereversing.com/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li>
		<li id="recent-posts-2" class="widget widget_recent_entries">
		Recent Posts
		<ul>
											<li>
					<a href="https://www.codereversing.com/archives/652">DLL Injection: Manual Mapping (5/5)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/651">DLL Injection: Thread Context Hijacking (4/5)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/650">DLL Injection: Remote Threads (3/5)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/649">DLL Injection: Windows Hooks (2/5)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/653">DLL Injection: Background &#038; DLL Proxying (1/5)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/598">Function Hooking: Export Address Table Hooks (7/7)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/597">Function Hooking: Import Address Table Hooks (6/7)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/596">Function Hooking: Virtual Table Hooks (5/7)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/595">Function Hooking: Software Breakpoints (4/7)</a>
									</li>
											<li>
					<a href="https://www.codereversing.com/archives/594">Function Hooking: Hardware Breakpoints (3/7)</a>
									</li>
					</ul>

		</li><li id="archives-2" class="widget widget_archive">Archives
			<ul>
					<li><a href='https://www.codereversing.com/archives/date/2023/06'>June 2023</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2023/05'>May 2023</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2022/10'>October 2022</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2022/08'>August 2022</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2022/07'>July 2022</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2022/06'>June 2022</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2021/12'>December 2021</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2021/11'>November 2021</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2021/10'>October 2021</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2021/05'>May 2021</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2017/03'>March 2017</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2017/02'>February 2017</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/12'>December 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/09'>September 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/08'>August 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/07'>July 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/06'>June 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/05'>May 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/04'>April 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/03'>March 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2015/01'>January 2015</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2014/12'>December 2014</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2014/11'>November 2014</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2014/06'>June 2014</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2014/05'>May 2014</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2014/04'>April 2014</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2013/12'>December 2013</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2011/07'>July 2011</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2011/06'>June 2011</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2011/05'>May 2011</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2011/04'>April 2011</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2011/03'>March 2011</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2011/02'>February 2011</a></li>
	<li><a href='https://www.codereversing.com/archives/date/2011/01'>January 2011</a></li>
			</ul>

			</li><li id="categories-2" class="widget widget_categories">Categories
			<ul>
					<li class="cat-item cat-item-7"><a href="https://www.codereversing.com/archives/category/crypto">Cryptography</a>
</li>
	<li class="cat-item cat-item-8"><a href="https://www.codereversing.com/archives/category/gamehacking">Game Hacking</a>
</li>
	<li class="cat-item cat-item-3"><a href="https://www.codereversing.com/archives/category/genx86">General x86</a>
</li>
	<li class="cat-item cat-item-4"><a href="https://www.codereversing.com/archives/category/genx8664">General x86-64</a>
</li>
	<li class="cat-item cat-item-11"><a href="https://www.codereversing.com/archives/category/nocode">NoCode</a>
</li>
	<li class="cat-item cat-item-9"><a href="https://www.codereversing.com/archives/category/programming">Programming</a>
</li>
	<li class="cat-item cat-item-5"><a href="https://www.codereversing.com/archives/category/reveng">Reverse Engineering</a>
</li>
	<li class="cat-item cat-item-1"><a href="https://www.codereversing.com/archives/category/uncategorized">Uncategorized</a>
</li>
			</ul>

			</li><li id="meta-2" class="widget widget_meta">Meta
		<ul>
						<li><a href="https://www.codereversing.com/wp-login.php">Log in</a></li>
			<li><a href="https://www.codereversing.com/feed">Entries feed</a></li>
			<li><a href="https://www.codereversing.com/comments/feed">Comments feed</a></li>

			<li><a href="https://wordpress.org/">WordPress.org</a></li>
		</ul>

		</li>
</ul>

</div>
<!-- end sidebar -->

<p class="credit"><!--33 queries. 0.501 seconds. --> <cite>Powered by <a href='http://wordpress.org/' title='Powered by WordPress, state-of-the-art semantic personal publishing platform.'><strong>WordPress</strong></a></cite></p>

</div>

            <script type="text/javascript">
            var sub = document.getElementById('submit');
            document.getElementById('recaptcha-submit-btn-area').appendChild (sub);
            document.getElementById('submit').tabIndex = 6;
            if ( typeof _recaptcha_wordpress_savedcomment != 'undefined') {
                document.getElementById('comment').value = 
                    _recaptcha_wordpress_savedcomment;
            }
            </script><script type="text/javascript" id="wp-statistics-tracker-js-extra">
/* <![CDATA[ */
var WP_Statistics_Tracker_Object = {"requestUrl":"https:\/\/www.codereversing.com\/wp-json\/wp-statistics\/v2","ajaxUrl":"https:\/\/www.codereversing.com\/wp-admin\/admin-ajax.php","hitParams":{"wp_statistics_hit":1,"source_type":"post","source_id":265,"search_query":"","signature":"df380097890ba26a443155c44714f4a0","endpoint":"hit"},"onlineParams":{"wp_statistics_hit":1,"source_type":"post","source_id":265,"search_query":"","signature":"df380097890ba26a443155c44714f4a0","endpoint":"online"},"option":{"userOnline":"1","consentLevel":"disabled","dntEnabled":false,"bypassAdBlockers":false,"isWpConsentApiActive":false,"trackAnonymously":false,"isPreview":false},"jsCheckTime":"60000"};
/* ]]> */
</script>
<script type="text/javascript" src="https://www.codereversing.com/wp-content/plugins/wp-statistics/assets/js/tracker.js?ver=14.11.2" id="wp-statistics-tracker-js"></script>
<script type="text/javascript" src="https://www.codereversing.com/wp-content/plugins/wp-syntax/js/wp-syntax.js?ver=1.2" id="wp-syntax-js-js"></script>
<script type="text/javascript" id="twttr_api_scripts_init-js-after">
/* <![CDATA[ */
!function(d,s,id) {
					var js,fjs=d.getElementsByTagName(s)[0];
					if (!d.getElementById(id)) {
						js=d.createElement(s);
						js.id=id;
						js.src="https://platform.twitter.com/widgets.js";
						fjs.parentNode.insertBefore(js,fjs);
					}
				}(document,"script","twitter-wjs")
/* ]]> */
</script>
</body>
</html>
<!-- Dynamic page generated in 0.489 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2024-11-15 12:37:12 -->

<!-- super cache -->