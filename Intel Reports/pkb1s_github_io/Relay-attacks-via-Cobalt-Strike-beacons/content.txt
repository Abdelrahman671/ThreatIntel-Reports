<!doctype html>
<!--
  Minimal Mistakes Jekyll Theme 4.21.0 by Michael Rose
  Copyright 2013-2020 Michael Rose - mademistakes.com | @mmistakes
  Free for personal and commercial use under the MIT license
  https://github.com/mmistakes/minimal-mistakes/blob/master/LICENSE
-->
<html lang="en" class="no-js">
  <head>
    <meta charset="utf-8">

<!-- begin _includes/seo.html --><title>Relay Attacks via Cobalt Strike Beacons -</title>
<meta name="description" content="Introduction">


  <meta name="author" content="pkb1s">
  
  <meta property="article:author" content="pkb1s">
  


<meta property="og:type" content="article">
<meta property="og:locale" content="en_US">
<meta property="og:site_name" content="">
<meta property="og:title" content="Relay Attacks via Cobalt Strike Beacons">
<meta property="og:url" content="https://pkb1s.github.io/Relay-attacks-via-Cobalt-Strike-beacons/">


  <meta property="og:description" content="Introduction">







  <meta property="article:published_time" content="2020-02-01T00:00:00+00:00">





  

  


<link rel="canonical" href="https://pkb1s.github.io/Relay-attacks-via-Cobalt-Strike-beacons/">




<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    
      "@type": "Person",
      "name": "pkb1s",
      "url": "https://pkb1s.github.io/"
    
  }
</script>






<!-- end _includes/seo.html -->


<link href="/feed.xml" type="application/atom+xml" rel="alternate" title=" Feed">

<!-- https://t.co/dKP3o1e -->
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<script>
  document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/g, '') + ' js ';
</script>

<!-- For all browsers -->
<link rel="stylesheet" href="/assets/css/main.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5/css/all.min.css">

<!--[if IE]>
  <style>
    /* old IE unsupported flexbox fixes */
    .greedy-nav .site-title {
      padding-right: 3em;
    }
    .greedy-nav button {
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
    }
  </style>
<![endif]-->



    <!-- start custom head snippets -->

<!-- insert favicons. use https://realfavicongenerator.net/ -->

<!-- end custom head snippets -->
<link rel="apple-touch-icon" sizes="180x180" href="/assets/images/favicon/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/assets/images/favicon/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/assets/images/favicon/favicon-16x16.png">
<link rel="manifest" href="/assets/images/favicon/site.webmanifest">
<link rel="mask-icon" href="/assets/images/favicon/safari-pinned-tab.svg" color="#5bbad5">
<meta name="msapplication-TileColor" content="#da532c">
<meta name="theme-color" content="#ffffff">
  </head>

  <body class="layout--single wide">
    <nav class="skip-links">
  <h2 class="screen-reader-text">Skip links</h2>
  <ul>
    <li><a href="#site-nav" class="screen-reader-shortcut">Skip to primary navigation</a></li>
    <li><a href="#main" class="screen-reader-shortcut">Skip to content</a></li>
    <li><a href="#footer" class="screen-reader-shortcut">Skip to footer</a></li>
  </ul>
</nav>

    <!--[if lt IE 9]>
<div class="notice--danger align-center" style="margin: 0;">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience.</div>
<![endif]-->

    

<div class="masthead">
  <div class="masthead__inner-wrap">
    <div class="masthead__menu">
      <nav id="site-nav" class="greedy-nav">
        
        <a class="site-title" href="/">
          
          <span class="site-subtitle"></span>
        </a>
        <ul class="visible-links"><li class="masthead__menu-item">
              <a href="https://pkb1s.github.io/">Home</a>
            </li><li class="masthead__menu-item">
              <a href="https://pkb1s.github.io/presentations/">Presentations</a>
            </li><li class="masthead__menu-item">
              <a href="https://pkb1s.github.io/whoami/">whoami</a>
            </li></ul>
        
        <button class="greedy-nav__toggle hidden" type="button">
          <span class="visually-hidden">Toggle menu</span>
          <div class="navicon"></div>
        </button>
        <ul class="hidden-links hidden"></ul>
      </nav>
    </div>
  </div>
</div>


    <div class="initial-content">
      



<div id="main" role="main">
  
  <div class="sidebar sticky">
  


<div itemscope itemtype="https://schema.org/Person">

  
    <div class="author__avatar">
      
        <img src="/assets/images/icon.png" alt="pkb1s" itemprop="image">
      
    </div>
  

  <div class="author__content">
    
      <h3 class="author__name" itemprop="name">pkb1s</h3>
    
    
      <div class="author__bio" itemprop="description">
        <p>A blog mostly about Red Teaming and Active Directory</p>

      </div>
    
  </div>

  <div class="author__urls-wrapper">
    <button class="btn btn--inverse">Follow</button>
    <ul class="author__urls social-icons">
      

      
        
          
        
          
        
          
            <li><a href="https://twitter.com/pkb1s" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-twitter-square" aria-hidden="true"></i><span class="label">Twitter</span></a></li>
          
        
          
        
          
            <li><a href="https://github.com/pkb1s" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-github" aria-hidden="true"></i><span class="label">GitHub</span></a></li>
          
        
          
        
      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      <!--
  <li>
    <a href="http://link-to-whatever-social-network.com/user/" itemprop="sameAs" rel="nofollow noopener noreferrer">
      <i class="fas fa-fw" aria-hidden="true"></i> Custom Social Profile Link
    </a>
  </li>
-->
    </ul>
  </div>
</div>

  
  <a class="twitter-timeline" data-theme="dark" data-tweet-limit="5" href="https://twitter.com/pkb1s?ref_src=twsrc%5Etfw">Tweets by pkb1s</a> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>  
  </div>



  <article class="page" itemscope itemtype="https://schema.org/CreativeWork">
    <meta itemprop="headline" content="Relay Attacks via Cobalt Strike Beacons">
    <meta itemprop="description" content="Introduction">
    <meta itemprop="datePublished" content="2020-02-01T00:00:00+00:00">
    

    <div class="page__inner-wrap">
      
        <header>
          <h1 id="page-title" class="page__title" itemprop="headline">Relay Attacks via Cobalt Strike Beacons
</h1>
          

  <p class="page__meta">
    

    

    
      
      

      <span class="page__meta-readtime">
        <i class="far fa-clock" aria-hidden="true"></i>
        
          6 minute read
        
      </span>
    
  </p>


        </header>
      

      <section class="page__content" itemprop="text">
        
        <h3 id="introduction">Introduction</h3>

<p>Back in 2018, <a href="https://twitter.com/harmj0y">Will Shroeder</a>, <a href="https://twitter.com/tifkin_">Lee Christensen</a> and <a href="https://twitter.com/enigma0x3">Matt Nelson</a> shared their awesome <a href="https://www.slideshare.net/harmj0y/derbycon-the-unintended-risks-of-trusting-active-directory">research</a> around Active Directory trusts at DerbyCon. During the last part of their presentation they showed how we can abuse the Print Spooler service in order to force a computer to authenticate against another computer. Lee also released a tool that allows us to do this easily called <a href="https://github.com/leechristensen/SpoolSample">SpoolSample</a>. If you are not familiar with this attack I highly recommend reading the following blog posts:</p>

<ul>
  <li><a href="https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1">https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1</a></li>
  <li><a href="https://dirkjanm.io/krbrelayx-unconstrained-delegation-abuse-toolkit/">https://dirkjanm.io/krbrelayx-unconstrained-delegation-abuse-toolkit/</a></li>
</ul>

<p>Most of the abuses I have seen so far are using the SpoolSample tool along with compromising a server with Unconstrained Delegation enabled. This allows the attacker to force a computer authenticate back to the attacker using Kerberos and since Unconstrained Delegetation is enabled on the compromised server, the victim also sends their TGT within the TGS. However, there is another way to compromise computers.</p>

<p>If we run the SpoolSample tool with IP addresses as arguments instead of domain names, the target computer will initiate an authentication attempt using Net-NTLM and it is known for many years that Net-NTLM authentication is vulnerable to relay attacks. This means that we can use SpoolSample to make a computer object authenticate back to a computer we control and relay this authentication to another host.</p>

<p>The scenario where this is useful is the following:</p>

<p><img src="/assets/images/2020-02-01-Relay-attacks-via-cobalt-strike-beacons/SharpRelay_BH-Path-Computer.png" alt="SharpRelay_BH-Path-Computer" /></p>

<p>OK, lets put this attack aside for now and we will come back to it later.</p>

<p>Another scenario that we find very often when reviewing AD environments is when a user object has rights such as <code class="language-plaintext highlighter-rouge">GenericAll</code> or <code class="language-plaintext highlighter-rouge">GenericWrite</code> on another user object similar to the following:</p>

<p><img src="/assets/images/2020-02-01-Relay-attacks-via-cobalt-strike-beacons/SharpRelay_BH-User-GenericAll.png" alt="SharpRelay_BH-User-GenericAll" /></p>

<p>If we have compromised Alice then we can do the following:</p>

<ul>
  <li>Use a targeted Kerberoasting attack against Bob by setting an SPN and requesting a TGS</li>
  <li>Force a password change for Bob</li>
</ul>

<p>However, both of these attacks have limitations. For targeted kerberoasting the user must be configured with a weak password in order to crack it. As for changing Bob’s password it might be something that you don’t want to do during a red team operation to avoid disruption or raising suspicion.</p>

<p>So I started looking at the different attributes a user has and another option is to modify one of the following use attributes:</p>

<ul>
  <li>homeDirectory - Specifies the home directory of the account and it can be a UNC path.</li>
  <li>profilePath - Specifies a path to the user’s profile and it can also be a UNC path.</li>
</ul>

<p>By modifying any of these attributes, we can point them to a UNC path of a computer under your control and perform an SMB relay attack.</p>

<p>Something you might be wondering so far is this - You have been telling me these ways of exploiting AD objects based on ACL misconfigurations and SMB relay attacks but you haven’t told me how to perform a relay attack if all I have is a Cobalt Strike beacon.</p>

<p>Keep reading and your question will be answered ;)</p>

<h3 id="relay-attacks">Relay Attacks</h3>

<p>So far I have mentioned relay attacks, and specifically SMB relays. This kind of attack has been known for many years. If you want to learn more about SMB relay you can read the following posts:</p>

<ul>
  <li><a href="https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html">https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html</a></li>
  <li><a href="https://www.sans.org/blog/smb-relay-demystified-and-ntlmv2-pwnage-with-python/">https://www.sans.org/blog/smb-relay-demystified-and-ntlmv2-pwnage-with-python/</a></li>
</ul>

<p>The rest of this post is based on the reader’s basic understanding of relay attacks so make sure you have read the above posts.</p>

<h3 id="ok-i-understand-how-smb-relay-attacks-work-now-what">OK, I understand how SMB relay attacks work. Now what?</h3>

<p>When I performed relay attacks in the past I was always doing an internal pentest and I had physical access to the target network. But, why not use these powerful attacks while on a red team operation and you have to do everything through a Cobalt Strike beacon?</p>

<p>It looks like there is a way to do this! Actually this is possible for a few years now thanks to the very cool <a href="https://github.com/Arno0x/DivertTCPconn">divertTCPconn</a> and <a href="https://github.com/MRGEffitas/hwfwbypass">hwfwbypass</a> projects.</p>

<p>DivertTCPconn is based on hwfwbypass and both are written in C++. It is using the amazingly complicated WinDivert project written by Basil:</p>

<ul>
  <li><a href="https://github.com/basil00/Divert">https://github.com/basil00/Divert</a></li>
</ul>

<h4 id="how-does-it-work">How does it work?</h4>

<p>According to it’s description, WinDivert is a kernel driver that allows for user-mode packet interception and modification. The user needs to specify a filter and any packets that match this filter will be intercepted and can be modified.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The WinDivert.sys driver is installed below the Windows network stack.  The
following actions occur:

(1) A new packet enters the network stack and is intercepted by WinDivert.sys
(2a) If the packet matches the PROGRAM-defined filter, it is diverted.  The
    PROGRAM can then read the packet using a call to WinDivertRecv().
(2b) If the packet does not match the filter, the packet continues as normal.
(3) PROGRAM either drops, modifies, or re-injects the packet.  PROGRAM can
    re-inject the (modified) using a call to WinDivertSend().
</code></pre></div></div>

<p>The most important thing that WinDivert allows us to do is to intercept traffic going to an open Windows port and redirect it to another port by modifying the TCP source and destination ports of each packet, recalculating the TCP checksums and reinjecting the packets into the network stack.</p>

<h4 id="how-does-this-help-us">How does this help us?</h4>

<p>On Windows, port 445 is always running by default. I won’t go into detail about the process using port 445 because this is already analysed in the following post, so please go ahead and read it:</p>

<ul>
  <li><a href="https://diablohorn.com/2018/08/25/remote-ntlm-relaying-through-meterpreter-on-windows-port-445/">https://diablohorn.com/2018/08/25/remote-ntlm-relaying-through-meterpreter-on-windows-port-445/</a></li>
</ul>

<p>As mentioned in the above post, it also contains another interesting idea. Using WinDivert to perform an SMB relay attack via Metasploit. You can upload a few DLLs and a driver file to the target host along with the divertTCPconn.exe and execute them. I found this attack to be awesome, but what I didn’t like was that you had to upload multiple DLLs on the target host.</p>

<p>So my goal was to do the same attack by dropping the minimum amount of files on disk and also executing the attack through Cobalt Strike.</p>

<h3 id="smb-relay-through-cobalt-strike">SMB Relay through Cobalt Strike</h3>

<p>First of all, I wanted to make use of Cobalt Strike’s <code class="language-plaintext highlighter-rouge">execute-assembly</code> function so I decided to write my code using the .NET framework. My initial thought would be to re-write divertTCPconn in C# and then everything would work. It turns out that this was very complicated. Fortunately, I found the following NuGet package by TechnikEmpire:</p>

<ul>
  <li><a href="https://github.com/TechnikEmpire/WinDivertSharp">https://github.com/TechnikEmpire/WinDivertSharp</a></li>
</ul>

<p>Using WinDivertSharp, I was able to write a tool called <a href="https://github.com/pkb1s/SharpRelay">SharpRelay</a> to communicate with the WinDivert driver and perform any packet modification I wanted. The only requirement for this attack to work is to have a beacon with local administrator privileges or with the ability to load drivers. The attack using SharpRelay works as follows:</p>

<ul>
  <li>Upload the <em><strong>signed</strong></em> WinDivert driver into any folder on the compromised host</li>
  <li>Run SharpRelay to modify the destination port of the incoming packets on port 445 and redirect them to another port (e.g. 8445)</li>
  <li>From our beacon run the Cobalt Strike’s <code class="language-plaintext highlighter-rouge">rportfwd</code> command to forward port 8445 of the compromised host to our teamserver’s port 445.</li>
  <li>Start a socks server to forward the relayed traffic back to the victim network</li>
  <li>Run Impacket’s <a href="https://github.com/SecureAuthCorp/impacket/blob/master/examples/ntlmrelayx.py">ntlmrelayx</a> with proxychains to do the SMB relay</li>
  <li>When a victim tries to access port 445 of the compromised host the NTLM authentication will be forwarded to our teamserver and relayed to another machine</li>
</ul>

<p>The code of SharpRelay can be found here:</p>
<ul>
  <li><a href="https://github.com/pkb1s/SharpRelay">https://github.com/pkb1s/SharpRelay</a></li>
</ul>

<p>Also, a big part of the code I used for the packet interception was taken from this project by TechnikEmpire:</p>
<ul>
  <li><a href="https://github.com/TechnikEmpire/CitadelCore">https://github.com/TechnikEmpire/CitadelCore</a></li>
</ul>

<h3 id="show-me-a-video-or-it-didnt-happen">Show me a video or it didn’t happen</h3>

<p>To demonstrate the attacks I described in the beginning of the post, I made the following videos.</p>

<h4 id="spoolsample-to-smb-relay">SpoolSample to SMB Relay</h4>

<p>As mentioned earlier we have the following scenario:</p>

<p><img src="/assets/images/2020-02-01-Relay-attacks-via-cobalt-strike-beacons/SharpRelay_BH-Path-Computer.png" alt="SharpRelay_BH-Path-Computer" /></p>

<p>The following video demonstrates how we can use the SpoolSample tool to compromise a computer object via an SMB relay attack:</p>

<!-- Courtesy of embedresponsively.com //-->

<div class="responsive-video-container">
    <iframe src="https://player.vimeo.com/video/507911426?dnt=true" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>
  </div>

<h4 id="abusing-weak-acls-on-a-user-object">Abusing weak ACLs on a User Object</h4>

<p>As shown earlier, the scenario we are going to abuse it the following:</p>

<p><img src="/assets/images/2020-02-01-Relay-attacks-via-cobalt-strike-beacons/SharpRelay_BH-User-GenericAll.png" alt="SharpRelay_BH-User-GenericAll" /></p>

<p>Having a local administrator beacon running as Alice, we will modify Bob’s <code class="language-plaintext highlighter-rouge">homeDirectory</code> attribute and point it to the workstation where we have our beacon running (10.1.1.20). Next time Bob logs in to his workstation he will try to authenticate against the compromised host and we will perform our SMB relay attack:</p>

<!-- Courtesy of embedresponsively.com //-->

<div class="responsive-video-container">
    <iframe src="https://player.vimeo.com/video/507911205?dnt=true" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>
  </div>


        
      </section>

      <footer class="page__meta">
        
        
  


  
  
  

  <p class="page__taxonomy">
    <strong><i class="fas fa-fw fa-tags" aria-hidden="true"></i> Tags: </strong>
    <span itemprop="keywords">
    
      
      
      <a href="/tags/#active-directory" class="page__taxonomy-item" rel="tag">active-directory</a>
    
    </span>
  </p>




        
  <p class="page__date"><strong><i class="fas fa-fw fa-calendar-alt" aria-hidden="true"></i> Updated:</strong> <time datetime="2020-02-01T00:00:00+00:00">February 1, 2020</time></p>


      </footer>

      <section class="page__share">
  
    <h4 class="page__share-title">Share on</h4>
  

  <a href="https://twitter.com/intent/tweet?text=Relay+Attacks+via+Cobalt+Strike+Beacons%20https%3A%2F%2Fpkb1s.github.io%2FRelay-attacks-via-Cobalt-Strike-beacons%2F" class="btn btn--twitter" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on Twitter"><i class="fab fa-fw fa-twitter" aria-hidden="true"></i><span> Twitter</span></a>

  <a href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fpkb1s.github.io%2FRelay-attacks-via-Cobalt-Strike-beacons%2F" class="btn btn--linkedin" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on LinkedIn"><i class="fab fa-fw fa-linkedin" aria-hidden="true"></i><span> LinkedIn</span></a>
</section>


    </div>

    
  </article>

  
  
    <div class="page__related">
      <h4 class="page__related-title">You may also enjoy</h4>
      <div class="grid__wrapper">
        
          
            
      </div>
    </div>
  
</div>

    </div>

    

    <div id="footer" class="page__footer">
      <footer>
        <!-- start custom footer snippets -->

<!-- end custom footer snippets -->
        <div class="page__footer-follow">
  <ul class="social-icons">

    <li><a href="/feed.xml"><i class="fas fa-fw fa-rss-square" aria-hidden="true"></i> Feed</a></li>
  </ul>
</div>

<div class="page__footer-copyright">&copy; 2021 pkb1s . Powered by <a href="https://jekyllrb.com" rel="nofollow">Jekyll</a> &amp; <a href="https://mademistakes.com/work/minimal-mistakes-jekyll-theme/" rel="nofollow">Minimal Mistakes</a>.</div>

      </footer>
    </div>

    
  <script src="/assets/js/main.min.js"></script>










  </body>
</html>
