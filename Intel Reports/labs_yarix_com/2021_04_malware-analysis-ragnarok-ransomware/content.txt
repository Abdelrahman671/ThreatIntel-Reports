	<!DOCTYPE html>
	<html  lang="en-US" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#">
	<head>
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1" />

		<link rel="profile" href="https://gmpg.org/xfn/11" />
		<link rel="pingback" href="https://labs.yarix.com/xmlrpc.php" />
		<title>Malware Analysis: Ragnarok Ransomware &#8211; YLabs</title>
<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//www.googletagmanager.com' />
<link rel="alternate" type="application/rss+xml" title="YLabs &raquo; Feed" href="https://labs.yarix.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="YLabs &raquo; Comments Feed" href="https://labs.yarix.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="YLabs &raquo; Malware Analysis: Ragnarok Ransomware Comments Feed" href="https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/feed/" />
		<link rel="shortcut icon" href="//labs.yarix.com/wp-content/uploads/2021/01/favicon.png" type="image/x-icon" />
				<link rel="apple-touch-icon" href="//labs.yarix.com/wp-content/uploads/2021/01/favicon.png" />
				<link rel="apple-touch-icon" sizes="120x120" href="//labs.yarix.com/wp-content/uploads/2021/01/favicon.png" />
				<link rel="apple-touch-icon" sizes="76x76" href="//labs.yarix.com/wp-content/uploads/2021/01/favicon.png" />
				<link rel="apple-touch-icon" sizes="152x152" href="//labs.yarix.com/wp-content/uploads/2021/01/favicon.png" />
			<meta name="twitter:card" content="summary_large_image">
	<meta property="twitter:title" content="Malware Analysis: Ragnarok Ransomware"/>
	<meta property="og:title" content="Malware Analysis: Ragnarok Ransomware"/>
	<meta property="og:type" content="website"/>
	<meta property="og:url" content="https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/"/>
	<meta property="og:site_name" content="YLabs"/>
	<meta property="og:description" content="The analysed sample is a malware employed by the Threat Actor known as Ragnarok. The ransomware is responsible for files’ encryption and it is typically executed, by the actors themselves, on the compromised machines. The name of the analysed executable is xs_high.exe, but others have&hellip;"/>

						<meta property="og:image" content="https://labs.yarix.com/wp-content/uploads/2021/04/ransomware-scaled.jpg"/>
				<script>
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/labs.yarix.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=68e3e931987008441e243dbc12fba3e7"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
</script>
<style id='wp-emoji-styles-inline-css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<style id='classic-theme-styles-inline-css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--primary: var(--porto-primary-color);--wp--preset--color--secondary: var(--porto-secondary-color);--wp--preset--color--tertiary: var(--porto-tertiary-color);--wp--preset--color--quaternary: var(--porto-quaternary-color);--wp--preset--color--dark: var(--porto-dark-color);--wp--preset--color--light: var(--porto-light-color);--wp--preset--color--primary-hover: var(--porto-primary-light-5);--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='cookie-notice-front-css' href='https://labs.yarix.com/wp-content/plugins/cookie-notice/css/front.min.css?ver=2.4.18' media='all' />
<link rel='stylesheet' id='vcv:assets:front:style-css' href='https://labs.yarix.com/wp-content/plugins/visualcomposer/public/dist/front.bundle.css?ver=45.9.0' media='all' />
<style id='vcv:assets:front:style:3615-inline-css'>
.vce{margin-bottom:30px}.vce-row-container{width:100%}.vce-row{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-left:0;margin-right:0;transition:box-shadow .2s}.vce-row-content>.vce-col:last-child{margin-right:0}.vce-row-full-height{min-height:100vh}.vce-row-content{-ms-flex:1 1 auto;flex:1 1 auto;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-ms-flex-align:start;align-items:flex-start;min-height:1em;position:relative}.vce-row-wrap--reverse>.vce-row-content{-ms-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse;-ms-flex-line-pack:end;align-content:flex-end;-ms-flex-align:end;align-items:flex-end}.vce-row-columns--top>.vce-row-content{-ms-flex-line-pack:start;align-content:flex-start}.vce-row-columns--top.vce-row-wrap--reverse>.vce-row-content{-ms-flex-line-pack:end;align-content:flex-end}.vce-row-columns--middle>.vce-row-content{-ms-flex-line-pack:center;align-content:center}.vce-row-columns--bottom>.vce-row-content{-ms-flex-line-pack:end;align-content:flex-end}.vce-row-columns--bottom.vce-row-wrap--reverse>.vce-row-content{-ms-flex-line-pack:start;align-content:flex-start}.vce-row-columns--bottom>.vce-row-content:after,.vce-row-columns--middle>.vce-row-content:after,.vce-row-columns--top>.vce-row-content:after{content:"";width:100%;height:0;overflow:hidden;visibility:hidden;display:block}.vce-row-content--middle>.vce-row-content>.vce-col>.vce-col-inner{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}.vce-row-content--bottom>.vce-row-content>.vce-col>.vce-col-inner{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-direction:column;flex-direction:column}.vce-row-equal-height>.vce-row-content{-ms-flex-align:stretch;align-items:stretch}.vce-row-columns--stretch>.vce-row-content{-ms-flex-line-pack:stretch;align-content:stretch;-ms-flex-align:stretch;align-items:stretch}.vce-row[data-vce-full-width=true]{position:relative;box-sizing:border-box}.vce-row[data-vce-stretch-content=true].vce-row-no-paddings{padding-left:0;padding-right:0}.vce-row.vce-element--has-background{padding-left:30px;padding-right:30px;padding-top:30px}.vce-row.vce-element--has-background[data-vce-full-width=true]:not([data-vce-stretch-content=true]){padding-left:0;padding-right:0}.vce-row.vce-element--has-background.vce-row--has-col-background{padding-bottom:30px}.vce-row>.vce-row-content>.vce-col.vce-col--all-last{margin-right:0}.rtl .vce-row>.vce-row-content>.vce-col.vce-col--all-last,.rtl.vce-row>.vce-row-content>.vce-col.vce-col--all-last{margin-left:0}@media (min-width:0) and (max-width:543px){.vce-row.vce-element--xs--has-background{padding-left:30px;padding-right:30px;padding-top:30px}.vce-row.vce-element--xs--has-background[data-vce-full-width=true]:not([data-vce-stretch-content=true]){padding-left:0;padding-right:0}.vce-row.vce-element--xs--has-background.vce-row--xs--has-col-background{padding-bottom:30px}.vce-row.vce-element--xs--has-background.vce-row--has-col-background{padding-bottom:30px}.vce-row.vce-element--has-background.vce-row--xs--has-col-background{padding-bottom:30px}.vce-row>.vce-row-content>.vce-col.vce-col--xs-last{margin-right:0}.rtl .vce-row>.vce-row-content>.vce-col.vce-col--xs-last,.rtl.vce-row>.vce-row-content>.vce-col.vce-col--xs-last{margin-left:0}}@media (min-width:544px) and (max-width:767px){.vce-row.vce-element--sm--has-background{padding-left:30px;padding-right:30px;padding-top:30px}.vce-row.vce-element--sm--has-background[data-vce-full-width=true]:not([data-vce-stretch-content=true]){padding-left:0;padding-right:0}.vce-row.vce-element--sm--has-background.vce-row--sm--has-col-background{padding-bottom:30px}.vce-row.vce-element--sm--has-background.vce-row--has-col-background{padding-bottom:30px}.vce-row.vce-element--has-background.vce-row--sm--has-col-background{padding-bottom:30px}.vce-row>.vce-row-content>.vce-col.vce-col--sm-last{margin-right:0}.rtl .vce-row>.vce-row-content>.vce-col.vce-col--sm-last,.rtl.vce-row>.vce-row-content>.vce-col.vce-col--sm-last{margin-left:0}}@media (min-width:768px) and (max-width:991px){.vce-row.vce-element--md--has-background{padding-left:30px;padding-right:30px;padding-top:30px}.vce-row.vce-element--md--has-background[data-vce-full-width=true]:not([data-vce-stretch-content=true]){padding-left:0;padding-right:0}.vce-row.vce-element--md--has-background.vce-row--md--has-col-background{padding-bottom:30px}.vce-row.vce-element--md--has-background.vce-row--has-col-background{padding-bottom:30px}.vce-row.vce-element--has-background.vce-row--md--has-col-background{padding-bottom:30px}.vce-row>.vce-row-content>.vce-col.vce-col--md-last{margin-right:0}.rtl .vce-row>.vce-row-content>.vce-col.vce-col--md-last,.rtl.vce-row>.vce-row-content>.vce-col.vce-col--md-last{margin-left:0}}@media (min-width:992px) and (max-width:1199px){.vce-row.vce-element--lg--has-background{padding-left:30px;padding-right:30px;padding-top:30px}.vce-row.vce-element--lg--has-background[data-vce-full-width=true]:not([data-vce-stretch-content=true]){padding-left:0;padding-right:0}.vce-row.vce-element--lg--has-background.vce-row--lg--has-col-background{padding-bottom:30px}.vce-row.vce-element--lg--has-background.vce-row--has-col-background{padding-bottom:30px}.vce-row.vce-element--has-background.vce-row--lg--has-col-background{padding-bottom:30px}.vce-row>.vce-row-content>.vce-col.vce-col--lg-last{margin-right:0}.rtl .vce-row>.vce-row-content>.vce-col.vce-col--lg-last,.rtl.vce-row>.vce-row-content>.vce-col.vce-col--lg-last{margin-left:0}}@media (min-width:1200px){.vce-row.vce-element--xl--has-background{padding-left:30px;padding-right:30px;padding-top:30px}.vce-row.vce-element--xl--has-background[data-vce-full-width=true]:not([data-vce-stretch-content=true]){padding-left:0;padding-right:0}.vce-row.vce-element--xl--has-background.vce-row--xl--has-col-background{padding-bottom:30px}.vce-row.vce-element--xl--has-background.vce-row--has-col-background{padding-bottom:30px}.vce-row.vce-element--has-background.vce-row--xl--has-col-background{padding-bottom:30px}.vce-row>.vce-row-content>.vce-col.vce-col--xl-last{margin-right:0}.rtl .vce-row>.vce-row-content>.vce-col.vce-col--xl-last,.rtl.vce-row>.vce-row-content>.vce-col.vce-col--xl-last{margin-left:0}}.vce-col{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%;box-sizing:border-box;display:-ms-flexbox;display:flex;min-width:1em;position:relative}.vce-col--auto{-ms-flex:1;flex:1;-ms-flex-preferred-size:auto;flex-basis:auto}.vce-col-content,.vce-col-inner{position:relative;overflow-wrap:break-word;transition:box-shadow .2s}.vce-col-inner{width:100%}.vce-col-direction--rtl{direction:rtl}.vce-element--has-background>.vce-col-inner>.vce-col-content{padding-top:30px;padding-left:30px;padding-right:30px}.vce-col.vce-col--all-hide{display:none}@media (min-width:0),print{.vce-col--xs-auto{-ms-flex:1 1 0;flex:1 1 0;width:auto}.vce-col--xs-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.vce-col.vce-col--xs-visible{display:-ms-flexbox;display:flex}.vce-col.vce-col--xs-hide{display:none}}.vce-row-container>.vce-row>.vce-row-content>.vce-col>.vce-col-inner{padding:0}@media (min-width:544px),print{.vce-col--sm-auto{-ms-flex:1 1 0;flex:1 1 0;width:auto}.vce-col--sm-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.vce-col.vce-col--sm-visible{display:-ms-flexbox;display:flex}.vce-col.vce-col--sm-hide{display:none}}@media (min-width:768px),print{.vce-col--md-auto{-ms-flex:1 1 0;flex:1 1 0;width:auto}.vce-col--md-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.vce-col.vce-col--md-visible{display:-ms-flexbox;display:flex}.vce-col.vce-col--md-hide{display:none}}@media screen and (min-width:992px),print{.vce-col--lg-auto{-ms-flex:1 1 0;flex:1 1 0;width:1px}.vce-col--lg-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.vce-col.vce-col--lg-visible{display:-ms-flexbox;display:flex}.vce-col.vce-col--lg-hide{display:none}}@media (min-width:1200px),print{.vce-col--xl-auto{-ms-flex:1 1 0;flex:1 1 0;width:auto}.vce-col--xl-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.vce-col.vce-col--xl-visible{display:-ms-flexbox;display:flex}.vce-col.vce-col--xl-hide{display:none}}@media (min-width:0) and (max-width:543px){.vce-element--xs--has-background>.vce-col-inner>.vce-col-content{padding-top:30px;padding-left:30px;padding-right:30px}}@media (min-width:544px) and (max-width:767px){.vce-element--sm--has-background>.vce-col-inner>.vce-col-content{padding-top:30px;padding-left:30px;padding-right:30px}}@media (min-width:768px) and (max-width:991px){.vce-element--md--has-background>.vce-col-inner>.vce-col-content{padding-top:30px;padding-left:30px;padding-right:30px}}@media (min-width:992px) and (max-width:1199px){.vce-element--lg--has-background>.vce-col-inner>.vce-col-content{padding-top:30px;padding-left:30px;padding-right:30px}}@media (min-width:1200px){.vce-element--xl--has-background>.vce-col-inner>.vce-col-content{padding-top:30px;padding-left:30px;padding-right:30px}}.vce-row--col-gap-20>.vce-row-content>.vce-col{margin-right:20px}.vce-row--col-gap-20>.vce-row-content>.vce-column-resizer .vce-column-resizer-handler{width:20px}.rtl .vce-row--col-gap-20>.vce-row-content>.vce-col,.rtl.vce-row--col-gap-20>.vce-row-content>.vce-col{margin-left:20px;margin-right:0} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-37789452>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-37789452>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-37789452>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-37789452>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-24fadc27>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-24fadc27>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-24fadc27>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-24fadc27>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-c8aac684>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-c8aac684>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-c8aac684>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-c8aac684>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-113622ae>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-113622ae>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-113622ae>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-113622ae>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-fc07aa8c>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-fc07aa8c>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-fc07aa8c>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-fc07aa8c>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-aa438e48>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-aa438e48>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-aa438e48>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-aa438e48>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} #el-aa438e48 [vce-box-shadow=el-aa438e48],#el-aa438e48[vce-box-shadow=el-aa438e48]{box-shadow:0 0 4px 2px rgba(85,85,85,.5)} #el-aa438e48 [vce-hover-box-shadow=el-aa438e48]:focus,#el-aa438e48 [vce-hover-box-shadow=el-aa438e48]:hover,#el-aa438e48[vce-hover-box-shadow=el-aa438e48]:focus,#el-aa438e48[vce-hover-box-shadow=el-aa438e48]:hover{box-shadow:0 0 4px 2px rgba(85,85,85,.8)} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-3a3fc257>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-3a3fc257>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-3a3fc257>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-3a3fc257>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-acabf6cb>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-acabf6cb>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-acabf6cb>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-acabf6cb>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-cbf3a6e9>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-cbf3a6e9>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-cbf3a6e9>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-cbf3a6e9>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-626c86e4>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-626c86e4>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-626c86e4>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-626c86e4>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-f66a7cc5>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-f66a7cc5>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-f66a7cc5>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-f66a7cc5>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-e6fcded2>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-e6fcded2>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-e6fcded2>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-e6fcded2>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:544px),print{.vce-row--col-gap-20#el-86a7fbc1>.vce-row-content>.vce-col--sm-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:768px),print{.vce-row--col-gap-20#el-86a7fbc1>.vce-row-content>.vce-col--md-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:992px),print{.vce-row--col-gap-20#el-86a7fbc1>.vce-row-content>.vce-col--lg-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}} @media all and (min-width:1200px),print{.vce-row--col-gap-20#el-86a7fbc1>.vce-row-content>.vce-col--xl-auto{-webkit-flex:1 1 0;-ms-flex:1 1 0px;flex:1 1 0;width:auto;max-width:none}}
</style>
<link rel='stylesheet' id='enlighterjs-css' href='https://labs.yarix.com/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=7WLOmyKMcgORyYv' media='all' />
<link rel='stylesheet' id='porto-css-vars-css' href='https://labs.yarix.com/wp-content/uploads/porto_styles/theme_css_vars.css?ver=7.1.13' media='all' />
<link rel='stylesheet' id='bootstrap-css' href='https://labs.yarix.com/wp-content/uploads/porto_styles/bootstrap.css?ver=7.1.13' media='all' />
<link rel='stylesheet' id='porto-plugins-css' href='https://labs.yarix.com/wp-content/themes/porto/css/plugins.css?ver=7.1.13' media='all' />
<link rel='stylesheet' id='porto-theme-css' href='https://labs.yarix.com/wp-content/themes/porto/css/theme.css?ver=7.1.13' media='all' />
<link rel='stylesheet' id='porto-shortcodes-css' href='https://labs.yarix.com/wp-content/uploads/porto_styles/shortcodes.css?ver=7.1.13' media='all' />
<link rel='stylesheet' id='porto-theme-vc-css' href='https://labs.yarix.com/wp-content/themes/porto/css/theme_vc.css?ver=7.1.13' media='all' />
<link rel='stylesheet' id='porto-theme-radius-css' href='https://labs.yarix.com/wp-content/themes/porto/css/theme_radius.css?ver=7.1.13' media='all' />
<link rel='stylesheet' id='porto-dynamic-style-css' href='https://labs.yarix.com/wp-content/uploads/porto_styles/dynamic_style.css?ver=7.1.13' media='all' />
<link rel='stylesheet' id='porto-type-builder-css' href='https://labs.yarix.com/wp-content/plugins/porto-functionality/builders/assets/type-builder.css?ver=3.1.13' media='all' />
<link rel='stylesheet' id='porto-style-css' href='https://labs.yarix.com/wp-content/themes/porto/style.css?ver=7.1.13' media='all' />
<style id='porto-style-inline-css'>
.side-header-narrow-bar-logo{max-width:100px}#header,.sticky-header .header-main.sticky{border-top:3px solid #ededed}@media (min-width:992px){}.page-top ul.breadcrumb > li.home{display:inline-block}.page-top ul.breadcrumb > li.home a{position:relative;width:14px;text-indent:-9999px}.page-top ul.breadcrumb > li.home a:after{content:"\e883";font-family:'porto';float:left;text-indent:0}
</style>
<script src="https://labs.yarix.com/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script src="https://labs.yarix.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="https://api.w.org/" href="https://labs.yarix.com/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://labs.yarix.com/wp-json/wp/v2/posts/3615" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://labs.yarix.com/xmlrpc.php?rsd" />

<link rel="canonical" href="https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/" />
<link rel='shortlink' href='https://labs.yarix.com/?p=3615' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://labs.yarix.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Flabs.yarix.com%2F2021%2F04%2Fmalware-analysis-ragnarok-ransomware%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://labs.yarix.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Flabs.yarix.com%2F2021%2F04%2Fmalware-analysis-ragnarok-ransomware%2F&#038;format=xml" />
<meta name="generator" content="Site Kit by Google 1.138.0" /><meta name="generator" content="Powered by Visual Composer Website Builder - fast and easy-to-use drag and drop visual editor for WordPress."/><noscript><style>.vce-row-container .vcv-lozad {display: none}</style></noscript><script type="text/javascript">
(function(url){
	if(/(?:Chrome\/26\.0\.1410\.63 Safari\/537\.31|WordfenceTestMonBot)/.test(navigator.userAgent)){ return; }
	var addEvent = function(evt, handler) {
		if (window.addEventListener) {
			document.addEventListener(evt, handler, false);
		} else if (window.attachEvent) {
			document.attachEvent('on' + evt, handler);
		}
	};
	var removeEvent = function(evt, handler) {
		if (window.removeEventListener) {
			document.removeEventListener(evt, handler, false);
		} else if (window.detachEvent) {
			document.detachEvent('on' + evt, handler);
		}
	};
	var evts = 'contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop keydown keypress keyup mousedown mousemove mouseout mouseover mouseup mousewheel scroll'.split(' ');
	var logHuman = function() {
		if (window.wfLogHumanRan) { return; }
		window.wfLogHumanRan = true;
		var wfscr = document.createElement('script');
		wfscr.type = 'text/javascript';
		wfscr.async = true;
		wfscr.src = url + '&r=' + Math.random();
		(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(wfscr);
		for (var i = 0; i < evts.length; i++) {
			removeEvent(evts[i], logHuman);
		}
	};
	for (var i = 0; i < evts.length; i++) {
		addEvent(evts[i], logHuman);
	}
})('//labs.yarix.com/?wordfence_lh=1&hid=71046877E9634021EDCFFC70BFD3DFAF');
</script>		<script type="text/javascript">
		WebFontConfig = {
			google: { families: [ 'Open+Sans:300,400,500,600,700,800','Shadows+Into+Light:400,700','Playfair+Display:400,700' ] }
		};
		(function(d) {
			var wf = d.createElement('script'), s = d.scripts[d.scripts.length - 1];
			wf.src = 'https://labs.yarix.com/wp-content/themes/porto/js/libs/webfont.js';
			wf.async = true;
			s.parentNode.insertBefore(wf, s);
		})(document);</script>
		<link rel="icon" href="https://labs.yarix.com/wp-content/uploads/2021/01/favicon.png" sizes="32x32" />
<link rel="icon" href="https://labs.yarix.com/wp-content/uploads/2021/01/favicon.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://labs.yarix.com/wp-content/uploads/2021/01/favicon.png" />
<meta name="msapplication-TileImage" content="https://labs.yarix.com/wp-content/uploads/2021/01/favicon.png" />
	</head>
	<body class="post-template-default single single-post postid-3615 single-format-standard wp-embed-responsive cookies-not-set vcwb porto-rounded porto-breadcrumbs-bb full blog-1">
	
	<div class="page-wrapper"><!-- page wrapper -->
		
											<!-- header wrapper -->
				<div class="header-wrapper">
										
<header id="header" class="header-corporate header-11">

	
	<div class="header-main">
		<div class="container">
			<div class="header-left">
				
	<div class="logo">
	<a href="https://labs.yarix.com/" title="YLabs - Research &amp; Development"  rel="home">
		<img class="img-responsive sticky-logo sticky-retina-logo" src="//labs.yarix.com/wp-content/uploads/2021/01/yarix_logo.png" alt="YLabs" /><img class="img-responsive standard-logo retina-logo" width="159" height="42" src="//labs.yarix.com/wp-content/uploads/2021/01/yarix_logo.png" alt="YLabs" />	</a>
	</div>
				</div>

			<div class="header-right">
								<div id="main-menu"
								>
				<ul id="menu-main-menu" class="main-menu mega-menu menu-flat menu-flat-border show-arrow"><li id="nav-menu-item-3270" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home narrow"><a href="https://labs.yarix.com/"><i class="fas fa-home"></i>Home</a></li>
<li id="nav-menu-item-3482" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent active narrow"><a href="https://labs.yarix.com/category/blog/"><i class="fas fa-sticky-note"></i>Blog</a></li>
<li id="nav-menu-item-3384" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children has-sub narrow"><a href="https://labs.yarix.com/advisories/"><i class="fas fa-bug"></i>Advisories</a><div class="popup"><div class="inner" style=""><ul class="sub-menu skeleton-body"></ul></div></div></li>
<li id="nav-menu-item-3271" class="menu-item menu-item-type-custom menu-item-object-custom narrow"><a href="https://www.yarix.com/job-opportunity/">Careers</a></li>
</ul>				</div>
				<div class="share-links">		<a target="_blank"  rel="nofollow noopener noreferrer" class="share-facebook" href="https://www.facebook.com/Yarixsocial" title="Facebook"></a>
				<a target="_blank"  rel="nofollow noopener noreferrer" class="share-twitter" href="https://twitter.com/Yarixsocial" title="Twitter"></a>
				<a target="_blank"  rel="nofollow noopener noreferrer" class="share-youtube" href="https://www.youtube.com/user/yarixuser" title="Youtube"></a>
				<a target="_blank"  rel="nofollow noopener noreferrer" class="share-instagram" href="https://www.instagram.com/insta_yarix/" title="Instagram"></a>
				<a target="_blank"  rel="nofollow noopener noreferrer" class="share-linkedin" href="https://www.linkedin.com/company/yarix" title="LinkedIn"></a>
				<a target="_blank"  rel="nofollow noopener noreferrer" class="share-flickr" href="https://www.flickr.com/people/145194204@N06/" title="Flickr"></a>
		</div>
				
				<a  aria-label="Mobile Menu" href="#" class="mobile-toggle"><i class="fas fa-bars"></i></a>
			</div>
		</div>
		
<div id="nav-panel">
	<div class="container">
		<div class="mobile-nav-wrap skeleton-body">
		<i class="porto-loading-icon"></i>		</div>
	</div>
</div>
	</div>
</header>

									</div>
				<!-- end header wrapper -->
			
			
					<section class="page-top page-header-6">
	<div class="container hide-title">
	<div class="row">
		<div class="col-lg-12 clearfix">
			<div class="pt-right d-none">
								<h1 class="page-title">Malware Analysis: Ragnarok Ransomware</h1>
							</div>
							<div class="breadcrumbs-wrap pt-left">
					<ul class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList"><li class="home" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a itemprop="item" href="https://labs.yarix.com" title="Go to Home Page"><span itemprop="name">Home</span></a><meta itemprop="position" content="1" /><i class="delimiter delimiter-2"></i></li><li>Malware Analysis: Ragnarok Ransomware</li></ul>				</div>
								</div>
	</div>
</div>
	</section>
	
		<div id="main" class="column2 column2-right-sidebar boxed"><!-- main -->

			<div class="container">
			<div class="row main-content-wrap">

			<!-- main content -->
			<div class="main-content col-lg-9">

			
<div id="content" role="main" class="porto-single-page">

								<a class="inline-block m-b-md" href="https://labs.yarix.com"><i class="fas fa-long-arrow-alt-left p-l-xs"></i> Back to Posts</a>
			
<article class="post-large post-title-simple post-3615 post type-post status-publish format-standard has-post-thumbnail hentry category-blog category-malware-analysis tag-analysis tag-automation tag-configuration-extraction tag-elio-biasiotto tag-malware tag-paolo-stagno tag-ragnarok tag-ransomware tag-reverse-engineering tag-voidsec">

		<div class="post-image single">
		<div class="post-slideshow porto-carousel owl-carousel has-ccols ccols-1  nav-inside nav-inside-center nav-style-2 show-nav-hover" data-plugin-options='{"nav":true}'>
											<div>
								<div class="img-thumbnail">
						<img width="1140" height="445" src="https://labs.yarix.com/wp-content/uploads/2021/04/ransomware-1140x445.jpg" class="owl-lazy img-responsive" alt="" decoding="async" fetchpriority="high" />											</div>
								</div>
								</div>
		
			</div>
	
			<div class="post-date">
			<span class="day">29</span><span class="month">Apr</span><time datetime="2021-04-29">29/04/2021</time>		</div>
	
	<div class="post-content">
					<h2 class="entry-title">Malware Analysis: Ragnarok Ransomware</h2>
				<span class="vcard" style="display: none;"><span class="fn"><a href="https://labs.yarix.com/author/ylabs/" title="Posts by Ylabs" rel="author">Ylabs</a></span></span><span class="updated" style="display:none">2022-07-14T09:42:16+02:00</span>
		<!-- Post meta before content -->
		
<div class="post-meta ">
				<span class="meta-author">
					<i class="far fa-user"></i>
							<span>By</span>
					<a href="https://labs.yarix.com/author/ylabs/" title="Posts by Ylabs" rel="author">Ylabs</a>		</span>
				
	
	</div>

		<div class="entry-content">
			<span class="rt-reading-time" style="display: block;"><span class="rt-label rt-prefix">Reading Time: </span> <span class="rt-time">11</span> <span class="rt-label rt-postfix">minutes</span></span>
<div class="vce-row-container">
<div id="el-cbf3a6e9" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-cbf3a6e9">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-465b479c" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-465b479c">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-465b479c">
<div class="vce-text-block">
<div id="el-df5c029e" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-df5c029e">

The analysed sample is a malware employed by the Threat Actor known as <em>Ragnarok. </em>The ransomware is responsible for files’ encryption and it is typically executed, by the actors themselves, on the compromised machines. The name of the analysed executable is <code>xs_high.exe</code>, but others have been found used by the same ransomware family (such as <code>xs_normal.exe</code> and <code>xs_remote.exe</code>).

The configuration within the malware contains information regarding the encryption activities, from whitelisted countries to the contents of the ransom note. It is interesting to note that the same configuration has been used across different victims, suggesting that the actor’s activities are not specifically tailored to them.

The ransomware is a DLL named <code>cry_demo.dll</code>, which is packed inside the <code>xs_high.exe</code> executable. The unpacking process takes place with self-injection (also known as PE-overwrite), an injection technique that does not involve spawning new processes or threads. All the packed DLL code is contained in the .data section of the <code>xs_high.exe</code> executable and will get unpacked and decrypted by a custom loader before being executed.

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-86a7fbc1" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-86a7fbc1">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-5e96f8cb" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-5e96f8cb">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-5e96f8cb">
<div class="vce-text-block">
<div id="el-ef23b8fb" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-ef23b8fb">
<h2>IOC</h2>
<strong>Filename</strong>: xs_high.exe

<strong>Hash</strong>:
<ul>
 	<li>MD5: A0FC3C769DE5CF550DFFB49FF6521A81</li>
 	<li>SHA1: 3B7CA963CB2FC5ABC9F09AA075E51A5782BCFDE4</li>
 	<li>SHA256: 360FFABF106C665CA7332F84BA158335FAA487E3B47C675FD2715FC7A37DB6A7</li>
</ul>
<strong>Network indicators</strong>:
<ul>
 	<li>IP: 64.32.25.202</li>
 	<li>Port: 8081</li>
</ul>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-acabf6cb" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-acabf6cb">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-e39aae8a" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-e39aae8a">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-e39aae8a">
<div class="vce-text-block">
<div id="el-1b268303" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-1b268303">
<h2>Analysis</h2>
<h3>Configuration Extraction</h3>
The analysed sample (<code>xs_high.exe</code>) contains some obfuscated and encrypted code in its .data section. It copies such data in memory and, once decrypted, transfers the execution flow to it. The encrypted data is a DLL (<code>cry_demo.dll</code>) that contains, among other things, the ransomware’s configuration. Once opened in PE-Bear, the size of the sample’s <code>.data</code> section stands out.

<figure id="attachment_3616" aria-describedby="caption-attachment-3616" style="width: 1006px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload wp-image-3616 size-full" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x52.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_1.png" alt="" width="1006" height="533" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x52.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_1.png 1006w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_1-768x407.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_1-640x339.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_1-400x212.png 400w" sizes="(max-width: 1006px) 100vw, 1006px" /><figcaption id="caption-attachment-3616" class="wp-caption-text">PE-Bear view of the ransomware xs_high.exe showing a big .data section</figcaption></figure>

The way the sample performs self-injection is through the following steps:
<ol>
 	<li>Loading DLL’s obfuscated code from the <code>.data</code> section into memory with <code>HeapAlloc()</code>.</li>
 	<li>Deobfuscating parts of the code with a bitwise <code>NOT</code> operation on the memory region.</li>
 	<li>Loading more encrypted code into memory with <code>VirtualAlloc()</code>.</li>
 	<li>Changing the protection of the committed section, enabling execution, with <code>VirtualProtect()</code>.</li>
 	<li>Transferring the execution flow to the newly allocated region of memory (the now fully unpacked DLL).</li>
</ol>
Firstly, a memory area of around 93k bytes (<code>16E00h</code>) is allocated using the <code>HeapAlloc()</code> API and is going to be filled with parts of the .data section of the packer’s executable. This can be seen in the following x64dbg screenshot, showing the <code>rep movsd</code> instruction (in red) being executed <code>ecx </code>times (green).

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-626c86e4" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-626c86e4">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-1917ce6f" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-1917ce6f">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-1917ce6f">
<div class="vce-text-block">
<div id="el-348e5433" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-348e5433">

<figure id="attachment_3617" aria-describedby="caption-attachment-3617" style="width: 1137px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload wp-image-3617 size-full" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x58.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_1.png" alt="" width="1137" height="670" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x58.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_1.png 1137w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_1-1024x603.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_1-768x453.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_1-640x377.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_1-400x236.png 400w" sizes="(max-width: 1137px) 100vw, 1137px" /><figcaption id="caption-attachment-3617" class="wp-caption-text">Data being copied from the .data section (ESI) into the memory allocated with HeapAlloc (EDI)</figcaption></figure>

The data copied into memory (orange) is being read from the <code>.data</code> section pointed by the address stored in the <code>ESI</code> register.

<figure id="attachment_3618" aria-describedby="caption-attachment-3618" style="width: 1414px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3618" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x7.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/memory_map_1.png" alt="" width="1414" height="111" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x7.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/memory_map_1.png 1414w, https://labs.yarix.com/wp-content/uploads/2021/04/memory_map_1-1024x80.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/memory_map_1-768x60.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/memory_map_1-640x50.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/memory_map_1-400x31.png 400w" sizes="(max-width: 1414px) 100vw, 1414px" /><figcaption id="caption-attachment-3618" class="wp-caption-text">The ransomware mapped into memory, highlighted is the section containing the data being copied</figcaption></figure>

A quick look at that section does in fact reveal the same data being written.

<figure id="attachment_3619" aria-describedby="caption-attachment-3619" style="width: 884px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3619" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x66.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_2.png" alt="" width="884" height="584" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x66.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_2.png 884w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_2-768x507.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_2-640x423.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_2-400x264.png 400w" sizes="(max-width: 884px) 100vw, 884px" /><figcaption id="caption-attachment-3619" class="wp-caption-text">View of the .data section, showing the data being copied into memory</figcaption></figure>

By the MZ header, one can already guess that this is a PE being written. The packed DLL (the actual ransomware) is now being copied into memory to perform some deobfuscation on it. Parts of the DLL does not need deobfuscation, like the next copied section. A good indicator is the first bytes (<code>55 8B EC</code>) that represent the opcodes of a prologue, correctly disassembled by x64dbg, as can be seen in the below picture.

<figure id="attachment_3620" aria-describedby="caption-attachment-3620" style="width: 524px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3620" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x54.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_3.png" alt="" width="524" height="284" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x54.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_3.png 524w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_3-400x217.png 400w" sizes="(max-width: 524px) 100vw, 524px" /><figcaption id="caption-attachment-3620" class="wp-caption-text">Assembly code being copied into the memory allocated with HeapAlloc()</figcaption></figure>

<figure id="attachment_3621" aria-describedby="caption-attachment-3621" style="width: 623px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3621" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x29.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_4.png" alt="" width="623" height="181" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x29.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_4.png 623w, https://labs.yarix.com/wp-content/uploads/2021/04/data_heap_allocation_4-400x116.png 400w" sizes="(max-width: 623px) 100vw, 623px" /><figcaption id="caption-attachment-3621" class="wp-caption-text">Newly copied data correctly disassembled by x64dbg</figcaption></figure>

Finally, packer’s code copies some other parts from the <code>.data</code> section, which get deobfuscated by a routine that performs a bitwise <code>NOT</code> operation on every byte:

<figure id="attachment_3622" aria-describedby="caption-attachment-3622" style="width: 825px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3622" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x80.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/NOT_1.png" alt="" width="825" height="661" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x80.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/NOT_1.png 825w, https://labs.yarix.com/wp-content/uploads/2021/04/NOT_1-768x615.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/NOT_1-640x513.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/NOT_1-400x320.png 400w" sizes="(max-width: 825px) 100vw, 825px" /><figcaption id="caption-attachment-3622" class="wp-caption-text">Bitwise NOT routine (red) deobfuscates the data (green)</figcaption></figure>

After the deobfuscation:

<figure id="attachment_3623" aria-describedby="caption-attachment-3623" style="width: 828px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3623" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x77.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/NOT_2.png" alt="" width="828" height="645" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x77.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/NOT_2.png 828w, https://labs.yarix.com/wp-content/uploads/2021/04/NOT_2-768x598.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/NOT_2-640x499.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/NOT_2-400x312.png 400w" sizes="(max-width: 828px) 100vw, 828px" /><figcaption id="caption-attachment-3623" class="wp-caption-text">Deobfuscated data after the bitwise NOT</figcaption></figure>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-113622ae" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-113622ae">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-f939182d" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-f939182d">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-f939182d">
<div class="vce-text-block">
<div id="el-5ab74881" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-5ab74881">

The ransomware’s packer then performs some allocations of memory using the <code>VirtualAlloc()</code> API. Following is a list of subsequent calls to this API:

<figure id="attachment_3624" aria-describedby="caption-attachment-3624" style="width: 1349px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3624" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x21.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/virtual_alloc_1.png" alt="" width="1349" height="286" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x21.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/virtual_alloc_1.png 1349w, https://labs.yarix.com/wp-content/uploads/2021/04/virtual_alloc_1-1024x217.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/virtual_alloc_1-768x163.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/virtual_alloc_1-640x136.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/virtual_alloc_1-400x85.png 400w" sizes="(max-width: 1349px) 100vw, 1349px" /><figcaption id="caption-attachment-3624" class="wp-caption-text">Trace of the memory allocations performed by the ransomware with VirtualAlloc()</figcaption></figure>

The memory areas allocated are contiguous: every time the <code>VirtualAlloc()</code> API is called, a different piece of the memory previously allocated with <code>HeapAlloc()</code> and now deobfuscated is copied, effectively ending up copying it all. The part containing the configuration is copied by the fifth <code>VirtualAlloc()</code> API call (6k bytes).

<figure id="attachment_3625" aria-describedby="caption-attachment-3625" style="width: 1092px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3625" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x60.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/config_1.png" alt="" width="1092" height="661" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x60.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/config_1.png 1092w, https://labs.yarix.com/wp-content/uploads/2021/04/config_1-1024x620.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/config_1-768x465.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/config_1-640x387.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/config_1-400x242.png 400w" sizes="(max-width: 1092px) 100vw, 1092px" /><figcaption id="caption-attachment-3625" class="wp-caption-text">Encrypted configuration being copied after the bitwise NOT deobfuscation</figcaption></figure>

After the data has been written into these newly allocated memory regions, different protections attributes are changed using <code>VirtualProtect()</code>. In particular, the area containing the <code>.text</code> section of the DLL is rendered executable, passing the address (in this case <code>0x10001000</code>) and the <code>PAGE_EXECUTE_READ </code>flag (<code>0x20</code>) as parameters to <code>VirtualProtect()</code> API.

<figure id="attachment_3626" aria-describedby="caption-attachment-3626" style="width: 1089px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3626" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x34.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/virtual_protect_1.png" alt="" width="1089" height="378" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x34.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/virtual_protect_1.png 1089w, https://labs.yarix.com/wp-content/uploads/2021/04/virtual_protect_1-1024x355.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/virtual_protect_1-768x267.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/virtual_protect_1-640x222.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/virtual_protect_1-400x139.png 400w" sizes="(max-width: 1089px) 100vw, 1089px" /><figcaption id="caption-attachment-3626" class="wp-caption-text">Execution protection is given to the .text section of the DLL</figcaption></figure>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-aa438e48" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-aa438e48">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-c84616f2" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-c84616f2">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-c84616f2">
<div class="vce-text-block">
<div id="el-a0d3c596" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-a0d3c596">

At this stage of the injection, the unpacked ransomware DLL is present in memory in its mapped format. This means that the physical and virtual addresses of the PE are not aligned, and must be re-based: if we dump it, analysis tools are not going to recognise its structure due to this misalignment, and they will not be able to detect a PE file.

<figure id="attachment_3627" aria-describedby="caption-attachment-3627" style="width: 873px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3627" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x44.jpg" data-oi="../../../wp-content/uploads/2021/04/pe_bear_2.png" alt="" width="873" height="388" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x44.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_2.png 873w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_2-768x341.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_2-640x284.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_2-400x178.png 400w" sizes="(max-width: 873px) 100vw, 873px" /><figcaption id="caption-attachment-3627" class="wp-caption-text">Dumped PE with misaligned addresses</figcaption></figure>

So, for the DLL to be a valid PE file, we need to manually resize the Raw Addresses and adjust the sizes accordingly. Once that is done, PE-Bear successfully parses it and detects it as a DLL named <code>cry_demo.dll</code> with one exported function (<code>start</code>). It was compiled on the 28<sup>th</sup> of January, 2021 at 05:52:19 UTC.

<figure id="attachment_3628" aria-describedby="caption-attachment-3628" style="width: 868px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3628" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x46.jpg" data-oi="../../../wp-content/uploads/2021/04/pe_bear_3.png" alt="" width="868" height="406" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x46.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_3.png 868w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_3-768x359.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_3-640x299.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/pe_bear_3-400x187.png 400w" sizes="(max-width: 868px) 100vw, 868px" /><figcaption id="caption-attachment-3628" class="wp-caption-text">Adjusted PE showing the DLL’s name and exports</figcaption></figure>

The DLL does not have a <code>DllMain</code> function. The custom loader directly passes the address of the only exported function (<code>start</code>) to a <code>call</code> function via the <code>eax</code> register (<code>xs_high.exe+1A83</code>). This is a code obfuscation technique known as “Opaque Predicates”, which prevents the predicates from being evaluated during static analysis, thus requiring dynamic analysis.

<figure id="attachment_3629" aria-describedby="caption-attachment-3629" style="width: 1218px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3629" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x21.jpg" data-oi="../../../wp-content/uploads/2021/04/call_eax_1.png" alt="" width="1218" height="258" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x21.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/call_eax_1.png 1218w, https://labs.yarix.com/wp-content/uploads/2021/04/call_eax_1-1024x217.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/call_eax_1-768x163.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/call_eax_1-640x136.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/call_eax_1-400x85.png 400w" sizes="(max-width: 1218px) 100vw, 1218px" /><figcaption id="caption-attachment-3629" class="wp-caption-text">CALL to eax, which holds the "entry point" of the DLL</figcaption></figure>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-3a3fc257" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-3a3fc257">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-419542d7" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-419542d7">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-419542d7">
<div class="vce-text-block">
<div id="el-00583638" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-00583638">

The DLL “entry point” can be found at <code>0x10004630 </code>while the call to the configuration decryption routine is at <code>0x1000463D - call 0x10002F20</code>.

<figure id="attachment_3630" aria-describedby="caption-attachment-3630" style="width: 1157px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3630" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x11.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/export_1.png" alt="" width="1157" height="135" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x11.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/export_1.png 1157w, https://labs.yarix.com/wp-content/uploads/2021/04/export_1-1024x119.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/export_1-768x90.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/export_1-640x75.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/export_1-400x47.png 400w" sizes="(max-width: 1157px) 100vw, 1157px" /><figcaption id="caption-attachment-3630" class="wp-caption-text">The exported function address, which is passed to the call</figcaption></figure>

The section containing the ransomware’s configuration (<code>0x10017000</code>) is given the <code>PAGE_READWRITE </code>permission (<code>0x04</code>): the reason for this is that the configuration is decrypted, later on, with a custom algorithm that can be found in the DLL itself. Here below the decryption routine used to decrypt its configuration:

<figure id="attachment_3631" aria-describedby="caption-attachment-3631" style="width: 272px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3631" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x212.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/decrypt_routine.png" alt="" width="272" height="577" /><figcaption id="caption-attachment-3631" class="wp-caption-text">Decryption algorithm as can be seen in IDA</figcaption></figure>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-37789452" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-37789452">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-f4635d6f" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-f4635d6f">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-f4635d6f">
<div class="vce-text-block">
<div id="el-3b8bc79e" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-3b8bc79e">

Without diving too far into how we reverse-engineered the decryption routine, here the generic methodology we used:
<ol>
 	<li>General looking at the ASM representation of the decryption routine at runtime.</li>
 	<li>Determining the function calling conventions, the parameters being passed to the functions and the returning values.</li>
 	<li>Deriving generic function’s functionality based on the previous step (looking into the actual function to confirm the thesis).</li>
 	<li>Commenting ASM representation with high-level information.</li>
</ol>
<img decoding="async" class="porto-lazyload aligncenter size-full wp-image-3632" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x42.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/asm_comments.png" alt="" width="906" height="386" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x42.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/asm_comments.png 906w, https://labs.yarix.com/wp-content/uploads/2021/04/asm_comments-768x327.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/asm_comments-640x273.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/asm_comments-400x170.png 400w" sizes="(max-width: 906px) 100vw, 906px" />

Once reaching juicy routines and loops, passing the selected instructions forming the routine to the snowman disassembler in order to gain some insight on the routine itself:

<img decoding="async" class="porto-lazyload aligncenter size-full wp-image-3633" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x53.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/snowman.png" alt="" width="1081" height="579" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x53.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/snowman.png 1081w, https://labs.yarix.com/wp-content/uploads/2021/04/snowman-1024x548.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/snowman-768x411.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/snowman-640x343.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/snowman-400x214.png 400w" sizes="(max-width: 1081px) 100vw, 1081px" />

Begin replacing variable names with meaningful ones, getting usages and memory location content references from the malware itself at runtime:
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">void fun_10002ffe() {
    k = 0;
    w = 0;
    i = 0;
    do {
        asm("cdq");
        y = (w + 1) % 0x7e; // counter
        *(int32_t*)(ebp5 - 4) = y; // memory region
        tmp1 = *reinterpret_cast&lt;uint8_t*&gt;(decryption_key + y - 0x104);
        tmp2 = tmp1;
        asm("cdq");
        k = (uint32_t)((int32_t)(tmp2 + k) % 0x7e);
        tmp3 = *reinterpret_cast&lt;int32_t*&gt;(ebp10 - 4); // memory region
        tmp4 = *reinterpret_cast&lt;uint8_t*&gt;(decryption_key + k - 0x104); 
        *(int8_t*)(decryption_key + tmp3 - 0x104) = *reinterpret_cast&lt;int8_t*&gt;(&amp;tmp4);
        *(uint8_t*)(ebp14 + k - 0x104) = tmp1; //memory region2?
        tmp5 = *reinterpret_cast&lt;uint8_t*&gt;(enc_config + (*reinterpret_cast&lt;uint8_t*&gt;(enc_config + tmp3 - 0x104) + tmp2) % 0x7e - 0x104);
        *(uint8_t*)(i + enc_config) = (uint8_t)(*reinterpret_cast&lt;uint8_t*&gt;(i + enc_config) ^ *reinterpret_cast&lt;uint8_t*&gt;(&amp;tmp5));
        ++i;
        w = *reinterpret_cast&lt;int32_t*&gt;(ebp18 - 4); // memory region
    } while (i &lt; 0x1970);
}
</pre>
Transferring the newly acquired knowledge to the more compact and better disassembled IDA version while simultaneously porting the code to python:
<pre class="EnlighterJSRAW" data-enlighter-language="python">x = 0
k = 0
w = 0

while w &lt; 6512:
    tmp1 = (k + 1) % 126;
    tmp2 = decryption_key[tmp1];
    x = (tmp2 + x) % 126;
    decryption_key[tmp1] = decryption_key[x];
    decryption_key[x] = tmp2;
    enc_config[w] ^= decryption_key[(tmp2 + decryption_key[(k + 1) % 126]) % 126];
    k = tmp1;
    w+=1
</pre>
Which results in the configuration being decrypted.

<figure id="attachment_3634" aria-describedby="caption-attachment-3634" style="width: 745px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3634" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x43.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/config_full_decrypt.gif" alt="" width="745" height="325" /><figcaption id="caption-attachment-3634" class="wp-caption-text">Decryption of the configuration</figcaption></figure>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-24fadc27" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-24fadc27">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-b8d1bf9e" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-b8d1bf9e">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-b8d1bf9e">
<div class="vce-text-block">
<div id="el-b20caa0c" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-b20caa0c">

With all the acquired knowledge we ported all the decryption routine to a python script allowing us to programmatically decrypt multiple sample’s configurations directly from encrypted memory dumps.

As always, the code shown below can also be found on my <a href="https://github.com/VoidSec/RagnarokConfigDecrypt" target="_blank" rel="noopener">GitHub</a> repository as well as the x64dbg and IDA database used for this analysis.
<pre class="EnlighterJSRAW" data-enlighter-language="python">"""
Title:              Ragnarok Ransomware Configuration Decrypter
Author:             Paolo Stagno aka VoidSec - voidsec@voidsec.com - https://voidsec.com
Date:               23/04/2021
IOC:                
"""
#!/usr/bin/python
import argparse
parser = argparse.ArgumentParser(prog="RagnarokConfigDecrypt.py",
                                description="Decrypt the encrypted configuration of the Ragnarok Ransomware")
parser.add_argument("-k", "--key", default="comehereplz", dest="key", help="Key")
parser.add_argument("-c", "--config", required=True, type=argparse.FileType('r'), dest="config", 
                                help="Dumped Encrypted Configuration File (usually start at 0x10017000)")
args = parser.parse_args()

# retrieve encrypted configuration file
enc_config_file = args.config

print("[-] Configuration Key: {}".format(args.key))
key = []
# split the key string char by char into a list
key[:] = args.key

print("[-] Generating in-memory structures")
charset = [0] * 256
big_key = [0] * 256
decryption_key = [0] * 256

i = 0
while i &lt; 256:
    charset[i] = i
    big_key[i] = key[i % len(key)]
    i += 1

print("[-] Generating decryption key")
i = 0
z = 0
while z &lt; 256:
    tmp1 = charset[z]
    i = (i + ord(big_key[z]) + tmp1) % 126
    charset[z] = charset[i]
    charset[i] = tmp1
    z += 1
decryption_key = charset
decryption_key_hex = ""
for byte in decryption_key:
    decryption_key_hex += "{0:0{1}X} ".format((byte), 2)
# "{0:0{1}x}".format(1,2) fill single byte with leading 0
# "{0:#0{1}x}".format(1,4) -&gt; '0x01

print("[+] Decryption Key:")
print("----------------------------")
print(decryption_key_hex)
print("----------------------------")

f = open("decryption_key.bin", "w")
f.write(decryption_key_hex)
f.close()
print("[-] saved in: decryption_key.bin\n")

print("[-] Reading Encrypted Configuration File")
enc_config = []
tmp = enc_config_file.read().lstrip().rstrip()

for byte in tmp.split(" "):
    enc_config.append(int(byte, 16))
enc_config_file.close()

print("[-] Decrypting Ransomware Configuration")
x = 0
k = 0
w = 0
while w &lt; 6512:
    tmp1 = (k + 1) % 126
    tmp2 = decryption_key[tmp1]
    x = (tmp2 + x) % 126
    decryption_key[tmp1] = decryption_key[x]
    decryption_key[x] = tmp2
    enc_config[w] ^= decryption_key[(
        tmp2 + decryption_key[(k + 1) % 126]) % 126]
    k = tmp1
    w += 1

# convert back from int to ASCII char
enc_config = [chr(byte) for byte in enc_config]
dec_config = ""
# join item in list forming a string
dec_config = dec_config.join(enc_config)

print("[+] Configuration:")
print("----------------------------")
print(dec_config)
print("----------------------------")

f = open("config.json", "w")
f.write(dec_config)
f.close()
print("[-] saved in: config.json")
# =^.^=</pre>
&nbsp;

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-f66a7cc5" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-f66a7cc5">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-eda9603a" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-eda9603a">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-eda9603a">
<div class="vce-text-block">
<div id="el-2f3e59f7" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-2f3e59f7">
<h3>Configuration's Content</h3>
Once dumped, the configuration appears as a JSON object, containing different fields:

<figure id="attachment_3635" aria-describedby="caption-attachment-3635" style="width: 1286px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3635" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x55.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/config_2.png" alt="" width="1286" height="708" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x55.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/config_2.png 1286w, https://labs.yarix.com/wp-content/uploads/2021/04/config_2-1024x564.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/config_2-768x423.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/config_2-640x352.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/config_2-400x220.png 400w" sizes="(max-width: 1286px) 100vw, 1286px" /><figcaption id="caption-attachment-3635" class="wp-caption-text">Decrypted configuration in JSON format, data between square brackets have been removed</figcaption></figure>

The configuration allows us to gain some insight into the Threat Actor, as well as the ransomware mechanisms.

The malware dynamically imports APIs listed in cleartext in the DLL using the <code>LoadLibraryA</code> API as shown below:

<figure id="attachment_3636" aria-describedby="caption-attachment-3636" style="width: 884px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3636" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x71.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/api_import.png" alt="" width="884" height="632" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x71.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/api_import.png 884w, https://labs.yarix.com/wp-content/uploads/2021/04/api_import-768x549.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/api_import-640x458.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/api_import-400x286.png 400w" sizes="(max-width: 884px) 100vw, 884px" /><figcaption id="caption-attachment-3636" class="wp-caption-text">Dynamic import of some APIs</figcaption></figure>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-e6fcded2" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-e6fcded2">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-c01674fd" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-c01674fd">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-c01674fd">
<div class="vce-text-block">
<div id="el-eaa60baf" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-eaa60baf">

APIs functions used by the ransomware, ~60, are contained in the configuration’s <code>API</code> field.

One of the first checks the ransomware performs is about the UI language of the target OS: it queries the registry key <code>SYSTEM\CurrentControlSet\Control\Nls\Language\InstallLanguage</code> through <code>RegQueryValueExA</code> API and checks its value against a list of language codes contained in the language configuration’s field. The ransomware aborts its execution if any of the following languages is found:
<table>
<tbody>
<tr>
<td width="214"><strong>Language Code (Hex)</strong></td>
<td width="214"><strong>Language Identifier</strong></td>
<td width="214"><strong>Language and country</strong></td>
</tr>
<tr>
<td width="214">0419</td>
<td width="214">ru-RU</td>
<td width="214">Russian - Russia</td>
</tr>
<tr>
<td width="214">0804</td>
<td width="214">zh-CN</td>
<td width="214">Chinese (Simplified) - China</td>
</tr>
<tr>
<td width="214">0480</td>
<td width="214">ug-CN</td>
<td width="214">Uyghur - China</td>
</tr>
<tr>
<td width="214">0478</td>
<td width="214">ii-CN</td>
<td width="214">Yi - China</td>
</tr>
<tr>
<td width="214">0451</td>
<td width="214">bo-CN</td>
<td width="214">Tibetan - China</td>
</tr>
<tr>
<td width="214">042b</td>
<td width="214">hy-AM</td>
<td width="214">Armenian - Armenia</td>
</tr>
<tr>
<td width="214">042c</td>
<td width="214">az-Latn-AZ</td>
<td width="214">Azeri (Latin) - Azerbaijan</td>
</tr>
<tr>
<td width="214">082C</td>
<td width="214">az-Cyrl-AZ</td>
<td width="214">Azeri (Cyrillic) - Azerbaijan</td>
</tr>
<tr>
<td width="214">0423</td>
<td width="214">be-BY</td>
<td width="214">Belarusian - Belarus</td>
</tr>
<tr>
<td width="214">043f</td>
<td width="214">kk-KZ</td>
<td width="214">Kazakh - Kazakhstan</td>
</tr>
<tr>
<td width="214">0440</td>
<td width="214">ky-KG</td>
<td width="214">Kyrgyz - Kyrgyzstan</td>
</tr>
<tr>
<td width="214">0819</td>
<td width="214">ru-MO</td>
<td width="214">Russian - Moldova</td>
</tr>
<tr>
<td width="214">0428</td>
<td width="214">tg-Cyrl-TJ</td>
<td width="214">Tajik (Cyrillic) - Tajikistan</td>
</tr>
<tr>
<td width="214">0443</td>
<td width="214">uz-Latn-UZ</td>
<td width="214">Uzbek (Latin) - Uzbekistan</td>
</tr>
<tr>
<td width="214">0442</td>
<td width="214">tk-TM</td>
<td width="214">Turkmen - Turkmenistan</td>
</tr>
<tr>
<td width="214">0422</td>
<td width="214">uk-UA</td>
<td width="214">Ukrainian - Ukraine</td>
</tr>
<tr>
<td width="214">040d</td>
<td width="214">he-IL</td>
<td width="214">Hebrew - Israel</td>
</tr>
<tr>
<td width="214">040A</td>
<td width="214">es-ES_tradnl</td>
<td width="214">Spanish - Spain</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-c8aac684" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-c8aac684">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-503c531e" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-503c531e">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-503c531e">
<div class="vce-text-block">
<div id="el-44638e16" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-44638e16">

Interestingly, besides the usual CIS countries, there are some uncommon ones, such as Israel, Spain and China: this usually implies that the Threat Actor does not want to be hostile against these countries, possibly hinting at their likely geographical origin of its affiliates.

Then, the ransomware sends an HTTP request to the IP and port contained in the configuration, <code>ip</code> (<code>64.32.25.202</code>) and <code>port</code> (<code>8081</code>) fields. The request contains the hostname and private IP address of the machine, as well as a parameter named <code>start</code>, that indicates the beginning of the encryption phase:

<figure id="attachment_3637" aria-describedby="caption-attachment-3637" style="width: 642px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3637" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x16.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/http_req_1.png" alt="" width="642" height="105" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x16.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/http_req_1.png 642w, https://labs.yarix.com/wp-content/uploads/2021/04/http_req_1-640x105.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/http_req_1-400x65.png 400w" sizes="(max-width: 642px) 100vw, 642px" /><figcaption id="caption-attachment-3637" class="wp-caption-text">HTTP request performed at the beginning of the encryption</figcaption></figure>

Then, depending on the machine architecture, the ransomware executes the commands contained in <code>cmd_shadow</code>, <code>cmd_shadow1</code>, <code>cmd_boot</code>, <code>cmd_recovery </code>and <code>cmd_firewall</code>, which results in the shadow copies being deleted, the firewall being disabled and some options being added to the boot’s settings. The ransomware also disables Windows Defender, using the contents of the <code>key</code> and <code>value</code> fields.

<figure id="attachment_3638" aria-describedby="caption-attachment-3638" style="width: 738px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3638" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x36.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/key_value.png" alt="" width="738" height="271" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x36.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/key_value.png 738w, https://labs.yarix.com/wp-content/uploads/2021/04/key_value-640x235.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/key_value-400x147.png 400w" sizes="(max-width: 738px) 100vw, 738px" /><figcaption id="caption-attachment-3638" class="wp-caption-text">Contents of the key and value fields of the configuration</figcaption></figure>

Lastly, the <code>proc</code> field contains some processes that may normally have a lock on some files, resulting in the ransomware not being able to encrypt those locked files. The ransomware simply kills these processes before starting the encryption routine.

<figure id="attachment_3639" aria-describedby="caption-attachment-3639" style="width: 243px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3639" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x202.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/proc_1.png" alt="" width="243" height="491" /><figcaption id="caption-attachment-3639" class="wp-caption-text">List of processes to be terminated by the ransomware</figcaption></figure>

<figure id="attachment_3640" aria-describedby="caption-attachment-3640" style="width: 1321px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3640" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x41.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/proc_2.png" alt="" width="1321" height="545" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x41.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/proc_2.png 1321w, https://labs.yarix.com/wp-content/uploads/2021/04/proc_2-1024x422.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/proc_2-768x317.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/proc_2-640x264.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/proc_2-400x165.png 400w" sizes="(max-width: 1321px) 100vw, 1321px" /><figcaption id="caption-attachment-3640" class="wp-caption-text">Processes listed in the configuration being terminated as seen from the process tree</figcaption></figure>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="vce-row-container">
<div id="el-fc07aa8c" class="vce-row vce-row--col-gap-20 vce-row-columns--top vce-row-content--top no-inner-container" data-vce-do-apply="all el-fc07aa8c">
<div class="vce-row-content" data-vce-element-content="true">
<div id="el-c525ea3e" class="vce-col vce-col--md-auto vce-col--xs-1 vce-col--xs-last vce-col--xs-first vce-col--sm-last vce-col--sm-first vce-col--md-last vce-col--lg-last vce-col--xl-last vce-col--md-first vce-col--lg-first vce-col--xl-first">
<div class="vce-col-inner" data-vce-do-apply="border margin background el-c525ea3e">
<div class="vce-col-content" data-vce-element-content="true" data-vce-do-apply="padding el-c525ea3e">
<div class="vce-text-block">
<div id="el-8415c527" class="vce-text-block-wrapper vce" data-vce-do-apply="all el-8415c527">

Now the ransomware is ready for the encryption phase. The first three fields of the configuration (<code>calc</code>, <code>white</code> and <code>black</code>) contain several file extensions: the main difference between them is that those contained in <code>black</code> are going to be excluded from the encryption. The reason for this is to avoid the compromise of vital OS components, such as executables and DLLs, which, if encrypted, would render the machine unusable.

The files are encrypted with RSA 4096 and AES: the RSA modulus and exponent can be found in the configuration (<code>_N</code> and <code>_E</code> respectively). The extension <code>.thor</code> is contained in the <code>ext</code> field and is going to be appended to the encrypted files. An HTML file named <code>!!Read_Me.html</code> (<code>name</code> field) is going to be written in the directories where at least one file has been encrypted; this HTML file contains the ransom note and its contents is stored as base64 encoded data in the configuration’s <code>content</code> field.

<figure id="attachment_3641" aria-describedby="caption-attachment-3641" style="width: 1044px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3641" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x60.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/ransom_note.png" alt="" width="1044" height="633" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x60.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/ransom_note.png 1044w, https://labs.yarix.com/wp-content/uploads/2021/04/ransom_note-1024x621.png 1024w, https://labs.yarix.com/wp-content/uploads/2021/04/ransom_note-768x466.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/ransom_note-640x388.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/ransom_note-400x243.png 400w" sizes="(max-width: 1044px) 100vw, 1044px" /><figcaption id="caption-attachment-3641" class="wp-caption-text">Ransom note written on the compromised system</figcaption></figure>

At the end of the encryption phase, an HTTP request is performed containing a parameter named <code>end</code>. Moreover, this last HTTP request also contains a counter that represents the number of encrypted files grouped by extensions. The configuration’s field named <code>calc</code> contains the list of extensions for which to count the encrypted files.

<figure id="attachment_3642" aria-describedby="caption-attachment-3642" style="width: 935px" class="wp-caption aligncenter"><img decoding="async" class="porto-lazyload size-full wp-image-3642" src="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x11.jpg" data-oi="https://labs.yarix.com/wp-content/uploads/2021/04/http_req_2.png" alt="" width="935" height="104" srcset="https://labs.yarix.com/wp-content/uploads/porto_placeholders/100x11.jpg 100w" data-srcset="https://labs.yarix.com/wp-content/uploads/2021/04/http_req_2.png 935w, https://labs.yarix.com/wp-content/uploads/2021/04/http_req_2-768x85.png 768w, https://labs.yarix.com/wp-content/uploads/2021/04/http_req_2-640x71.png 640w, https://labs.yarix.com/wp-content/uploads/2021/04/http_req_2-400x44.png 400w" sizes="(max-width: 935px) 100vw, 935px" /><figcaption id="caption-attachment-3642" class="wp-caption-text">HTTP request performed at the end of the encryption with the encrypted extensions counter</figcaption></figure>
<h3>Authors</h3>
<em>Written by Elio Biasiotto &amp; Paolo Stagno</em>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>

		</div>

		<!-- Post meta after content -->
		
	</div>

					<div class="post-share post-block">
					<h3>Share this post</h3>
							<div class="share-links"><a href="https://www.facebook.com/sharer.php?u=https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/" target="_blank"  rel="noopener noreferrer nofollow" data-bs-tooltip data-bs-placement='bottom' title="Facebook" class="share-facebook">Facebook</a>
		<a href="https://twitter.com/intent/tweet?text=Malware+Analysis%3A+Ragnarok+Ransomware&amp;url=https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/" target="_blank"  rel="noopener noreferrer nofollow" data-bs-tooltip data-bs-placement='bottom' title="Twitter" class="share-twitter">Twitter</a>
		<a href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/&amp;title=Malware+Analysis%3A+Ragnarok+Ransomware" target="_blank"  rel="noopener noreferrer nofollow" data-bs-tooltip data-bs-placement='bottom' title="LinkedIn" class="share-linkedin">LinkedIn</a>
		<a href="mailto:?subject=Malware+Analysis%3A+Ragnarok+Ransomware&amp;body=https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/" target="_blank"  rel="noopener noreferrer nofollow" data-bs-tooltip data-bs-placement='bottom' title="Email" class="share-email">Email</a>
		<a href="http://www.reddit.com/submit?url=https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/&amp;title=Malware+Analysis%3A+Ragnarok+Ransomware" target="_blank"  rel="noopener noreferrer nofollow" data-bs-tooltip data-bs-placement='bottom' title="Reddit" class="share-reddit">Reddit</a>
		<a href="whatsapp://send?text=Malware%20Analysis%3A%20Ragnarok%20Ransomware - https://labs.yarix.com/2021/04/malware-analysis-ragnarok-ransomware/" data-action="share/whatsapp/share"  rel="noopener noreferrer nofollow" data-bs-tooltip data-bs-placement='bottom' title="WhatsApp" class="share-whatsapp" style="display:none">WhatsApp</a>
	</div>			</div>
		
	
	<div class="post-block post-author clearfix">
					<h3>Author</h3>
				<div class="img-thumbnail">
			<img alt='' src="https://labs.yarix.com/wp-content/themes/porto/images/lazy.png" data-oi='https://secure.gravatar.com/avatar/263c07b69c5d2007c5d2629753642d23?s=80&#038;d=mm&#038;r=g' srcset="https://labs.yarix.com/wp-content/themes/porto/images/lazy.png 100w" data-srcset='https://secure.gravatar.com/avatar/263c07b69c5d2007c5d2629753642d23?s=160&#038;d=mm&#038;r=g 2x' class='porto-lazyload avatar avatar-80 photo' height='80' width='80' decoding='async'/>		</div>
		<p><strong class="name"><a href="https://labs.yarix.com/author/ylabs/" title="Posts by Ylabs" rel="author">Ylabs</a></strong></p>
		<p class="author-content"></p>
	</div>

	
</article>
										<a class="inline-block m-t-md m-b-md" href="https://labs.yarix.com"><i class="fas fa-long-arrow-alt-left p-l-xs"></i> Back to Posts</a>
									<hr class="tall"/>
					<div class="related-posts">
												<h4 class="sub-title">Related <strong>Posts</strong></h4>
						<div class="post-carousel porto-carousel owl-carousel show-nav-title has-ccols has-ccols-spacing ccols-1 ccols-lg-3 ccols-md-3 ccols-sm-2" data-plugin-options="{&quot;themeConfig&quot;:true,&quot;lg&quot;:3,&quot;md&quot;:3,&quot;sm&quot;:2,&quot;margin&quot;:30}">
						<div class="post-item post-title-simple">
		<a href="https://labs.yarix.com/2024/08/shopoem-scam-campaign/"> <span class="post-image thumb-info thumb-info-hide-wrapper-bg m-b-md"> <span class="thumb-info-wrapper"> <img class="img-responsive" width="450" height="231" src="https://labs.yarix.com/wp-content/uploads/2024/07/copertina2-450x231.png" alt="" />
			</span> </span> </a>
			<div class="post-date">
		<span class="day">01</span><span class="month">Aug</span><time datetime="2024-08-01">01/08/2024</time>	</div>
			<h4><a href="https://labs.yarix.com/2024/08/shopoem-scam-campaign/">
		Threat Actors leverage Chinese SHOPOEM Platforms to spread infamous scam campaign	</a></h4>
		<div><h2>Introduction</h2>
As Yarix Cyber Threat Intelligence (YCTI) team, we keep a close eye...  <a class="read-more" href="https://labs.yarix.com/2024/08/shopoem-scam-campaign/">read more <i class="fas fa-angle-right"></i></a></div> </div>
<div class="post-item post-title-simple">
		<a href="https://labs.yarix.com/2024/06/cve-2024-29868/"> <span class="post-image thumb-info thumb-info-hide-wrapper-bg m-b-md"> <span class="thumb-info-wrapper"> <img class="img-responsive" width="450" height="231" src="https://labs.yarix.com/wp-content/uploads/2024/06/fin-apache-stream-cover-450x231.png" alt="" />
			</span> </span> </a>
			<div class="post-date">
		<span class="day">24</span><span class="month">Jun</span><time datetime="2024-06-24">24/06/2024</time>	</div>
			<h4><a href="https://labs.yarix.com/2024/06/cve-2024-29868/">
		Java &#8211; Cracking the Random: CVE-2024-29868	</a></h4>
		<div><h2></h2>
<h2 style="text-align: left">TL;DR</h2>
If you employ a Java application with a token-based password...  <a class="read-more" href="https://labs.yarix.com/2024/06/cve-2024-29868/">read more <i class="fas fa-angle-right"></i></a></div> </div>
<div class="post-item post-title-simple">
		<a href="https://labs.yarix.com/2024/05/__trashed/"> <span class="post-image thumb-info thumb-info-hide-wrapper-bg m-b-md"> <span class="thumb-info-wrapper"> <img class="img-responsive" width="450" height="231" src="https://labs.yarix.com/wp-content/uploads/2024/12/featured_image-450x231.jpg" alt="" />
			</span> </span> </a>
			<div class="post-date">
		<span class="day">10</span><span class="month">May</span><time datetime="2024-05-10">10/05/2024</time>	</div>
			<h4><a href="https://labs.yarix.com/2024/05/__trashed/">
		Kelvin Security and Spectre, investigating possible relationships	</a></h4>
		<div><h1>Kelvin Security and Spectre, investigating possible relationships</h1>
<h2>Introduction</h2>
The Yarix Cyber Threat Intelligence Team...  <a class="read-more" href="https://labs.yarix.com/2024/05/__trashed/">read more <i class="fas fa-angle-right"></i></a></div> </div>
						</div>
					</div>
					</div>

		

</div><!-- end main content -->

	<div class="col-lg-3 sidebar porto-blog-sidebar right-sidebar"><!-- main sidebar -->
				<div data-plugin-sticky data-plugin-options="{&quot;autoInit&quot;: true, &quot;minWidth&quot;: 992, &quot;containerSelector&quot;: &quot;.main-content-wrap&quot;,&quot;autoFit&quot;:true, &quot;paddingOffsetBottom&quot;: 10}">
						<div class="sidebar-content">
						<aside id="search-2" class="widget widget_search">
<form method="get" id="searchform" class="searchform" action="https://labs.yarix.com/">
	<div class="input-group">
		<input class="form-control" placeholder="Search&hellip;" name="s" id="s" type="text">
		<button type="submit" class="btn btn-dark p-2"><i class="d-inline-block porto-icon-search-3"></i></button>
	</div>
</form>
</aside><aside id="categories-2" class="widget widget_categories"><h3 class="widget-title">Categories</h3>
			<ul>
					<li class="cat-item cat-item-3"><a href="https://labs.yarix.com/category/blog/">Blog</a> (33)
</li>
	<li class="cat-item cat-item-375"><a href="https://labs.yarix.com/category/cybercrime/">Cybercrime</a> (2)
</li>
	<li class="cat-item cat-item-159"><a href="https://labs.yarix.com/category/blog/exploitation/">Exploitation</a> (7)
</li>
	<li class="cat-item cat-item-158"><a href="https://labs.yarix.com/category/blog/fuzzing/">Fuzzing</a> (4)
</li>
	<li class="cat-item cat-item-189"><a href="https://labs.yarix.com/category/blog/malware-analysis/">Malware Analysis</a> (2)
</li>
	<li class="cat-item cat-item-130"><a href="https://labs.yarix.com/category/publications/">Publications</a> (1)
</li>
	<li class="cat-item cat-item-160"><a href="https://labs.yarix.com/category/blog/reverse-engineering/">Reverse Engineering</a> (6)
</li>
	<li class="cat-item cat-item-129"><a href="https://labs.yarix.com/category/tools/">Tools</a> (2)
</li>
	<li class="cat-item cat-item-260"><a href="https://labs.yarix.com/category/blog/web/">Web</a> (7)
</li>
			</ul>

			</aside><aside id="recent_posts-widget-2" class="widget widget-recent-posts"><h3 class="widget-title">Latest Posts</h3>			<div class="has-ccols has-ccols-spacing ccols-1 ccols-lg-1 ccols-md-3 ccols-sm-2 post-carousel porto-carousel owl-carousel show-nav-title">
				<div class="post-slide"><div class="post-item-small">
			<div class="post-image img-thumbnail">
			<a href="https://labs.yarix.com/2024/08/shopoem-scam-campaign/" aria-label="post">
				<img width="85" height="85" src="https://labs.yarix.com/wp-content/uploads/2024/07/copertina2-85x85.png" alt="" />
			</a>
		</div>
				<div class="post-item-content">
						<h5 class="post-item-title"><a href="https://labs.yarix.com/2024/08/shopoem-scam-campaign/">Threat Actors leverage Chinese SHOPOEM Platforms to spread infamous scam campaign</a></h5>
					<span class="post-date">01/08/2024</span>
			</div>
</div>
<div class="post-item-small">
			<div class="post-image img-thumbnail">
			<a href="https://labs.yarix.com/2024/06/cve-2024-29868/" aria-label="post">
				<img width="85" height="85" src="https://labs.yarix.com/wp-content/uploads/2024/06/fin-apache-stream-cover-85x85.png" alt="" />
			</a>
		</div>
				<div class="post-item-content">
						<h5 class="post-item-title"><a href="https://labs.yarix.com/2024/06/cve-2024-29868/">Java &#8211; Cracking the Random: CVE-2024-29868</a></h5>
					<span class="post-date">24/06/2024</span>
			</div>
</div>
<div class="post-item-small">
			<div class="post-image img-thumbnail">
			<a href="https://labs.yarix.com/2024/05/__trashed/" aria-label="post">
				<img width="85" height="85" src="https://labs.yarix.com/wp-content/uploads/2024/12/featured_image-85x85.jpg" alt="" />
			</a>
		</div>
				<div class="post-item-content">
						<h5 class="post-item-title"><a href="https://labs.yarix.com/2024/05/__trashed/">Kelvin Security and Spectre, investigating possible relationships</a></h5>
					<span class="post-date">10/05/2024</span>
			</div>
</div>
</div><div class="post-slide"><div class="post-item-small">
			<div class="post-image img-thumbnail">
			<a href="https://labs.yarix.com/2024/04/blueduck-another-infostealer-coveting-digital-marketing-agencies-facebook-business-accounts/" aria-label="post">
				<img width="85" height="85" src="https://labs.yarix.com/wp-content/uploads/2024/03/cover-85x85.jpeg" alt="" />
			</a>
		</div>
				<div class="post-item-content">
						<h5 class="post-item-title"><a href="https://labs.yarix.com/2024/04/blueduck-another-infostealer-coveting-digital-marketing-agencies-facebook-business-accounts/">BlueDuck: an(other) Infostealer Coveting Digital Marketing Agencies’ Facebook Business Accounts</a></h5>
					<span class="post-date">04/04/2024</span>
			</div>
</div>
<div class="post-item-small">
			<div class="post-image img-thumbnail">
			<a href="https://labs.yarix.com/2024/03/citrix-adc-unexpected-treasure/" aria-label="post">
				<img width="85" height="85" src="https://labs.yarix.com/wp-content/uploads/2024/03/background_blogpost-85x85.png" alt="" />
			</a>
		</div>
				<div class="post-item-content">
						<h5 class="post-item-title"><a href="https://labs.yarix.com/2024/03/citrix-adc-unexpected-treasure/">Citrix ADC &#8211; Unexpected Treasure</a></h5>
					<span class="post-date">21/03/2024</span>
			</div>
</div>
</div>			</div>
			</aside>		</div>
				</div>
					</div><!-- end main sidebar -->


	</div>
	</div>

					
				
				</div><!-- end main -->

				
				<div class="footer-wrapper">

																												
							<div id="footer" class="footer footer-3"
>
			<div class="footer-main">
			<div class="container">
				
									<div class="row">
														<div class="col-lg-9">
									<aside id="contact-info-widget-2" class="widget contact-info"><h3 class="widget-title">YARIX S.r.l.</h3>		<div class="contact-info">
							P.IVA 03614930265			<ul class="contact-details list list-icons">
									<li><i class="far fa-dot-circle"></i> <strong>Address:</strong> <span>Vicolo Boccacavalla, 12 – 31044 Montebelluna (TV)</span></li>									<li><i class="fab fa-whatsapp"></i> <strong>Phone:</strong> <span>0423 614249</span></li>									<li><i class="far fa-envelope"></i> <strong>Email:</strong> <span><a href="mailto:info@yarix.com">info@yarix.com</a></span></li>							</ul>
					</div>

		</aside>								</div>
																<div class="col-lg-3">
									<aside id="follow-us-widget-2" class="widget follow-us"><h3 class="widget-title">Follow Us</h3>		<div class="share-links">
										<a href="https://www.facebook.com/Yarixsocial"  rel="nofollow noopener noreferrer" target="_blank" data-toggle="tooltip" data-bs-placement="bottom" title="Facebook" class="share-facebook">Facebook</a>
								<a href="https://twitter.com/Yarixsocial"  rel="nofollow noopener noreferrer" target="_blank" data-toggle="tooltip" data-bs-placement="bottom" title="Twitter" class="share-twitter">Twitter</a>
								<a href="https://www.youtube.com/user/yarixuser"  rel="nofollow noopener noreferrer" target="_blank" data-toggle="tooltip" data-bs-placement="bottom" title="Youtube" class="share-youtube">Youtube</a>
								<a href="https://www.instagram.com/insta_yarix/"  rel="nofollow noopener noreferrer" target="_blank" data-toggle="tooltip" data-bs-placement="bottom" title="Instagram" class="share-instagram">Instagram</a>
								<a href="https://www.linkedin.com/company/yarix/"  rel="nofollow noopener noreferrer" target="_blank" data-toggle="tooltip" data-bs-placement="bottom" title="Linkedin" class="share-linkedin">Linkedin</a>
								<a href="https://www.flickr.com/people/145194204@N06/"  rel="nofollow noopener noreferrer" target="_blank" data-toggle="tooltip" data-bs-placement="bottom" title="Flickr" class="share-flickr">Flickr</a>
									</div>

		</aside>								</div>
													</div>
				
							</div>
		</div>
	
	<div class="footer-bottom">
	<div class="container">
		
					<div class="footer-center">
								<span class="footer-copyright">© copyright 2022. All Rights Reserved.</span>			</div>
		
			</div>
</div>
</div>
												
					
				</div>
							
					
	</div><!-- end wrapper -->
	
<script src="https://labs.yarix.com/wp-content/plugins/visualcomposer/public/dist/runtime.bundle.js?ver=45.9.0" id="vcv:assets:runtime:script-js"></script>
<script src="https://labs.yarix.com/wp-content/plugins/visualcomposer/public/dist/front.bundle.js?ver=45.9.0" id="vcv:assets:front:script-js"></script>
<script id="cookie-notice-front-js-before">
var cnArgs = {"ajaxUrl":"https:\/\/labs.yarix.com\/wp-admin\/admin-ajax.php","nonce":"c8471c7968","hideEffect":"none","position":"bottom","onScroll":false,"onScrollOffset":100,"onClick":true,"cookieName":"cookie_notice_accepted","cookieTime":2147483647,"cookieTimeRejected":86400,"globalCookie":false,"redirection":false,"cache":false,"revokeCookies":false,"revokeCookiesOpt":"automatic"};
</script>
<script src="https://labs.yarix.com/wp-content/plugins/cookie-notice/js/front.min.js?ver=2.4.18" id="cookie-notice-front-js"></script>
<script id="porto-live-search-js-extra">
var porto_live_search = {"nonce":"c94cd031bf"};
</script>
<script src="https://labs.yarix.com/wp-content/themes/porto/inc/lib/live-search/live-search.min.js?ver=7.1.13" id="porto-live-search-js"></script>
<script src="https://labs.yarix.com/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=7WLOmyKMcgORyYv" id="enlighterjs-js"></script>
<script id="enlighterjs-js-after">
!function(e,n){if("undefined"!=typeof EnlighterJS){var o={"selectors":{"block":"pre.EnlighterJSRAW","inline":"code.EnlighterJSRAW"},"options":{"indent":4,"ampersandCleanup":true,"linehover":true,"rawcodeDbclick":true,"textOverflow":"break","linenumbers":true,"theme":"enlighter","language":"generic","retainCssClasses":false,"collapse":false,"toolbarOuter":"","toolbarTop":"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}","toolbarBottom":""}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})("Error: EnlighterJS resources not loaded yet!")}}(window,console);
</script>
<script src="https://labs.yarix.com/wp-content/themes/porto/js/bootstrap.optimized.min.js?ver=5.0.1" id="bootstrap-js"></script>
<script src="https://labs.yarix.com/wp-content/themes/porto/js/libs/jquery.cookie.min.js?ver=1.4.1" id="jquery-cookie-js"></script>
<script src="https://labs.yarix.com/wp-content/themes/porto/js/libs/owl.carousel.min.js?ver=2.3.4" id="owl.carousel-js"></script>
<script src="https://labs.yarix.com/wp-includes/js/imagesloaded.min.js?ver=5.0.0" id="imagesloaded-js"></script>
<script async="async" src="https://labs.yarix.com/wp-content/themes/porto/js/libs/jquery.magnific-popup.min.js?ver=1.1.0" id="jquery-magnific-popup-js"></script>
<script id="porto-theme-js-extra">
var js_porto_vars = {"rtl":"","theme_url":"https:\/\/labs.yarix.com\/wp-content\/themes\/porto","ajax_url":"https:\/\/labs.yarix.com\/wp-admin\/admin-ajax.php","cart_url":"","change_logo":"","container_width":"1140","grid_gutter_width":"30","show_sticky_header":"1","show_sticky_header_tablet":"","show_sticky_header_mobile":"","ajax_loader_url":"\/\/labs.yarix.com\/wp-content\/themes\/porto\/images\/ajax-loader@2x.gif","category_ajax":"","compare_popup":"","compare_popup_title":"","prdctfltr_ajax":"","slider_loop":"1","slider_autoplay":"1","slider_autoheight":"1","slider_speed":"5000","slider_nav":"","slider_nav_hover":"1","slider_margin":"","slider_dots":"1","slider_animatein":"","slider_animateout":"","product_thumbs_count":"4","product_zoom":"1","product_zoom_mobile":"1","product_image_popup":"1","zoom_type":"inner","zoom_scroll":"1","zoom_lens_size":"200","zoom_lens_shape":"square","zoom_contain_lens":"1","zoom_lens_border":"1","zoom_border_color":"#888888","zoom_border":"0","screen_xl":"1170","screen_xxl":"1420","mfp_counter":"%curr% of %total%","mfp_img_error":"<a href=\"%url%\">The image<\/a> could not be loaded.","mfp_ajax_error":"<a href=\"%url%\">The content<\/a> could not be loaded.","popup_close":"Close","popup_prev":"Previous","popup_next":"Next","request_error":"The requested content cannot be loaded.<br\/>Please try again later.","loader_text":"Loading...","submenu_back":"Back","porto_nonce":"f1d6c0ca6e","use_skeleton_screen":[],"user_edit_pages":"","quick_access":"Click to edit this element.","goto_type":"Go To the Type Builder.","legacy_mode":"1","lazyload_menu":"pageload"};
</script>
<script src="https://labs.yarix.com/wp-content/themes/porto/js/theme.min.js?ver=7.1.13" id="porto-theme-js"></script>
<script src="https://labs.yarix.com/wp-content/themes/porto/js/lazy-menu.min.js?ver=7.1.13" id="porto-lazyload-menu-js"></script>
<script async="async" src="https://labs.yarix.com/wp-content/themes/porto/js/theme-async.min.js?ver=7.1.13" id="porto-theme-async-js"></script>
<script src="https://labs.yarix.com/wp-content/themes/porto/js/libs/lazyload.min.js?ver=1.9.7" id="lazyload-js"></script>

		<!-- Cookie Notice plugin v2.4.18 by Hu-manity.co https://hu-manity.co/ -->
		<div id="cookie-notice" role="dialog" class="cookie-notice-hidden cookie-revoke-hidden cn-position-bottom" aria-label="Cookie Notice" style="background-color: rgba(33,37,41,1);"><div class="cookie-notice-container" style="color: #fff"><span id="cn-notice-text" class="cn-text-container">We use cookies to make sure you can have the best experience on our site.  If you continue to use this website we will assume that you are happy with it. <a href="https://www.yarix.com/informativa-sui-cookie/" target="_blank" id="cn-more-info" class="cn-privacy-policy-link cn-link">Cookie Policy</a></span><span id="cn-notice-buttons" class="cn-buttons-container"><a href="#" id="cn-accept-cookie" data-cookie-set="accept" class="cn-set-cookie cn-button" aria-label="Accept" style="background-color: #00a99d">Accept</a></span><span id="cn-close-notice" data-cookie-set="accept" class="cn-close-icon" title="No"></span></div>
			
		</div>
		<!-- / Cookie Notice plugin --></body>
</html>