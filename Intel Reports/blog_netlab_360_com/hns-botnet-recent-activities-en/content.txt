<!DOCTYPE html>
<html lang="en">
<head>

    <title>HNS Botnet Recent Activities</title>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" type="text/css" href="/assets/built/screen.css?v=42b57cac00" />

    <link rel="icon" href="https://blog.netlab.360.com/content/images/size/w256h256/2019/02/netlab_xs-2.png" type="image/png">
    <link rel="canonical" href="https://blog.netlab.360.com/hns-botnet-recent-activities-en/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    <link rel="amphtml" href="https://blog.netlab.360.com/hns-botnet-recent-activities-en/amp/">
    
    <meta property="og:site_name" content="360 Netlab Blog - Network Security Research Lab at 360">
    <meta property="og:type" content="article">
    <meta property="og:title" content="HNS Botnet Recent Activities">
    <meta property="og:description" content="Author: Rootkiter, yegenshen


HNS is an IoT botnet (Hide and Seek) originally discovered by BitDefender in January this year. In that report, the researchers pointed out that HNS used CVE-2016-10401, and other vulnerabilities to propagate malicious code and stole user information. The HNS communicates through the P2P mechanism, which is">
    <meta property="og:url" content="https://blog.netlab.360.com/hns-botnet-recent-activities-en/">
    <meta property="og:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta property="article:published_time" content="2018-07-06T11:53:13.000Z">
    <meta property="article:modified_time" content="2018-10-06T09:13:30.000Z">
    <meta property="article:tag" content="HNS">
    <meta property="article:tag" content="en">
    <meta property="article:tag" content="Botnet">
    <meta property="article:tag" content="Mining">
    <meta property="article:tag" content="OrientDB">
    <meta property="article:tag" content="CouchDB">
    <meta property="article:tag" content="English">
    <meta property="article:tag" content="Import 2022-11-30 11:16">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="HNS Botnet Recent Activities">
    <meta name="twitter:description" content="Author: Rootkiter, yegenshen


HNS is an IoT botnet (Hide and Seek) originally discovered by BitDefender in January this year. In that report, the researchers pointed out that HNS used CVE-2016-10401, and other vulnerabilities to propagate malicious code and stole user information. The HNS communicates through the P2P mechanism, which is">
    <meta name="twitter:url" content="https://blog.netlab.360.com/hns-botnet-recent-activities-en/">
    <meta name="twitter:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="RootKiter">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="HNS, en, Botnet, Mining, OrientDB, CouchDB, English, Import 2022-11-30 11:16">
    <meta name="twitter:site" content="@360Netlab">
    <meta name="twitter:creator" content="@RooKiter">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="800">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "360 Netlab Blog - Network Security Research Lab at 360",
        "url": "https://blog.netlab.360.com/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png"
        }
    },
    "author": {
        "@type": "Person",
        "name": "RootKiter",
        "image": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2017/04/--.png",
            "width": 245,
            "height": 233
        },
        "url": "https://blog.netlab.360.com/author/rootkiter/",
        "sameAs": [
            "http://rootkiter.com",
            "https://twitter.com/RooKiter"
        ]
    },
    "headline": "HNS Botnet Recent Activities",
    "url": "https://blog.netlab.360.com/hns-botnet-recent-activities-en/",
    "datePublished": "2018-07-06T11:53:13.000Z",
    "dateModified": "2018-10-06T09:13:30.000Z",
    "keywords": "HNS, en, Botnet, Mining, OrientDB, CouchDB, English, Import 2022-11-30 11:16",
    "description": "Author: Rootkiter, yegenshen\n\n\nHNS is an IoT botnet (Hide and Seek) originally discovered by BitDefender in January this year. In that report, the researchers pointed out that HNS used CVE-2016-10401, and other vulnerabilities to propagate malicious code and stole user information. The HNS communicates through the P2P mechanism, which is the second IoT botnet that we know uses P2P communication after Hajime.\n\n\nP2P-like botnets are hard to take down, and the HNS botnet has been continuously updat",
    "mainEntityOfPage": "https://blog.netlab.360.com/hns-botnet-recent-activities-en/"
}
    </script>

    <meta name="generator" content="Ghost 5.76">
    <link rel="alternate" type="application/rss+xml" title="360 Netlab Blog - Network Security Research Lab at 360" href="https://blog.netlab.360.com/rss/">
    
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/sodo-search.min.js" data-key="db8c743e6bb1457403d255d83f" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/main.css" data-sodo-search="https://blog.netlab.360.com/" crossorigin="anonymous"></script>
    
    <link href="https://blog.netlab.360.com/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=42b57cac00"></script>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=42b57cac00">
    <style type='text/css'>
	#ghost-portal-root {
        display: none;
    }
</style><style>:root {--ghost-accent-color: #eca265;}</style>

</head>
<body class="post-template tag-hns tag-en tag-botnet tag-mining tag-orientdb tag-couchdb tag-english tag-import-2022-11-30-11-16 has-cover">
<div class="viewport">

    <header id="gh-head" class="gh-head outer">
        <nav class="gh-head-inner inner">

            <div class="gh-head-brand">
                <a class="gh-head-logo" href="https://blog.netlab.360.com">
                        <img src="https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png" alt="360 Netlab Blog - Network Security Research Lab at 360" />
                </a>
                <div class="gh-head-brand-wrapper">
                    <button class="gh-search" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                    <a class="gh-burger" role="button">
                        <div class="gh-burger-box">
                            <div class="gh-burger-inner"></div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="gh-head-menu">
                <ul class="nav">
    <li class="nav-botnet"><a href="https://blog.netlab.360.com/tag/botnet/">Botnet</a></li>
    <li class="nav-dnsmon"><a href="https://blog.netlab.360.com/tag/dnsmon/">DNSMon</a></li>
    <li class="nav-ddos"><a href="https://blog.netlab.360.com/tag/ddos/">DDoS</a></li>
    <li class="nav-passivedns"><a href="https://blog.netlab.360.com/tag/pdns/">PassiveDNS</a></li>
    <li class="nav-mirai"><a href="https://blog.netlab.360.com/tag/mirai/">Mirai</a></li>
    <li class="nav-dta"><a href="https://blog.netlab.360.com/tag/dta/">DTA</a></li>
</ul>

            </div>
            <div class="gh-head-actions">
                <div class="gh-social">
                        <a class="gh-social-link gh-social-twitter" href="https://twitter.com/360Netlab" title="Twitter" target="_blank" rel="me noopener"><svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg></a>
                        <a class="gh-social-link gh-social-feedly" href="https://feedly.com/i/subscription/feed/https://blog.netlab.360.com/rss/" title="RSS" target="_blank" rel="me noopener"><svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><circle cx="6.18" cy="17.82" r="2.18"/><path d="M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z"/></svg>
</a>
                </div>
            </div>
        </nav>
    </header>

    <div class="site-content">
             <div class="floating-header">
    <div class="floating-header-logo">
        <a href="https://blog.netlab.360.com">
                <img src="/content/images/size/w30/2019/02/netlab_xs-2.png" alt="360 Netlab Blog - Network Security Research Lab at 360 icon" />
            <span>360 Netlab Blog - Network Security Research Lab at 360</span>
        </a>
    </div>
    <span class="floating-header-divider">&mdash;</span>
    <div class="floating-header-title">HNS Botnet Recent Activities</div>
    <div class="floating-header-share">
        <div class="floating-header-share-label">Share this <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path d="M7.5 15.5V4a1.5 1.5 0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1H18a1.5 1.5 0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2 0 0 1 1.76-1.605L7.5 15.5zm6-6v2m-3-3.5v3.5m6-1v2"/>
</svg>
</div>
        <a class="floating-header-share-tw" href="https://twitter.com/share?text=HNS%20Botnet%20Recent%20Activities&amp;url=https://blog.netlab.360.com/hns-botnet-recent-activities-en/"
            onclick="window.open(this.href, 'share-twitter', 'width=550,height=235');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg>        </a>
        <a class="floating-header-share-fb" href="https://www.facebook.com/sharer/sharer.php?u=https://blog.netlab.360.com/hns-botnet-recent-activities-en/"
            onclick="window.open(this.href, 'share-facebook','width=580,height=296');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z"/></svg>        </a>
    </div>
    <progress id="reading-progress" class="progress" value="0">
        <div class="progress-container">
            <span class="progress-bar"></span>
        </div>
    </progress>
</div>


  <main id="site-main" class="site-main">
    <article class="article post tag-hns tag-en tag-botnet tag-mining tag-orientdb tag-couchdb tag-english tag-import-2022-11-30-11-16 no-image ">

      <header class="article-header gh-canvas">

        <div class="article-tag post-card-tags">
          <span class="post-card-primary-tag">
            <a href="/tag/hns/">HNS</a>
          </span>
        </div>

        <h1 class="article-title">HNS Botnet Recent Activities</h1>


        <div class="article-byline">
          <section class="article-byline-content">

            <ul class="author-list">
              <li class="author-list-item">
                <a href="/author/rootkiter/" class="author-avatar">
                  <img class="author-profile-image" src="/content/images/2017/04/--.png" alt="RootKiter" />
                </a>
              </li>
            </ul>

            <div class="article-byline-meta">
              <h4 class="author-name"><a href="/author/rootkiter/">RootKiter</a></h4>
              <div class="byline-meta-content">
                <time class="byline-meta-date" datetime=" 2018-07-06">Jul 6, 2018</time>
                <span class="byline-reading-time"><span class="bull">&bull;</span> 3 min read</span>
              </div>
            </div>

          </section>
        </div>


      </header>

      <section class="gh-content gh-canvas">
        <!--kg-card-begin: markdown--><p>Author: Rootkiter, yegenshen</p>
<p>HNS is an IoT botnet (Hide and Seek) originally discovered by BitDefender in January this year. In that <a href="https://labs.bitdefender.com/2018/01/new-hide-n-seek-iot-botnet-using-custom-built-peer-to-peer-communication-spotted-in-the-wild/?ref=blog.netlab.360.com">report</a>, the researchers pointed out that HNS used CVE-2016-10401, and other vulnerabilities to propagate malicious code and stole user information. The HNS communicates through the P2P mechanism, which is the second IoT botnet that we know uses P2P communication after Hajime.</p>
<p>P2P-like botnets are hard to take down, and the HNS botnet has been continuously updated over the past few months, some major updates we see:</p>
<ul>
<li>Added exploits for AVTECH devices (webcam, webcam), CISCO Linksys router, JAWS/1.0 web server, Apache CouchDB, OrientDB; with the two devices mentioned in the original report, HNS currently supports 7 exploiting methods all together</li>
<li>Hard-coded P2P node addresses have been increased to 171;</li>
<li>In addition, we observed that the HNS botnet adds a cpuminer mining program, it is not functioning properly yet.</li>
<li>In particular, with the added support of OrientDB and CouchDB database servers, HNS is no longer just an IoT botnet, but a cross-platform botnet now.</li>
</ul>
<h4 id="malwaresamples">Malware Samples</h4>
<p>We analyzed following samples:</p>
<pre><code>c1816d141321276cd4621abcd280ee40    #hns x86
0770ff1a6e90eb5d083c16452e45abd5    #hns arm
30ebaaeb61a4ecae3ade7d1d4e5c7adb    #hns_miner
</code></pre>
<h4 id="networkscanningandexploits">Network Scanning and Exploits</h4>
<p>HNS botnet looks for potential victims by initiating a network scanning. In this scanning, HNS borrows code from mirai botnet, and shares the same characters.</p>
<p>The scanning target ports include fixed TCP port 80/8080/2480/5984/23 and other random ports.</p>
<p><img src="https://blog.netlab.360.com/content/images/2018/07/scanning-ports.png" alt loading="lazy"></p>
<p>These ports and their corresponding well known services are:</p>
<pre><code>23    Telnet
80    HTTP Web Service
2480  OrientDB
5984  CouchDB
8080  HTTP Web Service
Random-Port   NA
</code></pre>
<p>HNS will try to implant itself on these ports, utilizing the following exploits. In these exploits, 1 and 2 are listed in bitdefender original report. The other 5 are newly integrated.</p>
<ol>
<li><a href="https://sekurak.pl/tp-link-httptftp-backdoor/?ref=blog.netlab.360.com">TPLink-Routers RCE</a></li>
<li><a href="https://www.exploit-db.com/exploits/43055/?ref=blog.netlab.360.com">Netgear RCE</a></li>
<li>new: <a href="https://www.exploit-db.com/exploits/40500/?ref=blog.netlab.360.com">AVTECH RCE</a></li>
<li>new: <a href="https://vuldb.com/?id.12362=&ref=blog.netlab.360.com">CISCO Linksys Router RCE</a></li>
<li>new: <a href="https://www.pentestpartners.com/security-blog/pwning-cctv-cameras/?ref=blog.netlab.360.com">JAW/1.0 RCE</a></li>
<li>new: <a href="https://www.exploit-db.com/exploits/42965/?ref=blog.netlab.360.com">OrientDB RCE</a></li>
<li>new: <a href="https://www.exploit-db.com/exploits/44913/?ref=blog.netlab.360.com">CouchDB RCE</a></li>
</ol>
<h4 id="171hardcodedp2ppeer">171 Hard-coded P2P peer</h4>
<p>HNS node contacts to other P2P peers with the following 3 methods, in which, 2 and 3 are listed in bitdefender original report.</p>
<ol>
<li>From a hard-coded built-in list of 171 peer addresses</li>
<li>From the command-line args</li>
<li>From the other P2P peers</li>
</ol>
<p>These 171 peers will interact during the check-in and following interaction process</p>
<h6 id="thecheckinprocess">The Check-in Process</h6>
<p>When started with no command-line args, HNS node will send lots of UPD check-in packets. IP addresses of these packets are randomized, while some others are set based on the build-in list. Part of the list is shown as follows, with a full list can be seen in the IoC section.</p>
<p><img src="https://blog.netlab.360.com/content/images/2018/07/hard-coded-peer.png" alt loading="lazy"></p>
<h6 id="theinteractionprocess">The Interaction Process</h6>
<p>HNS has the following characteristics when doing P2P interaction between its nodes:</p>
<ul>
<li>The check-in packet is a UDP packet with random length and content. So no significant feature here. The stands out is in the second packet from the upstream nodes, which has a length of 2 and the first byte is the uppercase letter ‘O’. In addition, the second byte of the return packet is actually a checksum value calculated from the request packet, so as can also be used to ID HNS communications. The detailed verification algorithm is shown as below.</li>
<li>After joining into the P2P network, HNS needs to perform address synchronization constantly to ensure nodes connections. This synchronous operation has strong network characteristics. First, the downstream node sends a request packet with the length 1 with content &quot;~&quot; to the upstream node, and then the upstream node replies with a packet of length 8 with the initial letter &quot;^&quot;.</li>
<li>HNS nodes interact frequently and have lots of data exchange. The request packet length is 69 with initial letter &quot;y&quot;, and the reply packet has a length of 261 with initial letter uppercase &quot;Y&quot;.</li>
</ul>
<p>The algorithm for service repond packets, based on python 2.7</p>
<p>When sending the following request packet:</p>
<pre><code>data_pointer = &quot;5b 02 d7 ff 52 02 61 e9 a5 7e 0b 07 c5 43 5b&quot;.replace(&quot;&quot;,&quot;&quot;).decode('hex')
</code></pre>
<p>The expected response packet from the upstream node would be:</p>
<pre><code>ack=&quot;4f b6&quot;.replace(&quot; &quot;,&quot;&quot;).decode('hex')
</code></pre>
<p>Where chr(0x4f) is fixed and chr(0xb6) is calculated as follows:</p>
<pre><code>def calc_crc(data_pointer):
    data_len_1 = len(data_pointer)-1
    tmp = 88
    for i in range(0,data_len_1):
        tmp += ord(data_pointer[i])
        tmp = tmp &amp;0xff
    tmp2 = tmp^0x3d
    print hex(tmp2),hex(ord(data_pointer[data_len_1]))
    if(tmp2 == ord(data_pointer[data_len_1])):
        return (2*tmp2&amp;0xfe)
    return -1;
</code></pre>
<h4 id="contactus">Contact Us</h4>
<p>If readers have new discoveries, feel free to contact us on <a href="https://twitter.com/360netlab?ref=blog.netlab.360.com">twitter</a>.</p>
<h4 id="ioc">IoC</h4>
<p>Malware Sample md5</p>
<pre><code>c1816d141321276cd4621abcd280ee40    #hns x86
0770ff1a6e90eb5d083c16452e45abd5    #hns arm
30ebaaeb61a4ecae3ade7d1d4e5c7adb    #hns_miner
</code></pre>
<p>All 171 hard coded P2P peer address list is <a href="https://blog.netlab.360.com/file/hns_hardcoded_peer_list.txt">here</a>.</p>
<!--kg-card-end: markdown-->
      </section>



      <div id="disqus_thread" class="disqus-comments gh-canvas"></div>
      <script>
        var disqus_config = function () {
          this.page.url = "https://blog.netlab.360.com/hns-botnet-recent-activities-en/";
          this.page.identifier = "ghost-132"
        };
        (function () {
          var d = document, s = d.createElement('script');
          s.src = 'https://blog-netlab-360.disqus.com/embed.js';
          s.setAttribute('data-timestamp', +new Date());
          (d.head || d.body).appendChild(s);
        })();
      </script>
    </article>

  </main>


    <aside class="read-more-wrap outer">
      <div class="inner">
        <div class="read-more-feed">
            <article class="read-more-card" 
                  style="background-image: url(/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg)" 
              >
              <header class="read-more-card-header">
                <small class="read-more-card-header-sitetitle">&mdash; 360 Netlab Blog - Network Security Research Lab at 360 &mdash;</small>
                <h3 class="read-more-card-header-title"><a href="/tag/hns/">HNS</a></h3>
              </header>
              <div class="read-more-divider"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5"/></svg>
</div>
              <div class="read-more-card-content">
                <ul>
                  <li><a href="/hns-botnet-recent-activities/">HNS Botnet 最近活动更新</a></li>
                </ul>
              </div>
              <footer class="read-more-card-footer">
                <a href="/tag/hns/">1 post →</a>
              </footer>
            </article>

          
<article class="post-card post tag-import-2022-11-30-11-16 tag-en no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/old-botnets-never-die-and-ddg-refuse-to-fade-away/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">Import 2022-11-30 11:16</span>
        </div>
        <h2 class="post-card-title">
          Old Botnets never Die, and DDG REFUSE to Fade Away
        </h2>
      </header>
      <div class="post-card-excerpt">DDG is a mining botnet that specializes in exploiting SSH, Redis database and OrientDB database servers. We first caught it on October 25, 2017, at that time, DDG used version number 2020 and 2021, and we noticed that the botnet has two internally reserved domain names that had not been</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            JiaYu
          </div>

          <a href="/author/jiayu/" class="static-avatar author-profile-image"><svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><path d="M3.513 18.998C4.749 15.504 8.082 13 12 13s7.251 2.504 8.487 5.998C18.47 21.442 15.417 23 12 23s-6.47-1.558-8.487-4.002zM12 12c2.21 0 4-2.79 4-5s-1.79-4-4-4-4 1.79-4 4 1.79 5 4 5z" fill="#FFF"/></g></svg>
</a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2018-07-12">Jul 12, 2018</time>
      <span class="post-card-meta-length">3 min read</span>
    </footer>

  </div>

</article>
          
<article class="post-card post tag-botnet tag-mining tag-orientdb tag-hns tag-couchdb tag-chinese tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/hns-botnet-recent-activities/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">Botnet</span>
        </div>
        <h2 class="post-card-title">
          HNS Botnet 最近活动更新
        </h2>
      </header>
      <div class="post-card-excerpt">作者：Rootkiter, yegenshen


HNS 僵尸网络（Hide and Seek） 是最初由 BitDefender 于今年 1月 报告 的一个IoT僵尸网络。在那份报告中研究人员指出，HNS 会利用CVE-2016-10401、其他漏洞以及Telnet弱口令投入恶意代码，有执行任意指令和盗取用户信息的恶意行为，传播方式类似蠕虫，感染规模在1月23日至1月24期间快速增长到超过32k。并且，HNS内部通过P2P 机制通信，这是我们所知继 hajime之后第二个利用P2P通信的IoT僵尸网络。


P2P类的僵尸网络很难被根除，HNS 僵尸网络也是如此。在过去的几个月中 HNS 僵尸网络一直在持续更新，我们看到其更新活动包括：


 * 增加了对 AVTECH全部设备（网络摄像头、网络录像设备）、CISCO Linksys路由器、JAWS/1.0 Web服务器、Apache CouchDB、OrientDB的漏洞利用；加上原始报告中提到的2种，目前HNS已经支持7种漏洞利用方式；
 * 内置的P2P节点地址增加到了171 条；</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            RootKiter
          </div>

          <a href="/author/rootkiter/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2017/04/--.png" alt="RootKiter" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2018-07-06">Jul 6, 2018</time>
      <span class="post-card-meta-length">5 min read</span>
    </footer>

  </div>

</article>
        </div>
      </div>
    </aside>



    </div>

    <footer class="site-footer outer">
        <div class="inner">
            <section class="copyright"><a href="https://blog.netlab.360.com">360 Netlab Blog - Network Security Research Lab at 360</a> &copy; 2024</section>
            <div><a href="https://ghost.org/" target="_blank" rel="noopener">Powered by Ghost</a></div>
        </div>
    </footer>

</div>


<script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous">
</script>
<script src="/assets/built/casper.js?v=42b57cac00"></script>
<script>
$(document).ready(function () {
    // Mobile Menu Trigger
    $('.gh-burger').click(function () {
        $('body').toggleClass('gh-head-open');
    });
    // FitVids - Makes video embeds responsive
    $(".gh-content").fitVids();

    // floating-header
    // Start fitVids
      var $postContent = $(".gh-content");
      $postContent.fitVids();
      // End fitVids

      var progressBar = document.querySelector('#reading-progress');
      var header = document.querySelector('.floating-header');
      var title = document.querySelector('.article-title');

      var lastScrollY = window.scrollY;
      var lastWindowHeight = window.innerHeight;
      var lastDocumentHeight = $(document).height();
      var ticking = false;

      function onScroll() {
        lastScrollY = window.scrollY;
        requestTick();
      }

      function onResize() {
        lastWindowHeight = window.innerHeight;
        lastDocumentHeight = $(document).height();
        requestTick();
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(update);
        }
        ticking = true;
      }

      function update() {
        var trigger = title.getBoundingClientRect().top + window.scrollY;
        var triggerOffset = title.offsetHeight + 35;
        var progressMax = lastDocumentHeight - lastWindowHeight;

        // show/hide floating header
        if (lastScrollY >= trigger + triggerOffset) {
          header.classList.add('floating-active');
        } else {
          header.classList.remove('floating-active');
        }

        progressBar.setAttribute('max', progressMax);
        progressBar.setAttribute('value', lastScrollY);

        ticking = false;
      }

      window.addEventListener('scroll', onScroll, { passive: true });
      window.addEventListener('resize', onResize, false);

      update();
});
</script>



</body>
</html>
