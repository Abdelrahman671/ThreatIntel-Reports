A41APT case
~ Analysis of the Stealth APT Campaign Threatening Japan
Yusuke Niwa / Hajime Yanagishita / Charles Li / 
Suguru Ishimaru / Motohiko Sato
2020/01/28
Japan Security Analyst Conference 2021
Presenter / Coauthor 
Hajime Yanagishita
Macnica Networks
Security Researcher
Suguru Ishimaru
Kaspersky
GReAT Malware Researcher
Yusuke Niwa
ITOCHU Corporation.
ITCCERT Cyber Security Researcher
Motohiko Sato
ITOCHU Corporation.
ITCCERT Sr. Cyber Security Researcher
Charles Li
Team T5
Chief Analyst of TeamT5
2
Agenda
1. Campaign Overview
2. Malware Analysis
3. Characteristics of Intrusion
4. Threat Actor’s Infrastructure
5. Consideration of Threat Actor’s Attribution
6. Summary
3
１．A41APT Campaign Overview
A41APT Campaign Overview
Period of Activity: March 2019 to January 2021 Present
Target: Japan (Japanese companies including overseas branches)
Initial Vector: Not Spear phishing But SSL-VPN abuse
Malwares: New type of malwares using dll-sideloading
（SodaMaster/P8RAT/DESLoader/FYAntiLoader etc.）
Public Info: Very few [1][2][3][4]
Characteristics: Very tough to detect attacker’s intrusion
5
We call this threat actor A41APT from the hostname 
feature 「DESKTOP-A41UVJV」that is continuously used 
during the initial intrusion in this campaign.
２．Malware Analysis
２．Malware Analysis
1. DESLoader
2. DESLoader Payloads
•
SodaMaster
•
P8RAT
•
Stager Shellcode
•
FYAntiLoader
3. FYAntiLoader
4. xRAT
7
https://www.lac.co.jp/lacwatch/report/20201201_002363.html
NEW
NEW
Update
2-1．DESLoader
Aka. SigLoader
▪Loader file for DLL Side-Loading 
and files contain encrypted 
shellcode and payload.
▪Decrypt multiple PEs and 
shellcodes sequentially in multiple 
stages.
▪Multiple algorithms are used for 
decryption.
▪Finally, the payload is executed in 
memory.
8
Example of DESLoader's payload decoding flow
9
policytool.exe
side-loading
load
jli.dll
vac.dll
stage_1.shellcode
decode
reflective
dll injection
stage_1.dll
load
pcasvc.dll
stage_2.shellcode
P8RAT
(payload)
decode
reflective
dll injection
Anti-analysis junk codes are 
found using OutputDebugStringA(), 
_time64(), rand(), srand()
Junk code
jli.dll/stage_1.dll
10
vac.dll
MZ
PE
Section table + 
Section 1 … N 
Embedded data
Decryption Algorithm
key = 0x9F
stage_1.shellcode
AES
(CBC mode)
XOR
skipped
skipped
skipped
jli.dll
key = 83H4uREKfFClDH8ziYTH8xsBYa32p3wl
IV  = 83H4uREKfFClDH8z
Multiple algorithms (XOR, DES, AES and RSA) are defined and the order of using them is configured. Read 
encrypted data in specified DLL from the end of data till configured size and decrypt.
starge_1.shellcode
11
▪
In addition to known "ecipekac" magic_bytes, some samples use {BFAFBFAF} or {9F8F7F6F} 
as magic_bytes.
▪
Prepare DLL from separately embedded data in shellcode
shellcode
ecipekac
Size of buf
Size of code
Section table
Section1 … N
PE
0x00bf5
0x00bfd
0x00c01
0x00c05
0x39a1d
MZ
0x00000
0x39b25
Section table
0x001E8
Section 1
0x01000
Section N
0xXXXXX
MZ
0x00000
stage_1.dll
stage1_1. shellcode
PE
0x000E0
Variant of stage_2.shellcode
12
• In addition to stage_2.shellcode that has almost same feature as 
stage_1.shellcode, we found 2 types of stagae_2.shellcodes.
​Stager Shellcode
Shellcode dedicated for SodaMaster
stage_2.shellcode
SodaMaster
(payload)
RC4
offset
data
description
0x000
90 90 90 90 90 90 90 90
magic bytes for Identification, this is 
used for comparision before data 
processing
0x008
0x11600
Size of encrypted data, only this value 
(size) is observed
0x00C
A9 5B 7B 84 9C CB CF E8
B6 79 F1 9F 05 B6 2B FE
16 bytes RC4 key (each sample has 
different key)
0x01C
C7 36 7E 93 D3 07 1E 86 
23 75 10 49 C8 AD 01 9F 
[skipped]
Encrypted SodaMaster payload with RC4
Embedded structure of 
shellcode for SodaMaster
DESLoader TimeLine
13
▪AES and DES algorithms 
are implemented using 
proprietary coding
▪In many cases, not all 
ciphers are used
▪The order in which 
ciphers are used is 
changed
▪DESLoader which 
implements only one 
cipher contains a lot 
of OutputDebugStringA() 
code
DES: Modified DES / AES: AES-CBC
Compile Date
(JST)
File name
Algorithm
Payload
2019-10-18
CCFIPC64.DLL
AES
xRAT
2019-10-24
SBIEDLL.DLL
DES
Stager_Shellcode
2019-12-26
GLIB-2.0.DLL
DES
Stager_Shellcode
2019-12-28
DBUS-1-3.DLL
DES
Stager_Shellcode
2020-05-04
jli.dll
DES
SodaMaster
2020-05-04
jli.dll
DES
SodaMaster
2020-05-09
DBUS-1-3.DLL
DES
SodaMaster
2020-05-30
dbus-1-3.dll
DES
Stager_Shellcode
2020-06-02
uxtheme.dll
DES
P8RAT
2020-06-04
UXTHEME.DLL
AES->DES (RSA XOR Not Used)
P8RAT
2020-06-30
VMTOOLS.DLL
XOR->AES->DES (RSA Not Used)
SodaMaster
2020-06-30
SECUR32.dll
AES->DES (RSA XOR Not Used)
SodaMaster
2020-07-01
jli.dll
DES
P8RAT
2020-09-28
jli.dll
DES->AES (RSA XOR Not Used)
SodaMaster
2020-09-29
jli.dll
DES->AES (RSA XOR Not Used)
SodaMaster
2020-10-02
vmtools.dll
DES->AES (RSA XOR Not Used)
SodaMaster
2020-12-21
jli.dll
DES
SodaMaster
2020-12-26
JLI.dll
DES->AES (RSA XOR Not Used)
Stager_Shellcode
2020-12-26
sbiedll.dll
RSA(AES DES XOR Not Used)
Stager_Shellcode
2020-12-27
JLI.DLL
DES->AES (RSA XOR Not Used)
Stager_Shellcode
2020-12-27
JLI.DLL
DES->AES (RSA XOR Not Used)
Stager_Shellcode
2020-12-27
JLI.DLL
DES->AES (RSA XOR Not Used)
Stager_Shellcode
2020-12-31
vmtools.dll
XOR->AES (RSA DES Not Used)
P8RAT
2021-01-01
jli.dll
XOR->AES (RSA DES Not Used)
P8RAT
2-2．DESLoader’s Payload
14
1.
SodaMaster
2.
P8RAT
3.
FYAntiLoader ( ⇒.NET Loader(ConfuserEx v1.0.0) ⇒xRAT )
4.
Stager Shellcode
SodaMaster
15
Aka. DelfsCake, dfls, HEAVYPOT
▪One of DESLoader's payloads
▪Fileless RAT
▪Command identifiers are d, f, l and s
▪Same Compilation Time
5CFE0D92 (Mon Jun 10 07:58:10 2019)
▪Check VM environment from the following 
registry value
HKCR¥Applications¥VMwareHostOpen.exe
16
CRC32
0x8d01ca9f
Mutex = 9FCA018D
base64(RSA key) + 12bytes data
C2 server
Encrypted using RSA key
▪
Mutex value is hex value 
calculated from hardcoded 
base64 string with CRC32 and 
reverse the order 
▪
Initial C2 communication data 
is encrypted with RSA. RSA key 
is hardcoded base64 key_blob 
and data contains randomly 
generated RC4 key
▪
Further communication data is 
encrypted with RC4
SodaMaster
SodaMaster
RC4 encryption
User
host
PID
Exec Date
RC4key
P8RAT
17
Aka. GreetCake
▪
One of DESLoader's payloads
▪
Fileless RAT
▪
Latest command identifiers are 
300~309
▪
Command 309 was implemented 
after December 2020.
▪
Timer related strings at command 
306 - 308 are not exposed at 
latest version.
▪
Main feature looks Command 301, 
Execution of secondary PE 
based payload downloaded into 
memory
NEW
P8RAT Update
18
▪Checks if processes 
characteristic of the guest 
OS of Virtual Machine is 
running or not
▪Collects OS version, 
hostname and username
▪Looks to checks if it is a 
sandbox or analyst 
environment
Stager Shellcode
19
▪One of DESLoader's
Payloads
▪CobaltStrike Stager 
Shellcode beacon
▪In Later version in 2020, 
beacon contains HTTP 
Header mimicking jQuery 
Request
2-3. FYAntiLoader
20
▪One of DESLoader's payloads
▪Fileless type loader module
▪.NET Loader having Provocative Export 
function name
▪Contains .NET Loader packed 
with ConfuserEx v1.0.0
▪Looking for specific directory and search file 
with condition, then read file and decrypt 
payload
▪Finally, Payload is xRAT
xRAT decoding flow with FYAntiLoader
21
usoclient.exe
side-loading
load
CCFIPC64.dll
msftedit.prf.coo
starge_1.shellcode
decode
reflective
dll injection
starge_1.dll
load
msdtcuiu.adi.wdb
starge_2.shellcode
decode
reflective
dll injection
blob
web_lowtrust.config.uninstall
xRAT
starge_3.dll
load
CppHostCLR
FYAntiLoader
2-4．xRAT
22
VERSION
2.0.0.0
HOSTS
45.138.157.83:443;
RECONNECTDELAY
1846872
KEY
[redacted]
AUTHKEY
[redacted]
DIRECTORY
Environment.SpecialFolder.ApplicationData
SUBDIRECTORY
Subdir
INSTALLNAME
Client.exe
INSTALL
false
STARTUP
false
MUTEX
3n5HUTePmoGqIF8CZanamdGw
STARTUPKEY
Quasar Client Startup
HIDEFILE
false
ENABLELOGGER
false
ENCRYPTIONKEY
KCYcz6PCYZ2VSiFyu2GU
TAG
[redacted]
LOGDIRECTORYNAME
Logs
HIDEDIRECTORY
false
HIDEINSTALLSUBDIRECTOR
false
download_url
none
３．Characteristics of Intrusion
A41APT’s intrusion method
24
Scheduled task registration
AD Server
C2 Server
DESLoader
Payload
In Memory
Legitimate PE
OR
PowerShell
A41APT
Server
Event log deletion
Credential
Dumping
Server*
Laptop
・・・
Penetration via SSL-VPN 
using vulnerabilities or 
stolen credentials
Initial Intrusion
Internal Recon.
Lateral Movement
Persistence of 
malware
C2
Communication
Trace Removal
Perform a port scan to 
search for open RDP or 
SMB port. Then, connect to 
RDP with an administrator 
account.
Persistence by scheduled 
task registration to execute 
the legitimate PE
Communicate with C2 server 
via DESLoader’s payload or 
PowerShell remoting
Delete the event log after 
communication with C2 is 
finished.
*We have also observed cases where traces have been removed from other compromised servers as well.
・・・
Characteristics of Compromise
1. Initial intrusion using SSL-VPN products
2. Network scanning and credential theft
3. PowerShell remoting to remove event logs
4. Persistence of malware by scheduled task
25
３-１．Initial intrusion via SSL-VPN (Exp. session hijacking)
26
•
In October 2019, an attacker used the hostname DESKTOP-A41UVJV to hijack 
sessions to enter the internal network via SSL-VPN product, Pulse Secure.
•
JPCERT also reported a similar attack targeting SSL-VPN [4].
•
In some cases, attackers used credentials that they had stolen in the past intrusion.
３-2．Network scanning and credential theft
27
▪After the intrusion by SSL-VPN, perform 
internal network scanning to find open 
port RDP (3389/TCP) and SMB (445/TCP).
▪
Use an administrator account to deploy 
RDP to servers with free RDP.
Exp. server types that are frequently 
compromised by RDP
AD server
File server
Anti Virus management server 
Backup server
Print server
FAX server
Network scanning and RDP
Credential theft
▪Run csvde.exe, a CSV export command 
line tool provided by Microsoft.
▪Execute AdFind provided by joeware.
▪Dump of SYSTEM/SECURITY/SAM hive, 
etc.
https://www.joeware.net/freetools/tools/adfind/
https://docs.microsoft.com/en-us/previous-versions/windows/it-
pro/windows-server-2012-r2-and-2012/cc732101(v=ws.11)
３-3．PowerShell remoting to delete event logs
28
•
Event log: the end of a PowerShell 
remoting session
•
Windows PowerShell.evtx
EID: 403
•
The "C2 address" and the "*.nls file 
name" are changed, but the rest is 
the same
⇒ probably common tools execution
３-４．Persistence of malware by scheduled task
29
▪Registered a task scheduler that executes a legitimate executable file that loads 
DESLoader every 15 minutes.
▪It is unlikely that the same scheduled task name is created on the compromised hosts.
Exp. Improperly registered scheduled tasks observed in the past
30
Scheduled Tasks
PE name
¥Microsoft¥Windows¥Sysmain¥HybridDriveCachePrepopulate
HybridDrive.exe
¥Microsoft¥Windows¥Shell¥FamilySafetyMonitor
wpcmon.exe
¥Microsoft¥Windows¥NetworkAccessProtection¥NAPStatus UI
NAPStatus.exe
¥Microsoft¥Windows¥SideShow¥AutoWake
AutoWake.exe
¥Microsoft¥Windows¥SystemRestore¥SR
srtasks.exe
¥Microsoft¥Windows¥Shell¥FamilySafetyUpload
FamilySafety.exe
¥Microsoft¥Windows¥File Classification Infrastructure¥Property Definition Sync
DefinitionSync.exe
¥Microsoft¥Windows¥UpdateOrchestrator¥Refresh Settings
usoclient.exe
¥Microsoft¥Windows¥WindowsUpdate¥AUSessionConnect
AUSession.exe
¥Windows¥System32¥Tasks¥Microsoft¥Windows¥Shell¥WindowsParentalControls
ParentalControls.exe
¥Microsoft¥Windows¥UpdateOrchestrator¥Schedule Retry Scan
usoclient.exe
¥Microsoft¥Windows¥LanguageComponentsInstaller¥ReconcileLanguageResources
DiagPackage.exe
¥Microsoft¥Windows¥Setup¥EOSNotify
EOSNotify.exe
¥Microsoft¥Windows¥SkyDrive¥Idle Sync Maintenance Task
IdleSync.exe
４．Threat Actor’s Infrastructure
Threat Actor’s Infrastructure
32
1. The hostname used for the intrusion via SSL-VPN
2. Characteristics of the C2 infrastructure
Hostname used for the initial intrusion via SSL-VPN
33
▪Tendency to use distinctive hostnames and attempt intrusions 
while changing IP addresses
Host names used in breaches observed in the past
DESKTOP-A41UVJV
dellemc_N1548P
▪Tendency to use an IP for intrusion that is different from the C2 server’s IP 
▪For C2, there is a tendency to use IP addresses and not to use domains.
▪From the observed C2 IP addresses, there is little bias toward country and AS, and 
we observed that there is a tendency not to reuse IP addresses repeatedly.
Characteristics of the C2 infrastructure
34
５．Consideration of Threat Actor’s Attribution
Considerations for attribution of A41APT
36
1. Relevance to APT10
2. Relevance to BlackTech
１．Relevance to APT10
37
*Compared to SodaMaster in 2020, only two commands are supported.
▪APT10 involvement in targeted attack campaign 
against Turkey mentioned [5].
▪Confirmed the existence of an early version of 
SodaMaster (x86) in March 2019.
▪xRAT observed in A41APT campaign has 
common TTPs with BlackBerry Cylance reports 
in 2019 was confirmed [6].
Run dll payload
Run Shellcode  payload
xRAT/QuasarRAT
SodaMaster
ShellCode
rare-coins[.]com
Turkish Victim
APT10
Attribute
Attack
Used in attack
connect
load
- Multilayers loading
- CPPHostDLR loader
- F**jYouAnti export
- Look for payloads under
“C:¥Windows¥Microsoft.Net”
Common TTPs
Common TTPs
MenuPass/QuasarRAT
Backdoor Report
２．Relevance to BlackTech
38
▪Identified common features 
between SodaMaster and 
TSCookie [7].
▪The same information is collected 
from the compromised host in the 
initial stage
– Username
– Computer name
– Current process ID
▪Observed existence of two 
malware, SodaMaster and 
TSCookie, on multiple 
compromised hosts
SodaMaster
TSCookie
６．Summary
Wrap up：A41APT Campaign
40
ADVERSARY（A41APT）
INFRASTRUCTURE
VICTIMS
CAPABILITIES
▪Strong association with APT10
▪Relevance to BlackTech
▪
Intrusion via SSL-VPN
▪
Heavy usage of RDP for lateral 
movement (mainly servers)
▪
Abusing DLL-Sideloading
▪
Remove traces
▪
Heavy usage of IP addresses for C2 
(no domain usage)
▪
Less reuse of IP addresses for C2
▪
IP for an initial intrusion and C2 IP 
are different.
▪
Targeting Japanese companies 
including overseas branches 
▪
Wide range of industries such as 
manufacturing
Wrap up：TTPs ~MITRE ATT&CK Mapping~
Tactics
Techniques
Initial Access
External Remote Services (T1133) : Intrusion via SSL-VPN using vulnerabilities or stolen credentials
Execution
Command and Scripting Interpreter: PowerShell (T1059.001)
Base64 obfuscated PowerShell commands (delete event log)
Windows Management Instrumentation (T1047) : WMIC collects services for security products
Persistence
Scheduled Task/Job: Scheduled Task (T1053.005) :
Privilege Escalation
Hijack Execution Flow: DLL Search Order Hijacking (T1574.001)
Defense Evasion
Deobfuscate/Decode Files or information (T1140)
Indicator Removal on Host: Clear Windows Event Logs (T1070.001)
Hijack Execution Flow: DLL Search Order Hijacking (T1574.001)
Credential Access
OS Credential Dumping: Security Account Manager (T1003.002)
OS Credential Dumping: NTDS (T1003.003)
Discovery
Account Discovery: Domain Account (T1087.002)
Domain Trust Discovery (T1482)
Software Discovery: Security Software Discovery (T1518.001)
Lateral Movement
Remote Services: Remote Desktop Protocol (T1021.001)
Collection
Archive Collected Data: Archive via Utility (T1560.001) : Compression by WinRAR
Command and Control
Application Layer Protocol: Web Protocols (T1071.001)
Data Encoding: Non-Standard Encoding (T1132.002)
41
Wrap up：Features of this campaign
42
Targeting the kryptonite of EDR/FSA detection
•
Malware is written on the disk by the attacker's manual operation via SSL-VPN instead of 
malware-originated intrusion from Spear phishing email (legitimate file, loader, encrypted file)
•
Intrusion from group affiliates, including overseas companies
•
Malware is mostly placed on servers, and the number of compromised servers are very small.
•
Most of the malware detected in the same period have different C2 addresses, so there is little 
tendency to use the same samples.
After the intrusion, some rough operations were seen.
•
Heavy usage of network discovery using RDP
•
Common traces deletion method of event logs
•
Recorded attacker's hostname in event log
Examples of countermeasures against this campaign
43
End User
Vendor
(SOC)
SSL-VPN
Additional threat visibility
Governance（Overseas/affilates）
•
Implementation of MFA
•
Patch adaptation operation
•
Monitoring
•
Network Monitor by NTA
•
Strengthen security measures for servers
•
Hunting stealthy attack by using EDR/FSA
•
Leverage Yara rule to detect loader or payload on 
memory
•
Framework for sharing information (Incident, Threat 
Intel and security situation )
•
Apply same security level
•
Apply same level of detection in each intrusion method
Additional Monitoring
•
Audit authentication attemp of administrator account 
(success/failure)
•
Monitor deletion of Windows event log
•
Monitor login from host that is not in list of organization asset
•
Monitor SSL-VPN log for suspicious login from unknown host 
( e.g. hostname is not in organization asset )
Strengthen Monitoring for Authentication
•
Talk with end user to know white-list ( username, hostname, IP address and date/time ) of 
authentication and give proactive alert to end user
Examples of countermeasures against this campaign 
(Based on intrusion method)
44
Scheduled task registration
AD server
C2
DESLoader
payloads
In Memory
Legitimate PE
OR
PowerShell
A41APT
Server
Event log deletion
Server
Laptop
・・・
- Implementation of MFA
- Patch adaptation operation
- Monitor suspicious logins 
from overseas
- NW monitoring by NTA
- Strengthen security measures 
for servers (EDR/FSA etc.)
- Monitoring of administrator 
authentication attempt 
(success/failure)
- Suspicious login monitoring 
from hosts outside of asset 
management
- Monitor the creation of 
suspicious scheduled task 
events.
- Payload detection by Yara 
- C2 identification and blocking 
by malware analysis
- Identify and block C2 by 
traces of suspicious PowerShell 
remoting in event logs
- Monitor for traces of 
suspicious event log 
deletions.
・・・
MFA
Patch application 
operation
Monitoring
Monitoring
Monitoring
Monitoring
NTA
NTA
Event log 
monitoring
Payloads detection 
by Yara
Initial Intrusion
Internal Recon.
Lateral Movement
Persistence of 
malware
C2 
Communication
Trace Removal
At the end...
45
A41APT campaign is very stealthy and difficult to detect, but it is not undetectable.
The compromised target has shifted from endpoint to server, and the intrusion 
route has also shifted from spear phishing to abusing SSL-VPN. Security measures 
need to be reviewed in your organization to respond to change in attack method.
By refining daily security operations and thoroughly reviewing the security holes in 
each organization's environment, it may be possible to detect and protect attacks 
from even small anomalies.
Reference
1.
【緊急レポート】Microsoft社のデジタル署名ファイルを悪用する「SigLoader」による標的型攻撃を確認
https://www.lac.co.jp/lacwatch/report/20201201_002363.html
2.
Japan-Linked Organizations Targeted in Long-Running and Sophisticated Attack Campaign
https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/cicada-apt10-japan-
espionage
3.
https://twitter.com/Int2e_/status/1333501729359466502?s=20
4.
Pulse Connect Secure の脆弱性を狙った攻撃事案
https://blogs.jpcert.or.jp/ja/2020/03/pulse-connect-secure.html
5.
APT10
THREAT ANALYSIS
REPORT
(ADEO IT Consulting Services)
https://adeo.com.tr/wp-content/uploads/2020/02/APT10_Report.pdf
6.
Threat Spotlight: MenuPass/QuasarRAT Backdoor
https://blogs.blackberry.com/en/2019/06/threat-spotlight-menupass-quasarrat-backdoor
7.
https://blogs.jpcert.or.jp/ja/2018/03/tscookie.html
46
IoCs
47
Path of Encrypted xRAT
Microsoft.NET¥test¥Framework¥v4.0.30319¥
Config¥web_lowtrust.config.uninstall
Hostname of Intruded via SSL-VPN
DESKTOP-A41UVJV
dellemc_N1548P
C2
Payloads
45.138.157[.]83
xRAT
151.236.30[.]223
P8RAT
193.235.207[.]59
Stager Shellcode
www.rare-coisns[.]com
SodaMaster(x86)
88.198.101[.]58
SodaMaster
MD5
File name
Payloads
Comment
f6ed714d29839574da3e368e4437eb99
usoclient.exe
xRAT
Legitimate EXE
dd672da5d367fd291d936c8cc03b6467
CCFIPC64.DLL
xRAT
DESLoader
335ce825da93ed3fdd4470634845dfea
msftedit.prf.cco
xRAT
Encrypted stage_
1.shellcode
f4c4644e6d248399a12e2c75cf9e4bdf
msdtcuiu.adi.wdb
xRAT
Encrypted 
stage_2.shellcode
019619318e1e3a77f3071fb297b85cf3
web_lowtrust.confi
g.uninstall
xRAT
Encrypted xRAT
7e2b9e1f651fa5454d45b974d00512fb
policytool.exe
P8RAT
Legitimate EXE
be53764063bb1d054d78f2bf08fb90f3
jli.dll
P8RAT
DESLoader
f60f7a1736840a6149d478b23611d561
vac.dll
P8RAT
Encrypted 
stage_1.shellcode
59747955a8874ff74ce415e56d8beb9c
pcasvc.dll
P8RAT
Encrypted 
stage_2.shellcode
c5994f9fe4f58c38a8d2af3021028310
80f55.rec.dll
SodaMaster(x86)
037261d5571813b9640921afac8aafbe
10000000.dll
SodaMaster(x86)
bca0a5ddacc95f94cab57713c96eacbf
ResolutionSet.exe
SodaMaster
Legitimate EXE
cca46fc64425364774e5d5db782ddf54
vmtools.dll
SodaMaster
DESLoader
4638220ec2c6bc1406b5725c2d35edc3
wiaky002_CNC175
5D.dll
SodaMaster
Encrypted stage_
1.shellcode
d37964a9f7f56aad9433676a6df9bd19
c_apo_ipoib6x.dll
SodaMaster
Encrypted 
stage_2.shellcode
Any Questions?
