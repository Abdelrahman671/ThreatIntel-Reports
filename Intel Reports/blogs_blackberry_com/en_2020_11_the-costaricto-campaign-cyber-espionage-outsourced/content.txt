<!DOCTYPE HTML>
<html lang="en">
    <head>
	<meta charset="UTF-8"/>

	
	









    <!-- OneTrust Cookies Consent Notice Start -->






    <script src="https://cdn.cookielaw.org/scripttemplates/otSDKStub.js" data-document-language="true" type="text/javascript" charset="UTF-8" data-domain-script="6373c986-7725-4c54-9731-2a91bdd43107"></script>


<script type="text/javascript">
    function OptanonWrapper() { }
</script>

<!-- OneTrust Cookies Consent Notice End -->


















	<title>The CostaRicto Campaign: Cyber-Espionage Outsourced</title>

	<script type="application/ld+json">
	{"@context":"https://schema.org","@type":"NewsArticle","mainEntityOfPage":{"@type":"WebPage","@id":"https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced"},"headline":"The CostaRicto Campaign: Cyber-Espionage Outsourced","image":["/content/dam/blogs-blackberry-com/images/blogs/2020/11/110120-350x350-costaricto.jpg","/content/dam/blogs-blackberry-com/images/blogs/2020/11/111020-875x530-costaricto-ibb.jpg"],"datePublished":"2020-11-12T01:01:00.000-08:00","author":{"@type":"Person","name":"The BlackBerry Research and Intelligence Team"},"publisher":{"@type":"Organization","name":"BlackBerry","logo":{"@type":"ImageObject","url":"https://blogs.blackberry.com/content/dam/blackberry-com/Images/logos/BlackBerry_Logo_Black_150.png"}}}
</script>


	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<meta name="description" content="With the undeniable success of Ransomware-as-a-Service (RaaS), the cyber-criminal market has expanded its portfolio to add dedicated phishing and espionage campaigns to the list of illicit services on offer..."/>
	<meta name="keywords" content="Cybersecurity"/>
	

	<meta name="author" content="blogs.blackberry.com"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>

	<link rel="icon" href="/etc.clientlibs/bbcom/clientlibs/clientlib-etc-legacy/resources/bbcom-aem-project/images/favicon.ico"/>
	<link rel="canonical" href="https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced"/>

	<meta property="og:url" content="https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced"/>
	<meta property="og:title" content="The CostaRicto Campaign: Cyber-Espionage Outsourced"/>
	<meta property="og:description" content="With the undeniable success of Ransomware-as-a-Service (RaaS), the cyber-criminal market has expanded its portfolio to add dedicated phishing and espionage campaigns to the list of illicit services on offer..."/>
	<meta property="og:type" content="article"/>
	<meta property="og:image" content="https://blogs.blackberry.com/content/dam/blogs-blackberry-com/images/blogs/2020/11/111020-875x530-costaricto-ibb.jpg"/>

	<meta name="twitter:card" content="summary_large_image"/>
	<meta name="twitter:site" content="@BlackBerry"/>
	<meta name="twitter:title" content="The CostaRicto Campaign: Cyber-Espionage Outsourced"/>
	<meta name="twitter:description" content="With the undeniable success of Ransomware-as-a-Service (RaaS), the cyber-criminal market has expanded its portfolio to add dedicated phishing and espionage campaigns to the list of illicit services on offer..."/>
	<meta name="twitter:image" content="https://blogs.blackberry.com/content/dam/blogs-blackberry-com/images/blogs/2020/11/111020-875x530-costaricto-ibb.jpg"/>

	

	
	
    
<link rel="stylesheet" href="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-site.min.54dd5587820b16101b4a5bc26ae87194.css" type="text/css">



	
    










	
		
<script>
(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TXGFP23');
</script>



<script async src="https://www.googletagmanager.com/gtag/js?id=AW-944900006"></script>

<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date()); gtag('config', 'AW-944900006');
</script>


		
	

	




<script src="https://kit.fontawesome.com/3c243f8233.js" crossorigin="anonymous"></script>


	
    
    

    
    
    
    


	
</head>
    <body class="page basicpage" data-enable-history="true">
        



	
		
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TXGFP23" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>


		
	

	


        
        
            



            

  
<!--
<sly data-sly-use.templatedContainer="com.day.cq.wcm.foundation.TemplatedContainer"
   data-sly-repeat.child=""
   data-sly-resource=""/>
-->

<header>
    




    
    
    
<!-- BEGIN DO NOT INDEX -->

    

<!-- skip to content: START -->
<a href='#' class='skipNav' tabindex="0">Skip Navigation</a>
<!-- skip to content: END-->
<!-- BEGIN DO NOT INDEX -->

  <nav class="blogs-navigationv2 bb-blogs-navbar navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="https://blogs.blackberry.com">
        <svg width="175px" height="30px" viewBox="0 0 175 30" version="1.1">
          <title>BlackBerry Logo</title>
          <g id="Creative" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
              <g id="21-product-page-Protect-02.15.22" transform="translate(-91.000000, -10.000000)" fill="#FFFFFF" fillRule="nonzero">
                  <g id="BB_White" transform="translate(91.000000, 10.000000)">
                      <path d="M9.18042011,2.14285967 C9.18042011,1.19318021 8.5959918,-1.17624431e-15 6.16086942,-1.17624431e-15 C5.16247216,-1.17624431e-15 2.4107723,-1.17624431e-15 2.4107723,-1.17624431e-15 L1.33931598,4.94318021 C1.33931598,4.94318021 3.36046941,4.94318021 5.25986363,4.94318021 C8.32813214,4.91883014 9.18042011,3.48214033 9.18042011,2.14285967 Z" id="Shape"></path>
                      <path d="M19.2861873,2.14285967 C19.2861873,1.19318021 18.701759,-1.17624431e-15 16.2666366,-1.17624431e-15 C15.2682393,-1.17624431e-15 12.5165395,-1.17624431e-15 12.5165395,-1.17624431e-15 L11.4450831,4.94318021 C11.4450831,4.94318021 13.4662366,4.94318021 15.3412807,4.94318021 C18.4338993,4.91883014 19.2861873,3.48214033 19.2861873,2.14285967 Z" id="Shape_1_"></path>
                      <path d="M7.84110413,9.54545936 C7.84110413,8.59578874 7.25667582,7.4025997 4.82155344,7.4025997 C3.82315617,7.4025997 1.07145632,7.4025997 1.07145632,7.4025997 L5.68518084e-15,12.3457799 C5.68518084e-15,12.3457799 2.02115343,12.3457799 3.89619757,12.3457799 C6.96445725,12.3457799 7.84110413,10.88474 7.84110413,9.54545936 Z" id="Shape_2_"></path>
                      <path d="M17.9468713,9.54545936 C17.9468713,8.59578874 17.362443,7.4025997 14.9273206,7.4025997 C13.9289233,7.4025997 11.1772235,7.4025997 11.1772235,7.4025997 L10.1057671,12.3457799 C10.1057671,12.3457799 12.1269206,12.3457799 14.0263148,12.3457799 C17.0702244,12.3457799 17.9468713,10.88474 17.9468713,9.54545936 Z" id="Shape_3_"></path>
                      <path d="M28.5153164,6.55032938 C28.5153164,5.60064992 27.930888,4.40746971 25.4957657,4.40746971 C24.4973684,4.40746971 21.7456774,4.40746971 21.7456774,4.40746971 L20.6742211,9.35064992 C20.6742211,9.35064992 22.6953745,9.35064992 24.5704186,9.35064992 C27.6386695,9.32629985 28.5153164,7.88961005 28.5153164,6.55032938 Z" id="Shape_4_"></path>
                      <path d="M27.0542412,14.2694801 C27.0542412,13.3198006 26.4698129,12.1266204 24.0346816,12.1266204 C23.0362844,12.1266204 20.2845934,12.1266204 20.2845934,12.1266204 L19.213137,17.0698006 C19.213137,17.0698006 21.2342905,17.0698006 23.1093346,17.0698006 C26.1775943,17.0698006 27.0542412,15.6087696 27.0542412,14.2694801 Z" id="Shape_5_"></path>
                      <path d="M16.4857961,17.2889601 C16.4857961,16.3392807 15.9013678,15.1461005 13.4662366,15.1461005 C12.4678393,15.1461005 9.71614827,15.1461005 9.71614827,15.1461005 L8.64469195,20.0892807 C8.64469195,20.0892807 10.6658454,20.0892807 12.5408895,20.0892807 C15.6091492,20.0649306 16.4857961,18.6282496 16.4857961,17.2889601 Z" id="Shape_6_"></path>
                      <path d="M83.7683052,18.75 C83.5978459,19.11526 82.7455491,20.7711005 80.6026453,20.7711005 C78.1188139,20.7711005 77.1447667,18.701291 77.1447667,17.191551 C77.1447667,14.6590813 78.8493515,12.3944712 81.3575329,12.3944712 C84.0605238,12.3944712 84.6936523,14.4155717 84.7667113,14.7808317 L88.7359591,14.7808317 C88.9794775,13.2954417 87.786262,8.74187154 81.5036422,8.74187154 C76.9012483,8.74187154 73.2242102,12.4188213 73.2242102,17.3133014 C73.2242102,21.331161 75.7323917,24.4236913 80.3834769,24.4236913 C86.1790775,24.4236913 87.7375619,19.8701212 87.9323713,18.7499912 L83.7683052,18.7499912 L83.7683052,18.75 Z" id="Shape_7_"></path>
                      <path d="M53.2805356,19.8457799 C53.2805356,19.6022703 53.3535858,19.1639601 53.5483953,18.2629897 C53.7432047,17.3376603 56.5435959,4.40746971 56.5435959,4.40746971 L52.8178577,4.40746971 L49.7252479,18.6769498 C49.6034887,19.2857193 49.5304385,19.87013 49.5304385,20.3814904 C49.5304385,23.4983708 51.9412108,24.4237002 53.889314,24.4237002 C54.5711514,24.4237002 55.22863,24.3019498 55.3747393,24.2775909 C55.4477895,23.961031 56.0322266,21.2824609 56.0565767,21.1607105 C55.9835265,21.1607105 55.5695487,21.2094107 55.0825295,21.2094107 C53.6945045,21.2094107 53.2805356,20.625 53.2805356,19.8457799 Z" id="Shape_8_"></path>
                      <polygon id="Shape_9_" points="106.220152 8.76623044 101.033339 8.76623044 94.3367415 14.7808405 96.6014133 4.38311963 92.8269661 4.38311963 88.5654909 24.1071403 92.3155881 24.1071403 93.3626943 19.3100606 95.6760575 17.4837696 98.8660763 24.1071403 103.054492 24.1071403 98.5251576 15.2435096"></polygon>
                      <path d="M32.7767827,18.0194801 C33.0933514,16.6071403 35.7232832,4.38311963 35.7232832,4.38311963 C35.7232832,4.38311963 40.2769681,4.38311963 42.8338497,4.38311963 C47.9963131,4.38311963 49.2625788,7.25649924 49.2625788,8.98538995 C49.2625788,12.8327903 45.6342409,13.8555199 45.1959219,13.9772703 C45.6098908,14.1233708 47.971963,15.0487002 47.971963,18.0681802 C47.971963,21.3555199 44.9524035,24.107459 40.2526181,24.107459 C40.2526181,24.107459 38.5723834,24.107459 38.1097143,24.107459 C34.1404576,24.1314904 32.0218951,21.4042201 32.7767827,18.0194801 Z M43.905306,17.7759705 C43.905306,16.8506411 43.2965277,15.681811 40.666587,15.681811 L37.2330585,15.681811 L36.2103112,20.4545406 L40.1065088,20.4545406 C42.5903401,20.4545406 43.905306,19.3100606 43.905306,17.7759705 Z M45.1715718,9.8133102 C45.1715718,8.86363075 44.4410342,8.0357105 42.6633904,8.0357105 L38.8645931,8.0357105 L38.0122963,12.0292201 L41.9815529,12.0292201 C44.0757654,12.0292201 45.1715718,10.9821403 45.1715718,9.8133102 Z" id="Shape_10_"></path>
                      <path d="M104.515568,18.0194801 C104.832136,16.6071403 107.462068,4.38311963 107.462068,4.38311963 C107.462068,4.38311963 112.015753,4.38311963 114.572626,4.38311963 C119.735089,4.38311963 121.001364,7.25649924 121.001364,8.98538995 C121.001364,12.8327903 117.373026,13.8555199 116.934707,13.9772703 C117.348667,14.1233708 119.710748,15.0487002 119.710748,18.0681802 C119.710748,21.3555199 116.666847,24.107459 111.991394,24.107459 C111.991394,24.107459 110.311159,24.107459 109.84849,24.107459 C105.879234,24.1314904 103.76068,21.4042201 104.515568,18.0194801 Z M115.644091,17.7759705 C115.644091,16.8506411 115.035304,15.681811 112.405372,15.681811 L108.947493,15.681811 L107.924737,20.4545406 L111.820935,20.4545406 C114.329125,20.4545406 115.644091,19.3100606 115.644091,17.7759705 Z M116.910348,9.8133102 C116.910348,8.86363075 116.17981,8.0357105 114.377825,8.0357105 L110.603378,8.0357105 L109.751081,12.0292201 L113.720347,12.0292201 C115.81455,12.0292201 116.910348,10.9821403 116.910348,9.8133102 Z" id="Shape_11_"></path>
                      <path d="M146.789339,8.76623044 C142.820083,8.76623044 140.092742,11.1282408 139.191745,15.5357105 C138.802126,17.4350606 137.365401,24.1071403 137.365401,24.1071403 L141.091139,24.1071403 C141.091139,24.1071403 142.454814,17.7516204 142.893133,15.75487 C143.45322,13.1493501 144.841236,12.2483796 146.69193,12.2483796 C147.300717,12.2483796 147.665986,12.3214298 147.860795,12.3457799 C147.958196,11.8100694 148.493915,9.44805023 148.615674,8.88798965 C148.226055,8.86363957 147.592918,8.76623044 146.789339,8.76623044 Z" id="Shape_12_"></path>
                      <path d="M159.451988,30 L171.968527,8.76623044 L167.950571,8.76623044 L162.20367,18.75 L160.864354,8.74188037 C160.864354,8.74188037 158.818851,8.74188037 156.554179,8.74188037 C151.610875,8.74188037 149.054002,11.0064904 148.153005,15.316551 C147.690327,17.4594107 146.253602,24.1071315 146.253602,24.1071315 L149.97934,24.1071315 C149.97934,24.1071315 151.343015,17.8003117 151.903085,15.2678508 C152.438822,12.8084314 154.265166,12.0535613 156.23761,12.4675303 L157.016848,8.83928067 C157.601285,12.2727209 159.378911,23.2792113 159.378911,23.2792113 L155.482714,30 L159.451988,30 L159.451988,30 Z" id="Shape_13_"></path>
                      <path d="M64.0437813,17.5811699 C64.871728,17.4594195 67.2581502,17.0941595 67.599069,17.0454594 C67.5260099,17.313319 67.4529597,17.7029291 67.3799095,18.0194889 C66.9415816,19.8701388 65.0665375,21.063319 62.972325,21.063319 C61.633009,21.063319 60.8537712,20.3571492 60.8537712,19.5048788 C60.8294212,18.7987002 61.4869085,17.9464298 64.0437813,17.5811699 Z M62.6314151,13.5876603 C62.7288242,13.4415598 63.6785213,11.9561699 66.0649435,11.9561699 C67.5503688,11.9561699 68.3052565,12.4918804 68.3052565,13.1493501 C68.3052565,14.0746706 66.8198312,14.3181802 64.2142406,14.6834402 C59.7579648,15.3165598 56.9332236,16.7045406 56.9332236,19.9188301 C56.9332236,22.2077903 58.8326178,24.4237002 62.193096,24.4237002 C64.9934872,24.4237002 66.4545624,22.7435096 66.5763216,22.5974003 C66.6006717,23.0113604 66.6493719,23.62013 66.6737308,24.1071403 C66.9902906,24.1071403 69.5715222,24.1071403 70.5212282,24.1071403 C70.399469,23.4496706 70.1072504,22.1590901 70.5699283,20.1136307 C70.8134379,19.0422009 71.4952754,15.9496706 71.8361941,14.24513 C72.4936815,11.0064904 70.7160376,8.74188037 66.1867116,8.74188037 C60.3424108,8.74188037 58.6621673,12.9301906 58.3943076,13.5876603 L62.6314151,13.5876603 Z" id="Shape_14_"></path>
                      <path d="M131.862019,19.5292201 C131.715918,19.8214298 130.814921,21.0876603 128.793759,21.0876603 C125.871617,21.0876603 125.214139,18.6038995 125.28718,17.9464298 C126.845665,17.9464298 135.831275,17.9464298 136.659213,17.9464298 C136.732272,17.6785702 136.975791,16.6558493 136.975791,15.6087696 C136.975791,12.00487 134.540668,8.71753912 129.621714,8.71753912 C125.11673,8.71753912 121.512742,12.4918892 121.512742,16.9967592 C121.512742,21.3311787 124.118324,24.423709 128.745059,24.423709 C134.443259,24.423709 135.977393,19.9675391 136.123494,19.5292289 C135.100738,19.5292201 131.862019,19.5292201 131.862019,19.5292201 Z M129.670406,12.1266204 C132.178587,12.1266204 133.128284,13.6607105 133.030884,14.8782408 C131.594159,14.8782408 127.308342,14.8782408 125.84725,14.8782408 C126.042068,14.0990295 127.235283,12.1266204 129.670406,12.1266204 Z" id="Shape_15_"></path>
                      <path d="M171.979978,19.5027334 C173.12535,19.5027334 174.087452,20.4108465 174.087452,21.6216668 C174.087452,22.8557689 173.10243,23.7406002 171.979978,23.7406002 C170.834615,23.7406002 169.849603,22.8324871 169.849603,21.6216668 C169.849603,20.4108465 170.834615,19.5027334 171.979978,19.5027334 Z M171.979978,19.8520043 C171.017877,19.8520043 170.26193,20.620409 170.26193,21.6216668 C170.26193,22.6462064 171.017877,23.4146111 171.979978,23.4146111 C172.942098,23.4146111 173.675125,22.6694882 173.675125,21.6216668 C173.675125,20.620409 172.919178,19.8520043 171.979978,19.8520043 Z M171.52183,22.8557689 L171.155316,22.8557689 L171.155316,20.4108465 L172.071613,20.4108465 C172.644299,20.4108465 172.919178,20.620409 172.919178,21.109397 C172.919178,21.5518126 172.644299,21.7380934 172.277768,21.7846569 L172.964991,22.8557689 L172.552655,22.8557689 L171.911246,21.7846569 L171.49891,21.7846569 L171.49891,22.8557689 L171.52183,22.8557689 Z M171.521821,21.4819585 L171.957076,21.4819585 C172.415225,21.4819585 172.552664,21.3422501 172.552664,21.0861152 C172.552664,20.8532621 172.438127,20.7135538 172.025792,20.7135538 L171.521821,20.7135538 L171.521821,21.4819585 L171.521821,21.4819585 Z" id="Shape_16_"></path>
                  </g>
              </g>
          </g>
      </svg>
      </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="https://blogs.blackberry.com/en/category/cybersecurity">Cybersecurity</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="https://blogs.blackberry.com/en/category/automotive">Automotive & IOT</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="https://blogs.blackberry.com/en/category/critical-event-management">Critical Communications</a>
          </li>
        </ul>


        <ul class="navbar-nav ml-auto">
          <li class="nav-item">

            <a class="nav-link open-search-btn" role="button">
              <svg aria-hidden="true" data-prefix="fa" data-icon="search" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg="">
                <path fill="currentColor" d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z">
                </path>
              </svg>
            </a>
            <div id="searchOverlay" class="search-overlay">
              <span class="close-search-btn" title="Close Search">×</span>
              <div class="overlay-content">
                <form id="search-form">
                  <input id="search-form--input" description="Search" data-search-url="https://blogs.blackberry.com/en/search" type="text" placeholder="Search" name="search"/>
                  <button type="submit">
                    <svg aria-hidden="true" data-prefix="fa" data-icon="search" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg="">
                      <path fill="currentColor" d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z">
                      </path>
                    </svg>
                  </button>
                </form>
              </div>
            </div>
          </li>
        </ul>
      </div>
    </div>
  </nav>



<!-- END DO NOT INDEX -->




<!-- END DO NOT INDEX -->

    
    
    <div class="hero">

      <div class="jumbotron mastheadDefault">
        <div class="hero-container narrower" style="background-image: url( \2f content\2f dam\2f blackberry-com\2fImages\2fsupport\2f bgs\2f bnr-blue-gradient-crop.jpg)">
          
          <div class="mask  "></div>

          <div class="container headings  l-align">
            <div class="col-lg-12">
          		




    
    
    <div class="blog-name-title">

  <div class="cmp-title ">
  
  
   <!-- <span class="highlighted-text-title blogs">INSIDE</span>
   <span class="normal-text-title">BlackBerry Blog</span> -->
   <span class="normal-text-title">BlackBerry Blog</span>
  
  
  
</div>
</div>



          	</div>
          </div>
      </div>
    </div>
</div>



</header><main>
    




    
    
    <div class="section">
  <section class="section     ">
    
    <div class="container">
        




    
    
    
<ol class="breadcrumb">
    <li class="breadcrumb-item ">
        <a href="/en.html">BlackBerry Blog</a>
    </li>

    <li class="breadcrumb-item active">
        The CostaRicto Campaign: Cyber-Espionage Outsourced
    </li>
</ol>

    


      
    </div>
  </section>
    

</div>


    
    
    <div class="blogsection">
    <section class="section     ">
      
      <div class="container sectionPadding py-0">
           
      <div class="col-md-9 col-lg-9 col-sm-12">
          




    
    
    <div class="cmp cmp-title blog-title row">
  

<div class="col-md-12 col-lg-12 col-sm-12">
<h1>The CostaRicto Campaign: Cyber-Espionage Outsourced</h1>
</div>



    
</div>


    
    
    <div class="categorydateauthor"><!--Pulling author bio from author page-->
<div class="categorydateauthor">
<span><a title="RESEARCH &amp; INTELLIGENCE" href="/en/category/research-and-intelligence">RESEARCH &amp; INTELLIGENCE</a> / </span><span class='publish-date'></span>11.12.20 / </span>

    <span class="author"><a href="/en/author/the-blackberry-research-and-intelligence-team">The BlackBerry Research and Intelligence Team</a></span>

</div></div>


    
    
    <div class="socialsharing">

<div class="socialSharing row">
	<ul class="socialSharing-icons">
		<li>
			<a href="https://x.com/intent/tweet?url=https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced&text=The%20CostaRicto%20Campaign:%20Cyber-Espionage%20Outsourced&via=BlackBerry" title="Share on X" target="_blank" class="x-share">
				<span class="sr-only sr-only-focusable">Share on X</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--tw" aria-hidden="true">
					<svg viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"></path></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.facebook.com/sharer/sharer.php?u=https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced" title="Share on Facebook" target="_blank" class="facebook-share">
				<span class="sr-only sr-only-focusable">Share on Facebook</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--fb" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 264 512"><path d="M76.7 512V283H0v-91h76.7v-71.7C76.7 42.4 124.3 0 193.8 0c33.3 0 61.9 2.5 70.2 3.6V85h-48.2c-37.8 0-45.1 18-45.1 44.3V192H256l-11.7 91h-73.6v229"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.linkedin.com/shareArticle?mini=true&url=https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced&title=The%20CostaRicto%20Campaign:%20Cyber-Espionage%20Outsourced&summary=&source=blogs.blackberry.com" title="Share on LinkedIn" target="_blank" class="linkedin-share">
				<span class="sr-only sr-only-focusable">Share on LinkedIn</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--li" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448.1 512"><path d="M100.3 448H7.4V148.9h92.9V448zM53.8 108.1C24.1 108.1 0 83.5 0 53.8S24.1 0 53.8 0s53.8 24.1 53.8 53.8-24.1 54.3-53.8 54.3zM448 448h-92.7V302.4c0-34.7-.7-79.2-48.3-79.2-48.3 0-55.7 37.7-55.7 76.7V448h-92.8V148.9h89.1v40.8h1.3c12.4-23.5 42.7-48.3 87.9-48.3 94 0 111.3 61.9 111.3 142.3V448h-.1z"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="mailto:?subject=The%20CostaRicto%20Campaign:%20Cyber-Espionage%20Outsourced&body=https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced" title="Email" class="email-share">
				<span class="sr-only sr-only-focusable">Email</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--email" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"/></svg>
				</span>
			</a>
		</li>
	</ul>
</div>
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image.coreimg{.width}.jpeg/1605215109078/111020-875x530-costaricto-ibb.jpeg" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/111020-875x530-costaricto-ibb.jpg" data-asset-id="eb586646-a712-4a5a-bb4b-6c301fec4e99" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/111020-875x530-costaricto-ibb.jpg" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>With the undeniable success of Ransomware-as-a-Service (RaaS), the cybercriminal market has expanded its portfolio to add dedicated phishing and espionage campaigns to the list of illicit services on offer…</i><br>
<br>
During the past six months, the <a href="https://blogs.blackberry.com/en/author/the-blackberry-research-and-intelligence-team" target="_blank">BlackBerry Research and Intelligence team</a> have been monitoring a cyber-espionage campaign that is targeting disparate victims around the globe. The campaign, dubbed CostaRicto by BlackBerry, appears to be operated by “hackers-for-hire”, a group of APT mercenaries who possess bespoke malware tooling and complex VPN proxy and SSH tunnelling capabilities.</p>
<p>Mercenary groups offering APT-style attacks are becoming more and more popular. Their tactics, techniques, and procedures (TTPs) often resemble highly sophisticated state-sponsored campaigns, but the profiles and geography of their victims are far too diverse to be aligned with a single bad actor’s interests.</p>
<p>Although in theory the customers of a mercenary APT might include anyone who can afford it, the more sophisticated actors will naturally choose to work with patrons of the highest profile – be it large organizations, influential individuals, or even governments. Having a lot at stake, the cybercriminals must choose very carefully when selecting their commissions to avoid the risk of being exposed.</p>
<p>Outsourcing an espionage campaign, or part of it, to a mercenary group might be very compelling, especially to businesses and individuals who seek intelligence on their competition yet may not have the required tooling, infrastructure and experience to conduct an attack themselves. But even notorious adversaries experienced in cyber-espionage can benefit from adding a layer of indirection to their attacks. By using a mercenary as their proxy, the real attacker can better protect their identity and thwart attempts at attribution.</p>
<p><b>Key Findings:</b></p>
<ul>
<li>CostaRicto targets are scattered across different countries in Europe, Americas, Asia, Australia and Africa, but the biggest concentration appears to be in South Asia (especially India, Bangladesh and Singapore), suggesting that the threat actor could be based in that region, but working on a wide range of commissions from diverse clients.<br>
<br>
</li>
<li>The command-and-control (C2) servers are managed via Tor and/or through a layer of proxies; a complex network of SSH tunnels are also established in the victim’s environment. These practices reveal better-than-average operation security.<br>
<br>
</li>
<li>The backdoor used as a foothold is a new strain of never-before-seen malware – a custom-built tool with a suggestive project name, well-structured code, and detailed versioning system. The earliest timestamps are from October 2019, and based on the version numbers, the project appears to be in the debug testing phase. It’s not clear as of now if it’s something that the threat actors developed in-house or obtained for exclusive use as part of beta testing from another entity.<br>
<br>
</li>
<li>The timestamps of payload stagers go back to 2017, which might suggest the operation itself has been going on for a while, but used to deliver a different payload. It’s not impossible, though, that the stagers are simply being reused without recompilation (i.e.: by changing the C2 URLs via binary editing).<br>
<br>
</li>
<li>The backdoor project is called Sombra, which is a reference to an <a href="https://overwatch.fandom.com/wiki/Sombra" target="_blank">Overwatch game persona</a> – an agent of the antagonist organization, who specializes in espionage and intelligence assessment and is characterized by stealth, infiltration and hacking skills.<br>
<br>
</li>
<li>Some of the domain names hardcoded in the backdoor binaries seem to spoof legitimate domains (e.g.: the malicious domain sbibd[.]net spoofing a legitimate domain of the State Bank of India Bangladesh, sbibd.com). However, victims affected by these backdoors are unrelated, suggesting reuse of existing infrastructure which served another purpose.<br>
<br>
</li>
<li>One of the IP addresses which the backdoor domains were registered to overlaps with an earlier phishing campaign attributed to <a href="https://blogs.blackberry.com/en/2019/08/inside-the-apt28-dll-backdoor-blitz" target="_blank">APT28</a> (i.e.: according to RiskIQ data, the SombRAT domain akams[.]in was at the time of attack registered to the same IP address as the phishing domain mail.kub-gas[.]com). However, BlackBerry researchers believe that a direct link between CostaRicto and APT28 is highly unlikely. It might be that the IP overlap is coincidental, or – just as plausible – that the earlier phishing campaigns have been outsourced to the mercenary on behalf of the actual threat actor.</li>
</ul>
<p><b>Targeting</b></p>
<p><b></b>Unlike most of the state-sponsored APT actors, the CostaRicto adversary seems to be indiscriminate when it comes to the victims' geography. Their targets are located in numerous countries across the globe with just a slight concentration in the South-Asian region:</p>
<ul>
<li>India</li>
<li>Bangladesh</li>
<li>Singapore</li>
<li>China</li>
<li>U.S.</li>
<li>Bahamas</li>
<li>Australia</li>
<li>Mozambique</li>
<li>France</li>
<li>Netherlands</li>
<li>Austria</li>
<li>Portugal</li>
<li>Czechia</li>
</ul>
<p>The victims’ profiles are diverse across several verticals, with a large portion being financial institutions.</p>

    
    
</div>


    
    
    <div class="image">
  

    
</div>


    
    
    <div class="text">    
    
    <p><b>Delivery</b></p>
<p>After gaining access to the victim’s environment (presumably by using stolen credentials, either obtained via phishing, or bought on the dark web), the attacker sets up remote tunnelling using a SSH tool. The tool is configured to redirect traffic from a malicious domain to a proxy that is listening on a local port. The tunnel is authenticated using the attacker’s private key.</p>
<p>In order to pull down the backdoor, a payload stager, either HTTP or reverse-DNS, is executed with the use of a scheduled task.</p>
<p>The backdoor comes either wrapped up in a PowerSploit reflective loader, or in the form of a custom-built dropper that uses a simple virtual machine (VM) mechanism to decode and inject the payload.</p>
<p><b>Toolset</b></p>
<ul>
<li>SombRAT: A custom backdoor (with both x86 and x64 versions)</li>
<li>CostaBricks: A custom VM-based payload loader (seen only with x86 SombRAT payloads so far)</li>
<li><a href="https://powersploit.readthedocs.io/en/latest/CodeExecution/Invoke-ReflectivePEInjection/" target="_blank">PowerSploit’s reflective PE injection</a> module (seen with x64 SombRAT payloads)</li>
<li>HTTP and reverse-DNS payload stagers</li>
<li>nmap: Port scanner</li>
<li>PsExec<br>
</li>
</ul>
<p><b>PS1 Loader (x64)</b></p>
<p>The 64-bit backdoor is deployed in a fairly standard way. It is distributed as a set of scripts and encrypted files and utilizes a PowerShell loader based on the Invoke-ReflectivePEInjection PowerSploit module to decode and inject the final payload DLL into memory:<br>
<br>
</p>
<table width="624" cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="113" valign="top"><p><b>File Name</b></p>
</td>
<td width="511" valign="top"><p><b>Function</b></p>
</td>
</tr><tr><td width="113" valign="top"><p><b>autorun.bat</b></p>
</td>
<td width="511" valign="top"><p>Obfuscated batch script that sets PowerShell execution policy to unrestricted and executes autorun.ps1</p>
</td>
</tr><tr><td width="113" valign="top"><p><b>autorun.ps1</b></p>
</td>
<td width="511" valign="top"><p>Obfuscated PowerShell script that decodes and executes another PowerShell loader stored in ntuser.c file</p>
</td>
</tr><tr><td width="113" valign="top"><p><b>ntuser.a</b></p>
</td>
<td width="511" valign="top"><p>XOR key used to decode the PowerShell loader and payload binary</p>
</td>
</tr><tr><td width="113" valign="top"><p><b>ntuser.b</b></p>
</td>
<td width="511" valign="top"><p>XOR encoded payload binary</p>
</td>
</tr><tr><td width="113" valign="top"><p><b>ntuser.c</b></p>
</td>
<td width="511" valign="top"><p>XOR encoded Invoke-ReflectivePEInjection module, modified to add payload decryption routine</p>
</td>
</tr></tbody></table>
<p><b><br>
CostaBricks Loader (x86)</b></p>
<p>The loader used with 32-bit backdoors is more technically compelling. It implements a simple custom-built virtual machine mechanism that will execute an embedded bytecode to decode and inject the payload into memory.</p>
<p>This attempt at obfuscation, although not new, is rather uncommon in relation to targeted attacks. Code virtualization has been most prevalent in commercial software protectors which use much more advanced solutions; simpler virtual machines are sometimes also featured in off-the-shelf malicious packers used by widespread financial crimeware. This particular implementation, however, is unique (there are just a handful of samples in the public domain) and seems to be used only with SombRAT payloads – which makes us believe it is a custom-built tool that is private to the attackers.</p>
<p>To further confuse anti-malware solutions, the loader contains the entire unobfuscated code of a legitimate open source application called Blink (<a href="https://github.com/crosire/blink" target="_blank">https://github.com/crosire/blink</a>), which never gets executed:</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1693865401.coreimg{.width}.png/1605215109088/costaricto-fig-1.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-1.png" data-asset-id="8b43783b-4269-44d8-89cf-aedda42e82cb" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-1.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 1: Strings belonging to Blink code</i></p>
<p>There is also an unused zlib decompression routine that seems to be leftover code from an older version of the loader.</p>
<p>The compilation timestamps suggest that both the loader and the embedded payload are compiled at the same time (with only a few seconds difference).</p>
<p>One of the loaders had the following PDB path, suggesting that the internal name of the project is CostaRicto/ CostaBricks:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_192141185.coreimg{.width}.png/1605215109094/costaricto-fig-2.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-2.png" data-asset-id="4f5a7024-8cd8-4e3d-8991-c63e7e486849" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-2.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 2: PDB path from one of the x86 loader samples</i></p>
<p><b>Virtual Machine Internals</b></p>
<p>The virtual machine mechanism is implemented with the usage of C++ objects and classes. There are 20 different VM instructions, each having between zero and three operands. A pointer to the bytecode to execute is passed as a parameter to the VM initialization routine:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1982751366.coreimg{.width}.png/1605215109099/costaricto-fig-3.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-3.png" data-asset-id="a094eff9-8818-4427-a60a-0bdbeecd6550" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-3.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 3: Initialization of the virtual machine</i></p>
<p>A VM instance is initialized by setting its context structure, which contains the instruction pointer, zero flag, instructions list and pointer to the registers:</p>
<table width="624" cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="66" valign="top"><p><b>Offset</b></p>
</td>
<td width="168" valign="top"><p><b>Field</b></p>
</td>
<td width="390" valign="top"><p><b>Description</b></p>
</td>
</tr><tr><td width="66" valign="top"><p><b>0x00</b></p>
</td>
<td width="168" valign="top"><p>Instruction pointer</p>
</td>
<td width="390" valign="top"><p>Index of the bytecode instruction to execute</p>
</td>
</tr><tr><td width="66" valign="top"><p><b>0x04</b></p>
</td>
<td width="168" valign="top"><p>Zero flag</p>
</td>
<td width="390" valign="top"><p>Used for conditional jumps</p>
</td>
</tr><tr><td width="66" valign="top"><p><b>0x08</b></p>
</td>
<td width="168" valign="top"><p>Instructions_list.first</p>
</td>
<td width="390" valign="top"><p>Points to the first instruction in the list</p>
</td>
</tr><tr><td width="66" valign="top"><p><b>0x0C</b></p>
</td>
<td width="168" valign="top"><p>Instructions_list.current</p>
</td>
<td width="390" valign="top"><p>Points to the current instruction in the list</p>
</td>
</tr><tr><td width="66" valign="top"><p><b>0x10</b></p>
</td>
<td width="168" valign="top"><p>Instructions_list.next</p>
</td>
<td width="390" valign="top"><p>Points to the next instruction in the list</p>
</td>
</tr><tr><td width="66" valign="top"><p><b>0x14</b></p>
</td>
<td width="168" valign="top"><p>Registers pointer</p>
</td>
<td width="390" valign="top"><p>Points to the list of registers</p>
</td>
</tr><tr><td width="66" valign="top"><p><b>0x18</b></p>
</td>
<td width="168" valign="top"><p>Registers count</p>
</td>
<td width="390" valign="top"><p>Incremented when new register is allocated</p>
</td>
</tr></tbody></table>
<p><b><i><br>
Instructions and Operands</i></b></p>
<p>Instructions, operands, and opcode handlers are implemented as doubly linked lists. Each VM instruction has its own index and contains information such as the opcode number, flags, operands count, and the operands:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_875309269.coreimg{.width}.png/1605215109105/costaricto-fig-4.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-4.png" data-asset-id="6e814d7b-4ab8-413d-b044-58a840a1b734" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-4.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 4: An example of VM instruction format for the SUB opcode</i></p>
<p>The operands can either be immediate values or &quot;registers&quot;. Dynamically allocated “registers” are small memory regions organized in the form of dictionary objects in doubly linked list. Each register has its own unique index that can store up to 8 bytes of data (including pointers to larger memory buffers) and can be either read or written to.</p>
<p>If the operand metadata specifies the index value, the operand is a &quot;register&quot;; otherwise the operand contains an immediate value. The value (either immediate or pointed to by a &quot;register&quot;) is an integer: qword by default, but different lengths (byte, word or double-word) can be specified in the metadata:</p>
<table width="624" cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="64" valign="top"><p><b>Offset</b></p>
</td>
<td width="170" valign="top"><p><b>Field</b></p>
</td>
<td width="390" valign="top"><p><b>Notes</b></p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x00</b></p>
</td>
<td width="170" valign="top"><p>Instruction index</p>
</td>
<td width="390" valign="top"><p>Consecutive numbers starting with 0</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x04</b></p>
</td>
<td width="170" valign="top"><p>Opcode</p>
</td>
<td width="390" valign="top"><p>0 – 0x13 (19.)</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x06</b></p>
</td>
<td width="170" valign="top"><p>Skip bool</p>
</td>
<td width="390" valign="top"><p>If set, then the instruction will be ignored</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x08</b></p>
</td>
<td width="170" valign="top"><p>Operands count</p>
</td>
<td width="390" valign="top"><p>0 – 3</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x0C</b></p>
</td>
<td width="170" valign="top"><p>Operand type</p>
</td>
<td width="390" valign="top"><p>read (0) or write (1)</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x0E</b></p>
</td>
<td width="170" valign="top"><p>Operand flag</p>
</td>
<td width="390" valign="top"><p>Specifies length: 0x10 = byte, 0x20 = word, 0x40 = dword</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x10</b></p>
</td>
<td width="170" valign="top"><p>Operand register index</p>
</td>
<td width="390" valign="top"><p>Consecutive numbers starting with 0x9435C739</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x14</b></p>
</td>
<td width="170" valign="top"><p>Operand value</p>
</td>
<td width="390" valign="top"><p>Immediate value (if operand is not a register)</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x1C</b></p>
</td>
<td width="170" valign="top"><p>Operand 2</p>
</td>
<td width="390" valign="top"><p>Optional</p>
</td>
</tr><tr><td width="64" valign="top"><p><b>0x2C</b></p>
</td>
<td width="170" valign="top"><p>Operand 3</p>
</td>
<td width="390" valign="top"><p>Optional</p>
</td>
</tr></tbody></table>
<p><b><i><br>
Opcodes</i></b></p>
<p>Each opcode has its own handler routine, which is executed in the main VM loop:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1612664802.coreimg{.width}.png/1605215109111/costaricto-fig-5.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-5.png" data-asset-id="f085b5cf-73cd-45e7-969c-01088a7a1066" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-5.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 5: Loop processing VM instructions</i></p>
<p>The handler routine will check to see if the number and types of operands are valid, read operand values from VM “registers”, perform a specific action (arithmetic/byte operation, comparison, jump, API call), and save results to a destination “register”:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_391269323.coreimg{.width}.png/1605215109117/costaricto-fig-6.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-6.png" data-asset-id="53cd81a4-549e-46c2-bee4-ff3993f52261" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-6.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 6: XOR opcode handler routine<br>
<br>
</i></p>
<table width="624" cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="62" valign="top"><p><b>Opcode (hex)</b></p>
</td>
<td width="97" valign="top"><p><b>Operands</b></p>
</td>
<td width="94" valign="top"><p><b>Instruction</b></p>
</td>
<td width="371" valign="top"><p><b>Description</b></p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x00</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>mov</p>
</td>
<td width="371" valign="top"><p>Move from src (either immediate value or pointer/register) to register at dst. If no operands, this acts as a NOP instruction, used mostly as a label to jump to</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x01</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>xor</p>
</td>
<td width="371" valign="top"><p>Exclusive or dst with src, result pointed by dst</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x02</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>add</p>
</td>
<td width="371" valign="top"><p>Add src to dst, result pointed by dst</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x03</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>and</p>
</td>
<td width="371" valign="top"><p>And dst with src, result pointed by dst</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x04</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>sub</p>
</td>
<td width="371" valign="top"><p>Subtract src from dst, result pointed by dst</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x05</b></p>
</td>
<td width="97" valign="top"><p>addr</p>
</td>
<td width="94" valign="top"><p>call</p>
</td>
<td width="371" valign="top"><p>Call address in operand 1 (can be immediate value or register)</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x06</b></p>
</td>
<td width="97" valign="top"><p>-</p>
</td>
<td width="94" valign="top"><p>ret</p>
</td>
<td width="371" valign="top"><p>Return 1</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x07</b></p>
</td>
<td width="97" valign="top"><p>mem_ptr, size</p>
</td>
<td width="94" valign="top"><p>virtual_alloc</p>
</td>
<td width="371" valign="top"><p>Allocate memory (call VirtualAlloc), size in operand 2, pointer returned in operand 1 (register)</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x08</b></p>
</td>
<td width="97" valign="top"><p>mem_ptr</p>
</td>
<td width="94" valign="top"><p>virtual_free</p>
</td>
<td width="371" valign="top"><p>Free memory (VirtualFree), pointer in operand 1 (register)</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x09</b></p>
</td>
<td width="97" valign="top"><p>dst, src, size</p>
</td>
<td width="94" valign="top"><p>memmove</p>
</td>
<td width="371" valign="top"><p>Source pointed by operand 2, destination pointed by operand 1, size in operand 3</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x0A</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>cmp</p>
</td>
<td width="371" valign="top"><p>Compare value at dst (register) with src (immediate or register value), set zero flag in VM context structure</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x0B</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>alldiv</p>
</td>
<td width="371" valign="top"><p>Dividend in operand 1 register, divisor in operand 2 (immediate or register), result in operand 1 register</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x0C</b></p>
</td>
<td width="97" valign="top"><p>dst</p>
</td>
<td width="94" valign="top"><p>jnz</p>
</td>
<td width="371" valign="top"><p>If zero flag not set, jump to location specified by operand</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x0D</b></p>
</td>
<td width="97" valign="top"><p>dst</p>
</td>
<td width="94" valign="top"><p>jz</p>
</td>
<td width="371" valign="top"><p>If zero flag set, jump to location specified by operand</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x0E</b></p>
</td>
<td width="97" valign="top"><p>dst</p>
</td>
<td width="94" valign="top"><p>jmp</p>
</td>
<td width="371" valign="top"><p>Unconditional jump; set instruction pointer to the value of operand</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x0F</b></p>
</td>
<td width="97" valign="top"><p>dll_handle, dll_name</p>
</td>
<td width="94" valign="top"><p>load_library</p>
</td>
<td width="371" valign="top"><p>Call LoadLibraryA, pointer to library name in operand 2 (register), handle to loaded library in operand 1 (register)</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x10</b></p>
</td>
<td width="97" valign="top"><p>dll_handle, proc_name, api_address</p>
</td>
<td width="94" valign="top"><p>get_proc_addr</p>
</td>
<td width="371" valign="top"><p>Call GetProcAddress, pointer to DLL handle in operand 1, pointer to process name in operand 2, API address returned in operand 3 (all operands are registers)</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x11</b></p>
</td>
<td width="97" valign="top"><p>-</p>
</td>
<td width="94" valign="top"><p>exit_proc</p>
</td>
<td width="371" valign="top"><p>Call ExitProcess(0)</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x12</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>shr</p>
</td>
<td width="371" valign="top"><p>Shift right (divide dst by src)</p>
</td>
</tr><tr><td width="62" valign="top"><p><b>0x13</b></p>
</td>
<td width="97" valign="top"><p>dst, src</p>
</td>
<td width="94" valign="top"><p>shl</p>
</td>
<td width="371" valign="top"><p>Shift left (multiply dst by src)</p>
</td>
</tr></tbody></table>
<p><b><br>
The Bytecode</b></p>
<p>All of the x86 loaders BlackBerry has seen thus far embed the exact same bytecode that is 1800 (0x708) lines long. Most of these 1800 instructions are superfluous (i.e.: have no influence on the code functionality) and were inserted there for obfuscation only.</p>
<p>The purpose of the bytecode is to decrypt the embedded payload, load it into memory reflectively and execute it:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1878146885.coreimg{.width}.png/1605215109123/costaricto-fig-7.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-7.png" data-asset-id="7a48bc79-cf0a-448e-b601-0c5c49b12f94" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-7.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 7: A fragment of VM bytecode - setting the decryption key</i></p>
<p>The payload decryption routine uses a custom symmetric algorithm based on arithmetic and byte-shift instructions – a combination of SHL/SHR/SUB/ADD/XOR – with hardcoded keys.</p>
<p>These constant values are used in all x86 SombRAT droppers we’ve seen so far:<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1785574894.coreimg{.width}.png/1605215109129/costaricto-fig-7b.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-7b.png" data-asset-id="a67426a4-5c16-43d1-883e-6b5b1e3b5ffc" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-7b.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_526527630.coreimg{.width}.png/1605215109132/costaricto-fig-8.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-8.png" data-asset-id="b96981b9-1352-47ba-a921-7a440525fbe0" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-8.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 8: Payload decoding algorithm</i></p>
<p><b>SombRAT Backdoor</b></p>
<p>The backdoor delivered by the above-mentioned loaders is a C++ compiled executable developed with heavy usage of objects, classes, and interfaces. It has a plugin architecture and basic functionality of a foothold RAT that is mainly used to download and execute other malicious payloads – either as its own plugins or standalone binaries. It can also perform other simple actions, like collecting system information, listing and killing processes, and uploading files to the C2.</p>
<p><b>Features:</b></p>
<ul>
<li>Communication over DNS tunnel with a hardcoded domain name and DGA-generated subdomain</li>
<li>C2 traffic encrypted with RSA-2048</li>
<li>Custom AES-encrypted storage format used to store configuration, plugins, and harvested data</li>
<li>Unique version number for each sample<br>
<br>
</li>
</ul>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1454860356.coreimg{.width}.png/1605215109138/costaricta-fig9.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricta-fig9.png" data-asset-id="9d58a426-b94f-4c45-b677-866531610d26" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricta-fig9.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 9: Backdoor classes hierarchy</i></p>
<p>According to a PDB path found in the 64-bit specimens, the project was originally called Sombra – possibly in reference to the <a href="https://overwatch.fandom.com/wiki/Sombra" target="_blank">Overwatch game character</a>: </p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_558401922.coreimg{.width}.png/1605215109143/costaricto-fig-10.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-10.png" data-asset-id="1dfc2994-6d0d-4c8c-9bf4-9a602e6d7335" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-10.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 10: PDB path from 64-bit backdoor with project name ‘Sombra’</i></p>
<p>In the Overwatch game world, Sombra is an agent of an antagonist organization called Talon. She is skilled in computer hacking and cryptography and specializes in espionage and intelligence assessment:</p>
<p style="margin-left: 40.0px;"><i>“One of the world's most notorious hackers, Sombra uses information to manipulate those in power.</i></p>
<p style="margin-left: 40.0px;"><i>Sombra's skills include computer hacking and cryptography; these are activities she greatly enjoys, to the point where the desire to get past locks and solving mysteries is ingrained in her personality. She is a known associate of Reaper, specializing in espionage and intelligence assessment.</i></p>
<p style="margin-left: 40.0px;"><i>Stealth and debilitating attacks make Sombra a powerful infiltrator. Her hacking can disrupt her enemies, ensuring they're easier to take out, while her EMP provides the upper hand against multiple foes at once. Sombra’s ability to Translocate and camouflage herself makes her a hard target to pin down.”<sup>1</sup></i><br>
</p>
<p>Embedded in each sample is a hardcoded version number, with the following versions observed thus far:</p>
<table cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="118" valign="top"><p><b>Version</b></p>
</td>
<td width="186" valign="top"><p><b>Compilation timestamp</b></p>
</td>
<td width="106" valign="top"><p><b>Architecture</b></p>
</td>
</tr><tr><td width="118" valign="top"><p><b>0.0.1.114499</b></p>
</td>
<td width="186" valign="top"><p>31-10-2019 21:22:39 UTC</p>
</td>
<td width="106" valign="top"><p>x86</p>
</td>
</tr><tr><td width="118" valign="top"><p><b>0.0.1.14630 (T)</b></p>
</td>
<td width="186" valign="top"><p>09-11-2019 21:53:44 UTC</p>
</td>
<td width="106" valign="top"><p>x86</p>
</td>
</tr><tr><td width="118" valign="top"><p><a name="_Hlk51234202" id="_Hlk51234202"></a><b>0.1.60 (DT)</b></p>
</td>
<td width="186" valign="top"><p>11-11-2019 14:55:45 UTC</p>
</td>
<td width="106" valign="top"><p>x86</p>
</td>
</tr><tr><td width="118" valign="top"><p><b>0.1.208 (DT)</b></p>
</td>
<td width="186" valign="top"><p>17-11-2019 20:58:25 UTC</p>
</td>
<td width="106" valign="top"><p>x86</p>
</td>
</tr><tr><td width="118" valign="top"><p><b>0.1.724 (DT)</b></p>
</td>
<td width="186" valign="top"><p>24-12-2019 10:33:41 UTC</p>
</td>
<td width="106" valign="top"><p>x64</p>
</td>
</tr><tr><td width="118" valign="top"><p><b>0.2.404 (DT)</b></p>
</td>
<td width="186" valign="top"><p>20-08-2020 01:36:50 UTC</p>
</td>
<td width="106" valign="top"><p>x64</p>
</td>
</tr></tbody></table>
<p><br>
One of the backdoor samples (0.1.60 (DT)) was found to be hosted on http[://]159.65.31[.]84/svolcdst.exe.</p>
<p><b>Behaviour</b></p>
<p>Before entering the command processing loop, the backdoor will check to see if it’s running as a service, and will create a run-once mutex consisting of %HOSTNAME% with a postfix of “S”, “U”, or “SU”, depending on which privileges it was executed with.</p>
<p>The C2 domain name for the DNS communication is hardcoded and obfuscated using XOR. The backdoor will generate a subdomain using a custom domain generation algorithm (DGA) and try to send an initial beacon to the C2 via DNS tunneling:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1862004984.coreimg{.width}.png/1605215109149/costaricto-fig-11.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-11.png" data-asset-id="4a9e83a1-011b-41b9-859b-fa6e588c77ea" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-11.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 11: Decoding the C2 domain name</i></p>
<p>The configuration, along with downloaded plugins and all harvested data are stored in a custom database format inside a single file under the %TEMP% directory. The file name is hardcoded and obfuscated with XOR. The storage file is encrypted with AES-256 using a hardcoded key and is decrypted each time the malware needs to read or write it and re-encrypted after new data is added:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_605429051.coreimg{.width}.png/1605215109155/costaricto-fig-12.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-12.png" data-asset-id="862e832b-0255-4bc6-924f-922d8c115c0d" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-12.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 12. Hardcoded AES key for storage encryption</i></p>
<p>Strings used as backdoor commands and in debugging messages sent to the C2 are encoded with a simple alphabet substitution. These are not decrypted by the backdoor on the victim’s side, and the key for decryption is not present in the binary. Most probably the backdoor client decrypts them locally:<br>
</p>

    
    
</div>


    
    
    <div class="image">
  

    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_288006312.coreimg{.width}.png/1605215109164/costaricto-fig-13.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-13.png" data-asset-id="1053f900-be3d-4a42-920d-a2e0b7f1c211" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-13.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 13: Substitution-encoded strings</i></p>
<p><b>Command and Control (C2)</b></p>
<p>The C2 communication can either be performed via DNS tunnelling or TCP sockets. Traffic is SSL-encrypted and can bypass HTTP/SOCKS5 proxies. The C2 domain name is hardcoded in the binary and obfuscated with a single-byte XOR key which differs between samples. In order to establish communication, the malware first uses a DGA (Domain Generation Algorithm) to generate the subdomain to connect to. Depending on an internal boolean setting, one of the following URL formats is used:</p>
<ul>
<li>&nbsp;images<b>%x.%s</b></li>
<li>&nbsp;images<b>%x</b>.elmako.<b>%s</b></li>
</ul>
<p>where<b> %s</b> is the hardcoded domain name and <b>%x </b>contains 8 hexadecimal characters generated based on the result of the GetTickCount API:<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_283070590.coreimg{.width}.png/1605215109170/costaricto-fig-13b.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-13b.png" data-asset-id="50200c82-f330-48f7-a100-6e07c40ff749" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-13b.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p>If the connection is unsuccessful, the backdoor will try to generate and connect to several other URLs in the same domain, using the same algorithm but without the “images” prefix.</p>
<p>It seems that in most cases, the malware sends out data using DNS_TYPE_TEXT requests, while the attackers issue commands separately over the TCP channel with the IP address associated with the DGA-generated subdomain.</p>
<p>All the communication is compressed with zlib and encrypted with AES. Additionally, an embedded RSA public key is used to secure the AES key exchange:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_185783918.coreimg{.width}.png/1605215109176/costaricto-fig-14.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-14.png" data-asset-id="2ff9adb2-0e77-4726-aae2-ac144617d510" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-14.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 14: RSA key used for C2 traffic encryption</i></p>
<p><b>Backdoor Commands</b></p>
<p>Both the x86 and x64 versions of the backdoor feature approximately 50 different commands organized into six groups, each group served by a different interface:&nbsp;</p>
<ul>
<li>Core<br>
</li>
<li>Taskman<br>
</li>
<li>Config<br>
</li>
<li>Storage<br>
</li>
<li>Debug<br>
</li>
<li>Network</li>
</ul>
<table width="624" cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="178"><p><b>Command&nbsp;</b></p>
</td>
<td width="75"><p><b>Type&nbsp;</b></p>
</td>
<td width="389"><p><b>Description&nbsp;</b></p>
</td>
</tr><tr><td width="178"><p><b>networkdisconnected broadcast&nbsp;</b></p>
</td>
<td width="75"><p>Core</p>
</td>
<td width="389"><p>Broadcast “networkdisconnected” message</p>
</td>
</tr><tr><td width="178"><p><b>informationaccepted broadcast&nbsp;</b></p>
</td>
<td width="75"><p>Core</p>
</td>
<td width="389"><p>Save provided session ID to memory struct, broadcast “informationaccepted” message</p>
</td>
</tr><tr><td width="178"><p><b>networkconnected broadcast</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Broadcast session ID and system info</p>
</td>
</tr><tr><td width="178"><p><b>ping&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Send a &quot;ping&quot; to the C2 server&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>loadasdll&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Load additional DLL into memory</p>
</td>
</tr><tr><td width="178"><p><b>loadfromstorage&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Inject DLL into memory (from storage)&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>loadfromfile&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Inject DLL into memory (from disk)&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>loadfrommem</b></p>
</td>
<td width="75"><p>Core</p>
</td>
<td width="389"><p>Inject DLL into memory (from memory)&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>loadplugincomplete</b></p>
</td>
<td width="75"><p>Core</p>
</td>
<td width="389"><p>Execute a plugin that is already loaded</p>
</td>
</tr><tr><td width="178"><p><b>initializeandloadpluginby-<br>
 uniqid</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Load and execute a plugin; plugins are stored as zlib-compressed and AES encrypted PE files inside the storage and referred to by unique identifier</p>
</td>
</tr><tr><td width="178"><p><b>getinfo&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Obtain environment strings, computer name, username, OS version information, system time, etc.</p>
</td>
</tr><tr><td width="178"><p><b>restart&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Respawn using ShellExecuteW&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>shutdown&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Exit process&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>uninstall&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>(unimplemented)&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>updatemyself&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Create backup of itself (with .old extension) and spawn new instance via CreateProcessW&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>pluginunload&nbsp;</b></p>
</td>
<td width="75"><p>Core&nbsp;</p>
</td>
<td width="389"><p>Unload and remove plugin from storage</p>
</td>
</tr><tr><td width="178"><p><b>getprocesslist&nbsp;</b></p>
</td>
<td width="75"><p>Taskman&nbsp;</p>
</td>
<td width="389"><p>Obtain a list of running processes&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>killprocessbypid&nbsp;</b></p>
</td>
<td width="75"><p>Taskman&nbsp;</p>
</td>
<td width="389"><p>Terminate a process by PID</p>
</td>
</tr><tr><td width="178"><p><b>killprocessbyname&nbsp;</b></p>
</td>
<td width="75"><p>Taskman&nbsp;</p>
</td>
<td width="389"><p>Terminate a process by name&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>get</b></p>
</td>
<td width="75"><p>Config&nbsp;</p>
</td>
<td width="389"><p>Read specified values from .config file in storage and send to the C2&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>set&nbsp;</b></p>
</td>
<td width="75"><p>Config&nbsp;</p>
</td>
<td width="389"><p>Set specific config fields and save to .config file in storage&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>del&nbsp;</b></p>
</td>
<td width="75"><p>Config&nbsp;</p>
</td>
<td width="389"><p>Delete specified config fields from .config file in storage&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>initdefaults&nbsp;</b></p>
</td>
<td width="75"><p>Config&nbsp;</p>
</td>
<td width="389"><p>Initialize config fields with default values and save to .config file in storage</p>
</td>
</tr><tr><td width="178"><p><b>clear&nbsp;</b></p>
</td>
<td width="75"><p>Config&nbsp;</p>
</td>
<td width="389"><p>Zero-out config fields and save to .config file in storage&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>save&nbsp;</b></p>
</td>
<td width="75"><p>Config&nbsp;</p>
</td>
<td width="389"><p>Save provided config values to .config file in storage</p>
</td>
</tr><tr><td width="178"><p><b>enum&nbsp;</b></p>
</td>
<td width="75"><p>Config&nbsp;</p>
</td>
<td width="389"><p>Read values from .config file in storage to memory</p>
</td>
</tr><tr><td width="178"><p><b>write&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Encrypt and write data to storage file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>create&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Create new encrypted storage file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>close&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Encrypt and flush data to storage file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>drop&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Write supplied file content to storage file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>delete&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Delete file with specified ID from storage; enumerate files in storage</p>
</td>
</tr><tr><td width="178"><p><b>enum&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Enumerate files in storage (name, written, size)&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>upload&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Decrypt and upload file with specified ID from storage file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>clearall</b></p>
</td>
<td width="75"><p>Storage</p>
</td>
<td width="389"><p>Remove all files from storage</p>
</td>
</tr><tr><td width="178"><p><b>archivebypath&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Read file(s) from specified path and save to storage file, then enumerate storage&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>restorestorage&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Delete storage file and open a new storage</p>
</td>
</tr><tr><td width="178"><p><b>cancel<sup>1 </sup>/<sup> </sup>closeanddeletestorage&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Remove all files from storage and delete storage temp file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>closestorage&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Close storage temp file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>openstorage&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Open storage temp file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>getcontent&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>(unimplemented)</p>
</td>
</tr><tr><td width="178"><p><b>awaitcreate&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Create new encrypted storage file&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>await&amp;putcontent&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Read from C2 and save to the storage file</p>
</td>
</tr><tr><td width="178"><p><b>await&amp;getcontent&nbsp;</b></p>
</td>
<td width="75"><p>Storage&nbsp;</p>
</td>
<td width="389"><p>Read from content from storage and send via C2&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>debuglog&nbsp;</b></p>
</td>
<td width="75"><p>Debug&nbsp;</p>
</td>
<td width="389"><p>Enable debug logging&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>broadcast</b></p>
</td>
<td width="75"><p>Network&nbsp;</p>
</td>
<td width="389"><p>Set networkconnected or networkdisconnected bool in memory&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>touchconnect&nbsp;</b></p>
</td>
<td width="75"><p>Network&nbsp;</p>
</td>
<td width="389"><p>Send the networkconnected bool setting to the C2</p>
</td>
</tr><tr><td width="178"><p><b>stats&nbsp;</b></p>
</td>
<td width="75"><p>Network&nbsp;</p>
</td>
<td width="389"><p>Send details of sent/received bytes&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>reconnect&nbsp;</b></p>
</td>
<td width="75"><p>Network&nbsp;</p>
</td>
<td width="389"><p>Close socket and reconnect&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>disconnect&nbsp;</b></p>
</td>
<td width="75"><p>Network&nbsp;</p>
</td>
<td width="389"><p>Close socket&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>switchtotcp&nbsp;</b></p>
</td>
<td width="75"><p>Network</p>
</td>
<td width="389"><p>Switch C2 communication to TCP/IP</p>
</td>
</tr><tr><td width="178"><p><b>switchdns&nbsp;</b></p>
</td>
<td width="75"><p>Network</p>
</td>
<td width="389"><p>Switch C2 communication to DNS&nbsp;</p>
</td>
</tr><tr><td width="178"><p><b>setproxy<sup>2</sup></b></p>
</td>
<td width="75"><p>Network</p>
</td>
<td width="389"><p>Set proxy type, host, port, domain, user, password</p>
</td>
</tr><tr><td width="178"><p><b>checkproxy<sup>2</sup></b></p>
</td>
<td width="75"><p>Network</p>
</td>
<td width="389"><p>(unimplemented)</p>
</td>
</tr><tr><td width="178"><p><b>getproxy<sup>3</sup></b></p>
</td>
<td width="75"><p>Network</p>
</td>
<td width="389"><p>Send current proxy configuration to C2</p>
</td>
</tr><tr><td width="178"><p><b>resetproxy<sup>3</sup></b></p>
</td>
<td width="75"><p>Network</p>
</td>
<td width="389"><p>(unimplemented)</p>
</td>
</tr></tbody></table>
<p><i>1 – before v0.1.60t<br>
 2 – since at least v0.1.208<br>
 3 – since at least v0.1.724</i></p>
<p><b>Network<br>
 <br>
 <i>Infosportals[.]com</i></b></p>
<p>First active during October 2019, infosportals[.]com was utilized by early SombRATs as the primary C2 domain. Since then, the domain shifted IP address multiple times, was then taken offline between February and May, before being reactivated briefly between late May and mid-June as part of another offensive:<br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_749005639.coreimg{.width}.png/1605215109182/costaricto-fig-15.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-15.png" data-asset-id="9282dd71-ca7b-4145-a8da-a7e3a09d7578" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-15.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <i>Figure 15: Timeline of IP resolutions for infosportals[.]com</i><br>
 <br>
 
    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_705433127.coreimg{.width}.png/1605215109187/costaricto-fig-16.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-16.png" data-asset-id="b8660bc2-5bfb-40fe-938a-0fc5393c6492" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-16.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 16: Table of IP resolutions for infosportals[.]com</i></p>
<p><i>&nbsp;<b>Sbibd[.]net</b></i></p>
<p>A phishing domain mimicking the legitimate sbibd.com (registered to the State Bank of India, Bangladesh), sbibd[.]net was first active for a short spell from early November to December 2019, then reactivated again between February and March 2020 and was used as the primary C2 with several SombRAT variants:<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_591888426.coreimg{.width}.png/1605215109193/costaricto-fig-17.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-17.png" data-asset-id="9b92ecdb-f4c2-4a9b-8f2c-7f79f3d6ba18" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-17.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <i>Figure 17: Timeline of IP resolutions for sbibd[.]net<br>
<br>
</i>
    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1702443658.coreimg{.width}.png/1605215109199/costaricto-fig-18.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-18.png" data-asset-id="b309a96a-4ee8-416b-bdd1-47bf10c504ca" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-18.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 18: Table of IP resolutions for sbibd[.]net</i></p>
<p><b><i>Akams[.]in</i><br>
</b></p>
<p>First active for a few weeks from late December 2019 to mid-January 2020, akams[.]in was also used by multiple SombRAT samples for C2 communications. One of the prior resolutions, for IP 45.89.175.206, is particularly interesting, as it overlaps with another domain called mail[.]kub-gas[.]com, which was implicated as being associated with an APT-28/Fancy Bear/Sofacy phishing campaigns in a <a href="https://cdn.area1security.com/reports/Area-1-Security-PhishingBurismaHoldings.pdf" target="_blank">report by Area 1 Security</a>. However, after much scrutiny, it would appear highly likely that there is no direct connection between the SombRAT campaign and APT-28 activity.<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1485817250.coreimg{.width}.png/1605215109205/costaricto-fig-19.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-19.png" data-asset-id="4925fd7e-41e3-4543-9921-03ea44a5b7c3" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-19.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <i>Figure 19: Timeline of IP resolutions for akams[.]in<br>
<br>
</i>
    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1480999080.coreimg{.width}.png/1605215109211/costaricto-fig-20.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-20.png" data-asset-id="93d1cd52-c930-415f-83c1-3ddd8616b8dc" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-20.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 20: Table of IP resolutions for akams[.]in</i><br>
<br>
<b><i>newspointview[.]com</i></b></p>
<p>Registered and active during late June 2020, newspointview[.]com has been used with more recent SombRAT variants as the primary C2 domain:<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_443433007.coreimg{.width}.png/1605215109216/costaricto-fig-21.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-21.png" data-asset-id="1e95b492-4ab8-487c-a36e-5d7d014cc849" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-21.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <i>Figure 21: Timeline of IP resolutions for newspointview[.]com</i><br>
<br>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_1198257574.coreimg{.width}.png/1605215109222/costaricto-fig-22.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-22.png" data-asset-id="397fc003-dc53-4844-a30e-b3550ca115ac" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-22.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 22: Table of IP resolutions for newspointview[.]com</i></p>
<p><b>Timeline</b></p>
<p>The following timeline shows key domain/IP resolutions and known SombRAT releases: <br>
<br>
</p>

    
    
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced/_jcr_content/main/par/sectionblog/par/image_750135960.coreimg{.width}.png/1605215109228/costaricto-fig-23.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-23.png" data-asset-id="9ba36135-b38f-4eba-9044-c3b7a428a21b" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2020/11/costaricto-fig-23.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <p><i>Figure 23: Timeline of IP resolutions and SombRAT versions</i></p>
<p><b>Conclusions</b></p>
<p>There are several factors that lead us to the assumption that the threat actor behind CostaRicto is a mercenary group:</p>
<ul>
<li>The toolset used in CostaRicto campaign consists of bespoke malware that appeared around October 2019 and has been rarely seen in the wild since. It therefore appears to be private to this particular adversary.<br>
<br>
</li>
<li>Moreover, the constant development, detailed versioning system and well-structured code that allows for easy functionality expansion – all suggest that the toolset is part of a long-term project, rather than a one-off campaign.<br>
<br>
</li>
<li>The apparent sharing of network infrastructure with a previous, seemingly unrelated phishing campaign attributed to APT28, as well as the reuse of phishing domain names as C2 servers in attacks against unrelated victims, indicates that the same entity is likely behind a diverse range of attacks.<br>
<br>
</li>
<li>Finally, the diversity and geography of the victims doesn’t fit a picture of a campaign sponsored by a particular state; rather, it’s a mix of targets that could be explained by different assignments commissioned by disparate entities.</li>
</ul>
<p>With the undeniable success of Ransomware-as-a-Service (RaaS), it's not surprising that the cybercriminal market has expanded its portfolio to add dedicated phishing and espionage campaigns to the list of services on offer. Outsourcing attacks or certain parts of the attack chain to unaffiliated mercenary groups has several advantages for the adversary – it saves their time and resources and simplifies the procedures, but most importantly it provides an additional layer of indirection, which helps to protect the real identity of the threat actor.</p>
<p>Researchers and investigators tend to group adversaries based on similar tactics, techniques and procedures, code reuse, and physical infrastructure overlap. The attribution is often derived by analyzing the nature and geography of the campaign targets in relation to geopolitical situation. However, in the case of mercenary APTs, the selection of victims might appear random and will rarely reveal a bigger picture about the motives behind the campaigns.</p>
<p>When dealing with threat actors that outsource their campaigns, only the entity that performed the attack can be tracked, while the actual perpetrator becomes more elusive than ever.<br>
<br>
</p>
<p><b>Indicators of Compromise (IoCs):</b></p>
<table width="641" cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="439" valign="top"><p><b>Indicator&nbsp;</b></p>
</td>
<td width="66" valign="top"><p><b>Type</b></p>
</td>
<td width="136" valign="top"><p><b>Description&nbsp;</b></p>
</td>
</tr><tr><td width="439" valign="top"><p>130fa726df5a58e9334cc28dc62e3ebaa0b7c0d637fce1a66daff66ee05a9437</p>
</td>
<td width="66" valign="top"><p>SHA256<b></b></p>
</td>
<td width="136" valign="top"><p>SombRAT x86 loader</p>
</td>
</tr><tr><td width="439" valign="top"><p>8062e1582525534b9c52c5d9a38d6b012746484a2714a14febe2d07af02c32d5</p>
</td>
<td width="66" valign="top"><p>SHA256<b></b></p>
</td>
<td width="136" valign="top"><p>SombRAT x86 loader</p>
</td>
</tr><tr><td width="439" valign="top"><p>d69764b22d1b68aa9462f1f5f0bf18caebbcff4d592083f80dbce39c64890295</p>
</td>
<td width="66" valign="top"><p>SHA256<b></b></p>
</td>
<td width="136" valign="top"><p>SombRAT x86 loader</p>
</td>
</tr><tr><td width="439" valign="top"><p>f6ecdae3ae4769aaafc8a0faab30cb66dab8c9d3fff27764ff208be7a455125c</p>
</td>
<td width="66" valign="top"><p>SHA256<b></b></p>
</td>
<td width="136" valign="top"><p>SombRAT x86 loader</p>
</td>
</tr><tr><td width="439" valign="top"><p>561bf3f3db67996ce81d98f1df91bfa28fb5fc8472ed64606ef8427a97fd8cdd</p>
</td>
<td width="66" valign="top"><p>SHA256<b></b></p>
</td>
<td width="136" valign="top"><p>SombRAT x86 payload (memory dump)</p>
</td>
</tr><tr><td width="439" valign="top"><p>8323094c43fcd2da44f60b46f043f7ca4ad6a2106b6561598e94008ece46168b</p>
</td>
<td width="66" valign="top"><p>SHA256<b></b></p>
</td>
<td width="136" valign="top"><p>SombRAT x86 payload</p>
</td>
</tr><tr><td width="439" valign="top"><p>ee0f4afee2940bbe895c1f1f60b8967291a2662ac9dca9f07d9edf400d34b58a</p>
<p>ee0f4afee2940bbe895c1f1f60b8967291a2662ac9dca9f07d9edf400d34b58a</p>
</td>
<td width="66" valign="top"><p>SHA256<b></b></p>
</td>
<td width="136" valign="top"><p>SombRAT x86 payload (UPX)</p>
</td>
</tr><tr><td width="439" valign="top"><p>70d63029c65c21c4681779e1968b88dc6923f92408fe5c7e9ca6cb86d7ba713a</p>
</td>
<td width="66" valign="top"><p>SHA256</p>
</td>
<td width="136" valign="top"><p>SombRAT encoded payload (x64)</p>
</td>
</tr><tr><td width="439" valign="top"><p>79009ee869cec789a3d2735e0a81a546b33e320ee6ae950ba236a9f417ebf763</p>
</td>
<td width="66" valign="top"><p>SHA256</p>
</td>
<td width="136" valign="top"><p>SombRAT decoded payload (x64)</p>
</td>
</tr><tr><td width="439" valign="top"><p>d8189ebdec637fc83276654635343fb422672fc5e3e2818df211fb7c878a3155</p>
</td>
<td width="66" valign="top"><p>SHA256</p>
</td>
<td width="136" valign="top"><p>Payload stager</p>
</td>
</tr><tr><td width="439" valign="top"><p>fa74f70baa15561c28c793b189102149d3fb4f24147adc5efbd8656221c0960b</p>
</td>
<td width="66" valign="top"><p>SHA256</p>
</td>
<td width="136" valign="top"><p>GO-socks5 proxy</p>
</td>
</tr><tr><td width="439" valign="top"><p>c0db3dadf2e270240bb5cad8a652e5e11e3afe41b8ee106d67d47b06f5163261</p>
</td>
<td width="66" valign="top"><p>SHA256</p>
</td>
<td width="136" valign="top"><p>Pcheck proxy</p>
</td>
</tr><tr><td width="439" valign="top"><p>6df8271ae0380737734b2dd6d46d0db3a30ba35d7379710a9fb05d1510495b49</p>
</td>
<td width="66" valign="top"><p>SHA256</p>
</td>
<td width="136" valign="top"><p>Pcheck proxy</p>
</td>
</tr><tr><td width="439" valign="top"><p>7424d6daab8407e85285709dd27b8cce7c633d3d4a39050883ad9d82b85198bf</p>
</td>
<td width="66" valign="top"><p>SHA256</p>
</td>
<td width="136" valign="top"><p>Pscan port scanner</p>
</td>
</tr><tr><td width="439" valign="top"><p>svolcdst.exe</p>
</td>
<td width="66" valign="top"><p>Filename</p>
</td>
<td width="136" valign="top"><p>SombRAT loader</p>
</td>
</tr><tr><td width="439" valign="top"><p>tunnusvcen.exe</p>
</td>
<td width="66" valign="top"><p>Filename</p>
</td>
<td width="136" valign="top"><p>SombRAT loader</p>
</td>
</tr><tr><td width="439" valign="top"><p>C:\Projects\Sombra\_Bin\x64\Release\Sombra.pdb</p>
</td>
<td width="66" valign="top"><p>PDB path</p>
</td>
<td width="136" valign="top"><p>SombRAT x64</p>
</td>
</tr><tr><td width="439" valign="top"><p>C:\Wokrflow\CostaRicto\Release\CostaBricks.pdb</p>
</td>
<td width="66" valign="top"><p>PDB path</p>
</td>
<td width="136" valign="top"><p>SombRAT loader</p>
</td>
</tr><tr><td width="439" valign="top"><p>%HOSTNAME%UI724</p>
</td>
<td width="66" valign="top"><p>Mutex</p>
</td>
<td width="136" valign="top"><p>Run-once mutex</p>
</td>
</tr><tr><td width="439" valign="top"><p>%HOSTNAME%SUI724&nbsp;</p>
</td>
<td width="66" valign="top"><p>Mutex</p>
</td>
<td width="136" valign="top"><p>Run-once mutex</p>
</td>
</tr><tr><td width="439" valign="top"><p>sbibd[.]net</p>
</td>
<td width="66" valign="top"><p>Domain</p>
</td>
<td width="136" valign="top"><p>SombRAT C2</p>
</td>
</tr><tr><td width="439" valign="top"><p>infosportals[.]com</p>
</td>
<td width="66" valign="top"><p>Domain</p>
</td>
<td width="136" valign="top"><p>SombRAT C2</p>
</td>
</tr><tr><td width="439" valign="top"><p>akams[.]in</p>
</td>
<td width="66" valign="top"><p>Domain</p>
</td>
<td width="136" valign="top"><p>SombRAT C2</p>
</td>
</tr><tr><td width="439" valign="top"><p>newspointview[.]com</p>
</td>
<td width="66" valign="top"><p>Domain</p>
</td>
<td width="136" valign="top"><p>SombRAT C2</p>
</td>
</tr><tr><td width="439" valign="top"><p>159.65.31.84</p>
</td>
<td width="66" valign="top"><p>IP</p>
</td>
<td width="136" valign="top"><p>SombRAT hosting place</p>
</td>
</tr><tr><td width="439" valign="top"><p>212.83.61.227</p>
</td>
<td width="66" valign="top"><p>IP</p>
</td>
<td width="136" valign="top"><p>sbibd[.]net&nbsp;</p>
</td>
</tr><tr><td width="439" valign="top"><p>144.217.53.146&nbsp;</p>
</td>
<td width="66" valign="top"><p>IP</p>
</td>
<td width="136" valign="top"><p>sbibd[.]net, akams[.]in, infosportals[.]com</p>
</td>
</tr><tr><td width="439" valign="top"><p>45.89.175.206</p>
</td>
<td width="66" valign="top"><p>IP</p>
</td>
<td width="136" valign="top"><p>akams[.]in</p>
</td>
</tr><tr><td width="439" valign="top"><p>45.138.172.54</p>
</td>
<td width="66" valign="top"><p>IP</p>
</td>
<td width="136" valign="top"><p>newspointview[.]com</p>
</td>
</tr><tr><td width="439" valign="top"><p>212.114.52.98</p>
</td>
<td width="66" valign="top"><p>IP</p>
</td>
<td width="136" valign="top"><p>infosportals[.]com</p>
</td>
</tr></tbody></table>
<p>&nbsp;</p>
<p><b>MITRE ATT&amp;CK:</b></p>
<table width="693" cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="113" valign="top"><p><b>Tactic</b></p>
</td>
<td width="79" valign="top"><p><b>ID</b></p>
</td>
<td width="255" valign="top"><p><b>Name</b></p>
</td>
<td width="245" valign="top"><p><b>Description</b></p>
</td>
</tr><tr><td width="113"><p>Initial Access</p>
</td>
<td width="79"><p><a href="https://attack.mitre.org/techniques/T1078/" target="_blank">T1078</a></p>
</td>
<td width="255"><p>Valid Accounts</p>
</td>
<td width="245" valign="top"><p>Suspected initial compromise using stolen credentials</p>
</td>
</tr><tr><td rowspan="3" width="113"><p>Execution</p>
</td>
<td width="79"><p><a href="https://attack.mitre.org/techniques/T1106/" target="_blank">T1106</a></p>
</td>
<td width="255"><p>Execution through API</p>
</td>
<td width="245" valign="top"><p>SombRAT – C2 command</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1053/005/" target="_blank">T1053/005</a></p>
</td>
<td width="255"><p>Scheduled Task/Job: Scheduled Task</p>
</td>
<td width="245" valign="top"><p>Used to download SombRAT loader</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1059/001/" target="_blank">T1059/001</a></p>
</td>
<td width="255"><p>Command and Scripting Interpreter: PowerShell</p>
</td>
<td width="245" valign="top"><p>Used to load x64 SombRAT</p>
</td>
</tr><tr><td rowspan="2" width="113"><p>Defence Evasion</p>
</td>
<td width="79"><p><a href="https://attack.mitre.org/techniques/T1055/" target="_blank">T1055</a></p>
</td>
<td width="255"><p>Process Injection</p>
</td>
<td width="245" valign="top"><p>Invoke-ReflectivePEInjection PowerSploit module</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1140/" target="_blank">T1140</a></p>
</td>
<td width="255"><p>Deobfuscate/Decode Files or Information</p>
</td>
<td width="245" valign="top"><p>SombRAT – Decode strings and custom storage data</p>
</td>
</tr><tr><td rowspan="4" width="113"><p>Discovery</p>
</td>
<td width="79"><p><a href="https://attack.mitre.org/techniques/T1057/" target="_blank">T1057</a></p>
</td>
<td width="255"><p>Process Discovery</p>
</td>
<td width="245" valign="top"><p>SombRAT – C2 command</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1082/" target="_blank">T1082</a></p>
</td>
<td width="255"><p>System Information Discovery</p>
</td>
<td width="245" valign="top"><p>SombRAT – C2 command</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1124/" target="_blank">T1124</a></p>
</td>
<td width="255"><p>System Time Discovery</p>
</td>
<td width="245" valign="top"><p>SombRAT – C2 command</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1046/" target="_blank">T1046</a></p>
</td>
<td width="255"><p>Network Service Scanning</p>
</td>
<td width="245" valign="top"><p>pscan, nmap</p>
</td>
</tr><tr><td width="113"><p>Collection</p>
</td>
<td width="79"><p><a href="https://attack.mitre.org/techniques/T1560/003/" target="_blank">T1560/003</a></p>
</td>
<td width="255"><p>Archive Collected Data: Archive via Custom Method</p>
</td>
<td width="245" valign="top"><p>SombRAT – Custom storage file</p>
</td>
</tr><tr><td rowspan="4" width="113"><p>Command and Control</p>
</td>
<td width="79"><p><a href="https://attack.mitre.org/techniques/T1572/" target="_blank">T1572</a></p>
</td>
<td width="255"><p>Protocol Tunneling</p>
</td>
<td width="245" valign="top"><p>SombRAT - DNS tunnelling for C2</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1071/001/" target="_blank">T1071/001</a></p>
</td>
<td width="255"><p>Application Layer Protocol: Web Protocols</p>
</td>
<td width="245" valign="top"><p>SombRAT – HTTP for C2</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1573/002/" target="_blank">T1573/002</a></p>
</td>
<td width="255"><p>Encrypted Channel: Asymmetric Cryptography</p>
</td>
<td width="245" valign="top"><p>SombRAT – RSA for C2 encryption</p>
</td>
</tr><tr><td width="79"><p><a href="https://attack.mitre.org/techniques/T1090/002/" target="_blank">T1090/002</a></p>
</td>
<td width="255"><p>Proxy: External Proxy</p>
</td>
<td width="245" valign="top"><p>pcheck HTTP/S proxy, GO SOCKS5 proxy, PuTTY</p>
</td>
</tr><tr><td width="113"><p>Exfiltration</p>
</td>
<td width="79"><p><a href="https://attack.mitre.org/techniques/T1041/" target="_blank">T1041</a></p>
</td>
<td width="255"><p>Exfiltration Over C2 Channel</p>
</td>
<td width="245" valign="top"><p>SombRAT</p>
</td>
</tr></tbody></table>
<p>&nbsp;</p>
<p><b>Yara Hunting Rules:</b></p>
<table cellspacing="0" cellpadding="0" border="0">
<tbody><tr><td width="623" valign="top"><p>import &quot;pe&quot;<br>
import &quot;hash&quot;<br>
<b><br>
 rule costaricto_vm_dropper</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect SombRAT loader by code similarity&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;</p>
<p>&nbsp;&nbsp;&nbsp; strings:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // vm class name<br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; $classname = &quot;VMBASERUNNER&quot; ascii wide nocase</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; // start of vm bytecode<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $vmbytecode = {37C7359438C73594}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // start of encrypted payload<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $encpayload_1 = {77D2C7AC59B2EB0DF37028AC950971FB}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // binary string from enc payload (some payloads differ only in the header)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $encpayload_2 = {06359D29C83125C321C201CF9AE7D1626B8F4281C33617EECE86BD106C628FE593936F00C2C<br>
68E28843BE5374F876840FCD1BFD014D5DEFF4BA8EB6A5FFFB24F932138B04C1BE6D5BD8BB572B8116799AE1C8F0<br>
D5DB774ABA4884B9E706981FC3740B4CD891F8A0EA6900D41B675CFC98A}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // vm execution loop<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $vmcode_1 = {8B ?? 08 8B ?? 0C 89 ?? 29 ?? C1 ?? 02 39 ?? 74 4E 83 ?? ?? 08 8D ?? ?? 8B ?? ?? 8D ?? 01 89 ?? 8B ?? ?? 66 83 ?? 08 00 75 28 8B ?? ?? 8D ?? 04 5? 5? E8 ?? ?? FF FF 8B ?? ?? 83 ?? 0C 5? 8B ?? 0C 89 ?? 5? FF ?? 14 83 C4 08 8B ?? 8B ?? 08 8B ?? 0C 89 ?? 29 ?? C1 ?? 02 39 ?? 89 ?? 75 B9}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // vm execution loop (sample from Nov 2019)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $vmcode_2 = {8B ?? 4? 89 ?? 8B ?? 08 8B ?? 88 33 ?? 66 39 ?? 08 75 19 8D ?? 04 5? 8D ?? 08 E8 ?? ?? 00 00 8B ?? 8D ?? 0C 5? 5? FF ?? 5? 5? 8B ?? 8B ?? 0C 2B ?? 08 C1 ?? 02 3B ?? 75 C7}</p>
<p>&nbsp;&nbsp;&nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint16(0) == 0x5a4d and filesize &lt; 5MB and filesize &gt; 20KB and any of them<br>
}</p>
<p><b>rule costaricto_vm_dropper_pdb_path</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect samples with CostaRicto PDB path&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pdb_string = &quot;C:\\Wokrflow\\CostaRicto\\Release\\CostaBricks.pdb&quot;</p>
<p>&nbsp;&nbsp;&nbsp; strings:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a = &quot;CostaRicto&quot; ascii wide nocase<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b = &quot;CostaBricks.pdb&quot; ascii wide nocase<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $c1 = &quot;C:\\Wokrflow\\&quot; ascii wide nocase<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $c2 = &quot;Release&quot; ascii wide nocase<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $c3 = &quot;.pdb&quot; ascii wide nocase&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
</p>
<p>&nbsp;&nbsp;&nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint16(0) == 0x5a4d and filesize &lt; 5MB and filesize &gt; 20KB and ($a or $b or all of ($c*))<br>
}</p>
<p><b>rule costaricto_sobmrat_pdb_path</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect samples with SombRAT PDB path&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pdb_string = &quot;C:\\Projects\\Sombra\\_Bin\\x64\\Release\\Sombra.pdb&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pdb_string_2 = &quot;c:\\projects\\sombra\\libraries&quot;</p>
<p>&nbsp;&nbsp;&nbsp; strings:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a = &quot;\\Projects\\Sombra\\&quot; ascii wide nocase<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b = &quot;Sombra.pdb&quot; ascii wide nocase</p>
<p>&nbsp;&nbsp; &nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint16(0) == 0x5a4d and filesize &lt; 5MB and filesize &gt; 20KB and ($a or $b)<br>
}</p>
<p><b>rule costaricto_backdoored_blink</b><br>
{&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect backdoored Blink application&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;</p>
<p>&nbsp;&nbsp;&nbsp; strings:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a1 = &quot;Failed to open target application process!&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a2 = &quot;Machine architecture mismatch between target application and this application!&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a3 = &quot;Failed to create new communication pipe!&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b = &quot;Plauger, licensed by Dinkumware, Ltd.&quot;</p>
<p>&nbsp;&nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp; uint16(0) == 0x5a4d and filesize &lt; 5MB and filesize &gt; 50KB and ($b and 1 of ($a*))<br>
}</p>
<p><b>rule costaricto_rich_header</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect Rich header associated with CostaRicto campaign&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;</p>
<p>&nbsp;&nbsp;&nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0xf1, 40116) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0xf3, 40116) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0xf2, 40116) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x105, 26706) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x104, 26706) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x103, 26706) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x93, 30729) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x109, 27023) and&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0xff, 27023) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x97, 0) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x102, 27023)<br>
}</p>
<p><b>rule costaricto_rich_header_august</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; description = &quot;Rule to detect Rich header associated with CostaRicto campaign&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;</p>
<p>&nbsp;&nbsp;&nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0xf1, 40116) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0xf2, 40116) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0xf3, 40116) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x102, 26428) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x103, 26131) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x104, 26131) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x105, 26131) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x103, 26433) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x104, 26433) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x109, 26428) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0x93, 30729) and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.toolid(0xff, 26428)<br>
}</p>
<p><b>rule costaricto_rich_xor_key</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect Rich header associated with CostaRicto campaign&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
</p>
<p>&nbsp;&nbsp;&nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // x86 droppers<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.key == 0x2e8d923f or<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.key == 0x97d94c45 or<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // x86 payload<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.key == 0xef257087 or<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.key == 0x4f257087 or<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.key == 0x1e816e7e or</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // x64 payload<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.key == 0xd1e5ae6c or<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pe.rich_signature.key == 0x5df9c60b<br>
}</p>
<p><b>rule costaricto_sombrat_unpacked</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect unpacked SombRAT backdoor&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;</p>
<p>&nbsp;&nbsp;&nbsp; strings:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // class names<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a1 = &quot;PEHeadersBackup&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a2 = &quot;PeLoaderDummy&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a3 = &quot;PeLoaderLocal&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a4 = &quot;PeLoaderBaseClass&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a5 = &quot;PDTaskman&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a6 = &quot;PDMessageParamArray&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a7 = &quot;NetworkDriverLayerWebsockets&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a8 = &quot;NetworkDriverLayerDNSReader&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a9 = &quot;WaitForPluginIOCPFullyClosed&quot;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // substitution-encrypted strings<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b1 = &quot;~ydcv{{rs{~|r&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// installedlike<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b2 = &quot;~yg{vcqxez&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // winplatform<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b3 = &quot;~yqxezvc~xyvttrgcrs&quot;&nbsp;&nbsp;&nbsp;&nbsp; // informationaccepted<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b4 = &quot;xvsqexzdcxevpr&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // loadfromstorage<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b5 = &quot;xvsqexzzrzxen&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // loadfrommemory<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b7 = &quot;xgrydcxevpr&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // openstorage<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b8 = &quot;g{bp~y{xvstxzg{rcr&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // pluginloadcomplete<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b9 = &quot;g{bp~yby{xvs&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // pluginunload</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // AES-encrypted strings<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $c1 = {44 5B 7F 52 0C 13 52 1A 16 45 4C 75 65 72 60 53}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; // RSA public key<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $d1 = {EF C9 77 B9 A3 8E 48 92 77 C8 E1 E1 0C 46 35 2B}</p>
<p>&nbsp;&nbsp;&nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint16(0) == 0x5a4d and filesize &lt; 5MB and filesize &gt; 20KB and any of them<br>
}</p>
<p><b>rule costaricto_pcheck_proxy</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect a custom proxy tool related to the CostaRicto campaign&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
</p>
<p>&nbsp;&nbsp;&nbsp; strings:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a = &quot;exe.exe host host_port proxy_host proxy_port&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b = &quot;Tool jobs done&quot;</p>
<p>&nbsp; &nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint16(0) == 0x5a4d and filesize &lt; 500KB and filesize &gt; 10KB and ($a or $b)<br>
}</p>
<p><b>rule costaricto_pscan_port_scanner</b><br>
{<br>
&nbsp;&nbsp;&nbsp; meta:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; description = &quot;Rule to detect a custom proxy tool related to the CostaRicto campaign&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; author = &quot;BlackBerry Threat Hunting and Intelligence Team&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
</p>
<p>&nbsp;&nbsp;&nbsp; strings:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a1 = &quot;Invalid arguments count (ver &quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a2 = &quot;Example: ./pscan&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $a3 = &quot;127-130.0.0.1&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b1 = &quot;[output.txt]&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $b2 = &quot;Invalid ip address range&quot;</p>
<p>&nbsp;&nbsp;&nbsp; condition:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint16(0) == 0x5a4d and filesize &lt; 500KB and filesize &gt; 10KB and any of ($a*) or all of ($b*)<br>
}</p>
</td>
</tr></tbody></table>
<p><b>IDAPython Scripts:</b></p>
<table cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="623" valign="top"><p>#!/usr/bin/python</p>
<p>​<b>import</b> sys<b>,</b> os<b>,</b> struct<b>,</b> array</p>
<p>​fin <b>=</b> sys<b>.</b>argv<b>[</b>1<b>]</b><br>
fout <b>=</b> &quot;%s_decoded&quot; <b>%(</b>fin<b>)</b><br>
f <b>=</b> open<b>(</b>fin<b>,</b> &quot;r+w+b&quot;<b>)</b><br>
f2 <b>=</b> open<b>(</b>fout<b>,</b> &quot;w+b&quot;<b>)</b><br>
encsize <b>=</b> os<b>.</b>path<b>.</b>getsize<b>(</b>fin<b>)</b> <b>/</b> 4</p>
<p>​key_1 <b>=</b> 0x14820285<br>
key_2 <b>=</b> 0x26820323<br>
key_3 <b>=</b> 0x35223562<br>
key_4 <b>=</b> 0x41256421<br>
cst_1 <b>=</b> 0x61C88647<br>
cst_2 <b>=</b> 0x9E3779B9</p>
<p>​enc <b>=</b> array<b>.</b>array<b>(</b>'I'<b>)</b><br>
enc<b>.</b>read<b>(</b>f<b>,</b> encsize<b>)</b></p>
<p>​i <b>=</b> 0</p>
<p>​<b>while</b> i <b>&lt;</b> encsize<b>:</b><br>
&nbsp;&nbsp;&nbsp; encdw_1 <b>=</b> enc<b>[</b>i<b>]</b><br>
&nbsp;&nbsp;&nbsp; encdw_2 <b>=</b> enc<b>[</b>i<b>+</b>1<b>]</b></p>
<p>&nbsp;&nbsp;&nbsp; tmp_1a <b>=</b> encdw_1 <b>&lt;&lt;</b> 4 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; tmp_1b <b>=</b> encdw_1 <b>&gt;&gt;</b> 5 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; tmp_1c <b>=</b> encdw_1 <b>-</b> cst_1 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; tmp_2a <b>=</b> tmp_1a <b>+</b> key_3 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; tmp_2b <b>=</b> tmp_1b <b>+</b> key_4 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; tmp_3 <b>=</b> tmp_2a&nbsp; <b>^</b> tmp_1c</p>
<p>&nbsp;&nbsp;&nbsp; keydw_2 <b>=</b> tmp_3 <b>^</b> tmp_2b<br>
&nbsp;&nbsp;&nbsp; decdw_2 <b>=</b> encdw_2 <b>-</b> keydw_2 <b>&amp;</b> 0xffffffff</p>
<p>&nbsp;&nbsp;&nbsp; magic_1 <b>=</b> decdw_2 <b>&lt;&lt;</b> 4 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; magic_2 <b>=</b> decdw_2 <b>&gt;&gt;</b> 5 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; key_1a <b>=</b> key_1 <b>+</b> magic_1 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; key_2a <b>=</b> key_2 <b>+</b> magic_2 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; cst_2a <b>=</b> cst_2 <b>+</b> decdw_2 <b>&amp;</b> 0xffffffff<br>
&nbsp;&nbsp;&nbsp; tmp_5 <b>=</b> key_1a <b>^</b> cst_2a</p>
<p>​&nbsp;&nbsp;&nbsp; keydw_1 <b>=</b> tmp_5 <b>^</b> key_2a<br>
&nbsp;&nbsp;&nbsp; decdw_1 <b>=</b> encdw_1 <b>-</b> keydw_1 <b>&amp;</b> 0xffffffff</p>
<p>&nbsp;&nbsp;&nbsp; data1 <b>=</b> struct<b>.</b>pack<b>(</b>'I'<b>,</b> decdw_1<b>)</b><br>
<b>&nbsp;</b>&nbsp;&nbsp; data2 <b>=</b> struct<b>.</b>pack<b>(</b>'I'<b>,</b> decdw_2<b>)</b></p>
<p>​&nbsp;&nbsp;&nbsp; f2<b>.</b>seek<b>(</b>i<b>*</b>4<b>)</b><br>
&nbsp;&nbsp;&nbsp; f2<b>.</b>write<b>(</b>data1<b>)</b><br>
&nbsp;&nbsp;&nbsp; f2<b>.</b>seek<b>(</b>i<b>*</b>4<b>+</b>4<b>)</b><br>
&nbsp;&nbsp;&nbsp; f2<b>.</b>write<b>(</b>data2<b>)</b></p>
<p>&nbsp;&nbsp;&nbsp; i <b>=</b> i <b>+</b> 2</p>
</td>
</tr></tbody></table>
<p><i>Figure 24: SombRAT payload decryption script</i></p>
<p>&nbsp;</p>
<table cellspacing="0" cellpadding="0" border="1">
<tbody><tr><td width="623" valign="top"><p><b>import</b> idc<b>,</b> idaapi<b>,</b> idautils<br>
<b>import</b> idautils<br>
<b>import</b> string<b>,</b> array<b>,</b> struct<b>,</b> binascii</p>
<p><b>def</b> isprintable<b>(</b>s<b>,</b> codec<b>=</b>'ascii'<b>):</b><br>
&nbsp;&nbsp;&nbsp; <b>try:</b> s<b>.</b>decode<b>(</b>codec<b>)</b><br>
&nbsp;&nbsp;&nbsp; <b>except</b> UnicodeDecodeError<b>:</b> <b>return</b> <b>False</b><br>
&nbsp;&nbsp;&nbsp; <b>else:</b> <b>return</b> <b>True</b></p>
<p>​<b>def</b> get_int<b>(</b>addr<b>):</b><br>
&nbsp;&nbsp;&nbsp; <b>return</b> struct<b>.</b>unpack<b>(</b>'I'<b>,</b> get_bytes<b>(</b>addr<b>,</b> 4<b>))[</b>0<b>]</b></p>
<p>​<b>def</b> add_comment<b>(</b>offset<b>,</b> comment<b>):</b><br>
&nbsp;&nbsp;&nbsp; idc<b>.</b>MakeComm<b>(</b>offset<b>,</b> comment<b>)</b><br>
&nbsp;&nbsp;&nbsp; target <b>=</b> idc<b>.</b>DfirstB<b>(</b>offset<b>)</b><br>
&nbsp;&nbsp;&nbsp; <b>while</b> target <b>!=</b> BADADDR<b>:</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; idc<b>.</b>MakeComm<b>(</b>target<b>,</b> comment<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; target <b>=</b> idc<b>.</b>DnextB<b>(</b>offset<b>,</b> target<b>)</b></p>
<p>​<b>def</b> substitution<b>(</b>start<b>,</b> size<b>,</b> patch<b>):</b><br>
&nbsp;&nbsp;&nbsp; dec <b>=</b> &quot;&quot;<br>
&nbsp;&nbsp;&nbsp; enclen <b>=</b> size<br>
&nbsp;&nbsp;&nbsp; plain <b>=</b> &quot;`abcdefghijklmnopqrstuvwxyz{|}~H&amp;\x7F&quot;<br>
&nbsp;&nbsp;&nbsp; key <b>=</b>&nbsp;&nbsp; &quot;wvutsrqp\x7F~}|{zyxgfedcba`onmlkji&amp;Hh&quot;<br>
&nbsp;&nbsp;&nbsp; <b>if</b> len<b>(</b>key<b>)</b> <b>!=</b> len<b>(</b>plain<b>):</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; warning<b>(</b>&quot;Lenght differs!&quot;<b>)</b><br>
&nbsp;&nbsp;&nbsp; i <b>=</b> 0<br>
&nbsp;&nbsp;&nbsp; <b>for</b> i <b>in</b> range<b>(</b>enclen<b>):</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c <b>=</b> Byte<b>(</b>start <b>+</b> i<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; idx <b>=</b> key<b>.</b>find<b>(</b>str<b>(</b>chr<b>(</b>c<b>)))</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>if</b> idx <b>!=</b> <b>-</b>1<b>:</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c <b>=</b> plain<b>[</b>idx<b>]</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>else:</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c <b>=</b> str<b>(</b>chr<b>(</b>c<b>))</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dec <b>=</b> dec <b>+</b> c<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>if</b> patch <b>==</b> <b>True:</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; patch_byte<b>(</b>start <b>+</b> i<b>,</b> c<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i <b>+=</b> 1<br>
&nbsp;&nbsp;&nbsp; <b>return</b> dec</p>
<p>​# iterate over all segments<br>
<b>for</b> s <b>in</b> idautils<b>.</b>Segments<b>():</b><br>
&nbsp;&nbsp;&nbsp; <b>if</b> &quot;.data&quot; <b>in</b> idc<b>.</b>SegName<b>(</b>s<b>):</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; start <b>=</b> idc<b>.</b>GetSegmentAttr<b>(</b>s<b>,</b> idc<b>.</b>SEGATTR_START<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end <b>=</b> idc<b>.</b>GetSegmentAttr<b>(</b>s<b>,</b> idc<b>.</b>SEGATTR_END<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; num <b>=</b> 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>while</b> start <b>&lt;</b> end <b>-</b> 4<b>:</b><br>
&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>if</b> get_int<b>(</b>start<b>)</b> <b>==</b> 0<b>:</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enclen <b>=</b> get_int<b>(</b>start<b>+</b>4<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; encstrcheck <b>=</b> get_int<b>(</b>start<b>+</b>8<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>if</b> enclen <b>&gt;</b> 1 <b>and</b> enclen <b>&lt;</b> 100 <b>and</b> encstrcheck <b>&gt;</b> 0x2020<b>:</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; encstr <b>=</b> idc<b>.</b>get_bytes<b>(</b>start<b>+</b>8<b>,</b> enclen<b>)</b><br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>if</b> isprintable<b>(</b>encstr<b>)</b> <b>==</b> <b>True:</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; num <b>+=</b> 1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; startaddr <b>=</b> start<b>+</b>8</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>print(</b>&quot;#%i&quot;<b>)</b> <b>%</b>num<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>print(</b>&quot;address = 0x{:08x}&quot;<b>.</b>format<b>(</b>start<b>))</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <b>print(</b>&quot;len = %i&quot;<b>)</b> <b>%</b>enclen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>print(</b>&quot;encstr = %s&quot;<b>)</b> <b>%</b>encstr<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; decstr <b>=</b> &quot;&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; decstr <b>=</b> substitution<b>(</b>startaddr<b>,</b> enclen<b>,</b> 0<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>print(</b>&quot;decstr =%s&quot;<b>) % </b>decstr<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>print(</b>&quot;-----------------------------------------&quot;<b>)</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; idc<b>.</b>MakeComm<b>(</b>start<b>,</b> &quot;{}&quot;<b>.</b>format<b>(</b>decstr<b>))</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; decname <b>=</b> &quot;s_&quot; <b>+<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (</b>''<b>.</b>join<b>(</b>e <b>for</b> e <b>in</b> decstr <b>if</b> e<b>.</b>isalnum<b>()))[:</b>20<b>]</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; decname <b>=</b> decname<b>.</b>strip<b>()</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res <b>=</b> MakeNameEx<b>(</b>start<b>,</b> decname<b>,</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SN_NOCHECK <b>|</b> SN_NOWARN <b>|</b> 0x800<b>)</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; start <b>+=</b> 4</p>
</td>
</tr></tbody></table>
<p><i>Figure 25: SombRAT string decoding IDA Python script (for x86 payloads)<br>
<br>
<br>
</i></p>

    
    
</div>


    
    
    <div class="image">
  

    
</div>


    
    
    <div class="authorblog"><!--Pulling author bio from author page-->

    
    
        
  



<div class="author-info" data-author-name="The BlackBerry Research and Intelligence Team" data-author-path="https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced">
  <div class="author-avatar">
    
    <img src="/content/dam/blogs-blackberry-com/images/authors/blackberry-logo-square.jpg" class="author-avatar" alt="The BlackBerry Research and Intelligence Team"/>				
    
  </div><!-- .author-avatar -->
  <div class="author-description">
      
    
    <h2>About The BlackBerry Research and Intelligence Team</h2>
    <p>The <a href="https://blogs.blackberry.com/en/author/the-blackberry-research-and-intelligence-team" target="_blank">BlackBerry Research and Intelligence team</a> is a highly experienced threat research group specializing in a wide range of cybersecurity disciplines, conducting continuous threat hunting to provide comprehensive insights into emerging threats. We analyze and address various attack vectors, leveraging our deep expertise in the cyberthreat landscape to develop proactive strategies that safeguard against adversaries.</p>
<p>Whether it's identifying new vulnerabilities or staying ahead of sophisticated attack tactics, we are dedicated to securing your digital assets with cutting-edge research and innovative solutions.</p>

  </div><!-- .author-description	-->
</div>
<hr class="author-hr"/>
    
</div>


    
    
    <div class="socialsharing">

<div class="socialSharing row">
	<ul class="socialSharing-icons">
		<li>
			<a href="https://x.com/intent/tweet?url=https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced&text=The%20CostaRicto%20Campaign:%20Cyber-Espionage%20Outsourced&via=BlackBerry" title="Share on X" target="_blank" class="x-share">
				<span class="sr-only sr-only-focusable">Share on X</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--tw" aria-hidden="true">
					<svg viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"></path></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.facebook.com/sharer/sharer.php?u=https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced" title="Share on Facebook" target="_blank" class="facebook-share">
				<span class="sr-only sr-only-focusable">Share on Facebook</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--fb" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 264 512"><path d="M76.7 512V283H0v-91h76.7v-71.7C76.7 42.4 124.3 0 193.8 0c33.3 0 61.9 2.5 70.2 3.6V85h-48.2c-37.8 0-45.1 18-45.1 44.3V192H256l-11.7 91h-73.6v229"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.linkedin.com/shareArticle?mini=true&url=https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced&title=The%20CostaRicto%20Campaign:%20Cyber-Espionage%20Outsourced&summary=&source=blogs.blackberry.com" title="Share on LinkedIn" target="_blank" class="linkedin-share">
				<span class="sr-only sr-only-focusable">Share on LinkedIn</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--li" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448.1 512"><path d="M100.3 448H7.4V148.9h92.9V448zM53.8 108.1C24.1 108.1 0 83.5 0 53.8S24.1 0 53.8 0s53.8 24.1 53.8 53.8-24.1 54.3-53.8 54.3zM448 448h-92.7V302.4c0-34.7-.7-79.2-48.3-79.2-48.3 0-55.7 37.7-55.7 76.7V448h-92.8V148.9h89.1v40.8h1.3c12.4-23.5 42.7-48.3 87.9-48.3 94 0 111.3 61.9 111.3 142.3V448h-.1z"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="mailto:?subject=The%20CostaRicto%20Campaign:%20Cyber-Espionage%20Outsourced&body=https://blogs.blackberry.com/en/2020/11/the-costaricto-campaign-cyber-espionage-outsourced" title="Email" class="email-share">
				<span class="sr-only sr-only-focusable">Email</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--email" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"/></svg>
				</span>
			</a>
		</li>
	</ul>
</div>
</div>


    
    
    <div class="backbutton">
<a href="javascript:history.back()" class="cta cta-primary btn-back-button">Back</a></div>



      </div>
      
          
      </div>
    </section>
      
  
  
</div>



</main><footer data-no-snippet>
	<div class="container pt-2">
		<nav id="footerNav">
			<div>
				<div class="row my-4">
					<div class="socialLinks col-lg-4 col-md-4 col-sm-12 pb-3">
						<a href="https://www.facebook.com/BlackBerry/" class="socialLink" target="_blank" rel="noopener" style="padding-left: 0 !important;">
							<span class="sr-only" aria-label="BlackBerry Facebook Account">Facebook</span>
							<span class="svgIcon-social" aria-hidden="true">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M448 56.7v398.5c0 13.7-11.1 24.7-24.7 24.7H309.1V306.5h58.2l8.7-67.6h-67v-43.2c0-19.6 5.4-32.9 33.5-32.9h35.8v-60.5c-6.2-.8-27.4-2.7-52.2-2.7-51.6 0-87 31.5-87 89.4v49.9h-58.4v67.6h58.4V480H24.7C11.1 480 0 468.9 0 455.3V56.7C0 43.1 11.1 32 24.7 32h398.5c13.7 0 24.8 11.1 24.8 24.7z"/></svg>
							</span>
						</a>
						<a href="https://x.com/blackberry" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry X Account">X</span>
							<span class="svgIcon-social">
								<svg width="28" height="28" viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z" fill="#000"></path></svg>
							</span>
						</a>
						<a href="https://www.youtube.com/user/BlackBerry" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry YouTube Account">YouTube</span>
							<span class="svgIcon-social">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"/></svg>
							</span>
						</a>
						<a href="https://www.instagram.com/blackberry/" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry Instagram Account">Instagram</span>
							<span class="svgIcon-social">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"/></svg>
							</span>
						</a>
					</div>
					
				</div>
				<hr/>
				<div class="row mt-5">
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse21" aria-expanded="false" aria-controls="collapse21">
								<h3>
									Corporate
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div id="collapse21" class="collapse in">
									<ul>
										<li>
											
											<a href="https://www.blackberry.com/us/en/company" rel="noopener" target="_blank">Company</a>
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/newsroom" target="_blank">Newsroom</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/investors" target="_blank">Investors</a>
											
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/company/careers" rel="noopener" target="_blank">Careers</a>
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/leadership" target="_blank">Leadership</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/corporate-responsibility-at-blackberry" target="_blank">Corporate Responsibility</a>
											
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/company/certifications" rel="noopener" target="_blank">Certifications</a>
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/success-stories" rel="noopener" target="_blank">Customer Success</a>
										</li>
									</ul>
								</div>
							
						
					</div>
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse31" aria-expanded="false" aria-controls="collapse31">
								<h3>
									Developers
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div class="collapse in" id="collapse31">
									<ul>
										<li>
											
											<a href="https://developers.blackberry.com/" rel="noopener" target="_blank">Enterprise Platform &amp; Apps</a>
										</li>
									
										<li>
											
											<a href="https://www.qnx.com/account/login.html?returnaddress=%2Fdownload%2Fgroup.html%3Fprogramid%3D29178" rel="noopener" target="_blank">BlackBerry QNX Developer Network</a>
										</li>
									</ul>
								</div>
							
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse32" aria-expanded="false" aria-controls="collapse32">
								<h3>
									Blogs
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div class="collapse in" id="collapse32">
									<ul>
										<li>
											
											<a href="https://blogs.blackberry.com/" rel="noopener">BlackBerry ThreatVector Blog</a>
										</li>
									
										<li>
											
											<a href="https://devblog.blackberry.com/" rel="noopener" target="_blank">Developers Blog</a>
										</li>
									
										<li>
											
											<a href="https://helpblog.blackberry.com/" rel="noopener" target="_blank">Help Blog</a>
										</li>
									</ul>
								</div>
							
						
					</div>
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse41" aria-expanded="false" aria-controls="collapse41">
								<h3>
									Legal
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div id="collapse41" class="collapse in">
									<ul>
										<li>
											<a href="https://www.blackberry.com/us/en/legal" target="_blank">Overview</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/accessibility" target="_blank">Accessibility</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/blackberry-virtual-patent-marking" target="_blank">Patents</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/trademarks" target="_blank">Trademarks</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/privacy-policy" target="_blank">Privacy Policy</a>
											
										</li>
									</ul>
								</div>
							
						
					</div>
				</div>
			</div>
			<div class="container">
				<div class="row tm10" style="padding-top: 50px;">
					<div class="col-xs-12 col-md-6 copyright">
						<p>© 2024 BlackBerry Limited. All rights reserved.</p>
					</div>
				</div>
			</div>
		</nav>
	</div>
</footer>

            
    
    
    
    
<script src="/etc.clientlibs/shared/clientlibs/jquery.min.96704cdeb2f89f0504fd10b631047e4f.js"></script>
<script src="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-dependencies.min.d41d8cd98f00b204e9800998ecf8427e.js"></script>





    
    
<script src="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-site.min.6713adb14b8f9f5d38df3f5d7a0618e8.js"></script>




    

    

    
    
    

            

        
    </body>
</html>
