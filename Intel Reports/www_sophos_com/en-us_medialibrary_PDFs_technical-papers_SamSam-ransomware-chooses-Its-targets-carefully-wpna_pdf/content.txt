A Sophos Whitepaper  April 2018SamSam 
Ransomware 
Chooses Its 
Targets Carefully
Unlike the spam-like approach  
of garden-variety ransomware,  
this family exploits vulnerabilities  
to attack specific organizations.
  
 By Dorka Palotay and Peter Mackenzie, SophosLabs
SamSam Ransomware Chooses Its Targets Carefully2
A Sophos Whitepaper  April 2018SamSam ransomware made a strong start in 2018, targeting carefully selected 
organizations and stirring up significant media attention. 
Unlike most of the well-known ransomware families, which attack randomly, SamSam 
is used against specific organizations, those most likely to pay to get their data back, 
like hospitals or schools. 
Instead of spam campaigns, the cybercriminals behind SamSam use vulnerabilities 
to gain access to the victims’ network or use brute-force tactics against the weak 
passwords of the Remote Desktop Protocol (RDP). 
After successfully infecting a host, SamSam seeks out additional victims  
by network mapping and stealing credentials. Once the potential targets are 
discovered, the attackers manually deploy SamSam on the selected systems  
using tools like PSEXEC and batch scripts. 
SamSam is not new. It first appearing in early 2016, but frequently draws the security 
community’s attention. Its developers make great efforts to cover their tracks. In many 
cases the initial infection vector of the attacks isn’t clear or some steps of the attack 
chain are missing. The attackers try to make analysis harder by deleting files involved in 
an attack, including the payload itself, and by changing the deployment methodology.
In January 2018, Talos Intelligence published an article that described a new technique 
used by SamSam to execute the payload. At SophosLabs we have observed a slight 
change in the attack mechanism since the Talos report. 
The following diagram introduces the different steps of the new SamSam variant.  
While in this case the initial infection vector is still unknown, numerous stages of the 
attacks have been discovered: 
Runner
.Net ExecutableBatch FileINFECTED HOST
NETWORKDecryptor
.Net Dll
Encryptrd payload
.stubbinDecrypt and runCall decryption 
functionRun
RSA public key
.keyxmlPSEXEC
ReadDecryption passwordParameter
SamSam Ransomware Chooses Its Targets Carefully3
A Sophos Whitepaper  April 2018The orange arrows indicate the steps performed by the malware automatically, while the 
grey arrows are manual steps executed by the attackers.
Batch file
Example 1
Example 2
From its first appearance, SamSam used batch files for certain operations while 
spreading across the network and executing the ransomware. This hasn’t changed.  
A batch file is responsible for executing the malware and deleting certain components. 
This batch file is executed with one argument, which is the password used to decrypt  
the actual payload. 
The attackers specify a total price and a price per host as well. They claim that for the 
total price all the encrypted machines will be restored; alternately, the victims can pay 
per host if they want to restore only a few machines by sending the specific host names 
to the attackers.

SamSam Ransomware Chooses Its Targets Carefully4
A Sophos Whitepaper  April 2018Runner
The runner component is responsible for decrypting and executing the payload.  
It is executed by the batch file with four parameters. The first one is the decryption 
password, which is followed by a string that is part of the .onion site address.  
Then the total ransom amount and the price per host values are given to the runner. 
It looks for a file with .stubbin extension. If it was found, the runner reads the content 
of the file, then deletes it. The read data will be decrypted in memory.

SamSam Ransomware Chooses Its Targets Carefully5
A Sophos Whitepaper  April 2018Decryptor
The interesting change in the runner component is that the decryption function,  
used to decrypt the payload, is no longer located inside the executable but rather  
in a separate DLL file. The DLL is referenced in the .NET executable and the decryption 
function is called from that. The AES key and IV for decryption will be derived from the 
password provided by the attackers. 

SamSam Ransomware Chooses Its Targets Carefully6
A Sophos Whitepaper  April 2018In some cases, the code of the runner component is stuffed with garbage code  
like the following:
To increase the chances of a successful attack, the attacker deploys two versions of the 
runner and the corresponding DLLs. If the first attack was unsuccessful, then they start 
a new attack using a modified version of the .exe file, which contains garbage code.

SamSam Ransomware Chooses Its Targets Carefully7
A Sophos Whitepaper  April 2018Payments 
Talos reported a Bitcoin wallet address in January which received 30.4 BTC. It seems 
that the attackers have switched to another address from mid-January. It received 
23 payments with a total income of 68.1 BTC. Most of the victims have decided  
to pay the full price, but there are some who paid per host.
Protection:
 Ì Batch file: Troj/RansRun-A
 Ì Runner: Mal/Kryptik-BV, Troj/Ransom-EVF, ML/PE-A 
 Ì Decryptor: Troj/Samas-F
 Ì Payload: Mal/Samas-C
 Ì The PsExec program is blocked as a potentially unwanted application (PUA): 
PsExec of type Hacktool.

SamSam Ransomware Chooses Its Targets Carefully
United Kingdom and Worldwide Sales
Tel: +44 (0)8447 671131
Email: sales@sophos.comNorth American Sales
Toll Free: 1-866-866-2802
Email: nasales@sophos.comAustralia and New Zealand Sales
Tel: +61 2 9409 9100
Email: sales@sophos.com.auAsia Sales
Tel: +65 62244168
Email: salesasia@sophos.com
© Copyright 2018. Sophos Ltd. All rights reserved.
Registered in England and Wales No. 2096520, The Pentagon, Abingdon Science Park, Abingdon, OX14 3YP, UK
Sophos is the registered trademark of Sophos Ltd. All other product and company names mentioned are trademarks 
or registered trademarks of their respective owners.
2018-05-01 WP-NA (TN)IOC: 
Files:
Bat: 
6b21aec23a844e6a5af1879c41b9632a0e705bb7
713973f14ae8ff88a63a1491e82e48f362e3aed7
Runner: 
3cbddf5f027b19e55366ecc0fd287f31379175a0 – z2.exe 
Contains garbage code. Calls the decryption function from sdgasfse.dll.
a1ab74d2f06a542e77ea2c6d641aae4ed163a2da – mswinupdate.exe 
Contains no garbage. Calls the decryption function from ClassLibrary1.dll
Dll: 
138c3aae51e67db0c4134affae428fe91c0d1686 - sdgasfse.dll
4d7a60bd1fb3677a553f26d95430c107c8485129- ClassLibrary1.dll
Extension:
.weapologize
TOR site:  
hxxp:/ /jcmi5n4c3mvgtyt5[.]onion
BTC Wallet: 
1HbJu2kL4xDNK1L9YUDkJnqh3yiC119YM2
