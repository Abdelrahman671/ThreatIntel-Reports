<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/assets/css/style.css">
    <link rel="shortcut icon" type="image/png" href="/favicon.png">
    
<!-- Begin Jekyll SEO tag v2.8.0 -->
<title>Anti-Analysis Techniques Used in Excel 4.0 Macros | GoggleHeadedHacker</title>
<meta name="generator" content="Jekyll v4.3.2" />
<meta property="og:title" content="Anti-Analysis Techniques Used in Excel 4.0 Macros" />
<meta name="author" content="Jacob Pimental" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="This article will review how to reverse engineer excel 4.0 macros using a malicious document. It will also describe anti-analysis techniques used by the sample." />
<meta property="og:description" content="This article will review how to reverse engineer excel 4.0 macros using a malicious document. It will also describe anti-analysis techniques used by the sample." />
<link rel="canonical" href="https://goggleheadedhacker.com/blog/post/23" />
<meta property="og:url" content="https://goggleheadedhacker.com/blog/post/23" />
<meta property="og:site_name" content="GoggleHeadedHacker" />
<meta property="og:image" content="https://goggleheadedhacker.com/assets/images/thumbnails/excel-macro-anti-analysis.jpg" />
<meta property="og:type" content="article" />
<meta property="article:published_time" content="2021-03-24T00:00:00+00:00" />
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content="https://goggleheadedhacker.com/assets/images/thumbnails/excel-macro-anti-analysis.jpg" />
<meta property="twitter:title" content="Anti-Analysis Techniques Used in Excel 4.0 Macros" />
<meta name="twitter:site" content="@Jacob_Pimental" />
<meta name="twitter:creator" content="@Jacob Pimental" />
<script type="application/ld+json">
{"@context":"https://schema.org","@type":"BlogPosting","author":{"@type":"Person","name":"Jacob Pimental"},"dateModified":"2021-03-24T00:00:00+00:00","datePublished":"2021-03-24T00:00:00+00:00","description":"This article will review how to reverse engineer excel 4.0 macros using a malicious document. It will also describe anti-analysis techniques used by the sample.","headline":"Anti-Analysis Techniques Used in Excel 4.0 Macros","image":"https://goggleheadedhacker.com/assets/images/thumbnails/excel-macro-anti-analysis.jpg","mainEntityOfPage":{"@type":"WebPage","@id":"https://goggleheadedhacker.com/blog/post/23"},"url":"https://goggleheadedhacker.com/blog/post/23"}</script>
<!-- End Jekyll SEO tag -->

</head>

  <body>
    <div id="navbar" class="navbar">
    <a href="/" class="nav-title">
        <img class="nav-img" src="/assets/images/homepage/logo_plain_svg.svg">
        <h1>GoggleHeadedHacker</h1>
    </a>
    <label for="click" id="link-list-mobile-button" class="link-list-mobile-button">
        <input id="click" class="chkbx" type="checkbox">
        <span></span>
        <span></span>
        <span></span>
    </label>
    <div id="link-list" class="link-list">
        <div id="search-container">
            <input id="search" type="text" placeholder="Search...">
            <div id="results-container">
                <ul id="results-list"></ul>
            </div>
        </div>
        <a href="/about">About</a>
        <a href="/projects">Projects</a>
        <a href="/contact">Contact</a>
        <a class="r" href="/feed.xml"><i class="fa-solid fa-rss"></i></a>
    </div>
</div>

<script src="\assets\js\simple-jekyll-search.min.js" type="text/javascript"></script>

<script>
    SimpleJekyllSearch({
        searchInput: document.getElementById('search'),
        resultsContainer: document.getElementById('results-list'),
        json: '/assets/config/posts.json',
        limit: 30
    })

    const searchBar = document.getElementById("search");
    const clickInput = document.getElementById("click");
    const linkListMobileButton = document.getElementById("link-list-mobile-button");

    clickInput.addEventListener("change", function() {
        if (this.checked) {
            linkListMobileButton.classList.add("checked");
        } else {
            linkListMobileButton.classList.remove("checked");
            searchBar.value = '';
        }
    });


    var prevScrollpos = window.pageYOffset;
    window.onscroll = function() {
        var currentScrollPos = window.pageYOffset;
        var element = document.getElementById("click");
        if ((prevScrollpos > currentScrollPos && screen.width <= 800) || element.checked) {
            document.getElementById("navbar").style.top = "0";
        } else if (prevScrollpos < currentScrollPos && screen.width <= 800) {
            document.getElementById("navbar").style.top = "-5rem";
        }
        prevScrollpos = currentScrollPos;
    }
</script>
    <div class="container">
      <div class="main_content post">
        <img style="width:35rem" src="/assets/images/thumbnails/excel-macro-anti-analysis.jpg" alt="Excel Macro Analysis">
        <h1>Anti-Analysis Techniques Used in Excel 4.0 Macros</h1>
        <h3>24 March 2021</h3>
        <p>By Jacob Pimental</p>
        <div class="share-box">

    <a class="f" href="https://www.facebook.com/sharer/sharer.php?u=https://goggleheadedhacker.com/blog/post/23" onclick="window.open(this.href, 'mywin',
    'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fa-brands fa-facebook"></i></a>

    <a class="t" href="https://twitter.com/intent/tweet?text=&url=https://goggleheadedhacker.com/blog/post/23" onclick="window.open(this.href, 'mywin',
    'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa-brands fa-twitter"></i></a>

    <a class="r" href="http://www.reddit.com/submit?url=https://goggleheadedhacker.com/blog/post/23" onclick="window.open(this.href, 'mywin',
    'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;" ><i class="fa-brands fa-reddit"></i></a>

    <a class="l" href="https://www.linkedin.com/shareArticle?mini=true&url=https://goggleheadedhacker.com/blog/post/23&title=Anti-Analysis Techniques Used in Excel 4.0 Macros" onclick="window.open(this.href, 'mywin',
    'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fa-brands fa-linkedin"></i></a>

    <a class="e" href="mailto:?subject=&amp;body=Check out this site https://goggleheadedhacker.com/blog/post/23"><i class="fa-solid fa-envelope"></i></a>                          
</div>

        <br>
        
<p>I recently reversed another Excel document with 4.0 Macros that was similar to my previous post on the subject but had some added anti-analysis features that I wanted to share. I recommend reading the <a href="https://www.goggleheadedhacker.com/blog/post/21">previous post</a> to learn more as this article will not be going step-by-step through the analysis process. If you would like to follow along you can find the sample <a href="https://app.any.run/tasks/02091acd-264d-4614-b465-5082b4c19ef4">here</a>.</p>

<h2 id="new-obfuscation-style">New Obfuscation Style</h2>

<p>Instead of storing the encrypted data as a blob of characters in cells, the sample stores them as integers in <code class="language-plaintext highlighter-rouge">Sheet1</code> of the document. It will then loop through these and subtract them from a stored key in  <code class="language-plaintext highlighter-rouge">R50C3:R59:C3</code>. If the integer value at the current index of <code class="language-plaintext highlighter-rouge">Sheet1</code> is greater than 1000, then the end of the string has been reached. This is very similar to the old sample, but the use of integer values seemed interesting to me.</p>

<p><img src="/assets/images/posts/xlsm_anti_analysis/xlsm_1.png" alt="Excel 4.0 Macro Obfuscation" />
<em>Decryption function</em></p>

<p><img src="/assets/images/posts/xlsm_anti_analysis/xlsm_2.png" alt="Excel Macro Ciphertext" />
<em>Integer arrays in <code class="language-plaintext highlighter-rouge">Sheet1</code></em></p>

<h2 id="anti-analysis-tricks">Anti-Analysis Tricks</h2>

<p>Like the previous analysis, the document performs a lot of the same VM/Analysis checks such as: checking for the presence of a cursor, if macros are set to run by default, etc. This specific sample, however, had a few more tricks.</p>

<h3 id="xlcall32">Xlcall32</h3>

<p>The sample will use the <code class="language-plaintext highlighter-rouge">=CALL</code> macro to make a call to the <code class="language-plaintext highlighter-rouge">Excel4</code> function from the <code class="language-plaintext highlighter-rouge">Xlcall32</code> library. This is a callback function that is used to continue running the macros at a defined cell. This is a good way to prevent an analyst from just debugging the macros since this would spawn in a new process and wonâ€™t show in the debugger.</p>

<p><img src="/assets/images/posts/xlsm_anti_analysis/xlsm_3.png" alt="Xlcall32 macro function" />
<em>This will continue running the macros at <code class="language-plaintext highlighter-rouge">R106C1</code> and evade debugging</em></p>

<p>In this sample, the call to <code class="language-plaintext highlighter-rouge">Excel4</code> is dynamically generated via the deobfuscation code from earlier. When running the deobfuscation code, I will put a <code class="language-plaintext highlighter-rouge">=HALT()</code> instruction at the end to prevent further execution. Once the anti-analysis technique is bypassed, I will continue running the macros at the location passed as a parameter to <code class="language-plaintext highlighter-rouge">Excel4</code>. This gives the same results as calling the <code class="language-plaintext highlighter-rouge">Excel4</code> function except now I can see what the code is doing.</p>

<p><img src="/assets/images/posts/xlsm_anti_analysis/xlsm_4.png" alt="How to bypass macro anti-analysis technique" />
<em>Visualization of how I bypass the anti-analysis technique</em></p>

<h3 id="alternate-data-streams-ads">Alternate Data Streams (ADS)</h3>

<p>Alternate Data Streams (ADS) are a feature of the NT File System (NTFS) that allows a user to store additional content in a file apart from its original content. ADS is used legitimately for file integrity and storing metadata; however, attackers can use it to hide malicious code. In older versions of SQL Server, for example, the DBCC CHECKDB process would create alternate data streams to store information.</p>

<p>When a file is downloaded from the internet, it will contain an ADS called <code class="language-plaintext highlighter-rouge">Zone.Identifier</code> which has data about where the file originated. In this case, the sample I downloaded was from Zoho Docs, therefore, it contained that URL in the stream. This particular sample checks to see if the ADS is present by actually trying to delete the ADS itself. If this sample were run in a sandbox, there would be no ADS, thus triggering this anti-analysis technique and halting the execution of the macros.</p>

<p><img src="/assets/images/posts/xlsm_anti_analysis/xlsm_5.png" alt="Zone.Identifier Alternate Data Stream" />
<em>The alternate data stream of the sample</em></p>

<p><img src="/assets/images/posts/xlsm_anti_analysis/xlsm_6.png" alt="Excel Macro Deleting Alternate Data Stream" />
<em>Checking for <code class="language-plaintext highlighter-rouge">Zone.Identifier</code> alternate data stream by trying to delete it</em></p>

<h2 id="c2s">C2s</h2>

<p>As with the previous analysis, once all the checks are complete, the sample will reach out to C2s to try to grab the second stage payload and execute it. In this case, it appears to be a DLL that will be executed through <code class="language-plaintext highlighter-rouge">rundll32.exe</code> calling <code class="language-plaintext highlighter-rouge">DllRegisterServer</code>. Both of the C2s were down when I found the sample, so I could not get the second stage to continue the analysis.</p>

<p><img src="/assets/images/posts/xlsm_anti_analysis/xlsm_7.png" alt="Second Stage Payload" />
<em>Downloading the second stage from C2</em></p>

<div class="table">

  <table>
    <thead>
      <tr>
        <th><em>C2</em></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>https://fernandogaleano[.]com/server.php</td>
      </tr>
      <tr>
        <td>https://catedraloor[.]com/server.php</td>
      </tr>
    </tbody>
  </table>

</div>

<h2 id="conclusion">Conclusion</h2>

<p>Hopefully, this provided insight into a few anti-analysis techniques seen in the wild and can be a good reference to other analysts in the future. The call to <code class="language-plaintext highlighter-rouge">Xlcall32</code> was new to me, and I had not seen the alternate data stream check used before. If you have any questions or comments on this analysis feel free to reach out to me on my <a href="https://twitter.com/jacob_pimental">Twitter</a> or <a href="https://www.linkedin.com/in/jacobpimental/">LinkedIn</a>.</p>

<p>Thanks for reading and happy reversing!</p>


        <h4>Malware Analysis, Excel 4.0 Macros, Maldoc, XLS Document</h4>
        <h2>More Content Like This:</h2>
<div class="card-container">
    
    
    

    
        
        

        
            
            <div class="card">
                <a href="/post/onenote-analysis"><img class="card-image" src="/assets/images/thumbnails/onenote_analysis_thumb.jpg"/></a>
                <div class="card-body">
                    <a href="/post/onenote-analysis"><h4>OneNote Analysis</h4></a>
                </div>
            </div>
            
            
        
    
        
        

        
    
        
        

        
            
            <div class="card">
                <a href="/post/blackguard-analysis"><img class="card-image" src="/assets/images/thumbnails/blackguard-deobfuscation_thumb.jpg"/></a>
                <div class="card-body">
                    <a href="/post/blackguard-analysis"><h4>BlackGuard Analysis - Deobfuscation Using Dnlib</h4></a>
                </div>
            </div>
            
            
        
    
        
        

        
            
            <div class="card">
                <a href="/blog/post/log4jshell-analysis"><img class="card-image" src="/assets/images/thumbnails/analysis_of_log4jshell_attack_thumb.jpg"/></a>
                <div class="card-body">
                    <a href="/blog/post/log4jshell-analysis"><h4>Analysis of Log4jShell Attack</h4></a>
                </div>
            </div>
            
            
        
    
        
        

        
    
        
        

        
    
        
        

        
            
            <div class="card">
                <a href="/blog/post/sodinokibi-ransomware-analysis"><img class="card-image" src="/assets/images/thumbnails/sodinokibi_ransomware_analysis_thumb.jpg"/></a>
                <div class="card-body">
                    <a href="/blog/post/sodinokibi-ransomware-analysis"><h4>Sodinokibi Ransomware Analysis</h4></a>
                </div>
            </div>
            
            
        
    
        
        

        
    
        
        

        
            
            <div class="card">
                <a href="/blog/post/22"><img class="card-image" src="/assets/images/thumbnails/gobfuscator-deobfuscation_thumb.jpg"/></a>
                <div class="card-body">
                    <a href="/blog/post/22"><h4>Automatic Gobfuscator Deobfuscation with EKANS Ransomware</h4></a>
                </div>
            </div>
            
            
        
    
        
        

        
            
            <div class="card">
                <a href="/blog/post/21"><img class="card-image" src="/assets/images/thumbnails/excel-macro-analysis_thumb.jpg"/></a>
                <div class="card-body">
                    <a href="/blog/post/21"><h4>Malicious Excel 4.0 Macro Analysis</h4></a>
                </div>
            </div>
            
            
                
</div>
      </div>
    </div>
    <script src="/assets/js/donationButton.js"></script>
    <script>
      addDonationButton("Buy Me a Tea");
    </script>
    <script src="/assets/js/vanilla-back-to-top.min.js"></script>
    <script>addBackToTop({
                diameter: 40,
                backgroundColor: '#b5e853',
                textColor: '#151515'
            })</script>

		
    
      <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-153169514-1', 'auto');
  ga('send', 'pageview');
</script>

<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-WT9456CQQZ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-WT9456CQQZ');
</script>
    
  </body>
</html>
