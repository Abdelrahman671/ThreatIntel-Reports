<!DOCTYPE html>
<html lang="en">
<head>

    <title>An Analysis of Godlua Backdoor</title>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" type="text/css" href="/assets/built/screen.css?v=42b57cac00" />

    <link rel="icon" href="https://blog.netlab.360.com/content/images/size/w256h256/2019/02/netlab_xs-2.png" type="image/png">
    <link rel="canonical" href="https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    <link rel="amphtml" href="https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/amp/">
    
    <meta property="og:site_name" content="360 Netlab Blog - Network Security Research Lab at 360">
    <meta property="og:type" content="article">
    <meta property="og:title" content="An Analysis of Godlua Backdoor">
    <meta property="og:description" content="Background


On April 24, 2019, our Unknown Threat Detection System highlighted a suspicious ELF file which was marked by a few vendors as mining related trojan on VT. We cannot confirm it has mining related module, but we do see it starts to perform DDoS function recently.


The file itself">
    <meta property="og:url" content="https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/">
    <meta property="og:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta property="article:published_time" content="2019-07-01T10:15:25.000Z">
    <meta property="article:modified_time" content="2022-02-09T07:11:55.000Z">
    <meta property="article:tag" content="Botnet">
    <meta property="article:tag" content="en">
    <meta property="article:tag" content="Godlua">
    <meta property="article:tag" content="Backdoor">
    <meta property="article:tag" content="honeypot">
    <meta property="article:tag" content="Import 2022-11-30 11:16">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="An Analysis of Godlua Backdoor">
    <meta name="twitter:description" content="Background


On April 24, 2019, our Unknown Threat Detection System highlighted a suspicious ELF file which was marked by a few vendors as mining related trojan on VT. We cannot confirm it has mining related module, but we do see it starts to perform DDoS function recently.


The file itself">
    <meta name="twitter:url" content="https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/">
    <meta name="twitter:image" content="https://blog.netlab.360.com/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Alex.Turing">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="Botnet, en, Godlua, Backdoor, honeypot, Import 2022-11-30 11:16">
    <meta name="twitter:site" content="@360Netlab">
    <meta name="twitter:creator" content="@TuringAlex">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="800">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "360 Netlab Blog - Network Security Research Lab at 360",
        "url": "https://blog.netlab.360.com/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png"
        }
    },
    "author": {
        "@type": "Person",
        "name": "Alex.Turing",
        "image": {
            "@type": "ImageObject",
            "url": "https://blog.netlab.360.com/content/images/2019/06/turing.PNG",
            "width": 1200,
            "height": 1200
        },
        "url": "https://blog.netlab.360.com/author/alex/",
        "sameAs": [
            "https://twitter.com/TuringAlex"
        ]
    },
    "headline": "An Analysis of Godlua Backdoor",
    "url": "https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/",
    "datePublished": "2019-07-01T10:15:25.000Z",
    "dateModified": "2022-02-09T07:11:55.000Z",
    "keywords": "Botnet, en, Godlua, Backdoor, honeypot, Import 2022-11-30 11:16",
    "description": "Background\n\n\nOn April 24, 2019, our Unknown Threat Detection System highlighted a suspicious ELF file which was marked by a few vendors as mining related trojan on VT. We cannot confirm it has mining related module, but we do see it starts to perform DDoS function recently.\n\n\nThe file itself is a Lua-based Backdoor, we named it Godlua Backdoor as the Lua byte-code file loaded by this sample has a magic number of “God”.\n\n\nGodlua Backdoor has a redundant communication mechanism for C2 connection, ",
    "mainEntityOfPage": "https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/"
}
    </script>

    <meta name="generator" content="Ghost 5.76">
    <link rel="alternate" type="application/rss+xml" title="360 Netlab Blog - Network Security Research Lab at 360" href="https://blog.netlab.360.com/rss/">
    
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/sodo-search.min.js" data-key="db8c743e6bb1457403d255d83f" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.1/umd/main.css" data-sodo-search="https://blog.netlab.360.com/" crossorigin="anonymous"></script>
    
    <link href="https://blog.netlab.360.com/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=42b57cac00"></script>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=42b57cac00">
    <style type='text/css'>
	#ghost-portal-root {
        display: none;
    }
</style><style>:root {--ghost-accent-color: #eca265;}</style>

</head>
<body class="post-template tag-botnet tag-en tag-godlua tag-backdoor tag-honeypot tag-import-2022-11-30-11-16 has-cover">
<div class="viewport">

    <header id="gh-head" class="gh-head outer">
        <nav class="gh-head-inner inner">

            <div class="gh-head-brand">
                <a class="gh-head-logo" href="https://blog.netlab.360.com">
                        <img src="https://blog.netlab.360.com/content/images/2019/02/netlab-brand-5.png" alt="360 Netlab Blog - Network Security Research Lab at 360" />
                </a>
                <div class="gh-head-brand-wrapper">
                    <button class="gh-search" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" width="20" height="20"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></button>
                    <a class="gh-burger" role="button">
                        <div class="gh-burger-box">
                            <div class="gh-burger-inner"></div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="gh-head-menu">
                <ul class="nav">
    <li class="nav-botnet"><a href="https://blog.netlab.360.com/tag/botnet/">Botnet</a></li>
    <li class="nav-dnsmon"><a href="https://blog.netlab.360.com/tag/dnsmon/">DNSMon</a></li>
    <li class="nav-ddos"><a href="https://blog.netlab.360.com/tag/ddos/">DDoS</a></li>
    <li class="nav-passivedns"><a href="https://blog.netlab.360.com/tag/pdns/">PassiveDNS</a></li>
    <li class="nav-mirai"><a href="https://blog.netlab.360.com/tag/mirai/">Mirai</a></li>
    <li class="nav-dta"><a href="https://blog.netlab.360.com/tag/dta/">DTA</a></li>
</ul>

            </div>
            <div class="gh-head-actions">
                <div class="gh-social">
                        <a class="gh-social-link gh-social-twitter" href="https://twitter.com/360Netlab" title="Twitter" target="_blank" rel="me noopener"><svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg></a>
                        <a class="gh-social-link gh-social-feedly" href="https://feedly.com/i/subscription/feed/https://blog.netlab.360.com/rss/" title="RSS" target="_blank" rel="me noopener"><svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><circle cx="6.18" cy="17.82" r="2.18"/><path d="M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z"/></svg>
</a>
                </div>
            </div>
        </nav>
    </header>

    <div class="site-content">
             <div class="floating-header">
    <div class="floating-header-logo">
        <a href="https://blog.netlab.360.com">
                <img src="/content/images/size/w30/2019/02/netlab_xs-2.png" alt="360 Netlab Blog - Network Security Research Lab at 360 icon" />
            <span>360 Netlab Blog - Network Security Research Lab at 360</span>
        </a>
    </div>
    <span class="floating-header-divider">&mdash;</span>
    <div class="floating-header-title">An Analysis of Godlua Backdoor</div>
    <div class="floating-header-share">
        <div class="floating-header-share-label">Share this <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path d="M7.5 15.5V4a1.5 1.5 0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1H18a1.5 1.5 0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2 0 0 1 1.76-1.605L7.5 15.5zm6-6v2m-3-3.5v3.5m6-1v2"/>
</svg>
</div>
        <a class="floating-header-share-tw" href="https://twitter.com/share?text=An%20Analysis%20of%20Godlua%20Backdoor&amp;url=https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/"
            onclick="window.open(this.href, 'share-twitter', 'width=550,height=235');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/></svg>        </a>
        <a class="floating-header-share-fb" href="https://www.facebook.com/sharer/sharer.php?u=https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/"
            onclick="window.open(this.href, 'share-facebook','width=580,height=296');return false;">
            <svg class="icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><path d="M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z"/></svg>        </a>
    </div>
    <progress id="reading-progress" class="progress" value="0">
        <div class="progress-container">
            <span class="progress-bar"></span>
        </div>
    </progress>
</div>


  <main id="site-main" class="site-main">
    <article class="article post tag-botnet tag-en tag-godlua tag-backdoor tag-honeypot tag-import-2022-11-30-11-16 no-image ">

      <header class="article-header gh-canvas">

        <div class="article-tag post-card-tags">
          <span class="post-card-primary-tag">
            <a href="/tag/botnet/">Botnet</a>
          </span>
        </div>

        <h1 class="article-title">An Analysis of Godlua Backdoor</h1>


        <div class="article-byline">
          <section class="article-byline-content">

            <ul class="author-list">
              <li class="author-list-item">
                <a href="/author/alex/" class="author-avatar">
                  <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
                </a>
              </li>
              <li class="author-list-item">
                <a href="/author/yegenshen/" class="author-avatar">
                  <img class="author-profile-image" src="/content/images/2017/10/1662072805.jpg" alt="Genshen Ye" />
                </a>
              </li>
            </ul>

            <div class="article-byline-meta">
              <h4 class="author-name"><a href="/author/alex/">Alex.Turing</a>, <a href="/author/yegenshen/">Genshen Ye</a></h4>
              <div class="byline-meta-content">
                <time class="byline-meta-date" datetime=" 2019-07-01">Jul 1, 2019</time>
                <span class="byline-reading-time"><span class="bull">&bull;</span> 9 min read</span>
              </div>
            </div>

          </section>
        </div>


      </header>

      <section class="gh-content gh-canvas">
        <!--kg-card-begin: markdown--><h3 id="background">Background</h3>
<p>On April 24, 2019, our Unknown Threat Detection System highlighted a suspicious ELF file which was marked by a few vendors as mining related trojan on VT. We cannot confirm it has mining related module, but we do see it starts to perform DDoS function recently.</p>
<p>The file itself is a Lua-based Backdoor, we named it Godlua Backdoor as the Lua byte-code file loaded by this sample has a magic number of “God”.</p>
<p>Godlua Backdoor has a redundant communication mechanism for  C2 connection, a combination of hardcoded dns name, Pastebin.com, GitHub.com as well as DNS TXT are used to store the C2 address, which is not something we see often. At the same time, it uses HTTPS to download Lua byte-code files, and uses DNS over HTTPS to get the C2 name to ensure secure communication between the bots, the Web Server and the C2.</p>
<p>We noticed that there are already 2 versions of Godlua Backdoor and there are ongoing updates. We also observed that attackers has been using Lua command to run Lua code dynamically and initiate HTTP Flood attacks targeting some websites.</p>
<h3 id="overview">Overview</h3>
<p>At present, we see that there are two versions of Godlua. Version 201811051556 is obtained by traversing Godlua download servers and there has been no update on it. Version 20190415103713 ~ 2019062117473 is active and is actively being updated. They are all written in C, but the active one supports more computer platforms and more features. The following is a comparison.<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/brief.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/brief.PNG" class="kg-image"></a></p>
<h3 id="godluabackdoorreverseanalysis">Godlua Backdoor Reverse Analysis</h3>
<h3 id="version201811051556">version 201811051556</h3>
<p>This is the version we found earlier (201811051556). It focuses on the Linux platform and supports two kinds of C2 instructions, to execute Linux system commands and to run custom files.</p>
<h4 id="sampleinformation">Sample information</h4>
<ul>
<li>MD5: 870319967dba4bd02c7a7f8be8ece94f</li>
</ul>
<blockquote>
<p>ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), for GNU/Linux 2.6.32, dynamically linked (uses shared libs), for GNU/Linux 2.6.32, stripped</p>
</blockquote>
<h4 id="c2redundantmechanism">C2 redundant mechanism</h4>
<p>This version perform C2 communications in two ways,  hardcoded domain name and Github link.<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/v1.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/v1.PNG" class="kg-image"></a></p>
<p>Its hardcoded C2 domain is: d.heheda.tk<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/1-1.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/1-1.PNG" class="kg-image"></a></p>
<p>It also has a Github page and the real C2 address is in the project description.<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/2-4.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/2-4.PNG" class="kg-image"></a></p>
<h4 id="c2instruction">C2 instruction</h4>
<p>cmd_call, execute Linux system commands<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/3-3.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/3-3.PNG" class="kg-image"></a></p>
<p>cmd_shell, execute custom file<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/4-3.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/4-3.PNG" class="kg-image"></a></p>
<h4 id="c2protocolanalysis">C2 protocol analysis</h4>
<h6 id="packetformat">Packet format</h6>
<table>
<thead>
<tr>
<th>Length</th>
<th>Type</th>
<th>Data</th>
</tr>
</thead>
<tbody>
<tr>
<td>Little endian,2 bytes</td>
<td>1 bytes</td>
<td>(Length -3) bytes</td>
</tr>
</tbody>
</table>
<h6 id="encryptionalgorithm">Encryption Algorithm</h6>
<p>XOR’s Key is randomly generated of 16 bytes of data, the algorithm is as follow:<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/5-2.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/5-2.PNG" class="kg-image"></a></p>
<h4 id="packetoverview">Packet Overview</h4>
<h6 id="cmd_handshake">cmd_handshake</h6>
<pre><code class="language-bash">packet[0:31]:
24 00 02 ec 86 a3 23 fb d0 d1 e9 e8 5f 23 6f 6d
70 b5 95 24 44 e0 fc 2e 00 00 00 6c 69 6e 75 78
2d 78 38 36

Length:	packet[0:1]               ---&gt;0x0024
Type:	packet[2]                 ---&gt;0x02,handshake
Data:	packet[3:31]
            Data
            Data[0:15]                  ----&gt;xor key
            Data[16:23]                 ----&gt;version,hardcoded,little endian.
            Data[24:31]                 ----&gt;arch,hardcoded.

</code></pre>
<h6 id="cmd_heartbeat">cmd_heartbeat</h6>
<pre><code class="language-bash">packet[0:10]:
0b 00 03 87 19 45 cb 91 d1 d1 a9

Length:		  packet[0:1]                 ---&gt;0x000b
Type:		  packet[2]                   ---&gt;0x03,heartbeat
Data:		  packet[3:10]                ---&gt;xored clock64()
</code></pre>
<h3 id="version2019041510371320190621174731">version 20190415103713 ~ 20190621174731</h3>
<p>This active version runs on both Windows and Linux.<br>
The control module is implemented in Lua and five C2 commands are supported</p>
<h4 id="sampleinformation">Sample information</h4>
<h6 id="version20190415103713">version 20190415103713</h6>
<ul>
<li>MD5: c9b712f6c347edde22836fb43b927633</li>
</ul>
<blockquote>
<p>ELF 64-bit LSB executable, AMD x86-64, version 1 (SYSV), statically linked, stripped</p>
</blockquote>
<h6 id="version20190621174731">version 20190621174731</h6>
<ul>
<li>MD5: 75902cf93397d2e2d1797cd115f8347a</li>
</ul>
<blockquote>
<p>ELF 64-bit LSB executable, AMD x86-64, version 1 (SYSV), statically linked, stripped</p>
</blockquote>
<h4 id="c2redundantmechanism">C2 redundant mechanism</h4>
<p><a href="https://blog.netlab.360.com/content/images/2019/06/godlua.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/godlua.PNG" class="kg-image"></a></p>
<h4 id="stage1url">Stage-1 URL</h4>
<p>The backdoor uses 3 different ways to store the Stage-1 URL. hardcoded ciphertext, Github project description, and Pastebin text.<br>
After the Stage-1 URL is retrieved and decrypted, a start.png file will be downloaded, which is actually a Lua bytecode.<br>
The Bot then loads it into memory and executes it to get the Stage-2 URL.</p>
<h6 id="encryptionalgorithm">Encryption Algorithm</h6>
<ul>
<li>AES，CBC Mode</li>
<li>key：13 21 02 00 31 21 94 E2 F2 F1 35 61 93 4C 4D 6A</li>
<li>iv：2B 7E 15 16 28 AE D2 01 AB F7 15 02 00 CF 4F 3C</li>
</ul>
<h6 id="hardcodedciphertext">Hard coded ciphertext</h6>
<p><strong>version 20190415103713</strong></p>
<ul>
<li>AES ciphertext：03 13 84 29 CC 8B A5 CA AB 05 9E 2F CB AF 5E E6 02 5A 5F 17 74 34 64 EA 5B F1 38 5B 8D B9 A5 3E</li>
<li>Stage-1 URL plaintext：<code>https://d.heheda.tk/%s.png</code></li>
</ul>
<p><strong>version 20190621174731</strong></p>
<ul>
<li>AES ciphertext：F1 40 DB B4 E1 29 D9 DC 8D 78 45 B9 37 2F 83 47 F1 32 3A 11 01 41 07 CD DB A3 7B 1F 44 A7 DE 6C 2C 81 0E 10 E9 D8 E1 03 38 68 FC 51 81 62 11 DD</li>
<li>Stage-1 URL plaintext：<code>https://img0.cloudappconfig.com/%s.png</code></li>
</ul>
<h6 id="githubprojectdescription">Github project description</h6>
<ul>
<li>AES ciphertext：EC 76 44 29 59 3D F7 EE B3 01 90 A9 9C 47 C8 96 53 DE 86 CB DF 36 68 41 60 5C FA F5 64 60 5A E4 AE 95 C3 F5 A6 04 47 CB 26 47 A2 23 80 C6 5F 92</li>
<li>Github URL plaintext：<code>https://api.github.com/repos/helegedada/heihei</code></li>
<li>Decryption Process:<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/8-2.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/8-2.PNG" class="kg-image"></a></li>
<li>Project description ciphertext: oTre1RVbmjqRn2kRrv4SF/l2WfMRn2gEHpqJz77btaDPlO0R9CdQtMM82uAes+Fb</li>
<li>Stage-1 URL plaintext：<code>https://img1.cloudappconfig.com/%s.png</code></li>
</ul>
<h6 id="pastebintext">Pastebin text</h6>
<ul>
<li>AES ciphertext：19 31 21 32 BF E8 29 A8 92 F7 7C 0B DF DC 06 8E 8E 49 F0 50 9A 45 6C 53 77 69 2F 68 48<br>
DC 7F 28 16 EB 86 B3 50 20 D3 01 9D 23 6C A1 33 62 EC 15</li>
<li>Pastebin URL plaintext：<code>https://pastebin.com/raw/vSDzq3Md</code></li>
<li>Decryption Process:<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/9.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/9.PNG" class="kg-image"></a></li>
<li>Pastebin Ciphertext: G/tbLY0TsMUnC+iO9aYm9yS2eayKlKLQyFPOaNxSCnZpBw4RLGnJOPcZXHaf/aoj</li>
<li>Stage-1 URL plaintext：<code>https://img2.cloudappconfig.com/%s.png</code></li>
</ul>
<h4 id="stage2url">Stage-2 URL</h4>
<p>Here at stage-2, two mechanisms are being used for storing the Stage-2 URL, Github project file and DNS over HTTPS.<br>
After the Stage-2 URL is retrieved and decrypted, a run.png file, also a Lua bytecode, will be downloaded.<br>
Bot will load this file into memory and run it to get Stage-3 C2.</p>
<h6 id="encryptionalgorithm">Encryption Algorithm</h6>
<ul>
<li>AES，CBC Mode</li>
<li>key：22 85 16 13 57 2d 17 90 2f 00 49 18 5f 17 2b 0a</li>
<li>iv：0d 43 36 41 86 41 21 d2 41 4e 62 00 41 19 4a 5c</li>
</ul>
<h6 id="githubprojectfile">Github project file</h6>
<ul>
<li>Github URL is stored in the Lua byte-code file (start.png) in plaintext. We get the following information by disassembling it：<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/a-2.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/a-2.PNG" class="kg-image"></a></li>
<li>Github project file ciphertext: kI7xf+Q/fXC0UT6hCUNimtcH45gPgG9i+YbNnuDyHyh2HJqzBFQStPvHGCZH8Yoz9w02njr41wdl5VNlPCq18qTZUVco5WrA1EIg3zVOcY8=</li>
<li>Stage-2 URL plaintext：<code>{&quot;u&quot;:&quot;https:\/\/dd.heheda.tk\/%s.png&quot;,&quot;c&quot;:&quot;dd.heheda.tk::198.204.231.250:&quot;}</code></li>
</ul>
<h6 id="dnstxt">DNS TXT</h6>
<ul>
<li>DNS TXT is stored in the Lua byte-code file (start.png) in plaintext. We get the following information by disassembling it：<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/b-2.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/b-2.PNG" class="kg-image"></a></li>
<li>DNS over HTTPS Request：<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/dnstxt.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/dnstxt.PNG" class="kg-image"></a></li>
<li>DNS TXT ciphertext: 6TmRMwDw5R/sNSEhjCByEw0Vb44nZhEUyUpUR4LcijfIukjdAv+vqqMuYOFAoOpC7Ktyyr6nUOqO9XnDpudVmbGoTeJD6hYrw72YmiOS9dX5M/sPNmsw/eY/XDYYzx5/</li>
<li>Stage-2 URL plaintext：<code>{&quot;u&quot;:&quot;http:\/\/img1.cloudappconfig.com\/%s.png&quot;,&quot;c&quot;:&quot;img1.cloudappconfig.com::43.224.225.220:&quot;}</code></li>
</ul>
<h4 id="stage3c2">Stage-3 C2</h4>
<p>Stage-3 C2 is hardcoded in the Lua byte-code file (run.png). We disassembled it to get the following information.</p>
<p><strong>version 20190415103713</strong><br>
<a href="https://blog.netlab.360.com/content/images/2019/06/c-2.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/c-2.PNG" class="kg-image"></a></p>
<p><strong>version 20190621174731</strong><br>
<a href="https://blog.netlab.360.com/content/images/2019/06/d-2.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/d-2.PNG" class="kg-image"></a></p>
<h6 id="dnsoverhttpsrequest">DNS Over HTTPS Request</h6>
<p><a href="https://blog.netlab.360.com/content/images/2019/06/e.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/e.PNG" class="kg-image"></a></p>
<h6 id="c2instruction">C2 instruction</h6>
<pre><code>| CMD       | Type |
| --------- | ---- |
| HANDSHAKE | 1    |
| HEARTBEAT | 2    |
| LUA       | 3    |
| SHELL     | 4    |
| UPGRADE   | 5    |
| QUIT      | 6    |
| SHELL2    | 7    |
| PROXY     | 8    |
</code></pre>
<h6 id="c2protocolanalysis">C2 protocol analysis</h6>
<p>Packet format</p>
<table>
<thead>
<tr>
<th>Type</th>
<th>Length</th>
<th>Data</th>
</tr>
</thead>
<tbody>
<tr>
<td>1byte</td>
<td>Big endian,2 bytes</td>
<td>Length bytes</td>
</tr>
</tbody>
</table>
<h6 id="packetoverview">Packet overview</h6>
<ul>
<li>HANDSHAKE<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/f.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/f.PNG" class="kg-image"></a></li>
</ul>
<pre><code>Type:	packet[0]		---&gt;0x01,HANDSHAKE
LENGTH:	packet[1:2]		---&gt;0x0010
Data:	packet[3:end]
            data[0:7]			---&gt;Session
            data[8:end]			---&gt;version,0x00125cfecd8bcb-&gt;20190621174731
</code></pre>
<ul>
<li>
<p>HEARTBEAT<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/g.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/g.PNG" class="kg-image"></a></p>
<pre><code>Send:
	Type: 			packet[0]        ---&gt;0x02,HEARTBEAT
	Length:			packet[1:2]      ---&gt;0x4
	Data:			packet[3:end]    ---&gt;time,0x5d13779b,1561556891
Replay:
	Type:			packet[0]        ---&gt;0x02,HEARTBEAT
	Length:			packet[1:2]      ---&gt;0x4
	Data:			packet[3:end]    ---&gt;1561556891
</code></pre>
</li>
<li>
<p>LUA Payload<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/h.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/h.PNG" class="kg-image"></a></p>
<pre><code>Type:     packet[0]            ---&gt;0x03,LUA
Length:   packet[1:2]          ---&gt;0x00ab
Data:     packet[3:end]        ---&gt;Lua script
</code></pre>
</li>
</ul>
<p>We observe the attacker performing a HTTP Flood attack against www.liuxiaobei.com.<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/j.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/j.PNG" class="kg-image"></a></p>
<h4 id="luascriptanalysis">Lua script analysis</h4>
<p>The Bot sample downloads many Lua scripts when executing, and the scripts can be broken down to three categories: execute, auxiliary, and attack.</p>
<ul>
<li>execute: start.png,run.png,quit.png,watch.png,upgrade.png,proxy.png</li>
<li>auxiliary: packet.png,curl.png,util.png,utils.png</li>
<li>attack: VM.png,CC.png</li>
</ul>
<h6 id="encryptionalgorithm">Encryption Algorithm</h6>
<ul>
<li>AES，CBC Mode</li>
<li>key：13 21 02 00 31 21 94 E2 F2 F1 35 61 93 4C 4D 6A</li>
<li>iv：2B 7E 15 16 28 AE D2 01 AB F7 15 02 00 CF 4F 3C</li>
</ul>
<h6 id="luamagicnumber">Lua magic number</h6>
<p>The decrypted files are all pre-compiled, take upgrade.png as an example, note the highlighted part is the file header.<br>
<a href="https://blog.netlab.360.com/content/images/2019/06/k.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/k.PNG" class="kg-image"></a>You can see that the magic number has changed from “Lua” to “God”.</p>
<p>The malware author also seems to set a trap for researcher here by manually changing the LuaVerion number in the sample to 5.1.4 ($LuaVersion: God 5.1.4 C$$LuaAuthors: R. $). We think the real version should be definitely newer than 5.2.</p>
<h6 id="decompile">Decompile</h6>
<p>In order to decompile the above script, we have to know what changes have been made to Lua. After some analysis, we concluded that the modification can be divided into two major sections: Lua Header and Lua Opcode.</p>
<p>Decompiled by Luadec[<a href="https://github.com/viruscamp/luadec?ref=blog.netlab.360.com">1]</a><br>
<a href="https://blog.netlab.360.com/content/images/2019/06/l.PNG"><img src="https://blog.netlab.360.com/content/images/2019/06/l.PNG" class="kg-image"></a></p>
<h2 id="suggestions">Suggestions</h2>
<p>We have yet to see the whole picture of how exactly the Godlua backdoor infects the targets, at this point we know at least some linux users were infected via the Confluence exploit(CVE-2019-3396), if our readers have more information, feel free to contact us.</p>
<p>We suggest that at least to monitor and block the relevant IP, URL and domain name of Godlua Backdoor on your network.</p>
<h4 id="contactus">Contact us</h4>
<p>Readers are always welcomed to reach us on <a href="https://twitter.com/360Netlab?ref=blog.netlab.360.com"><strong>twitter</strong></a>, WeChat 360Netlab or email to netlab at 360 dot cn.</p>
<h4 id="ioclist">IoC list</h4>
<p>Sample MD5</p>
<pre><code>870319967dba4bd02c7a7f8be8ece94f
c9b712f6c347edde22836fb43b927633
75902cf93397d2e2d1797cd115f8347a
</code></pre>
<p>URL</p>
<pre><code>https://helegedada.github.io/test/test
https://api.github.com/repos/helegedada/heihei
http://198.204.231.250/linux-x64
http://198.204.231.250/linux-x86
https://dd.heheda.tk/i.jpg
https://dd.heheda.tk/i.sh
https://dd.heheda.tk/x86_64-static-linux-uclibc.jpg
https://dd.heheda.tk/i686-static-linux-uclibc.jpg
https://dd.cloudappconfig.com/i.jpg
https://dd.cloudappconfig.com/i.sh
https://dd.cloudappconfig.com/x86_64-static-linux-uclibc.jpg
https://dd.cloudappconfig.com/arm-static-linux-uclibcgnueabi.jpg
https://dd.cloudappconfig.com/i686-static-linux-uclibc.jpg
http://d.cloudappconfig.com/i686-w64-mingw32/Satan.exe
http://d.cloudappconfig.com/x86_64-static-linux-uclibc/Satan
http://d.cloudappconfig.com/i686-static-linux-uclibc/Satan
http://d.cloudappconfig.com/arm-static-linux-uclibcgnueabi/Satan
https://d.cloudappconfig.com/mipsel-static-linux-uclibc/Satan
</code></pre>
<p>C2 Domain</p>
<pre><code>d.heheda.tk
dd.heheda.tk
c.heheda.tk
d.cloudappconfig.com
dd.cloudappconfig.com
c.cloudappconfig.com
f.cloudappconfig.com
t.cloudappconfig.com
v.cloudappconfig.com
img0.cloudappconfig.com
img1.cloudappconfig.com
img2.cloudappconfig.com
</code></pre>
<p>IP</p>
<pre><code>198.204.231.250     	United States       	ASN 33387           	DataShack, LC       
104.238.151.101     	Japan               	ASN 20473           	Choopa, LLC         
43.224.225.220      	Hong Kong           	ASN 22769           	DDOSING NETWORK     
</code></pre>
<!--kg-card-end: markdown-->
      </section>



      <div id="disqus_thread" class="disqus-comments gh-canvas"></div>
      <script>
        var disqus_config = function () {
          this.page.url = "https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/";
          this.page.identifier = "ghost-5d1987ea0bbc140007c57cf0"
        };
        (function () {
          var d = document, s = d.createElement('script');
          s.src = 'https://blog-netlab-360.disqus.com/embed.js';
          s.setAttribute('data-timestamp', +new Date());
          (d.head || d.body).appendChild(s);
        })();
      </script>
    </article>

  </main>


    <aside class="read-more-wrap outer">
      <div class="inner">
        <div class="read-more-feed">
            <article class="read-more-card" 
                  style="background-image: url(/content/images/2019/02/astronomy-constellation-dark-998641-4.jpg)" 
              >
              <header class="read-more-card-header">
                <small class="read-more-card-header-sitetitle">&mdash; 360 Netlab Blog - Network Security Research Lab at 360 &mdash;</small>
                <h3 class="read-more-card-header-title"><a href="/tag/botnet/">Botnet</a></h3>
              </header>
              <div class="read-more-divider"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5"/></svg>
</div>
              <div class="read-more-card-content">
                <ul>
                  <li><a href="/911s5/">僵尸网络911 S5的数字遗产</a></li>
                  <li><a href="/headsup_xdr33_variant_of_ciahive_emeerges/">Heads up! Xdr33, A Variant Of CIA’s HIVE  Attack Kit Emerges</a></li>
                  <li><a href="/warning-hive-variant-xdr33-is-coming_cn/">警惕：魔改后的CIA攻击套件Hive进入黑灰产领域</a></li>
                </ul>
              </div>
              <footer class="read-more-card-footer">
                <a href="/tag/botnet/">See all 114 posts →</a>
              </footer>
            </article>

          
<article class="post-card post tag-godlua tag-botnet tag-backdoor tag-honeypot tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/an-analysis-of-godlua-backdoor/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">Godlua</span>
        </div>
        <h2 class="post-card-title">
          Godlua Backdoor分析报告
        </h2>
      </header>
      <div class="post-card-excerpt">背景介绍


2019年4月24号，360Netlab未知威胁检测系统发现一个可疑的ELF文件，目前有一部分杀软误识别为挖矿程序。通过详细分析，我们确定这是一款Lua-based Backdoor，因为这个样本加载的Lua字节码文件幻数为“God”，所以我们将它命名为Godlua Backdoor。


Godlua Backdoor会使用硬编码域名，Pastebin.com，GitHub.com和DNS TXT记录等方式，构建存储C2地址的冗余机制。同时，它使用HTTPS加密下载Lua字节码文件，使用DNS over HTTPS获取C2域名解析，保障Bot与Web Server和C2之间的安全通信。


我们观察到Godlua Backdoor实际上存在2个版本，并且有在持续更新。我们还观察到攻击者会通过Lua指令，动态运行Lua代码，并对一些网站发起HTTP Flood 攻击。



概览


目前，我们看到的Godlua Backdoor主要存在2个版本，201811051556版本是通过遍历Godlua下载服务器得到，我们没有看到它有更新。当前Godlua Backdoor活跃</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Alex.Turing
          </div>

          <a href="/author/alex/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
          </a>
        </li>
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Genshen Ye
          </div>

          <a href="/author/yegenshen/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2017/10/1662072805.jpg" alt="Genshen Ye" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2019-07-01">Jul 1, 2019</time>
      <span class="post-card-meta-length">10 min read</span>
    </footer>

  </div>

</article>
          
<article class="post-card post tag-honeypot tag-import-2022-11-30-11-16 no-image">


  <div class="post-card-content">

    <a class="post-card-content-link" href="/an-analysis-of-linux-ngioweb-botnet/">
      <header class="post-card-header">
        <div class="post-card-tags">
          <span class="post-card-primary-tag">honeypot</span>
        </div>
        <h2 class="post-card-title">
          Linux.Ngioweb分析报告
        </h2>
      </header>
      <div class="post-card-excerpt">背景介绍


2019年5月27号，360Netlab 未知威胁检测系统发现一个可疑的ELF文件，目前仅有一款杀毒引擎检测识别。通过详细分析，我们确定这是一款Proxy Botnet，并且是Win32.Ngioweb[1]恶意软件的Linux版本变种，我们将它命名为Linux.Ngioweb。它与Win32.Ngioweb共用了大量代码，不同的是它新增了DGA特性。我们注册了其中一个DGA C2域名(enutofish-pronadimoful-multihitision.org)，并对它进行Sinkhole处理以此来观察Bot连接情况。


此外，我们还观察到大量部署WordPress的Web服务器被植入Linux.Ngioweb 恶意软件。尽管Bot程序由Web容器对应的用户组运行并且权限很小但还是能够正常工作，并被充当Rotating Reverse Proxy[2]节点。


目前，我们还没有看清楚Linux.Ngioweb攻击者的目的，但我们猜测他可能会监听代理网络流量。



Linux.Ngioweb概览


Linux.Ngioweb Bot样本的主要功能是在受害者的机</div>
    </a>

    <footer class="post-card-meta">
      <ul class="author-list">
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Alex.Turing
          </div>

          <a href="/author/alex/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2019/06/turing.PNG" alt="Alex.Turing" />
          </a>
        </li>
        <li class="author-list-item">
          <div class="author-name-tooltip">
            Genshen Ye
          </div>

          <a href="/author/yegenshen/" class="static-avatar">
            <img class="author-profile-image" src="/content/images/2017/10/1662072805.jpg" alt="Genshen Ye" />
          </a>
        </li>
      </ul>
      <time class="post-card-meta-date" datetime=" 2019-06-21">Jun 21, 2019</time>
      <span class="post-card-meta-length">15 min read</span>
    </footer>

  </div>

</article>
        </div>
      </div>
    </aside>



    </div>

    <footer class="site-footer outer">
        <div class="inner">
            <section class="copyright"><a href="https://blog.netlab.360.com">360 Netlab Blog - Network Security Research Lab at 360</a> &copy; 2024</section>
            <div><a href="https://ghost.org/" target="_blank" rel="noopener">Powered by Ghost</a></div>
        </div>
    </footer>

</div>


<script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous">
</script>
<script src="/assets/built/casper.js?v=42b57cac00"></script>
<script>
$(document).ready(function () {
    // Mobile Menu Trigger
    $('.gh-burger').click(function () {
        $('body').toggleClass('gh-head-open');
    });
    // FitVids - Makes video embeds responsive
    $(".gh-content").fitVids();

    // floating-header
    // Start fitVids
      var $postContent = $(".gh-content");
      $postContent.fitVids();
      // End fitVids

      var progressBar = document.querySelector('#reading-progress');
      var header = document.querySelector('.floating-header');
      var title = document.querySelector('.article-title');

      var lastScrollY = window.scrollY;
      var lastWindowHeight = window.innerHeight;
      var lastDocumentHeight = $(document).height();
      var ticking = false;

      function onScroll() {
        lastScrollY = window.scrollY;
        requestTick();
      }

      function onResize() {
        lastWindowHeight = window.innerHeight;
        lastDocumentHeight = $(document).height();
        requestTick();
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(update);
        }
        ticking = true;
      }

      function update() {
        var trigger = title.getBoundingClientRect().top + window.scrollY;
        var triggerOffset = title.offsetHeight + 35;
        var progressMax = lastDocumentHeight - lastWindowHeight;

        // show/hide floating header
        if (lastScrollY >= trigger + triggerOffset) {
          header.classList.add('floating-active');
        } else {
          header.classList.remove('floating-active');
        }

        progressBar.setAttribute('max', progressMax);
        progressBar.setAttribute('value', lastScrollY);

        ticking = false;
      }

      window.addEventListener('scroll', onScroll, { passive: true });
      window.addEventListener('resize', onResize, false);

      update();
});
</script>



</body>
</html>
