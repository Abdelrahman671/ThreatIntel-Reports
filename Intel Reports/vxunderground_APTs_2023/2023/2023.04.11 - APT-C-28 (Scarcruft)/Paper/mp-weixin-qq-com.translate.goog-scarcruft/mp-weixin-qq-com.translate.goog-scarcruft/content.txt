1/18
mp-weixin-qq-com.translate.goog
/s/RHbsCLzahLP0zGgC3N5pPQ
Analysis of APT-C-28 (ScarCruft) organization’s
attack activities in South Korea
Advanced Threat Institute 360 ​​Threat Intelligence Center 2023-04-11 12:37
360 Threat Intelligence Center
published in Beijing
Included in collection
APT-C-28 Scar Cruft
APT-C-28 (ScarCruft), also known as Konni, is an APT organization active in the Korean Peninsula . It
mainly conducts cyber attacks on government agencies in neighboring countries and regions, mainly to
steal sensitive information. The organization's attack activities can be traced back to 2014. In recent
years, the organization's activities have been frequent, and it has been continuously tracked and
disclosed by several domestic and foreign security teams.
Recently, 360 Advanced Threat Research Institute has repeatedly discovered the organization's targeted
attacks against South Korea. In this round of attacks, the organization used inductive file names such as
"reward list" and "payment" successively, and at the same time used decoy content such as "encryption
currency" and "address book" to induce users to execute malicious macro documents. After the macro
document is allowed to execute, it will download or release the CAB payload from itself, decompress and
execute the script file in it, and load a series of malicious samples, thereby launching a network attack on
the victim to achieve the purpose of stealing secrets.
 1. Attack activity analysis  

1. Attack process analysis  
The attack process organized by Konni is roughly shown in the following figure:         
2/18
The Konni organization uses decoy files to induce users to click to open them. Once executed, the
malicious macro template file will be downloaded from the remote server. The main function of the macro
code is to continue to download the CAB file and decompress and execute the check.bat file. The BAT
will determine the system version and CPU architecture , in order to select different UAC bypass methods
according to the corresponding version when installing the service, so as to successfully disguise the
system service to start the backdoor module, achieve the purpose of resident and start the stealing
activity.
2. Malicious document analysis  
In the recent targeted attacks against South Korea, the Konni organization mainly used malicious
documents, all of which were disguised in Korean. Combined with the organization’s frequent use of
spear phishing attacks, it is inferred that this attack should also be delivered by spear phishing Way.
The following is a recent attack sample targeting South Korea, and its information is as follows:
file name
paypal.docx
File size
14.91 KB (15271 bytes)
MD5
7b27586c4b332c5e87784c8d3e45a523
When this sample is executed, it will download a malicious macro template document (MD5:
a6736c776d6d44cec7ec07b9fb628ec3) from the address http://k22012.c1.biz/paypal.dotm, and the
macro code is encrypted and cannot be debugged normally. After restoration, its malicious code is as
follows:
3/18
Its function first sets the gray text that is not easy to read to black, and the content of the document
before and after the macro is executed is as follows:
Then download the file from the address http://5645780.c1.biz//index.php?
user_id=trap&auth=trap&pw=trap, and save it to %TEMP%\FXSAAENPILogFile.txt (MD5:
1ae5b24456d9751dbd15c5c4fccef261), and finally use expand to download the file Unzip and execute
the check.bat in it.
3. Attack component analysis   
1) FXSAAENPILogFile.txt file
The FXSAAENPILogFile.txt file information downloaded in the macro code is as follows:
file name
paypal.docx
File size
14.91 KB (15271 bytes)
MD5
7b27586c4b332c5e87784c8d3e45a523
The file is actually a CAB file, as shown in the figure below after decompression:
4/18
2) check.bat file
The check.bat file in the compressed package is run by the macro code and serves as the entry point for
loading other components. The file information is as follows:
file name
FXSAAENPILogFile.txt
File size
127.29KB (130346 bytes)
MD5
1ae5b24456d9751dbd15c5c4fccef261
The specific content of check.bat is shown in the figure below. When executing, first judge whether there
is a session. If there is, execute trap.bat directly and exit. Otherwise, first judge whether it is a Windows
10 system. If so, set Num to 4, otherwise it is equal to 1. Each parameter represents different UAC
bypass methods, and then judge whether it is under a 64-bit system, if so, execute wpnprv64.dll,
otherwise execute wpnprv32.dll.
3) wpnprv32.dll file
5/18
Taking the 32-bit system as an example, the check.bat file calls wpnprv32.dll, and passes in the
parameters Num and trap.bat. This DLL provides two different ways to perform Byass UAC.
file name
check.bat
File size
491B (491 bytes)
MD5
079be709ce7e57f4015b0ca8347e8a29
When the input parameter Num is 1, Bypass UAC is performed by using the wusa.exe whitelist file and
combining the token simulation login method. The specific process is as follows. First, start the wusa.exe
process through ShellExecuteExw. Since wusa.exe is in the UAC whitelist and does not perform UAC
verification, obtain the token for duplicating wusa.exe through the NtOpenProcessToken and
NtDuplicatetoken API functions, and then pass the obtained Token to Enter ImpersonateLoggedOnUser
to simulate user login, then use CreateProcessWithLogomW to execute the incoming trap.bat, and finally
assign the copied token to the thread of the newly created process.
6/18
When the incoming Num is 4, use the AppInfo RPC and PPID spoofing technology first disclosed by
Project Zero to perform Bypass UAC.
Appinfo is a Windows RPC service, and the RAiLaunchAdminProcess function in this RPC service is
mainly used for UAC authentication. The specific process is as follows. First, set startFlags to 0, create a
winver.exe process with normal permissions, and then obtain the process debugger handle by calling the
NtQueryInformationProcess function, and then detach the debugger so that the existing debugger can be
assigned to the next step Created new process.
Then re-create a taskmgr.exe process with a high integrity level, get the initial process debug event, and
get a full access process handle through NtDuplicateObject.
7/18
Finally, using the parent process deception technique, a new high-integrity level process is created to
execute the incoming trap.bat.
4) trap.bat file
The basic information of trap.bat executed by wpnprv32.dll is shown in the following table:
file name
trap.bat
File size
1.67KB (1705 bytes)
MD5
8a37c1614aed81a2b9d1f44cf84e2515
Its specific content is:
8/18
When executing, first judge whether it is running under a 64-bit system, if so, copy the 64-bit DLL file and
its corresponding DAT file to the system32 directory and rename it to rdssvc.dll and rdssvc.dat, otherwise
copy the 32-bit DLL file and its corresponding DAT file Copy the corresponding DAT file to the system32
directory and rename it. Then execute the installation steps to create the rdssvc service, whose service
display name is "Remote Database Service Update", execute the path "svchost.exe -k rdssvc", and
create it under the registry HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SvcHost The
rdssvc item, its parameter points to rdssvc.dll, so as to realize permanent residence. Finally, delete all the
files in this directory and successfully create the service as shown below. The DLL program loaded by the
service is the final remote control Trojan horse.
9/18
4. Final load analysis  
Take rdssvc32.dll loaded under the 32-bit system as an example. rdssvc32.dll is a remote control
program disguised as a service. The relevant information is as follows.
file name
rdssvc32.dll
File size
80.0KB (81920 bytes)
MD5
8e50622992a4b4b33127c34ff3fdbd30
Decrypt the function name and get the address of the related function.
Read the key value under the registry HKEY_CURRENT_USER\Console, where MinElapsed represents
the waiting time for another network test, and the time range is a random integer minute between 1
minute and 1 hour.
10/18
By reading and decrypting the rdssvc.dat data, the first 16 bytes of rdssvc.dat are IV
(“d3dbd7bb1299096441c5ebba6ce2675e”), the rest is the encrypted C2 server address, and the Key is
the Hash256 value of the service name (“3f96cd95327a8c801972620c7906dcfa9e6b
76d3c1935b8648c5c24bfb2c21b8" ). Use AES-CTR to decrypt to get the C2 server address
"4895750.c1.biz".         
If rdssvc.dat does not exist, it will read the rdssvc.ini file to decrypt the URL address, and download the
decrypted C2 server address from the URL.
11/18
Then execute "cmd /c systeminfo" and "cmd /c tasklist" to obtain system information and process
information respectively, and save the data to the C:\Windows\Temp\ directory.
12/18
In addition, it should be noted that when the attacker uploads information, if the file format is not ".cab",
".zip", or ".rar", it will use makecab to package and encrypt the upload. If it is already in these three
formats, it will directly Encrypted uploads.
13/18
Finally, use the POST method to upload the encrypted data to "http://4895750.c1.biz/up.php?name=
{HostName}"
And the return result is read through the InternetReadFile function, if the result is "success!", it means
success.
In addition, the remote control command is mainly to send a Get request to the server
"4895750.c1.biz/dn.php?name={HostName}&prefix=cc(count)", where count represents the number of
connections.
14/18
Some of the commands executed are as follows:         
The complete format of the command supported by the remote control sample is as follows:
first order parameter 1
parameter
2
operate
/stext
Execute the downloaded file with
SYSTEM privileges and save the
result
/user
Execute file with user privileges
/user
/stext or >
Execute with user privileges and
save the result
cmd
pull
/f
Copy the file to a temporary
directory before uploading
cmd
pull
Upload the specified file
cmd
>
Remote shell and save the result to
a temporary directory
cmd
remote shell
cmd
chmod
save specified file
cmd
put
Move the file to the specified
directory
Commands other than those mentioned above mainly execute downloaded files with SYSTEM authority.
 2. Correlation analysis  
15/18
Earlier this year, we also discovered multiple attack samples targeted at the South Korean region by the
Konni organization. The associated sample 1 information is shown in the following table:
file name
카뱅과 손잡은코인원 _ 비트독주 체제무너뜨
릴까 .docx
   
File size
1.50 MB (1568752 bytes)
MD5
00e6e9ed4666623860686c123ed334f0
The Konni organization uses encrypted currency-related file names and content to induce users to click
and run. The execution process is similar to the above analysis. First, download the malicious macro
template from the remote address http://word2022.c1.biz/template.dotm. The font of the macro code is
set to In black, the camouflaged contents before and after execution are shown below.
Then collect the operating system version information, host name, and IP address information of the host
and send them to the server. Collecting such information can be used in subsequent more precise attack
operations. What needs special attention is that there is no subsequent process of downloading and
decompressing the CAB file in the macro code of this sample, so it is judged that this sample is mainly a
reconnaissance module in the early stage.
In addition, by analyzing the previously captured Konni organization samples, it was found that the
malicious document used by the organization in the early stage was to release the CAB from itself and
16/18
decompress and execute the script file in it. This method is not as flexible as loading the CAB remotely,
and it is also easy to expose the malicious payload used.
The associated sample 2 information is shown in the following table:
file name
보상명부 .xlam
File size
145.43 KB (148924 bytes)
MD5
cf5f18032667bfb4c7373191e7fb1fbf
It uses macros to decompress the rels.xml file (actually a CBA payload) from itself, and then uses expand
to decompress rels.xml and execute the check.bat file. The subsequent process is basically the same as
this attack and will not be described in detail.         
 3. Attribution Judgment  
Konni’s attack against South Korea is very similar to the previous payload used against Russia, which is
mainly reflected in the following aspects:
1. The decoy document display still maintains the consistent style of the organization, that is, the text that
is difficult to read is displayed in black only after successful execution, which is a distinctive feature of the
organization;
2. Same as the previous samples, the CAB format file is used to load the load layer by layer, but the CAB
file acquisition method is not exactly the same, and the batch script is also very similar;
17/18
3. The functions of the final remote control module are similar, and the communication flow is also similar,
such as 4895750.c1.biz/dn.php?name={HostName}&prefix=cc(count), where count represents the
number of connections, starting from zero. Previously the organization used a URL format like /dn.php?
client_id={host ID}&prefix=cc(count).
In the end, it was combined that the sample was an attack against the South Korean region, which was in
line with the organization's long-standing attack goals. In summary, this attack belongs to the Konni
organization.
Summarize
Since the Konni organization was disclosed, it has been targeting neighboring countries and regions for a
long time with cyber attacks, and there is a growing trend. In this round of attacks, the organization used
malicious documents as attack vectors as before, and packaged multiple malicious modules into CAB
format for attacks, and showed a variety of characteristics in the delivery methods of CAB files. This
shows that the organization is continuously updating the function and form of malicious code, showing
the characteristics of functional modularization, and developing attack components that adapt to different
system environments.
In addition, the relevant malicious code and C2 disclosed in this article are only some of the weapons
used by the Konni organization during the attack on the South Korean region. The organization will not
stop its activities because of the exposure of an attack, but will continue to update its payload. Keep an
eye on the group's weapons of attack against South Korea and beyond.       
Appendix IOC
cf5f18032667bfb4c7373191e7fb1fbf
7b27586c4b332c5e87784c8d3e45a523
00e6e9ed4666623860686c123ed334f0
2c0db5d995d997a7687f527c493b4c89
7c77fbf78a0e15be66f9edee7ab21084
0567c9fa7c535e8d09fc5d1c712c66bf
18/18
ad868a784cb0303aeb02666fe70495f6
f2ffb3cb75535e4ef70b195de68fd330
020e326d4db035b61f66407acb74521d
f0105f3127de410360a2ed80d697b059
a7da2aaaa7efdd9ee74fc5e517be30b2
50551b96e321fe1b478b7bba77c573e6
a6736c776d6d44cec7ec07b9fb628ec3
1ae5b24456d9751dbd15c5c4fccef261
8e50622992a4b4b33127c34ff3fdbd30
1536e9bf086982c072c2cba7d42b0a62
8ef69701c52dc78df0df1dd0bb4c9f36
2211d9356dd7aeced0ee7b2a05077c75
079be709ce7e57f4015b0ca8347e8a29
371d4255ffe03274f016395fe3a4e380
8a37c1614aed81a2b9d1f44cf84e2515
         

rq7592.c1[.]biz
4895750.c1[.]biz
word2022.c1[.]biz
5645780.c1[.]biz
k22012.c1[.]biz
         

http://k22012.c1[.]biz/paypal.dotm
http://5645780.c1[.]biz/index.php?user_id=trap&auth=trap&pw=trap
http://word2022.c1[.]biz/template.dotm
http://word2022.c1[.]biz/index.php?os={OSVersion}&name={HostName}&ip={IP}
http://4895750.c1[.]biz/dn.php?name={HostName}&prefix=cc(count)
http://4895750.c1[.]biz/up.php?name={HostName}
http://rq7592.c1[.]biz/up.php?name={HostName}
http://rq7592.c1[.]biz/dn.php?name={HostName}&prefix=cc(count)
