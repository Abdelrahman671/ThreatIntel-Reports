<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="https://norfolkinfosec.com/xmlrpc.php">


<title>Emissary Panda DLL Backdoor &#8211; One Night in Norfolk</title>
<meta name='robots' content='max-image-preview:large' />
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<link rel="alternate" type="application/rss+xml" title="One Night in Norfolk &raquo; Feed" href="https://norfolkinfosec.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="One Night in Norfolk &raquo; Comments Feed" href="https://norfolkinfosec.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="One Night in Norfolk &raquo; Emissary Panda DLL Backdoor Comments Feed" href="https://norfolkinfosec.com/emissary-panda-dll-backdoor/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/norfolkinfosec.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.7.1"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://norfolkinfosec.com/wp-includes/css/dist/block-library/style.min.css?ver=6.7.1' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='coral-dark-style-css' href='https://norfolkinfosec.com/wp-content/themes/coral-dark/style.css?ver=6.7.1' type='text/css' media='all' />
<style id='coral-dark-style-inline-css' type='text/css'>
h1.site-title, h3.site-title { font-family: Arial, Helvetica, sans-serif;}
		
		body, button, input, select, textarea {	font-size: 12px;}
		h1.site-title, h3.site-title {
			margin-top: 25px; 
			font-size: 30px; 
		}
		h1.site-title a,
		h1.site-title a:visited,
		h1.site-title a:hover,
		h1.site-title a:active,
		h1.site-title a:focus,
		h3.site-title a,
		h3.site-title a:visited,
		h3.site-title a:hover,
		h3.site-title a:active,
		h3.site-title a:focus {
			color: #eeeeee !important;
		}
		
		h2.site-description, h4.site-description {
			margin-top: 5px;
			font-size: 14px;
			color: #999999;
		}
		.custom-logo {max-height: 100px;}
		@media screen and (min-width: 768px) {
			.main-navigation {margin-top: 15px;}
			#search1 {margin-top: 42px;}
			#social1 {margin-top: 47px;}
		}
	
</style>
<script type="text/javascript" src="https://norfolkinfosec.com/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://norfolkinfosec.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<script type="text/javascript" src="https://norfolkinfosec.com/wp-content/themes/coral-dark/js/jquery.nivo.slider.pack.js?ver=3.2" id="nivo-slider-js"></script>
<link rel="https://api.w.org/" href="https://norfolkinfosec.com/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://norfolkinfosec.com/wp-json/wp/v2/posts/217" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://norfolkinfosec.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.7.1" />
<link rel="canonical" href="https://norfolkinfosec.com/emissary-panda-dll-backdoor/" />
<link rel='shortlink' href='https://norfolkinfosec.com/?p=217' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://norfolkinfosec.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fnorfolkinfosec.com%2Femissary-panda-dll-backdoor%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://norfolkinfosec.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fnorfolkinfosec.com%2Femissary-panda-dll-backdoor%2F&#038;format=xml" />
		<style type="text/css" id="wp-custom-css">
			.wp-block-table td { font-size: 12pt; }		</style>
		</head>

<body class="post-template-default single single-post postid-217 single-format-standard wp-embed-responsive">
<div id="page" class="hfeed site">
	<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

	<header id="masthead" class="site-header grid-container" role="banner">
		<div class="site-branding egrid  grid-35 tablet-grid-35 mobile-grid-100">
												<h3 class="site-title"><a href="https://norfolkinfosec.com/" rel="home">One Night in Norfolk</a></h3>
					<h4 class="site-description">Reverse Engineering and Malware Analysis</h4>
					
							
		</div><!-- .site-branding -->
		<div id="headerright" class="grid-parent egrid  grid-65 tablet-grid-65 mobile-grid-100">
			
			<div id="social1" class="egrid  grid-60 tablet-grid-60 mobile-grid-100">
							</div>
			
			<div id="search1" class="search  grid-40 tablet-grid-40 mobile-grid-100">
				<div class="search-container">
<form role="search" method="get" class="search-form" action="https://norfolkinfosec.com/">
	<fieldset>
		<input type="search" class="search-field" placeholder="Search..." value="" name="s" title="Search for:" />
		<input type="submit" class="search-submit" value="" />
	</fieldset>
</form>
</div>			</div>
		</div>

		<nav id="site-navigation" class="main-navigation egrid grid-100 tablet-grid-100 mobile-grid-100" role="navigation">
			<i id="menu-button" class="fa fa-bars collapsed"><span>  Menu</span></i>
			<div class="menu-primary-menu-container"><ul id="main-menu" class="sm sm-clean collapsed"><li id="menu-item-15" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-15"><a href="https://norfolkinfosec.com">Home</a></li>
<li id="menu-item-69" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-69"><a href="https://norfolkinfosec.com/contact/">Contact Me</a></li>
<li id="menu-item-266" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-266"><a href="https://norfolkinfosec.com/pretzels/">Pretzels</a></li>
<li id="menu-item-373" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-373"><a href="https://norfolkinfosec.com/presentations/">Presentations</a></li>
</ul></div>		</nav><!-- #site-navigation -->
	</header><!-- #masthead -->

		
<!-- breadcrumbs from Yoast or NavXT plugins -->
		
	<div id="content" class="site-content grid-container">

	<div id="primary" class="content-area egrid  grid-85 tablet-grid-85 mobile-grid-100 push-15 tablet-push-15">
		<main id="main" class="site-main" role="main">

		
			
<article id="post-217" class="post-217 post type-post status-publish format-standard hentry category-uncategorized tag-apt27 tag-emissary-panda">
	<header class="entry-header">
		<h1 class="entry-title">Emissary Panda DLL Backdoor</h1>
		<div class="entry-meta">
			<span class="posted-on"><a href="https://norfolkinfosec.com/emissary-panda-dll-backdoor/" rel="bookmark"><time class="entry-date published" datetime="2019-07-21T23:07:17+00:00">July 21, 2019</time><time class="updated" datetime="2019-07-22T03:49:59+00:00">July 22, 2019</time></a></span><span class="byline"> <span class="author vcard"><a class="url fn n" href="https://norfolkinfosec.com/author/norfolkadmin/">norfolk</a></span></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

	<div class="entry-content">
		
		
<p style="font-size:12px;text-align:left">Last month&#8217;s post on this blog examined a backdoor previously thought to be associated with Emissary Panda (APT27). Recent reporting has instead shown that the HTTP listener examined is likely affiliated with Turla. That post has been updated with the corresponding corrections. <br><br>This post is a granular examination of a payload alluded to in a <a href="https://unit42.paloaltonetworks.com/emissary-panda-attacks-middle-east-government-sharepoint-servers/">Palo Alto report</a> that <em>is</em> tied to Emissary Panda with much higher confidence. While the payload wasn&#8217;t available for analysis in that report, <a href="https://twitter.com/KevinPerlow/status/1133941247536697345">VirusTotal pivoting</a> at the time produced the matching file. <br><br>Filename: PYTHON33.hlp<br>MD5: 19c46d01685c463f21ef200e81cb1cf1<br>SHA1: ac4a264a76ba22e21876f7233cbdbe3e89b6fe9d<br>SHA256: 3e21e7ea119a7d461c3e47f50164451f73d5237f24208432f50e025e1760d428 <br><br>This file is expected to be part of a DLL side-loading chain that involves a component of the legitimate Sublime text editor (plugin_host.exe, also available on VirusTotal: f0b05f101da059a6666ad579a035d7b6) and a malicious DLL that this file will sideload:<br><br>Filename: PYTHON33.dll<br>MD5: bc1305a6ca71d8bdb3961bfd4e2b3565<br>SHA1: f189d63bae50fc7c6194395b2389f9c2a453312e<br>SHA256: 2dde8881cd9b43633d69dfa60f23713d7375913845ac3fe9b4d8a618660c4528 </p>



<span id="more-217"></span>



<p style="font-size:12px;text-align:left"><span style="text-decoration: underline;">Preparation</span><br><br>If all three of these files are placed in the same folder with the correct filenames, plugin_host.exe will sideload PYTHON33.dll, which will decrypt and decompress the PYTHON33.hlp file into a DLL. The workflow for this is similar to (but not identical to) previous reporting from NCC group regarding an earlier version of this malware. This post will thus not go into detail regarding this process, but makes the following recommendation for analyzing these components:<br><br>1) Patch the PYTHON33.hlp file (which is a block of shellcode) by prepending an infinite loop (EB FE) to the file via a hex editor<br><br>2) Run plugin_host.exe normally (i.e. not in a debugger). This will sideload the DLL and load the shellcode, but will hold it in an infinite loop without executing any commands<br><br>3) Attach a debugger (e.g. x96dbg) to this running process and step through until the payload is decoded in memory, as you would any other shellcode samples. In this case, a good breakpoint to set is would be at the entry to &#8220;CommandLineToArgvW&#8221; <br><br>The breakpoint in step 3 wouldn&#8217;t be obvious during the initial examination of this file, but this blog mentions it here as a shortcut to facilitate analysis of this file. The DLL can also be dumped at this stage for concurrent static analysis in IDA.<br><br><span style="text-decoration: underline;">Payload</span><br><br>The Palo Alto report mentions similarities between the loading and decrypting process for this file and the loading and decrypting process for a file previously analyzed (but not provided) by <a href="https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/may/emissary-panda-a-potential-new-malicious-tool/">NCC Group</a>. NCC Group provided a high-level overview of that payload&#8217;s capabilities. This overview serves as a framework for &#8220;what we might be looking for;&#8221; specifically, NCC group mentions the following:<br><br>&#8211; An execution workflow determined by the number of specified parameters<br>&#8211; Process injection into svchost<br>&#8211; A series of keys written to the registry in a unique way<br>&#8211; A basic persistence mechanism (HKCU runkey) + service creation<br><br>This offers a big head-start for analysis. First, the malware calls GetCommandLineW followed by CommandLineToArgvW. <a href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-commandlinetoargvw">Per MSDN documentation</a>, this second call &#8220;parses a Unicode command line string and returns an array of pointers to the command line arguments.&#8221; The &#8220;number of pointers in this array is indicated by pNumArgs.&#8221; The screenshot below shows these two API calls at the top, followed by a comparison between pNumArgs (decreased by 1, for the case statement) and the value &#8220;3:&#8221;</p>



<div class="wp-block-image"><figure class="aligncenter is-resized"><img fetchpriority="high" decoding="async" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_3-1-587x1024.png" alt="" class="wp-image-219" width="440" height="768" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_3-1-587x1024.png 587w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_3-1-172x300.png 172w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_3-1-120x210.png 120w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_3-1.png 692w" sizes="(max-width: 440px) 100vw, 440px" /><figcaption><strong>Comparison for number of command line arguments</strong></figcaption></figure></div>



<p style="font-size:12px;text-align:left">If EAX is <em>greater than</em> 3, (i.e. if there are more than three command line arguments), the malware will jump to the default case rather than cases 0-4, will return to the calling function, and will terminate without taking any action. If EAX is <em>less than or equal to </em>3, it will jump into one of the available cases:</p>



<figure class="wp-block-image"><img decoding="async" width="1024" height="481" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_4-1024x481.png" alt="" class="wp-image-220" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_4-1024x481.png 1024w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_4-300x141.png 300w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_4-768x361.png 768w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_4-210x99.png 210w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_4-1536x722.png 1536w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_4.png 1786w" sizes="(max-width: 980px) 100vw, 980px" /><figcaption><strong>Case structure</strong></figcaption></figure>



<p style="font-size:12px;text-align:left">As always, right click and open the image in a new tab to enlarge. Additional labeling has been added, including string labeling that would be visible during dynamic analysis in a debugger. At this stage, we can begin exploring the cases.<br><br><span style="text-decoration: underline;">Case 0</span><br><br>A good way to explore these cases to take a snapshot just prior to the EAX comparison, and then set EAX to the value of the case to be examined. In Case 0, the malware:<br><br>&#8211; Moves a string representing the location of the currently running executable (plugin_host.exe) to EAX<br>&#8211; Moves a string containing &#8220;C:\\ProgramData\\plugin_host\\pluginhost.exe&#8221; to ECX<br>&#8211; Pushes these two values to the stack<br>&#8211; Uses wsicmp to compare these two values<br>&#8211; Jumps to an &#8220;ExitProcess&#8221; call if these two values do not match<br><br>If these two values do match, the malware will move to a function call referenced in several locations, labelled in the above IDA screenshot as the <strong>CreateFileCheck_Inject_Calls</strong>. As this label would suggest, there are two primary subcomponents of this call, labelled below as <strong>CreateFileCheck</strong> and <strong>Process_Injection_Workflow</strong>.</p>



<div class="wp-block-image"><figure class="aligncenter is-resized"><img decoding="async" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_5-548x1024.png" alt="" class="wp-image-221" width="411" height="768" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_5-548x1024.png 548w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_5-161x300.png 161w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_5-112x210.png 112w, https://norfolkinfosec.com/wp-content/uploads/2019/07/panda_dll_5.png 552w" sizes="(max-width: 411px) 100vw, 411px" /><figcaption><strong>Subroutine to launch the file check and process injection workflows</strong></figcaption></figure></div>



<p style="font-size:12px;text-align:left">The CreateFileCheck subroutine will use the PathFileExistsW and CreateFileW APIs to check if the malware can open C:\\ProgramData\\plugin_host\\PYTHON33.hlp:</p>



<figure class="wp-block-image"><img loading="lazy" decoding="async" width="1024" height="985" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/createfilecheck-1024x985.png" alt="" class="wp-image-222" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/createfilecheck-1024x985.png 1024w, https://norfolkinfosec.com/wp-content/uploads/2019/07/createfilecheck-300x289.png 300w, https://norfolkinfosec.com/wp-content/uploads/2019/07/createfilecheck-768x739.png 768w, https://norfolkinfosec.com/wp-content/uploads/2019/07/createfilecheck-210x202.png 210w, https://norfolkinfosec.com/wp-content/uploads/2019/07/createfilecheck-1536x1478.png 1536w, https://norfolkinfosec.com/wp-content/uploads/2019/07/createfilecheck.png 1594w" sizes="auto, (max-width: 980px) 100vw, 980px" /><figcaption><strong>Checking if PYTHON33.hlp is at the correct location</strong></figcaption></figure>



<p style="font-size:12px">The next function, not pictured here due to space constraints, will take the following actions:<br><br>&#8211; Locate and spawn a suspended copy of svchost.exe<br>&#8211; Allocate an executable section of memory<br>&#8211; Write PYTHON33.hlp to this section of memory<br>&#8211; Create and resume a thread at this location<br><br>This is a common workflow for process injection. The parent process will then terminate. Thus, Case 0 can be summarized in the following way:<br><br>&#8211; Ensure that plugin_host.exe is running from the correct directory<br>&#8211; Ensure that PYTHON33.hlp is inside of this directory<br>&#8211; Create a suspended svchost.exe process<br>&#8211; Re-write a copy of the payload into this process<br>&#8211; Terminate<br><br><span style="text-decoration: underline;">Case 1</span><br><br>Case 1 can be thought of as Case 0 with added contingencies. Case 1 begins with the same string comparison, ensuring that the malware is running from the &#8220;C:\\ProgramData\\plugin_host\\&#8221; directory. If this comparison is successful, the malware will run the same check for PYTHON33.hlp and process injection routines described in Case 0, followed by the &#8220;core functionality&#8221; routine (described later).<br><br>Unlike Case 0, if the file is not running from the correct subdirectory in ProgramData, the malware does <em>not</em> terminate; instead, it performs what is labelled as the &#8220;MoveFile_Routine&#8221; in the IDA case picture. This workflow:<br><br>&#8211; Moves the necessary components for the malware to run into the ProgramData\\plugin_host\\ directory<br>&#8211; Executes plugin_host.exe using WMI<br><br>Case 1 represents a more flexible workflow for starting the malware for the first time. </p>



<figure class="wp-block-image"><img loading="lazy" decoding="async" width="693" height="1024" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/WMI_stuff-693x1024.png" alt="" class="wp-image-224" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/WMI_stuff-693x1024.png 693w, https://norfolkinfosec.com/wp-content/uploads/2019/07/WMI_stuff-203x300.png 203w, https://norfolkinfosec.com/wp-content/uploads/2019/07/WMI_stuff-142x210.png 142w, https://norfolkinfosec.com/wp-content/uploads/2019/07/WMI_stuff.png 738w" sizes="auto, (max-width: 693px) 100vw, 693px" /><figcaption><strong>WMI Execution Workflow</strong></figcaption></figure>



<p style="font-size:12px;text-align:left"><span style="text-decoration: underline;">Case 2</span><br><br>Case 2 contains three parts, in the following order:<br><br>&#8211; A new call not yet analyzed<br>&#8211; The same CreateFile check and ProcessInjection calls<br>&#8211; The &#8220;core functionality&#8221; call discussed in Case 3<br><br>The new call is actually fairly simple. This function performs a permissions check, and takes one of two branches depending on the permissions available:</p>



<div class="wp-block-image"><figure class="aligncenter is-resized"><img loading="lazy" decoding="async" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/service_reg_branch.png" alt="" class="wp-image-225" width="496" height="692" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/service_reg_branch.png 661w, https://norfolkinfosec.com/wp-content/uploads/2019/07/service_reg_branch-215x300.png 215w, https://norfolkinfosec.com/wp-content/uploads/2019/07/service_reg_branch-151x210.png 151w" sizes="auto, (max-width: 496px) 100vw, 496px" /><figcaption><strong>Branch to registry workflow (left) or service workflow (right)</strong></figcaption></figure></div>



<p style="font-size:12px;text-align:left">With sufficient privileges, the malware will create a new service named <em>plugin_hostvr874u5Pn</em> pointing at the plugin_host.exe executable with a start type of &#8220;2&#8221; (autoload):</p>



<div class="wp-block-image"><figure class="aligncenter is-resized"><img loading="lazy" decoding="async" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/service_workflow-1024x562.png" alt="" class="wp-image-226" width="768" height="422" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/service_workflow-1024x562.png 1024w, https://norfolkinfosec.com/wp-content/uploads/2019/07/service_workflow-300x165.png 300w, https://norfolkinfosec.com/wp-content/uploads/2019/07/service_workflow-768x421.png 768w, https://norfolkinfosec.com/wp-content/uploads/2019/07/service_workflow-210x115.png 210w, https://norfolkinfosec.com/wp-content/uploads/2019/07/service_workflow.png 1106w" sizes="auto, (max-width: 768px) 100vw, 768px" /><figcaption><strong>Service Creation</strong></figcaption></figure></div>



<p style="font-size:12px;text-align:left">Otherwise, the malware will create a registry entry under the HKCU CurrentVersion\Run key named  <em>plugin_hostvr874u5Pn</em> pointing to plugin_host.exe with a parameter of &#8211;1. The function then returns and the injection and core routines are executed.</p>



<div class="wp-block-image"><figure class="aligncenter is-resized"><img loading="lazy" decoding="async" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_1-985x1024.png" alt="" class="wp-image-227" width="739" height="768" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_1-985x1024.png 985w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_1-289x300.png 289w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_1-768x798.png 768w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_1-202x210.png 202w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_1.png 1121w" sizes="auto, (max-width: 739px) 100vw, 739px" /><figcaption><strong>Registry Key Creation</strong></figcaption></figure></div>



<p style="font-size:12px;text-align:left"><span style="text-decoration: underline;">Case 3</span><br><br>Case 3 contains a single function, referenced above and by <a href="https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/may/emissary-panda-a-potential-new-malicious-tool/">NCC Group&#8217;s writeup</a> on an earlier version of this malware as the &#8220;core functionality&#8221; routine. This routine contains the code used for process injection, but more importantly is used to:<br><br>&#8211; Write encrypted configuration values to the Windows Registry<br>&#8211; Perform a workflow for C2 communication<br>missary panda unit42<br>The workflow for this is shown below, and tracks closely with the previous NCC group reporting:</p>



<div class="wp-block-image"><figure class="aligncenter"><img loading="lazy" decoding="async" width="955" height="1003" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config.png" alt="" class="wp-image-228" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config.png 955w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config-286x300.png 286w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config-768x807.png 768w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config-200x210.png 200w" sizes="auto, (max-width: 955px) 100vw, 955px" /><figcaption><strong>Workflow for writing config values to the registry</strong></figcaption></figure></div>



<div class="wp-block-image"><figure class="aligncenter"><img loading="lazy" decoding="async" width="1024" height="599" src="https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config_2-1024x599.png" alt="" class="wp-image-229" srcset="https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config_2-1024x599.png 1024w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config_2-300x175.png 300w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config_2-768x449.png 768w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config_2-210x123.png 210w, https://norfolkinfosec.com/wp-content/uploads/2019/07/registry_config_2.png 1112w" sizes="auto, (max-width: 980px) 100vw, 980px" /><figcaption><strong>Writing config value to registry</strong></figcaption></figure></div>



<p style="font-size:12px;text-align:left">Following this, the malware enters its C2 routine. The malware uses the PolarSSL library to do this, and communicates with <strong><span style="text-decoration: underline;">138.68.154[.]133:443</span></strong>.</p>



<p style="font-size:12px;text-align:left"><span style="text-decoration: underline;"><strong>Concluding Thoughts</strong></span><strong><br></strong><br>Having looked at each of the cases within the malware, we can compare this sample to the previously reported one, even though that file was never provided. <br><br>&#8211; The previous reporting described self-termination and WMI execution for Case 0. The WMI functionality appears to have moved to Case 1, and Case 0 now supports process injection.<br><br>&#8211; Case 1 now supports moving the files to the appropriate locations if they are not present, executing these files via WMI, or performing process injection. Previously, the file moving routines were in Case 0.<br><br>&#8211; Case 2 appears to be largely unchanged.<br><br>&#8211; Case 3 appears to be largely unchanged.<br><br>&#8211; There is no &#8220;Case 4,&#8221; although the malware will treat any number of parameters greater than 3 as a signal to head to the &#8220;default case.&#8221;<br><br>&#8211; The referenced debugging strings do not appear in this sample. <br><br>NCC group previously assessed that the malware might be undergoing active development. Given these findings from a sample a year later, it appears that was the case. There are minor upgrades, cases rearranged, and possibly one case removed. Still, based on the higher-level descriptions in that report and how closely they track with this more granular analysis, it would appear that this is the same malware family (with modifications). <br><br><br></p>
			</div><!-- .entry-content -->

	<footer class="entry-footer">
		<span class="update">Updated: <a href="https://norfolkinfosec.com/emissary-panda-dll-backdoor/" rel="bookmark"><time class="published updated" datetime="2019-07-22T03:49:59+00:00">July 22, 2019</time></a></span><br><span class="tags-links">Tags: <a href="https://norfolkinfosec.com/tag/apt27/" rel="tag">APT27</a>, <a href="https://norfolkinfosec.com/tag/emissary-panda/" rel="tag">Emissary Panda</a></span>	</footer><!-- .entry-footer -->
</article><!-- #post-## -->
						
	<nav class="navigation post-navigation" aria-label="Post navigation">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links"><div class="nav-previous"><a href="https://norfolkinfosec.com/http-listener/" rel="prev">Previous post</a></div><div class="nav-next"><a href="https://norfolkinfosec.com/the-lazarus-injector/" rel="next">Next post</a></div></div>
	</nav>
			
		
		</main><!-- #main -->
	</div><!-- #primary -->


<div id="secondary" class="widget-area egrid  grid-15 tablet-grid-15 mobile-grid-100 pull-85 tablet-pull-85" role="complementary">
</div><!-- #secondary -->

	</div><!-- #content -->

	<footer id="colophon" class="site-footer grid-container" role="contentinfo">
		<div class="grid-100 tablet-grid-100 mobile-grid-100"><div class="sepline2"></div></div>
		<div class="egrid  grid-70 tablet-grid-70 mobile-grid-100" id="footer-widget-copyright">
					</div>
		<div class=" grid-30 tablet-grid-30 mobile-grid-100">
			<a id="designer" class="alignright" href="https://www.coralthemes.com/product/coral-dark-wordpress-theme/">Free dark wordpress theme</a>
		</div>
		
	</footer><!-- #colophon -->
</div><!-- #page -->

<script type="text/javascript" src="https://norfolkinfosec.com/wp-content/themes/coral-dark/js/jquery.smartmenus.min.js?ver=0.9.7" id="smartmenus-js"></script>
<script type="text/javascript" src="https://norfolkinfosec.com/wp-content/themes/coral-dark/js/skip-link-focus-fix.js?ver=20130115" id="coral-dark-skip-link-focus-fix-js"></script>
<script type="text/javascript" id="coral-dark-script-js-extra">
/* <![CDATA[ */
var nivoSliderParams = {"effect":"fade","animspeed":"500","pausetime":"5000"};
/* ]]> */
</script>
<script type="text/javascript" src="https://norfolkinfosec.com/wp-content/themes/coral-dark/js/functions.js?ver=20160427" id="coral-dark-script-js"></script>

</body>
</html>
