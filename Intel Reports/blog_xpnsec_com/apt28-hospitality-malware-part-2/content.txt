<!DOCTYPE html>
<html lang="en">

<!-- Head tag -->
<head>
    
    <title>Analysis of APT28 hospitality malware (Part 2) - XPN InfoSec Blog</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!--Description-->
    
        <meta name="description" content="In the first part of this malware review, we looked at the VBA code used by APT28 to drop a DLL onto the victims&#39; machine as part of their recently highlighted hospitality campaign. In this post, we will look at the dropped file, and understand just what it does, and how we can analyse it using IDA Pro. So we know from the first post that we have a DLL, which is">
    

    <!--Author-->
    
        <meta name="author" content="Adam Chester">
    

    <!--Favicon-->
    
      <link rel="icon" href="/images/favicon.ico">
    

    <!--Open Graph Title-->
    
        <meta property="og:title" content="Analysis of APT28 hospitality malware (Part 2)"/>
    

    <!--Open Graph Site Name-->
    <meta property="og:site_name" content="XPN InfoSec Blog"/>

    <!--Page Cover-->
    
        <meta property="og:image" content="https://res.cloudinary.com/xpnsec/image/upload/images/2017/08/Kuma.png" />
    

    <meta name="twitter:site" content="@_xpn_"/>
<meta name="twitter:creator" content="@_xpn_"/>

    <meta name="twitter:card" content="summary_large_image"/>
    <meta name="twitter:title" content="@_xpn_ - Analysis of APT28 hospitality malware (Part 2)"/>
    <meta name="twitter:image" content="https://res.cloudinary.com/xpnsec/image/upload/images/2017/08/Kuma.png"/>

<meta name="twitter:url" content="https://blog.xpnsec.com/apt28-hospitality-malware-part-2/index.html"/>

    <meta name="theme-color" content="#ffffff">
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,300,700|Noto+Serif:400,400italic,700,700italic' rel='stylesheet' type='text/css'>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,700" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.17.1/themes/prism.min.css" rel="stylesheet" />
    <!-- Custom CSS -->
    
<link rel="stylesheet" href="/sass/main.css">


    <!-- Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-X2JVQCPYBP"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-X2JVQCPYBP');
</script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.11.0/styles/default.min.css" integrity="sha384-zhIsEafzyQWHSoMCQ4BfT8ZlRXQyIFwAHAJn32PNdsb8n6tVysGZSLpEEIvCskw4" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.11.0/highlight.min.js" integrity="sha384-vG5ueWbnY1VP7nl03G97FIV56vNtYfp+rm3tvRLHeQZhRzq1kLd1nZZhYeQ+00u7" crossorigin="anonymous"></script>
    <script>hljs.initHighlightingOnLoad();</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js" integrity="sha256-0rguYS0qgS6L4qVzANq4kjxPLtvnp5nn2nB5G1lWRv4=" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/26753e0838.js"></script>
<meta name="generator" content="Hexo 7.1.1"><link rel="alternate" href="/rss.xml" title="XPN InfoSec Blog" type="application/rss+xml">
</head>


<body id="top">
  <div class="lateral">
    <aside class="author">
      <a href="https://blog.xpnsec.com"><img class="profile-image" src="/images/profile-image.jpg" alt="avatar" /></a>
      <a href="https://blog.xpnsec.com"><p class="title">XPN's InfoSec Blog</p></a>
      <p class="name">Adam Chester</p>
      <p class="about">Hacker and Infosec Researcher</p>
      <ul class="social">
        <li><a href="https://blog.xpnsec.com/tags" data-description="Blog Tags"><i class="fas fa-tags" aria-hidden="true"></i></a></li>
        <li><a href="https://blog.xpnsec.com/about" data-description="About Me"><i class="fas fa-address-card" aria-hidden="true"></i></a></li>
        <li><a href="https://twitter.com/_xpn_" target="_blank" data-description="Twitter"><i class="fab fa-twitter" aria-hidden="true"></i></a></li>
        <li><a href="https://www.linkedin.com/in/xpn" target="_blank" data-description="LinkedIn"><i class="fab fa-linkedin" aria-hidden="true"></i></a></li>
        <li><a href="mailto:xpnsec[at]protonmail.com" target="_blank" data-description="Email"><i class="fas fa-envelope" aria-hidden="true"></i></a></li>
        <li><a href="https://github.com/xpn" target="_blank" data-description="GitHub"><i class="fab fa-github" aria-hidden="true"></i></a></li>
        <li><a href="https://blog.xpnsec.com/rss/" target="_blank" data-description="RSS"><i class="fas fa-rss"></i></a></li>
      </ul>
      <div id="link-info"></div>
    </aside>
  </div>
  <div class="home-template home">
    <!--[if lt IE 8]>
      <p class="browsehappy">You are using an <strong>outdated</strong> browser. Please <a target="_blank" rel="noopener" href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
    <![endif]-->
    <header class="site-header"> 
      <h2><a class="logo ir" href="https://blog.xpnsec.com" title="XPN InfoSec Blog">XPN InfoSec Blog</a></h2>
    </header>
    <div class="container clearfix">
      <main class="content" role="main">
        <div  class="post-template">
  <article class="post">
    <a class="btn" href="https://blog.xpnsec.com" title="Back to homepage">« Back to home</a>


      <h1 itemprop="name">
        <a href="/apt28-hospitality-malware-part-2/">Analysis of APT28 hospitality malware (Part 2)</a>
      </h1>


<footer class="post-info">
  Posted on 
      <span class="post-meta">
        <time>
          2017-08-13
        </time>
        
          <span>Tagged in </span>
        
        
        <a href="/tags#reversing" class="button small">reversing</a>, <a href="/tags#malware" class="button small">malware</a>, <a href="/tags#apt28" class="button small">apt28</a>
      </span>

  

  </footer>


<p>In the <a href="/apt28-hospitality-malware/">first part</a> of this malware review, we looked at the VBA code used by APT28 to drop a DLL onto the victims’ machine as part of their recently highlighted hospitality campaign.</p>
<p>In this post, we will look at the dropped file, and understand just what it does, and how we can analyse it using IDA Pro.</p>
<p>So we know from the first post that we have a DLL, which is run using the following command:</p>
<pre><code>rundll32.exe %APPDATA%\user.dat,#1</code></pre><p>Loading the extracted DLL into IDA, the first thing that we notice is that we have an exported function of <code>load</code> with an ordinal of 1:</p>
<p><img src="https://res.cloudinary.com/xpnsec/image/upload/images/2017/08/dll_entry.png" alt=""></p>
<p>We know from the rundll32.exe command that this will be our entry point, so we start our analysis here.</p>
<p>Within the <code>load</code> function, a number of strings are constructed on the stack in Unicode, which when decoded look like this:</p>
<p><img src="https://res.cloudinary.com/xpnsec/image/upload/images/2017/08/decoded_unicode.png" alt=""></p>
<p>Interestingly, one of the strings of <code>mvtband.dat</code> closely matches with the C2 server identified by FireEye of <code>mvtband.net</code>.</p>
<p>Entering the first function at address <code>10001000h</code>, we see another Unicode string constructed on the stack of “Environment” before <code>RegOpenKeyExW</code> is called to open a handle to <code>HKCU\Environment</code>.</p>
<p>Next a path is constructed of <code>%appdata%\mrset.bat</code> and written to the <code>UserInitMprLogonScript</code> registry value within <code>HKCU\Environment</code>:</p>
<p><img src="https://res.cloudinary.com/xpnsec/image/upload/images/2017/08/regkey.png" alt=""></p>
<p><em>Note: If we stop and look for other examples of malware using this technique, we can see a number of <a target="_blank" rel="noopener" href="https://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/Troj~Sofacy-B/detailed-analysis.aspx">related posts</a> unsurprisingly pointing to other Sofacy malware droppers using the same method.</em></p>
<p>Continuing to the next function, we find what immediately appears to be a decryption loop, using a fixed XOR key of 0x26:</p>
<p><img src="https://res.cloudinary.com/xpnsec/image/upload/images/2017/08/xor.png" alt=""></p>
<p>One the bytes at this address are decrypted, the contents are written to <code>%appdata%\mvtband.dat</code>.</p>
<p>This is a perfect opportunity to use IDAPython to recover the encrypted data. We know from the disassembly that the loop runs for 0x7600 bytes, and XOR’s a byte at a time from the address 0x10009B90 with a fixed key of 0x26. Translating this into IDAPython, we have the following script:</p>
<pre><code>v = &quot;&quot;
bytes = idaapi.get_many_bytes(0x10009B90, 0x7600)
for i in range(0,len(bytes)):
    v += chr(ord(bytes[i]) ^ 0x26)

f = open(&quot;out.bin&quot;, &quot;wb&quot;)
f.write(v)
f.close()</code></pre><p>Once executed, this script will decrypt the contents of address <code>0x10009B90</code> and write the output to <code>out.bin</code>.</p>
<p>An initial review of the decrypted contents show that this is a PE32 DLL, and if we upload the sample to <a target="_blank" rel="noopener" href="https://virustotal.com/#/file/8c47961181d9929333628af20bdd750021e925f40065374e6b876e3b8afbba57/detection">VirusTotal</a> we see that a matching sample was first seen on 17-07-2017 with a name of <code>mvtband.dll</code> and signatures matching Sofacy:</p>
<p><img src="https://res.cloudinary.com/xpnsec/image/upload/images/2017/08/vt.png" alt=""></p>
<p>Continuing into the final function of this dropper, we find a similar decryption loop for a different memory location and the same XOR key:</p>
<p><img src="https://res.cloudinary.com/xpnsec/image/upload/images/2017/08/xor2.png" alt=""></p>
<p>Repurposing our above IDAPython script, we can extract the contents with the following:</p>
<pre><code>v = &quot;&quot;
bytes = idaapi.get_many_bytes(0x10009B20, 0x6A)
for i in range(0,len(bytes)):
    v += chr(ord(bytes[i]) ^ 0x26)

f = open(&quot;out2.bin&quot;, &quot;wb&quot;)
f.write(v)
f.close()</code></pre><p>Reviewing the decrypted contents, we find the following:</p>
<pre><code>set inst_pck = &quot;%appdata%\mvtband.dat&quot;
if NOT exist %inst_pck % (exit)
start rundll32.exe %inst_pck %,#1</code></pre><p>This simple .bat file is being used by the <code>UserInitMprLogonScript</code> registry value on reboot to launch the <code>mvtband.dat</code> payload via rundll32.exe.</p>
<p>Once the .bat file script is decrypted by the dropper, the contents are written to <code>%appdata%\mrset.bat</code> before being launched using <code>CreateProcess</code>.</p>
<p>And there we have it, APT28’s simple dropper and persistence malware, with a bit of IDAPython reversing thrown in. We see that this DLL functions to decrypt 2 embedded payloads, “mrset.bat” which is a BAT file executed by “UserInitMprLogonScript”, and “mvtband.dat” which is the main payload of the malware which is executed via rundll32.exe.</p>
<p>So what are the takeaways from this for our red-team engagements? Well first, we see that adversaries are now increasingly using rundll32.exe in malware campaigns, which allows a payload to be stored without a typical .exe extension. More importantly, this also gives malware a better chance at being successfully executed within a restricted environment which whitelists Microsoft signed binaries.</p>
<p>Secondly, we have <code>UserInitMprLogonScript</code> being used for persistence to launch a .bat file as a GPO script. While certainly not unheard of, the use of a GPO value is less likely to draw attention than say, adding a RUN key value, or adding a new schtask.</p>
<p>Hopefully this has been a good introduction to the APT28 dropper and how we can use IDAPython during a reversing exercise, and as always, comments and feedback are welcome via the usual channels.</p>

  </article>
</div>

      </main> 
    </div>
    <footer class="main-footer">
  <div class="container clearfix">
    <a href="https://blog.xpnsec.com/rss/" title="RSS Feed"><i class="fa fa-rss"></i></a>
  </div>
</footer>

    <script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>
    
<script src="/js/skel.min.js"></script>

    
<script src="/js/main.js"></script>

    </div>
  </body>
</html>
