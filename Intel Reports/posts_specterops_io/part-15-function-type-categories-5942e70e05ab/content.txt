<!doctype html><html lang="en"><head><title data-rh="true">Part 15: Function Type Categories | by Jared Atkinson | Jan, 2025 | Posts By SpecterOps Team Members</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2025-01-07T16:06:35.888Z"/><meta data-rh="true" name="title" content="Part 15: Function Type Categories | by Jared Atkinson | Jan, 2025 | Posts By SpecterOps Team Members"/><meta data-rh="true" property="og:title" content="Part 15: Function Type Categories"/><meta data-rh="true" property="al:android:url" content="medium://p/5942e70e05ab"/><meta data-rh="true" property="al:ios:url" content="medium://p/5942e70e05ab"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="Welcome back to Part 15 of the On Detection: Tactical to Functional blog series. I wrote this article to serve as a resource for those attempting to create tool graphs to describe the capabilities of…"/><meta data-rh="true" property="og:description" content="Seven Ways to View API Functions"/><meta data-rh="true" property="og:url" content="https://posts.specterops.io/part-15-function-type-categories-5942e70e05ab"/><meta data-rh="true" property="al:web:url" content="https://posts.specterops.io/part-15-function-type-categories-5942e70e05ab"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:687/1*PyHOF2it3XEucvFC4018wA.png"/><meta data-rh="true" property="article:author" content="https://medium.com/@jaredcatkinson"/><meta data-rh="true" name="author" content="Jared Atkinson"/><meta data-rh="true" name="robots" content="index,noarchive,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="Part 15: Function Type Categories"/><meta data-rh="true" name="twitter:site" content="@specterops"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/5942e70e05ab"/><meta data-rh="true" property="twitter:description" content="Seven Ways to View API Functions"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:687/1*PyHOF2it3XEucvFC4018wA.png"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:creator" content="@jaredcatkinson"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="20 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/resize:fill:256:256/1*D-FDlfkqivRBQZoESrwtqw.png"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:304:304/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:240:240/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:152:152/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:120:120/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156"/><link data-rh="true" rel="mask-icon" href="https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png" color="#171717"/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://medium.com/@jaredcatkinson"/><link data-rh="true" rel="canonical" href="https://posts.specterops.io/part-15-function-type-categories-5942e70e05ab"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/5942e70e05ab"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*PyHOF2it3XEucvFC4018wA.png"],"url":"https:\u002F\u002Fposts.specterops.io\u002Fpart-15-function-type-categories-5942e70e05ab","dateCreated":"2025-01-07T16:06:35.888Z","datePublished":"2025-01-07T16:06:35.888Z","dateModified":"2025-01-07T17:25:41.251Z","headline":"Part 15: Function Type Categories - Posts By SpecterOps Team Members","name":"Part 15: Function Type Categories - Posts By SpecterOps Team Members","description":"Welcome back to Part 15 of the On Detection: Tactical to Functional blog series. I wrote this article to serve as a resource for those attempting to create tool graphs to describe the capabilities of…","identifier":"5942e70e05ab","author":{"@type":"Person","name":"Jared Atkinson","url":"https:\u002F\u002Fposts.specterops.io\u002F@jaredcatkinson"},"creator":["Jared Atkinson"],"publisher":{"@type":"Organization","name":"Posts By SpecterOps Team Members","url":"posts.specterops.io","logo":{"@type":"ImageObject","width":149,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:298\u002F1*s-5BWBr8XsgtIU5azKNhZQ.jpeg"}},"mainEntityOfPage":"https:\u002F\u002Fposts.specterops.io\u002Fpart-15-function-type-categories-5942e70e05ab"}</script><style type="text/css" data-fela-rehydration="605" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}.grecaptcha-badge{visibility:hidden}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="605" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{width:auto}.av path{fill:#242424}.aw{height:25px}.ax{margin-left:16px}.ay{border:none}.az{border-radius:20px}.ba{width:240px}.bb{background:#F9F9F9}.bc path{fill:#6B6B6B}.be{outline:none}.bf{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bg{font-size:14px}.bh{width:100%}.bi{padding:10px 20px 10px 0}.bj{background-color:transparent}.bk{color:#242424}.bl::placeholder{color:#6B6B6B}.bm{display:inline-block}.bn{margin-left:12px}.bo{margin-right:12px}.bp{border-radius:4px}.bq{margin-left:24px}.br{height:24px}.bx{background-color:#F9F9F9}.by{border-radius:50%}.bz{height:32px}.ca{width:32px}.cb{justify-content:center}.ch{max-width:680px}.ci{min-width:0}.cj{animation:k1 1.2s ease-in-out infinite}.ck{height:100vh}.cl{margin-bottom:16px}.cm{margin-top:48px}.cn{align-items:flex-start}.co{flex-direction:column}.cp{justify-content:space-between}.cq{margin-bottom:24px}.cw{width:80%}.cx{background-color:#F2F2F2}.dd{height:44px}.de{width:44px}.df{margin:auto 0}.dg{margin-bottom:4px}.dh{height:16px}.di{width:120px}.dj{width:80px}.dp{margin-bottom:8px}.dq{width:96%}.dr{width:98%}.ds{width:81%}.dt{margin-left:8px}.du{color:#6B6B6B}.dv{font-size:13px}.dw{height:100%}.ep{color:#FFFFFF}.eq{fill:#FFFFFF}.er{background:rgba(128, 128, 183, 1)}.es{border-color:rgba(128, 128, 183, 1)}.ew:disabled{cursor:inherit !important}.ex:disabled{opacity:0.3}.ey:disabled:hover{background:rgba(128, 128, 183, 1)}.ez:disabled:hover{border-color:rgba(128, 128, 183, 1)}.fa{border-radius:99em}.fb{border-width:1px}.fc{border-style:solid}.fd{box-sizing:border-box}.fe{text-decoration:none}.ff{text-align:center}.fi{margin-right:32px}.fj{position:relative}.fk{fill:#6B6B6B}.fn{background:transparent}.fo svg{margin-left:4px}.fp svg{fill:#6B6B6B}.fr{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.fs{position:absolute}.fz{margin:0 24px}.gd{background:rgba(255, 255, 255, 1)}.ge{border:1px solid #F2F2F2}.gf{box-shadow:0 1px 4px #F2F2F2}.gg{max-height:100vh}.gh{overflow-y:auto}.gi{left:0}.gj{top:calc(100vh + 100px)}.gk{bottom:calc(100vh + 100px)}.gl{width:10px}.gm{pointer-events:none}.gn{word-break:break-word}.go{word-wrap:break-word}.gp:after{display:block}.gq:after{content:""}.gr:after{clear:both}.gs{line-height:18px}.gt{letter-spacing:0.077em}.gu{font-style:normal}.ha{margin-bottom:-0.31em}.hb{text-transform:uppercase}.hc{line-height:1.23}.hd{letter-spacing:0}.he{font-weight:700}.hu{margin-top:12px}.hv{margin-bottom:-0.27em}.hw{line-height:1.394}.ir{align-items:baseline}.is{width:48px}.it{height:48px}.iu{border:2px solid rgba(255, 255, 255, 1)}.iv{z-index:0}.iw{box-shadow:none}.ix{border:1px solid rgba(0, 0, 0, 0.05)}.iy{margin-left:-12px}.iz{width:28px}.ja{height:28px}.jb{z-index:1}.jc{width:24px}.jd{margin-bottom:2px}.je{flex-wrap:nowrap}.jf{font-size:16px}.jg{line-height:24px}.ji{margin:0 8px}.jj{display:inline}.jk{color:rgba(128, 128, 183, 1)}.jl{fill:rgba(128, 128, 183, 1)}.jo{flex:0 0 auto}.jr{flex-wrap:wrap}.js{white-space:pre-wrap}.jt{margin-right:4px}.ju{overflow:hidden}.jv{max-height:20px}.jw{text-overflow:ellipsis}.jx{display:-webkit-box}.jy{-webkit-line-clamp:1}.jz{-webkit-box-orient:vertical}.ka{word-break:break-all}.kc{padding-left:8px}.kd{padding-right:8px}.le> *{flex-shrink:0}.lf{overflow-x:scroll}.lg::-webkit-scrollbar{display:none}.lh{scrollbar-width:none}.li{-ms-overflow-style:none}.lj{width:74px}.lk{flex-direction:row}.ll{z-index:2}.lo{-webkit-user-select:none}.lp{border:0}.lq{fill:rgba(117, 117, 117, 1)}.lt{outline:0}.lu{user-select:none}.lv> svg{pointer-events:none}.me{cursor:progress}.mf{opacity:1}.mg{padding:4px 0}.mj{margin-top:0px}.mk{width:16px}.mm{display:inline-flex}.ms{max-width:100%}.mt{padding:8px 2px}.mu svg{color:#6B6B6B}.nl{line-height:1.12}.nm{letter-spacing:-0.022em}.nn{font-weight:600}.og{margin-bottom:-0.28em}.oh{line-height:1.58}.oi{letter-spacing:-0.004em}.oj{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.pc{margin-bottom:-0.46em}.pd{text-decoration:underline}.pj{list-style-type:decimal}.pk{margin-left:30px}.pl{padding-left:0px}.pr{box-shadow:inset 3px 0 0 0 #242424}.ps{padding-left:23px}.pt{margin-left:-20px}.pu{font-style:italic}.pv{line-height:1.18}.qj{padding:2px 4px}.qk{font-size:75%}.ql> strong{font-family:inherit}.qm{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.qs{box-shadow:inset 0 0 0 1px #F2F2F2}.qt{padding:0px}.qu{padding:16px 20px}.qv{flex:1 1 auto}.qx{max-height:40px}.qy{-webkit-line-clamp:2}.qz{margin-top:8px}.ra{width:160px}.rb{background-image:url(https://miro.medium.com/v2/da:true/resize:fit:320/0*ZgxBYWxe613AcnQT)}.rc{background-origin:border-box}.rd{background-size:cover}.re{height:167px}.rf{background-position:50% 50%}.rg{clear:both}.rm{margin-left:auto}.rn{margin-right:auto}.ro{max-width:2663px}.ru{padding-top:5px}.rv{padding-bottom:5px}.rx{cursor:zoom-in}.ry{z-index:auto}.sa{height:auto}.sb{margin-top:10px}.sc{max-width:728px}.sf{max-width:612px}.sg{max-width:2180px}.sh{background:none}.si{background-image:url(https://miro.medium.com/v2/da:true/resize:fit:320/0*QmsI88PIAgqkQ-P5)}.sj{max-width:2409px}.sk{max-width:687px}.sl{max-width:1227px}.sm{background-image:url(https://miro.medium.com/v2/da:true/resize:fit:320/0*w6HH8Yy-eGfwoosw)}.sn{max-width:2740px}.so{max-width:629px}.sp{background-image:url(https://miro.medium.com/v2/da:true/resize:fit:320/0*SOkNjeRem-hAtC_D)}.sq{max-width:2544px}.sr{max-width:705px}.ss{background-image:url(https://miro.medium.com/v2/da:true/resize:fit:320/0*CveTZ7aEYEkM57D6)}.st{background-image:url(https://miro.medium.com/v2/resize:fit:320/1*ID7ooOK883qYYm4InMypRQ.png)}.su{max-width:5596px}.sv{max-width:637px}.sw{max-width:2048px}.sx{background-image:url(https://miro.medium.com/v2/da:true/resize:fit:320/0*pPOQ5MP8O-g1xjYR)}.sy{max-width:2930px}.sz{max-width:1766px}.ta{background-image:url(https://miro.medium.com/v2/da:true/resize:fit:320/0*P6JX3qw6FsZaG5nw)}.tb{max-width:2255px}.tc{max-width:389px}.td{margin-bottom:26px}.te{margin-top:6px}.tf{margin-right:8px}.tg{padding:8px 16px}.th{border-radius:100px}.ti{transition:background 300ms ease}.tk{white-space:nowrap}.tl{border-top:none}.tm{margin-bottom:50px}.tn{height:52px}.to{max-height:52px}.tp{box-sizing:content-box}.tq{position:static}.ts{max-width:155px}.ty{margin-right:20px}.tz{margin-bottom:64px}.ua{margin-bottom:48px}.uo{border-radius:2px}.uq{height:64px}.ur{width:64px}.us{align-self:flex-end}.ut{color:rgba(255, 255, 255, 1)}.uu{fill:rgba(255, 255, 255, 1)}.uv{background:rgba(25, 25, 25, 1)}.uw{border-color:rgba(25, 25, 25, 1)}.uz:disabled{opacity:0.1}.va:disabled:hover{background:rgba(25, 25, 25, 1)}.vb:disabled:hover{border-color:rgba(25, 25, 25, 1)}.vf{padding-right:4px}.vg{font-weight:500}.vn{margin-top:16px}.vo{margin-bottom:54px}.vp{height:0px}.vq{gap:18px}.vr{fill:rgba(61, 61, 61, 1)}.wd{border-bottom:solid 1px #E5E5E5}.we{margin-top:72px}.wf{padding:24px 0}.wg{margin-bottom:0px}.wh{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.et:hover{background:rgba(110, 110, 154, 1)}.eu:hover{border-color:rgba(110, 110, 154, 1)}.ev:hover{cursor:pointer}.fl:hover{color:#242424}.fm:hover{fill:#242424}.fq:hover svg{fill:#242424}.ft:hover{background-color:rgba(0, 0, 0, 0.1)}.jh:hover{text-decoration:underline}.jm:hover:not(:disabled){color:rgba(110, 110, 154, 1)}.jn:hover:not(:disabled){fill:rgba(110, 110, 154, 1)}.ls:hover{fill:rgba(8, 8, 8, 1)}.mh:hover{fill:#000000}.mi:hover p{color:#000000}.ml:hover{color:#000000}.mv:hover svg{color:#000000}.tj:hover{background-color:#F2F2F2}.up:hover{background-color:none}.ux:hover{background:#000000}.uy:hover{border-color:#242424}.vs:hover{fill:rgba(25, 25, 25, 1)}.bd:focus-within path{fill:#242424}.lr:focus{fill:rgba(8, 8, 8, 1)}.mw:focus svg{color:#000000}.rz:focus{transform:scale(1.01)}.lw:active{border-style:none}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bw{width:64px}.cg{margin:0 64px}.cv{height:48px}.dc{margin-bottom:52px}.do{margin-bottom:48px}.ef{font-size:14px}.eg{line-height:20px}.em{font-size:13px}.eo{padding:5px 12px}.fh{display:flex}.fy{margin-bottom:50px}.gc{max-width:680px}.gz{margin-top:3.88em}.hr{font-size:42px}.hs{line-height:52px}.ht{letter-spacing:-0.011em}.ij{font-size:22px}.ik{margin-top:0.92em}.il{line-height:28px}.iq{align-items:center}.kq{border-top:solid 1px #F2F2F2}.kr{border-bottom:solid 1px #F2F2F2}.ks{margin:32px 0 0}.kt{padding:3px 8px}.lc> *{margin-right:24px}.ld> :last-child{margin-right:0}.md{margin-top:0px}.mr{margin:0}.oc{font-size:24px}.od{margin-top:1.95em}.oe{line-height:30px}.of{letter-spacing:-0.016em}.oy{font-size:20px}.oz{margin-top:0.94em}.pa{line-height:32px}.pb{letter-spacing:-0.003em}.pi{margin-top:2.14em}.pq{margin-top:1.14em}.qg{margin-top:1.72em}.qh{line-height:24px}.qi{letter-spacing:0}.qr{margin-top:32px}.rl{max-width:1192px}.rt{margin-top:56px}.tx{display:inline-block}.ub{flex-direction:row}.ue{margin-bottom:0}.uf{margin-right:20px}.vc{max-width:500px}.vx{margin:40px 0 0}.wc{padding-top:72px}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.mc{margin-top:0px}.sd{margin-left:auto}.se{text-align:center}.tw{display:inline-block}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.mb{margin-top:0px}.tv{display:inline-block}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.lz{margin-top:0px}.ma{margin-right:0px}.qw{padding:10px 12px 10px}.tu{display:inline-block}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dx{font-size:13px}.dy{line-height:20px}.eh{padding:0px 8px 1px}.fu{margin-bottom:2px}.gv{margin-top:2.64em}.hf{font-size:32px}.hg{line-height:38px}.hh{letter-spacing:-0.014em}.hx{font-size:18px}.hy{margin-top:0.79em}.hz{line-height:24px}.im{align-items:flex-start}.jp{flex-direction:column}.ke{margin:24px -24px 0}.kf{padding:0}.ku> *{margin-right:8px}.kv> :last-child{margin-right:24px}.lm{margin-left:0px}.lx{margin-top:0px}.ly{margin-right:0px}.mn{margin:0}.mx{border:1px solid #F2F2F2}.my{border-radius:99em}.mz{padding:0px 16px 0px 12px}.na{height:38px}.nb{align-items:center}.nd svg{margin-right:8px}.no{font-size:20px}.np{margin-top:1.2em}.nq{letter-spacing:0}.ok{margin-top:0.67em}.ol{line-height:28px}.om{letter-spacing:-0.003em}.pe{margin-top:1.56em}.pm{margin-top:1.34em}.pw{font-size:16px}.px{margin-top:1.23em}.qn{margin-top:24px}.rh{max-width:100%}.rp{margin-top:40px}.tt{display:inline-block}.um{margin-bottom:20px}.un{margin-right:0}.vh{font-size:24px}.vi{line-height:30px}.vj{letter-spacing:-0.016em}.vt{margin:32px 0 0}.vy{padding-top:48px}.nc:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ed{font-size:14px}.ee{line-height:20px}.ek{font-size:13px}.el{padding:5px 12px}.fg{display:flex}.fx{margin-bottom:50px}.gb{max-width:680px}.gy{margin-top:3.88em}.ho{font-size:42px}.hp{line-height:52px}.hq{letter-spacing:-0.011em}.ig{font-size:22px}.ih{margin-top:0.92em}.ii{line-height:28px}.ip{align-items:center}.km{border-top:solid 1px #F2F2F2}.kn{border-bottom:solid 1px #F2F2F2}.ko{margin:32px 0 0}.kp{padding:3px 8px}.la> *{margin-right:24px}.lb> :last-child{margin-right:0}.mq{margin:0}.ny{font-size:24px}.nz{margin-top:1.95em}.oa{line-height:30px}.ob{letter-spacing:-0.016em}.ou{font-size:20px}.ov{margin-top:0.94em}.ow{line-height:32px}.ox{letter-spacing:-0.003em}.ph{margin-top:2.14em}.pp{margin-top:1.14em}.qd{margin-top:1.72em}.qe{line-height:24px}.qf{letter-spacing:0}.qq{margin-top:32px}.rk{max-width:1192px}.rs{margin-top:56px}.uc{flex-direction:row}.ug{margin-bottom:0}.uh{margin-right:20px}.vd{max-width:500px}.vw{margin:40px 0 0}.wb{padding-top:72px}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bu{width:64px}.ce{margin:0 48px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{font-size:13px}.ec{line-height:20px}.ej{padding:0px 8px 1px}.fw{margin-bottom:50px}.ga{max-width:680px}.gx{margin-top:3.88em}.hl{font-size:42px}.hm{line-height:52px}.hn{letter-spacing:-0.011em}.id{font-size:22px}.ie{margin-top:0.92em}.if{line-height:28px}.io{align-items:center}.ki{border-top:solid 1px #F2F2F2}.kj{border-bottom:solid 1px #F2F2F2}.kk{margin:32px 0 0}.kl{padding:3px 8px}.ky> *{margin-right:24px}.kz> :last-child{margin-right:0}.mp{margin:0}.nu{font-size:24px}.nv{margin-top:1.95em}.nw{line-height:30px}.nx{letter-spacing:-0.016em}.oq{font-size:20px}.or{margin-top:0.94em}.os{line-height:32px}.ot{letter-spacing:-0.003em}.pg{margin-top:2.14em}.po{margin-top:1.14em}.qa{margin-top:1.72em}.qb{line-height:24px}.qc{letter-spacing:0}.qp{margin-top:32px}.rj{max-width:100%}.rr{margin-top:56px}.ud{flex-direction:row}.ui{margin-bottom:0}.uj{margin-right:20px}.ve{max-width:500px}.vv{margin:40px 0 0}.wa{padding-top:72px}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bt{width:24px}.cd{margin:0 24px}.cs{height:40px}.cz{margin-bottom:44px}.dl{margin-bottom:32px}.dz{font-size:13px}.ea{line-height:20px}.ei{padding:0px 8px 1px}.fv{margin-bottom:2px}.gw{margin-top:2.64em}.hi{font-size:32px}.hj{line-height:38px}.hk{letter-spacing:-0.014em}.ia{font-size:18px}.ib{margin-top:0.79em}.ic{line-height:24px}.in{align-items:flex-start}.jq{flex-direction:column}.kg{margin:24px 0 0}.kh{padding:0}.kw> *{margin-right:8px}.kx> :last-child{margin-right:8px}.ln{margin-left:0px}.mo{margin:0}.ne{border:1px solid #F2F2F2}.nf{border-radius:99em}.ng{padding:0px 16px 0px 12px}.nh{height:38px}.ni{align-items:center}.nk svg{margin-right:8px}.nr{font-size:20px}.ns{margin-top:1.2em}.nt{letter-spacing:0}.on{margin-top:0.67em}.oo{line-height:28px}.op{letter-spacing:-0.003em}.pf{margin-top:1.56em}.pn{margin-top:1.34em}.py{font-size:16px}.pz{margin-top:1.23em}.qo{margin-top:24px}.ri{max-width:100%}.rq{margin-top:40px}.uk{margin-bottom:20px}.ul{margin-right:0}.vk{font-size:24px}.vl{line-height:30px}.vm{letter-spacing:-0.016em}.vu{margin:32px 0 0}.vz{padding-top:48px}.nj:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="print">.tr{display:none}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="(orientation: landscape) and (max-width: 903.98px)">.kb{max-height:none}</style><style type="text/css" data-fela-rehydration="605" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.rw{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="p q r s t u v w x i d y z"><a class="du ag dv bf ak b am an ao ap aq ar as at s u w i d q dw z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5942e70e05ab&amp;%7Efeature=LoOpenInAppButton&amp;%7Echannel=ShowPostUnderCollection&amp;source=---top_nav_layout_nav----------------------------------" rel="noopener follow">Open in app<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="none" viewBox="0 0 10 10" class="dt"><path fill="currentColor" d="M.985 8.485a.375.375 0 1 0 .53.53zM8.75 1.25h.375A.375.375 0 0 0 8.75.875zM8.375 6.5a.375.375 0 1 0 .75 0zM3.5.875a.375.375 0 1 0 0 .75zm-1.985 8.14 7.5-7.5-.53-.53-7.5 7.5zm6.86-7.765V6.5h.75V1.25zM3.5 1.625h5.25v-.75H3.5z"></path></svg></a><div class="ab q"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><a class="bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff" data-testid="headerSignUpButton" href="https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;source=post_page---top_nav_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign up</a></span></p><div class="ax l"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSignInButton" href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;source=post_page---top_nav_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign in</a></span></p></div></div></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" href="https://medium.com/?source=---top_nav_layout_nav----------------------------------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="719" height="160" fill="none" viewBox="0 0 719 160" class="au av aw"><path fill="#242424" d="m174.104 9.734.215-.047V8.02H130.39L89.6 103.89 48.81 8.021H1.472v1.666l.212.047c8.018 1.81 12.09 4.509 12.09 14.242V137.93c0 9.734-4.087 12.433-12.106 14.243l-.212.047v1.671h32.118v-1.665l-.213-.048c-8.018-1.809-12.089-4.509-12.089-14.242V30.586l52.399 123.305h2.972l53.925-126.743V140.75c-.687 7.688-4.721 10.062-11.982 11.701l-.215.05v1.652h55.948v-1.652l-.215-.05c-7.269-1.639-11.4-4.013-12.087-11.701l-.037-116.774h.037c0-9.733 4.071-12.432 12.087-14.242m25.555 75.488c.915-20.474 8.268-35.252 20.606-35.507 3.806.063 6.998 1.312 9.479 3.714 5.272 5.118 7.751 15.812 7.368 31.793zm-.553 5.77h65.573v-.275c-.186-15.656-4.721-27.834-13.466-36.196-7.559-7.227-18.751-11.203-30.507-11.203h-.263c-6.101 0-13.584 1.48-18.909 4.16-6.061 2.807-11.407 7.003-15.855 12.511-7.161 8.874-11.499 20.866-12.554 34.343q-.05.606-.092 1.212a50 50 0 0 0-.065 1.151 85.807 85.807 0 0 0-.094 5.689c.71 30.524 17.198 54.917 46.483 54.917 25.705 0 40.675-18.791 44.407-44.013l-1.886-.664c-6.557 13.556-18.334 21.771-31.738 20.769-18.297-1.369-32.314-19.922-31.042-42.395m139.722 41.359c-2.151 5.101-6.639 7.908-12.653 7.908s-11.513-4.129-15.418-11.63c-4.197-8.053-6.405-19.436-6.405-32.92 0-28.067 8.729-46.22 22.24-46.22 5.657 0 10.111 2.807 12.236 7.704zm43.499 20.008c-8.019-1.897-12.089-4.722-12.089-14.951V1.309l-48.716 14.353v1.757l.299-.024c6.72-.543 11.278.386 13.925 2.83 2.072 1.915 3.082 4.853 3.082 8.987v18.66c-4.803-3.067-10.516-4.56-17.448-4.56-14.059 0-26.909 5.92-36.176 16.672-9.66 11.205-14.767 26.518-14.767 44.278-.003 31.72 15.612 53.039 38.851 53.039 13.595 0 24.533-7.449 29.54-20.013v16.865h43.711v-1.746zM424.1 19.819c0-9.904-7.468-17.374-17.375-17.374-9.859 0-17.573 7.632-17.573 17.374s7.721 17.374 17.573 17.374c9.907 0 17.375-7.47 17.375-17.374m11.499 132.546c-8.019-1.897-12.089-4.722-12.089-14.951h-.035V43.635l-43.714 12.551v1.705l.263.024c9.458.842 12.047 4.1 12.047 15.152v81.086h43.751v-1.746zm112.013 0c-8.018-1.897-12.089-4.722-12.089-14.951V43.635l-41.621 12.137v1.71l.246.026c7.733.813 9.967 4.257 9.967 15.36v59.279c-2.578 5.102-7.415 8.131-13.274 8.336-9.503 0-14.736-6.419-14.736-18.073V43.638l-43.714 12.55v1.703l.262.024c9.459.84 12.05 4.097 12.05 15.152v50.17a56.3 56.3 0 0 0 .91 10.444l.787 3.423c3.701 13.262 13.398 20.197 28.59 20.197 12.868 0 24.147-7.966 29.115-20.43v17.311h43.714v-1.747zm169.818 1.788v-1.749l-.213-.05c-8.7-2.006-12.089-5.789-12.089-13.49v-63.79c0-19.89-11.171-31.761-29.883-31.761-13.64 0-25.141 7.882-29.569 20.16-3.517-13.01-13.639-20.16-28.606-20.16-13.146 0-23.449 6.938-27.869 18.657V43.643L545.487 55.68v1.715l.263.024c9.345.829 12.047 4.181 12.047 14.95v81.784h40.787v-1.746l-.215-.053c-6.941-1.631-9.181-4.606-9.181-12.239V66.998c1.836-4.289 5.537-9.37 12.853-9.37 9.086 0 13.692 6.296 13.692 18.697v77.828h40.797v-1.746l-.215-.053c-6.94-1.631-9.18-4.606-9.18-12.239V75.066a42 42 0 0 0-.578-7.26c1.947-4.661 5.86-10.177 13.475-10.177 9.214 0 13.691 6.114 13.691 18.696v77.828z"></path></svg></a><div class="ax h"><div class="ab ay az ba bb q bc bd"><div class="bm" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bn bo ab"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z" clip-rule="evenodd"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ay be bf bg z bh bi bj bk bl" placeholder="Search" value=""/></div></div></div><div class="h k w fg fh"><div class="fi ab"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2Fnew-story&amp;source=---top_nav_layout_nav-----------------------new_post_topnav-----------" rel="noopener follow"><div class="bf b bg z du fj fk ab q fl fm"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" aria-label="Write"><path fill="currentColor" d="M14 4a.5.5 0 0 0 0-1zm7 6a.5.5 0 0 0-1 0zm-7-7H4v1h10zM3 4v16h1V4zm1 17h16v-1H4zm17-1V10h-1v10zm-1 1a1 1 0 0 0 1-1h-1zM3 20a1 1 0 0 0 1 1v-1zM4 3a1 1 0 0 0-1 1h1z"></path><path stroke="currentColor" d="m17.5 4.5-8.458 8.458a.25.25 0 0 0-.06.098l-.824 2.47a.25.25 0 0 0 .316.316l2.47-.823a.25.25 0 0 0 .098-.06L19.5 6.5m-2-2 2.323-2.323a.25.25 0 0 1 .354 0l1.646 1.646a.25.25 0 0 1 0 .354L19.5 6.5m-2-2 2 2"></path></svg><div class="dt l">Write</div></div></a></span></div></div><div class="k j i d"><div class="fi ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" href="https://medium.com/search?source=---top_nav_layout_nav----------------------------------" rel="noopener follow"><div class="bf b bg z du fj fk ab q fl fm"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" aria-label="Search"><path fill="currentColor" fill-rule="evenodd" d="M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z" clip-rule="evenodd"></path></svg></div></a></div></div><div class="fi h k j"><div class="ab q"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><a class="bf b dx dy eh dz ea ei eb ec ej ek ee el em eg eo ep eq er es et eu ev ew ex ey ez fa fb fc fd bm fe ff" data-testid="headerSignUpButton" href="https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;source=post_page---top_nav_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign up</a></span></p><div class="ax l"><p class="bf b dx dy dz ea eb ec ed ee ef eg du"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSignInButton" href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;source=post_page---top_nav_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign in</a></span></p></div></div></div><div class="l" aria-hidden="false"><button class="ay fn am ab q ao fo fp fq" aria-label="user options menu" data-testid="headerUserIcon"><div class="l fj"><img alt="" class="l fd by bz ca cx" src="https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png" width="32" height="32" loading="lazy" role="presentation"/><div class="fr by l bz ca fs n ay ft"></div></div></button></div></div></div><div class="l"><div class="fu fv fw fx fy l"><div class="ab cb"><div class="ci bh fz ga gb gc"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="fs gi gj gk gl gm"></div><div class="gn go gp gq gr"><div class="ab cb"><div class="ci bh fz ga gb gc"><h2 id="6897" class="gs gt gu bf b dv gv gw gx gy gz ha du hb" aria-label="kicker paragraph">On Detection: Tactical to Functional</h2><div><h1 id="6b54" class="pw-post-title hc hd gu bf he hf hg hh hi hj hk hl hm hn ho hp hq hr hs ht hu hv bk" data-testid="storyTitle">Part 15: Function Type Categories</h1></div><div><h2 id="9c4a" class="pw-subtitle-paragraph hw hd gu bf b hx hy hz ia ib ic id ie if ig ih ii ij ik il cq du">Seven Ways to View API Functions</h2><div><div class="speechify-ignore ab cp"><div class="speechify-ignore bh l"><div class="im in io ip iq ab"><div><div class="ab ir"><div><div class="bm" aria-hidden="false"><a href="https://medium.com/@jaredcatkinson?source=post_page---byline--5942e70e05ab--------------------------------" rel="noopener follow"><div class="l is it by iu iv"><div class="l fj"><img alt="Jared Atkinson" class="l fd by dd de cx" src="https://miro.medium.com/v2/resize:fill:88:88/1*sRu1zCJZ_h69U4RuksJhKQ@2x.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="iw by l dd de fs n ix ft"></div></div></div></a></div></div><div class="iy ab fj"><div><div class="bm" aria-hidden="false"><a href="https://posts.specterops.io/?source=post_page---byline--5942e70e05ab--------------------------------" rel="noopener  ugc nofollow"><div class="l iz ja by iu jb"><div class="l fj"><img alt="Posts By SpecterOps Team Members" class="l fd by br jc cx" src="https://miro.medium.com/v2/resize:fill:48:48/1*D-FDlfkqivRBQZoESrwtqw.png" width="24" height="24" loading="lazy" data-testid="publicationPhoto"/><div class="iw by l br jc fs n ix ft"></div></div></div></a></div></div></div></div></div><div class="bn bh l"><div class="ab"><div style="flex:1"><span class="bf b bg z bk"><div class="jd ab q"><div class="ab q je"><div class="ab q"><div><div class="bm" aria-hidden="false"><p class="bf b jf jg bk"><a class="af ag ah ai aj ak al am an ao ap aq ar jh" data-testid="authorName" href="https://medium.com/@jaredcatkinson?source=post_page---byline--5942e70e05ab--------------------------------" rel="noopener follow">Jared Atkinson</a></p></div></div></div><span class="ji jj" aria-hidden="true"><span class="bf b bg z du">·</span></span><p class="bf b jf jg du"><span><a class="jk jl ah ai aj ak al am an ao ap aq ar ex jm jn" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb206c297df42&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;user=Jared+Atkinson&amp;userId=b206c297df42&amp;source=post_page-b206c297df42--byline--5942e70e05ab---------------------post_header-----------" rel="noopener follow">Follow</a></span></p></div></div></span></div></div><div class="l jo"><span class="bf b bg z du"><div class="ab cn jp jq jr"><div class="fu fv ab"><div class="bf b bg z du ab js"><span class="jt l jo">Published in</span><div><div class="l" aria-hidden="false"><a class="af ag ah ai aj ak al am an ao ap aq ar jh ab q" data-testid="publicationName" href="https://posts.specterops.io/?source=post_page---byline--5942e70e05ab--------------------------------" rel="noopener  ugc nofollow"><p class="bf b bg z ju jv jw jx jy jz ka kb bk">Posts By SpecterOps Team Members</p></a></div></div></div><div class="h k"><span class="ji jj" aria-hidden="true"><span class="bf b bg z du">·</span></span></div></div><span class="bf b bg z du"><div class="ab ae"><span data-testid="storyReadTime">20 min read</span><div class="kc kd l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="bf b bg z du">·</span></span></div>3 days ago</div></span></div></span></div></div></div><div class="ab cp ke kf kg kh ki kj kk kl km kn ko kp kq kr ks kt"><div class="h k w fg fh q"><div class="lj l"><div class="ab q lk ll"><div class="pw-multi-vote-icon fj jt lm ln lo"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fspecter-ops-posts%2F5942e70e05ab&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;user=Jared+Atkinson&amp;userId=b206c297df42&amp;source=---header_actions--5942e70e05ab---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="lp ao lq lr ls lt am lu lv lw lo"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l lx ly lz ma mb mc md"><p class="bf b dv z du"><span class="me">--</span></p></div></div></div><div><div class="bm" aria-hidden="false"><button class="ao lp mf mg ab q fk mh mi" aria-label="responses"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="mj"><path d="M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z"></path></svg></button></div></div></div><div class="ab q ku kv kw kx ky kz la lb lc ld le lf lg lh li"><div class="mk k j i d"></div><div class="h k"><div><div class="bm" aria-hidden="false"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerBookmarkButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5942e70e05ab&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;source=---header_actions--5942e70e05ab---------------------bookmark_footer-----------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="none" viewBox="0 0 25 25" class="du ml" aria-label="Add to list bookmark button"><path fill="currentColor" d="M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z"></path></svg></a></span></div></div></div><div class="fd mm cn"><div class="l ae"><div class="ab cb"><div class="mn mo mp mq mr ms ci bh"><div class="ab"><div class="bm bh" aria-hidden="false"><div><div class="bm" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af fk ah ai aj ak al mt an ao ap ex mu mv mi mw mx my mz na s nb nc nd ne nf ng nh u ni nj nk"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0m9-10C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2m3.376 10.416-4.599 3.066a.5.5 0 0 1-.777-.416V8.934a.5.5 0 0 1 .777-.416l4.599 3.066a.5.5 0 0 1 0 .832" clip-rule="evenodd"></path></svg><div class="j i d"><p class="bf b bg z du">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bm" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bm" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af fk ah ai aj ak al mt an ao ap ex mu mv mi mw mx my mz na s nb nc nd ne nf ng nh u ni nj nk"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1" clip-rule="evenodd"></path></svg><div class="j i d"><p class="bf b bg z du">Share</p></div></button></div></div></div></div></div></div></div></div></div><h1 id="f23e" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">Introduction</h1><p id="752f" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">Welcome back to Part 15 of the On Detection: Tactical to Functional blog series. I wrote this article to serve as a resource for those attempting to create <a class="af pd" rel="noopener ugc nofollow" target="_blank" href="/on-detection-from-tactical-to-functional-1349e51e1a03">tool graphs</a> to describe the capabilities of the attacker tools or malware samples they encounter. Throughout this series, I’ve analyzed many API functions and summarized my analysis through <a class="af pd" rel="noopener ugc nofollow" target="_blank" href="/understanding-the-function-call-stack-f08b5341efa4">function call stacks</a>. As I expanded the range of functions I’ve analyzed, I noticed that there is not a one-size-fits-all solution when creating function call stacks.</p><p id="3b0e" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">Overall, I’ve found that there are, at least, seven different types of functions:</p><ol class=""><li id="2ebc" class="oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc pj pk pl bk">Standard Functions (Syscalls)</li><li id="d83f" class="oh oi gu oj b hx pm ol om ia pn oo op oq po os ot ou pp ow ox oy pq pa pb pc pj pk pl bk">Sub-operations (NtQueryInformation* or NtSetInformation*)</li><li id="5d8d" class="oh oi gu oj b hx pm ol om ia pn oo op oq po os ot ou pp ow ox oy pq pa pb pc pj pk pl bk">Remote Procedure Calls (NdrClientCall*)</li><li id="e8ca" class="oh oi gu oj b hx pm ol om ia pn oo op oq po os ot ou pp ow ox oy pq pa pb pc pj pk pl bk">Local Security Authority Functions (LsaCallAuthenticationPackage)</li><li id="cd51" class="oh oi gu oj b hx pm ol om ia pn oo op oq po os ot ou pp ow ox oy pq pa pb pc pj pk pl bk">Driver IOCTLs (DeviceIoControl or NtFsControlFile)</li><li id="e534" class="oh oi gu oj b hx pm ol om ia pn oo op oq po os ot ou pp ow ox oy pq pa pb pc pj pk pl bk">Compound Functions (Multiple operations)</li><li id="bf26" class="oh oi gu oj b hx pm ol om ia pn oo op oq po os ot ou pp ow ox oy pq pa pb pc pj pk pl bk">Local Functions</li></ol><p id="36e3" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">In this article, I work to categorize functions based on their function type. To do so, I will introduce the category and what makes its functions unique, share a sample whose critical function exemplifies the category, provide the sample’s tool graph and explain how it works, and finally break down the specific function call stack that demonstrates the category in question. Ultimately, you should have the toolset to identify the category to which a given function belongs based on a few heuristics I will share along the journey. This knowledge will empower you to better understand and categorize the attacker tools or malware samples you encounter.</p><p id="0efe" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">This article is broken down into sections that describe and demonstrate the categories. I subdivide each section further into a “category introduction,” where I will explain the category at a high level; the “sample,” where I will introduce the tool or malware sample that we will analyze to learn about the category; the “tool graph,” where I will explain how the sample implements its functionality; and the “function call stack,” where I will focus on the sample’s critical function which exemplifies the category of focus.</p><blockquote class="pr ps pt"><p id="eda4" class="oh oi pu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk"><em class="gu">While this article follows several relevant articles that examine individual function types in depth, I consider it more of a preamble to such deep dives. Here, I will introduce two or three new function-type categories I have not previously discussed, but I plan to write a subsequent deep dive on each eventually.</em></p></blockquote><h1 id="e786" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">1. Standard Function (syscall)</h1><p id="3462" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">The first and most common category is the so-called standard functions. These functions are standard because they represent the most common construction and serve as excellent starting points for anyone interested in gaining experience building function call stacks. Standard functions typically involve multiple layers of redirection between DLLs but will inevitably pass the caller-supplied arguments to a system call (syscall) for execution in the kernel. If you’ve followed this series, you will be highly familiar with standard functions and know that we use the syscall as an abstraction layer, which I call an operation. As we progress into other categories, we will see that the operation will remain, but we will derive it differently.</p><h2 id="f7d5" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Sample</h2><p id="821b" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">Our standard function sample comes from DGRonpa’s excellent Process_Injection repository. I enjoy this repo because they have created simple proof-of-concept implementations for the Process Injection technique’s diverse set of procedures. If you are just getting started with implementing the analytical process I present in this series, I recommend you check out this project. It demonstrates how slight implementation changes can have a massive impact on the mutual detectability of malware samples. This article will focus on the <code class="cx qj qk ql qm b">Shellcode_Injection.cpp</code> sample, which implements the canonical process injection procedure. For those unfamiliar with process injection, it is primarily a defense evacuation technique used by attackers to inject or migrate their malicious code into an otherwise legitimate process, thus making them less susceptible to detection.</p><div class="qn qo qp qq qr qs"><a href="https://github.com/DGRonpa/Process_Injection/blob/main/Classical_Injeciton/Shellcode_Injection.cpp?source=post_page-----5942e70e05ab--------------------------------#L40-L48" rel="noopener  ugc nofollow" target="_blank"><div class="qt ab jo"><div class="qu ab co cb qv qw"><h2 class="bf he jf z ju qx jw jx qy jz kb hd bk">Process_Injection/Classical_Injeciton/Shellcode_Injection.cpp at main · DGRonpa/Process_Injection</h2><div class="qz l"><h3 class="bf b jf z ju qx jw jx qy jz kb du">Contribute to DGRonpa/Process_Injection development by creating an account on GitHub.</h3></div><div class="hu l"><p class="bf b dv z ju qx jw jx qy jz kb du">github.com</p></div></div><div class="ra l"><div class="rb l rc rd re ra rf ms qs"></div></div></div></a></div><h2 id="9dc3" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Tool Graph</h2></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn ro"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*NJSOO46f_sIkcHSkSYVYKw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*NJSOO46f_sIkcHSkSYVYKw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*NJSOO46f_sIkcHSkSYVYKw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*NJSOO46f_sIkcHSkSYVYKw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*NJSOO46f_sIkcHSkSYVYKw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*NJSOO46f_sIkcHSkSYVYKw.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*NJSOO46f_sIkcHSkSYVYKw.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*NJSOO46f_sIkcHSkSYVYKw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*NJSOO46f_sIkcHSkSYVYKw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*NJSOO46f_sIkcHSkSYVYKw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*NJSOO46f_sIkcHSkSYVYKw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*NJSOO46f_sIkcHSkSYVYKw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*NJSOO46f_sIkcHSkSYVYKw.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*NJSOO46f_sIkcHSkSYVYKw.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="799" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Tool Graph: Shellcode_Injection.cpp</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="5936" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">We can construct the tool graph by analyzing the source code at the link in the previous section. In doing so, we see that the sample begins by opening a handle to the target process, the process that the attacker intends to inject their code into, by calling the <code class="cx qj qk ql qm b">kernel32!OpenProcess</code> function. Next, the code passes the process handle to <code class="cx qj qk ql qm b">kernel32!VirtualAllocEx</code>. <code class="cx qj qk ql qm b">VirtualAllocEx</code> is a function that allows an application to allocate a buffer in the memory of a different or remote process. The memory buffer will hold the attacker’s shellcode. Next, the sample writes shellcode to the newly allocated buffer via the <code class="cx qj qk ql qm b">kernel32!WriteProcessMemory</code> function. Finally, the sample calls <code class="cx qj qk ql qm b">kernel32!CreateRemoteThread</code> to execute the shellcode in the target process, thus finalizing the injection routine.</p><h2 id="6096" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Function Call Stack</h2><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div class="rm rn sf"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*BnFj3eU5dM3y5aX4DSd3FQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*BnFj3eU5dM3y5aX4DSd3FQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*BnFj3eU5dM3y5aX4DSd3FQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*BnFj3eU5dM3y5aX4DSd3FQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*BnFj3eU5dM3y5aX4DSd3FQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*BnFj3eU5dM3y5aX4DSd3FQ.png 1100w, https://miro.medium.com/v2/resize:fit:1224/format:webp/1*BnFj3eU5dM3y5aX4DSd3FQ.png 1224w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 612px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*BnFj3eU5dM3y5aX4DSd3FQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*BnFj3eU5dM3y5aX4DSd3FQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*BnFj3eU5dM3y5aX4DSd3FQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*BnFj3eU5dM3y5aX4DSd3FQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*BnFj3eU5dM3y5aX4DSd3FQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*BnFj3eU5dM3y5aX4DSd3FQ.png 1100w, https://miro.medium.com/v2/resize:fit:1224/1*BnFj3eU5dM3y5aX4DSd3FQ.png 1224w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 612px"/><img alt="" class="bh ms sa c" width="612" height="2126" loading="eager" role="presentation"/></picture></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Function Call Stack: kernel32!CreateRemoteThread</figcaption></figure><p id="4c13" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">Based on my analysis of this sample, it appears that <code class="cx qj qk ql qm b">kernel32!CreateRemoteThread</code> is the sample’s critical function. I attribute this choice to the fact that <code class="cx qj qk ql qm b">CreateRemoteThread</code> is the function that causes the injection. When the sample calls <code class="cx qj qk ql qm b">CreateRemoteThread</code>, we can say that process injection has occurred. Let’s take a look at the function call stack for <code class="cx qj qk ql qm b">kernel32!CreateRemoteThread</code>. It is worth understanding the general flow we expect in standard functions.</p><p id="4ca0" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">By analyzing the function call stack, we find that the final function, before the Operation, is a system call (syscall) named <code class="cx qj qk ql qm b">NtCreateThreadEx</code>. Syscalls, like <code class="cx qj qk ql qm b">NtCreateThreadEx</code>, are responsible for transitioning execution from user-mode to kernel-mode. This transition serves as a boundary whereby analysts can treat the kernel-side functionality as opaque, as it is not standard for a user-mode application to interact with kernel code except through very specific windows like syscalls.</p><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sg"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*OnmPoETDJS_L85ynW4kMJw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*OnmPoETDJS_L85ynW4kMJw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*OnmPoETDJS_L85ynW4kMJw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*OnmPoETDJS_L85ynW4kMJw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*OnmPoETDJS_L85ynW4kMJw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*OnmPoETDJS_L85ynW4kMJw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*OnmPoETDJS_L85ynW4kMJw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*OnmPoETDJS_L85ynW4kMJw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*OnmPoETDJS_L85ynW4kMJw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*OnmPoETDJS_L85ynW4kMJw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*OnmPoETDJS_L85ynW4kMJw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*OnmPoETDJS_L85ynW4kMJw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*OnmPoETDJS_L85ynW4kMJw.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*OnmPoETDJS_L85ynW4kMJw.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ms sa c" width="700" height="245" loading="lazy" role="presentation"/></picture></div></div></figure><h1 id="5676" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">2. Sub-Operations</h1><p id="5d26" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">Now that we have built the foundation, we can look at functions that offer a slight variation. Like Standard functions, this next function-type category is also based around a syscall but provides a bit more variation that must be accounted for by analysts. I call this group of functions Sub-Operations. These functions are often difficult to discern at the Win32 API layer but become evident at the Native API or Syscall layers due to a unique naming convention where the Native API and Syscall are referred to by <code class="cx qj qk ql qm b">Nt(Query/Set)Information*</code> where the * represents a specific object type such as Process, File, etc.</p><blockquote class="pr ps pt"><p id="25e0" class="oh oi pu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">F<!-- -->or more detailed information on functions in the sub-operation category, I recommend reading <a class="af pd" rel="noopener ugc nofollow" target="_blank" href="/part-14-sub-operations-5e119cf610b1">Part 14</a> of this series.</p></blockquote><h2 id="83ad" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Sample</h2><p id="4ee5" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">To demonstrate the Sub-Operation category, we will investigate a sample that <span class="jj"><span class="jj" aria-hidden="false"><a class="sh jk fe" href="https://medium.com/u/78d2ff57ed70?source=post_page---user_mention--5942e70e05ab--------------------------------" rel="noopener" target="_blank">Jonathan Johnson</a></span></span> wrote for our <a class="af pd" href="https://github.com/jaredcatkinson/MalwareMorphology" rel="noopener ugc nofollow" target="_blank">Malware Morphology workshop</a>. This sample, called Sample 1, implements a simple version of Token Impersonation, and we will find that its critical function is a Sub-Operation.</p><div class="qn qo qp qq qr qs"><a href="https://github.com/jaredcatkinson/MalwareMorphology/blob/main/Sample%201/src/Source.cpp?source=post_page-----5942e70e05ab--------------------------------" rel="noopener  ugc nofollow" target="_blank"><div class="qt ab jo"><div class="qu ab co cb qv qw"><h2 class="bf he jf z ju qx jw jx qy jz kb hd bk">MalwareMorphology/Sample 1/src/Source.cpp at main · jaredcatkinson/MalwareMorphology</h2><div class="qz l"><h3 class="bf b jf z ju qx jw jx qy jz kb du">Contribute to jaredcatkinson/MalwareMorphology development by creating an account on GitHub.</h3></div><div class="hu l"><p class="bf b dv z ju qx jw jx qy jz kb du">github.com</p></div></div><div class="ra l"><div class="si l rc rd re ra rf ms qs"></div></div></div></a></div><blockquote class="pr ps pt"><p id="2e1d" class="oh oi pu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">I encourage you to check out the full workshop to see how attackers can change their approach when facing different constraints or circumstances. The <a class="af pd" href="https://github.com/jaredcatkinson/MalwareMorphology/blob/main/Presentation.pdf" rel="noopener ugc nofollow" target="_blank">slides</a> and <a class="af pd" href="https://github.com/jaredcatkinson/MalwareMorphology/tree/main/Labs" rel="noopener ugc nofollow" target="_blank">labs</a> are available in the linked GitHub repository, and a video recording of the workshop lecture is available on <a class="af pd" href="https://www.youtube.com/watch?v=KTAeUjDBW3s" rel="noopener ugc nofollow" target="_blank">NorthSec’s YouTube channel</a>.</p></blockquote><h2 id="cb79" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Tool Graph</h2></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sj"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*FH08UR-gtZnDkmFdLng1tw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*FH08UR-gtZnDkmFdLng1tw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*FH08UR-gtZnDkmFdLng1tw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*FH08UR-gtZnDkmFdLng1tw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*FH08UR-gtZnDkmFdLng1tw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*FH08UR-gtZnDkmFdLng1tw.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*FH08UR-gtZnDkmFdLng1tw.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*FH08UR-gtZnDkmFdLng1tw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*FH08UR-gtZnDkmFdLng1tw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*FH08UR-gtZnDkmFdLng1tw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*FH08UR-gtZnDkmFdLng1tw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*FH08UR-gtZnDkmFdLng1tw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*FH08UR-gtZnDkmFdLng1tw.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*FH08UR-gtZnDkmFdLng1tw.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="1003" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Tool Graph: Malware Morphology Sample 1</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="1435" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">Let’s analyze Sample 1’s source code to build the tool graph. This sample starts by calling <code class="cx qj qk ql qm b">kernel32!OpenProcess</code> to open a handle to the target process. In this case, the target process is the process from whom the attacker wants to impersonate. Next, it passes the process handle to <code class="cx qj qk ql qm b">advapi32!OpenProcessToken</code> and opens a handle to the target process’s primary token. The primary token represents the user context the attacker is after. While the attacker now has access to their target token, Windows does not allow a process to impersonate the primary token of a different process, so Jonny calls <code class="cx qj qk ql qm b">advapi32!DuplicateToken</code> to make a fresh copy of the token. Finally, he passes the duplicated token to <code class="cx qj qk ql qm b">advapi32!SetThreadToken</code> to execute the impersonation. Finally, Jonny follows good programming practice by cleaning up the handles he opened by calling <code class="cx qj qk ql qm b">kernel32!CloseHandle</code> three times. It is important to note that these calls to <code class="cx qj qk ql qm b">CloseHandle</code> are purely optional, so it is plausible that a malicious implementation may exclude them.</p><h2 id="f6ca" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Function Call Stack</h2><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div class="rm rn sk"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*PyHOF2it3XEucvFC4018wA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*PyHOF2it3XEucvFC4018wA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*PyHOF2it3XEucvFC4018wA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*PyHOF2it3XEucvFC4018wA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*PyHOF2it3XEucvFC4018wA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*PyHOF2it3XEucvFC4018wA.png 1100w, https://miro.medium.com/v2/resize:fit:1374/format:webp/1*PyHOF2it3XEucvFC4018wA.png 1374w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 687px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*PyHOF2it3XEucvFC4018wA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*PyHOF2it3XEucvFC4018wA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*PyHOF2it3XEucvFC4018wA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*PyHOF2it3XEucvFC4018wA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*PyHOF2it3XEucvFC4018wA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*PyHOF2it3XEucvFC4018wA.png 1100w, https://miro.medium.com/v2/resize:fit:1374/1*PyHOF2it3XEucvFC4018wA.png 1374w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 687px"/><img alt="" class="bh ms sa c" width="687" height="2416" loading="eager" role="presentation"/></picture></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Function Call Stack: advapi32!SetThreadToken</figcaption></figure><p id="a0db" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">When it comes to Token Impersonation, the moment of impersonation represents the critical point in the function chain. As a result, we can identify <code class="cx qj qk ql qm b">advapi32!SetThreadToken</code> as the crucial function in the function chain.</p><p id="6d2d" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">The function call stack, shown below, appears to follow a similar pattern to the Standard Function. However, the implementation diverges when the code reaches <code class="cx qj qk ql qm b">kernelbase.dll</code>. In this case, the high-level function, <code class="cx qj qk ql qm b">advapi32!SetThreadToken</code> is a wrapper around a more generic low-level function called <code class="cx qj qk ql qm b">ntdll!NtSetInformationThread</code>. In Part 14 of this series, I discussed a class of functions called <code class="cx qj qk ql qm b">Nt(Set/Query)Information*</code> that facilitate the setting (writing) or querying (reading) of metadata properties for the target object specified by the *, which in this case happens to be a Thread. The caller specifies which specific metadata property to query or set via an information class.” Each object type has a unique set of information classes. You can see in the screenshot below that <code class="cx qj qk ql qm b">SetThreadToken</code> specifies information class 5 via the second parameter, which corresponds to <code class="cx qj qk ql qm b">ThreadImpersonationToken</code>.</p></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sl"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*5OE1c4ZhgRqg9AOWLL487w.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*5OE1c4ZhgRqg9AOWLL487w.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*5OE1c4ZhgRqg9AOWLL487w.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*5OE1c4ZhgRqg9AOWLL487w.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*5OE1c4ZhgRqg9AOWLL487w.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*5OE1c4ZhgRqg9AOWLL487w.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*5OE1c4ZhgRqg9AOWLL487w.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*5OE1c4ZhgRqg9AOWLL487w.png 640w, https://miro.medium.com/v2/resize:fit:720/1*5OE1c4ZhgRqg9AOWLL487w.png 720w, https://miro.medium.com/v2/resize:fit:750/1*5OE1c4ZhgRqg9AOWLL487w.png 750w, https://miro.medium.com/v2/resize:fit:786/1*5OE1c4ZhgRqg9AOWLL487w.png 786w, https://miro.medium.com/v2/resize:fit:828/1*5OE1c4ZhgRqg9AOWLL487w.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*5OE1c4ZhgRqg9AOWLL487w.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*5OE1c4ZhgRqg9AOWLL487w.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="247" loading="eager" role="presentation"/></picture></div></div></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="3ebe" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">For this category of functions, the information class is critical for properly assigning the operation. If we treated <code class="cx qj qk ql qm b">advapi32!SetThreadToken</code> as if it were a Standard Function, we would derive the operation from the syscall, <code class="cx qj qk ql qm b">NtSetInformationThread</code>, meaning the operation would be Thread Set. The problem is that the Thread Set operation covers ALL of the Thread’s metadata properties, including properties irrelevant to token impersonation, such as <code class="cx qj qk ql qm b">ThreadIoPriority</code>. While it may be interesting to know whether someone changed a thread’s IO priority, that change does not indicate Token Impersonation. All said, there are 41 Thread information classes (metadata properties), and only one is relevant to this particular procedure. Therefore, we require a way to differentiate between Thread Set operations, and the most natural option for doing so is using the information class as an additional indicator. Thus, the resulting operation is Thread Set: ThreadImpersonationToken.</p><h1 id="15f0" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">3. Remote Procedure Calls (NdrClientCall4)</h1><p id="9fdd" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">Now, we’ve reached the categories I have not yet covered in this series. The first is related to remote procedure call (RPC) procedures. Functions built on RPC Procedures do not result in syscalls, at least not directly. Instead, they implement the client component of the RPC client/server relationship. In the RPC model, the client and server can exist within different processes or even on different systems. Previously, I mentioned that syscalls are responsible for transferring execution from user mode to kernel mode. Similarly, an RPC procedure transfers execution from the client application, the Win32 API function, to the server application. This process is commonly referred to as Interprocess Communication (IPC). Especially in cases where the client and server exist on separate systems, this boundary is at least as robust as the user mode/kernel mode boundary. A key feature of RPC is that the server component generally constrains the set of sub-routines a client can execute on the server. This constraint creates an opportunity to establish our operation abstraction layer.</p><h2 id="3451" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Sample</h2><p id="e6dc" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">For this third class of functions I decided to use a BOF called <code class="cx qj qk ql qm b">sc_create</code> that is included in the TrustedSec CS-Remote-OPs-BOF project. Based on the commit history, it appears that it was originally written by Christopher Paschen. The BOF’s name indicates that Christopher reimplemented the functionality of the <code class="cx qj qk ql qm b">sc.exe create</code> command. I’ve found that BOFs provide a great starting point for analysts that are trying to get their feet wet in this typeof analysis. Their simplicity can primarily be attributed to the fact that BOF often implement very discrete capabilities which limits the amount of digging that one must do.</p><div class="qn qo qp qq qr qs"><a href="https://github.com/trustedsec/CS-Remote-OPs-BOF/blob/main/src/Remote/sc_create/entry.c?source=post_page-----5942e70e05ab--------------------------------" rel="noopener  ugc nofollow" target="_blank"><div class="qt ab jo"><div class="qu ab co cb qv qw"><h2 class="bf he jf z ju qx jw jx qy jz kb hd bk">CS-Remote-OPs-BOF/src/Remote/sc_create/entry.c at main · trustedsec/CS-Remote-OPs-BOF</h2><div class="qz l"><h3 class="bf b jf z ju qx jw jx qy jz kb du">Contribute to trustedsec/CS-Remote-OPs-BOF development by creating an account on GitHub.</h3></div><div class="hu l"><p class="bf b dv z ju qx jw jx qy jz kb du">github.com</p></div></div><div class="ra l"><div class="sm l rc rd re ra rf ms qs"></div></div></div></a></div><h2 id="9023" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Tool Graph</h2></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sn"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*q9yI1M_K-wNA8wrJ9qhnzg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*q9yI1M_K-wNA8wrJ9qhnzg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*q9yI1M_K-wNA8wrJ9qhnzg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*q9yI1M_K-wNA8wrJ9qhnzg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*q9yI1M_K-wNA8wrJ9qhnzg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*q9yI1M_K-wNA8wrJ9qhnzg.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*q9yI1M_K-wNA8wrJ9qhnzg.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*q9yI1M_K-wNA8wrJ9qhnzg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*q9yI1M_K-wNA8wrJ9qhnzg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*q9yI1M_K-wNA8wrJ9qhnzg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*q9yI1M_K-wNA8wrJ9qhnzg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*q9yI1M_K-wNA8wrJ9qhnzg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*q9yI1M_K-wNA8wrJ9qhnzg.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*q9yI1M_K-wNA8wrJ9qhnzg.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="614" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Tool Graph: sc_create BOF</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="b073" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">Our analysis of the <code class="cx qj qk ql qm b">sc_create</code> BOF found that it first opened a handle to the Service Control Manager (SCM) via the <code class="cx qj qk ql qm b">advapi32!OpenSCManagerW</code> function. Next, the BOF creates the target service via the<code class="cx qj qk ql qm b"> advapi32!CreateServiceW</code> function. While the operator can specify specific service details such as its name, binary path, and start type during creation, some other features must be added after the fact. To make these additional changes, the tool calls the <code class="cx qj qk ql qm b">advapi32!ChangeServiceConfig2W</code> function. Finally, we see the tool close the handles to the newly created service and the SCM by calling the <code class="cx qj qk ql qm b">advapi32!CloseServiceHandle</code> function twice.</p><h2 id="40f4" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Function Call Stack</h2><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div class="rm rn so"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*d2vexLhQPjzQBj_97eQJ-A.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*d2vexLhQPjzQBj_97eQJ-A.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*d2vexLhQPjzQBj_97eQJ-A.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*d2vexLhQPjzQBj_97eQJ-A.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*d2vexLhQPjzQBj_97eQJ-A.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*d2vexLhQPjzQBj_97eQJ-A.png 1100w, https://miro.medium.com/v2/resize:fit:1258/format:webp/1*d2vexLhQPjzQBj_97eQJ-A.png 1258w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 629px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*d2vexLhQPjzQBj_97eQJ-A.png 640w, https://miro.medium.com/v2/resize:fit:720/1*d2vexLhQPjzQBj_97eQJ-A.png 720w, https://miro.medium.com/v2/resize:fit:750/1*d2vexLhQPjzQBj_97eQJ-A.png 750w, https://miro.medium.com/v2/resize:fit:786/1*d2vexLhQPjzQBj_97eQJ-A.png 786w, https://miro.medium.com/v2/resize:fit:828/1*d2vexLhQPjzQBj_97eQJ-A.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*d2vexLhQPjzQBj_97eQJ-A.png 1100w, https://miro.medium.com/v2/resize:fit:1258/1*d2vexLhQPjzQBj_97eQJ-A.png 1258w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 629px"/><img alt="" class="bh ms sa c" width="629" height="1681" loading="eager" role="presentation"/></picture></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Function Call Stack: advapi32!CreateServiceW</figcaption></figure><p id="15f4" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">Since the technique in this example is Service Creation, it makes sense to choose <code class="cx qj qk ql qm b">advapi32!CreateServiceW</code> as the sample’s critical function for investigation.</p><p id="6f80" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">CreateServiceW is the first function category that does not make a syscall. Technically, it does EVENTUALLY, but there is an important caveat. You see, <code class="cx qj qk ql qm b">advapi32!CreateServiceW</code> is an API function wrapper around an RPC Procedure. In the image below, we see the <code class="cx qj qk ql qm b">kernelbase!CreateServiceW</code> function call the <code class="cx qj qk ql qm b">rpcrt4!NdrClientCall2</code> function. NdrClientCall2 is one of a set of functions, represented by NdrClientCall*, that RPC clients can use to make requests. Analysis of the NdrClientCall2’s first and second parameters, which is outside the scope of this article, allows us to identify that <code class="cx qj qk ql qm b">kernelbase!CreateServiceW</code> invokes the <code class="cx qj qk ql qm b">RCreateServiceW</code> procedure from the Microsoft Service Control Manager Remote Protocol (MS-SCMR).</p></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sl"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*Egn7Ah85BukqY8tR64PiEQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*Egn7Ah85BukqY8tR64PiEQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*Egn7Ah85BukqY8tR64PiEQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*Egn7Ah85BukqY8tR64PiEQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*Egn7Ah85BukqY8tR64PiEQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*Egn7Ah85BukqY8tR64PiEQ.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*Egn7Ah85BukqY8tR64PiEQ.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*Egn7Ah85BukqY8tR64PiEQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*Egn7Ah85BukqY8tR64PiEQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*Egn7Ah85BukqY8tR64PiEQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*Egn7Ah85BukqY8tR64PiEQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*Egn7Ah85BukqY8tR64PiEQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*Egn7Ah85BukqY8tR64PiEQ.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*Egn7Ah85BukqY8tR64PiEQ.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="246" loading="eager" role="presentation"/></picture></div></div></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="35df" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">The Service Control Manager (<code class="cx qj qk ql qm b">services.exe</code>) implements its API via RPC, allowing other applications to interact with it. Applications can query, create (as we see here), delete, or modify services through the MS-SCMR RPC interface. Now, we need to understand that the relationship between the calling application and the Service Control Manager is a client/server relationship where clients can make local AND remote requests. The remote aspect is why service creation is a powerful lateral movement technique. Given sufficient permissions, attackers can create malicious services on remote systems. The client/server relationship is essential in our analysis because it acts like a boundary where interaction is constrained to a finite set of RPC procedures like <code class="cx qj qk ql qm b">RCreateServiceW</code>. This constraint allows for the application of the operation abstraction layer, which is labeled Service Create in this specific case.</p><blockquote class="pr ps pt"><p id="a8d3" class="oh oi pu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk"><strong class="oj he">Note:</strong> This is not to say that it is not valuable to understand what happens on the server side of the interaction because, in some cases, like this one, an understanding of the server-side component can reveal an alternative procedure to achieve the same outcome (lateral movement via service creation). That said, the ability to implement the server-side implementation, especially remotely, has shown in my analysis to be the exception, not the rule. I will write more about this in a future post.</p></blockquote><h1 id="0fa9" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">4. LSA Functions (LsaCallAuthenticationPackage)</h1><p id="4d4e" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">Next, we encounter a function type category that took me a while to understand, the LSA Function. Eventually, I discovered that LSA Functions are to RPC Procedures as Sub-Operations are to Standard Functions. That is, LSA Functions rely on a specific RPC Procedure called <code class="cx qj qk ql qm b">SspirCallRpc</code>, which the Microsoft Security Support Provider Interface (MS-SSPI) implements. MS-SSPI offers an extensible framework for authentication whereby Microsoft and third-party vendors can extend how users authenticate to the system. As a result, all interactions with “Authentication Packages” flow through the same RPC Procedure. However, the Local Security Authority (LSA) determines how to handle each request based on the specified Authentication Package and AP function. These additional variables indicate that it will not be enough to observe the invocation of <code class="cx qj qk ql qm b">SspirCallRpc</code>. Instead, more precise monitoring is necessary, but unfortunately, I am not aware of any vendor that supports this level of monitoring as of this writing.</p><blockquote class="pr ps pt"><p id="d59f" class="oh oi pu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">I highly recommend checking out <span class="jj"><span class="jj" aria-hidden="false"><a class="sh jk fe" href="https://medium.com/u/19644b9f54e3?source=post_page---user_mention--5942e70e05ab--------------------------------" rel="noopener" target="_blank">Evan McBroom</a></span></span>’s excellent <a class="af pd" href="https://github.com/EvanMcBroom/lsa-whisperer/wiki" rel="noopener ugc nofollow" target="_blank">LSA Whisper project</a> to learn more about the Authentication Packages and LSA.</p></blockquote><h2 id="3963" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Sample</h2><p id="e0b5" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">This category of functions is the one that inspired me to write this post. I struggled to integrate functions that interact with the Local Security Authority (LSA) into my model for an extended period. When I finally understood how they fit, I realized I had incorrectly conceptualized other categories, like RPC functions. This category is essential when considering modern tradecraft, as shown by my colleagues <span class="jj"><span class="jj" aria-hidden="false"><a class="sh jk fe" href="https://medium.com/u/74ad66811b78?source=post_page---user_mention--5942e70e05ab--------------------------------" rel="noopener" target="_blank">Will Schroeder</a></span></span> in his work on Rubeus and <a class="af pd" href="https://medium.com/u/19644b9f54e3" rel="noopener">Evan McBroom</a> in his work on LSA Whisperer. Many modern workflows manipulate an agent’s identity context through interactions with LSA, so modern detection approaches must understand these underlying mechanisms. With that in mind, we will look at the inner workings of the pass-the-ticket (ptt) argument in many of Rubeus’ commands.</p><div class="qn qo qp qq qr qs"><a href="https://github.com/GhostPack/Rubeus/blob/master/Rubeus/lib/LSA.cs?source=post_page-----5942e70e05ab--------------------------------#L1006-L1084" rel="noopener  ugc nofollow" target="_blank"><div class="qt ab jo"><div class="qu ab co cb qv qw"><h2 class="bf he jf z ju qx jw jx qy jz kb hd bk">Rubeus/Rubeus/lib/LSA.cs at master · GhostPack/Rubeus</h2><div class="qz l"><h3 class="bf b jf z ju qx jw jx qy jz kb du">Trying to tame the three-headed dog. Contribute to GhostPack/Rubeus development by creating an account on GitHub.</h3></div><div class="hu l"><p class="bf b dv z ju qx jw jx qy jz kb du">github.com</p></div></div><div class="ra l"><div class="sp l rc rd re ra rf ms qs"></div></div></div></a></div><h2 id="9c46" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Tool Graph</h2></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sq"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*HcLNr8IEViSN3cd01Y3MLA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*HcLNr8IEViSN3cd01Y3MLA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*HcLNr8IEViSN3cd01Y3MLA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*HcLNr8IEViSN3cd01Y3MLA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*HcLNr8IEViSN3cd01Y3MLA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*HcLNr8IEViSN3cd01Y3MLA.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*HcLNr8IEViSN3cd01Y3MLA.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*HcLNr8IEViSN3cd01Y3MLA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*HcLNr8IEViSN3cd01Y3MLA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*HcLNr8IEViSN3cd01Y3MLA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*HcLNr8IEViSN3cd01Y3MLA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*HcLNr8IEViSN3cd01Y3MLA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*HcLNr8IEViSN3cd01Y3MLA.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*HcLNr8IEViSN3cd01Y3MLA.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="734" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Tool Graph: Rubeus ptt</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="fdb2" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">At this point, each sample we have investigated supported one use case. Rubeus is a full-featured tool suite that supports many Kerberos-related attacks. The pass-the-ticket feature assumes the operator has a Kerberos ticket and facilitates adding that ticket to the ticket cache of the specified logon session.</p><p id="f5d7" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">The tool graph below shows that Rubeus begins by connecting to the Local Security Authority (LSA) server using the <code class="cx qj qk ql qm b">secur32!LsaConnectUntrusted</code> function. This results in an LSA handle that the tool uses in subsequent calls. Next, the application finds the Kerberos authentication package (AP) by calling the <code class="cx qj qk ql qm b">secur32!LsaLookupAuthenticationPackage</code> function. Rubeus then calls <code class="cx qj qk ql qm b">secur32!LsaCallAuthenticationPackage</code> specifying the Kerberos authentication package’s <code class="cx qj qk ql qm b">KerbSubmitTicket</code> function. The <code class="cx qj qk ql qm b">KerbSubmitTicket</code> AP function adds the supplied ticket to the specified logon session’s ticket cache. Finally, Rubeus releases the LSA handle by calling <code class="cx qj qk ql qm b">secur32!LsaDeregisterLogonProcess</code>.</p><h2 id="6d35" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Function Call Stack</h2><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sr"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*J_nmkh3RRyHsy5xPgc6gcg.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*J_nmkh3RRyHsy5xPgc6gcg.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*J_nmkh3RRyHsy5xPgc6gcg.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*J_nmkh3RRyHsy5xPgc6gcg.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*J_nmkh3RRyHsy5xPgc6gcg.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*J_nmkh3RRyHsy5xPgc6gcg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*J_nmkh3RRyHsy5xPgc6gcg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*J_nmkh3RRyHsy5xPgc6gcg.png 640w, https://miro.medium.com/v2/resize:fit:720/1*J_nmkh3RRyHsy5xPgc6gcg.png 720w, https://miro.medium.com/v2/resize:fit:750/1*J_nmkh3RRyHsy5xPgc6gcg.png 750w, https://miro.medium.com/v2/resize:fit:786/1*J_nmkh3RRyHsy5xPgc6gcg.png 786w, https://miro.medium.com/v2/resize:fit:828/1*J_nmkh3RRyHsy5xPgc6gcg.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*J_nmkh3RRyHsy5xPgc6gcg.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*J_nmkh3RRyHsy5xPgc6gcg.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ms sa c" width="700" height="1852" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Function Call Stack: secur32!LsaCallAuthenticationPackage (Kerberos KerbSubmitTicket)</figcaption></figure><p id="6ba5" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">The <code class="cx qj qk ql qm b">secur32!LsaCallAuthenticationPackage</code> function is responsible for “passing-the-ticket” in the sense that it is the function that adds the ticket to the ticket cache. For that reason, let’s dig a bit deeper into it to understand how it works.</p><p id="4db2" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">When we open <code class="cx qj qk ql qm b">secur32!LsaCallAuthenticationPackage</code> in our disassembler, we see that it eventually makes an RPC Procedure call to the <code class="cx qj qk ql qm b">SspirCallRpc</code> procedure implemented by the Microsoft Security Support Provider Interface (MS-SSPI). You might immediately think that I’m crazy because we just covered RPC Procedures in the previous section, but it turns out that this particular case is more complicated than that. That’s because there is an additional layer or two of abstraction. The <code class="cx qj qk ql qm b">SspirCallRpc</code> procedure acts as a gateway for applications to interact with LSA regardless of the authentication package and function that the caller specifies. Behind the scenes, MS-SSPI (loaded in lsass.exe) handles these calls and passes execution to the appropriate authentication package, such as kerberos.dll. As a result, observing a call to the <code class="cx qj qk ql qm b">SspirCallRpc</code> procedure only indicates that some authentication-related operation has occurred. However, it does not provide the necessary level of detail to determine whether the operation is the one you are interested in, such as adding a Kerberos ticket to the ticket cache, in this case via <code class="cx qj qk ql qm b">KerbSubmitTicket</code>. Like Sub-Operations, this category requires that we operate at a more granular level if we can hope to use this signal in any meaningful detection strategy.</p><p id="b67f" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">It is also worth noting that these LSA-related operations function based on the same client/server relationship as RPC but are often constrained to the local machine only. The <code class="cx qj qk ql qm b">lsass.exe</code> application runs as a protected process on modern operating systems, so <code class="cx qj qk ql qm b">LsaCallAuthenticationPackage</code> or <code class="cx qj qk ql qm b">SspirCallRpc</code>, more specifically, acts as an interface for applications to interact with LSA. This constraint allows us, again, to treat the LSA side of this interaction opaquely. I’ve found it helpful to label the resulting operation using the AP function, which in this example is <code class="cx qj qk ql qm b">KerbSubmitTicket</code>.</p><h1 id="9220" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">5. Driver IOCTLs</h1><p id="251e" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">Another important category I have not extensively written about is Driver IOCTLs. These functions rely on making specific Input/Output Control calls to kernel drivers via API functions like <code class="cx qj qk ql qm b">kernel32!DeviceIOControl</code> and <code class="cx qj qk ql qm b">ntdll!NtfsControlFile</code>. IOCTLs facilitate direct interaction with a kernel driver and represent something between a Syscall and an RPC Procedure. In this case, we treat the transfer of execution from the client application to the kernel driver as the boundary for abstraction.</p><h2 id="373e" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Sample</h2><p id="d81e" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">To demonstrate Driver IOCTLs in practice, I will use Matt Graeber’s Get-System implementation from the PowerSploit project. Get-System provides two approaches to Token Theft. The first follows the traditional Token Impersonation approach, while the second relies on a trick with named pipes. For this analysis, I will focus on the named pipe approach.</p><div class="qn qo qp qq qr qs"><a href="https://github.com/PowerShellMafia/PowerSploit/blob/d943001a7defb5e0d1657085a77a0e78609be58f/Privesc/Get-System.ps1?source=post_page-----5942e70e05ab--------------------------------#L171" rel="noopener  ugc nofollow" target="_blank"><div class="qt ab jo"><div class="qu ab co cb qv qw"><h2 class="bf he jf z ju qx jw jx qy jz kb hd bk">PowerSploit/Privesc/Get-System.ps1 at d943001a7defb5e0d1657085a77a0e78609be58f ·…</h2><div class="qz l"><h3 class="bf b jf z ju qx jw jx qy jz kb du">PowerSploit - A PowerShell Post-Exploitation Framework - PowerSploit/Privesc/Get-System.ps1 at…</h3></div><div class="hu l"><p class="bf b dv z ju qx jw jx qy jz kb du">github.com</p></div></div><div class="ra l"><div class="ss l rc rd re ra rf ms qs"></div></div></div></a></div><p id="caac" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">Thanks to <a class="af pd" href="https://medium.com/u/78d2ff57ed70" rel="noopener">Jonathan Johnson</a> for helping to identify a function that embodies this category. He pointed me to one of his blog posts focused on <code class="cx qj qk ql qm b">advapi32!ImpersonateNamedPipeClient</code>, which inspired me to find a sample that leverages that function. If you want to understand how I constructed the function call stack, I recommend you read his post.</p><div class="qn qo qp qq qr qs"><a href="https://jsecurity101.medium.com/exploring-impersonation-through-the-named-pipe-filesystem-driver-15f324dfbaf2?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow" target="_blank"><div class="qt ab jo"><div class="qu ab co cb qv qw"><h2 class="bf he jf z ju qx jw jx qy jz kb hd bk">Exploring Impersonation through the Named Pipe Filesystem Driver</h2><div class="qz l"><h3 class="bf b jf z ju qx jw jx qy jz kb du">Introduction</h3></div><div class="hu l"><p class="bf b dv z ju qx jw jx qy jz kb du">jsecurity101.medium.com</p></div></div><div class="ra l"><div class="st l rc rd re ra rf ms qs"></div></div></div></a></div><h2 id="3657" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Tool Graph</h2></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn su"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*If4_Z7absJR0hhj1pbIDzA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*If4_Z7absJR0hhj1pbIDzA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*If4_Z7absJR0hhj1pbIDzA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*If4_Z7absJR0hhj1pbIDzA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*If4_Z7absJR0hhj1pbIDzA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*If4_Z7absJR0hhj1pbIDzA.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*If4_Z7absJR0hhj1pbIDzA.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*If4_Z7absJR0hhj1pbIDzA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*If4_Z7absJR0hhj1pbIDzA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*If4_Z7absJR0hhj1pbIDzA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*If4_Z7absJR0hhj1pbIDzA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*If4_Z7absJR0hhj1pbIDzA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*If4_Z7absJR0hhj1pbIDzA.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*If4_Z7absJR0hhj1pbIDzA.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="363" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Tool Graph: PowerSploit Get-System</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="3eb5" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">After consulting the source code for our sample, I found that the named pipe impersonation trick is a bit complicated. It starts with a call to <code class="cx qj qk ql qm b">advapi32!CreatePipe</code>, which generates a new pipe with a fairly permissive DACL. Next, we interact with the Service Control Manager (SCM) via <code class="cx qj qk ql qm b">advapi32!OpenSCManagerW</code>. This call results in a handle to the local SCM. Matt passes the SCM handle to <code class="cx qj qk ql qm b">advapi32!CreateServiceW</code> to create a new service that the attack will eventually use to connect to the named pipe. Services can run as the <code class="cx qj qk ql qm b">NT AUTHORITY\SYSTEM</code> user, resulting in the “named pipe client” being <code class="cx qj qk ql qm b">SYSTEM</code>. We then see a call to <code class="cx qj qk ql qm b">advapi32!CloseServiceHandle</code> to close the service handle. Next, Get-System calls <code class="cx qj qk ql qm b">advapi32!OpenServiceW</code> to open a new handle to the service. The service handle is passed to <code class="cx qj qk ql qm b">advapi32!StartServiceW</code> to execute the service, thus connecting to the named pipe. After the service is executed, the sample is cleaned up via <code class="cx qj qk ql qm b">advapi32!DeleteService</code> and two calls to <code class="cx qj qk ql qm b">advapi32!CloseServiceHandle</code>. Finally, <code class="cx qj qk ql qm b">advapi32!ImpersonateNamedPipeClient</code> is called to steal the <code class="cx qj qk ql qm b">SYSTEM</code> account token.</p><h2 id="3ef0" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Function Call Stack</h2><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div class="rm rn sv"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*5zn0WcAY6cVvI8BqnxCI-A.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*5zn0WcAY6cVvI8BqnxCI-A.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*5zn0WcAY6cVvI8BqnxCI-A.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*5zn0WcAY6cVvI8BqnxCI-A.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*5zn0WcAY6cVvI8BqnxCI-A.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*5zn0WcAY6cVvI8BqnxCI-A.png 1100w, https://miro.medium.com/v2/resize:fit:1274/format:webp/1*5zn0WcAY6cVvI8BqnxCI-A.png 1274w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 637px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*5zn0WcAY6cVvI8BqnxCI-A.png 640w, https://miro.medium.com/v2/resize:fit:720/1*5zn0WcAY6cVvI8BqnxCI-A.png 720w, https://miro.medium.com/v2/resize:fit:750/1*5zn0WcAY6cVvI8BqnxCI-A.png 750w, https://miro.medium.com/v2/resize:fit:786/1*5zn0WcAY6cVvI8BqnxCI-A.png 786w, https://miro.medium.com/v2/resize:fit:828/1*5zn0WcAY6cVvI8BqnxCI-A.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*5zn0WcAY6cVvI8BqnxCI-A.png 1100w, https://miro.medium.com/v2/resize:fit:1274/1*5zn0WcAY6cVvI8BqnxCI-A.png 1274w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 637px"/><img alt="" class="bh ms sa c" width="637" height="1784" loading="eager" role="presentation"/></picture></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Function Call Stack: advapi32!ImpersonateNamedPipeClient</figcaption></figure><p id="f033" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">As mentioned earlier, I selected this sample to highlight the <code class="cx qj qk ql qm b">advapi32!ImpersonateNamedPipeClient</code> function.</p><p id="fd48" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">Like many other functions, <code class="cx qj qk ql qm b">ImpersonateNamedPipeClient</code> flows to <code class="cx qj qk ql qm b">kernelbase.dll</code>, where it makes a call to a Native API function called <code class="cx qj qk ql qm b">ntdll!NtFsControlFile</code>. The Microsoft documentation for the <code class="cx qj qk ql qm b">NtFsControlFile</code> function states that “[it] sends a control code directly to a specified file system or file system filter driver, causing the corresponding driver to perform the specified action.” We can see from the arguments passed to <code class="cx qj qk ql qm b">NtFsControlFile</code> that the handle is to the specified named pipe, which, in the case of Matt’s Get-System implementation, is the dummy named pipe created via the <code class="cx qj qk ql qm b">CreatePipe</code> function call. We also see that <code class="cx qj qk ql qm b">kernelbase!ImpersonateNamePipeClient</code> hardcodes the sixth parameter, representing the FsControlCode, to <code class="cx qj qk ql qm b">0x11001C</code>.</p></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sw"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*QwevOdzqLuf5kPZIten6og.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*QwevOdzqLuf5kPZIten6og.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*QwevOdzqLuf5kPZIten6og.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*QwevOdzqLuf5kPZIten6og.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*QwevOdzqLuf5kPZIten6og.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*QwevOdzqLuf5kPZIten6og.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*QwevOdzqLuf5kPZIten6og.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*QwevOdzqLuf5kPZIten6og.png 640w, https://miro.medium.com/v2/resize:fit:720/1*QwevOdzqLuf5kPZIten6og.png 720w, https://miro.medium.com/v2/resize:fit:750/1*QwevOdzqLuf5kPZIten6og.png 750w, https://miro.medium.com/v2/resize:fit:786/1*QwevOdzqLuf5kPZIten6og.png 786w, https://miro.medium.com/v2/resize:fit:828/1*QwevOdzqLuf5kPZIten6og.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*QwevOdzqLuf5kPZIten6og.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*QwevOdzqLuf5kPZIten6og.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="337" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Implementation of kernelbase!ImpersonateNamedPipeClient</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="39e1" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">The FsControlCode tells the driver which sub-routine to execute. In his blog post analyzing the function, Jonny explains that this control code is known as <code class="cx qj qk ql qm b">FSCTL_PIPE_IMPERSONATE</code> and that the components of the control code indicate that this is function number 7 for named pipes (<code class="cx qj qk ql qm b">FILE_DEVICE_NAMED_PIPE</code>). We can, therefore, use the control code as the abstraction layer for our operation, which we will call Pipe Impersonate.</p><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sl"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*0cftExh6pqyucS5ERYrG9A.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*0cftExh6pqyucS5ERYrG9A.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*0cftExh6pqyucS5ERYrG9A.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*0cftExh6pqyucS5ERYrG9A.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*0cftExh6pqyucS5ERYrG9A.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*0cftExh6pqyucS5ERYrG9A.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*0cftExh6pqyucS5ERYrG9A.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*0cftExh6pqyucS5ERYrG9A.png 640w, https://miro.medium.com/v2/resize:fit:720/1*0cftExh6pqyucS5ERYrG9A.png 720w, https://miro.medium.com/v2/resize:fit:750/1*0cftExh6pqyucS5ERYrG9A.png 750w, https://miro.medium.com/v2/resize:fit:786/1*0cftExh6pqyucS5ERYrG9A.png 786w, https://miro.medium.com/v2/resize:fit:828/1*0cftExh6pqyucS5ERYrG9A.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*0cftExh6pqyucS5ERYrG9A.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*0cftExh6pqyucS5ERYrG9A.png 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bh ms sa c" width="700" height="504" loading="eager" role="presentation"/></picture></div></div></figure><h1 id="f460" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">6. Compound Functions</h1><p id="39aa" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">A special category is the Compound Function. A Compound Function is a function that, at the Win32 API level, appears as a single function but, lower in the function call stack, breaks down into many more specific functions and, thus, operations. We typically find that Compound Functions implement logic to execute an everyday routine that would normally require multiple individual function calls. A great example of a compound function is <code class="cx qj qk ql qm b">dbghelp!MiniDumpWriteDump</code>, which creates process crash dumps. It is built on top of <code class="cx qj qk ql qm b">kernel32!ReadProcessMemory</code>. However, a crash dump requires numerous specific memory reads to occur. <code class="cx qj qk ql qm b">MiniDumpWriteDump</code> implements this logic, so the application developer is not required to understand the details of the crash dump or process memory structures.</p><h2 id="949a" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Sample</h2><p id="d3d1" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">We will look at <a class="af pd" href="https://medium.com/u/d64a8a5f03d6" rel="noopener">Justin Bui’s</a> Primary Token Theft sample for this category. Justin wrote this program to evaluate which processes would be the best targets for System Token Theft. It is a relatively simple program, but it allows us to see a third implementation of Token Impersonation. I challenge you to analyze this sample’s operation chain and compare it to the sample we used to dig into Sub-Operations.</p><div class="qn qo qp qq qr qs"><a href="https://github.com/slyd0g/PrimaryTokenTheft/blob/master/main.cpp?source=post_page-----5942e70e05ab--------------------------------#L91-L123" rel="noopener  ugc nofollow" target="_blank"><div class="qt ab jo"><div class="qu ab co cb qv qw"><h2 class="bf he jf z ju qx jw jx qy jz kb hd bk">PrimaryTokenTheft/main.cpp at master · slyd0g/PrimaryTokenTheft</h2><div class="qz l"><h3 class="bf b jf z ju qx jw jx qy jz kb du">Steal a primary token and spawn cmd.exe using the stolen token — PrimaryTokenTheft/main.cpp at master ·…</h3></div><div class="hu l"><p class="bf b dv z ju qx jw jx qy jz kb du">github.com</p></div></div><div class="ra l"><div class="sx l rc rd re ra rf ms qs"></div></div></div></a></div><h2 id="783c" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Tool Graph</h2></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sy"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*STqM6q4kGpf-lVKaBHBakw.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*STqM6q4kGpf-lVKaBHBakw.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*STqM6q4kGpf-lVKaBHBakw.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*STqM6q4kGpf-lVKaBHBakw.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*STqM6q4kGpf-lVKaBHBakw.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*STqM6q4kGpf-lVKaBHBakw.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*STqM6q4kGpf-lVKaBHBakw.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*STqM6q4kGpf-lVKaBHBakw.png 640w, https://miro.medium.com/v2/resize:fit:720/1*STqM6q4kGpf-lVKaBHBakw.png 720w, https://miro.medium.com/v2/resize:fit:750/1*STqM6q4kGpf-lVKaBHBakw.png 750w, https://miro.medium.com/v2/resize:fit:786/1*STqM6q4kGpf-lVKaBHBakw.png 786w, https://miro.medium.com/v2/resize:fit:828/1*STqM6q4kGpf-lVKaBHBakw.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*STqM6q4kGpf-lVKaBHBakw.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*STqM6q4kGpf-lVKaBHBakw.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="825" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Tool Graph: PrimaryTokenTheft</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="ed97" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">The tool graph for the PrimaryTokenTheft sample is relatively straightforward compared to some of our other examples. In all, we see that there were three function calls <code class="cx qj qk ql qm b">kernel32!OpenProcess</code>, <code class="cx qj qk ql qm b">advapi32!OpenProcessToken</code>, and <code class="cx qj qk ql qm b">advapi32!ImpersonateLoggedOnUser</code>. The first function, <code class="cx qj qk ql qm b">kernel32!OpenProcess</code> is used to open a handle to the target process. This process typically runs in the context of a user with desirable access, such as the <code class="cx qj qk ql qm b">NT AUTHORITY/SYSTEM</code> account or a Domain Administrator account. The resulting handle is then passed to <code class="cx qj qk ql qm b">advapi32!OpenProcessToken</code>, which opens a handle to the desired access token. Finally, Justin passes the token handle to <code class="cx qj qk ql qm b">advapi32!ImpersonateLoggedOnUser</code>, where all the magic happens.</p><h2 id="4de2" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Function Call Stack</h2></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sz"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*XWxdBHi6NYeFqWHeSpURsA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*XWxdBHi6NYeFqWHeSpURsA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*XWxdBHi6NYeFqWHeSpURsA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*XWxdBHi6NYeFqWHeSpURsA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*XWxdBHi6NYeFqWHeSpURsA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*XWxdBHi6NYeFqWHeSpURsA.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*XWxdBHi6NYeFqWHeSpURsA.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*XWxdBHi6NYeFqWHeSpURsA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*XWxdBHi6NYeFqWHeSpURsA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*XWxdBHi6NYeFqWHeSpURsA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*XWxdBHi6NYeFqWHeSpURsA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*XWxdBHi6NYeFqWHeSpURsA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*XWxdBHi6NYeFqWHeSpURsA.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*XWxdBHi6NYeFqWHeSpURsA.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="1368" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Function Call Stack: advapi32!ImpersonateLoggedOnUser</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="744f" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">Digging into the <code class="cx qj qk ql qm b">advapi32!ImpersonateLoggedOnUser</code> function’s call stack, everything progresses normally, like a standard function, until we reach <code class="cx qj qk ql qm b">kernelbase.dll</code>. As shown in the image below, we see calls to <code class="cx qj qk ql qm b">ntdll!NtQueryInformationToken</code>, <code class="cx qj qk ql qm b">ntdll!NtDuplicateToken</code>, <code class="cx qj qk ql qm b">ntdll!NtSetInformationThread</code>, and <code class="cx qj qk ql qm b">ntdll!NtClose</code>.</p></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn sw"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*9alvTY3KbhehhmxxN1DdyQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*9alvTY3KbhehhmxxN1DdyQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*9alvTY3KbhehhmxxN1DdyQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*9alvTY3KbhehhmxxN1DdyQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*9alvTY3KbhehhmxxN1DdyQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*9alvTY3KbhehhmxxN1DdyQ.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*9alvTY3KbhehhmxxN1DdyQ.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*9alvTY3KbhehhmxxN1DdyQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*9alvTY3KbhehhmxxN1DdyQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*9alvTY3KbhehhmxxN1DdyQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*9alvTY3KbhehhmxxN1DdyQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*9alvTY3KbhehhmxxN1DdyQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*9alvTY3KbhehhmxxN1DdyQ.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*9alvTY3KbhehhmxxN1DdyQ.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="474" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Implementation of kernelbase!ImpersonateLoggedOnUser</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="7f12" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">As a result, the function call stack splits at <code class="cx qj qk ql qm b">kernelbase!ImpersonateLoggedOnUser</code>. The end effect is that rather than a one-to-one relationship between the function and the operation, we find that <code class="cx qj qk ql qm b">advapi32!ImpersonateLoggedOnUser</code> has a one-to-four relationship, which has massive implications for our detection engineering efforts. Each underlying function will fit within one of the categories covered in this article. For example, <code class="cx qj qk ql qm b">NtQueryInformationThread</code> and <code class="cx qj qk ql qm b">NtSetInformationThread</code> belong to the Sub-Operation category, while <code class="cx qj qk ql qm b">NtDuplicateToken</code> and <code class="cx qj qk ql qm b">NtClose</code> belong to the Standard Function category.</p><p id="49c1" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">You will notice that the resulting operation chain for this particular sample is not much different from that of the sample used in the Sub-Operation section. This similarity means that these two samples are likely to be mutually detectable, or, put another way, they can both be detected using the same analytic.</p><h1 id="5616" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">7. Local Functions (memcpy or GetCurrentProcess)</h1><p id="b342" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">The final category is probably the least important from the detection engineering perspective. However, understanding how to spot functions from this set will empower you to separate the wheat from the chaff. Local Functions is the name I’ve given to the functions that never cross a relevant boundary. They often, if not always, are resolved within the initial implementation DLL and perform local tasks. You will find that as you begin to analyze complicated functions, you will encounter many local functions, so you must understand how to spot these functions so you can be sure that you can safely ignore them.</p><h2 id="1e99" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Sample</h2><p id="b8ba" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">In this example, we will rely on the Get-ProcessTokenPrivilege PowerShell function from <a class="af pd" href="https://medium.com/u/74ad66811b78" rel="noopener">Will Schroeder’s</a> PowerUp module. This function is a helper function that implements something similar to <code class="cx qj qk ql qm b">whoami /priv</code>.</p><div class="qn qo qp qq qr qs"><a href="https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1?source=post_page-----5942e70e05ab--------------------------------#L1236-L1413" rel="noopener  ugc nofollow" target="_blank"><div class="qt ab jo"><div class="qu ab co cb qv qw"><h2 class="bf he jf z ju qx jw jx qy jz kb hd bk">PowerSploit/Privesc/PowerUp.ps1 at master · PowerShellMafia/PowerSploit</h2><div class="qz l"><h3 class="bf b jf z ju qx jw jx qy jz kb du">PowerSploit - A PowerShell Post-Exploitation Framework - PowerSploit/Privesc/PowerUp.ps1 at master ·…</h3></div><div class="hu l"><p class="bf b dv z ju qx jw jx qy jz kb du">github.com</p></div></div><div class="ra l"><div class="ta l rc rd re ra rf ms qs"></div></div></div></a></div><h2 id="d55b" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Tool Graph</h2></div></div><div class="rg"><div class="ab cb"><div class="mn rh mo ri mp rj cf rk cg rl ci bh"><figure class="rp rq rr rs rt rg ru rv paragraph-image"><div role="button" tabindex="0" class="rw rx fj ry bh rz"><div class="rm rn tb"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*htKNcr8Izadgjs2ACa-sXA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*htKNcr8Izadgjs2ACa-sXA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*htKNcr8Izadgjs2ACa-sXA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*htKNcr8Izadgjs2ACa-sXA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*htKNcr8Izadgjs2ACa-sXA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*htKNcr8Izadgjs2ACa-sXA.png 1100w, https://miro.medium.com/v2/resize:fit:2000/format:webp/1*htKNcr8Izadgjs2ACa-sXA.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*htKNcr8Izadgjs2ACa-sXA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*htKNcr8Izadgjs2ACa-sXA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*htKNcr8Izadgjs2ACa-sXA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*htKNcr8Izadgjs2ACa-sXA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*htKNcr8Izadgjs2ACa-sXA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*htKNcr8Izadgjs2ACa-sXA.png 1100w, https://miro.medium.com/v2/resize:fit:2000/1*htKNcr8Izadgjs2ACa-sXA.png 2000w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 1000px"/><img alt="" class="bh ms sa c" width="1000" height="1088" loading="eager" role="presentation"/></picture></div></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Tool Graph: Get-ProcessTokenPrivilege</figcaption></figure></div></div></div><div class="ab cb"><div class="ci bh fz ga gb gc"><p id="dfee" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">The tool graph shows that this PowerShell function is meant to check which privileges are enabled for the current user context. We see <code class="cx qj qk ql qm b">kernel32!GetCurrentProcess</code> emits a handle to the calling process. That handle is then passed to <code class="cx qj qk ql qm b">advapi32!OpenProcessToken</code>, which returns a handle to the calling process’s primary token. Finally, the <code class="cx qj qk ql qm b">advapi32!GetTokenInformation</code> function is called to return a list of the token’s enabled privileges.</p><blockquote class="pr ps pt"><p id="8731" class="oh oi pu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk"><strong class="oj he">Note:</strong> Can you identify which categories <code class="cx qj qk ql qm b">advapi32!OpenProcessToken</code> and <code class="cx qj qk ql qm b">advapi32!GetTokenInformation</code> fit into?</p></blockquote><h2 id="4e58" class="pv nm gu bf nn pw px dy nq py pz ea nt oq qa qb qc ou qd qe qf oy qg qh qi ha bk">Function Call Stack</h2><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div class="rm rn tc"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*yWwd4NZ3mtdeurX9mBPmmQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*yWwd4NZ3mtdeurX9mBPmmQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*yWwd4NZ3mtdeurX9mBPmmQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*yWwd4NZ3mtdeurX9mBPmmQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*yWwd4NZ3mtdeurX9mBPmmQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*yWwd4NZ3mtdeurX9mBPmmQ.png 1100w, https://miro.medium.com/v2/resize:fit:778/format:webp/1*yWwd4NZ3mtdeurX9mBPmmQ.png 778w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 389px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*yWwd4NZ3mtdeurX9mBPmmQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*yWwd4NZ3mtdeurX9mBPmmQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*yWwd4NZ3mtdeurX9mBPmmQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*yWwd4NZ3mtdeurX9mBPmmQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*yWwd4NZ3mtdeurX9mBPmmQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*yWwd4NZ3mtdeurX9mBPmmQ.png 1100w, https://miro.medium.com/v2/resize:fit:778/1*yWwd4NZ3mtdeurX9mBPmmQ.png 778w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 389px"/><img alt="" class="bh ms sa c" width="389" height="254" loading="lazy" role="presentation"/></picture></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Function Call Stack: kernel32!GetCurrentProcess</figcaption></figure><p id="34d2" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">In this sample, the <code class="cx qj qk ql qm b">kernel32!GetCurrentProcess</code> function represents the Local Function category. After opening <code class="cx qj qk ql qm b">kernel32.dll</code> in IDA, we can browse to the implementation of the <code class="cx qj qk ql qm b">GetCurrentProcess</code> function. We see that this function does not do much. It returns <code class="cx qj qk ql qm b">-1</code>, which functions as a pseudo-handle for the calling process.</p><figure class="rp rq rr rs rt rg rm rn paragraph-image"><div class="rm rn ch"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*fL0_P0fF8f3hg7Im_RC9KQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*fL0_P0fF8f3hg7Im_RC9KQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*fL0_P0fF8f3hg7Im_RC9KQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*fL0_P0fF8f3hg7Im_RC9KQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*fL0_P0fF8f3hg7Im_RC9KQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*fL0_P0fF8f3hg7Im_RC9KQ.png 1100w, https://miro.medium.com/v2/resize:fit:1360/format:webp/1*fL0_P0fF8f3hg7Im_RC9KQ.png 1360w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 680px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*fL0_P0fF8f3hg7Im_RC9KQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*fL0_P0fF8f3hg7Im_RC9KQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*fL0_P0fF8f3hg7Im_RC9KQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*fL0_P0fF8f3hg7Im_RC9KQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*fL0_P0fF8f3hg7Im_RC9KQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*fL0_P0fF8f3hg7Im_RC9KQ.png 1100w, https://miro.medium.com/v2/resize:fit:1360/1*fL0_P0fF8f3hg7Im_RC9KQ.png 1360w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 680px"/><img alt="" class="bh ms sa c" width="680" height="484" loading="lazy" role="presentation"/></picture></div><figcaption class="sb ff sc rm rn sd se bf b bg z du">Implementation of kernel32!GetCurrentProcess</figcaption></figure><p id="b5fa" class="pw-post-body-paragraph oh oi gu oj b hx pe ol om ia pf oo op oq pg os ot ou ph ow ox oy pi pa pb pc gn bk">As a result, the function call stack is essentially non-existent, as shown below. Since <code class="cx qj qk ql qm b">kernel32!GetCurrentProcess</code> does not cross a client/server boundary like that of user-mode/kernel-mode, RPC client/server, or LSA client/auth package it does not have a corresponding operation.</p><h1 id="1281" class="nl nm gu bf nn no np hz nq nr ns ic nt nu nv nw nx ny nz oa ob oc od oe of og bk">Conclusion</h1><p id="dc9e" class="pw-post-body-paragraph oh oi gu oj b hx ok ol om ia on oo op oq or os ot ou ov ow ox oy oz pa pb pc gn bk">For as long as I can remember, we have used API functions to describe a particular malware sample’s functionality. These function chains have proven helpful to Detection Engineers as they provide a blueprint for observation. However, not all functions are created equally. In our analysis, we’ve identified seven function categories, each requiring a different analytical approach. I hope the descriptions in this article help you determine which type of function you have encountered so you can ensure you are collecting data with an adequate level of granularity.</p></div></div></div></div></section></div></div></article></div><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="td te ab jr"><div class="qz ab"><a class="tf ay am ao" href="https://medium.com/tag/on-detection?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><div class="tg fj cx th ge ti tj bf b bg z bk tk">On Detection</div></a></div><div class="qz ab"><a class="tf ay am ao" href="https://medium.com/tag/research?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><div class="tg fj cx th ge ti tj bf b bg z bk tk">Research</div></a></div><div class="qz ab"><a class="tf ay am ao" href="https://medium.com/tag/detection-engineering?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><div class="tg fj cx th ge ti tj bf b bg z bk tk">Detection Engineering</div></a></div><div class="qz ab"><a class="tf ay am ao" href="https://medium.com/tag/infosec?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><div class="tg fj cx th ge ti tj bf b bg z bk tk">Infosec</div></a></div></div></div></div><div class="l"></div><footer class="tl tm tn to tp ab q tq jb c"><div class="l ae"><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="ab cp tr"><div class="ab q lk"><div class="ts l"><span class="l tt tu tv e d"><div class="ab q lk ll"><div class="pw-multi-vote-icon fj jt lm ln lo"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fspecter-ops-posts%2F5942e70e05ab&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;user=Jared+Atkinson&amp;userId=b206c297df42&amp;source=---footer_actions--5942e70e05ab---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="lp ao lq lr ls lt am lu lv lw lo"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l lx ly lz ma mb mc md"><p class="bf b dv z du"><span class="me">--</span></p></div></div></span><span class="l h g f tw tx"><div class="ab q lk ll"><div class="pw-multi-vote-icon fj jt lm ln lo"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fspecter-ops-posts%2F5942e70e05ab&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;user=Jared+Atkinson&amp;userId=b206c297df42&amp;source=---footer_actions--5942e70e05ab---------------------clap_footer-----------" rel="noopener follow"><div><div class="bm" aria-hidden="false"><div class="lp ao lq lr ls lt am lu lv lw lo"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l lx ly lz ma mb mc md"><p class="bf b dv z du"><span class="me">--</span></p></div></div></span></div><div class="bq ab"><div><div class="bm" aria-hidden="false"><button class="ao lp mf mg ab q fk mh mi" aria-label="responses"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="mj"><path d="M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z"></path></svg></button></div></div></div></div><div class="ab q"><div class="ty l jo"><div><div class="bm" aria-hidden="false"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerBookmarkButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5942e70e05ab&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;source=---footer_actions--5942e70e05ab---------------------bookmark_footer-----------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="none" viewBox="0 0 25 25" class="du ml" aria-label="Add to list bookmark button"><path fill="currentColor" d="M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z"></path></svg></a></span></div></div></div><div class="ty l jo"><div class="bm" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bm" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af fk ah ai aj ak al mt an ao ap ex mu mv mi mw"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1" clip-rule="evenodd"></path></svg></button></div></div></div></div></div></div></div></div></div></footer><div class="tz l"><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="ua l"><div class="ab ub uc ud jq jp"><div class="ue uf ug uh ui uj uk ul um un ab cp"><div class="h k"><a href="https://posts.specterops.io/?source=post_page---post_publication_info--5942e70e05ab--------------------------------" rel="noopener follow"><div class="fj ab"><img alt="Posts By SpecterOps Team Members" class="uo is it cx" src="https://miro.medium.com/v2/resize:fill:96:96/1*D-FDlfkqivRBQZoESrwtqw.png" width="48" height="48" loading="lazy"/><div class="uo l it is fs n fr up"></div></div></a></div><div class="j i d"><a href="https://posts.specterops.io/?source=post_page---post_publication_info--5942e70e05ab--------------------------------" rel="noopener follow"><div class="fj ab"><img alt="Posts By SpecterOps Team Members" class="uo ur uq cx" src="https://miro.medium.com/v2/resize:fill:128:128/1*D-FDlfkqivRBQZoESrwtqw.png" width="64" height="64" loading="lazy"/><div class="uo l uq ur fs n fr up"></div></div></a></div><div class="j i d us jo"><div class="ab"><span><a class="bf b bg z ut tg uu uv uw ux uy ev ew uz va vb fa fb fc fd bm fe ff" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Fspecter-ops-posts&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;collection=Posts+By+SpecterOps+Team+Members&amp;collectionId=f05f8696e3cc&amp;source=post_page---post_publication_info--5942e70e05ab---------------------follow_profile-----------" rel="noopener follow">Follow</a></span></div></div></div><div class="ab co qv"><div class="vc vd ve ri rh l"><a class="af ag ah aj ak al am an ao ap aq ar as at ab q" href="https://posts.specterops.io/?source=post_page---post_publication_info--5942e70e05ab--------------------------------" rel="noopener follow"><h2 class="pw-author-name bf vg vh vi vj vk vl vm oq qb qc ou qe qf oy qh qi bk"><span class="gn vf">Published in <!-- -->Posts By SpecterOps Team Members</span></h2></a><div class="qz ab ir"><div class="l jo"><span class="pw-follower-count bf b bg z du"><a class="af ag ah ai aj ak al am an ao ap aq ar jh" rel="noopener follow" href="/followers?source=post_page---post_publication_info--5942e70e05ab--------------------------------">4.8K Followers</a></span></div><div class="bf b bg z du ab js"><span class="ji l" aria-hidden="true"><span class="bf b bg z du">·</span></span><a class="af ag ah ai aj ak al am an ao ap aq ar jh" rel="noopener follow" href="/part-15-function-type-categories-5942e70e05ab?source=post_page---post_publication_info--5942e70e05ab--------------------------------">Last published <!-- -->3 days ago</a></div></div><div class="vn l"><p class="bf b bg z bk"><span class="gn">Posts from SpecterOps team members on various topics relating information security</span></p></div></div></div><div class="h k"><div class="ab"><span><a class="bf b bg z ut tg uu uv uw ux uy ev ew uz va vb fa fb fc fd bm fe ff" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Fspecter-ops-posts&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;collection=Posts+By+SpecterOps+Team+Members&amp;collectionId=f05f8696e3cc&amp;source=post_page---post_publication_info--5942e70e05ab---------------------follow_profile-----------" rel="noopener follow">Follow</a></span></div></div></div></div><div class="ab ub uc ud jq jp"><div class="ue uf ug uh ui uj uk ul um un ab cp"><div class="h k"><a tabindex="0" href="https://medium.com/@jaredcatkinson?source=post_page---post_author_info--5942e70e05ab--------------------------------" rel="noopener follow"><div class="l fj"><img alt="Jared Atkinson" class="l fd by it is cx" src="https://miro.medium.com/v2/resize:fill:96:96/1*sRu1zCJZ_h69U4RuksJhKQ@2x.jpeg" width="48" height="48" loading="lazy"/><div class="fr by l it is fs n ay up"></div></div></a></div><div class="j i d"><a tabindex="0" href="https://medium.com/@jaredcatkinson?source=post_page---post_author_info--5942e70e05ab--------------------------------" rel="noopener follow"><div class="l fj"><img alt="Jared Atkinson" class="l fd by uq ur cx" src="https://miro.medium.com/v2/resize:fill:128:128/1*sRu1zCJZ_h69U4RuksJhKQ@2x.jpeg" width="64" height="64" loading="lazy"/><div class="fr by l uq ur fs n ay up"></div></div></a></div><div class="j i d us jo"><div class="ab"><span><a class="bf b bg z ut tg uu uv uw ux uy ev ew uz va vb fa fb fc fd bm fe ff" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb206c297df42&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;user=Jared+Atkinson&amp;userId=b206c297df42&amp;source=post_page-b206c297df42--post_author_info--5942e70e05ab---------------------follow_profile-----------" rel="noopener follow">Follow</a></span></div></div></div><div class="ab co qv"><div class="vc vd ve ri rh l"><a class="af ag ah aj ak al am an ao ap aq ar as at ab q" href="https://medium.com/@jaredcatkinson?source=post_page---post_author_info--5942e70e05ab--------------------------------" rel="noopener follow"><h2 class="pw-author-name bf vg vh vi vj vk vl vm oq qb qc ou qe qf oy qh qi bk"><span class="gn vf">Written by <!-- -->Jared Atkinson</span></h2></a><div class="qz ab ir"><div class="l jo"><span class="pw-follower-count bf b bg z du"><a class="af ag ah ai aj ak al am an ao ap aq ar jh" href="https://medium.com/@jaredcatkinson/followers?source=post_page---post_author_info--5942e70e05ab--------------------------------" rel="noopener follow">976 Followers</a></span></div><div class="bf b bg z du ab js"><span class="ji l" aria-hidden="true"><span class="bf b bg z du">·</span></span><a class="af ag ah ai aj ak al am an ao ap aq ar jh" href="https://medium.com/@jaredcatkinson/following?source=post_page---post_author_info--5942e70e05ab--------------------------------" rel="noopener follow">18 Following</a></div></div><div class="vn l"></div></div></div><div class="h k"><div class="ab"><span><a class="bf b bg z ut tg uu uv uw ux uy ev ew uz va vb fa fb fc fd bm fe ff" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb206c297df42&amp;operation=register&amp;redirect=https%3A%2F%2Fposts.specterops.io%2Fpart-15-function-type-categories-5942e70e05ab&amp;user=Jared+Atkinson&amp;userId=b206c297df42&amp;source=post_page-b206c297df42--post_author_info--5942e70e05ab---------------------follow_profile-----------" rel="noopener follow">Follow</a></span></div></div></div></div></div></div><div class="vo l"><div class="vp bh r tz"></div><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="ab q cp"><h2 class="bf vg no hz nq nr ic nt nu nw nx ny oa ob oc oe of bk">No responses yet</h2><div class="ab vq"><div><div class="bm" aria-hidden="false"><a class="vr vs" href="https://policy.medium.com/medium-rules-30e5502c4eb4?source=post_page---post_responses--5942e70e05ab--------------------------------" rel="noopener follow" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25"><path fill-rule="evenodd" d="M11.987 5.036a.754.754 0 0 1 .914-.01c.972.721 1.767 1.218 2.6 1.543.828.322 1.719.485 2.887.505a.755.755 0 0 1 .741.757c-.018 3.623-.43 6.256-1.449 8.21-1.034 1.984-2.662 3.209-4.966 4.083a.75.75 0 0 1-.537-.003c-2.243-.874-3.858-2.095-4.897-4.074-1.024-1.951-1.457-4.583-1.476-8.216a.755.755 0 0 1 .741-.757c1.195-.02 2.1-.182 2.923-.503.827-.322 1.6-.815 2.519-1.535m.468.903c-.897.69-1.717 1.21-2.623 1.564-.898.35-1.856.527-3.026.565.037 3.45.469 5.817 1.36 7.515.884 1.684 2.25 2.762 4.284 3.571 2.092-.81 3.465-1.89 4.344-3.575.886-1.698 1.299-4.065 1.334-7.512-1.149-.039-2.091-.217-2.99-.567-.906-.353-1.745-.873-2.683-1.561m-.009 9.155a2.672 2.672 0 1 0 0-5.344 2.672 2.672 0 0 0 0 5.344m0 1a3.672 3.672 0 1 0 0-7.344 3.672 3.672 0 0 0 0 7.344m-1.813-3.777.525-.526.916.917 1.623-1.625.526.526-2.149 2.152z" clip-rule="evenodd"></path></svg></a></div></div></div></div><div class="vt vu vv vw vx l"></div></div></div></div><div class="vy vz wa wb wc l bx"><div class="h k j"><div class="vp bh wd we"></div><div class="ab cb"><div class="ci bh fz ga gb gc"><div class="wf ab lk jr"><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Help</p></a></div><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Status</p></a></div><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/about?autoplay=1&amp;source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">About</p></a></div><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Careers</p></a></div><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="pressinquiries@medium.com?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Press</p></a></div><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Blog</p></a></div><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Privacy</p></a></div><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Terms</p></a></div><div class="wg wh l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Text to speech</p></a></div><div class="wg l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/business?source=post_page-----5942e70e05ab--------------------------------" rel="noopener follow"><p class="bf b dv z du">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20250110-154215-d58a2d1ab2"</script><script>window.__GRAPHQL_URI__ = "https://posts.specterops.io/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"This request is not using the cache middleware worker","group":"disabled","tags":["group-edgeCachePosts","post-5942e70e05ab","user-b206c297df42","collection-f05f8696e3cc"],"serverVariantState":"","middlewareEnabled":false,"cacheStatus":"DYNAMIC","shouldUseCache":false,"vary":[],"lohpSummerUpsellEnabled":false},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"COLLECTION","id":"f05f8696e3cc","explicit":true},"viewerIsBot":false},"debug":{"requestId":"b7f714e2-8683-44b7-a56b-465db62a0b4a","requestTag":"","hybridDevServices":[],"originalSpanCarrier":{"traceparent":"00-e15d87351e214e14a9d8105502af3c59-b0db4bf79535c2d2-01"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fposts.specterops.io\u002Fpart-15-function-type-categories-5942e70e05ab","host":"posts.specterops.io","hostname":"posts.specterops.io","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false,"partnerProgram":{"selectedCountryCode":null},"queryString":"?source=rss----f05f8696e3cc---4"},"config":{"nodeEnv":"production","version":"main-20250110-154215-d58a2d1ab2","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20250110-154215-d58a2d1ab2","commit":"d58a2d1ab2df37007c05f758ad444c4fe1e39591"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"7*V1_7XP4snlmqrc_0Njontw.png","height":110,"width":500},"postLogo":{"imageId":"bd978bb536350a710e8efb012513429cabdc4c28700604261aeda246d0f980b7","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyV2":"e8a5e126-792b-4ee6-8fba-d574c1b02fc5","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyV2":"3815d7d6-b8ca-4224-9b8c-182f9047866e","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyOneYearFree":"e6c0637a-2bad-4171-ab4f-3c268633d83c","monthly25PercentOffFirstYear":"235ecc62-0cdb-49ae-9378-726cd21c504b","monthly20PercentOffFirstYear":"ba518864-9c13-4a99-91ca-411bf0cac756","monthly15PercentOffFirstYear":"594c029b-9f89-43d5-88f8-8173af4e070e","monthly10PercentOffFirstYear":"c6c7bc9a-40f2-4b51-8126-e28511d5bdb0","monthlyForStudents":"629ebe51-da7d-41fd-8293-34cd2f2030a8","yearlyOneYearFree":"78ba7be9-0d9f-4ece-aa3e-b54b826f2bf1","yearly25PercentOffFirstYear":"2dbb010d-bb8f-4eeb-ad5c-a08509f42d34","yearly20PercentOffFirstYear":"47565488-435b-47f8-bf93-40d5fbe0ebc8","yearly15PercentOffFirstYear":"8259809b-0881-47d9-acf7-6c001c7f720f","yearly10PercentOffFirstYear":"9dd694fb-96e1-472c-8d9e-3c868d5c1506","yearlyForStudents":"e29345ef-ab1c-4234-95c5-70e50fe6bc23","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":""}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","viewer":null,"variantFlags":[{"__typename":"VariantFlag","name":"enable_ios_autorefresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"disable_partner_program_enrollment","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_hybrid_ranking_model","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_new_stripe_customers","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_topic_portals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_new_push_notification_endpoint","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sprig","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_starspace","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_abandoned_cart_promotion_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recirc_model","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_footer_app_buttons","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_cache_less_following_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_conversion_ranker_v2","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_mastodon_avatar_upload","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_abandoned_paywall_promotion_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_app_flirty_thirty","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_see_pronouns","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_creator_welcome_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ranker_v10","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_conversion_model_v2","valueType":{"__typename":"VariantFlagString","value":"group_2"}},{"__typename":"VariantFlag","name":"enable_update_topic_portals_wtf","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"browsable_stream_config_bucket","valueType":{"__typename":"VariantFlagString","value":"curated-topics"}},{"__typename":"VariantFlag","name":"skip_fs_cache_user_vals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_user_follows","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tag_recs","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_one_tap","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_homepage","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_signup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_verified_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_reading_history","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rex_enable_less_aggressive_filtering_digest","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ml_rank_rex_anno","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_new_manage_membership_flow","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_programming","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards_byline","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_simplified_digest_v2_b","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_rating_prompt_stories_read_threshold","valueType":{"__typename":"VariantFlagNumber","value":2}},{"__typename":"VariantFlag","name":"enable_eventstats_event_processing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_archive_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_integration","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_deprecate_legacy_providers_v3","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tribute_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_home_post_menu","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_winback_promotion_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_newsletter_lo_flow_custom_domains","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_seamless_social_sharing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_server_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rito_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_easy_resubscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_google_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_paypal","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pill_based_home_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"textshots_userid","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"ios_enable_verified_book_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_display_paywall_after_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_test_auth","valueType":{"__typename":"VariantFlagString","value":"disallow"}},{"__typename":"VariantFlag","name":"enable_braintree_trial_membership","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"onboarding_tags_from_top_views","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_editor_new_publishing_flow","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_continue_this_thread","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_image_sharer","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_validate_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_in_app_free_trial","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_iceland_nux","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_post_bottom_responses_native","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_lock_responses","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_legacy_feed_in_iceland","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_miro_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_send_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_maim_the_meter","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_medium2_kbfd","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_create_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"mobile_custom_app_icon","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"reader_fair_distribution_non_qp","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_monthly_premium_plan","valueType":{"__typename":"VariantFlagString","value":"12a660186432"}},{"__typename":"VariantFlag","name":"enable_braintree_apple_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_cancellation_discount_v1_gate","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_client","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rex_generator_max_candidates","valueType":{"__typename":"VariantFlagNumber","value":1000}},{"__typename":"VariantFlag","name":"available_annual_premium_plan","valueType":{"__typename":"VariantFlagString","value":"4a442ace1476"}},{"__typename":"VariantFlag","name":"can_receive_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_first_story","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recaptcha_enterprise","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tipping_v0_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_sign_in","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_entities_to_follow_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recommended_publishers_query","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_switch_plan_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_marketing_emails","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members_username_selection","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"reengagement_notification_duration","valueType":{"__typename":"VariantFlagNumber","value":3}},{"__typename":"VariantFlag","name":"available_monthly_plan","valueType":{"__typename":"VariantFlagString","value":"60e220181034"}},{"__typename":"VariantFlag","name":"enable_group_gifting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_post_referrers","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"redefined_top_posts","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pub_featuring","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_aspiriational","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_programming_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_bg_post_post","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_speechify_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_speechify_widget","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_two_hour_refresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_all_recs_surfaces","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signup_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"enable_automod","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_c","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_post_bottom_responses","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_update_explore_wtf","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_lists_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_social_share_sheet","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_trust_service_recaptcha","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"coronavirus_topic_recirc","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sms_verification_for_publish","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signin_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"enable_aurora_pub_follower_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tick_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lo_homepage","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"android_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"goliath_externalsearch_enable_comment_deindexation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_yearly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_post_bottom_responses_input","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_configure_pronouns","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_plans_page_payment_form","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_updated_pub_recs_ui","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_verifications_service","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"glyph_font_set","valueType":{"__typename":"VariantFlagString","value":"m2-unbound-source-serif-pro"}},{"__typename":"VariantFlag","name":"num_post_bottom_responses_to_show","valueType":{"__typename":"VariantFlagNumber","value":3}},{"__typename":"VariantFlag","name":"enable_members_only_audio","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_aggregator_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_publication_hierarchy_web","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_intrinsic_automatic_actions","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_post_publish_permission_check","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_boost_nia_v01","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_iceland_forced_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_country_expansion","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_monthly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_lite_response_markup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_premium_tier_badge","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_access","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tipping_v0_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_aspirational_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_syntax_highlight","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_diversification_rex","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_remove_twitter_onboarding_step","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_import","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_auto_follow_on_subscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_branch_io","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pre_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_plan","valueType":{"__typename":"VariantFlagString","value":"2c754bcc2995"}},{"__typename":"VariantFlag","name":"enable_braintree_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}}],"collectionByDomainOrSlug({\"domainOrSlug\":\"posts.specterops.io\"})":{"__ref":"Collection:f05f8696e3cc"},"postResult({\"id\":\"5942e70e05ab\"})":{"__ref":"Post:5942e70e05ab"}},"ImageMetadata:1*D-FDlfkqivRBQZoESrwtqw.png":{"__typename":"ImageMetadata","id":"1*D-FDlfkqivRBQZoESrwtqw.png"},"Collection:f05f8696e3cc":{"__typename":"Collection","id":"f05f8696e3cc","favicon":{"__ref":"ImageMetadata:1*D-FDlfkqivRBQZoESrwtqw.png"},"customStyleSheet":null,"colorPalette":{"__typename":"ColorPalette","highlightSpectrum":{"__typename":"ColorSpectrum","backgroundColor":"#FFFFFFFF","colorPoints":[{"__typename":"ColorPoint","color":"#FFF3F1FF","point":0},{"__typename":"ColorPoint","color":"#FFF1EFFF","point":0.1},{"__typename":"ColorPoint","color":"#FFEEEDFF","point":0.2},{"__typename":"ColorPoint","color":"#FFECEBFF","point":0.3},{"__typename":"ColorPoint","color":"#FFEAE9FF","point":0.4},{"__typename":"ColorPoint","color":"#FFE8E7FF","point":0.5},{"__typename":"ColorPoint","color":"#FFE5E4FF","point":0.6},{"__typename":"ColorPoint","color":"#FFE3E2FF","point":0.7},{"__typename":"ColorPoint","color":"#FFE1E0FF","point":0.8},{"__typename":"ColorPoint","color":"#FFDEDEFF","point":0.9},{"__typename":"ColorPoint","color":"#FFDCDCFF","point":1}]},"defaultBackgroundSpectrum":{"__typename":"ColorSpectrum","backgroundColor":"#FFFFFFFF","colorPoints":[{"__typename":"ColorPoint","color":"#FF8080B7","point":0},{"__typename":"ColorPoint","color":"#FF7777A8","point":0.1},{"__typename":"ColorPoint","color":"#FF6E6E9A","point":0.2},{"__typename":"ColorPoint","color":"#FF65658B","point":0.3},{"__typename":"ColorPoint","color":"#FF5C5B7D","point":0.4},{"__typename":"ColorPoint","color":"#FF52526E","point":0.5},{"__typename":"ColorPoint","color":"#FF484860","point":0.6},{"__typename":"ColorPoint","color":"#FF3D3D51","point":0.7},{"__typename":"ColorPoint","color":"#FF323241","point":0.8},{"__typename":"ColorPoint","color":"#FF262632","point":0.9},{"__typename":"ColorPoint","color":"#FF191921","point":1}]},"tintBackgroundSpectrum":{"__typename":"ColorSpectrum","backgroundColor":"#FF1E184B","colorPoints":[{"__typename":"ColorPoint","color":"#FF1E184B","point":0},{"__typename":"ColorPoint","color":"#FF3A3866","point":0.1},{"__typename":"ColorPoint","color":"#FF54537D","point":0.2},{"__typename":"ColorPoint","color":"#FF6C6C93","point":0.3},{"__typename":"ColorPoint","color":"#FF8383A6","point":0.4},{"__typename":"ColorPoint","color":"#FF9999B9","point":0.5},{"__typename":"ColorPoint","color":"#FFAEAECA","point":0.6},{"__typename":"ColorPoint","color":"#FFC3C2DB","point":0.7},{"__typename":"ColorPoint","color":"#FFD8D6EB","point":0.8},{"__typename":"ColorPoint","color":"#FFEBEAFA","point":0.9},{"__typename":"ColorPoint","color":"#FFFFFDFF","point":1}]}},"domain":"posts.specterops.io","slug":"specter-ops-posts","googleAnalyticsId":"UA-102239211-2","name":"Posts By SpecterOps Team Members","subscriberCount":4880,"description":"Posts from SpecterOps team members on various topics relating information security","avatar":{"__ref":"ImageMetadata:1*D-FDlfkqivRBQZoESrwtqw.png"},"latestPostsConnection({\"paging\":{\"limit\":1}})":{"__typename":"PostConnection","posts":[{"__ref":"Post:5942e70e05ab"}]},"viewerEdge":{"__ref":"CollectionViewerEdge:collectionId:f05f8696e3cc-viewerId:lo_49b0304f763c"},"twitterUsername":"specterops","facebookPageId":null,"logo":{"__ref":"ImageMetadata:1*s-5BWBr8XsgtIU5azKNhZQ.jpeg"}},"User:b206c297df42":{"__typename":"User","id":"b206c297df42","customDomainState":null,"hasSubdomain":false,"username":"jaredcatkinson","linkedAccounts":{"__ref":"LinkedAccounts:b206c297df42"},"isSuspended":false,"name":"Jared Atkinson","imageId":"1*sRu1zCJZ_h69U4RuksJhKQ@2x.jpeg","verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":976,"followingCount":15,"collectionFollowingCount":3},"bio":"","membership":null,"allowNotes":true,"viewerEdge":{"__ref":"UserViewerEdge:userId:b206c297df42-viewerId:lo_49b0304f763c"},"twitterScreenName":"jaredcatkinson"},"Post:5942e70e05ab":{"__typename":"Post","id":"5942e70e05ab","firstPublishedAt":1736265995888,"creator":{"__ref":"User:b206c297df42"},"collection":{"__ref":"Collection:f05f8696e3cc"},"isSeries":false,"mediumUrl":"https:\u002F\u002Fposts.specterops.io\u002Fpart-15-function-type-categories-5942e70e05ab","sequence":null,"uniqueSlug":"part-15-function-type-categories-5942e70e05ab","content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"c7d8","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:44f21662d723_0"},{"__ref":"Paragraph:44f21662d723_1"},{"__ref":"Paragraph:44f21662d723_2"},{"__ref":"Paragraph:44f21662d723_3"},{"__ref":"Paragraph:44f21662d723_4"},{"__ref":"Paragraph:44f21662d723_5"},{"__ref":"Paragraph:44f21662d723_6"},{"__ref":"Paragraph:44f21662d723_7"},{"__ref":"Paragraph:44f21662d723_8"},{"__ref":"Paragraph:44f21662d723_9"},{"__ref":"Paragraph:44f21662d723_10"},{"__ref":"Paragraph:44f21662d723_11"},{"__ref":"Paragraph:44f21662d723_12"},{"__ref":"Paragraph:44f21662d723_13"},{"__ref":"Paragraph:44f21662d723_14"},{"__ref":"Paragraph:44f21662d723_15"},{"__ref":"Paragraph:44f21662d723_16"},{"__ref":"Paragraph:44f21662d723_17"},{"__ref":"Paragraph:44f21662d723_18"},{"__ref":"Paragraph:44f21662d723_19"},{"__ref":"Paragraph:44f21662d723_20"},{"__ref":"Paragraph:44f21662d723_21"},{"__ref":"Paragraph:44f21662d723_22"},{"__ref":"Paragraph:44f21662d723_23"},{"__ref":"Paragraph:44f21662d723_24"},{"__ref":"Paragraph:44f21662d723_25"},{"__ref":"Paragraph:44f21662d723_26"},{"__ref":"Paragraph:44f21662d723_27"},{"__ref":"Paragraph:44f21662d723_28"},{"__ref":"Paragraph:44f21662d723_29"},{"__ref":"Paragraph:44f21662d723_30"},{"__ref":"Paragraph:44f21662d723_31"},{"__ref":"Paragraph:44f21662d723_32"},{"__ref":"Paragraph:44f21662d723_33"},{"__ref":"Paragraph:44f21662d723_34"},{"__ref":"Paragraph:44f21662d723_35"},{"__ref":"Paragraph:44f21662d723_36"},{"__ref":"Paragraph:44f21662d723_37"},{"__ref":"Paragraph:44f21662d723_38"},{"__ref":"Paragraph:44f21662d723_39"},{"__ref":"Paragraph:44f21662d723_40"},{"__ref":"Paragraph:44f21662d723_41"},{"__ref":"Paragraph:44f21662d723_42"},{"__ref":"Paragraph:44f21662d723_43"},{"__ref":"Paragraph:44f21662d723_44"},{"__ref":"Paragraph:44f21662d723_45"},{"__ref":"Paragraph:44f21662d723_46"},{"__ref":"Paragraph:44f21662d723_47"},{"__ref":"Paragraph:44f21662d723_48"},{"__ref":"Paragraph:44f21662d723_49"},{"__ref":"Paragraph:44f21662d723_50"},{"__ref":"Paragraph:44f21662d723_51"},{"__ref":"Paragraph:44f21662d723_52"},{"__ref":"Paragraph:44f21662d723_53"},{"__ref":"Paragraph:44f21662d723_54"},{"__ref":"Paragraph:44f21662d723_55"},{"__ref":"Paragraph:44f21662d723_56"},{"__ref":"Paragraph:44f21662d723_57"},{"__ref":"Paragraph:44f21662d723_58"},{"__ref":"Paragraph:44f21662d723_59"},{"__ref":"Paragraph:44f21662d723_60"},{"__ref":"Paragraph:44f21662d723_61"},{"__ref":"Paragraph:44f21662d723_62"},{"__ref":"Paragraph:44f21662d723_63"},{"__ref":"Paragraph:44f21662d723_64"},{"__ref":"Paragraph:44f21662d723_65"},{"__ref":"Paragraph:44f21662d723_66"},{"__ref":"Paragraph:44f21662d723_67"},{"__ref":"Paragraph:44f21662d723_68"},{"__ref":"Paragraph:44f21662d723_69"},{"__ref":"Paragraph:44f21662d723_70"},{"__ref":"Paragraph:44f21662d723_71"},{"__ref":"Paragraph:44f21662d723_72"},{"__ref":"Paragraph:44f21662d723_73"},{"__ref":"Paragraph:44f21662d723_74"},{"__ref":"Paragraph:44f21662d723_75"},{"__ref":"Paragraph:44f21662d723_76"},{"__ref":"Paragraph:44f21662d723_77"},{"__ref":"Paragraph:44f21662d723_78"},{"__ref":"Paragraph:44f21662d723_79"},{"__ref":"Paragraph:44f21662d723_80"},{"__ref":"Paragraph:44f21662d723_81"},{"__ref":"Paragraph:44f21662d723_82"},{"__ref":"Paragraph:44f21662d723_83"},{"__ref":"Paragraph:44f21662d723_84"},{"__ref":"Paragraph:44f21662d723_85"},{"__ref":"Paragraph:44f21662d723_86"},{"__ref":"Paragraph:44f21662d723_87"},{"__ref":"Paragraph:44f21662d723_88"},{"__ref":"Paragraph:44f21662d723_89"},{"__ref":"Paragraph:44f21662d723_90"},{"__ref":"Paragraph:44f21662d723_91"},{"__ref":"Paragraph:44f21662d723_92"},{"__ref":"Paragraph:44f21662d723_93"},{"__ref":"Paragraph:44f21662d723_94"},{"__ref":"Paragraph:44f21662d723_95"},{"__ref":"Paragraph:44f21662d723_96"},{"__ref":"Paragraph:44f21662d723_97"},{"__ref":"Paragraph:44f21662d723_98"},{"__ref":"Paragraph:44f21662d723_99"},{"__ref":"Paragraph:44f21662d723_100"},{"__ref":"Paragraph:44f21662d723_101"},{"__ref":"Paragraph:44f21662d723_102"},{"__ref":"Paragraph:44f21662d723_103"},{"__ref":"Paragraph:44f21662d723_104"},{"__ref":"Paragraph:44f21662d723_105"},{"__ref":"Paragraph:44f21662d723_106"},{"__ref":"Paragraph:44f21662d723_107"},{"__ref":"Paragraph:44f21662d723_108"},{"__ref":"Paragraph:44f21662d723_109"},{"__ref":"Paragraph:44f21662d723_110"},{"__ref":"Paragraph:44f21662d723_111"},{"__ref":"Paragraph:44f21662d723_112"},{"__ref":"Paragraph:44f21662d723_113"},{"__ref":"Paragraph:44f21662d723_114"},{"__ref":"Paragraph:44f21662d723_115"},{"__ref":"Paragraph:44f21662d723_116"},{"__ref":"Paragraph:44f21662d723_117"},{"__ref":"Paragraph:44f21662d723_118"},{"__ref":"Paragraph:44f21662d723_119"},{"__ref":"Paragraph:44f21662d723_120"},{"__ref":"Paragraph:44f21662d723_121"}]},"validatedShareKey":"","shareKeyCreator":null},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","primaryTopic":null,"topics":[],"isPublished":true,"latestPublishedVersion":"44f21662d723","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":0},"clapCount":3,"allowResponses":true,"isLimitedState":false,"title":"Part 15: Function Type Categories","socialTitle":"","socialDek":"","canonicalUrl":"","metaDescription":"","latestPublishedAt":1736265995888,"readingTime":19.241509433962264,"previewContent":{"__typename":"PreviewContent","subtitle":"Seven Ways to View API Functions"},"previewImage":{"__ref":"ImageMetadata:1*PyHOF2it3XEucvFC4018wA.png"},"isShortform":false,"seoTitle":"","updatedAt":1736270741251,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","viewerEdge":{"__ref":"PostViewerEdge:postId:5942e70e05ab-viewerId:lo_49b0304f763c"},"isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:on-detection"},{"__ref":"Tag:research"},{"__ref":"Tag:detection-engineering"},{"__ref":"Tag:infosec"}],"isNewsletter":false,"statusForCollection":"APPROVED","pendingCollection":null,"detectedLanguage":"en","wordCount":4622,"layerCake":6,"responsesLocked":false},"LinkedAccounts:b206c297df42":{"__typename":"LinkedAccounts","mastodon":null,"id":"b206c297df42"},"Paragraph:44f21662d723_0":{"__typename":"Paragraph","id":"44f21662d723_0","name":"6897","type":"H4","href":null,"layout":null,"metadata":null,"text":"On Detection: Tactical to Functional","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_1":{"__typename":"Paragraph","id":"44f21662d723_1","name":"6b54","type":"H3","href":null,"layout":null,"metadata":null,"text":"Part 15: Function Type Categories","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_2":{"__typename":"Paragraph","id":"44f21662d723_2","name":"9c4a","type":"H4","href":null,"layout":null,"metadata":null,"text":"Seven Ways to View API Functions","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_3":{"__typename":"Paragraph","id":"44f21662d723_3","name":"f23e","type":"H3","href":null,"layout":null,"metadata":null,"text":"Introduction","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_4":{"__typename":"Paragraph","id":"44f21662d723_4","name":"752f","type":"P","href":null,"layout":null,"metadata":null,"text":"Welcome back to Part 15 of the On Detection: Tactical to Functional blog series. I wrote this article to serve as a resource for those attempting to create tool graphs to describe the capabilities of the attacker tools or malware samples they encounter. Throughout this series, I’ve analyzed many API functions and summarized my analysis through function call stacks. As I expanded the range of functions I’ve analyzed, I noticed that there is not a one-size-fits-all solution when creating function call stacks.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":156,"end":167,"href":"https:\u002F\u002Fposts.specterops.io\u002Fon-detection-from-tactical-to-functional-1349e51e1a03","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":346,"end":366,"href":"https:\u002F\u002Fposts.specterops.io\u002Funderstanding-the-function-call-stack-f08b5341efa4","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_5":{"__typename":"Paragraph","id":"44f21662d723_5","name":"3b0e","type":"P","href":null,"layout":null,"metadata":null,"text":"Overall, I’ve found that there are, at least, seven different types of functions:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_6":{"__typename":"Paragraph","id":"44f21662d723_6","name":"2ebc","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Standard Functions (Syscalls)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_7":{"__typename":"Paragraph","id":"44f21662d723_7","name":"d83f","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Sub-operations (NtQueryInformation* or NtSetInformation*)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_8":{"__typename":"Paragraph","id":"44f21662d723_8","name":"5d8d","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Remote Procedure Calls (NdrClientCall*)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_9":{"__typename":"Paragraph","id":"44f21662d723_9","name":"e8ca","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Local Security Authority Functions (LsaCallAuthenticationPackage)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_10":{"__typename":"Paragraph","id":"44f21662d723_10","name":"cd51","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Driver IOCTLs (DeviceIoControl or NtFsControlFile)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_11":{"__typename":"Paragraph","id":"44f21662d723_11","name":"e534","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Compound Functions (Multiple operations)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_12":{"__typename":"Paragraph","id":"44f21662d723_12","name":"bf26","type":"OLI","href":null,"layout":null,"metadata":null,"text":"Local Functions","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_13":{"__typename":"Paragraph","id":"44f21662d723_13","name":"36e3","type":"P","href":null,"layout":null,"metadata":null,"text":"In this article, I work to categorize functions based on their function type. To do so, I will introduce the category and what makes its functions unique, share a sample whose critical function exemplifies the category, provide the sample’s tool graph and explain how it works, and finally break down the specific function call stack that demonstrates the category in question. Ultimately, you should have the toolset to identify the category to which a given function belongs based on a few heuristics I will share along the journey. This knowledge will empower you to better understand and categorize the attacker tools or malware samples you encounter.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_14":{"__typename":"Paragraph","id":"44f21662d723_14","name":"0efe","type":"P","href":null,"layout":null,"metadata":null,"text":"This article is broken down into sections that describe and demonstrate the categories. I subdivide each section further into a “category introduction,” where I will explain the category at a high level; the “sample,” where I will introduce the tool or malware sample that we will analyze to learn about the category; the “tool graph,” where I will explain how the sample implements its functionality; and the “function call stack,” where I will focus on the sample’s critical function which exemplifies the category of focus.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_15":{"__typename":"Paragraph","id":"44f21662d723_15","name":"eda4","type":"BQ","href":null,"layout":null,"metadata":null,"text":"While this article follows several relevant articles that examine individual function types in depth, I consider it more of a preamble to such deep dives. Here, I will introduce two or three new function-type categories I have not previously discussed, but I plan to write a subsequent deep dive on each eventually.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"EM","start":0,"end":315,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_16":{"__typename":"Paragraph","id":"44f21662d723_16","name":"e786","type":"H3","href":null,"layout":null,"metadata":null,"text":"1. Standard Function (syscall)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_17":{"__typename":"Paragraph","id":"44f21662d723_17","name":"3462","type":"P","href":null,"layout":null,"metadata":null,"text":"The first and most common category is the so-called standard functions. These functions are standard because they represent the most common construction and serve as excellent starting points for anyone interested in gaining experience building function call stacks. Standard functions typically involve multiple layers of redirection between DLLs but will inevitably pass the caller-supplied arguments to a system call (syscall) for execution in the kernel. If you’ve followed this series, you will be highly familiar with standard functions and know that we use the syscall as an abstraction layer, which I call an operation. As we progress into other categories, we will see that the operation will remain, but we will derive it differently.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_18":{"__typename":"Paragraph","id":"44f21662d723_18","name":"f7d5","type":"H4","href":null,"layout":null,"metadata":null,"text":"Sample","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_19":{"__typename":"Paragraph","id":"44f21662d723_19","name":"821b","type":"P","href":null,"layout":null,"metadata":null,"text":"Our standard function sample comes from DGRonpa’s excellent Process_Injection repository. I enjoy this repo because they have created simple proof-of-concept implementations for the Process Injection technique’s diverse set of procedures. If you are just getting started with implementing the analytical process I present in this series, I recommend you check out this project. It demonstrates how slight implementation changes can have a massive impact on the mutual detectability of malware samples. This article will focus on the Shellcode_Injection.cpp sample, which implements the canonical process injection procedure. For those unfamiliar with process injection, it is primarily a defense evacuation technique used by attackers to inject or migrate their malicious code into an otherwise legitimate process, thus making them less susceptible to detection.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":533,"end":556,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_20":{"__typename":"Paragraph","id":"44f21662d723_20","name":"1cb8","type":"MIXTAPE_EMBED","href":null,"layout":null,"metadata":null,"text":"Process_Injection\u002FClassical_Injeciton\u002FShellcode_Injection.cpp at main · DGRonpa\u002FProcess_Injection\nContribute to DGRonpa\u002FProcess_Injection development by creating an account on GitHub.github.com","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":193,"href":"https:\u002F\u002Fgithub.com\u002FDGRonpa\u002FProcess_Injection\u002Fblob\u002Fmain\u002FClassical_Injeciton\u002FShellcode_Injection.cpp#L40-L48","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":97,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":98,"end":183,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":{"__typename":"MixtapeMetadata","href":"https:\u002F\u002Fgithub.com\u002FDGRonpa\u002FProcess_Injection\u002Fblob\u002Fmain\u002FClassical_Injeciton\u002FShellcode_Injection.cpp#L40-L48","mediaResource":{"__typename":"MediaResource","mediumCatalog":null},"thumbnailImageId":"0*ZgxBYWxe613AcnQT"}},"Paragraph:44f21662d723_21":{"__typename":"Paragraph","id":"44f21662d723_21","name":"9dc3","type":"H4","href":null,"layout":null,"metadata":null,"text":"Tool Graph","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*NJSOO46f_sIkcHSkSYVYKw.png":{"__typename":"ImageMetadata","id":"1*NJSOO46f_sIkcHSkSYVYKw.png","originalHeight":2126,"originalWidth":2663,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_22":{"__typename":"Paragraph","id":"44f21662d723_22","name":"8b11","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*NJSOO46f_sIkcHSkSYVYKw.png"},"text":"Tool Graph: Shellcode_Injection.cpp","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_23":{"__typename":"Paragraph","id":"44f21662d723_23","name":"5936","type":"P","href":null,"layout":null,"metadata":null,"text":"We can construct the tool graph by analyzing the source code at the link in the previous section. In doing so, we see that the sample begins by opening a handle to the target process, the process that the attacker intends to inject their code into, by calling the kernel32!OpenProcess function. Next, the code passes the process handle to kernel32!VirtualAllocEx. VirtualAllocEx is a function that allows an application to allocate a buffer in the memory of a different or remote process. The memory buffer will hold the attacker’s shellcode. Next, the sample writes shellcode to the newly allocated buffer via the kernel32!WriteProcessMemory function. Finally, the sample calls kernel32!CreateRemoteThread to execute the shellcode in the target process, thus finalizing the injection routine.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":264,"end":284,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":339,"end":362,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":364,"end":378,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":615,"end":642,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":679,"end":706,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_24":{"__typename":"Paragraph","id":"44f21662d723_24","name":"6096","type":"H4","href":null,"layout":null,"metadata":null,"text":"Function Call Stack","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*BnFj3eU5dM3y5aX4DSd3FQ.png":{"__typename":"ImageMetadata","id":"1*BnFj3eU5dM3y5aX4DSd3FQ.png","originalHeight":2126,"originalWidth":612,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_25":{"__typename":"Paragraph","id":"44f21662d723_25","name":"b336","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*BnFj3eU5dM3y5aX4DSd3FQ.png"},"text":"Function Call Stack: kernel32!CreateRemoteThread","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_26":{"__typename":"Paragraph","id":"44f21662d723_26","name":"4c13","type":"P","href":null,"layout":null,"metadata":null,"text":"Based on my analysis of this sample, it appears that kernel32!CreateRemoteThread is the sample’s critical function. I attribute this choice to the fact that CreateRemoteThread is the function that causes the injection. When the sample calls CreateRemoteThread, we can say that process injection has occurred. Let’s take a look at the function call stack for kernel32!CreateRemoteThread. It is worth understanding the general flow we expect in standard functions.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":53,"end":80,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":157,"end":175,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":241,"end":259,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":358,"end":385,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_27":{"__typename":"Paragraph","id":"44f21662d723_27","name":"4ca0","type":"P","href":null,"layout":null,"metadata":null,"text":"By analyzing the function call stack, we find that the final function, before the Operation, is a system call (syscall) named NtCreateThreadEx. Syscalls, like NtCreateThreadEx, are responsible for transitioning execution from user-mode to kernel-mode. This transition serves as a boundary whereby analysts can treat the kernel-side functionality as opaque, as it is not standard for a user-mode application to interact with kernel code except through very specific windows like syscalls.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":126,"end":142,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":159,"end":175,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*OnmPoETDJS_L85ynW4kMJw.png":{"__typename":"ImageMetadata","id":"1*OnmPoETDJS_L85ynW4kMJw.png","originalHeight":760,"originalWidth":2180,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_28":{"__typename":"Paragraph","id":"44f21662d723_28","name":"4bb3","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*OnmPoETDJS_L85ynW4kMJw.png"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_29":{"__typename":"Paragraph","id":"44f21662d723_29","name":"5676","type":"H3","href":null,"layout":null,"metadata":null,"text":"2. Sub-Operations","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_30":{"__typename":"Paragraph","id":"44f21662d723_30","name":"5d26","type":"P","href":null,"layout":null,"metadata":null,"text":"Now that we have built the foundation, we can look at functions that offer a slight variation. Like Standard functions, this next function-type category is also based around a syscall but provides a bit more variation that must be accounted for by analysts. I call this group of functions Sub-Operations. These functions are often difficult to discern at the Win32 API layer but become evident at the Native API or Syscall layers due to a unique naming convention where the Native API and Syscall are referred to by Nt(Query\u002FSet)Information* where the * represents a specific object type such as Process, File, etc.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":516,"end":541,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_31":{"__typename":"Paragraph","id":"44f21662d723_31","name":"25e0","type":"BQ","href":null,"layout":null,"metadata":null,"text":"For more detailed information on functions in the sub-operation category, I recommend reading Part 14 of this series.","hasDropCap":true,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":94,"end":101,"href":"https:\u002F\u002Fposts.specterops.io\u002Fpart-14-sub-operations-5e119cf610b1","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_32":{"__typename":"Paragraph","id":"44f21662d723_32","name":"83ad","type":"H4","href":null,"layout":null,"metadata":null,"text":"Sample","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_33":{"__typename":"Paragraph","id":"44f21662d723_33","name":"4ee5","type":"P","href":null,"layout":null,"metadata":null,"text":"To demonstrate the Sub-Operation category, we will investigate a sample that Jonathan Johnson wrote for our Malware Morphology workshop. This sample, called Sample 1, implements a simple version of Token Impersonation, and we will find that its critical function is a Sub-Operation.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":77,"end":93,"href":null,"anchorType":"USER","userId":"78d2ff57ed70","linkMetadata":null},{"__typename":"Markup","type":"A","start":108,"end":135,"href":"https:\u002F\u002Fgithub.com\u002Fjaredcatkinson\u002FMalwareMorphology","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_34":{"__typename":"Paragraph","id":"44f21662d723_34","name":"cf77","type":"MIXTAPE_EMBED","href":null,"layout":null,"metadata":null,"text":"MalwareMorphology\u002FSample 1\u002Fsrc\u002FSource.cpp at main · jaredcatkinson\u002FMalwareMorphology\nContribute to jaredcatkinson\u002FMalwareMorphology development by creating an account on GitHub.github.com","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":187,"href":"https:\u002F\u002Fgithub.com\u002Fjaredcatkinson\u002FMalwareMorphology\u002Fblob\u002Fmain\u002FSample%201\u002Fsrc\u002FSource.cpp","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":85,"end":177,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":{"__typename":"MixtapeMetadata","href":"https:\u002F\u002Fgithub.com\u002Fjaredcatkinson\u002FMalwareMorphology\u002Fblob\u002Fmain\u002FSample%201\u002Fsrc\u002FSource.cpp","mediaResource":{"__typename":"MediaResource","mediumCatalog":null},"thumbnailImageId":"0*QmsI88PIAgqkQ-P5"}},"Paragraph:44f21662d723_35":{"__typename":"Paragraph","id":"44f21662d723_35","name":"2e1d","type":"BQ","href":null,"layout":null,"metadata":null,"text":"I encourage you to check out the full workshop to see how attackers can change their approach when facing different constraints or circumstances. The slides and labs are available in the linked GitHub repository, and a video recording of the workshop lecture is available on NorthSec’s YouTube channel.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":150,"end":156,"href":"https:\u002F\u002Fgithub.com\u002Fjaredcatkinson\u002FMalwareMorphology\u002Fblob\u002Fmain\u002FPresentation.pdf","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":161,"end":165,"href":"https:\u002F\u002Fgithub.com\u002Fjaredcatkinson\u002FMalwareMorphology\u002Ftree\u002Fmain\u002FLabs","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":275,"end":301,"href":"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=KTAeUjDBW3s","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_36":{"__typename":"Paragraph","id":"44f21662d723_36","name":"cb79","type":"H4","href":null,"layout":null,"metadata":null,"text":"Tool Graph","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*FH08UR-gtZnDkmFdLng1tw.png":{"__typename":"ImageMetadata","id":"1*FH08UR-gtZnDkmFdLng1tw.png","originalHeight":2416,"originalWidth":2409,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_37":{"__typename":"Paragraph","id":"44f21662d723_37","name":"e33d","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*FH08UR-gtZnDkmFdLng1tw.png"},"text":"Tool Graph: Malware Morphology Sample 1","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_38":{"__typename":"Paragraph","id":"44f21662d723_38","name":"1435","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s analyze Sample 1’s source code to build the tool graph. This sample starts by calling kernel32!OpenProcess to open a handle to the target process. In this case, the target process is the process from whom the attacker wants to impersonate. Next, it passes the process handle to advapi32!OpenProcessToken and opens a handle to the target process’s primary token. The primary token represents the user context the attacker is after. While the attacker now has access to their target token, Windows does not allow a process to impersonate the primary token of a different process, so Jonny calls advapi32!DuplicateToken to make a fresh copy of the token. Finally, he passes the duplicated token to advapi32!SetThreadToken to execute the impersonation. Finally, Jonny follows good programming practice by cleaning up the handles he opened by calling kernel32!CloseHandle three times. It is important to note that these calls to CloseHandle are purely optional, so it is plausible that a malicious implementation may exclude them.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":92,"end":112,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":284,"end":309,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":599,"end":622,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":701,"end":724,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":852,"end":872,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":930,"end":941,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_39":{"__typename":"Paragraph","id":"44f21662d723_39","name":"f6ca","type":"H4","href":null,"layout":null,"metadata":null,"text":"Function Call Stack","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*PyHOF2it3XEucvFC4018wA.png":{"__typename":"ImageMetadata","id":"1*PyHOF2it3XEucvFC4018wA.png","originalHeight":2416,"originalWidth":687,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_40":{"__typename":"Paragraph","id":"44f21662d723_40","name":"dc2b","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*PyHOF2it3XEucvFC4018wA.png"},"text":"Function Call Stack: advapi32!SetThreadToken","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_41":{"__typename":"Paragraph","id":"44f21662d723_41","name":"a0db","type":"P","href":null,"layout":null,"metadata":null,"text":"When it comes to Token Impersonation, the moment of impersonation represents the critical point in the function chain. As a result, we can identify advapi32!SetThreadToken as the crucial function in the function chain.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":148,"end":171,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_42":{"__typename":"Paragraph","id":"44f21662d723_42","name":"6d2d","type":"P","href":null,"layout":null,"metadata":null,"text":"The function call stack, shown below, appears to follow a similar pattern to the Standard Function. However, the implementation diverges when the code reaches kernelbase.dll. In this case, the high-level function, advapi32!SetThreadToken is a wrapper around a more generic low-level function called ntdll!NtSetInformationThread. In Part 14 of this series, I discussed a class of functions called Nt(Set\u002FQuery)Information* that facilitate the setting (writing) or querying (reading) of metadata properties for the target object specified by the *, which in this case happens to be a Thread. The caller specifies which specific metadata property to query or set via an information class.” Each object type has a unique set of information classes. You can see in the screenshot below that SetThreadToken specifies information class 5 via the second parameter, which corresponds to ThreadImpersonationToken.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":159,"end":173,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":214,"end":237,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":299,"end":327,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":396,"end":421,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":786,"end":800,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":878,"end":902,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*5OE1c4ZhgRqg9AOWLL487w.png":{"__typename":"ImageMetadata","id":"1*5OE1c4ZhgRqg9AOWLL487w.png","originalHeight":303,"originalWidth":1227,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_43":{"__typename":"Paragraph","id":"44f21662d723_43","name":"06ae","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*5OE1c4ZhgRqg9AOWLL487w.png"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_44":{"__typename":"Paragraph","id":"44f21662d723_44","name":"3ebe","type":"P","href":null,"layout":null,"metadata":null,"text":"For this category of functions, the information class is critical for properly assigning the operation. If we treated advapi32!SetThreadToken as if it were a Standard Function, we would derive the operation from the syscall, NtSetInformationThread, meaning the operation would be Thread Set. The problem is that the Thread Set operation covers ALL of the Thread’s metadata properties, including properties irrelevant to token impersonation, such as ThreadIoPriority. While it may be interesting to know whether someone changed a thread’s IO priority, that change does not indicate Token Impersonation. All said, there are 41 Thread information classes (metadata properties), and only one is relevant to this particular procedure. Therefore, we require a way to differentiate between Thread Set operations, and the most natural option for doing so is using the information class as an additional indicator. Thus, the resulting operation is Thread Set: ThreadImpersonationToken.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":118,"end":141,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":225,"end":247,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":449,"end":465,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_45":{"__typename":"Paragraph","id":"44f21662d723_45","name":"15f0","type":"H3","href":null,"layout":null,"metadata":null,"text":"3. Remote Procedure Calls (NdrClientCall4)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_46":{"__typename":"Paragraph","id":"44f21662d723_46","name":"9fdd","type":"P","href":null,"layout":null,"metadata":null,"text":"Now, we’ve reached the categories I have not yet covered in this series. The first is related to remote procedure call (RPC) procedures. Functions built on RPC Procedures do not result in syscalls, at least not directly. Instead, they implement the client component of the RPC client\u002Fserver relationship. In the RPC model, the client and server can exist within different processes or even on different systems. Previously, I mentioned that syscalls are responsible for transferring execution from user mode to kernel mode. Similarly, an RPC procedure transfers execution from the client application, the Win32 API function, to the server application. This process is commonly referred to as Interprocess Communication (IPC). Especially in cases where the client and server exist on separate systems, this boundary is at least as robust as the user mode\u002Fkernel mode boundary. A key feature of RPC is that the server component generally constrains the set of sub-routines a client can execute on the server. This constraint creates an opportunity to establish our operation abstraction layer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_47":{"__typename":"Paragraph","id":"44f21662d723_47","name":"3451","type":"H4","href":null,"layout":null,"metadata":null,"text":"Sample","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_48":{"__typename":"Paragraph","id":"44f21662d723_48","name":"e6dc","type":"P","href":null,"layout":null,"metadata":null,"text":"For this third class of functions I decided to use a BOF called sc_create that is included in the TrustedSec CS-Remote-OPs-BOF project. Based on the commit history, it appears that it was originally written by Christopher Paschen. The BOF’s name indicates that Christopher reimplemented the functionality of the sc.exe create command. I’ve found that BOFs provide a great starting point for analysts that are trying to get their feet wet in this typeof analysis. Their simplicity can primarily be attributed to the fact that BOF often implement very discrete capabilities which limits the amount of digging that one must do.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":64,"end":73,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":312,"end":325,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_49":{"__typename":"Paragraph","id":"44f21662d723_49","name":"6569","type":"MIXTAPE_EMBED","href":null,"layout":null,"metadata":null,"text":"CS-Remote-OPs-BOF\u002Fsrc\u002FRemote\u002Fsc_create\u002Fentry.c at main · trustedsec\u002FCS-Remote-OPs-BOF\nContribute to trustedsec\u002FCS-Remote-OPs-BOF development by creating an account on GitHub.github.com","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":184,"href":"https:\u002F\u002Fgithub.com\u002Ftrustedsec\u002FCS-Remote-OPs-BOF\u002Fblob\u002Fmain\u002Fsrc\u002FRemote\u002Fsc_create\u002Fentry.c","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":86,"end":174,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":{"__typename":"MixtapeMetadata","href":"https:\u002F\u002Fgithub.com\u002Ftrustedsec\u002FCS-Remote-OPs-BOF\u002Fblob\u002Fmain\u002Fsrc\u002FRemote\u002Fsc_create\u002Fentry.c","mediaResource":{"__typename":"MediaResource","mediumCatalog":null},"thumbnailImageId":"0*w6HH8Yy-eGfwoosw"}},"Paragraph:44f21662d723_50":{"__typename":"Paragraph","id":"44f21662d723_50","name":"9023","type":"H4","href":null,"layout":null,"metadata":null,"text":"Tool Graph","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*q9yI1M_K-wNA8wrJ9qhnzg.png":{"__typename":"ImageMetadata","id":"1*q9yI1M_K-wNA8wrJ9qhnzg.png","originalHeight":1681,"originalWidth":2740,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_51":{"__typename":"Paragraph","id":"44f21662d723_51","name":"e988","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*q9yI1M_K-wNA8wrJ9qhnzg.png"},"text":"Tool Graph: sc_create BOF","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_52":{"__typename":"Paragraph","id":"44f21662d723_52","name":"b073","type":"P","href":null,"layout":null,"metadata":null,"text":"Our analysis of the sc_create BOF found that it first opened a handle to the Service Control Manager (SCM) via the advapi32!OpenSCManagerW function. Next, the BOF creates the target service via the advapi32!CreateServiceW function. While the operator can specify specific service details such as its name, binary path, and start type during creation, some other features must be added after the fact. To make these additional changes, the tool calls the advapi32!ChangeServiceConfig2W function. Finally, we see the tool close the handles to the newly created service and the SCM by calling the advapi32!CloseServiceHandle function twice.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":20,"end":29,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":115,"end":138,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":197,"end":221,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":454,"end":484,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":594,"end":621,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_53":{"__typename":"Paragraph","id":"44f21662d723_53","name":"40f4","type":"H4","href":null,"layout":null,"metadata":null,"text":"Function Call Stack","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*d2vexLhQPjzQBj_97eQJ-A.png":{"__typename":"ImageMetadata","id":"1*d2vexLhQPjzQBj_97eQJ-A.png","originalHeight":1681,"originalWidth":629,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_54":{"__typename":"Paragraph","id":"44f21662d723_54","name":"4855","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*d2vexLhQPjzQBj_97eQJ-A.png"},"text":"Function Call Stack: advapi32!CreateServiceW","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_55":{"__typename":"Paragraph","id":"44f21662d723_55","name":"15f4","type":"P","href":null,"layout":null,"metadata":null,"text":"Since the technique in this example is Service Creation, it makes sense to choose advapi32!CreateServiceW as the sample’s critical function for investigation.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":82,"end":105,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_56":{"__typename":"Paragraph","id":"44f21662d723_56","name":"6f80","type":"P","href":null,"layout":null,"metadata":null,"text":"CreateServiceW is the first function category that does not make a syscall. Technically, it does EVENTUALLY, but there is an important caveat. You see, advapi32!CreateServiceW is an API function wrapper around an RPC Procedure. In the image below, we see the kernelbase!CreateServiceW function call the rpcrt4!NdrClientCall2 function. NdrClientCall2 is one of a set of functions, represented by NdrClientCall*, that RPC clients can use to make requests. Analysis of the NdrClientCall2’s first and second parameters, which is outside the scope of this article, allows us to identify that kernelbase!CreateServiceW invokes the RCreateServiceW procedure from the Microsoft Service Control Manager Remote Protocol (MS-SCMR).","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":152,"end":175,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":259,"end":284,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":303,"end":324,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":587,"end":612,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":625,"end":640,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*Egn7Ah85BukqY8tR64PiEQ.png":{"__typename":"ImageMetadata","id":"1*Egn7Ah85BukqY8tR64PiEQ.png","originalHeight":301,"originalWidth":1227,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_57":{"__typename":"Paragraph","id":"44f21662d723_57","name":"74fb","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*Egn7Ah85BukqY8tR64PiEQ.png"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_58":{"__typename":"Paragraph","id":"44f21662d723_58","name":"35df","type":"P","href":null,"layout":null,"metadata":null,"text":"The Service Control Manager (services.exe) implements its API via RPC, allowing other applications to interact with it. Applications can query, create (as we see here), delete, or modify services through the MS-SCMR RPC interface. Now, we need to understand that the relationship between the calling application and the Service Control Manager is a client\u002Fserver relationship where clients can make local AND remote requests. The remote aspect is why service creation is a powerful lateral movement technique. Given sufficient permissions, attackers can create malicious services on remote systems. The client\u002Fserver relationship is essential in our analysis because it acts like a boundary where interaction is constrained to a finite set of RPC procedures like RCreateServiceW. This constraint allows for the application of the operation abstraction layer, which is labeled Service Create in this specific case.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":29,"end":41,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":763,"end":778,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_59":{"__typename":"Paragraph","id":"44f21662d723_59","name":"a8d3","type":"BQ","href":null,"layout":null,"metadata":null,"text":"Note: This is not to say that it is not valuable to understand what happens on the server side of the interaction because, in some cases, like this one, an understanding of the server-side component can reveal an alternative procedure to achieve the same outcome (lateral movement via service creation). That said, the ability to implement the server-side implementation, especially remotely, has shown in my analysis to be the exception, not the rule. I will write more about this in a future post.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":5,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_60":{"__typename":"Paragraph","id":"44f21662d723_60","name":"0fa9","type":"H3","href":null,"layout":null,"metadata":null,"text":"4. LSA Functions (LsaCallAuthenticationPackage)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_61":{"__typename":"Paragraph","id":"44f21662d723_61","name":"4d4e","type":"P","href":null,"layout":null,"metadata":null,"text":"Next, we encounter a function type category that took me a while to understand, the LSA Function. Eventually, I discovered that LSA Functions are to RPC Procedures as Sub-Operations are to Standard Functions. That is, LSA Functions rely on a specific RPC Procedure called SspirCallRpc, which the Microsoft Security Support Provider Interface (MS-SSPI) implements. MS-SSPI offers an extensible framework for authentication whereby Microsoft and third-party vendors can extend how users authenticate to the system. As a result, all interactions with “Authentication Packages” flow through the same RPC Procedure. However, the Local Security Authority (LSA) determines how to handle each request based on the specified Authentication Package and AP function. These additional variables indicate that it will not be enough to observe the invocation of SspirCallRpc. Instead, more precise monitoring is necessary, but unfortunately, I am not aware of any vendor that supports this level of monitoring as of this writing.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":272,"end":284,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":848,"end":860,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_62":{"__typename":"Paragraph","id":"44f21662d723_62","name":"d59f","type":"BQ","href":null,"layout":null,"metadata":null,"text":"I highly recommend checking out Evan McBroom’s excellent LSA Whisper project to learn more about the Authentication Packages and LSA.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":32,"end":44,"href":null,"anchorType":"USER","userId":"19644b9f54e3","linkMetadata":null},{"__typename":"Markup","type":"A","start":57,"end":76,"href":"https:\u002F\u002Fgithub.com\u002FEvanMcBroom\u002Flsa-whisperer\u002Fwiki","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_63":{"__typename":"Paragraph","id":"44f21662d723_63","name":"3963","type":"H4","href":null,"layout":null,"metadata":null,"text":"Sample","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_64":{"__typename":"Paragraph","id":"44f21662d723_64","name":"e0b5","type":"P","href":null,"layout":null,"metadata":null,"text":"This category of functions is the one that inspired me to write this post. I struggled to integrate functions that interact with the Local Security Authority (LSA) into my model for an extended period. When I finally understood how they fit, I realized I had incorrectly conceptualized other categories, like RPC functions. This category is essential when considering modern tradecraft, as shown by my colleagues Will Schroeder in his work on Rubeus and Evan McBroom in his work on LSA Whisperer. Many modern workflows manipulate an agent’s identity context through interactions with LSA, so modern detection approaches must understand these underlying mechanisms. With that in mind, we will look at the inner workings of the pass-the-ticket (ptt) argument in many of Rubeus’ commands.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":413,"end":427,"href":null,"anchorType":"USER","userId":"74ad66811b78","linkMetadata":null},{"__typename":"Markup","type":"A","start":454,"end":466,"href":"https:\u002F\u002Fmedium.com\u002Fu\u002F19644b9f54e3","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_65":{"__typename":"Paragraph","id":"44f21662d723_65","name":"4fc3","type":"MIXTAPE_EMBED","href":null,"layout":null,"metadata":null,"text":"Rubeus\u002FRubeus\u002Flib\u002FLSA.cs at master · GhostPack\u002FRubeus\nTrying to tame the three-headed dog. Contribute to GhostPack\u002FRubeus development by creating an account on GitHub.github.com","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":177,"href":"https:\u002F\u002Fgithub.com\u002FGhostPack\u002FRubeus\u002Fblob\u002Fmaster\u002FRubeus\u002Flib\u002FLSA.cs#L1006-L1084","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":53,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":54,"end":167,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":{"__typename":"MixtapeMetadata","href":"https:\u002F\u002Fgithub.com\u002FGhostPack\u002FRubeus\u002Fblob\u002Fmaster\u002FRubeus\u002Flib\u002FLSA.cs#L1006-L1084","mediaResource":{"__typename":"MediaResource","mediumCatalog":null},"thumbnailImageId":"0*SOkNjeRem-hAtC_D"}},"Paragraph:44f21662d723_66":{"__typename":"Paragraph","id":"44f21662d723_66","name":"9c46","type":"H4","href":null,"layout":null,"metadata":null,"text":"Tool Graph","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*HcLNr8IEViSN3cd01Y3MLA.png":{"__typename":"ImageMetadata","id":"1*HcLNr8IEViSN3cd01Y3MLA.png","originalHeight":1865,"originalWidth":2544,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_67":{"__typename":"Paragraph","id":"44f21662d723_67","name":"ef78","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*HcLNr8IEViSN3cd01Y3MLA.png"},"text":"Tool Graph: Rubeus ptt","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_68":{"__typename":"Paragraph","id":"44f21662d723_68","name":"fdb2","type":"P","href":null,"layout":null,"metadata":null,"text":"At this point, each sample we have investigated supported one use case. Rubeus is a full-featured tool suite that supports many Kerberos-related attacks. The pass-the-ticket feature assumes the operator has a Kerberos ticket and facilitates adding that ticket to the ticket cache of the specified logon session.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_69":{"__typename":"Paragraph","id":"44f21662d723_69","name":"f5d7","type":"P","href":null,"layout":null,"metadata":null,"text":"The tool graph below shows that Rubeus begins by connecting to the Local Security Authority (LSA) server using the secur32!LsaConnectUntrusted function. This results in an LSA handle that the tool uses in subsequent calls. Next, the application finds the Kerberos authentication package (AP) by calling the secur32!LsaLookupAuthenticationPackage function. Rubeus then calls secur32!LsaCallAuthenticationPackage specifying the Kerberos authentication package’s KerbSubmitTicket function. The KerbSubmitTicket AP function adds the supplied ticket to the specified logon session’s ticket cache. Finally, Rubeus releases the LSA handle by calling secur32!LsaDeregisterLogonProcess.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":115,"end":142,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":307,"end":345,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":374,"end":410,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":460,"end":476,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":491,"end":507,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":643,"end":676,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_70":{"__typename":"Paragraph","id":"44f21662d723_70","name":"6d35","type":"H4","href":null,"layout":null,"metadata":null,"text":"Function Call Stack","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*J_nmkh3RRyHsy5xPgc6gcg.png":{"__typename":"ImageMetadata","id":"1*J_nmkh3RRyHsy5xPgc6gcg.png","originalHeight":1865,"originalWidth":705,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_71":{"__typename":"Paragraph","id":"44f21662d723_71","name":"5cef","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*J_nmkh3RRyHsy5xPgc6gcg.png"},"text":"Function Call Stack: secur32!LsaCallAuthenticationPackage (Kerberos KerbSubmitTicket)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_72":{"__typename":"Paragraph","id":"44f21662d723_72","name":"6ba5","type":"P","href":null,"layout":null,"metadata":null,"text":"The secur32!LsaCallAuthenticationPackage function is responsible for “passing-the-ticket” in the sense that it is the function that adds the ticket to the ticket cache. For that reason, let’s dig a bit deeper into it to understand how it works.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":4,"end":40,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_73":{"__typename":"Paragraph","id":"44f21662d723_73","name":"4db2","type":"P","href":null,"layout":null,"metadata":null,"text":"When we open secur32!LsaCallAuthenticationPackage in our disassembler, we see that it eventually makes an RPC Procedure call to the SspirCallRpc procedure implemented by the Microsoft Security Support Provider Interface (MS-SSPI). You might immediately think that I’m crazy because we just covered RPC Procedures in the previous section, but it turns out that this particular case is more complicated than that. That’s because there is an additional layer or two of abstraction. The SspirCallRpc procedure acts as a gateway for applications to interact with LSA regardless of the authentication package and function that the caller specifies. Behind the scenes, MS-SSPI (loaded in lsass.exe) handles these calls and passes execution to the appropriate authentication package, such as kerberos.dll. As a result, observing a call to the SspirCallRpc procedure only indicates that some authentication-related operation has occurred. However, it does not provide the necessary level of detail to determine whether the operation is the one you are interested in, such as adding a Kerberos ticket to the ticket cache, in this case via KerbSubmitTicket. Like Sub-Operations, this category requires that we operate at a more granular level if we can hope to use this signal in any meaningful detection strategy.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":13,"end":49,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":132,"end":144,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":483,"end":495,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":835,"end":847,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":1129,"end":1145,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_74":{"__typename":"Paragraph","id":"44f21662d723_74","name":"b67f","type":"P","href":null,"layout":null,"metadata":null,"text":"It is also worth noting that these LSA-related operations function based on the same client\u002Fserver relationship as RPC but are often constrained to the local machine only. The lsass.exe application runs as a protected process on modern operating systems, so LsaCallAuthenticationPackage or SspirCallRpc, more specifically, acts as an interface for applications to interact with LSA. This constraint allows us, again, to treat the LSA side of this interaction opaquely. I’ve found it helpful to label the resulting operation using the AP function, which in this example is KerbSubmitTicket.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":176,"end":185,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":258,"end":286,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":290,"end":302,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":572,"end":588,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_75":{"__typename":"Paragraph","id":"44f21662d723_75","name":"9220","type":"H3","href":null,"layout":null,"metadata":null,"text":"5. Driver IOCTLs","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_76":{"__typename":"Paragraph","id":"44f21662d723_76","name":"251e","type":"P","href":null,"layout":null,"metadata":null,"text":"Another important category I have not extensively written about is Driver IOCTLs. These functions rely on making specific Input\u002FOutput Control calls to kernel drivers via API functions like kernel32!DeviceIOControl and ntdll!NtfsControlFile. IOCTLs facilitate direct interaction with a kernel driver and represent something between a Syscall and an RPC Procedure. In this case, we treat the transfer of execution from the client application to the kernel driver as the boundary for abstraction.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":190,"end":214,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":219,"end":240,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_77":{"__typename":"Paragraph","id":"44f21662d723_77","name":"373e","type":"H4","href":null,"layout":null,"metadata":null,"text":"Sample","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_78":{"__typename":"Paragraph","id":"44f21662d723_78","name":"d81e","type":"P","href":null,"layout":null,"metadata":null,"text":"To demonstrate Driver IOCTLs in practice, I will use Matt Graeber’s Get-System implementation from the PowerSploit project. Get-System provides two approaches to Token Theft. The first follows the traditional Token Impersonation approach, while the second relies on a trick with named pipes. For this analysis, I will focus on the named pipe approach.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_79":{"__typename":"Paragraph","id":"44f21662d723_79","name":"92f5","type":"MIXTAPE_EMBED","href":null,"layout":null,"metadata":null,"text":"PowerSploit\u002FPrivesc\u002FGet-System.ps1 at d943001a7defb5e0d1657085a77a0e78609be58f ·…\nPowerSploit - A PowerShell Post-Exploitation Framework - PowerSploit\u002FPrivesc\u002FGet-System.ps1 at…github.com","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":187,"href":"https:\u002F\u002Fgithub.com\u002FPowerShellMafia\u002FPowerSploit\u002Fblob\u002Fd943001a7defb5e0d1657085a77a0e78609be58f\u002FPrivesc\u002FGet-System.ps1#L171","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":81,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":82,"end":177,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":{"__typename":"MixtapeMetadata","href":"https:\u002F\u002Fgithub.com\u002FPowerShellMafia\u002FPowerSploit\u002Fblob\u002Fd943001a7defb5e0d1657085a77a0e78609be58f\u002FPrivesc\u002FGet-System.ps1#L171","mediaResource":{"__typename":"MediaResource","mediumCatalog":null},"thumbnailImageId":"0*CveTZ7aEYEkM57D6"}},"Paragraph:44f21662d723_80":{"__typename":"Paragraph","id":"44f21662d723_80","name":"caac","type":"P","href":null,"layout":null,"metadata":null,"text":"Thanks to Jonathan Johnson for helping to identify a function that embodies this category. He pointed me to one of his blog posts focused on advapi32!ImpersonateNamedPipeClient, which inspired me to find a sample that leverages that function. If you want to understand how I constructed the function call stack, I recommend you read his post.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":141,"end":176,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":10,"end":26,"href":"https:\u002F\u002Fmedium.com\u002Fu\u002F78d2ff57ed70","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_81":{"__typename":"Paragraph","id":"44f21662d723_81","name":"1a28","type":"MIXTAPE_EMBED","href":null,"layout":null,"metadata":null,"text":"Exploring Impersonation through the Named Pipe Filesystem Driver\nIntroductionjsecurity101.medium.com","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":100,"href":"https:\u002F\u002Fjsecurity101.medium.com\u002Fexploring-impersonation-through-the-named-pipe-filesystem-driver-15f324dfbaf2","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":64,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":65,"end":77,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":{"__typename":"MixtapeMetadata","href":"https:\u002F\u002Fjsecurity101.medium.com\u002Fexploring-impersonation-through-the-named-pipe-filesystem-driver-15f324dfbaf2","mediaResource":{"__typename":"MediaResource","mediumCatalog":null},"thumbnailImageId":"1*ID7ooOK883qYYm4InMypRQ.png"}},"Paragraph:44f21662d723_82":{"__typename":"Paragraph","id":"44f21662d723_82","name":"3657","type":"H4","href":null,"layout":null,"metadata":null,"text":"Tool Graph","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*If4_Z7absJR0hhj1pbIDzA.png":{"__typename":"ImageMetadata","id":"1*If4_Z7absJR0hhj1pbIDzA.png","originalHeight":2028,"originalWidth":5596,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_83":{"__typename":"Paragraph","id":"44f21662d723_83","name":"9712","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*If4_Z7absJR0hhj1pbIDzA.png"},"text":"Tool Graph: PowerSploit Get-System","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_84":{"__typename":"Paragraph","id":"44f21662d723_84","name":"3eb5","type":"P","href":null,"layout":null,"metadata":null,"text":"After consulting the source code for our sample, I found that the named pipe impersonation trick is a bit complicated. It starts with a call to advapi32!CreatePipe, which generates a new pipe with a fairly permissive DACL. Next, we interact with the Service Control Manager (SCM) via advapi32!OpenSCManagerW. This call results in a handle to the local SCM. Matt passes the SCM handle to advapi32!CreateServiceW to create a new service that the attack will eventually use to connect to the named pipe. Services can run as the NT AUTHORITY\\SYSTEM user, resulting in the “named pipe client” being SYSTEM. We then see a call to advapi32!CloseServiceHandle to close the service handle. Next, Get-System calls advapi32!OpenServiceW to open a new handle to the service. The service handle is passed to advapi32!StartServiceW to execute the service, thus connecting to the named pipe. After the service is executed, the sample is cleaned up via advapi32!DeleteService and two calls to advapi32!CloseServiceHandle. Finally, advapi32!ImpersonateNamedPipeClient is called to steal the SYSTEM account token.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":144,"end":163,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":284,"end":307,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":387,"end":410,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":525,"end":544,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":594,"end":600,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":624,"end":651,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":704,"end":725,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":795,"end":817,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":937,"end":959,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":977,"end":1004,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":1015,"end":1050,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":1074,"end":1080,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_85":{"__typename":"Paragraph","id":"44f21662d723_85","name":"3ef0","type":"H4","href":null,"layout":null,"metadata":null,"text":"Function Call Stack","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*5zn0WcAY6cVvI8BqnxCI-A.png":{"__typename":"ImageMetadata","id":"1*5zn0WcAY6cVvI8BqnxCI-A.png","originalHeight":1784,"originalWidth":637,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_86":{"__typename":"Paragraph","id":"44f21662d723_86","name":"4e48","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*5zn0WcAY6cVvI8BqnxCI-A.png"},"text":"Function Call Stack: advapi32!ImpersonateNamedPipeClient","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_87":{"__typename":"Paragraph","id":"44f21662d723_87","name":"f033","type":"P","href":null,"layout":null,"metadata":null,"text":"As mentioned earlier, I selected this sample to highlight the advapi32!ImpersonateNamedPipeClient function.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":62,"end":97,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_88":{"__typename":"Paragraph","id":"44f21662d723_88","name":"fd48","type":"P","href":null,"layout":null,"metadata":null,"text":"Like many other functions, ImpersonateNamedPipeClient flows to kernelbase.dll, where it makes a call to a Native API function called ntdll!NtFsControlFile. The Microsoft documentation for the NtFsControlFile function states that “[it] sends a control code directly to a specified file system or file system filter driver, causing the corresponding driver to perform the specified action.” We can see from the arguments passed to NtFsControlFile that the handle is to the specified named pipe, which, in the case of Matt’s Get-System implementation, is the dummy named pipe created via the CreatePipe function call. We also see that kernelbase!ImpersonateNamePipeClient hardcodes the sixth parameter, representing the FsControlCode, to 0x11001C.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":27,"end":53,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":63,"end":77,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":133,"end":154,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":192,"end":207,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":429,"end":444,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":589,"end":599,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":632,"end":668,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":735,"end":743,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*QwevOdzqLuf5kPZIten6og.png":{"__typename":"ImageMetadata","id":"1*QwevOdzqLuf5kPZIten6og.png","originalHeight":689,"originalWidth":2048,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_89":{"__typename":"Paragraph","id":"44f21662d723_89","name":"4793","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*QwevOdzqLuf5kPZIten6og.png"},"text":"Implementation of kernelbase!ImpersonateNamedPipeClient","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_90":{"__typename":"Paragraph","id":"44f21662d723_90","name":"39e1","type":"P","href":null,"layout":null,"metadata":null,"text":"The FsControlCode tells the driver which sub-routine to execute. In his blog post analyzing the function, Jonny explains that this control code is known as FSCTL_PIPE_IMPERSONATE and that the components of the control code indicate that this is function number 7 for named pipes (FILE_DEVICE_NAMED_PIPE). We can, therefore, use the control code as the abstraction layer for our operation, which we will call Pipe Impersonate.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":156,"end":178,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":280,"end":302,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*0cftExh6pqyucS5ERYrG9A.png":{"__typename":"ImageMetadata","id":"1*0cftExh6pqyucS5ERYrG9A.png","originalHeight":883,"originalWidth":1227,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_91":{"__typename":"Paragraph","id":"44f21662d723_91","name":"e8a8","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*0cftExh6pqyucS5ERYrG9A.png"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_92":{"__typename":"Paragraph","id":"44f21662d723_92","name":"f460","type":"H3","href":null,"layout":null,"metadata":null,"text":"6. Compound Functions","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_93":{"__typename":"Paragraph","id":"44f21662d723_93","name":"39aa","type":"P","href":null,"layout":null,"metadata":null,"text":"A special category is the Compound Function. A Compound Function is a function that, at the Win32 API level, appears as a single function but, lower in the function call stack, breaks down into many more specific functions and, thus, operations. We typically find that Compound Functions implement logic to execute an everyday routine that would normally require multiple individual function calls. A great example of a compound function is dbghelp!MiniDumpWriteDump, which creates process crash dumps. It is built on top of kernel32!ReadProcessMemory. However, a crash dump requires numerous specific memory reads to occur. MiniDumpWriteDump implements this logic, so the application developer is not required to understand the details of the crash dump or process memory structures.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":441,"end":466,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":525,"end":551,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":625,"end":642,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_94":{"__typename":"Paragraph","id":"44f21662d723_94","name":"949a","type":"H4","href":null,"layout":null,"metadata":null,"text":"Sample","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_95":{"__typename":"Paragraph","id":"44f21662d723_95","name":"d3d1","type":"P","href":null,"layout":null,"metadata":null,"text":"We will look at Justin Bui’s Primary Token Theft sample for this category. Justin wrote this program to evaluate which processes would be the best targets for System Token Theft. It is a relatively simple program, but it allows us to see a third implementation of Token Impersonation. I challenge you to analyze this sample’s operation chain and compare it to the sample we used to dig into Sub-Operations.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":16,"end":28,"href":"https:\u002F\u002Fmedium.com\u002Fu\u002Fd64a8a5f03d6","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_96":{"__typename":"Paragraph","id":"44f21662d723_96","name":"270d","type":"MIXTAPE_EMBED","href":null,"layout":null,"metadata":null,"text":"PrimaryTokenTheft\u002Fmain.cpp at master · slyd0g\u002FPrimaryTokenTheft\nSteal a primary token and spawn cmd.exe using the stolen token — PrimaryTokenTheft\u002Fmain.cpp at master ·…github.com","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":178,"href":"https:\u002F\u002Fgithub.com\u002Fslyd0g\u002FPrimaryTokenTheft\u002Fblob\u002Fmaster\u002Fmain.cpp#L91-L123","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":63,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":64,"end":168,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":{"__typename":"MixtapeMetadata","href":"https:\u002F\u002Fgithub.com\u002Fslyd0g\u002FPrimaryTokenTheft\u002Fblob\u002Fmaster\u002Fmain.cpp#L91-L123","mediaResource":{"__typename":"MediaResource","mediumCatalog":null},"thumbnailImageId":"0*pPOQ5MP8O-g1xjYR"}},"Paragraph:44f21662d723_97":{"__typename":"Paragraph","id":"44f21662d723_97","name":"783c","type":"H4","href":null,"layout":null,"metadata":null,"text":"Tool Graph","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*STqM6q4kGpf-lVKaBHBakw.png":{"__typename":"ImageMetadata","id":"1*STqM6q4kGpf-lVKaBHBakw.png","originalHeight":2416,"originalWidth":2930,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_98":{"__typename":"Paragraph","id":"44f21662d723_98","name":"eca3","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*STqM6q4kGpf-lVKaBHBakw.png"},"text":"Tool Graph: PrimaryTokenTheft","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_99":{"__typename":"Paragraph","id":"44f21662d723_99","name":"ed97","type":"P","href":null,"layout":null,"metadata":null,"text":"The tool graph for the PrimaryTokenTheft sample is relatively straightforward compared to some of our other examples. In all, we see that there were three function calls kernel32!OpenProcess, advapi32!OpenProcessToken, and advapi32!ImpersonateLoggedOnUser. The first function, kernel32!OpenProcess is used to open a handle to the target process. This process typically runs in the context of a user with desirable access, such as the NT AUTHORITY\u002FSYSTEM account or a Domain Administrator account. The resulting handle is then passed to advapi32!OpenProcessToken, which opens a handle to the desired access token. Finally, Justin passes the token handle to advapi32!ImpersonateLoggedOnUser, where all the magic happens.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":170,"end":190,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":192,"end":217,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":223,"end":255,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":277,"end":297,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":434,"end":453,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":536,"end":561,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":656,"end":688,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_100":{"__typename":"Paragraph","id":"44f21662d723_100","name":"4de2","type":"H4","href":null,"layout":null,"metadata":null,"text":"Function Call Stack","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*XWxdBHi6NYeFqWHeSpURsA.png":{"__typename":"ImageMetadata","id":"1*XWxdBHi6NYeFqWHeSpURsA.png","originalHeight":2415,"originalWidth":1766,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_101":{"__typename":"Paragraph","id":"44f21662d723_101","name":"f863","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*XWxdBHi6NYeFqWHeSpURsA.png"},"text":"Function Call Stack: advapi32!ImpersonateLoggedOnUser","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_102":{"__typename":"Paragraph","id":"44f21662d723_102","name":"744f","type":"P","href":null,"layout":null,"metadata":null,"text":"Digging into the advapi32!ImpersonateLoggedOnUser function’s call stack, everything progresses normally, like a standard function, until we reach kernelbase.dll. As shown in the image below, we see calls to ntdll!NtQueryInformationToken, ntdll!NtDuplicateToken, ntdll!NtSetInformationThread, and ntdll!NtClose.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":17,"end":49,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":146,"end":160,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":207,"end":236,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":238,"end":260,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":262,"end":290,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":296,"end":309,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*9alvTY3KbhehhmxxN1DdyQ.png":{"__typename":"ImageMetadata","id":"1*9alvTY3KbhehhmxxN1DdyQ.png","originalHeight":970,"originalWidth":2048,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_103":{"__typename":"Paragraph","id":"44f21662d723_103","name":"7b6f","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*9alvTY3KbhehhmxxN1DdyQ.png"},"text":"Implementation of kernelbase!ImpersonateLoggedOnUser","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_104":{"__typename":"Paragraph","id":"44f21662d723_104","name":"7f12","type":"P","href":null,"layout":null,"metadata":null,"text":"As a result, the function call stack splits at kernelbase!ImpersonateLoggedOnUser. The end effect is that rather than a one-to-one relationship between the function and the operation, we find that advapi32!ImpersonateLoggedOnUser has a one-to-four relationship, which has massive implications for our detection engineering efforts. Each underlying function will fit within one of the categories covered in this article. For example, NtQueryInformationThread and NtSetInformationThread belong to the Sub-Operation category, while NtDuplicateToken and NtClose belong to the Standard Function category.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":47,"end":81,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":197,"end":229,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":433,"end":457,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":462,"end":484,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":529,"end":545,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":550,"end":557,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_105":{"__typename":"Paragraph","id":"44f21662d723_105","name":"49c1","type":"P","href":null,"layout":null,"metadata":null,"text":"You will notice that the resulting operation chain for this particular sample is not much different from that of the sample used in the Sub-Operation section. This similarity means that these two samples are likely to be mutually detectable, or, put another way, they can both be detected using the same analytic.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_106":{"__typename":"Paragraph","id":"44f21662d723_106","name":"5616","type":"H3","href":null,"layout":null,"metadata":null,"text":"7. Local Functions (memcpy or GetCurrentProcess)","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_107":{"__typename":"Paragraph","id":"44f21662d723_107","name":"b342","type":"P","href":null,"layout":null,"metadata":null,"text":"The final category is probably the least important from the detection engineering perspective. However, understanding how to spot functions from this set will empower you to separate the wheat from the chaff. Local Functions is the name I’ve given to the functions that never cross a relevant boundary. They often, if not always, are resolved within the initial implementation DLL and perform local tasks. You will find that as you begin to analyze complicated functions, you will encounter many local functions, so you must understand how to spot these functions so you can be sure that you can safely ignore them.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_108":{"__typename":"Paragraph","id":"44f21662d723_108","name":"1e99","type":"H4","href":null,"layout":null,"metadata":null,"text":"Sample","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_109":{"__typename":"Paragraph","id":"44f21662d723_109","name":"b8ba","type":"P","href":null,"layout":null,"metadata":null,"text":"In this example, we will rely on the Get-ProcessTokenPrivilege PowerShell function from Will Schroeder’s PowerUp module. This function is a helper function that implements something similar to whoami \u002Fpriv.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":193,"end":205,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"A","start":88,"end":104,"href":"https:\u002F\u002Fmedium.com\u002Fu\u002F74ad66811b78","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_110":{"__typename":"Paragraph","id":"44f21662d723_110","name":"120f","type":"MIXTAPE_EMBED","href":null,"layout":null,"metadata":null,"text":"PowerSploit\u002FPrivesc\u002FPowerUp.ps1 at master · PowerShellMafia\u002FPowerSploit\nPowerSploit - A PowerShell Post-Exploitation Framework - PowerSploit\u002FPrivesc\u002FPowerUp.ps1 at master ·…github.com","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":0,"end":183,"href":"https:\u002F\u002Fgithub.com\u002FPowerShellMafia\u002FPowerSploit\u002Fblob\u002Fmaster\u002FPrivesc\u002FPowerUp.ps1#L1236-L1413","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":71,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"EM","start":72,"end":173,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":{"__typename":"MixtapeMetadata","href":"https:\u002F\u002Fgithub.com\u002FPowerShellMafia\u002FPowerSploit\u002Fblob\u002Fmaster\u002FPrivesc\u002FPowerUp.ps1#L1236-L1413","mediaResource":{"__typename":"MediaResource","mediumCatalog":null},"thumbnailImageId":"0*P6JX3qw6FsZaG5nw"}},"Paragraph:44f21662d723_111":{"__typename":"Paragraph","id":"44f21662d723_111","name":"d55b","type":"H4","href":null,"layout":null,"metadata":null,"text":"Tool Graph","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*htKNcr8Izadgjs2ACa-sXA.png":{"__typename":"ImageMetadata","id":"1*htKNcr8Izadgjs2ACa-sXA.png","originalHeight":2452,"originalWidth":2255,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_112":{"__typename":"Paragraph","id":"44f21662d723_112","name":"6548","type":"IMG","href":null,"layout":"OUTSET_CENTER","metadata":{"__ref":"ImageMetadata:1*htKNcr8Izadgjs2ACa-sXA.png"},"text":"Tool Graph: Get-ProcessTokenPrivilege","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_113":{"__typename":"Paragraph","id":"44f21662d723_113","name":"dfee","type":"P","href":null,"layout":null,"metadata":null,"text":"The tool graph shows that this PowerShell function is meant to check which privileges are enabled for the current user context. We see kernel32!GetCurrentProcess emits a handle to the calling process. That handle is then passed to advapi32!OpenProcessToken, which returns a handle to the calling process’s primary token. Finally, the advapi32!GetTokenInformation function is called to return a list of the token’s enabled privileges.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":135,"end":161,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":231,"end":256,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":334,"end":362,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_114":{"__typename":"Paragraph","id":"44f21662d723_114","name":"8731","type":"BQ","href":null,"layout":null,"metadata":null,"text":"Note: Can you identify which categories advapi32!OpenProcessToken and advapi32!GetTokenInformation fit into?","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":40,"end":65,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":70,"end":98,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":5,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_115":{"__typename":"Paragraph","id":"44f21662d723_115","name":"4e58","type":"H4","href":null,"layout":null,"metadata":null,"text":"Function Call Stack","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*yWwd4NZ3mtdeurX9mBPmmQ.png":{"__typename":"ImageMetadata","id":"1*yWwd4NZ3mtdeurX9mBPmmQ.png","originalHeight":254,"originalWidth":389,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_116":{"__typename":"Paragraph","id":"44f21662d723_116","name":"0f0e","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*yWwd4NZ3mtdeurX9mBPmmQ.png"},"text":"Function Call Stack: kernel32!GetCurrentProcess","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_117":{"__typename":"Paragraph","id":"44f21662d723_117","name":"34d2","type":"P","href":null,"layout":null,"metadata":null,"text":"In this sample, the kernel32!GetCurrentProcess function represents the Local Function category. After opening kernel32.dll in IDA, we can browse to the implementation of the GetCurrentProcess function. We see that this function does not do much. It returns -1, which functions as a pseudo-handle for the calling process.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":20,"end":46,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":110,"end":122,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":174,"end":191,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"CODE","start":257,"end":259,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*fL0_P0fF8f3hg7Im_RC9KQ.png":{"__typename":"ImageMetadata","id":"1*fL0_P0fF8f3hg7Im_RC9KQ.png","originalHeight":484,"originalWidth":680,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:44f21662d723_118":{"__typename":"Paragraph","id":"44f21662d723_118","name":"6f86","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*fL0_P0fF8f3hg7Im_RC9KQ.png"},"text":"Implementation of kernel32!GetCurrentProcess","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_119":{"__typename":"Paragraph","id":"44f21662d723_119","name":"b5fa","type":"P","href":null,"layout":null,"metadata":null,"text":"As a result, the function call stack is essentially non-existent, as shown below. Since kernel32!GetCurrentProcess does not cross a client\u002Fserver boundary like that of user-mode\u002Fkernel-mode, RPC client\u002Fserver, or LSA client\u002Fauth package it does not have a corresponding operation.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"CODE","start":88,"end":114,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_120":{"__typename":"Paragraph","id":"44f21662d723_120","name":"1281","type":"H3","href":null,"layout":null,"metadata":null,"text":"Conclusion","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:44f21662d723_121":{"__typename":"Paragraph","id":"44f21662d723_121","name":"dc9e","type":"P","href":null,"layout":null,"metadata":null,"text":"For as long as I can remember, we have used API functions to describe a particular malware sample’s functionality. These function chains have proven helpful to Detection Engineers as they provide a blueprint for observation. However, not all functions are created equally. In our analysis, we’ve identified seven function categories, each requiring a different analytical approach. I hope the descriptions in this article help you determine which type of function you have encountered so you can ensure you are collecting data with an adequate level of granularity.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"CollectionViewerEdge:collectionId:f05f8696e3cc-viewerId:lo_49b0304f763c":{"__typename":"CollectionViewerEdge","id":"collectionId:f05f8696e3cc-viewerId:lo_49b0304f763c","isEditor":false,"isMuting":false},"UserViewerEdge:userId:b206c297df42-viewerId:lo_49b0304f763c":{"__typename":"UserViewerEdge","id":"userId:b206c297df42-viewerId:lo_49b0304f763c","isMuting":false},"ImageMetadata:1*s-5BWBr8XsgtIU5azKNhZQ.jpeg":{"__typename":"ImageMetadata","id":"1*s-5BWBr8XsgtIU5azKNhZQ.jpeg","originalWidth":2000,"originalHeight":805},"PostViewerEdge:postId:5942e70e05ab-viewerId:lo_49b0304f763c":{"__typename":"PostViewerEdge","shouldIndexPostForExternalSearch":true,"id":"postId:5942e70e05ab-viewerId:lo_49b0304f763c"},"Tag:on-detection":{"__typename":"Tag","id":"on-detection","displayTitle":"On Detection","normalizedTagSlug":"on-detection"},"Tag:research":{"__typename":"Tag","id":"research","displayTitle":"Research","normalizedTagSlug":"research"},"Tag:detection-engineering":{"__typename":"Tag","id":"detection-engineering","displayTitle":"Detection Engineering","normalizedTagSlug":"detection-engineering"},"Tag:infosec":{"__typename":"Tag","id":"infosec","displayTitle":"Infosec","normalizedTagSlug":"infosec"}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.1b75cd39.js"></script><script src="https://cdn-client.medium.com/lite/static/js/9865.1496d74a.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.bc924586.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.d9108df7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.ff22a7a5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9120.5df29668.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5049.d1ead72d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4810.6318add7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6618.db187378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2707.a4e221ac.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9977.933c1c9a.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8599.73cb8339.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5250.9f9e01d2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8346.be5bef41.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2648.26563adf.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8393.826a25fb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4863.28ab43f6.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6589.ab860fa4.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5642.0f82ef97.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6546.7c45541d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6834.8aa8d357.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4492.3e85e9f5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/839.1c286b32.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/3259.1779fbde.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7975.60bcefe8.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7394.ca29bb88.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5794.9e8ff5dd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8204.e2639348.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4391.59acaed3.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.111f755f.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8414.6565ad5f.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/3974.8d3e0217.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2527.21406717.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostResponsesContent.0eb77899.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/responses.editor.5a11f4da.chunk.js"></script><script>window.main();</script></body></html>