<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><title>Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1) — Elastic Security Labs</title><meta name="description" content="Learn how Elastic Endpoint Security and Elastic SIEM can be used to hunt for and detect malicious persistence techniques at scale."/><meta property="og:title" content="Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1) — Elastic Security Labs"/><meta property="og:description" content="Learn how Elastic Endpoint Security and Elastic SIEM can be used to hunt for and detect malicious persistence techniques at scale."/><meta property="og:image" content="https://www.elastic.co/security-labs/assets/images/hunting-for-persistence-using-elastic-security-part-1/blog-thumb-security-breach-red-lock.jpg?8ab9e3762ea9cf4ef17e9d3fc1733b06"/><meta property="og:image:alt" content="Learn how Elastic Endpoint Security and Elastic SIEM can be used to hunt for and detect malicious persistence techniques at scale."/><meta property="og:site_name"/><meta property="og:url" content="https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1"/><meta property="og:type" content="website"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1) — Elastic Security Labs"/><meta name="twitter:description" content="Learn how Elastic Endpoint Security and Elastic SIEM can be used to hunt for and detect malicious persistence techniques at scale."/><meta name="twitter:image" content="https://www.elastic.co/security-labs/assets/images/hunting-for-persistence-using-elastic-security-part-1/blog-thumb-security-breach-red-lock.jpg?8ab9e3762ea9cf4ef17e9d3fc1733b06"/><meta name="twitter:image:alt" content="Learn how Elastic Endpoint Security and Elastic SIEM can be used to hunt for and detect malicious persistence techniques at scale."/><link rel="canonical" href="https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1"/><link rel="preload" href="/security-labs/logo.svg" as="image" fetchpriority="high"/><link rel="preload" as="image" imageSrcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=3840&amp;q=75 3840w" imageSizes="100vw" fetchpriority="high"/><meta name="next-head-count" content="19"/><script src="https://play.vidyard.com/embed/v4.js" type="text/javascript" async=""></script><link rel="icon" href="/security-labs/favicon.svg"/><link rel="mask-icon" href="/security-labs/favicon.svg" color="#1C1E23"/><link rel="apple-touch-icon" href="/security-labs/favicon.svg"/><meta name="theme-color" content="#1C1E23"/><link rel="preload" href="/security-labs/_next/static/media/6d93bde91c0c2823-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/a34f9d1faa5f3315-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/369c6e283c5acc6e-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/92f44bb82993d879-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/ee71530a747ff30b-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/9fac010bc1f02be0-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/cbf5fbad4d73afac-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><script id="google-tag-manager" data-nscript="beforeInteractive">
          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-KNJMG2M');
          </script><link rel="preload" href="/security-labs/_next/static/css/265ed7605fd03477.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/265ed7605fd03477.css" data-n-g=""/><link rel="preload" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/security-labs/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js"></script><script src="/security-labs/_next/static/chunks/webpack-7987c6fda769d510.js" defer=""></script><script src="/security-labs/_next/static/chunks/framework-7a7e500878b44665.js" defer=""></script><script src="/security-labs/_next/static/chunks/main-ebd33a9f1cae5951.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/_app-cb8664d1d3df2511.js" defer=""></script><script src="/security-labs/_next/static/chunks/fec483df-43ee602fabdfe3a4.js" defer=""></script><script src="/security-labs/_next/static/chunks/877-34f408271ef44c22.js" defer=""></script><script src="/security-labs/_next/static/chunks/511-d08fe0fdd6f8a984.js" defer=""></script><script src="/security-labs/_next/static/chunks/683-a5053c37fe5bd0c9.js" defer=""></script><script src="/security-labs/_next/static/chunks/402-791da5e634930df4.js" defer=""></script><script src="/security-labs/_next/static/chunks/616-0b017b9cfa597392.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/%5Bslug%5D-3d74e9a05863bcfd.js" defer=""></script><script src="/security-labs/_next/static/dGrrQfBbQkqaleQ_11aBK/_buildManifest.js" defer=""></script><script src="/security-labs/_next/static/dGrrQfBbQkqaleQ_11aBK/_ssgManifest.js" defer=""></script></head><body><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KNJMG2M" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="__next"><main class="__variable_0351a5 __variable_1f211e __variable_a5b5f5 flex flex-col min-h-screen"><div class="scroll-percentage-container"><div class="scroll-percentage-bar" style="width:0%"></div></div><nav class="fixed w-full z-40" data-headlessui-state=""><div class="bg-gradient-to-b from-zinc-900 from-20% h-[200%] to-transparent absolute inset-0 z-0 pointer-events-none"></div><div class="container relative z-10"><div class="flex h-16 items-center justify-between"><div class="flex items-center justify-start w-full"><div><a class="hover:opacity-50 transition" href="/security-labs"><img alt="elastic security labs logo" fetchpriority="high" width="200" height="30" decoding="async" data-nimg="1" style="color:transparent" src="/security-labs/logo.svg"/></a></div><div class="hidden lg:ml-6 lg:block"><div class="flex space-x-4"><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/about"><span>About</span></a><div class="relative" data-headlessui-state=""><div><button class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" id="headlessui-menu-button-:R2kpm:" type="button" aria-haspopup="menu" aria-expanded="false" data-headlessui-state="">Topics<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="ml-1 -mr-1 h-4 w-4 text-zinc-400 relative top-[1px]"><path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd"></path></svg></button></div></div><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/vulnerability-updates"><span>Vulnerability updates</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/reports"><span>Reports</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/tools"><span>Tools</span></a></div></div><div class="hidden lg:ml-auto lg:block"><div class="flex items-center space-x-4"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="https://www.elastic.co/security-labs/rss/feed.xml"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-4 w-4 mr-1"><path d="M3.75 3a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75H4c6.075 0 11 4.925 11 11v.25c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V16C17 8.82 11.18 3 4 3h-.25z"></path><path d="M3 8.75A.75.75 0 013.75 8H4a8 8 0 018 8v.25a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75V16a6 6 0 00-6-6h-.25A.75.75 0 013 9.25v-.5zM7 15a2 2 0 11-4 0 2 2 0 014 0z"></path></svg><span class="hidden xl:block">Subscribe</span></a><a class="font-display inline-flex items-center justify-center rounded font-semibold disabled:!select-none disabled:!bg-gray-400 bg-blue-600 text-white hover:bg-blue-500 enabled:hover:text-white/80 transition-colors px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://cloud.elastic.co/registration?cta=cloud-registration&amp;tech=trial&amp;plcmt=navigation&amp;pg=security-labs">Start free trial</a><a class="font-display inline-flex items-center justify-center rounded font-semibold text-white disabled:!select-none disabled:!bg-gray-400 button px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://www.elastic.co/contact">Contact sales</a></div></div></div><div class="-mr-2 flex lg:hidden"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><button class="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" id="headlessui-disclosure-button-:R59m:" type="button" aria-expanded="false" data-headlessui-state=""><span class="sr-only">Open navigation menu</span><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="block h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path></svg></button></div></div></div></nav><main class="mb-20 flex-1 flex flex-col"><div class="h-48 md:h-64"><div class="after:absolute after:block after:bg-blue-400 after:blur-3xl after:content-[&#x27; &#x27;] after:h-96 after:opacity-5 after:right-0 after:rounded-full after:top-20 after:w-1/2 after:z-0 before:absolute before:block before:blur-3xl before:bg-orange-400 before:content-[&#x27; &#x27;] before:h-96 before:left-0 before:opacity-5 before:rounded-full before:w-1/2 before:z-0 w-full h-full relative"><div class="relative z-10 w-full h-[125%] -top-[25%] bg-no-repeat bg-cover bg-bottom flex items-center justify-center" style="background-image:url(/security-labs/grid.svg)"></div></div></div><article class="px-4"><div class="max-w-7xl mx-auto relative z-10 flex flex-col space-y-4"><div class="eyebrow break-words"><time class="block mb-2 md:mb-0 md:inline-block article-published-date" dateTime="2022-06-01T00:00:00.000Z">1 June 2022</time><span class="hidden md:inline-block md:mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/david-french">David French</a><span class="mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/brent-murphy">Brent Murphy</a><span class="mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/elastic-security-intelligence-analytics-team">Elastic Security Intelligence &amp; Analytics Team</a></div><h1 class="font-bold leading-tighter text-3xl md:text-5xl"><span>Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part&nbsp;1)</span></h1><p class="text-zinc-200 text-base md:text-xl">Learn how Elastic Endpoint Security and Elastic SIEM can be used to hunt for and detect malicious persistence techniques at scale.</p><div class="flex items-center mt-4 text-zinc-200 text-sm space-x-4 border-t border-white/25 pt-4"><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><span>13 min read</span></span><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z"></path></svg><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/adversary">Adversary</a></span></span></div></div><div class="max-w-7xl mx-auto"><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 sm:p-8 md:p-10 rounded-3xl mt-5 md:mt-10"><div class="relative w-full rounded-lg overflow-hidden aspect-video"><img alt="Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1)" fetchpriority="high" decoding="async" data-nimg="fill" class="object-cover absolute h-full w-full" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;color:transparent" sizes="100vw" srcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=3840&amp;q=75 3840w" src="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fhunting-for-persistence-using-elastic-security-part-1%2Fblog-thumb-security-breach-red-lock.jpg&amp;w=3840&amp;q=75"/><div class="absolute border border-white/50 inset-0 mix-blend-overlay rounded-lg z-10"></div></div></div></div><div class="lg:max-w-7xl mx-auto relative mt-12 lg:grid lg:grid-cols-4 lg:gap-8 items-start"><div class="flex justify-center lg:col-span-3"><div class="prose lg:prose-lg prose-invert w-full article-content"><div><p>Last month, we hosted a webinar, <a href="https://www.elastic.co/webinars/hunting-for-persistence-using-elastic-security">Hunting for persistence using Elastic Security</a>, where we examined some techniques that attackers use in the wild to maintain presence in their victim’s environment. For each technique covered, we explained:</p>
<ul>
<li>How the offensive technique works</li>
<li>Why the technique is often successful for attackers</li>
<li>How defenders can hunt for and detect the malicious behavior effectively using <a href="https://www.elastic.co/security">Elastic Security</a></li>
</ul>
<p>In this two-part blog series, we’ll share the details of what was covered during our webinar with the goal of helping security practitioners improve their visibility of these offensive persistence techniques and help to undermine the efficacy of these attacks against their organization.</p>
<p>Part 1 will explain what persistence is and why attackers need it. We’ll introduce the Event Query Language (EQL) before showing its practical use cases for threat hunting. We will examine a popular technique used by adversaries to maintain persistence, Windows Management Instrumentation (WMI) Event Subscription (<a href="https://attack.mitre.org/techniques/T1084/">T1084</a>). We’ll also share how Elastic Security users can hunt for and detect this technique being used in their environment.</p>
<p>In part 2, we’ll explore two additional persistence techniques that are being used by attackers in the wild: BITS Jobs (<a href="https://attack.mitre.org/techniques/T1197/">T1197</a>) and Scheduled Tasks (<a href="https://attack.mitre.org/techniques/T1053/">T1053</a>). This follow-up post will walk through real world examples of these techniques being used and how we can hunt for, detect, and prevent them using Elastic Security.</p>
<p>The Protections team at Elastic Security is responsible for researching, understanding, and developing detections and preventions for attacker behavior in order to stop attacks before damage or loss occur. For organizations that do not have a full-time security operations team, Elastic Security includes out-of-the-box protections against adversary tradecraft, malware, and attacks like ransomware and phishing.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="what-is-persistence-and-why-do-attackers-need-it" class="absolute -top-32"></span>What is persistence and why do attackers need it?</h2>
<p>When we consider the common components of an intrusion, such as those depicted in Figure 1, the attacker may have spent a considerable amount of effort carrying out reconnaissance, obtaining initial access to, and establishing a foothold in their target environment. Generally speaking, an adversary will often want to maintain a presence in order to survive disruptions to their access like system restarts or user password changes. An effective persistence mechanism will execute the attacker’s malicious code on a regular basis or when a specific condition is met such as a user logon or application launch event.</p>
<p>In many cases, gaining access to an organization’s network is harder than maintaining persistence. It is for this reason that attackers continue to use the persistence techniques covered in this post — with largely successful results. When the security industry refers to “dwell time,” that&#x27;s the period of time that begins when an adversary gains access to a system and ends when you detect them. Persistence facilitates longer dwell times, during which the adversary can work to achieve their objectives.</p>
<p></p>
<p>There are currently <a href="https://attack.mitre.org/tactics/TA0003/">63 persistence techniques</a> documented in the <a href="https://attack.mitre.org/">MITRE ATT&amp;CK®</a> knowledge base of adversary behavior. This number can seem daunting at first, but an adversary’s need for persistence can be their Achilles’ heel, providing defenders with valuable opportunities to detect and remove an attacker from their environment.</p>
<p>By learning these offensive tactics, techniques, and procedures (TTPs) and baselining the endpoints and network activity in your environment, you have an opportunity to detect attackers early on in an intrusion before any damage or loss occurs. Security operations teams work tirelessly to detect the techniques captured in the ATT&amp;CK matrix — hunting and writing alert logic to provide the greatest visibility and coverage of their enterprise. To help reduce the barrier to entry and enable those teams, we created EQL and released it to the community.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="what-is-event-query-language-eql" class="absolute -top-32"></span>What is Event Query Language (EQL)?</h2>
<p>The queries in this blog post, which can be used for threat hunting and detection, are written in EQL — a powerful and intuitive query language that makes it easy for practitioners to search for complex adversary behavior.</p>
<p>To learn more about EQL, you can read the <a href="https://www.elastic.co/blog/getting-started-eql">Getting started with EQL</a> blog post or review the <a href="https://eqllib.readthedocs.io/en/latest/analytics.html">EQL Analytics Library</a>, which contains 200+ free security analytics mapped to the techniques documented in the MITRE ATT&amp;CK matrix. EQL is a core component of Elastic Endpoint Security and <a href="https://github.com/elastic/elasticsearch/issues/49581">is being added to Elasticsearch</a> for use in Elastic SIEM.</p>
<p>Let’s now analyze the WMI Event Subscription technique used by attackers in the wild by demonstrating a variety of methods to hunt for and detect this technique. We decided to cover this technique given its popularity among attackers and the low detection rates by traditional security controls.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="persistence-via-windows-management-instrumentation-wmi-event-subscriptions-t1084" class="absolute -top-32"></span>Persistence via Windows Management Instrumentation (WMI) Event Subscriptions (T1084)</h2>
<p><a href="https://docs.microsoft.com/en-us/windows/win32/wmisdk/about-wmi">WMI</a> is the Microsoft implementation of Web-Based Enterprise Management (WBEM), a collection of technologies used to manage information and systems in enterprise environments. WMI is a built-in feature of Windows endpoints that allows both administrators and attackers to interact and manage many different functions of the operating system. Components such as network interfaces, power settings, service status, and installed software or patches can all be queried and managed via WMI.</p>
<p>Attackers have been abusing WMI since as early as 2008 to accomplish different objectives such as moving laterally between endpoints, enumerating what processes are running on an endpoint, and to maintain persistence. An attacker can “live off the land” by abusing built-in features of the operating system, which often results in a lower risk of detection than if they introduced malware into a victim environment.</p>
<p>It&#x27;s no secret that adversaries prefer WMI-based persistence because:</p>
<ul>
<li>Many organizations are incapable of monitoring or investigating WMI</li>
<li>Out-of-the-box WMI visibility is limited, and a third-party utility may be required to effectively convey how WMI is being used</li>
<li>WMI is an integral component of Windows, and the volume of weak signals from this data source can overwhelm analysts who aren&#x27;t familiar with these attack types</li>
</ul>
<p>Like most offensive techniques, until organizations can reliably detect WMI abuse, the adversary is unlikely to change their behavior.</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="understanding-wmi-event-subscriptions-and-how-they-can-be-abused" class="absolute -top-32"></span>Understanding WMI Event Subscriptions and how they can be abused</h3>
<p>Simply put, a WMI Event Subscription can trigger an action when a certain condition is met. A WMI Event Subscription consists of three components.</p>
<ul>
<li>EventFilter - specifies a condition that you test for, i.e. a user successfully authenticates, a particular time and day of the week occurs, etc.</li>
<li>EventConsumer - specifies an action to execute when the EventFilter condition is met, i.e. execute a Windows command or script, delete all Volume Shadow Copies, restart a service, etc.</li>
<li>FilterToConsumerBinding - this links an EventFilter to an EventConsumer instance</li>
</ul>
<p>Figure 2 below shows the output from Sysinternals Autoruns, a free tool from Microsoft that can be used to examine various persistence locations on Windows endpoints, also referred to as Autostart Execution Points (ASEPs). Autoruns reveals a persistent WMI Event Subscription, named checkforupdates. It is important to note that there are sometimes benign WMI Event Subscriptions configured, but there shouldn’t be many. Alerting on the creation of new WMI Event Subscriptions and hunting for new ones periodically can be a low cost, high reward exercise.</p>
<p></p>
<p>The full WMI Query Language (WQL) query from the Autoruns results is shown below. Autoruns conveniently enumerated the WMI __EventFilter class for us in the root\Subscription namespace where this malicious entry was created. Interpreting this WQL query, the EventFilter condition will be met when the system’s uptime is between 240 -325 seconds. The EventConsumer is an <a href="https://github.com/EmpireProject/Empire">Empire</a> PowerShell script and will execute when this EventFilter condition is met.</p>
<p>To summarize, a WMI Event Subscription has been configured to execute a malicious PowerShell script shortly after the endpoint boots up. This enables the attacker to maintain persistence in the victim’s environment and survive system restarts.</p>
<pre><code>SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA &#x27;Win32_PerfFormattedData_PerfOS_System&#x27; AND
TargetInstance.SystemUpTime &gt;= 240 AND
TargetInstance.SystemUpTime &lt; 325</code></pre>
<p><em>Figure 3 - WMI Query Language (WQL) query showing WMI EventFilter condition</em></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="hunting-for-and-detecting-malicious-wmi-event-subscriptions" class="absolute -top-32"></span>Hunting for and detecting malicious WMI Event Subscriptions</h3>
<p>The EQL query in Figure 4 shows how we can search for a sequence of three WMI events, which were generated by the same unique process ID (PID). This query demonstrates one of the strengths of EQL by using the join function. This allows us to match sequences of events in any order. Searching for these three WMI events without binding them together by unique PID might not return meaningful results. This query matches when a WMI EventFilter, EventConsumer, and FilterToConsumer binding are created by the same process in succession, which typically occurs when malware is executed and creates a new WMI Event Subscription for persistence. This query can be used to monitor for and detect abuse of WMI.</p>
<pre><code>join by unique_pid
  [wmi where properties.Operation == &quot;*IWbemServices::PutInstance*EventFilter*&quot;]
  [wmi where properties.Operation == &quot;*IWbemServices::PutInstance*EventConsumer*&quot;]
  [wmi where properties.Operation == &quot;*IWbemServices::PutInstance*FilterToConsumerBinding*&quot;]</code></pre>
<p><em>Figure 4 - EQL query to search for the creation of a WMI EventFilter, EventConsumer, and FilterToConsumerBinding in succession</em></p>
<p>The above EQL query can be saved as a custom rule in Elastic Endpoint Security so that analysts can be alerted every time a new WMI Event Subscription is created by a process (Figure 5).</p>
<p></p>
<p>Resolver is the primary interface for interacting with alerts in Elastic Endpoint Security and enables users to visualize process ancestry along with relevant events such as DNS, file, network, WMI, and PowerShell, to name a few. It also provides one-click response actions to resolve the alert.</p>
<p></p>
<p>Clicking the WMI event type next to powershell.exe in Resolver enables users to review the WMI events that were generated by the process. Figure 7 shows the WMI event that was logged when powershell.exe was used to create the new WMI FilterToConsumerBinding, checkforupdates.</p>
<p></p>
<p>Elastic Endpoint Security also includes template-based hunts that lower the barriers to entry for less experienced analysts and allows for the easy collection and analysis of data across an organization’s endpoints. There are currently 25 categories of persistence data that can be collected and analyzed using template-based hunts.</p>
<p></p>
<p>Once a hunt has been executed, there are several ways to sort or aggregate the data — such as by frequency or file path. This helps analysts to quickly baseline their endpoints and identify anomalies to investigate further.</p>
<p>Figure 9 depicts the filtered results of a persistence hunt wherein the same malicious WMI Event Subscription was configured. Elastic Security enumerates persistence locations across your endpoints and enables users to apply filters to identify anomalies or suspicious artifacts for further analysis. Hunt teams will often assume that traditional passive and reactive security controls are fallible, and will proactively hunt for malicious persistence mechanisms in search for attackers operating in their environment.</p>
<p></p>
<p>Elastic Security comes with out-of-the-box detections for WMI abuse. Figure 10 shows the signal that was generated by Elastic Endpoint and shipped to Elastic SIEM when a malicious WMI Event Subscription was created.</p>
<p></p>
<p>Users have the option to view a signal in the Timeline within Elastic SIEM. Timeline enables analysts to search for similar activity across their data, gather and document evidence, and forward potential incidents to ticketing and SOAR platforms with ease. Part 2 of this series will show the workflow and features of Timeline.</p>
<p></p>
<p>As of version 7.6 of the Elastic Stack, the SIEM app comes with a detection engine, which enables security teams to create their own custom rules. For example, Windows 10 logs Event ID 5861 when a new WMI EventFilterToConsumer binding is created. Figure 12 shows how a custom rule can be created in Elastic SIEM to search the winlogbeat-* index pattern for winlog.record_id: 5861. We can configure a description, severity, and risk score for the new rule, as well as map the rule to the relevant techniques in the MITRE ATT&amp;CK matrix. This information will help an analyst triage and determine the steps to take when the rule condition occurs.</p>
<p></p>
<p>Elastic SIEM is part of the Basic subscription and currently includes 92 detections that utilize Windows, Linux, network, and APM logging. We will continue to add new rules in new releases of the Elastic Stack.</p>
<p></p>
<p>In this section, we learned how WMI Event Subscriptions can be abused for persistence and how we can hunt for and detect this technique using the combination of Elastic Endpoint and SIEM. It’s important to note that we have only scratched the surface of how WMI works and the many ways that it can be used by attackers.</p>
<p>WMI can be used during every phase of an attack, such as moving laterally between endpoints, conducting local and enterprise reconnaissance, and stealing data. Elastic Security has released detections for many techniques that leverage WMI.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="conclusion" class="absolute -top-32"></span>Conclusion</h2>
<p>In this blog post, we examined a popular technique that attackers use to maintain a presence in their target environments. The number of techniques in an attacker’s arsenal can seem daunting at first, but we demonstrated a formulaic approach to examining, hunting for, and detecting techniques effectively. By building comprehension around adversary tradecraft, you can identify interesting patterns, behaviors, and artifacts that you can use to your advantage.</p>
<p>Elastic Security makes hunting for persistence easy. The features of Elastic Endpoint Security and SIEM (along with the protections provided out of the box) lower the barriers to entry for analysts, provide detailed visibility into endpoint activity, and enable organizations to prevent, detect, and respond to malicious behavior at scale.</p>
<p>To learn more about threat hunting, download a free copy of <a href="https://ela.st/threat-hunting">The Elastic Guide to Threat Hunting</a>.</p>
<p>Plus, <a href="https://github.com/elastic/elasticsearch/issues/49581">EQL support is being added to Elasticsearch</a>!</p></div></div></div><div class="hidden lg:flex lg:col-span-1 text-sm lg:flex-col lg:space-y-6"><div class="toc"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Jump to section</h4><ul class="flex flex-col space-y-2"><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/hunting-for-persistence-using-elastic-security-part-1#what-is-persistence-and-why-do-attackers-need-it"><span>What is persistence and why do attackers need&nbsp;it?</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/hunting-for-persistence-using-elastic-security-part-1#what-is-event-query-language-eql"><span>What is Event Query Language&nbsp;(EQL)?</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/hunting-for-persistence-using-elastic-security-part-1#persistence-via-windows-management-instrumentation-wmi-event-subscriptions-t1084"><span>Persistence via Windows Management Instrumentation (WMI) Event Subscriptions&nbsp;(T1084)</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/hunting-for-persistence-using-elastic-security-part-1#understanding-wmi-event-subscriptions-and-how-they-can-be-abused"><span>Understanding WMI Event Subscriptions and how they can be&nbsp;abused</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/hunting-for-persistence-using-elastic-security-part-1#hunting-for-and-detecting-malicious-wmi-event-subscriptions"><span>Hunting for and detecting malicious WMI Event&nbsp;Subscriptions</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/hunting-for-persistence-using-elastic-security-part-1#conclusion"><span>Conclusion</span></a></li></ul></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Elastic Security Labs Newsletter</h4><div><a target="_blank" class="button inline-flex" href="https://www.elastic.co/security-labs/newsletter?utm_source=security-labs">Sign Up</a></div></div></div></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl my-5 md:my-10 max-w-3xl mx-auto flex flex-col items-center shadow-2xl"><h4 class="font-bold leading-tight text-lg md:text-2xl">Share this article</h4><div class="flex flex-wrap items-center justify-center mt-4 space-x-4"><a class="flex items-center space-x-2 button" href="https://twitter.com/intent/tweet?text=Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1)&amp;url=https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Twitter" title="Share this article on Twitter"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>Twitter</span></a><a class="flex items-center space-x-2 button" href="https://www.facebook.com/sharer/sharer.php?u=https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Facebook" title="Share this article on Facebook"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M22.5 12c0-5.799-4.701-10.5-10.5-10.5S1.5 6.201 1.5 12c0 5.301 3.901 9.699 9 10.401V14.4h-2.7v-2.7h2.7v-2.1c0-2.7 1.8-4.2 4.2-4.2 1.2 0 2.1.1 2.4.2v2.4h-1.5c-1.2 0-1.5.6-1.5 1.5v1.8h3l-.3 2.7h-2.7V22C18.599 21.3 22.5 17.301 22.5 12z"></path></svg><span>Facebook</span></a><a class="flex items-center space-x-2 button" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1&amp;title=Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1)" target="_blank" rel="noopener noreferrer" aria-label="Share this article on LinkedIn" title="Share this article on LinkedIn"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"></path></svg><span>LinkedIn</span></a><a class="flex items-center space-x-2 button" href="https://reddit.com/submit?url=https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1&amp;title=Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1)" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Reddit" title="Share this article on Reddit"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill-rule="evenodd" clip-rule="evenodd" d="M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM19.6879 11.0584C19.8819 11.3352 19.9916 11.6622 20.004 12C20.0091 12.3306 19.9205 12.656 19.7485 12.9384C19.5765 13.2208 19.3281 13.4488 19.032 13.596C19.0455 13.7717 19.0455 13.9483 19.032 14.124C19.032 16.812 15.9 18.996 12.036 18.996C8.172 18.996 5.04 16.812 5.04 14.124C5.02649 13.9483 5.02649 13.7717 5.04 13.596C4.80919 13.49 4.6042 13.335 4.43923 13.1419C4.27427 12.9487 4.15327 12.722 4.08462 12.4775C4.01598 12.2329 4.00133 11.9764 4.04169 11.7256C4.08205 11.4748 4.17646 11.2358 4.31837 11.0251C4.46028 10.8145 4.6463 10.6372 4.86354 10.5056C5.08078 10.3739 5.32404 10.2911 5.57646 10.2629C5.82889 10.2346 6.08444 10.2616 6.32541 10.3419C6.56638 10.4222 6.78701 10.5539 6.972 10.728C8.35473 9.79023 9.98146 9.27718 11.652 9.252L12.54 5.088C12.55 5.03979 12.5694 4.99405 12.5972 4.95341C12.625 4.91277 12.6605 4.87805 12.7018 4.85127C12.7431 4.82448 12.7894 4.80615 12.8378 4.79735C12.8862 4.78855 12.9359 4.78945 12.984 4.8L15.924 5.388C16.0676 5.14132 16.2944 4.9539 16.5637 4.85937C16.833 4.76484 17.1272 4.7694 17.3934 4.87222C17.6597 4.97505 17.8806 5.1694 18.0164 5.42041C18.1523 5.67141 18.1942 5.96262 18.1348 6.24177C18.0753 6.52092 17.9182 6.76972 17.6918 6.94352C17.4654 7.11732 17.1845 7.20473 16.8995 7.19006C16.6144 7.1754 16.3439 7.05962 16.1366 6.8635C15.9292 6.66738 15.7985 6.40378 15.768 6.12L13.2 5.58L12.42 9.324C14.0702 9.3594 15.6749 9.87206 17.04 10.8C17.2839 10.566 17.5902 10.4074 17.9221 10.3436C18.254 10.2797 18.5973 10.3132 18.9106 10.4401C19.2239 10.5669 19.4939 10.7817 19.6879 11.0584ZM8.20624 12.5333C8.07438 12.7307 8.004 12.9627 8.004 13.2C8.004 13.5183 8.13043 13.8235 8.35547 14.0485C8.58051 14.2736 8.88574 14.4 9.204 14.4C9.44134 14.4 9.67335 14.3296 9.87068 14.1978C10.068 14.0659 10.2218 13.8785 10.3127 13.6592C10.4035 13.4399 10.4272 13.1987 10.3809 12.9659C10.3346 12.7331 10.2204 12.5193 10.0525 12.3515C9.8847 12.1836 9.67089 12.0694 9.43811 12.0231C9.20533 11.9768 8.96405 12.0005 8.74478 12.0913C8.52551 12.1822 8.33809 12.336 8.20624 12.5333ZM12.012 17.424C13.0771 17.4681 14.1246 17.1416 14.976 16.5V16.548C15.0075 16.5173 15.0327 16.4806 15.05 16.4402C15.0674 16.3997 15.0766 16.3563 15.0772 16.3122C15.0777 16.2682 15.0696 16.2245 15.0533 16.1837C15.0369 16.1428 15.0127 16.1055 14.982 16.074C14.9513 16.0425 14.9146 16.0173 14.8742 16C14.8337 15.9826 14.7903 15.9734 14.7462 15.9728C14.7022 15.9723 14.6585 15.9804 14.6177 15.9967C14.5768 16.0131 14.5395 16.0373 14.508 16.068C13.7797 16.5904 12.895 16.8487 12 16.8C11.1061 16.8399 10.2255 16.5732 9.504 16.044C9.44182 15.993 9.36289 15.9669 9.28256 15.9708C9.20222 15.9748 9.12622 16.0085 9.06935 16.0653C9.01247 16.1222 8.97879 16.1982 8.97484 16.2786C8.97089 16.3589 8.99697 16.4378 9.048 16.5C9.89937 17.1416 10.9469 17.4681 12.012 17.424ZM14.0933 14.2458C14.2907 14.3776 14.5227 14.448 14.76 14.448L14.748 14.496C14.9107 14.4978 15.0721 14.4664 15.2223 14.4038C15.3725 14.3413 15.5084 14.2488 15.6218 14.1321C15.7352 14.0154 15.8236 13.8768 15.8818 13.7248C15.9399 13.5728 15.9665 13.4106 15.96 13.248C15.96 13.0107 15.8896 12.7787 15.7578 12.5813C15.6259 12.384 15.4385 12.2302 15.2192 12.1393C14.9999 12.0485 14.7587 12.0248 14.5259 12.0711C14.2931 12.1174 14.0793 12.2316 13.9115 12.3995C13.7436 12.5673 13.6294 12.7811 13.5831 13.0139C13.5368 13.2467 13.5605 13.4879 13.6513 13.7072C13.7422 13.9265 13.896 14.1139 14.0933 14.2458Z" fill="currentColor"></path></svg><span>Reddit</span></a></div></div></article></main><footer class="mt-auto text-xs md:text-sm"><div class="container py-6 flex flex-col md:flex-row gap-2 md:gap-0 justify-between items-center"><div class="text-zinc-300"><nav><ul class="flex space-x-4"><li><a class="hover:text-white font-medium" href="/security-labs/sitemap.xml">Sitemap</a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://elastic.co?utm_source=elastic-search-labs&amp;utm_medium=referral&amp;utm_campaign=search-labs&amp;utm_content=footer"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="inline-block w-3 h-3"><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"></path></svg><span>Elastic.co</span></a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://twitter.com/elasticseclabs"><svg class="w-4 h-4 inline-block w-3 h-3" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>@elasticseclabs</span></a></li></ul></nav></div><div class="flex flex-col space-y-1 text-zinc-300"><p>© <!-- -->2024<!-- -->. Elasticsearch B.V. All Rights Reserved.</p></div></div></footer></main></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"article":{"title":"Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1)","slug":"hunting-for-persistence-using-elastic-security-part-1","date":"2022-06-01","description":"Learn how Elastic Endpoint Security and Elastic SIEM can be used to hunt for and detect malicious persistence techniques at scale.","image":"blog-thumb-security-breach-red-lock.jpg","body":{"raw":"\nLast month, we hosted a webinar, [Hunting for persistence using Elastic Security](https://www.elastic.co/webinars/hunting-for-persistence-using-elastic-security), where we examined some techniques that attackers use in the wild to maintain presence in their victim’s environment. For each technique covered, we explained:\n\n- How the offensive technique works\n- Why the technique is often successful for attackers\n- How defenders can hunt for and detect the malicious behavior effectively using [Elastic Security](https://www.elastic.co/security)\n\nIn this two-part blog series, we’ll share the details of what was covered during our webinar with the goal of helping security practitioners improve their visibility of these offensive persistence techniques and help to undermine the efficacy of these attacks against their organization.\n\nPart 1 will explain what persistence is and why attackers need it. We’ll introduce the Event Query Language (EQL) before showing its practical use cases for threat hunting. We will examine a popular technique used by adversaries to maintain persistence, Windows Management Instrumentation (WMI) Event Subscription ([T1084](https://attack.mitre.org/techniques/T1084/)). We’ll also share how Elastic Security users can hunt for and detect this technique being used in their environment.\n\nIn part 2, we’ll explore two additional persistence techniques that are being used by attackers in the wild: BITS Jobs ([T1197](https://attack.mitre.org/techniques/T1197/)) and Scheduled Tasks ([T1053](https://attack.mitre.org/techniques/T1053/)). This follow-up post will walk through real world examples of these techniques being used and how we can hunt for, detect, and prevent them using Elastic Security.\n\nThe Protections team at Elastic Security is responsible for researching, understanding, and developing detections and preventions for attacker behavior in order to stop attacks before damage or loss occur. For organizations that do not have a full-time security operations team, Elastic Security includes out-of-the-box protections against adversary tradecraft, malware, and attacks like ransomware and phishing.\n\n## What is persistence and why do attackers need it?\n\nWhen we consider the common components of an intrusion, such as those depicted in Figure 1, the attacker may have spent a considerable amount of effort carrying out reconnaissance, obtaining initial access to, and establishing a foothold in their target environment. Generally speaking, an adversary will often want to maintain a presence in order to survive disruptions to their access like system restarts or user password changes. An effective persistence mechanism will execute the attacker’s malicious code on a regular basis or when a specific condition is met such as a user logon or application launch event.\n\nIn many cases, gaining access to an organization’s network is harder than maintaining persistence. It is for this reason that attackers continue to use the persistence techniques covered in this post — with largely successful results. When the security industry refers to “dwell time,” that's the period of time that begins when an adversary gains access to a system and ends when you detect them. Persistence facilitates longer dwell times, during which the adversary can work to achieve their objectives.\n\n![Figure 1 - FireEye Mandiant’s Cyber Attack Lifecycle](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image1.jpg)\n\nThere are currently [63 persistence techniques](https://attack.mitre.org/tactics/TA0003/) documented in the [MITRE ATT\u0026CK®](https://attack.mitre.org/) knowledge base of adversary behavior. This number can seem daunting at first, but an adversary’s need for persistence can be their Achilles’ heel, providing defenders with valuable opportunities to detect and remove an attacker from their environment.\n\nBy learning these offensive tactics, techniques, and procedures (TTPs) and baselining the endpoints and network activity in your environment, you have an opportunity to detect attackers early on in an intrusion before any damage or loss occurs. Security operations teams work tirelessly to detect the techniques captured in the ATT\u0026CK matrix — hunting and writing alert logic to provide the greatest visibility and coverage of their enterprise. To help reduce the barrier to entry and enable those teams, we created EQL and released it to the community.\n\n## What is Event Query Language (EQL)?\n\nThe queries in this blog post, which can be used for threat hunting and detection, are written in EQL — a powerful and intuitive query language that makes it easy for practitioners to search for complex adversary behavior.\n\nTo learn more about EQL, you can read the [Getting started with EQL](https://www.elastic.co/blog/getting-started-eql) blog post or review the [EQL Analytics Library](https://eqllib.readthedocs.io/en/latest/analytics.html), which contains 200+ free security analytics mapped to the techniques documented in the MITRE ATT\u0026CK matrix. EQL is a core component of Elastic Endpoint Security and [is being added to Elasticsearch](https://github.com/elastic/elasticsearch/issues/49581) for use in Elastic SIEM.\n\nLet’s now analyze the WMI Event Subscription technique used by attackers in the wild by demonstrating a variety of methods to hunt for and detect this technique. We decided to cover this technique given its popularity among attackers and the low detection rates by traditional security controls.\n\n## Persistence via Windows Management Instrumentation (WMI) Event Subscriptions (T1084)\n\n[WMI](https://docs.microsoft.com/en-us/windows/win32/wmisdk/about-wmi) is the Microsoft implementation of Web-Based Enterprise Management (WBEM), a collection of technologies used to manage information and systems in enterprise environments. WMI is a built-in feature of Windows endpoints that allows both administrators and attackers to interact and manage many different functions of the operating system. Components such as network interfaces, power settings, service status, and installed software or patches can all be queried and managed via WMI.\n\nAttackers have been abusing WMI since as early as 2008 to accomplish different objectives such as moving laterally between endpoints, enumerating what processes are running on an endpoint, and to maintain persistence. An attacker can “live off the land” by abusing built-in features of the operating system, which often results in a lower risk of detection than if they introduced malware into a victim environment.\n\nIt's no secret that adversaries prefer WMI-based persistence because:\n\n- Many organizations are incapable of monitoring or investigating WMI\n- Out-of-the-box WMI visibility is limited, and a third-party utility may be required to effectively convey how WMI is being used\n- WMI is an integral component of Windows, and the volume of weak signals from this data source can overwhelm analysts who aren't familiar with these attack types\n\nLike most offensive techniques, until organizations can reliably detect WMI abuse, the adversary is unlikely to change their behavior.\n\n### Understanding WMI Event Subscriptions and how they can be abused\n\nSimply put, a WMI Event Subscription can trigger an action when a certain condition is met. A WMI Event Subscription consists of three components.\n\n- EventFilter - specifies a condition that you test for, i.e. a user successfully authenticates, a particular time and day of the week occurs, etc.\n- EventConsumer - specifies an action to execute when the EventFilter condition is met, i.e. execute a Windows command or script, delete all Volume Shadow Copies, restart a service, etc.\n- FilterToConsumerBinding - this links an EventFilter to an EventConsumer instance\n\nFigure 2 below shows the output from Sysinternals Autoruns, a free tool from Microsoft that can be used to examine various persistence locations on Windows endpoints, also referred to as Autostart Execution Points (ASEPs). Autoruns reveals a persistent WMI Event Subscription, named checkforupdates. It is important to note that there are sometimes benign WMI Event Subscriptions configured, but there shouldn’t be many. Alerting on the creation of new WMI Event Subscriptions and hunting for new ones periodically can be a low cost, high reward exercise.\n\n![Figure 2 - Autoruns showing a WMI Event Subscription registered by Empire](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image2.jpg)\n\nThe full WMI Query Language (WQL) query from the Autoruns results is shown below. Autoruns conveniently enumerated the WMI \\_\\_EventFilter class for us in the root\\Subscription namespace where this malicious entry was created. Interpreting this WQL query, the EventFilter condition will be met when the system’s uptime is between 240 -325 seconds. The EventConsumer is an [Empire](https://github.com/EmpireProject/Empire) PowerShell script and will execute when this EventFilter condition is met.\n\nTo summarize, a WMI Event Subscription has been configured to execute a malicious PowerShell script shortly after the endpoint boots up. This enables the attacker to maintain persistence in the victim’s environment and survive system restarts.\n\n```\nSELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND\nTargetInstance.SystemUpTime \u003e= 240 AND\nTargetInstance.SystemUpTime \u003c 325\n```\n\n_Figure 3 - WMI Query Language (WQL) query showing WMI EventFilter condition_\n\n### Hunting for and detecting malicious WMI Event Subscriptions\n\nThe EQL query in Figure 4 shows how we can search for a sequence of three WMI events, which were generated by the same unique process ID (PID). This query demonstrates one of the strengths of EQL by using the join function. This allows us to match sequences of events in any order. Searching for these three WMI events without binding them together by unique PID might not return meaningful results. This query matches when a WMI EventFilter, EventConsumer, and FilterToConsumer binding are created by the same process in succession, which typically occurs when malware is executed and creates a new WMI Event Subscription for persistence. This query can be used to monitor for and detect abuse of WMI.\n\n```\njoin by unique_pid\n  [wmi where properties.Operation == \"*IWbemServices::PutInstance*EventFilter*\"]\n  [wmi where properties.Operation == \"*IWbemServices::PutInstance*EventConsumer*\"]\n  [wmi where properties.Operation == \"*IWbemServices::PutInstance*FilterToConsumerBinding*\"]\n```\n\n_Figure 4 - EQL query to search for the creation of a WMI EventFilter, EventConsumer, and FilterToConsumerBinding in succession_\n\nThe above EQL query can be saved as a custom rule in Elastic Endpoint Security so that analysts can be alerted every time a new WMI Event Subscription is created by a process (Figure 5).\n\n![Figure 5 - Alert created by custom rule in Elastic Endpoint Security](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image3.png)\n\nResolver is the primary interface for interacting with alerts in Elastic Endpoint Security and enables users to visualize process ancestry along with relevant events such as DNS, file, network, WMI, and PowerShell, to name a few. It also provides one-click response actions to resolve the alert.\n\n![Figure 6 - Resolver showing process ancestry and events created by powershell.exe](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image4.jpg)\n\nClicking the WMI event type next to powershell.exe in Resolver enables users to review the WMI events that were generated by the process. Figure 7 shows the WMI event that was logged when powershell.exe was used to create the new WMI FilterToConsumerBinding, checkforupdates.\n\n![Figure 7 - WMI event created by powershell.exe](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image5.jpg)\n\nElastic Endpoint Security also includes template-based hunts that lower the barriers to entry for less experienced analysts and allows for the easy collection and analysis of data across an organization’s endpoints. There are currently 25 categories of persistence data that can be collected and analyzed using template-based hunts.\n\n![Figure 8 - Hunting for persistence using Elastic Endpoint’s template-based hunts](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image6.jpg)\n\nOnce a hunt has been executed, there are several ways to sort or aggregate the data — such as by frequency or file path. This helps analysts to quickly baseline their endpoints and identify anomalies to investigate further.\n\nFigure 9 depicts the filtered results of a persistence hunt wherein the same malicious WMI Event Subscription was configured. Elastic Security enumerates persistence locations across your endpoints and enables users to apply filters to identify anomalies or suspicious artifacts for further analysis. Hunt teams will often assume that traditional passive and reactive security controls are fallible, and will proactively hunt for malicious persistence mechanisms in search for attackers operating in their environment.\n\n![Figure 9 - Results of an Elastic Endpoint hunt showing malicious WMI persistence](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image7.png)\n\nElastic Security comes with out-of-the-box detections for WMI abuse. Figure 10 shows the signal that was generated by Elastic Endpoint and shipped to Elastic SIEM when a malicious WMI Event Subscription was created.\n\n![Figure 10 - Elastic Endpoint signal shown in Elastic SIEM](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image8.png)\n\nUsers have the option to view a signal in the Timeline within Elastic SIEM. Timeline enables analysts to search for similar activity across their data, gather and document evidence, and forward potential incidents to ticketing and SOAR platforms with ease. Part 2 of this series will show the workflow and features of Timeline.\n\n![Figure 11 - Option to view signal in Timeline in Elastic SIEM](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image9.jpg)\n\nAs of version 7.6 of the Elastic Stack, the SIEM app comes with a detection engine, which enables security teams to create their own custom rules. For example, Windows 10 logs Event ID 5861 when a new WMI EventFilterToConsumer binding is created. Figure 12 shows how a custom rule can be created in Elastic SIEM to search the winlogbeat-\\* index pattern for winlog.record_id: 5861. We can configure a description, severity, and risk score for the new rule, as well as map the rule to the relevant techniques in the MITRE ATT\u0026CK matrix. This information will help an analyst triage and determine the steps to take when the rule condition occurs.\n\n![Figure 12 - Example of a new rule being created in Elastic SIEM](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image10.png)\n\nElastic SIEM is part of the Basic subscription and currently includes 92 detections that utilize Windows, Linux, network, and APM logging. We will continue to add new rules in new releases of the Elastic Stack.\n\n![Figure 13 - Detection rules view in Elastic SIEM](/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image11.png)\n\nIn this section, we learned how WMI Event Subscriptions can be abused for persistence and how we can hunt for and detect this technique using the combination of Elastic Endpoint and SIEM. It’s important to note that we have only scratched the surface of how WMI works and the many ways that it can be used by attackers.\n\nWMI can be used during every phase of an attack, such as moving laterally between endpoints, conducting local and enterprise reconnaissance, and stealing data. Elastic Security has released detections for many techniques that leverage WMI.\n\n## Conclusion\n\nIn this blog post, we examined a popular technique that attackers use to maintain a presence in their target environments. The number of techniques in an attacker’s arsenal can seem daunting at first, but we demonstrated a formulaic approach to examining, hunting for, and detecting techniques effectively. By building comprehension around adversary tradecraft, you can identify interesting patterns, behaviors, and artifacts that you can use to your advantage.\n\nElastic Security makes hunting for persistence easy. The features of Elastic Endpoint Security and SIEM (along with the protections provided out of the box) lower the barriers to entry for analysts, provide detailed visibility into endpoint activity, and enable organizations to prevent, detect, and respond to malicious behavior at scale.\n\nTo learn more about threat hunting, download a free copy of [The Elastic Guide to Threat Hunting](https://ela.st/threat-hunting).\n\nPlus, [EQL support is being added to Elasticsearch](https://github.com/elastic/elasticsearch/issues/49581)!\n","code":"var Component=(()=\u003e{var d=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var f=(n,e)=\u003e()=\u003e(e||n((e={exports:{}}).exports,e),e.exports),w=(n,e)=\u003e{for(var i in e)s(n,i,{get:e[i],enumerable:!0})},o=(n,e,i,r)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let a of p(e))!m.call(n,a)\u0026\u0026a!==i\u0026\u0026s(n,a,{get:()=\u003ee[a],enumerable:!(r=u(e,a))||r.enumerable});return n};var y=(n,e,i)=\u003e(i=n!=null?d(g(n)):{},o(e||!n||!n.__esModule?s(i,\"default\",{value:n,enumerable:!0}):i,n)),v=n=\u003eo(s({},\"__esModule\",{value:!0}),n);var h=f((S,c)=\u003e{c.exports=_jsx_runtime});var M={};w(M,{default:()=\u003eI,frontmatter:()=\u003eb});var t=y(h()),b={title:\"Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1)\",slug:\"hunting-for-persistence-using-elastic-security-part-1\",date:\"2022-06-01\",description:\"Learn how Elastic Endpoint Security and Elastic SIEM can be used to hunt for and detect malicious persistence techniques at scale.\",author:[{slug:\"david-french\"},{slug:\"brent-murphy\"},{slug:\"elastic-security-intelligence-analytics-team\"}],image:\"blog-thumb-security-breach-red-lock.jpg\",category:[{slug:\"adversary\"}]};function l(n){let e=Object.assign({p:\"p\",a:\"a\",ul:\"ul\",li:\"li\",h2:\"h2\",img:\"img\",h3:\"h3\",pre:\"pre\",code:\"code\",em:\"em\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"Last month, we hosted a webinar, \",(0,t.jsx)(e.a,{href:\"https://www.elastic.co/webinars/hunting-for-persistence-using-elastic-security\",rel:\"nofollow\",children:\"Hunting for persistence using Elastic Security\"}),\", where we examined some techniques that attackers use in the wild to maintain presence in their victim\\u2019s environment. For each technique covered, we explained:\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"How the offensive technique works\"}),`\n`,(0,t.jsx)(e.li,{children:\"Why the technique is often successful for attackers\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"How defenders can hunt for and detect the malicious behavior effectively using \",(0,t.jsx)(e.a,{href:\"https://www.elastic.co/security\",rel:\"nofollow\",children:\"Elastic Security\"})]}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"In this two-part blog series, we\\u2019ll share the details of what was covered during our webinar with the goal of helping security practitioners improve their visibility of these offensive persistence techniques and help to undermine the efficacy of these attacks against their organization.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Part 1 will explain what persistence is and why attackers need it. We\\u2019ll introduce the Event Query Language (EQL) before showing its practical use cases for threat hunting. We will examine a popular technique used by adversaries to maintain persistence, Windows Management Instrumentation (WMI) Event Subscription (\",(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1084/\",rel:\"nofollow\",children:\"T1084\"}),\"). We\\u2019ll also share how Elastic Security users can hunt for and detect this technique being used in their environment.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"In part 2, we\\u2019ll explore two additional persistence techniques that are being used by attackers in the wild: BITS Jobs (\",(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1197/\",rel:\"nofollow\",children:\"T1197\"}),\") and Scheduled Tasks (\",(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1053/\",rel:\"nofollow\",children:\"T1053\"}),\"). This follow-up post will walk through real world examples of these techniques being used and how we can hunt for, detect, and prevent them using Elastic Security.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"The Protections team at Elastic Security is responsible for researching, understanding, and developing detections and preventions for attacker behavior in order to stop attacks before damage or loss occur. For organizations that do not have a full-time security operations team, Elastic Security includes out-of-the-box protections against adversary tradecraft, malware, and attacks like ransomware and phishing.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"what-is-persistence-and-why-do-attackers-need-it\",children:\"What is persistence and why do attackers need it?\"}),`\n`,(0,t.jsx)(e.p,{children:\"When we consider the common components of an intrusion, such as those depicted in Figure 1, the attacker may have spent a considerable amount of effort carrying out reconnaissance, obtaining initial access to, and establishing a foothold in their target environment. Generally speaking, an adversary will often want to maintain a presence in order to survive disruptions to their access like system restarts or user password changes. An effective persistence mechanism will execute the attacker\\u2019s malicious code on a regular basis or when a specific condition is met such as a user logon or application launch event.\"}),`\n`,(0,t.jsx)(e.p,{children:\"In many cases, gaining access to an organization\\u2019s network is harder than maintaining persistence. It is for this reason that attackers continue to use the persistence techniques covered in this post \\u2014 with largely successful results. When the security industry refers to \\u201Cdwell time,\\u201D that's the period of time that begins when an adversary gains access to a system and ends when you detect them. Persistence facilitates longer dwell times, during which the adversary can work to achieve their objectives.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image1.jpg\",alt:\"Figure 1 - FireEye Mandiant\\u2019s Cyber Attack Lifecycle\",width:\"1380\",height:\"500\"})}),`\n`,(0,t.jsxs)(e.p,{children:[\"There are currently \",(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0003/\",rel:\"nofollow\",children:\"63 persistence techniques\"}),\" documented in the \",(0,t.jsx)(e.a,{href:\"https://attack.mitre.org/\",rel:\"nofollow\",children:\"MITRE ATT\u0026CK\\xAE\"}),\" knowledge base of adversary behavior. This number can seem daunting at first, but an adversary\\u2019s need for persistence can be their Achilles\\u2019 heel, providing defenders with valuable opportunities to detect and remove an attacker from their environment.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"By learning these offensive tactics, techniques, and procedures (TTPs) and baselining the endpoints and network activity in your environment, you have an opportunity to detect attackers early on in an intrusion before any damage or loss occurs. Security operations teams work tirelessly to detect the techniques captured in the ATT\u0026CK matrix \\u2014 hunting and writing alert logic to provide the greatest visibility and coverage of their enterprise. To help reduce the barrier to entry and enable those teams, we created EQL and released it to the community.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"what-is-event-query-language-eql\",children:\"What is Event Query Language (EQL)?\"}),`\n`,(0,t.jsx)(e.p,{children:\"The queries in this blog post, which can be used for threat hunting and detection, are written in EQL \\u2014 a powerful and intuitive query language that makes it easy for practitioners to search for complex adversary behavior.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"To learn more about EQL, you can read the \",(0,t.jsx)(e.a,{href:\"https://www.elastic.co/blog/getting-started-eql\",rel:\"nofollow\",children:\"Getting started with EQL\"}),\" blog post or review the \",(0,t.jsx)(e.a,{href:\"https://eqllib.readthedocs.io/en/latest/analytics.html\",rel:\"nofollow\",children:\"EQL Analytics Library\"}),\", which contains 200+ free security analytics mapped to the techniques documented in the MITRE ATT\u0026CK matrix. EQL is a core component of Elastic Endpoint Security and \",(0,t.jsx)(e.a,{href:\"https://github.com/elastic/elasticsearch/issues/49581\",rel:\"nofollow\",children:\"is being added to Elasticsearch\"}),\" for use in Elastic SIEM.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Let\\u2019s now analyze the WMI Event Subscription technique used by attackers in the wild by demonstrating a variety of methods to hunt for and detect this technique. We decided to cover this technique given its popularity among attackers and the low detection rates by traditional security controls.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"persistence-via-windows-management-instrumentation-wmi-event-subscriptions-t1084\",children:\"Persistence via Windows Management Instrumentation (WMI) Event Subscriptions (T1084)\"}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.a,{href:\"https://docs.microsoft.com/en-us/windows/win32/wmisdk/about-wmi\",rel:\"nofollow\",children:\"WMI\"}),\" is the Microsoft implementation of Web-Based Enterprise Management (WBEM), a collection of technologies used to manage information and systems in enterprise environments. WMI is a built-in feature of Windows endpoints that allows both administrators and attackers to interact and manage many different functions of the operating system. Components such as network interfaces, power settings, service status, and installed software or patches can all be queried and managed via WMI.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Attackers have been abusing WMI since as early as 2008 to accomplish different objectives such as moving laterally between endpoints, enumerating what processes are running on an endpoint, and to maintain persistence. An attacker can \\u201Clive off the land\\u201D by abusing built-in features of the operating system, which often results in a lower risk of detection than if they introduced malware into a victim environment.\"}),`\n`,(0,t.jsx)(e.p,{children:\"It's no secret that adversaries prefer WMI-based persistence because:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Many organizations are incapable of monitoring or investigating WMI\"}),`\n`,(0,t.jsx)(e.li,{children:\"Out-of-the-box WMI visibility is limited, and a third-party utility may be required to effectively convey how WMI is being used\"}),`\n`,(0,t.jsx)(e.li,{children:\"WMI is an integral component of Windows, and the volume of weak signals from this data source can overwhelm analysts who aren't familiar with these attack types\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"Like most offensive techniques, until organizations can reliably detect WMI abuse, the adversary is unlikely to change their behavior.\"}),`\n`,(0,t.jsx)(e.h3,{id:\"understanding-wmi-event-subscriptions-and-how-they-can-be-abused\",children:\"Understanding WMI Event Subscriptions and how they can be abused\"}),`\n`,(0,t.jsx)(e.p,{children:\"Simply put, a WMI Event Subscription can trigger an action when a certain condition is met. A WMI Event Subscription consists of three components.\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"EventFilter - specifies a condition that you test for, i.e. a user successfully authenticates, a particular time and day of the week occurs, etc.\"}),`\n`,(0,t.jsx)(e.li,{children:\"EventConsumer - specifies an action to execute when the EventFilter condition is met, i.e. execute a Windows command or script, delete all Volume Shadow Copies, restart a service, etc.\"}),`\n`,(0,t.jsx)(e.li,{children:\"FilterToConsumerBinding - this links an EventFilter to an EventConsumer instance\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"Figure 2 below shows the output from Sysinternals Autoruns, a free tool from Microsoft that can be used to examine various persistence locations on Windows endpoints, also referred to as Autostart Execution Points (ASEPs). Autoruns reveals a persistent WMI Event Subscription, named checkforupdates. It is important to note that there are sometimes benign WMI Event Subscriptions configured, but there shouldn\\u2019t be many. Alerting on the creation of new WMI Event Subscriptions and hunting for new ones periodically can be a low cost, high reward exercise.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image2.jpg\",alt:\"Figure 2 - Autoruns showing a WMI Event Subscription registered by Empire\",width:\"1195\",height:\"770\"})}),`\n`,(0,t.jsxs)(e.p,{children:[\"The full WMI Query Language (WQL) query from the Autoruns results is shown below. Autoruns conveniently enumerated the WMI __EventFilter class for us in the root\\\\Subscription namespace where this malicious entry was created. Interpreting this WQL query, the EventFilter condition will be met when the system\\u2019s uptime is between 240 -325 seconds. The EventConsumer is an \",(0,t.jsx)(e.a,{href:\"https://github.com/EmpireProject/Empire\",rel:\"nofollow\",children:\"Empire\"}),\" PowerShell script and will execute when this EventFilter condition is met.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"To summarize, a WMI Event Subscription has been configured to execute a malicious PowerShell script shortly after the endpoint boots up. This enables the attacker to maintain persistence in the victim\\u2019s environment and survive system restarts.\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND\nTargetInstance.SystemUpTime \u003e= 240 AND\nTargetInstance.SystemUpTime \u003c 325\n`})}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:\"Figure 3 - WMI Query Language (WQL) query showing WMI EventFilter condition\"})}),`\n`,(0,t.jsx)(e.h3,{id:\"hunting-for-and-detecting-malicious-wmi-event-subscriptions\",children:\"Hunting for and detecting malicious WMI Event Subscriptions\"}),`\n`,(0,t.jsx)(e.p,{children:\"The EQL query in Figure 4 shows how we can search for a sequence of three WMI events, which were generated by the same unique process ID (PID). This query demonstrates one of the strengths of EQL by using the join function. This allows us to match sequences of events in any order. Searching for these three WMI events without binding them together by unique PID might not return meaningful results. This query matches when a WMI EventFilter, EventConsumer, and FilterToConsumer binding are created by the same process in succession, which typically occurs when malware is executed and creates a new WMI Event Subscription for persistence. This query can be used to monitor for and detect abuse of WMI.\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`join by unique_pid\n  [wmi where properties.Operation == \"*IWbemServices::PutInstance*EventFilter*\"]\n  [wmi where properties.Operation == \"*IWbemServices::PutInstance*EventConsumer*\"]\n  [wmi where properties.Operation == \"*IWbemServices::PutInstance*FilterToConsumerBinding*\"]\n`})}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:\"Figure 4 - EQL query to search for the creation of a WMI EventFilter, EventConsumer, and FilterToConsumerBinding in succession\"})}),`\n`,(0,t.jsx)(e.p,{children:\"The above EQL query can be saved as a custom rule in Elastic Endpoint Security so that analysts can be alerted every time a new WMI Event Subscription is created by a process (Figure 5).\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image3.png\",alt:\"Figure 5 - Alert created by custom rule in Elastic Endpoint Security\",width:\"1440\",height:\"176\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Resolver is the primary interface for interacting with alerts in Elastic Endpoint Security and enables users to visualize process ancestry along with relevant events such as DNS, file, network, WMI, and PowerShell, to name a few. It also provides one-click response actions to resolve the alert.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image4.jpg\",alt:\"Figure 6 - Resolver showing process ancestry and events created by powershell.exe\",width:\"1278\",height:\"864\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Clicking the WMI event type next to powershell.exe in Resolver enables users to review the WMI events that were generated by the process. Figure 7 shows the WMI event that was logged when powershell.exe was used to create the new WMI FilterToConsumerBinding, checkforupdates.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image5.jpg\",alt:\"Figure 7 - WMI event created by powershell.exe\",width:\"1440\",height:\"821\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Elastic Endpoint Security also includes template-based hunts that lower the barriers to entry for less experienced analysts and allows for the easy collection and analysis of data across an organization\\u2019s endpoints. There are currently 25 categories of persistence data that can be collected and analyzed using template-based hunts.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image6.jpg\",alt:\"Figure 8 - Hunting for persistence using Elastic Endpoint\\u2019s template-based hunts\",width:\"1198\",height:\"1004\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Once a hunt has been executed, there are several ways to sort or aggregate the data \\u2014 such as by frequency or file path. This helps analysts to quickly baseline their endpoints and identify anomalies to investigate further.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Figure 9 depicts the filtered results of a persistence hunt wherein the same malicious WMI Event Subscription was configured. Elastic Security enumerates persistence locations across your endpoints and enables users to apply filters to identify anomalies or suspicious artifacts for further analysis. Hunt teams will often assume that traditional passive and reactive security controls are fallible, and will proactively hunt for malicious persistence mechanisms in search for attackers operating in their environment.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image7.png\",alt:\"Figure 9 - Results of an Elastic Endpoint hunt showing malicious WMI persistence\",width:\"1440\",height:\"630\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Elastic Security comes with out-of-the-box detections for WMI abuse. Figure 10 shows the signal that was generated by Elastic Endpoint and shipped to Elastic SIEM when a malicious WMI Event Subscription was created.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image8.png\",alt:\"Figure 10 - Elastic Endpoint signal shown in Elastic SIEM\",width:\"1440\",height:\"564\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Users have the option to view a signal in the Timeline within Elastic SIEM. Timeline enables analysts to search for similar activity across their data, gather and document evidence, and forward potential incidents to ticketing and SOAR platforms with ease. Part 2 of this series will show the workflow and features of Timeline.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image9.jpg\",alt:\"Figure 11 - Option to view signal in Timeline in Elastic SIEM\",width:\"403\",height:\"302\"})}),`\n`,(0,t.jsx)(e.p,{children:\"As of version 7.6 of the Elastic Stack, the SIEM app comes with a detection engine, which enables security teams to create their own custom rules. For example, Windows 10 logs Event ID 5861 when a new WMI EventFilterToConsumer binding is created. Figure 12 shows how a custom rule can be created in Elastic SIEM to search the winlogbeat-* index pattern for winlog.record_id: 5861. We can configure a description, severity, and risk score for the new rule, as well as map the rule to the relevant techniques in the MITRE ATT\u0026CK matrix. This information will help an analyst triage and determine the steps to take when the rule condition occurs.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image10.png\",alt:\"Figure 12 - Example of a new rule being created in Elastic SIEM\",width:\"1440\",height:\"993\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Elastic SIEM is part of the Basic subscription and currently includes 92 detections that utilize Windows, Linux, network, and APM logging. We will continue to add new rules in new releases of the Elastic Stack.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/assets/images/hunting-for-persistence-using-elastic-security-part-1/adversary-tradecraft-101-part-1-image11.png\",alt:\"Figure 13 - Detection rules view in Elastic SIEM\",width:\"1440\",height:\"459\"})}),`\n`,(0,t.jsx)(e.p,{children:\"In this section, we learned how WMI Event Subscriptions can be abused for persistence and how we can hunt for and detect this technique using the combination of Elastic Endpoint and SIEM. It\\u2019s important to note that we have only scratched the surface of how WMI works and the many ways that it can be used by attackers.\"}),`\n`,(0,t.jsx)(e.p,{children:\"WMI can be used during every phase of an attack, such as moving laterally between endpoints, conducting local and enterprise reconnaissance, and stealing data. Elastic Security has released detections for many techniques that leverage WMI.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"conclusion\",children:\"Conclusion\"}),`\n`,(0,t.jsx)(e.p,{children:\"In this blog post, we examined a popular technique that attackers use to maintain a presence in their target environments. The number of techniques in an attacker\\u2019s arsenal can seem daunting at first, but we demonstrated a formulaic approach to examining, hunting for, and detecting techniques effectively. By building comprehension around adversary tradecraft, you can identify interesting patterns, behaviors, and artifacts that you can use to your advantage.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Elastic Security makes hunting for persistence easy. The features of Elastic Endpoint Security and SIEM (along with the protections provided out of the box) lower the barriers to entry for analysts, provide detailed visibility into endpoint activity, and enable organizations to prevent, detect, and respond to malicious behavior at scale.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"To learn more about threat hunting, download a free copy of \",(0,t.jsx)(e.a,{href:\"https://ela.st/threat-hunting\",rel:\"nofollow\",children:\"The Elastic Guide to Threat Hunting\"}),\".\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Plus, \",(0,t.jsx)(e.a,{href:\"https://github.com/elastic/elasticsearch/issues/49581\",rel:\"nofollow\",children:\"EQL support is being added to Elasticsearch\"}),\"!\"]})]})}function E(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(l,n)})):l(n)}var I=E;return v(M);})();\n;return Component;"},"_id":"articles/hunting-for-persistence-using-elastic-security-part-1.mdx","_raw":{"sourceFilePath":"articles/hunting-for-persistence-using-elastic-security-part-1.mdx","sourceFileName":"hunting-for-persistence-using-elastic-security-part-1.mdx","sourceFileDir":"articles","contentType":"mdx","flattenedPath":"articles/hunting-for-persistence-using-elastic-security-part-1"},"type":"Article","imageUrl":"/assets/images/hunting-for-persistence-using-elastic-security-part-1/blog-thumb-security-breach-red-lock.jpg","readingTime":"13 min read","series":"","url":"/hunting-for-persistence-using-elastic-security-part-1","headings":[{"level":2,"title":"What is persistence and why do attackers need it?","href":"#what-is-persistence-and-why-do-attackers-need-it"},{"level":2,"title":"What is Event Query Language (EQL)?","href":"#what-is-event-query-language-eql"},{"level":2,"title":"Persistence via Windows Management Instrumentation (WMI) Event Subscriptions (T1084)","href":"#persistence-via-windows-management-instrumentation-wmi-event-subscriptions-t1084"},{"level":3,"title":"Understanding WMI Event Subscriptions and how they can be abused","href":"#understanding-wmi-event-subscriptions-and-how-they-can-be-abused"},{"level":3,"title":"Hunting for and detecting malicious WMI Event Subscriptions","href":"#hunting-for-and-detecting-malicious-wmi-event-subscriptions"},{"level":2,"title":"Conclusion","href":"#conclusion"}],"author":[{"title":"David French","slug":"david-french","description":"Senior Security Research Engineer, Elastic","image":"david-french.jpg","body":{"raw":"","code":"var Component=(()=\u003e{var m=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var j=(e,t)=\u003e()=\u003e(t||e((t={exports:{}}).exports,t),t.exports),l=(e,t)=\u003e{for(var n in t)a(e,n,{get:t[n],enumerable:!0})},o=(e,t,n,c)=\u003e{if(t\u0026\u0026typeof t==\"object\"||typeof t==\"function\")for(let i of g(t))!h.call(e,i)\u0026\u0026i!==n\u0026\u0026a(e,i,{get:()=\u003et[i],enumerable:!(c=f(t,i))||c.enumerable});return e};var p=(e,t,n)=\u003e(n=e!=null?m(x(e)):{},o(t||!e||!e.__esModule?a(n,\"default\",{value:e,enumerable:!0}):n,e)),_=e=\u003eo(a({},\"__esModule\",{value:!0}),e);var d=j((C,s)=\u003e{s.exports=_jsx_runtime});var M={};l(M,{default:()=\u003eF,frontmatter:()=\u003ev});var r=p(d()),v={title:\"David French\",description:\"Senior Security Research Engineer, Elastic\",slug:\"david-french\",image:\"david-french.jpg\"};function u(e){return(0,r.jsx)(r.Fragment,{})}function D(e={}){let{wrapper:t}=e.components||{};return t?(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(u,e)})):u(e)}var F=D;return _(M);})();\n;return Component;"},"_id":"authors/david-french.mdx","_raw":{"sourceFilePath":"authors/david-french.mdx","sourceFileName":"david-french.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/david-french"},"type":"Author","imageUrl":"/assets/images/authors/david-french.jpg","url":"/authors/david-french"},{"title":"Brent Murphy","slug":"brent-murphy","description":"Senior Security Research Engineer, Elastic","image":"brent-murphy.jpg","body":{"raw":"","code":"var Component=(()=\u003e{var p=Object.create;var i=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var j=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),l=(t,e)=\u003e{for(var n in e)i(t,n,{get:e[n],enumerable:!0})},s=(t,e,n,a)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let o of x(e))!h.call(t,o)\u0026\u0026o!==n\u0026\u0026i(t,o,{get:()=\u003ee[o],enumerable:!(a=g(e,o))||a.enumerable});return t};var y=(t,e,n)=\u003e(n=t!=null?p(f(t)):{},s(e||!t||!t.__esModule?i(n,\"default\",{value:t,enumerable:!0}):n,t)),_=t=\u003es(i({},\"__esModule\",{value:!0}),t);var u=j((E,c)=\u003e{c.exports=_jsx_runtime});var C={};l(C,{default:()=\u003eb,frontmatter:()=\u003ed});var r=y(u()),d={title:\"Brent Murphy\",description:\"Senior Security Research Engineer, Elastic\",slug:\"brent-murphy\",image:\"brent-murphy.jpg\"};function m(t){return(0,r.jsx)(r.Fragment,{})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var b=M;return _(C);})();\n;return Component;"},"_id":"authors/brent-murphy.mdx","_raw":{"sourceFilePath":"authors/brent-murphy.mdx","sourceFileName":"brent-murphy.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/brent-murphy"},"type":"Author","imageUrl":"/assets/images/authors/brent-murphy.jpg","url":"/authors/brent-murphy"},{"title":"Elastic Security Intelligence \u0026 Analytics Team","slug":"elastic-security-intelligence-analytics-team","body":{"raw":"","code":"var Component=(()=\u003e{var m=Object.create;var c=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var _=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),j=(t,e)=\u003e{for(var n in e)c(t,n,{get:e[n],enumerable:!0})},s=(t,e,n,i)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let a of g(e))!y.call(t,a)\u0026\u0026a!==n\u0026\u0026c(t,a,{get:()=\u003ee[a],enumerable:!(i=x(e,a))||i.enumerable});return t};var d=(t,e,n)=\u003e(n=t!=null?m(f(t)):{},s(e||!t||!t.__esModule?c(n,\"default\",{value:t,enumerable:!0}):n,t)),p=t=\u003es(c({},\"__esModule\",{value:!0}),t);var l=_((b,o)=\u003e{o.exports=_jsx_runtime});var F={};j(F,{default:()=\u003eD,frontmatter:()=\u003eM});var r=d(l()),M={title:\"Elastic Security Intelligence \u0026 Analytics Team\",slug:\"elastic-security-intelligence-analytics-team\"};function u(t){return(0,r.jsx)(r.Fragment,{})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(u,t)})):u(t)}var D=C;return p(F);})();\n;return Component;"},"_id":"authors/elastic-security-intelligence-analytics-team.mdx","_raw":{"sourceFilePath":"authors/elastic-security-intelligence-analytics-team.mdx","sourceFileName":"elastic-security-intelligence-analytics-team.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/elastic-security-intelligence-analytics-team"},"type":"Author","imageUrl":"","url":"/authors/elastic-security-intelligence-analytics-team"}],"category":[{"title":"Adversary","slug":"adversary","body":{"raw":"","code":"var Component=(()=\u003e{var x=Object.create;var o=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),l=(t,e)=\u003e{for(var n in e)o(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,s)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let a of f(e))!g.call(t,a)\u0026\u0026a!==n\u0026\u0026o(t,a,{get:()=\u003ee[a],enumerable:!(s=d(e,a))||s.enumerable});return t};var p=(t,e,n)=\u003e(n=t!=null?x(_(t)):{},c(e||!t||!t.__esModule?o(n,\"default\",{value:t,enumerable:!0}):n,t)),y=t=\u003ec(o({},\"__esModule\",{value:!0}),t);var i=j((X,u)=\u003e{u.exports=_jsx_runtime});var D={};l(D,{default:()=\u003eC,frontmatter:()=\u003eM});var r=p(i()),M={title:\"Adversary\",slug:\"adversary\"};function m(t){return(0,r.jsx)(r.Fragment,{})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var C=v;return y(D);})();\n;return Component;"},"_id":"categories/adversary.mdx","_raw":{"sourceFilePath":"categories/adversary.mdx","sourceFileName":"adversary.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/adversary"},"type":"Category","url":"/categories/adversary"}]},"seriesArticles":null},"__N_SSG":true},"page":"/[slug]","query":{"slug":"hunting-for-persistence-using-elastic-security-part-1"},"buildId":"dGrrQfBbQkqaleQ_11aBK","assetPrefix":"/security-labs","isFallback":false,"gsp":true,"scriptLoader":[]}</script></body></html>